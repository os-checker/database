{
  "repo": {
    "user": "arceos-hypervisor",
    "repo": "arm_vcpu"
  },
  "data": [
    {
      "user": "arceos-hypervisor",
      "repo": "arm_vcpu",
      "pkg": "arm_vcpu",
      "count": 41,
      "raw_reports": [
        {
          "file": "src/smc.rs",
          "features": "",
          "count": 8,
          "kinds": {
            "Mirai": [
              "error: invalid register `x0`: unknown register\n  --> src/smc.rs:18:13\n   |\n18 |             inout(\"x0\") x0 => r0,\n   |             ^^^^^^^^^^^^^^^^^^^^\n\n",
              "error: invalid register `x1`: unknown register\n  --> src/smc.rs:19:13\n   |\n19 |             inout(\"x1\") x1 => r1,\n   |             ^^^^^^^^^^^^^^^^^^^^\n\n",
              "error: invalid register `x2`: unknown register\n  --> src/smc.rs:20:13\n   |\n20 |             inout(\"x2\") x2 => r2,\n   |             ^^^^^^^^^^^^^^^^^^^^\n\n",
              "error: invalid register `x3`: unknown register\n  --> src/smc.rs:21:13\n   |\n21 |             inout(\"x3\") x3 => r3,\n   |             ^^^^^^^^^^^^^^^^^^^^\n\n"
            ],
            "Clippy(Error)": [
              "error: invalid register `x0`: unknown register\n  --> src/smc.rs:18:13\n   |\n18 |             inout(\"x0\") x0 => r0,\n   |             ^^^^^^^^^^^^^^^^^^^^\n\n",
              "error: invalid register `x1`: unknown register\n  --> src/smc.rs:19:13\n   |\n19 |             inout(\"x1\") x1 => r1,\n   |             ^^^^^^^^^^^^^^^^^^^^\n\n",
              "error: invalid register `x2`: unknown register\n  --> src/smc.rs:20:13\n   |\n20 |             inout(\"x2\") x2 => r2,\n   |             ^^^^^^^^^^^^^^^^^^^^\n\n",
              "error: invalid register `x3`: unknown register\n  --> src/smc.rs:21:13\n   |\n21 |             inout(\"x3\") x3 => r3,\n   |             ^^^^^^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "src/vcpu.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Mirai": [
              "error[E0658]: use of unstable library feature `naked_functions`\n   --> src/vcpu.rs:271:9\n    |\n271 |         core::arch::naked_asm!(\n    |         ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-09; consider upgrading it if it is out of date\n\n",
              "error: `naked` is not an unsafe attribute\n   --> src/vcpu.rs:262:7\n    |\n262 |     #[unsafe(naked)]\n    |       ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n",
              "error[E0425]: cannot find function `hardware_inject_virtual_interrupt` in module `axvisor_api::arch`\n   --> src/vcpu.rs:134:28\n    |\n134 |         axvisor_api::arch::hardware_inject_virtual_interrupt(vector as u8);\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in `axvisor_api::arch`\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axvisor_api-0.1.0/src/lib.rs:256:15\n    |\n256 |     extern fn hardware_inject_virtual_interrupt(vector: InterruptVector);\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: the item is gated behind the `aarch64` feature\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axvisor_api-0.1.0/src/lib.rs:254:11\n    |\n254 |     #[cfg(target_arch = \"aarch64\")]\n    |           ^^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> src/vcpu.rs:262:5\n    |\n262 |     #[unsafe(naked)]\n    |     ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-09; consider upgrading it if it is out of date\n\n",
              "warning[E0133]: use of inline assembly is unsafe and requires unsafe block\n   --> src/vcpu.rs:271:9\n    |\n271 | /         core::arch::naked_asm!(\n272 | |             // Save host context.\n273 | |             save_regs_to_stack!(),\n...   |\n286 | |             run_guest_panic = sym Self::run_guest_panic,\n287 | |         );\n    | |_________^ use of inline assembly\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>\n    = note: inline assembly is entirely unchecked and can cause undefined behavior\nnote: an unsafe function restricts its caller, but its body is safe by default\n   --> src/vcpu.rs:263:5\n    |\n263 |     unsafe extern \"C\" fn run_guest(&mut self) -> usize {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
            ],
            "Clippy(Error)": [
              "error[E0425]: cannot find function `hardware_inject_virtual_interrupt` in module `axvisor_api::arch`\n   --> src/vcpu.rs:134:28\n    |\n134 |         axvisor_api::arch::hardware_inject_virtual_interrupt(vector as u8);\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in `axvisor_api::arch`\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axvisor_api-0.1.0/src/lib.rs:256:15\n    |\n256 |     extern fn hardware_inject_virtual_interrupt(vector: InterruptVector);\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: the item is gated behind the `aarch64` feature\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axvisor_api-0.1.0/src/lib.rs:254:11\n    |\n254 |     #[cfg(target_arch = \"aarch64\")]\n    |           ^^^^^^^^^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "src/exception.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Mirai": [
              "error[E0658]: use of unstable library feature `naked_functions`\n   --> src/exception.rs:344:5\n    |\n344 |     core::arch::naked_asm!(\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-09; consider upgrading it if it is out of date\n\n",
              "error: `naked` is not an unsafe attribute\n   --> src/exception.rs:341:3\n    |\n341 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n",
              "error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> src/exception.rs:341:1\n    |\n341 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-09; consider upgrading it if it is out of date\n\n",
              "warning[E0133]: use of inline assembly is unsafe and requires unsafe block\n   --> src/exception.rs:344:5\n    |\n344 | /     core::arch::naked_asm!(\n345 | |         // Curretly `sp` points to the base address of `Aarch64VCpu.ctx`, which stores guest's `TrapFrame`.\n346 | |         \"add x9, sp, 34 * 8\", // Skip the exception frame.\n...   |\n351 | |         \"ret\", // Control flow is handed back to Aarch64VCpu.run(), simulating the normal return of the `run_guest` function.\n352 | |     )\n    | |_____^ use of inline assembly\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>\n    = note: inline assembly is entirely unchecked and can cause undefined behavior\nnote: an unsafe function restricts its caller, but its body is safe by default\n   --> src/exception.rs:343:1\n    |\n343 | unsafe extern \"C\" fn vmexit_trampoline() -> ! {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: `#[warn(unsafe_op_in_unsafe_fn)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 3,
          "kinds": {
            "Cargo": [
              "// pkg_name=arm_vcpu, checker=Lockbud\n// toolchain=nightly-2025-05-20, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-10-28 4:55:11.967991081 +08:00:00\n   Compiling rustversion v1.0.22\n   Compiling bit_field v0.10.3\n   Compiling x86 v0.52.0\n   Compiling bitflags v1.3.2\n   Compiling raw-cpuid v10.7.0\n   Compiling serde_core v1.0.228\n   Compiling memory_addr v0.4.0\n   Compiling bitflags v2.10.0\n   Compiling volatile v0.4.6\n   Compiling log v0.4.28\n   Compiling axerrno v0.1.0\n[2025-10-27T20:55:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1525:11: 1525:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1528:13: 1528:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-10-27T20:55:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling cfg-if v1.0.4\n   Compiling scopeguard v1.2.0\n   Compiling lock_api v0.4.14\n   Compiling memory_set v0.4.0\n   Compiling lazyinit v0.2.2\n   Compiling winnow v0.7.13\n   Compiling x86_64 v0.15.2\n   Compiling page_table_entry v0.5.5\n   Compiling numeric-enum-macro v0.2.0\n   Compiling toml_parser v1.0.4\n   Compiling page_table_multiarch v0.5.5\n   Compiling axaddrspace v0.1.2\n   Compiling toml_datetime v0.7.3\n   Compiling serde_spanned v1.0.3\n   Compiling serde v1.0.228\n   Compiling toml_writer v1.0.4\n   Compiling percpu v0.2.0\n   Compiling enumerable v1.2.0\n   Compiling toml v0.9.8\n   Compiling spin v0.9.8\n   Compiling axvisor_api v0.1.0\n   Compiling tock-registers v0.9.0\n   Compiling aarch64-cpu v10.0.0\n   Compiling axvcpu v0.1.1\n   Compiling spin v0.10.0\n   Compiling axvmconfig v0.1.0\n   Compiling axdevice_base v0.1.0\n   Compiling arm_vcpu v0.1.1 (/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu)\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> src/exception.rs:344:5\n    |\n344 |     core::arch::naked_asm!(\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> src/vcpu.rs:271:9\n    |\n271 |         core::arch::naked_asm!(\n    |         ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> src/exception.rs:341:3\n    |\n341 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror: `naked` is not an unsafe attribute\n   --> src/vcpu.rs:262:7\n    |\n262 |     #[unsafe(naked)]\n    |       ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0425]: cannot find function `hardware_inject_virtual_interrupt` in module `axvisor_api::arch`\n   --> src/vcpu.rs:134:28\n    |\n134 |         axvisor_api::arch::hardware_inject_virtual_interrupt(vector as u8);\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in `axvisor_api::arch`\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axvisor_api-0.1.0/src/lib.rs:256:15\n    |\n256 |     extern fn hardware_inject_virtual_interrupt(vector: InterruptVector);\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: the item is gated behind the `aarch64` feature\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axvisor_api-0.1.0/src/lib.rs:254:11\n    |\n254 |     #[cfg(target_arch = \"aarch64\")]\n    |           ^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> src/exception.rs:341:1\n    |\n341 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> src/vcpu.rs:262:5\n    |\n262 |     #[unsafe(naked)]\n    |     ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: invalid register `x0`: unknown register\n  --> src/smc.rs:18:13\n   |\n18 |             inout(\"x0\") x0 => r0,\n   |             ^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x1`: unknown register\n  --> src/smc.rs:19:13\n   |\n19 |             inout(\"x1\") x1 => r1,\n   |             ^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x2`: unknown register\n  --> src/smc.rs:20:13\n   |\n20 |             inout(\"x2\") x2 => r2,\n   |             ^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x3`: unknown register\n  --> src/smc.rs:21:13\n   |\n21 |             inout(\"x3\") x3 => r3,\n   |             ^^^^^^^^^^^^^^^^^^^^\n\nwarning[E0133]: use of inline assembly is unsafe and requires unsafe block\n   --> src/exception.rs:344:5\n    |\n344 | /     core::arch::naked_asm!(\n345 | |         // Curretly `sp` points to the base address of `Aarch64VCpu.ctx`, which stores guest's `TrapFrame`.\n346 | |         \"add x9, sp, 34 * 8\", // Skip the exception frame.\n...   |\n351 | |         \"ret\", // Control flow is handed back to Aarch64VCpu.run(), simulating the normal return of the `run_guest` function.\n352 | |     )\n    | |_____^ use of inline assembly\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>\n    = note: inline assembly is entirely unchecked and can cause undefined behavior\nnote: an unsafe function restricts its caller, but its body is safe by default\n   --> src/exception.rs:343:1\n    |\n343 | unsafe extern \"C\" fn vmexit_trampoline() -> ! {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: `#[warn(unsafe_op_in_unsafe_fn)]` on by default\n\nwarning[E0133]: use of inline assembly is unsafe and requires unsafe block\n   --> src/vcpu.rs:271:9\n    |\n271 | /         core::arch::naked_asm!(\n272 | |             // Save host context.\n273 | |             save_regs_to_stack!(),\n...   |\n286 | |             run_guest_panic = sym Self::run_guest_panic,\n287 | |         );\n    | |_________^ use of inline assembly\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>\n    = note: inline assembly is entirely unchecked and can cause undefined behavior\nnote: an unsafe function restricts its caller, but its body is safe by default\n   --> src/vcpu.rs:263:5\n    |\n263 |     unsafe extern \"C\" fn run_guest(&mut self) -> usize {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSome errors have detailed explanations: E0133, E0425, E0658.\nFor more information about an error, try `rustc --explain E0133`.\nwarning: `arm_vcpu` (lib) generated 2 warnings\nerror: could not compile `arm_vcpu` (lib) due to 11 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=arm_vcpu, checker=Lockbud\n// toolchain=nightly-2025-05-20, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-10-28 4:55:07.315675072 +08:00:00\n   Compiling memory_addr v0.4.0\n   Compiling serde_core v1.0.228\n   Compiling log v0.4.28\n   Compiling tock-registers v0.9.0\n   Compiling axerrno v0.1.0\n   Compiling aarch64-cpu v10.0.0\n   Compiling bitflags v2.10.0\n[2025-10-27T20:55:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1525:11: 1525:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1528:13: 1528:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-10-27T20:55:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling cfg-if v1.0.4\n   Compiling memory_set v0.4.0\n   Compiling numeric-enum-macro v0.2.0\n   Compiling winnow v0.7.13\n   Compiling bit_field v0.10.3\n   Compiling lazyinit v0.2.2\n   Compiling serde v1.0.228\n   Compiling toml_writer v1.0.4\n   Compiling percpu v0.2.0\n   Compiling enumerable v1.2.0\n   Compiling scopeguard v1.2.0\n   Compiling lock_api v0.4.14\n   Compiling spin v0.10.0\n   Compiling toml_parser v1.0.4\n   Compiling serde_spanned v1.0.3\n   Compiling toml_datetime v0.7.3\n   Compiling toml v0.9.8\n   Compiling page_table_entry v0.5.5\n   Compiling page_table_multiarch v0.5.5\n   Compiling axaddrspace v0.1.2\n   Compiling axvmconfig v0.1.0\n   Compiling axvisor_api v0.1.0\n   Compiling axvcpu v0.1.1\n   Compiling axdevice_base v0.1.0\n   Compiling arm_vcpu v0.1.1 (/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu)\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> src/exception.rs:344:5\n    |\n344 |     core::arch::naked_asm!(\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> src/vcpu.rs:271:9\n    |\n271 |         core::arch::naked_asm!(\n    |         ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> src/exception.rs:341:3\n    |\n341 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror: `naked` is not an unsafe attribute\n   --> src/vcpu.rs:262:7\n    |\n262 |     #[unsafe(naked)]\n    |       ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> src/exception.rs:341:1\n    |\n341 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> src/vcpu.rs:262:5\n    |\n262 |     #[unsafe(naked)]\n    |     ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nwarning[E0133]: use of inline assembly is unsafe and requires unsafe block\n   --> src/exception.rs:344:5\n    |\n344 | /     core::arch::naked_asm!(\n345 | |         // Curretly `sp` points to the base address of `Aarch64VCpu.ctx`, which stores guest's `TrapFrame`.\n346 | |         \"add x9, sp, 34 * 8\", // Skip the exception frame.\n...   |\n351 | |         \"ret\", // Control flow is handed back to Aarch64VCpu.run(), simulating the normal return of the `run_guest` function.\n352 | |     )\n    | |_____^ use of inline assembly\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>\n    = note: inline assembly is entirely unchecked and can cause undefined behavior\nnote: an unsafe function restricts its caller, but its body is safe by default\n   --> src/exception.rs:343:1\n    |\n343 | unsafe extern \"C\" fn vmexit_trampoline() -> ! {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: `#[warn(unsafe_op_in_unsafe_fn)]` on by default\n\nwarning[E0133]: use of inline assembly is unsafe and requires unsafe block\n   --> src/vcpu.rs:271:9\n    |\n271 | /         core::arch::naked_asm!(\n272 | |             // Save host context.\n273 | |             save_regs_to_stack!(),\n...   |\n286 | |             run_guest_panic = sym Self::run_guest_panic,\n287 | |         );\n    | |_________^ use of inline assembly\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>\n    = note: inline assembly is entirely unchecked and can cause undefined behavior\nnote: an unsafe function restricts its caller, but its body is safe by default\n   --> src/vcpu.rs:263:5\n    |\n263 |     unsafe extern \"C\" fn run_guest(&mut self) -> usize {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSome errors have detailed explanations: E0133, E0658.\nFor more information about an error, try `rustc --explain E0133`.\nwarning: `arm_vcpu` (lib) generated 2 warnings\nerror: could not compile `arm_vcpu` (lib) due to 6 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=arm_vcpu, checker=Lockbud\n// toolchain=nightly-2025-05-20, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-10-28 4:54:56.656884043 +08:00:00\n   Compiling proc-macro2 v1.0.103\n   Compiling unicode-ident v1.0.20\n   Compiling quote v1.0.41\n   Compiling winnow v0.7.13\n   Compiling hashbrown v0.16.0\n   Compiling equivalent v1.0.2\n   Compiling toml_datetime v0.7.3\n   Compiling serde_core v1.0.228\n   Compiling indexmap v2.12.0\n   Compiling tock-registers v0.9.0\n   Compiling syn v2.0.108\n   Compiling memory_addr v0.4.0\n   Compiling log v0.4.28\n[2025-10-27T20:54:58Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1525:11: 1525:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1528:13: 1528:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-10-27T20:54:58Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axerrno v0.1.0\n   Compiling aarch64-cpu v10.0.0\n   Compiling toml_parser v1.0.4\n   Compiling toml_edit v0.23.7\n   Compiling proc-macro-crate v3.4.0\n   Compiling bitflags v2.10.0\n   Compiling page_table_entry v0.5.5\n   Compiling cfg-if v1.0.4\n   Compiling page_table_multiarch v0.5.5\n   Compiling memory_set v0.4.0\n   Compiling serde v1.0.228\n   Compiling bit_field v0.10.3\n   Compiling lazyinit v0.2.2\n   Compiling numeric-enum-macro v0.2.0\n   Compiling axaddrspace v0.1.2\n   Compiling serde_spanned v1.0.3\n   Compiling toml_writer v1.0.4\n   Compiling percpu v0.2.0\n   Compiling scopeguard v1.2.0\n   Compiling lock_api v0.4.14\n   Compiling spin v0.10.0\n   Compiling serde_derive v1.0.228\n   Compiling enumerable_derive v1.2.0\n   Compiling percpu_macros v0.2.0\n   Compiling crate_interface v0.1.4\n   Compiling toml v0.9.8\n   Compiling enumerable v1.2.0\n   Compiling serde_repr v0.1.20\n   Compiling axvisor_api_proc v0.1.0\n   Compiling axvisor_api v0.1.0\n   Compiling axvcpu v0.1.1\n   Compiling axvmconfig v0.1.0\n   Compiling axdevice_base v0.1.0\n   Compiling arm_vcpu v0.1.1 (/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu)\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> src/exception.rs:344:5\n    |\n344 |     core::arch::naked_asm!(\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> src/vcpu.rs:271:9\n    |\n271 |         core::arch::naked_asm!(\n    |         ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> src/exception.rs:341:3\n    |\n341 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror: `naked` is not an unsafe attribute\n   --> src/vcpu.rs:262:7\n    |\n262 |     #[unsafe(naked)]\n    |       ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> src/exception.rs:341:1\n    |\n341 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> src/vcpu.rs:262:5\n    |\n262 |     #[unsafe(naked)]\n    |     ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nwarning[E0133]: use of inline assembly is unsafe and requires unsafe block\n   --> src/exception.rs:344:5\n    |\n344 | /     core::arch::naked_asm!(\n345 | |         // Curretly `sp` points to the base address of `Aarch64VCpu.ctx`, which stores guest's `TrapFrame`.\n346 | |         \"add x9, sp, 34 * 8\", // Skip the exception frame.\n...   |\n351 | |         \"ret\", // Control flow is handed back to Aarch64VCpu.run(), simulating the normal return of the `run_guest` function.\n352 | |     )\n    | |_____^ use of inline assembly\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>\n    = note: inline assembly is entirely unchecked and can cause undefined behavior\nnote: an unsafe function restricts its caller, but its body is safe by default\n   --> src/exception.rs:343:1\n    |\n343 | unsafe extern \"C\" fn vmexit_trampoline() -> ! {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: `#[warn(unsafe_op_in_unsafe_fn)]` on by default\n\nwarning[E0133]: use of inline assembly is unsafe and requires unsafe block\n   --> src/vcpu.rs:271:9\n    |\n271 | /         core::arch::naked_asm!(\n272 | |             // Save host context.\n273 | |             save_regs_to_stack!(),\n...   |\n286 | |             run_guest_panic = sym Self::run_guest_panic,\n287 | |         );\n    | |_________^ use of inline assembly\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>\n    = note: inline assembly is entirely unchecked and can cause undefined behavior\nnote: an unsafe function restricts its caller, but its body is safe by default\n   --> src/vcpu.rs:263:5\n    |\n263 |     unsafe extern \"C\" fn run_guest(&mut self) -> usize {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSome errors have detailed explanations: E0133, E0658.\nFor more information about an error, try `rustc --explain E0133`.\nwarning: `arm_vcpu` (lib) generated 2 warnings\nerror: could not compile `arm_vcpu` (lib) due to 6 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "Cargo.lock",
          "features": "",
          "count": 3,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── riscv 0.14.0\n    └── page_table_multiarch 0.5.5\n        └── axaddrspace 0.1.2\n            ├── axvisor_api 0.1.0\n            │   ├── axvcpu 0.1.1\n            │   │   └── arm_vcpu 0.1.1\n            │   └── arm_vcpu 0.1.1\n            ├── axvcpu 0.1.1\n            ├── axdevice_base 0.1.0\n            │   └── arm_vcpu 0.1.1\n            └── arm_vcpu 0.1.1\n\n\n{\n  \"database\": {\n    \"advisory-count\": 861,\n    \"last-commit\": \"32546e97dfa0ad59baab4166705156d8dd0fbfa8\",\n    \"last-updated\": \"2025-10-27T17:45:41+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 60\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\\n\\n## Possible Alternative(s)\\n\\n- [pastey](https://crates.io/crates/pastey), a fork of paste and is aimed to be a drop-in replacement with additional features for paste crate\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}",
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── riscv 0.14.0\n    └── page_table_multiarch 0.5.5\n        └── axaddrspace 0.1.2\n            ├── axvisor_api 0.1.0\n            │   ├── axvcpu 0.1.1\n            │   │   └── arm_vcpu 0.1.1\n            │   └── arm_vcpu 0.1.1\n            ├── axvcpu 0.1.1\n            ├── axdevice_base 0.1.0\n            │   └── arm_vcpu 0.1.1\n            └── arm_vcpu 0.1.1\n\n\n{\n  \"database\": {\n    \"advisory-count\": 861,\n    \"last-commit\": \"32546e97dfa0ad59baab4166705156d8dd0fbfa8\",\n    \"last-updated\": \"2025-10-27T17:45:41+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 60\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\\n\\n## Possible Alternative(s)\\n\\n- [pastey](https://crates.io/crates/pastey), a fork of paste and is aimed to be a drop-in replacement with additional features for paste crate\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}",
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── riscv 0.14.0\n    └── page_table_multiarch 0.5.5\n        └── axaddrspace 0.1.2\n            ├── axvisor_api 0.1.0\n            │   ├── axvcpu 0.1.1\n            │   │   └── arm_vcpu 0.1.1\n            │   └── arm_vcpu 0.1.1\n            ├── axvcpu 0.1.1\n            ├── axdevice_base 0.1.0\n            │   └── arm_vcpu 0.1.1\n            └── arm_vcpu 0.1.1\n\n\n{\n  \"database\": {\n    \"advisory-count\": 861,\n    \"last-commit\": \"32546e97dfa0ad59baab4166705156d8dd0fbfa8\",\n    \"last-updated\": \"2025-10-27T17:45:41+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 60\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\\n\\n## Possible Alternative(s)\\n\\n- [pastey](https://crates.io/crates/pastey), a fork of paste and is aimed to be a drop-in replacement with additional features for paste crate\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 3,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-10-27T20:54:58Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1525:11: 1525:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1528:13: 1528:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-10-27T20:54:58Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }",
              "[2025-10-27T20:55:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1525:11: 1525:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1528:13: 1528:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-10-27T20:55:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }",
              "[2025-10-27T20:55:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1525:11: 1525:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1528:13: 1528:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-10-27T20:55:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 3,
          "kinds": {
            "Unused Deps": [
              "pkg=arm_vcpu, checker=Udeps\ntoolchain=nightly-2025-05-20, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-10-28 4:55:29.718248836 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling proc-macro2 v1.0.103\n   Compiling quote v1.0.41\n   Compiling unicode-ident v1.0.20\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.16.0\n   Compiling winnow v0.7.13\n   Compiling toml_datetime v0.7.3\n   Compiling serde_core v1.0.228\n   Compiling indexmap v2.12.0\n    Checking memory_addr v0.4.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `memory_addr` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n",
              "pkg=arm_vcpu, checker=Udeps\ntoolchain=nightly-2025-05-20, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \ntimestamp=2025-10-28 4:55:36.645760618 +08:00:00\n\n\nstdout:\nunused dependencies:\n`arm_vcpu v0.1.1 (/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu)`\n└─── dependencies\n     ├─── \"axdevice_base\"\n     └─── \"spin\"\nNote: These dependencies might be used by other targets.\n      To find dependencies that are not used by any target, enable `--all-targets`.\nNote: They might be false-positive.\n      For example, `cargo-udeps` cannot detect usage of crates that are only used in doc-tests.\n      To ignore some dependencies, write `package.metadata.cargo-udeps.ignore` in Cargo.toml.\n\nstderr:\n   Compiling quote v1.0.41\n   Compiling toml_parser v1.0.4\n    Checking memory_addr v0.4.0\n   Compiling serde_core v1.0.228\n   Compiling axerrno v0.1.0\n    Checking tock-registers v0.9.0\n    Checking log v0.4.28\n   Compiling syn v2.0.108\n    Checking aarch64-cpu v10.0.0\n   Compiling toml_edit v0.23.7\n   Compiling proc-macro-crate v3.4.0\n    Checking bitflags v2.10.0\n    Checking cfg-if v1.0.4\n    Checking memory_set v0.4.0\n    Checking winnow v0.7.13\n    Checking page_table_entry v0.5.5\n    Checking numeric-enum-macro v0.2.0\n    Checking page_table_multiarch v0.5.5\n    Checking bit_field v0.10.3\n   Compiling serde v1.0.228\n    Checking lazyinit v0.2.2\n    Checking axaddrspace v0.1.2\n    Checking toml_datetime v0.7.3\n    Checking serde_spanned v1.0.3\n   Compiling percpu v0.2.0\n    Checking toml_writer v1.0.4\n    Checking scopeguard v1.2.0\n    Checking lock_api v0.4.14\n    Checking spin v0.10.0\n    Checking toml v0.9.8\n   Compiling enumerable_derive v1.2.0\n   Compiling serde_derive v1.0.228\n   Compiling crate_interface v0.1.4\n   Compiling percpu_macros v0.2.0\n   Compiling serde_repr v0.1.20\n   Compiling axvisor_api_proc v0.1.0\n    Checking enumerable v1.2.0\n    Checking axvisor_api v0.1.0\n    Checking axvcpu v0.1.1\n    Checking axvmconfig v0.1.0\n    Checking axdevice_base v0.1.0\n    Checking arm_vcpu v0.1.1 (/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu)\nwarning: struct `VmCpuRegisters` is never constructed\n  --> src/vcpu.rs:30:12\n   |\n30 | pub struct VmCpuRegisters {\n   |            ^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\nwarning: `arm_vcpu` (lib) generated 1 warning\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 6.89s\ninfo: Loading depinfo from \"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/aarch64-unknown-none/debug/deps/arm_vcpu-8480d5a73a0c9969.d\"\n",
              "pkg=arm_vcpu, checker=Udeps\ntoolchain=nightly-2025-05-20, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-linux-gnu \ntimestamp=2025-10-28 4:55:40.842438033 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling rustversion v1.0.22\n    Checking bit_field v0.10.3\n   Compiling x86 v0.52.0\n    Checking bitflags v1.3.2\n   Compiling serde_core v1.0.228\n    Checking raw-cpuid v10.7.0\n    Checking volatile v0.4.6\n    Checking log v0.4.28\n    Checking bitflags v2.10.0\n    Checking memory_addr v0.4.0\n   Compiling axerrno v0.1.0\n    Checking scopeguard v1.2.0\n    Checking cfg-if v1.0.4\n    Checking lock_api v0.4.14\n    Checking memory_set v0.4.0\n    Checking numeric-enum-macro v0.2.0\n    Checking lazyinit v0.2.2\n    Checking winnow v0.7.13\n    Checking x86_64 v0.15.2\n    Checking page_table_entry v0.5.5\n   Compiling serde v1.0.228\n    Checking toml_writer v1.0.4\n    Checking toml_parser v1.0.4\n    Checking page_table_multiarch v0.5.5\n   Compiling percpu v0.2.0\n    Checking enumerable v1.2.0\n    Checking axaddrspace v0.1.2\n    Checking toml_datetime v0.7.3\n    Checking serde_spanned v1.0.3\n    Checking spin v0.9.8\n    Checking toml v0.9.8\n    Checking axvisor_api v0.1.0\n    Checking tock-registers v0.9.0\n    Checking axvcpu v0.1.1\n    Checking aarch64-cpu v10.0.0\n    Checking spin v0.10.0\n    Checking axvmconfig v0.1.0\n    Checking axdevice_base v0.1.0\n    Checking arm_vcpu v0.1.1 (/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu)\nerror[E0425]: cannot find function `hardware_inject_virtual_interrupt` in module `axvisor_api::arch`\n   --> src/vcpu.rs:134:28\n    |\n134 |         axvisor_api::arch::hardware_inject_virtual_interrupt(vector as u8);\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in `axvisor_api::arch`\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axvisor_api-0.1.0/src/lib.rs:256:15\n    |\n256 |     extern fn hardware_inject_virtual_interrupt(vector: InterruptVector);\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: the item is gated behind the `aarch64` feature\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axvisor_api-0.1.0/src/lib.rs:254:11\n    |\n254 |     #[cfg(target_arch = \"aarch64\")]\n    |           ^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x0`: unknown register\n  --> src/smc.rs:18:13\n   |\n18 |             inout(\"x0\") x0 => r0,\n   |             ^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x1`: unknown register\n  --> src/smc.rs:19:13\n   |\n19 |             inout(\"x1\") x1 => r1,\n   |             ^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x2`: unknown register\n  --> src/smc.rs:20:13\n   |\n20 |             inout(\"x2\") x2 => r2,\n   |             ^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x3`: unknown register\n  --> src/smc.rs:21:13\n   |\n21 |             inout(\"x3\") x3 => r3,\n   |             ^^^^^^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `arm_vcpu` (lib) due to 5 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 3,
          "kinds": {
            "Outdated": [
              "pkg=arm_vcpu, checker=Outdated\ntoolchain=nightly-2025-05-20, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-10-28 4:55:19.352412368 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     10.0.0   ---     11.1.0  Normal  ---\ntock-registers  0.9.0    ---     0.10.0  Normal  ---\n",
              "pkg=arm_vcpu, checker=Outdated\ntoolchain=nightly-2025-05-20, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-10-28 4:55:19.756384782 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     10.0.0   ---     11.1.0  Normal  ---\ntock-registers  0.9.0    ---     0.10.0  Normal  ---\n",
              "pkg=arm_vcpu, checker=Outdated\ntoolchain=nightly-2025-05-20, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-10-28 4:55:20.180533387 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     10.0.0   ---     11.1.0  Normal  ---\ntock-registers  0.9.0    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 2,
          "kinds": {
            "Cargo": [
              "// pkg_name=arm_vcpu, checker=Udeps\n// toolchain=nightly-2025-05-20, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-10-28 4:55:28.144571052 +08:00:00\n   Compiling proc-macro2 v1.0.103\n   Compiling quote v1.0.41\n   Compiling unicode-ident v1.0.20\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.16.0\n   Compiling winnow v0.7.13\n   Compiling toml_datetime v0.7.3\n   Compiling serde_core v1.0.228\n   Compiling indexmap v2.12.0\n    Checking memory_addr v0.4.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `memory_addr` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=arm_vcpu, checker=Udeps\n// toolchain=nightly-2025-05-20, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-linux-gnu \n// timestamp=2025-10-28 4:55:36.646655993 +08:00:00\n   Compiling rustversion v1.0.22\n    Checking bit_field v0.10.3\n   Compiling x86 v0.52.0\n    Checking bitflags v1.3.2\n   Compiling serde_core v1.0.228\n    Checking raw-cpuid v10.7.0\n    Checking volatile v0.4.6\n    Checking log v0.4.28\n    Checking bitflags v2.10.0\n    Checking memory_addr v0.4.0\n   Compiling axerrno v0.1.0\n    Checking scopeguard v1.2.0\n    Checking cfg-if v1.0.4\n    Checking lock_api v0.4.14\n    Checking memory_set v0.4.0\n    Checking numeric-enum-macro v0.2.0\n    Checking lazyinit v0.2.2\n    Checking winnow v0.7.13\n    Checking x86_64 v0.15.2\n    Checking page_table_entry v0.5.5\n   Compiling serde v1.0.228\n    Checking toml_writer v1.0.4\n    Checking toml_parser v1.0.4\n    Checking page_table_multiarch v0.5.5\n   Compiling percpu v0.2.0\n    Checking enumerable v1.2.0\n    Checking axaddrspace v0.1.2\n    Checking toml_datetime v0.7.3\n    Checking serde_spanned v1.0.3\n    Checking spin v0.9.8\n    Checking toml v0.9.8\n    Checking axvisor_api v0.1.0\n    Checking tock-registers v0.9.0\n    Checking axvcpu v0.1.1\n    Checking aarch64-cpu v10.0.0\n    Checking spin v0.10.0\n    Checking axvmconfig v0.1.0\n    Checking axdevice_base v0.1.0\n    Checking arm_vcpu v0.1.1 (/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu)\nerror[E0425]: cannot find function `hardware_inject_virtual_interrupt` in module `axvisor_api::arch`\n   --> src/vcpu.rs:134:28\n    |\n134 |         axvisor_api::arch::hardware_inject_virtual_interrupt(vector as u8);\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in `axvisor_api::arch`\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axvisor_api-0.1.0/src/lib.rs:256:15\n    |\n256 |     extern fn hardware_inject_virtual_interrupt(vector: InterruptVector);\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: the item is gated behind the `aarch64` feature\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axvisor_api-0.1.0/src/lib.rs:254:11\n    |\n254 |     #[cfg(target_arch = \"aarch64\")]\n    |           ^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x0`: unknown register\n  --> src/smc.rs:18:13\n   |\n18 |             inout(\"x0\") x0 => r0,\n   |             ^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x1`: unknown register\n  --> src/smc.rs:19:13\n   |\n19 |             inout(\"x1\") x1 => r1,\n   |             ^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x2`: unknown register\n  --> src/smc.rs:20:13\n   |\n20 |             inout(\"x2\") x2 => r2,\n   |             ^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x3`: unknown register\n  --> src/smc.rs:21:13\n   |\n21 |             inout(\"x3\") x3 => r3,\n   |             ^^^^^^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `arm_vcpu` (lib) due to 5 previous errors\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1525:11: 1525:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1528:13: 1528:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arm_vcpu, checker=Clippy\n// toolchain=nightly-2025-05-20, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-10-28 4:54:01.895545734 +08:00:00\n   Compiling rustversion v1.0.22\n    Checking bit_field v0.10.3\n   Compiling x86 v0.52.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling serde_core v1.0.228\n    Checking log v0.4.28\n    Checking volatile v0.4.6\n    Checking bitflags v2.10.0\n    Checking memory_addr v0.4.0\n   Compiling axerrno v0.1.0\n    Checking scopeguard v1.2.0\n    Checking cfg-if v1.0.4\n    Checking lock_api v0.4.14\n    Checking memory_set v0.4.0\n    Checking numeric-enum-macro v0.2.0\n    Checking winnow v0.7.13\n    Checking x86_64 v0.15.2\n    Checking lazyinit v0.2.2\n   Compiling serde v1.0.228\n    Checking toml_writer v1.0.4\n    Checking page_table_entry v0.5.5\n    Checking toml_parser v1.0.4\n   Compiling percpu v0.2.0\n    Checking enumerable v1.2.0\n    Checking page_table_multiarch v0.5.5\n    Checking axaddrspace v0.1.2\n    Checking serde_spanned v1.0.3\n    Checking toml_datetime v0.7.3\n    Checking spin v0.9.8\n    Checking axvisor_api v0.1.0\n    Checking toml v0.9.8\n    Checking tock-registers v0.9.0\n    Checking aarch64-cpu v10.0.0\n    Checking axvcpu v0.1.1\n    Checking spin v0.10.0\n    Checking axvmconfig v0.1.0\n    Checking axdevice_base v0.1.0\n    Checking arm_vcpu v0.1.1 (/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu)\nerror: could not compile `arm_vcpu` (lib) due to 5 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) geiger",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arm_vcpu, checker=Geiger\n// toolchain=nightly-2025-05-20, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2025-10-28 4:55:20.241468487 +08:00:00\nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.6 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.6 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.6 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.6 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.6 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.6 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.6 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.6 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.6 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.6 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.6 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.6 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.6 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.6 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.6 \n     Removed 0 files\n   Compiling proc-macro2 v1.0.103\n   Compiling quote v1.0.41\n   Compiling unicode-ident v1.0.20\n   Compiling hashbrown v0.16.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/build/quote-9cf6aa672522b25c/build_script_build-9cf6aa672522b25c.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/build/proc-macro2-dee2de6a12b324eb/build_script_build-dee2de6a12b324eb.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/unicode_ident-753dabb2e396da05.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libunicode_ident-753dabb2e396da05.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libunicode_ident-753dabb2e396da05.rlib\",\"emit\":\"link\"}\n   Compiling winnow v0.7.13\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/hashbrown-6c04434eec683bf1.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/build/quote-9cf6aa672522b25c/build_script_build-9cf6aa672522b25c\",\"emit\":\"link\"}\n   Compiling equivalent v1.0.2\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/equivalent-5a88bd14f385988f.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libequivalent-5a88bd14f385988f.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/build/proc-macro2-dee2de6a12b324eb/build_script_build-dee2de6a12b324eb\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libequivalent-5a88bd14f385988f.rlib\",\"emit\":\"link\"}\n   Compiling rustversion v1.0.22\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/winnow-0e6dde3069cd9a4a.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/build/rustversion-40be1d7cd574670a/build_script_build-40be1d7cd574670a.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/proc_macro2-eb2e83ea9cc8d18a.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/build/rustversion-40be1d7cd574670a/build_script_build-40be1d7cd574670a\",\"emit\":\"link\"}\n   Compiling toml_datetime v0.7.3\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/toml_datetime-3945a078e63d8ad6.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libhashbrown-6c04434eec683bf1.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libhashbrown-6c04434eec683bf1.rlib\",\"emit\":\"link\"}\n   Compiling indexmap v2.12.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libtoml_datetime-3945a078e63d8ad6.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/indexmap-c2c0b6a30c747d38.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libtoml_datetime-3945a078e63d8ad6.rlib\",\"emit\":\"link\"}\n    Checking bit_field v0.10.3\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libproc_macro2-eb2e83ea9cc8d18a.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/bit_field-5f0cf7a55cf79a0f.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libbit_field-5f0cf7a55cf79a0f.rmeta\",\"emit\":\"metadata\"}\n   Compiling x86 v0.52.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/build/x86-cff6e8417eca5035/build_script_build-cff6e8417eca5035.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/build/x86-cff6e8417eca5035/build_script_build-cff6e8417eca5035\",\"emit\":\"link\"}\n    Checking bitflags v1.3.2\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/bitflags-e452f082b53802d5.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libbitflags-e452f082b53802d5.rmeta\",\"emit\":\"metadata\"}\n   Compiling serde_core v1.0.228\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/build/serde_core-3200d1e1e694550b/build_script_build-3200d1e1e694550b.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libproc_macro2-eb2e83ea9cc8d18a.rlib\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/quote-584456370420eec7.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/build/serde_core-3200d1e1e694550b/build_script_build-3200d1e1e694550b\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libquote-584456370420eec7.rmeta\",\"emit\":\"metadata\"}\n    Checking raw-cpuid v10.7.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libquote-584456370420eec7.rlib\",\"emit\":\"link\"}\n   Compiling syn v2.0.108\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/raw_cpuid-5f4ca47649f2be1c.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libindexmap-c2c0b6a30c747d38.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libindexmap-c2c0b6a30c747d38.rlib\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/rustversion-88a5d32f40b12196.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/syn-055f8927293e3329.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/librustversion-88a5d32f40b12196.so\",\"emit\":\"link\"}\n    Checking volatile v0.4.6\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/volatile-9c3a5d9b8a46e4be.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libvolatile-9c3a5d9b8a46e4be.rmeta\",\"emit\":\"metadata\"}\n    Checking log v0.4.28\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/log-ce2f27073ff64a46.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libwinnow-0e6dde3069cd9a4a.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/liblog-ce2f27073ff64a46.rmeta\",\"emit\":\"metadata\"}\n    Checking bitflags v2.10.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/bitflags-58a9b0610e43665f.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libwinnow-0e6dde3069cd9a4a.rlib\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libraw_cpuid-5f4ca47649f2be1c.rmeta\",\"emit\":\"metadata\"}\n   Compiling toml_parser v1.0.4\n   Compiling axerrno v0.1.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libbitflags-58a9b0610e43665f.rmeta\",\"emit\":\"metadata\"}\n    Checking memory_addr v0.4.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/build/axerrno-09d22c82c598154d/build_script_build-09d22c82c598154d.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/memory_addr-05cd10bcf213a3f9.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/toml_parser-5749a614a508a8c9.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libmemory_addr-05cd10bcf213a3f9.rmeta\",\"emit\":\"metadata\"}\n    Checking x86_64 v0.15.2\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/build/axerrno-09d22c82c598154d/build_script_build-09d22c82c598154d\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/x86_64-7b5733cbbc70843d.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/x86-6a4f6e4a070c5559.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libtoml_parser-5749a614a508a8c9.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libtoml_parser-5749a614a508a8c9.rlib\",\"emit\":\"link\"}\n   Compiling toml_edit v0.23.7\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/toml_edit-e07c71acf9a576b0.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libx86_64-7b5733cbbc70843d.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libtoml_edit-e07c71acf9a576b0.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libx86-6a4f6e4a070c5559.rmeta\",\"emit\":\"metadata\"}\n    Checking page_table_entry v0.5.5\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/page_table_entry-033def7cd0a9def0.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/serde_core-93109cb05e0fa145.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libpage_table_entry-033def7cd0a9def0.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/axerrno-6c3f0530a62d3820.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libaxerrno-6c3f0530a62d3820.rmeta\",\"emit\":\"metadata\"}\n    Checking cfg-if v1.0.4\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/cfg_if-4a7d0854554f50b2.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libcfg_if-4a7d0854554f50b2.rmeta\",\"emit\":\"metadata\"}\n    Checking scopeguard v1.2.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/scopeguard-f9f4a2b4ed0dfe04.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libscopeguard-f9f4a2b4ed0dfe04.rmeta\",\"emit\":\"metadata\"}\n    Checking lock_api v0.4.14\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/lock_api-a993c9ef0ba526cc.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libsyn-055f8927293e3329.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/liblock_api-a993c9ef0ba526cc.rmeta\",\"emit\":\"metadata\"}\n    Checking page_table_multiarch v0.5.5\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/page_table_multiarch-858e692533bdb590.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libpage_table_multiarch-858e692533bdb590.rmeta\",\"emit\":\"metadata\"}\n    Checking memory_set v0.4.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libtoml_edit-e07c71acf9a576b0.rlib\",\"emit\":\"link\"}\n   Compiling proc-macro-crate v3.4.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/memory_set-2247926dc6817a95.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/proc_macro_crate-bd988d4cf96150a5.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libmemory_set-2247926dc6817a95.rmeta\",\"emit\":\"metadata\"}\n   Compiling serde v1.0.228\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/build/serde-296bd07140e1ca03/build_script_build-296bd07140e1ca03.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libproc_macro_crate-bd988d4cf96150a5.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/build/serde-296bd07140e1ca03/build_script_build-296bd07140e1ca03\",\"emit\":\"link\"}\n    Checking lazyinit v0.2.2\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/lazyinit-8fc74ff675ee7995.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/liblazyinit-8fc74ff675ee7995.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/winnow-e0165b2ff71d63bb.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libproc_macro_crate-bd988d4cf96150a5.rlib\",\"emit\":\"link\"}\n    Checking numeric-enum-macro v0.2.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/numeric_enum_macro-796a58d6f2689351.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libnumeric_enum_macro-796a58d6f2689351.rmeta\",\"emit\":\"metadata\"}\n    Checking axaddrspace v0.1.2\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/axaddrspace-cfdf3c2f92fda734.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libaxaddrspace-cfdf3c2f92fda734.rmeta\",\"emit\":\"metadata\"}\n   Compiling percpu v0.2.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/build/percpu-0ac013c1a2a8d3ed/build_script_build-0ac013c1a2a8d3ed.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/build/percpu-0ac013c1a2a8d3ed/build_script_build-0ac013c1a2a8d3ed\",\"emit\":\"link\"}\n    Checking toml_writer v1.0.4\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/toml_writer-cb9947884027fc10.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libtoml_writer-cb9947884027fc10.rmeta\",\"emit\":\"metadata\"}\n    Checking spin v0.9.8\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/spin-624e50fe69e1e6f3.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libspin-624e50fe69e1e6f3.rmeta\",\"emit\":\"metadata\"}\n    Checking tock-registers v0.9.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/tock_registers-a1ccb2ede4f3839d.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libtock_registers-a1ccb2ede4f3839d.rmeta\",\"emit\":\"metadata\"}\n    Checking aarch64-cpu v10.0.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libserde_core-93109cb05e0fa145.rmeta\",\"emit\":\"metadata\"}\n    Checking serde_spanned v1.0.3\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/serde_spanned-6d8c67a65cb1cef4.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libserde_spanned-6d8c67a65cb1cef4.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/toml_datetime-0f4731a456b76f19.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libtoml_datetime-0f4731a456b76f19.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/aarch64_cpu-5afa404db09bce7f.d\",\"emit\":\"dep-info\"}\n    Checking spin v0.10.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libsyn-055f8927293e3329.rlib\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/spin-20285c21ba39e077.d\",\"emit\":\"dep-info\"}\n   Compiling enumerable_derive v1.2.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libwinnow-e0165b2ff71d63bb.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libspin-20285c21ba39e077.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/enumerable_derive-6db8c0d1a77e771d.d\",\"emit\":\"dep-info\"}\n   Compiling serde_derive v1.0.228\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/toml_parser-6a4b29674272bc04.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libtoml_parser-6a4b29674272bc04.rmeta\",\"emit\":\"metadata\"}\n    Checking toml v0.9.8\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/serde_derive-348b0a2cf9a43cb1.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/toml-b88d3421a2b0de73.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libenumerable_derive-6db8c0d1a77e771d.so\",\"emit\":\"link\"}\n    Checking enumerable v1.2.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/enumerable-bdc8ef9b2bc7e644.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libtoml-b88d3421a2b0de73.rmeta\",\"emit\":\"metadata\"}\n   Compiling crate_interface v0.1.4\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/crate_interface-264398c9df40a7e9.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libenumerable-bdc8ef9b2bc7e644.rmeta\",\"emit\":\"metadata\"}\n   Compiling axvisor_api_proc v0.1.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/axvisor_api_proc-261d063ff2183fd3.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libcrate_interface-264398c9df40a7e9.so\",\"emit\":\"link\"}\n   Compiling percpu_macros v0.2.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/percpu_macros-76881b14afa4308f.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libaxvisor_api_proc-261d063ff2183fd3.so\",\"emit\":\"link\"}\n   Compiling serde_repr v0.1.20\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/serde_repr-e009bd8880b3dfee.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libpercpu_macros-76881b14afa4308f.so\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/percpu-9c3f071b75351de6.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libserde_repr-e009bd8880b3dfee.so\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libpercpu-9c3f071b75351de6.rmeta\",\"emit\":\"metadata\"}\n    Checking axvisor_api v0.1.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/axvisor_api-aa1610c3d5831e6f.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libaxvisor_api-aa1610c3d5831e6f.rmeta\",\"emit\":\"metadata\"}\n    Checking axvcpu v0.1.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/axvcpu-e66fa4d02bba5325.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libaxvcpu-e66fa4d02bba5325.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libaarch64_cpu-5afa404db09bce7f.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libserde_derive-348b0a2cf9a43cb1.so\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/serde-90d3a2a5ee8c16b7.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libserde-90d3a2a5ee8c16b7.rmeta\",\"emit\":\"metadata\"}\n    Checking axvmconfig v0.1.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/axvmconfig-0687219253cb7b53.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libaxvmconfig-0687219253cb7b53.rmeta\",\"emit\":\"metadata\"}\n    Checking axdevice_base v0.1.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/axdevice_base-3cdfdfd004092872.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libaxdevice_base-3cdfdfd004092872.rmeta\",\"emit\":\"metadata\"}\n    Checking arm_vcpu v0.1.1 (/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu)\n{\"$message_type\":\"diagnostic\",\"message\":\"cannot find function `hardware_inject_virtual_interrupt` in module `axvisor_api::arch`\",\"code\":{\"code\":\"E0425\",\"explanation\":\"An unresolved name was used.\\n\\nErroneous code examples:\\n\\n```compile_fail,E0425\\nsomething_that_doesnt_exist::foo;\\n// error: unresolved name `something_that_doesnt_exist::foo`\\n\\n// or:\\n\\ntrait Foo {\\n    fn bar() {\\n        Self; // error: unresolved name `Self`\\n    }\\n}\\n\\n// or:\\n\\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\\n```\\n\\nPlease verify that the name wasn't misspelled and ensure that the\\nidentifier being referred to is valid for the given situation. Example:\\n\\n```\\nenum something_that_does_exist {\\n    Foo,\\n}\\n```\\n\\nOr:\\n\\n```\\nmod something_that_does_exist {\\n    pub static foo : i32 = 0i32;\\n}\\n\\nsomething_that_does_exist::foo; // ok!\\n```\\n\\nOr:\\n\\n```\\nlet unknown_variable = 12u32;\\nlet x = unknown_variable; // ok!\\n```\\n\\nIf the item is not defined in the current module, it must be imported using a\\n`use` statement, like so:\\n\\n```\\n# mod foo { pub fn bar() {} }\\n# fn main() {\\nuse foo::bar;\\nbar();\\n# }\\n```\\n\\nIf the item you are importing is not defined in some super-module of the\\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\\n\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"src/vcpu.rs\",\"byte_start\":4200,\"byte_end\":4233,\"line_start\":134,\"line_end\":134,\"column_start\":28,\"column_end\":61,\"is_primary\":true,\"text\":[{\"text\":\"        axvisor_api::arch::hardware_inject_virtual_interrupt(vector as u8);\",\"highlight_start\":28,\"highlight_end\":61}],\"label\":\"not found in `axvisor_api::arch`\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"found an item that was configured out\",\"code\":null,\"level\":\"note\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axvisor_api-0.1.0/src/lib.rs\",\"byte_start\":8494,\"byte_end\":8527,\"line_start\":256,\"line_end\":256,\"column_start\":15,\"column_end\":48,\"is_primary\":true,\"text\":[{\"text\":\"    extern fn hardware_inject_virtual_interrupt(vector: InterruptVector);\",\"highlight_start\":15,\"highlight_end\":48}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"the item is gated behind the `aarch64` feature\",\"code\":null,\"level\":\"note\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axvisor_api-0.1.0/src/lib.rs\",\"byte_start\":8358,\"byte_end\":8381,\"line_start\":254,\"line_end\":254,\"column_start\":11,\"column_end\":34,\"is_primary\":true,\"text\":[{\"text\":\"    #[cfg(target_arch = \\\"aarch64\\\")]\",\"highlight_start\":11,\"highlight_end\":34}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror[E0425]\\u001b[0m\\u001b[0m\\u001b[1m: cannot find function `hardware_inject_virtual_interrupt` in module `axvisor_api::arch`\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/vcpu.rs:134:28\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m134\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m        axvisor_api::arch::hardware_inject_virtual_interrupt(vector as u8);\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                            \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mnot found in `axvisor_api::arch`\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;10mnote\\u001b[0m\\u001b[0m: found an item that was configured out\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axvisor_api-0.1.0/src/lib.rs:256:15\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m256\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m    extern fn hardware_inject_virtual_interrupt(vector: InterruptVector);\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m               \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;10mnote\\u001b[0m\\u001b[0m: the item is gated behind the `aarch64` feature\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axvisor_api-0.1.0/src/lib.rs:254:11\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m254\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m    #[cfg(target_arch = \\\"aarch64\\\")]\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m           \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/arm_vcpu-2005aec26dbaa1a4.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"invalid register `x0`: unknown register\",\"code\":null,\"level\":\"error\",\"spans\":[{\"file_name\":\"src/smc.rs\",\"byte_start\":517,\"byte_end\":537,\"line_start\":18,\"line_end\":18,\"column_start\":13,\"column_end\":33,\"is_primary\":true,\"text\":[{\"text\":\"            inout(\\\"x0\\\") x0 => r0,\",\"highlight_start\":13,\"highlight_end\":33}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: invalid register `x0`: unknown register\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/smc.rs:18:13\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m18\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m            inout(\\\"x0\\\") x0 => r0,\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m             \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"invalid register `x1`: unknown register\",\"code\":null,\"level\":\"error\",\"spans\":[{\"file_name\":\"src/smc.rs\",\"byte_start\":551,\"byte_end\":571,\"line_start\":19,\"line_end\":19,\"column_start\":13,\"column_end\":33,\"is_primary\":true,\"text\":[{\"text\":\"            inout(\\\"x1\\\") x1 => r1,\",\"highlight_start\":13,\"highlight_end\":33}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: invalid register `x1`: unknown register\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/smc.rs:19:13\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m19\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m            inout(\\\"x1\\\") x1 => r1,\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m             \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"invalid register `x2`: unknown register\",\"code\":null,\"level\":\"error\",\"spans\":[{\"file_name\":\"src/smc.rs\",\"byte_start\":585,\"byte_end\":605,\"line_start\":20,\"line_end\":20,\"column_start\":13,\"column_end\":33,\"is_primary\":true,\"text\":[{\"text\":\"            inout(\\\"x2\\\") x2 => r2,\",\"highlight_start\":13,\"highlight_end\":33}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: invalid register `x2`: unknown register\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/smc.rs:20:13\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m20\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m            inout(\\\"x2\\\") x2 => r2,\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m             \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"invalid register `x3`: unknown register\",\"code\":null,\"level\":\"error\",\"spans\":[{\"file_name\":\"src/smc.rs\",\"byte_start\":619,\"byte_end\":639,\"line_start\":21,\"line_end\":21,\"column_start\":13,\"column_end\":33,\"is_primary\":true,\"text\":[{\"text\":\"            inout(\\\"x3\\\") x3 => r3,\",\"highlight_start\":13,\"highlight_end\":33}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: invalid register `x3`: unknown register\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/smc.rs:21:13\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m21\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m            inout(\\\"x3\\\") x3 => r3,\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m             \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"aborting due to 5 previous errors\",\"code\":null,\"level\":\"error\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: aborting due to 5 previous errors\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"For more information about this error, try `rustc --explain E0425`.\",\"code\":null,\"level\":\"failure-note\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1mFor more information about this error, try `rustc --explain E0425`.\\u001b[0m\\n\"}\nerror: could not compile `arm_vcpu` (lib)\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-2025-06-26-x86_64-unknown-linux-gnu/bin/rustc --crate-name arm_vcpu --edition=2024 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values(\"4-level-ept\"))' -C metadata=310048943d74e839 -C extra-filename=-2005aec26dbaa1a4 --out-dir /home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps -L dependency=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps --extern aarch64_cpu=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libaarch64_cpu-5afa404db09bce7f.rmeta --extern axaddrspace=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libaxaddrspace-cfdf3c2f92fda734.rmeta --extern axdevice_base=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libaxdevice_base-3cdfdfd004092872.rmeta --extern axerrno=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libaxerrno-6c3f0530a62d3820.rmeta --extern axvcpu=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libaxvcpu-e66fa4d02bba5325.rmeta --extern axvisor_api=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libaxvisor_api-aa1610c3d5831e6f.rmeta --extern log=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/liblog-ce2f27073ff64a46.rmeta --extern numeric_enum_macro=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libnumeric_enum_macro-796a58d6f2689351.rmeta --extern percpu=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libpercpu-9c3f071b75351de6.rmeta --extern spin=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libspin-20285c21ba39e077.rmeta --extern tock_registers=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu/target/debug/deps/libtock_registers-a1ccb2ede4f3839d.rmeta` (exit status: 1)\nerror: Cargo(\"1 job failed\")\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arm_vcpu, checker=Mirai\n// toolchain=nightly-2025-05-20, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-10-28 4:54:47.106799835 +08:00:00\n   Compiling proc-macro2 v1.0.103\n   Compiling quote v1.0.41\n   Compiling unicode-ident v1.0.20\n   Compiling winnow v0.7.13\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.16.0\n   Compiling toml_datetime v0.7.3\n    Checking bit_field v0.10.3\n   Compiling rustversion v1.0.22\n   Compiling indexmap v2.12.0\n   Compiling syn v2.0.108\n   Compiling serde_core v1.0.228\n    Checking bitflags v1.3.2\n   Compiling x86 v0.52.0\n    Checking raw-cpuid v10.7.0\n   Compiling toml_parser v1.0.4\n    Checking log v0.4.28\n    Checking memory_addr v0.4.0\n    Checking bitflags v2.10.0\n   Compiling toml_edit v0.23.7\n   Compiling axerrno v0.1.0\n    Checking volatile v0.4.6\n    Checking x86_64 v0.15.2\n   Compiling proc-macro-crate v3.4.0\n    Checking page_table_entry v0.5.5\n    Checking scopeguard v1.2.0\n    Checking cfg-if v1.0.4\n    Checking lock_api v0.4.14\n    Checking page_table_multiarch v0.5.5\n    Checking memory_set v0.4.0\n    Checking lazyinit v0.2.2\n   Compiling serde v1.0.228\n    Checking numeric-enum-macro v0.2.0\n    Checking axaddrspace v0.1.2\n   Compiling percpu v0.2.0\n    Checking toml_writer v1.0.4\n    Checking spin v0.9.8\n    Checking tock-registers v0.9.0\n    Checking aarch64-cpu v10.0.0\n    Checking serde_spanned v1.0.3\n    Checking spin v0.10.0\n   Compiling enumerable_derive v1.2.0\n   Compiling serde_derive v1.0.228\n    Checking toml v0.9.8\n   Compiling axvisor_api_proc v0.1.0\n    Checking enumerable v1.2.0\n   Compiling serde_repr v0.1.20\n   Compiling crate_interface v0.1.4\n   Compiling percpu_macros v0.2.0\n    Checking axvisor_api v0.1.0\n    Checking axvcpu v0.1.1\n    Checking axvmconfig v0.1.0\n    Checking axdevice_base v0.1.0\n    Checking arm_vcpu v0.1.1 (/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu)\nerror: could not compile `arm_vcpu` (lib) due to 11 previous errors; 2 warnings emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arm_vcpu, checker=SemverChecks\n// toolchain=nightly-2025-05-20, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-10-28 4:54:06.133071268 +08:00:00\n    Building arm_vcpu v0.1.1 (current)\nerror: running cargo-doc on crate 'arm_vcpu' failed with output:\n-----\n   Compiling proc-macro2 v1.0.103\n   Compiling quote v1.0.41\n   Compiling unicode-ident v1.0.20\n   Compiling hashbrown v0.16.0\n   Compiling winnow v0.7.13\n   Compiling equivalent v1.0.2\n   Compiling toml_datetime v0.7.3\n   Compiling serde_core v1.0.228\n   Compiling indexmap v2.12.0\n   Compiling syn v2.0.108\n    Checking memory_addr v0.4.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `memory_addr` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arm_vcpu v0.1.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/arceos-hypervisor/arm_vcpu --features 4-level-ept &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arm_vcpu v0.1.1\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=arm_vcpu, checker=SemverChecks\ntoolchain=nightly-2025-05-20, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-10-28 4:54:09.721046598 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arm_vcpu v0.1.1 (current)\nerror: running cargo-doc on crate 'arm_vcpu' failed with output:\n-----\n   Compiling proc-macro2 v1.0.103\n   Compiling quote v1.0.41\n   Compiling unicode-ident v1.0.20\n   Compiling hashbrown v0.16.0\n   Compiling winnow v0.7.13\n   Compiling equivalent v1.0.2\n   Compiling toml_datetime v0.7.3\n   Compiling serde_core v1.0.228\n   Compiling indexmap v2.12.0\n   Compiling syn v2.0.108\n    Checking memory_addr v0.4.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `memory_addr` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arm_vcpu v0.1.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/arceos-hypervisor/arm_vcpu --features 4-level-ept &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arm_vcpu v0.1.1\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Atomvchecker",
    "Outdated",
    "Geiger",
    "Unused Deps",
    "Unformatted"
  ]
}