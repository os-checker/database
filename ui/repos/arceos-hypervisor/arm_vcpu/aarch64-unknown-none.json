{
  "repo": {
    "user": "arceos-hypervisor",
    "repo": "arm_vcpu"
  },
  "data": [
    {
      "user": "arceos-hypervisor",
      "repo": "arm_vcpu",
      "pkg": "arm_vcpu",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1525:11: 1525:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1528:13: 1528:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arm_vcpu, checker=Lockbud\n// toolchain=nightly-2025-05-20, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-09-09 4:31:53.237225047 +08:00:00\n   Compiling tock-registers v0.9.0\n   Compiling log v0.4.28\n   Compiling memory_addr v0.4.0\n   Compiling serde v1.0.219\n   Compiling axerrno v0.1.0\n   Compiling bitflags v2.9.4\n   Compiling aarch64-cpu v10.0.0\n[2025-09-08T20:31:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1525:11: 1525:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1528:13: 1528:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-09-08T20:31:53Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling cfg-if v1.0.3\n   Compiling memory_set v0.4.0\n   Compiling bit_field v0.10.3\n   Compiling lazyinit v0.2.2\n   Compiling numeric-enum-macro v0.2.0\n   Compiling winnow v0.7.13\n   Compiling toml_writer v1.0.2\n   Compiling percpu v0.2.0\n   Compiling enumerable v1.2.0\n   Compiling lock_api v0.4.13\n   Compiling scopeguard v1.2.0\n   Compiling spin v0.10.0\n   Compiling toml_parser v1.0.2\n   Compiling page_table_entry v0.5.5\n   Compiling toml_datetime v0.7.0\n   Compiling page_table_multiarch v0.5.5\n   Compiling axaddrspace v0.1.1\n   Compiling serde_spanned v1.0.0\n   Compiling toml v0.9.5\n   Compiling axvisor_api v0.1.0\n   Compiling axvcpu v0.1.1\n   Compiling axvmconfig v0.1.0\n   Compiling axdevice_base v0.1.0\n   Compiling arm_vcpu v0.1.1 (/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu)\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> src/exception.rs:344:5\n    |\n344 |     core::arch::naked_asm!(\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> src/vcpu.rs:271:9\n    |\n271 |         core::arch::naked_asm!(\n    |         ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> src/exception.rs:341:3\n    |\n341 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror: `naked` is not an unsafe attribute\n   --> src/vcpu.rs:262:7\n    |\n262 |     #[unsafe(naked)]\n    |       ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> src/exception.rs:341:1\n    |\n341 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> src/vcpu.rs:262:5\n    |\n262 |     #[unsafe(naked)]\n    |     ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nwarning[E0133]: use of inline assembly is unsafe and requires unsafe block\n   --> src/exception.rs:344:5\n    |\n344 | /     core::arch::naked_asm!(\n345 | |         // Curretly `sp` points to the base address of `Aarch64VCpu.ctx`, which stores guest's `TrapFrame`.\n346 | |         \"add x9, sp, 34 * 8\", // Skip the exception frame.\n...   |\n351 | |         \"ret\", // Control flow is handed back to Aarch64VCpu.run(), simulating the normal return of the `run_guest` function.\n352 | |     )\n    | |_____^ use of inline assembly\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>\n    = note: inline assembly is entirely unchecked and can cause undefined behavior\nnote: an unsafe function restricts its caller, but its body is safe by default\n   --> src/exception.rs:343:1\n    |\n343 | unsafe extern \"C\" fn vmexit_trampoline() -> ! {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: `#[warn(unsafe_op_in_unsafe_fn)]` on by default\n\nwarning[E0133]: use of inline assembly is unsafe and requires unsafe block\n   --> src/vcpu.rs:271:9\n    |\n271 | /         core::arch::naked_asm!(\n272 | |             // Save host context.\n273 | |             save_regs_to_stack!(),\n...   |\n286 | |             run_guest_panic = sym Self::run_guest_panic,\n287 | |         );\n    | |_________^ use of inline assembly\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>\n    = note: inline assembly is entirely unchecked and can cause undefined behavior\nnote: an unsafe function restricts its caller, but its body is safe by default\n   --> src/vcpu.rs:263:5\n    |\n263 |     unsafe extern \"C\" fn run_guest(&mut self) -> usize {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSome errors have detailed explanations: E0133, E0658.\nFor more information about an error, try `rustc --explain E0133`.\nwarning: `arm_vcpu` (lib) generated 2 warnings\nerror: could not compile `arm_vcpu` (lib) due to 6 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arm_vcpu, checker=SemverChecks\n// toolchain=nightly-2025-05-20, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-09-09 4:31:04.50609712 +08:00:00\n    Building arm_vcpu v0.1.1 (current)\nerror: running cargo-doc on crate 'arm_vcpu' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.18\n   Compiling hashbrown v0.15.5\n   Compiling equivalent v1.0.2\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.13\n   Compiling serde v1.0.219\n    Checking log v0.4.28\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arm_vcpu v0.1.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/arceos-hypervisor/arm_vcpu --features 4-level-ept &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arm_vcpu v0.1.1\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arm_vcpu, checker=Udeps\n// toolchain=nightly-2025-05-20, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \n// timestamp=2025-09-09 4:32:17.512054246 +08:00:00\n   Compiling quote v1.0.40\n   Compiling indexmap v2.11.0\n    Checking log v0.4.28\n    Checking tock-registers v0.9.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── riscv 0.14.0\n    └── page_table_multiarch 0.5.5\n        └── axaddrspace 0.1.1\n            ├── axvisor_api 0.1.0\n            │   ├── axvcpu 0.1.1\n            │   │   └── arm_vcpu 0.1.1\n            │   └── arm_vcpu 0.1.1\n            ├── axvcpu 0.1.1\n            ├── axdevice_base 0.1.0\n            │   └── arm_vcpu 0.1.1\n            └── arm_vcpu 0.1.1\n\n\n{\n  \"database\": {\n    \"advisory-count\": 809,\n    \"last-commit\": \"b8a3db1f9c03906df29786e177fd62132ceaea03\",\n    \"last-updated\": \"2025-09-08T11:12:38+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 61\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\\n\\n## Possible Alternative(s)\\n\\n- [pastey](https://crates.io/crates/pastey), a fork of paste and is aimed to be a drop-in replacement with additional features for paste crate\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-09-08T20:31:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1525:11: 1525:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1528:13: 1528:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-09-08T20:31:53Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=arm_vcpu, checker=Udeps\ntoolchain=nightly-2025-05-20, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \ntimestamp=2025-09-09 4:32:18.056683691 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling quote v1.0.40\n   Compiling indexmap v2.11.0\n    Checking log v0.4.28\n    Checking tock-registers v0.9.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=arm_vcpu, checker=Outdated\ntoolchain=nightly-2025-05-20, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-09-09 4:32:06.394435231 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\ntock-registers  0.9.0    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=arm_vcpu, checker=SemverChecks\ntoolchain=nightly-2025-05-20, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/arceos-hypervisor/arm_vcpu\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-09-09 4:31:06.360076307 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arm_vcpu v0.1.1 (current)\nerror: running cargo-doc on crate 'arm_vcpu' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.18\n   Compiling hashbrown v0.15.5\n   Compiling equivalent v1.0.2\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.13\n   Compiling serde v1.0.219\n    Checking log v0.4.28\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arm_vcpu v0.1.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/arceos-hypervisor/arm_vcpu --features 4-level-ept &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arm_vcpu v0.1.1\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Atomvchecker",
    "Outdated",
    "Geiger",
    "Unused Deps",
    "Unformatted"
  ]
}