{"repo":{"user":"arceos-hypervisor","repo":"arm_vcpu"},"data":[{"user":"arceos-hypervisor","repo":"arm_vcpu","pkg":"arm_vcpu","count":5,"raw_reports":[{"file":"src/exception.rs","count":2,"kinds":{"Clippy(Error)":["error[E0787]: the `asm!` macro is not allowed in naked functions\n   --> src/exception.rs:234:5\n    |\n234 | /     core::arch::asm!(\n235 | |         \"bl {vcpu_running}\", // Check if vcpu is running.\n236 | |         // If vcpu_running returns true, jump to `return_run_guest`,\n237 | |         // after that the control flow is handed back to Aarch64VCpu.run(),\n...   |\n248 | |         options(noreturn),\n249 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n","error[E0787]: the `asm!` macro is not allowed in naked functions\n   --> src/exception.rs:290:5\n    |\n290 | /     core::arch::asm!(\n291 | |         // Curretly `sp` points to the base address of `Aarch64VCpu.ctx`, which stores guest's `TrapFrame`.\n292 | |         \"add x9, sp, 34 * 8\", // Skip the exception frame.\n293 | |         // Currently `x9` points to `&Aarch64VCpu.host_stack_top`, see `run_guest()` in vcpu.rs.\n...   |\n298 | |         options(noreturn),\n299 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=arm_vcpu, checker=Clippy\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_3/arceos-hypervisor/arm_vcpu\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking tock-registers v0.8.1\n    Checking memory_addr v0.3.1\n    Checking bitflags v2.6.0\n    Checking log v0.4.22\n   Compiling axerrno v0.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking cfg-if v1.0.0\n   Compiling percpu v0.1.5\n    Checking memory_set v0.3.1\n    Checking numeric-enum-macro v0.2.0\n    Checking lazyinit v0.2.1\n    Checking bit_field v0.10.2\n    Checking page_table_entry v0.4.1\n    Checking page_table_multiarch v0.4.1\n    Checking axaddrspace v0.1.0 (https://github.com/arceos-hypervisor/axaddrspace.git#0e4ddd0f)\n    Checking axvcpu v0.1.0 (https://github.com/arceos-hypervisor/axvcpu.git#1e9fa523)\n    Checking arm_vcpu v0.1.0 (/home/runner/check/batch_3/arceos-hypervisor/arm_vcpu)\nerror: could not compile `arm_vcpu` (lib) due to 2 previous errors; 1 warning emitted\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-22T06:19:20Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T06:19:20Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/lib.rs","count":1,"kinds":{"Clippy(Warn)":["warning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> src/lib.rs:4:12\n  |\n4 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Audit","Mirai","Rap","Rudra","Lockbud(Probably)","Lockbud(Possibly)","Outdated","Geiger","Unformatted"]}