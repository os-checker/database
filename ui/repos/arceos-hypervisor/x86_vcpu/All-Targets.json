{
  "repo": {
    "user": "arceos-hypervisor",
    "repo": "x86_vcpu"
  },
  "data": [
    {
      "user": "arceos-hypervisor",
      "repo": "x86_vcpu",
      "pkg": "x86_vcpu",
      "count": 18,
      "raw_reports": [
        {
          "file": "src/vmx/vcpu.rs",
          "features": "",
          "count": 8,
          "kinds": {
            "Clippy(Warn)": [
              "warning: operator precedence can trip the unwary\n    --> src/vmx/vcpu.rs:1049:21\n     |\n1049 |         let value = self.guest_regs.rdx.get_bits(0..32) << 32 | self.guest_regs.rax.get_bits(0..32);\n     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(self.guest_regs.rdx.get_bits(0..32) << 32) | self.guest_regs.rax.get_bits(0..32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n     = note: `#[warn(clippy::precedence)]` on by default\n\n",
              "warning: operator precedence can trip the unwary\n    --> src/vmx/vcpu.rs:1114:24\n     |\n1114 |         let base_low = entry.get_bits(16..40) | entry.get_bits(56..64) << 24;\n     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `entry.get_bits(16..40) | (entry.get_bits(56..64) << 24)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n\n",
              "warning: operator precedence can trip the unwary\n    --> src/vmx/vcpu.rs:1116:9\n     |\n1116 |         base_low | base_high << 32\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `base_low | (base_high << 32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n\n",
              "warning: an array of `Range` that is only one element\n   --> src/vmx/vcpu.rs:441:36\n    |\n441 |           let io_to_be_intercepted = [\n    |  ____________________________________^\n...   |\n468 | |             QEMU_EXIT_PORT..QEMU_EXIT_PORT + 1, // QEMU exit port\n469 | |         ];\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_range_in_vec_init\n    = note: `#[warn(clippy::single_range_in_vec_init)]` on by default\nhelp: if you wanted a `Vec` that contains the entire range, try\n    |\n441 |         let io_to_be_intercepted = (QEMU_EXIT_PORT..QEMU_EXIT_PORT + 1).collect::<std::vec::Vec<u16>>();\n    |                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n",
              "warning: operator precedence can trip the unwary\n    --> src/vmx/vcpu.rs:1049:21\n     |\n1049 |         let value = self.guest_regs.rdx.get_bits(0..32) << 32 | self.guest_regs.rax.get_bits(0..32);\n     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(self.guest_regs.rdx.get_bits(0..32) << 32) | self.guest_regs.rax.get_bits(0..32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n     = note: `#[warn(clippy::precedence)]` on by default\n\n",
              "warning: operator precedence can trip the unwary\n    --> src/vmx/vcpu.rs:1114:24\n     |\n1114 |         let base_low = entry.get_bits(16..40) | entry.get_bits(56..64) << 24;\n     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `entry.get_bits(16..40) | (entry.get_bits(56..64) << 24)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n\n",
              "warning: operator precedence can trip the unwary\n    --> src/vmx/vcpu.rs:1116:9\n     |\n1116 |         base_low | base_high << 32\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `base_low | (base_high << 32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n\n",
              "warning: an array of `Range` that is only one element\n   --> src/vmx/vcpu.rs:441:36\n    |\n441 |           let io_to_be_intercepted = [\n    |  ____________________________________^\n...   |\n468 | |             QEMU_EXIT_PORT..QEMU_EXIT_PORT + 1, // QEMU exit port\n469 | |         ];\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_range_in_vec_init\n    = note: `#[warn(clippy::single_range_in_vec_init)]` on by default\nhelp: if you wanted a `Vec` that contains the entire range, try\n    |\n441 |         let io_to_be_intercepted = (QEMU_EXIT_PORT..QEMU_EXIT_PORT + 1).collect::<std::vec::Vec<u16>>();\n    |                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 2,
          "kinds": {
            "Cargo": [
              "// pkg_name=x86_vcpu, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_2/arceos-hypervisor/x86_vcpu\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-04-22 18:17:54.811958864 +08:00:00\n    Building x86_vcpu v0.1.0 (current)\n       Built [   4.334s] (current)\n     Parsing x86_vcpu v0.1.0 (current)\n      Parsed [   0.007s] (current)\nerror: x86_vcpu not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n",
              "// pkg_name=x86_vcpu, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_2/arceos-hypervisor/x86_vcpu\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-04-22 18:17:59.800907015 +08:00:00\n    Building x86_vcpu v0.1.0 (current)\n       Built [   2.248s] (current)\n     Parsing x86_vcpu v0.1.0 (current)\n      Parsed [   0.008s] (current)\nerror: x86_vcpu not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "Cargo.lock",
          "features": "",
          "count": 2,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── riscv 0.12.1\n    └── page_table_multiarch 0.5.3\n        └── axaddrspace 0.1.0\n            ├── x86_vcpu 0.1.0\n            └── axvcpu 0.1.0\n                └── x86_vcpu 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 752,\n    \"last-commit\": \"1273f0099ce6882659ff64b852c8fdb5f8cdd5b9\",\n    \"last-updated\": \"2025-04-10T14:29:37+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 39\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}",
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── riscv 0.12.1\n    └── page_table_multiarch 0.5.3\n        └── axaddrspace 0.1.0\n            ├── x86_vcpu 0.1.0\n            └── axvcpu 0.1.0\n                └── x86_vcpu 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 752,\n    \"last-commit\": \"1273f0099ce6882659ff64b852c8fdb5f8cdd5b9\",\n    \"last-updated\": \"2025-04-10T14:29:37+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 39\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 2,
          "kinds": {
            "Semver Violation": [
              "pkg=x86_vcpu, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_2/arceos-hypervisor/x86_vcpu\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-04-22 18:17:59.797822781 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building x86_vcpu v0.1.0 (current)\n       Built [   4.334s] (current)\n     Parsing x86_vcpu v0.1.0 (current)\n      Parsed [   0.007s] (current)\nerror: x86_vcpu not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n",
              "pkg=x86_vcpu, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_2/arceos-hypervisor/x86_vcpu\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-04-22 18:18:02.839475019 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building x86_vcpu v0.1.0 (current)\n       Built [   2.248s] (current)\n     Parsing x86_vcpu v0.1.0 (current)\n      Parsed [   0.008s] (current)\nerror: x86_vcpu not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "src/vmx/vmcs.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Mirai": [
              "warning: [MIRAI] possible attempt to add with overflow\n   --> src/vmx/vmcs.rs:700:22\n    |\n700 |         access_size: qualification.get_bits(0..3) as u8 + 1,\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: [MIRAI] assertion failed\n   --> src/vmx/vmcs.rs:752:5\n    |\n752 | /     set_control(\n753 | |         VmcsControl32::VMENTRY_CONTROLS,\n754 | |         Msr::IA32_VMX_TRUE_ENTRY_CTLS,\n755 | |         VmcsControl32::VMENTRY_CONTROLS.read()?,\n756 | |         (EntryCtrl::IA32E_MODE_GUEST).bits(),\n757 | |         0,\n758 | |     )?;\n    | |_____^\n    |\nnote: related location\n   --> src/vmx/vmcs.rs:599:5\n    |\n599 |     assert_eq!(allowed0 & allowed1, allowed0);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "src/vmx/instructions.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Mirai": [
              "warning: [MIRAI] Inline assembly code cannot be analyzed by MIRAI.\n  --> src/vmx/instructions.rs:47:9\n   |\n47 |         asm!(\"invept {0}, [{1}]\", in(reg) inv_type as u64, in(reg) &invept_desc);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "src/vmx/structs.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Mirai": [
              "warning: [MIRAI] possible attempt to subtract with overflow\n   --> src/vmx/structs.rs:266:53\n    |\n266 |         let aligned_addr = pml4_paddr.as_usize() & !(PAGE_SIZE - 1);\n    |                                                     ^^^^^^^^^^^^^^^\n\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}