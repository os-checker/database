{
  "repo": {
    "user": "arceos-hypervisor",
    "repo": "x86_vcpu"
  },
  "data": [
    {
      "user": "arceos-hypervisor",
      "repo": "x86_vcpu",
      "pkg": "x86_vcpu",
      "count": 83,
      "raw_reports": [
        {
          "file": "src/vmx/vcpu.rs",
          "features": "",
          "count": 66,
          "kinds": {
            "Clippy(Error)": [
              "error: unsafe attribute used without unsafe\n   --> src/vmx/vcpu.rs:894:7\n    |\n894 |     #[naked]\n    |       ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n894 |     #[unsafe(naked)]\n    |       +++++++     +\n\n",
              "error: unsafe attribute used without unsafe\n   --> src/vmx/vcpu.rs:906:7\n    |\n906 |     #[naked]\n    |       ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n906 |     #[unsafe(naked)]\n    |       +++++++     +\n\n",
              "error: unsafe attribute used without unsafe\n   --> src/vmx/vcpu.rs:914:7\n    |\n914 |     #[naked]\n    |       ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n914 |     #[unsafe(naked)]\n    |       +++++++     +\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:629:17\n    |\n629 |                 concat_idents!($seg, _SELECTOR).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n636 |         set_guest_segment!(ES, 0x93); // 16-bit, present, data, read/write, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:630:17\n    |\n630 |                 concat_idents!($seg, _BASE).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n636 |         set_guest_segment!(ES, 0x93); // 16-bit, present, data, read/write, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:631:17\n    |\n631 |                 concat_idents!($seg, _LIMIT).write(0xffff)?;\n    |                 ^^^^^^^^^^^^^\n...\n636 |         set_guest_segment!(ES, 0x93); // 16-bit, present, data, read/write, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:632:17\n    |\n632 |                 concat_idents!($seg, _ACCESS_RIGHTS).write($access_rights)?;\n    |                 ^^^^^^^^^^^^^\n...\n636 |         set_guest_segment!(ES, 0x93); // 16-bit, present, data, read/write, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:629:17\n    |\n629 |                 concat_idents!($seg, _SELECTOR).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n637 |         set_guest_segment!(CS, 0x9b); // 16-bit, present, code, exec/read, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:630:17\n    |\n630 |                 concat_idents!($seg, _BASE).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n637 |         set_guest_segment!(CS, 0x9b); // 16-bit, present, code, exec/read, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:631:17\n    |\n631 |                 concat_idents!($seg, _LIMIT).write(0xffff)?;\n    |                 ^^^^^^^^^^^^^\n...\n637 |         set_guest_segment!(CS, 0x9b); // 16-bit, present, code, exec/read, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:632:17\n    |\n632 |                 concat_idents!($seg, _ACCESS_RIGHTS).write($access_rights)?;\n    |                 ^^^^^^^^^^^^^\n...\n637 |         set_guest_segment!(CS, 0x9b); // 16-bit, present, code, exec/read, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:629:17\n    |\n629 |                 concat_idents!($seg, _SELECTOR).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n638 |         set_guest_segment!(SS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:630:17\n    |\n630 |                 concat_idents!($seg, _BASE).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n638 |         set_guest_segment!(SS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:631:17\n    |\n631 |                 concat_idents!($seg, _LIMIT).write(0xffff)?;\n    |                 ^^^^^^^^^^^^^\n...\n638 |         set_guest_segment!(SS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:632:17\n    |\n632 |                 concat_idents!($seg, _ACCESS_RIGHTS).write($access_rights)?;\n    |                 ^^^^^^^^^^^^^\n...\n638 |         set_guest_segment!(SS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:629:17\n    |\n629 |                 concat_idents!($seg, _SELECTOR).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n639 |         set_guest_segment!(DS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:630:17\n    |\n630 |                 concat_idents!($seg, _BASE).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n639 |         set_guest_segment!(DS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:631:17\n    |\n631 |                 concat_idents!($seg, _LIMIT).write(0xffff)?;\n    |                 ^^^^^^^^^^^^^\n...\n639 |         set_guest_segment!(DS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:632:17\n    |\n632 |                 concat_idents!($seg, _ACCESS_RIGHTS).write($access_rights)?;\n    |                 ^^^^^^^^^^^^^\n...\n639 |         set_guest_segment!(DS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:629:17\n    |\n629 |                 concat_idents!($seg, _SELECTOR).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n640 |         set_guest_segment!(FS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:630:17\n    |\n630 |                 concat_idents!($seg, _BASE).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n640 |         set_guest_segment!(FS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:631:17\n    |\n631 |                 concat_idents!($seg, _LIMIT).write(0xffff)?;\n    |                 ^^^^^^^^^^^^^\n...\n640 |         set_guest_segment!(FS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:632:17\n    |\n632 |                 concat_idents!($seg, _ACCESS_RIGHTS).write($access_rights)?;\n    |                 ^^^^^^^^^^^^^\n...\n640 |         set_guest_segment!(FS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:629:17\n    |\n629 |                 concat_idents!($seg, _SELECTOR).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n641 |         set_guest_segment!(GS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:630:17\n    |\n630 |                 concat_idents!($seg, _BASE).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n641 |         set_guest_segment!(GS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:631:17\n    |\n631 |                 concat_idents!($seg, _LIMIT).write(0xffff)?;\n    |                 ^^^^^^^^^^^^^\n...\n641 |         set_guest_segment!(GS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:632:17\n    |\n632 |                 concat_idents!($seg, _ACCESS_RIGHTS).write($access_rights)?;\n    |                 ^^^^^^^^^^^^^\n...\n641 |         set_guest_segment!(GS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:629:17\n    |\n629 |                 concat_idents!($seg, _SELECTOR).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n642 |         set_guest_segment!(TR, 0x8b); // present, system, 32-bit TSS busy\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:630:17\n    |\n630 |                 concat_idents!($seg, _BASE).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n642 |         set_guest_segment!(TR, 0x8b); // present, system, 32-bit TSS busy\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:631:17\n    |\n631 |                 concat_idents!($seg, _LIMIT).write(0xffff)?;\n    |                 ^^^^^^^^^^^^^\n...\n642 |         set_guest_segment!(TR, 0x8b); // present, system, 32-bit TSS busy\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:632:17\n    |\n632 |                 concat_idents!($seg, _ACCESS_RIGHTS).write($access_rights)?;\n    |                 ^^^^^^^^^^^^^\n...\n642 |         set_guest_segment!(TR, 0x8b); // present, system, 32-bit TSS busy\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:629:17\n    |\n629 |                 concat_idents!($seg, _SELECTOR).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n643 |         set_guest_segment!(LDTR, 0x82); // present, system, LDT\n    |         ------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:630:17\n    |\n630 |                 concat_idents!($seg, _BASE).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n643 |         set_guest_segment!(LDTR, 0x82); // present, system, LDT\n    |         ------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:631:17\n    |\n631 |                 concat_idents!($seg, _LIMIT).write(0xffff)?;\n    |                 ^^^^^^^^^^^^^\n...\n643 |         set_guest_segment!(LDTR, 0x82); // present, system, LDT\n    |         ------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:632:17\n    |\n632 |                 concat_idents!($seg, _ACCESS_RIGHTS).write($access_rights)?;\n    |                 ^^^^^^^^^^^^^\n...\n643 |         set_guest_segment!(LDTR, 0x82); // present, system, LDT\n    |         ------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
            ],
            "Clippy(Warn)": [
              "warning: unused import: `vmx::vcpu`\n  --> src/vmx/vcpu.rs:35:71\n   |\n35 | use crate::{ept::GuestPageWalkInfo, msr::Msr, regs::GeneralRegisters, vmx::vcpu};\n   |                                                                       ^^^^^^^^^\n\n",
              "warning: unused import: `VmcsGuest16::*`\n   --> src/vmx/vcpu.rs:626:21\n    |\n626 |                 use VmcsGuest16::*;\n    |                     ^^^^^^^^^^^^^^\n...\n636 |         set_guest_segment!(ES, 0x93); // 16-bit, present, data, read/write, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unused import: `VmcsGuest32::*`\n   --> src/vmx/vcpu.rs:627:21\n    |\n627 |                 use VmcsGuest32::*;\n    |                     ^^^^^^^^^^^^^^\n...\n636 |         set_guest_segment!(ES, 0x93); // 16-bit, present, data, read/write, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unused import: `VmcsGuestNW::*`\n   --> src/vmx/vcpu.rs:628:21\n    |\n628 |                 use VmcsGuestNW::*;\n    |                     ^^^^^^^^^^^^^^\n...\n636 |         set_guest_segment!(ES, 0x93); // 16-bit, present, data, read/write, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unused import: `VmcsGuest16::*`\n   --> src/vmx/vcpu.rs:626:21\n    |\n626 |                 use VmcsGuest16::*;\n    |                     ^^^^^^^^^^^^^^\n...\n637 |         set_guest_segment!(CS, 0x9b); // 16-bit, present, code, exec/read, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unused import: `VmcsGuest32::*`\n   --> src/vmx/vcpu.rs:627:21\n    |\n627 |                 use VmcsGuest32::*;\n    |                     ^^^^^^^^^^^^^^\n...\n637 |         set_guest_segment!(CS, 0x9b); // 16-bit, present, code, exec/read, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unused import: `VmcsGuestNW::*`\n   --> src/vmx/vcpu.rs:628:21\n    |\n628 |                 use VmcsGuestNW::*;\n    |                     ^^^^^^^^^^^^^^\n...\n637 |         set_guest_segment!(CS, 0x9b); // 16-bit, present, code, exec/read, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unused import: `VmcsGuest16::*`\n   --> src/vmx/vcpu.rs:626:21\n    |\n626 |                 use VmcsGuest16::*;\n    |                     ^^^^^^^^^^^^^^\n...\n638 |         set_guest_segment!(SS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unused import: `VmcsGuest32::*`\n   --> src/vmx/vcpu.rs:627:21\n    |\n627 |                 use VmcsGuest32::*;\n    |                     ^^^^^^^^^^^^^^\n...\n638 |         set_guest_segment!(SS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unused import: `VmcsGuestNW::*`\n   --> src/vmx/vcpu.rs:628:21\n    |\n628 |                 use VmcsGuestNW::*;\n    |                     ^^^^^^^^^^^^^^\n...\n638 |         set_guest_segment!(SS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unused import: `VmcsGuest16::*`\n   --> src/vmx/vcpu.rs:626:21\n    |\n626 |                 use VmcsGuest16::*;\n    |                     ^^^^^^^^^^^^^^\n...\n639 |         set_guest_segment!(DS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unused import: `VmcsGuest32::*`\n   --> src/vmx/vcpu.rs:627:21\n    |\n627 |                 use VmcsGuest32::*;\n    |                     ^^^^^^^^^^^^^^\n...\n639 |         set_guest_segment!(DS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unused import: `VmcsGuestNW::*`\n   --> src/vmx/vcpu.rs:628:21\n    |\n628 |                 use VmcsGuestNW::*;\n    |                     ^^^^^^^^^^^^^^\n...\n639 |         set_guest_segment!(DS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unused import: `VmcsGuest16::*`\n   --> src/vmx/vcpu.rs:626:21\n    |\n626 |                 use VmcsGuest16::*;\n    |                     ^^^^^^^^^^^^^^\n...\n640 |         set_guest_segment!(FS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unused import: `VmcsGuest32::*`\n   --> src/vmx/vcpu.rs:627:21\n    |\n627 |                 use VmcsGuest32::*;\n    |                     ^^^^^^^^^^^^^^\n...\n640 |         set_guest_segment!(FS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unused import: `VmcsGuestNW::*`\n   --> src/vmx/vcpu.rs:628:21\n    |\n628 |                 use VmcsGuestNW::*;\n    |                     ^^^^^^^^^^^^^^\n...\n640 |         set_guest_segment!(FS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unused import: `VmcsGuest16::*`\n   --> src/vmx/vcpu.rs:626:21\n    |\n626 |                 use VmcsGuest16::*;\n    |                     ^^^^^^^^^^^^^^\n...\n641 |         set_guest_segment!(GS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unused import: `VmcsGuest32::*`\n   --> src/vmx/vcpu.rs:627:21\n    |\n627 |                 use VmcsGuest32::*;\n    |                     ^^^^^^^^^^^^^^\n...\n641 |         set_guest_segment!(GS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unused import: `VmcsGuestNW::*`\n   --> src/vmx/vcpu.rs:628:21\n    |\n628 |                 use VmcsGuestNW::*;\n    |                     ^^^^^^^^^^^^^^\n...\n641 |         set_guest_segment!(GS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unused import: `VmcsGuest16::*`\n   --> src/vmx/vcpu.rs:626:21\n    |\n626 |                 use VmcsGuest16::*;\n    |                     ^^^^^^^^^^^^^^\n...\n642 |         set_guest_segment!(TR, 0x8b); // present, system, 32-bit TSS busy\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unused import: `VmcsGuest32::*`\n   --> src/vmx/vcpu.rs:627:21\n    |\n627 |                 use VmcsGuest32::*;\n    |                     ^^^^^^^^^^^^^^\n...\n642 |         set_guest_segment!(TR, 0x8b); // present, system, 32-bit TSS busy\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unused import: `VmcsGuestNW::*`\n   --> src/vmx/vcpu.rs:628:21\n    |\n628 |                 use VmcsGuestNW::*;\n    |                     ^^^^^^^^^^^^^^\n...\n642 |         set_guest_segment!(TR, 0x8b); // present, system, 32-bit TSS busy\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unused import: `VmcsGuest16::*`\n   --> src/vmx/vcpu.rs:626:21\n    |\n626 |                 use VmcsGuest16::*;\n    |                     ^^^^^^^^^^^^^^\n...\n643 |         set_guest_segment!(LDTR, 0x82); // present, system, LDT\n    |         ------------------------------ in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unused import: `VmcsGuest32::*`\n   --> src/vmx/vcpu.rs:627:21\n    |\n627 |                 use VmcsGuest32::*;\n    |                     ^^^^^^^^^^^^^^\n...\n643 |         set_guest_segment!(LDTR, 0x82); // present, system, LDT\n    |         ------------------------------ in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unused import: `VmcsGuestNW::*`\n   --> src/vmx/vcpu.rs:628:21\n    |\n628 |                 use VmcsGuestNW::*;\n    |                     ^^^^^^^^^^^^^^\n...\n643 |         set_guest_segment!(LDTR, 0x82); // present, system, LDT\n    |         ------------------------------ in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unreachable expression\n    --> src/vmx/vcpu.rs:1059:9\n     |\n1056 |         unimplemented!(\"apic access\");\n     |         ----------------------------- any code following this expression is unreachable\n...\n1059 |         self.advance_rip(exit_info.exit_instruction_length as _)\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable expression\n     |\n     = note: `#[warn(unreachable_code)]` on by default\n\n",
              "warning: unnecessary `unsafe` block\n   --> src/vmx/vcpu.rs:877:9\n    |\n877 |         unsafe {\n    |         ^^^^^^ unnecessary `unsafe` block\n...\n903 |         vmx_entry_with!(\"vmlaunch\")\n    |         --------------------------- in this macro invocation\n    |\n    = note: `#[warn(unused_unsafe)]` on by default\n    = note: this warning originates in the macro `vmx_entry_with` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unnecessary `unsafe` block\n   --> src/vmx/vcpu.rs:877:9\n    |\n877 |         unsafe {\n    |         ^^^^^^ unnecessary `unsafe` block\n...\n911 |         vmx_entry_with!(\"vmresume\")\n    |         --------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `vmx_entry_with` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unnecessary `unsafe` block\n   --> src/vmx/vcpu.rs:921:9\n    |\n921 |         unsafe {\n    |         ^^^^^^ unnecessary `unsafe` block\n\n",
              "warning: unused variable: `write`\n    --> src/vmx/vcpu.rs:1044:13\n     |\n1044 |         let write = match apic_access_exit_info.access_type {\n     |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_write`\n     |\n     = note: `#[warn(unused_variables)]` on by default\n\n",
              "warning: unused variable: `exit_info`\n    --> src/vmx/vcpu.rs:1041:38\n     |\n1041 |     fn handle_apic_access(&mut self, exit_info: &VmxExitInfo) -> AxResult {\n     |                                      ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_exit_info`\n\n"
            ]
          }
        },
        {
          "file": "src/vmx/percpu.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Clippy(Error)": [
              "error: cannot find macro `concat_idents` in this scope\n  --> src/vmx/percpu.rs:72:30\n   |\n72 |                 let fixed1 = concat_idents!(IA32_VMX_, $crx, _FIXED1).read();\n   |                              ^^^^^^^^^^^^^\n...\n79 |         if !cr_is_valid!(Cr4::read().bits(), CR4) {\n   |             ------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `cr_is_valid` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n  --> src/vmx/percpu.rs:71:30\n   |\n71 |                 let fixed0 = concat_idents!(IA32_VMX_, $crx, _FIXED0).read();\n   |                              ^^^^^^^^^^^^^\n...\n79 |         if !cr_is_valid!(Cr4::read().bits(), CR4) {\n   |             ------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `cr_is_valid` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n  --> src/vmx/percpu.rs:72:30\n   |\n72 |                 let fixed1 = concat_idents!(IA32_VMX_, $crx, _FIXED1).read();\n   |                              ^^^^^^^^^^^^^\n...\n76 |         if !cr_is_valid!(Cr0::read().bits(), CR0) {\n   |             ------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `cr_is_valid` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `concat_idents` in this scope\n  --> src/vmx/percpu.rs:71:30\n   |\n71 |                 let fixed0 = concat_idents!(IA32_VMX_, $crx, _FIXED0).read();\n   |                              ^^^^^^^^^^^^^\n...\n76 |         if !cr_is_valid!(Cr0::read().bits(), CR0) {\n   |             ------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `cr_is_valid` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
            ],
            "Clippy(Warn)": [
              "warning: unused import: `Msr::*`\n  --> src/vmx/percpu.rs:69:21\n   |\n69 |                 use Msr::*;\n   |                     ^^^^^^\n...\n76 |         if !cr_is_valid!(Cr0::read().bits(), CR0) {\n   |             ------------------------------------- in this macro invocation\n   |\n   = note: `#[warn(unused_imports)]` on by default\n   = note: this warning originates in the macro `cr_is_valid` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: unused import: `Msr::*`\n  --> src/vmx/percpu.rs:69:21\n   |\n69 |                 use Msr::*;\n   |                     ^^^^^^\n...\n79 |         if !cr_is_valid!(Cr4::read().bits(), CR4) {\n   |             ------------------------------------- in this macro invocation\n   |\n   = note: this warning originates in the macro `cr_is_valid` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
            ]
          }
        },
        {
          "file": "src/lib.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: the feature `naked_functions` has been stable since 1.88.0 and no longer requires an attribute to enable\n --> src/lib.rs:4:12\n  |\n4 | #![feature(naked_functions)]\n  |            ^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
            ],
            "Clippy(Error)": [
              "error[E0557]: feature has been removed\n --> src/lib.rs:3:12\n  |\n3 | #![feature(concat_idents)]\n  |            ^^^^^^^^^^^^^ feature has been removed\n  |\n  = note: removed in CURRENT_RUSTC_VERSION; see <https://github.com/rust-lang/rust/pull/142704> for more information\n  = note: use the `${concat(..)}` metavariable expression instead\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/src/lazy.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/src/lazy.rs:36:23: 36:43 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/src/lazy.rs:39:13: 39:39 (#0)\",\n    \"dep_kind\": \"Both\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=x86_vcpu, checker=Clippy\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/arceos-hypervisor/x86_vcpu\n// cmd=cargo clippy --target x86_64-unknown-none  --no-deps\n// timestamp=2025-07-13 4:33:17.063689732 +08:00:00\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling libc v0.2.174\n   Compiling crunchy v0.2.4\n    Checking cfg-if v1.0.1\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling tiny-keccak v2.0.2\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.12\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.104\n   Compiling rustversion v1.0.21\n   Compiling getrandom v0.2.16\n   Compiling x86 v0.52.0\n   Compiling once_cell v1.21.3\n    Checking bitflags v1.3.2\n   Compiling serde v1.0.219\n   Compiling version_check v0.9.5\n    Checking bitflags v2.9.1\n   Compiling zerocopy v0.8.26\n   Compiling ahash v0.8.12\n   Compiling const-random-macro v0.1.16\n   Compiling toml_edit v0.22.27\n    Checking raw-cpuid v10.7.0\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.4.0\n    Checking log v0.4.27\n    Checking volatile v0.4.6\n    Checking x86_64 v0.15.2\n   Compiling proc-macro-crate v3.3.0\n    Checking const-random v0.1.18\n    Checking page_table_entry v0.5.5\n    Checking allocator-api2 v0.2.21\n    Checking page_table_multiarch v0.5.5\n    Checking hashbrown v0.14.5\n    Checking memory_set v0.4.0\n    Checking winnow v0.6.26\n   Compiling serde_derive v1.0.219\n    Checking numeric-enum-macro v0.2.0\n    Checking lazyinit v0.2.2\n    Checking axaddrspace v0.1.0 (https://github.com/arceos-hypervisor/axaddrspace.git#2d8f6df5)\n   Compiling enumerable_derive v1.2.0\n   Compiling crate_interface v0.1.4\n   Compiling serde_repr v0.1.20\n   Compiling axvisor_api_proc v0.1.0 (https://github.com/arceos-hypervisor/axvisor_api.git#4102b0a4)\n   Compiling paste v1.0.15\n    Checking enumerable v1.2.0\n   Compiling percpu v0.2.0\n   Compiling percpu_macros v0.2.0\n    Checking axvisor_api v0.1.0 (https://github.com/arceos-hypervisor/axvisor_api.git#4102b0a4)\n    Checking tock-registers v0.10.0\n    Checking bit v0.1.1\n    Checking raw-cpuid v11.5.0\n    Checking axvcpu v0.1.0 (https://github.com/arceos-hypervisor/axvcpu.git#0dae8925)\n    Checking serde_spanned v0.6.6 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n    Checking toml_datetime v0.6.6 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n    Checking toml_edit v0.22.15 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n    Checking toml v0.8.14 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n    Checking axvmconfig v0.1.0 (https://github.com/arceos-hypervisor/axvmconfig.git#1b9435fd)\n    Checking axdevice_base v0.1.0 (https://github.com/arceos-hypervisor/axdevice_crates.git#09fe1c30)\n    Checking x86_vlapic v0.1.0 (https://github.com/arceos-hypervisor/x86_vlapic.git#1f3edfb0)\n    Checking x86_vcpu v0.1.0 (/home/runner/check/batch_1/arceos-hypervisor/x86_vcpu)\nerror: could not compile `x86_vcpu` (lib) due to 40 previous errors; 34 warnings emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=x86_vcpu, checker=SemverChecks\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/arceos-hypervisor/x86_vcpu\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-07-13 4:33:35.285175807 +08:00:00\n    Building x86_vcpu v0.1.0 (current)\nerror: running cargo-doc on crate 'x86_vcpu' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling crunchy v0.2.4\n   Compiling libc v0.2.174\n    Checking cfg-if v1.0.1\n   Compiling equivalent v1.0.2\n   Compiling tiny-keccak v2.0.2\n   Compiling hashbrown v0.15.4\n    Checking bit_field v0.10.2\n   Compiling winnow v0.7.12\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling indexmap v2.10.0\n   Compiling rustversion v1.0.21\n   Compiling toml_datetime v0.6.11\n   Compiling getrandom v0.2.16\n    Checking bitflags v1.3.2\n   Compiling x86 v0.52.0\n   Compiling serde v1.0.219\n   Compiling zerocopy v0.8.26\n   Compiling toml_edit v0.22.27\n    Checking bitflags v2.9.1\n   Compiling once_cell v1.21.3\n   Compiling version_check v0.9.5\n   Compiling const-random-macro v0.1.16\n   Compiling ahash v0.8.12\n    Checking raw-cpuid v10.7.0\n    Checking log v0.4.27\n    Checking volatile v0.4.6\n    Checking memory_addr v0.4.0\n   Compiling axerrno v0.1.0\n    Checking x86_64 v0.15.2\n   Compiling proc-macro-crate v3.3.0\n    Checking const-random v0.1.18\n    Checking page_table_entry v0.5.5\n    Checking allocator-api2 v0.2.21\n    Checking page_table_multiarch v0.5.5\n    Checking memory_set v0.4.0\n   Compiling serde_derive v1.0.219\n    Checking numeric-enum-macro v0.2.0\n    Checking lazyinit v0.2.2\n    Checking hashbrown v0.14.5\n    Checking winnow v0.6.26\n    Checking axaddrspace v0.1.0 (https://github.com/arceos-hypervisor/axaddrspace.git#2d8f6df5)\n   Compiling enumerable_derive v1.2.0\n   Compiling axvisor_api_proc v0.1.0 (https://github.com/arceos-hypervisor/axvisor_api.git#4102b0a4)\n   Compiling serde_repr v0.1.20\n   Compiling crate_interface v0.1.4\n    Checking enumerable v1.2.0\n   Compiling paste v1.0.15\n   Compiling percpu v0.2.0\n    Checking axvisor_api v0.1.0 (https://github.com/arceos-hypervisor/axvisor_api.git#4102b0a4)\n   Compiling percpu_macros v0.2.0\n    Checking tock-registers v0.10.0\n    Checking bit v0.1.1\n    Checking raw-cpuid v11.5.0\n    Checking axvcpu v0.1.0 (https://github.com/arceos-hypervisor/axvcpu.git#0dae8925)\n    Checking toml_datetime v0.6.6 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n    Checking serde_spanned v0.6.6 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n    Checking toml_edit v0.22.15 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n    Checking toml v0.8.14 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n    Checking axvmconfig v0.1.0 (https://github.com/arceos-hypervisor/axvmconfig.git#1b9435fd)\n    Checking axdevice_base v0.1.0 (https://github.com/arceos-hypervisor/axdevice_crates.git#09fe1c30)\n    Checking x86_vlapic v0.1.0 (https://github.com/arceos-hypervisor/x86_vlapic.git#1f3edfb0)\n Documenting x86_vcpu v0.1.0 (/home/runner/check/batch_1/arceos-hypervisor/x86_vcpu)\nerror[E0557]: feature has been removed\n --> /home/runner/check/batch_1/arceos-hypervisor/x86_vcpu/src/lib.rs:3:12\n  |\n3 | #![feature(concat_idents)]\n  |            ^^^^^^^^^^^^^ feature has been removed\n  |\n  = note: removed in CURRENT_RUSTC_VERSION; see <https://github.com/rust-lang/rust/pull/142704> for more information\n  = note: use the `${concat(..)}` metavariable expression instead\n\nerror: Compilation failed, aborting rustdoc\n\nFor more information about this error, try `rustc --explain E0557`.\nerror: could not document `x86_vcpu`\n\n-----\n\nerror: failed to build rustdoc for crate x86_vcpu v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/arceos-hypervisor/x86_vcpu --features amd,default,tracing,vmx &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate x86_vcpu v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=x86_vcpu, checker=Udeps\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/arceos-hypervisor/x86_vcpu\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-07-13 4:35:01.340900672 +08:00:00\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling libc v0.2.174\n   Compiling crunchy v0.2.4\n   Compiling tiny-keccak v2.0.2\n    Checking cfg-if v1.0.1\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling winnow v0.7.12\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling indexmap v2.10.0\n   Compiling rustversion v1.0.21\n    Checking bit_field v0.10.2\n   Compiling toml_datetime v0.6.11\n   Compiling getrandom v0.2.16\n   Compiling serde v1.0.219\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.27\n   Compiling once_cell v1.21.3\n    Checking bitflags v2.9.1\n    Checking bitflags v1.3.2\n   Compiling zerocopy v0.8.26\n   Compiling version_check v0.9.5\n   Compiling ahash v0.8.12\n    Checking raw-cpuid v10.7.0\n   Compiling const-random-macro v0.1.16\n    Checking log v0.4.27\n    Checking memory_addr v0.4.0\n   Compiling proc-macro-crate v3.3.0\n   Compiling axerrno v0.1.0\n    Checking volatile v0.4.6\n    Checking x86_64 v0.15.2\n    Checking const-random v0.1.18\n    Checking page_table_entry v0.5.5\n    Checking allocator-api2 v0.2.21\n    Checking page_table_multiarch v0.5.5\n    Checking memory_set v0.4.0\n    Checking numeric-enum-macro v0.2.0\n    Checking lazyinit v0.2.2\n    Checking winnow v0.6.26\n   Compiling serde_derive v1.0.219\n    Checking hashbrown v0.14.5\n   Compiling enumerable_derive v1.2.0\n    Checking axaddrspace v0.1.0 (https://github.com/arceos-hypervisor/axaddrspace.git#2d8f6df5)\n   Compiling crate_interface v0.1.4\n   Compiling serde_repr v0.1.20\n   Compiling axvisor_api_proc v0.1.0 (https://github.com/arceos-hypervisor/axvisor_api.git#4102b0a4)\n    Checking enumerable v1.2.0\n   Compiling paste v1.0.15\n   Compiling percpu v0.2.0\n   Compiling percpu_macros v0.2.0\n    Checking axvisor_api v0.1.0 (https://github.com/arceos-hypervisor/axvisor_api.git#4102b0a4)\n    Checking bit v0.1.1\n    Checking tock-registers v0.10.0\n    Checking raw-cpuid v11.5.0\n    Checking axvcpu v0.1.0 (https://github.com/arceos-hypervisor/axvcpu.git#0dae8925)\n    Checking toml_datetime v0.6.6 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n    Checking serde_spanned v0.6.6 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n    Checking toml_edit v0.22.15 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n    Checking toml v0.8.14 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n    Checking axvmconfig v0.1.0 (https://github.com/arceos-hypervisor/axvmconfig.git#1b9435fd)\n    Checking axdevice_base v0.1.0 (https://github.com/arceos-hypervisor/axdevice_crates.git#09fe1c30)\n    Checking x86_vlapic v0.1.0 (https://github.com/arceos-hypervisor/x86_vlapic.git#1f3edfb0)\n    Checking x86_vcpu v0.1.0 (/home/runner/check/batch_1/arceos-hypervisor/x86_vcpu)\nerror[E0557]: feature has been removed\n --> src/lib.rs:3:12\n  |\n3 | #![feature(concat_idents)]\n  |            ^^^^^^^^^^^^^ feature has been removed\n  |\n  = note: removed in CURRENT_RUSTC_VERSION; see <https://github.com/rust-lang/rust/pull/142704> for more information\n  = note: use the `${concat(..)}` metavariable expression instead\n\nerror: unsafe attribute used without unsafe\n   --> src/vmx/vcpu.rs:894:7\n    |\n894 |     #[naked]\n    |       ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n894 |     #[unsafe(naked)]\n    |       +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> src/vmx/vcpu.rs:906:7\n    |\n906 |     #[naked]\n    |       ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n906 |     #[unsafe(naked)]\n    |       +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> src/vmx/vcpu.rs:914:7\n    |\n914 |     #[naked]\n    |       ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n914 |     #[unsafe(naked)]\n    |       +++++++     +\n\nerror: cannot find macro `concat_idents` in this scope\n  --> src/vmx/percpu.rs:72:30\n   |\n72 |                 let fixed1 = concat_idents!(IA32_VMX_, $crx, _FIXED1).read();\n   |                              ^^^^^^^^^^^^^\n...\n79 |         if !cr_is_valid!(Cr4::read().bits(), CR4) {\n   |             ------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `cr_is_valid` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n  --> src/vmx/percpu.rs:71:30\n   |\n71 |                 let fixed0 = concat_idents!(IA32_VMX_, $crx, _FIXED0).read();\n   |                              ^^^^^^^^^^^^^\n...\n79 |         if !cr_is_valid!(Cr4::read().bits(), CR4) {\n   |             ------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `cr_is_valid` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n  --> src/vmx/percpu.rs:72:30\n   |\n72 |                 let fixed1 = concat_idents!(IA32_VMX_, $crx, _FIXED1).read();\n   |                              ^^^^^^^^^^^^^\n...\n76 |         if !cr_is_valid!(Cr0::read().bits(), CR0) {\n   |             ------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `cr_is_valid` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n  --> src/vmx/percpu.rs:71:30\n   |\n71 |                 let fixed0 = concat_idents!(IA32_VMX_, $crx, _FIXED0).read();\n   |                              ^^^^^^^^^^^^^\n...\n76 |         if !cr_is_valid!(Cr0::read().bits(), CR0) {\n   |             ------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `cr_is_valid` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:629:17\n    |\n629 |                 concat_idents!($seg, _SELECTOR).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n636 |         set_guest_segment!(ES, 0x93); // 16-bit, present, data, read/write, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:630:17\n    |\n630 |                 concat_idents!($seg, _BASE).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n636 |         set_guest_segment!(ES, 0x93); // 16-bit, present, data, read/write, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:631:17\n    |\n631 |                 concat_idents!($seg, _LIMIT).write(0xffff)?;\n    |                 ^^^^^^^^^^^^^\n...\n636 |         set_guest_segment!(ES, 0x93); // 16-bit, present, data, read/write, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:632:17\n    |\n632 |                 concat_idents!($seg, _ACCESS_RIGHTS).write($access_rights)?;\n    |                 ^^^^^^^^^^^^^\n...\n636 |         set_guest_segment!(ES, 0x93); // 16-bit, present, data, read/write, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:629:17\n    |\n629 |                 concat_idents!($seg, _SELECTOR).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n637 |         set_guest_segment!(CS, 0x9b); // 16-bit, present, code, exec/read, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:630:17\n    |\n630 |                 concat_idents!($seg, _BASE).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n637 |         set_guest_segment!(CS, 0x9b); // 16-bit, present, code, exec/read, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:631:17\n    |\n631 |                 concat_idents!($seg, _LIMIT).write(0xffff)?;\n    |                 ^^^^^^^^^^^^^\n...\n637 |         set_guest_segment!(CS, 0x9b); // 16-bit, present, code, exec/read, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:632:17\n    |\n632 |                 concat_idents!($seg, _ACCESS_RIGHTS).write($access_rights)?;\n    |                 ^^^^^^^^^^^^^\n...\n637 |         set_guest_segment!(CS, 0x9b); // 16-bit, present, code, exec/read, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:629:17\n    |\n629 |                 concat_idents!($seg, _SELECTOR).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n638 |         set_guest_segment!(SS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:630:17\n    |\n630 |                 concat_idents!($seg, _BASE).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n638 |         set_guest_segment!(SS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:631:17\n    |\n631 |                 concat_idents!($seg, _LIMIT).write(0xffff)?;\n    |                 ^^^^^^^^^^^^^\n...\n638 |         set_guest_segment!(SS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:632:17\n    |\n632 |                 concat_idents!($seg, _ACCESS_RIGHTS).write($access_rights)?;\n    |                 ^^^^^^^^^^^^^\n...\n638 |         set_guest_segment!(SS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:629:17\n    |\n629 |                 concat_idents!($seg, _SELECTOR).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n639 |         set_guest_segment!(DS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:630:17\n    |\n630 |                 concat_idents!($seg, _BASE).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n639 |         set_guest_segment!(DS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:631:17\n    |\n631 |                 concat_idents!($seg, _LIMIT).write(0xffff)?;\n    |                 ^^^^^^^^^^^^^\n...\n639 |         set_guest_segment!(DS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:632:17\n    |\n632 |                 concat_idents!($seg, _ACCESS_RIGHTS).write($access_rights)?;\n    |                 ^^^^^^^^^^^^^\n...\n639 |         set_guest_segment!(DS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:629:17\n    |\n629 |                 concat_idents!($seg, _SELECTOR).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n640 |         set_guest_segment!(FS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:630:17\n    |\n630 |                 concat_idents!($seg, _BASE).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n640 |         set_guest_segment!(FS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:631:17\n    |\n631 |                 concat_idents!($seg, _LIMIT).write(0xffff)?;\n    |                 ^^^^^^^^^^^^^\n...\n640 |         set_guest_segment!(FS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:632:17\n    |\n632 |                 concat_idents!($seg, _ACCESS_RIGHTS).write($access_rights)?;\n    |                 ^^^^^^^^^^^^^\n...\n640 |         set_guest_segment!(FS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:629:17\n    |\n629 |                 concat_idents!($seg, _SELECTOR).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n641 |         set_guest_segment!(GS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:630:17\n    |\n630 |                 concat_idents!($seg, _BASE).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n641 |         set_guest_segment!(GS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:631:17\n    |\n631 |                 concat_idents!($seg, _LIMIT).write(0xffff)?;\n    |                 ^^^^^^^^^^^^^\n...\n641 |         set_guest_segment!(GS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:632:17\n    |\n632 |                 concat_idents!($seg, _ACCESS_RIGHTS).write($access_rights)?;\n    |                 ^^^^^^^^^^^^^\n...\n641 |         set_guest_segment!(GS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:629:17\n    |\n629 |                 concat_idents!($seg, _SELECTOR).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n642 |         set_guest_segment!(TR, 0x8b); // present, system, 32-bit TSS busy\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:630:17\n    |\n630 |                 concat_idents!($seg, _BASE).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n642 |         set_guest_segment!(TR, 0x8b); // present, system, 32-bit TSS busy\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:631:17\n    |\n631 |                 concat_idents!($seg, _LIMIT).write(0xffff)?;\n    |                 ^^^^^^^^^^^^^\n...\n642 |         set_guest_segment!(TR, 0x8b); // present, system, 32-bit TSS busy\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:632:17\n    |\n632 |                 concat_idents!($seg, _ACCESS_RIGHTS).write($access_rights)?;\n    |                 ^^^^^^^^^^^^^\n...\n642 |         set_guest_segment!(TR, 0x8b); // present, system, 32-bit TSS busy\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:629:17\n    |\n629 |                 concat_idents!($seg, _SELECTOR).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n643 |         set_guest_segment!(LDTR, 0x82); // present, system, LDT\n    |         ------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:630:17\n    |\n630 |                 concat_idents!($seg, _BASE).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n643 |         set_guest_segment!(LDTR, 0x82); // present, system, LDT\n    |         ------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:631:17\n    |\n631 |                 concat_idents!($seg, _LIMIT).write(0xffff)?;\n    |                 ^^^^^^^^^^^^^\n...\n643 |         set_guest_segment!(LDTR, 0x82); // present, system, LDT\n    |         ------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:632:17\n    |\n632 |                 concat_idents!($seg, _ACCESS_RIGHTS).write($access_rights)?;\n    |                 ^^^^^^^^^^^^^\n...\n643 |         set_guest_segment!(LDTR, 0x82); // present, system, LDT\n    |         ------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `Msr::*`\n  --> src/vmx/percpu.rs:69:21\n   |\n69 |                 use Msr::*;\n   |                     ^^^^^^\n...\n76 |         if !cr_is_valid!(Cr0::read().bits(), CR0) {\n   |             ------------------------------------- in this macro invocation\n   |\n   = note: `#[warn(unused_imports)]` on by default\n   = note: this warning originates in the macro `cr_is_valid` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `Msr::*`\n  --> src/vmx/percpu.rs:69:21\n   |\n69 |                 use Msr::*;\n   |                     ^^^^^^\n...\n79 |         if !cr_is_valid!(Cr4::read().bits(), CR4) {\n   |             ------------------------------------- in this macro invocation\n   |\n   = note: this warning originates in the macro `cr_is_valid` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `vmx::vcpu`\n  --> src/vmx/vcpu.rs:35:71\n   |\n35 | use crate::{ept::GuestPageWalkInfo, msr::Msr, regs::GeneralRegisters, vmx::vcpu};\n   |                                                                       ^^^^^^^^^\n\nwarning: unused import: `VmcsGuest16::*`\n   --> src/vmx/vcpu.rs:626:21\n    |\n626 |                 use VmcsGuest16::*;\n    |                     ^^^^^^^^^^^^^^\n...\n636 |         set_guest_segment!(ES, 0x93); // 16-bit, present, data, read/write, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest32::*`\n   --> src/vmx/vcpu.rs:627:21\n    |\n627 |                 use VmcsGuest32::*;\n    |                     ^^^^^^^^^^^^^^\n...\n636 |         set_guest_segment!(ES, 0x93); // 16-bit, present, data, read/write, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuestNW::*`\n   --> src/vmx/vcpu.rs:628:21\n    |\n628 |                 use VmcsGuestNW::*;\n    |                     ^^^^^^^^^^^^^^\n...\n636 |         set_guest_segment!(ES, 0x93); // 16-bit, present, data, read/write, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest16::*`\n   --> src/vmx/vcpu.rs:626:21\n    |\n626 |                 use VmcsGuest16::*;\n    |                     ^^^^^^^^^^^^^^\n...\n637 |         set_guest_segment!(CS, 0x9b); // 16-bit, present, code, exec/read, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest32::*`\n   --> src/vmx/vcpu.rs:627:21\n    |\n627 |                 use VmcsGuest32::*;\n    |                     ^^^^^^^^^^^^^^\n...\n637 |         set_guest_segment!(CS, 0x9b); // 16-bit, present, code, exec/read, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuestNW::*`\n   --> src/vmx/vcpu.rs:628:21\n    |\n628 |                 use VmcsGuestNW::*;\n    |                     ^^^^^^^^^^^^^^\n...\n637 |         set_guest_segment!(CS, 0x9b); // 16-bit, present, code, exec/read, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest16::*`\n   --> src/vmx/vcpu.rs:626:21\n    |\n626 |                 use VmcsGuest16::*;\n    |                     ^^^^^^^^^^^^^^\n...\n638 |         set_guest_segment!(SS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest32::*`\n   --> src/vmx/vcpu.rs:627:21\n    |\n627 |                 use VmcsGuest32::*;\n    |                     ^^^^^^^^^^^^^^\n...\n638 |         set_guest_segment!(SS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuestNW::*`\n   --> src/vmx/vcpu.rs:628:21\n    |\n628 |                 use VmcsGuestNW::*;\n    |                     ^^^^^^^^^^^^^^\n...\n638 |         set_guest_segment!(SS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest16::*`\n   --> src/vmx/vcpu.rs:626:21\n    |\n626 |                 use VmcsGuest16::*;\n    |                     ^^^^^^^^^^^^^^\n...\n639 |         set_guest_segment!(DS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest32::*`\n   --> src/vmx/vcpu.rs:627:21\n    |\n627 |                 use VmcsGuest32::*;\n    |                     ^^^^^^^^^^^^^^\n...\n639 |         set_guest_segment!(DS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuestNW::*`\n   --> src/vmx/vcpu.rs:628:21\n    |\n628 |                 use VmcsGuestNW::*;\n    |                     ^^^^^^^^^^^^^^\n...\n639 |         set_guest_segment!(DS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest16::*`\n   --> src/vmx/vcpu.rs:626:21\n    |\n626 |                 use VmcsGuest16::*;\n    |                     ^^^^^^^^^^^^^^\n...\n640 |         set_guest_segment!(FS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest32::*`\n   --> src/vmx/vcpu.rs:627:21\n    |\n627 |                 use VmcsGuest32::*;\n    |                     ^^^^^^^^^^^^^^\n...\n640 |         set_guest_segment!(FS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuestNW::*`\n   --> src/vmx/vcpu.rs:628:21\n    |\n628 |                 use VmcsGuestNW::*;\n    |                     ^^^^^^^^^^^^^^\n...\n640 |         set_guest_segment!(FS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest16::*`\n   --> src/vmx/vcpu.rs:626:21\n    |\n626 |                 use VmcsGuest16::*;\n    |                     ^^^^^^^^^^^^^^\n...\n641 |         set_guest_segment!(GS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest32::*`\n   --> src/vmx/vcpu.rs:627:21\n    |\n627 |                 use VmcsGuest32::*;\n    |                     ^^^^^^^^^^^^^^\n...\n641 |         set_guest_segment!(GS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuestNW::*`\n   --> src/vmx/vcpu.rs:628:21\n    |\n628 |                 use VmcsGuestNW::*;\n    |                     ^^^^^^^^^^^^^^\n...\n641 |         set_guest_segment!(GS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest16::*`\n   --> src/vmx/vcpu.rs:626:21\n    |\n626 |                 use VmcsGuest16::*;\n    |                     ^^^^^^^^^^^^^^\n...\n642 |         set_guest_segment!(TR, 0x8b); // present, system, 32-bit TSS busy\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest32::*`\n   --> src/vmx/vcpu.rs:627:21\n    |\n627 |                 use VmcsGuest32::*;\n    |                     ^^^^^^^^^^^^^^\n...\n642 |         set_guest_segment!(TR, 0x8b); // present, system, 32-bit TSS busy\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuestNW::*`\n   --> src/vmx/vcpu.rs:628:21\n    |\n628 |                 use VmcsGuestNW::*;\n    |                     ^^^^^^^^^^^^^^\n...\n642 |         set_guest_segment!(TR, 0x8b); // present, system, 32-bit TSS busy\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest16::*`\n   --> src/vmx/vcpu.rs:626:21\n    |\n626 |                 use VmcsGuest16::*;\n    |                     ^^^^^^^^^^^^^^\n...\n643 |         set_guest_segment!(LDTR, 0x82); // present, system, LDT\n    |         ------------------------------ in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest32::*`\n   --> src/vmx/vcpu.rs:627:21\n    |\n627 |                 use VmcsGuest32::*;\n    |                     ^^^^^^^^^^^^^^\n...\n643 |         set_guest_segment!(LDTR, 0x82); // present, system, LDT\n    |         ------------------------------ in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuestNW::*`\n   --> src/vmx/vcpu.rs:628:21\n    |\n628 |                 use VmcsGuestNW::*;\n    |                     ^^^^^^^^^^^^^^\n...\n643 |         set_guest_segment!(LDTR, 0x82); // present, system, LDT\n    |         ------------------------------ in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: the feature `naked_functions` has been stable since 1.88.0 and no longer requires an attribute to enable\n --> src/lib.rs:4:12\n  |\n4 | #![feature(naked_functions)]\n  |            ^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\nwarning: unreachable expression\n    --> src/vmx/vcpu.rs:1059:9\n     |\n1056 |         unimplemented!(\"apic access\");\n     |         ----------------------------- any code following this expression is unreachable\n...\n1059 |         self.advance_rip(exit_info.exit_instruction_length as _)\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable expression\n     |\n     = note: `#[warn(unreachable_code)]` on by default\n\nwarning: unnecessary `unsafe` block\n   --> src/vmx/vcpu.rs:877:9\n    |\n877 |         unsafe {\n    |         ^^^^^^ unnecessary `unsafe` block\n...\n903 |         vmx_entry_with!(\"vmlaunch\")\n    |         --------------------------- in this macro invocation\n    |\n    = note: `#[warn(unused_unsafe)]` on by default\n    = note: this warning originates in the macro `vmx_entry_with` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unnecessary `unsafe` block\n   --> src/vmx/vcpu.rs:877:9\n    |\n877 |         unsafe {\n    |         ^^^^^^ unnecessary `unsafe` block\n...\n911 |         vmx_entry_with!(\"vmresume\")\n    |         --------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `vmx_entry_with` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unnecessary `unsafe` block\n   --> src/vmx/vcpu.rs:921:9\n    |\n921 |         unsafe {\n    |         ^^^^^^ unnecessary `unsafe` block\n\nwarning: unused variable: `write`\n    --> src/vmx/vcpu.rs:1044:13\n     |\n1044 |         let write = match apic_access_exit_info.access_type {\n     |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_write`\n     |\n     = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `exit_info`\n    --> src/vmx/vcpu.rs:1041:38\n     |\n1041 |     fn handle_apic_access(&mut self, exit_info: &VmxExitInfo) -> AxResult {\n     |                                      ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_exit_info`\n\nFor more information about this error, try `rustc --explain E0557`.\nwarning: `x86_vcpu` (lib) generated 34 warnings\nerror: could not compile `x86_vcpu` (lib) due to 40 previous errors; 34 warnings emitted\n"
            ]
          }
        },
        {
          "file": "Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x86_vlapic 0.1.0\n│   └── x86_vcpu 0.1.0\n├── x86_vcpu 0.1.0\n└── riscv 0.14.0\n    └── page_table_multiarch 0.5.5\n        └── axaddrspace 0.1.0\n            ├── x86_vlapic 0.1.0\n            ├── x86_vcpu 0.1.0\n            ├── axvisor_api 0.1.0\n            │   ├── x86_vlapic 0.1.0\n            │   ├── x86_vcpu 0.1.0\n            │   └── axvcpu 0.1.0\n            │       └── x86_vcpu 0.1.0\n            ├── axvcpu 0.1.0\n            └── axdevice_base 0.1.0\n                ├── x86_vlapic 0.1.0\n                └── x86_vcpu 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 789,\n    \"last-commit\": \"90cc8453773cd356e9be0c728fdf3f4e0553ad71\",\n    \"last-updated\": \"2025-07-11T17:30:12+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 78\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-07-12T20:34:20Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/src/lazy.rs:36:23: 36:43 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/src/lazy.rs:39:13: 39:39 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-07-12T20:34:20Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-07-12T20:34:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-07-12T20:34:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=x86_vcpu, checker=Udeps\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/arceos-hypervisor/x86_vcpu\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-07-13 4:35:13.561604228 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling libc v0.2.174\n   Compiling crunchy v0.2.4\n   Compiling tiny-keccak v2.0.2\n    Checking cfg-if v1.0.1\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling winnow v0.7.12\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling indexmap v2.10.0\n   Compiling rustversion v1.0.21\n    Checking bit_field v0.10.2\n   Compiling toml_datetime v0.6.11\n   Compiling getrandom v0.2.16\n   Compiling serde v1.0.219\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.27\n   Compiling once_cell v1.21.3\n    Checking bitflags v2.9.1\n    Checking bitflags v1.3.2\n   Compiling zerocopy v0.8.26\n   Compiling version_check v0.9.5\n   Compiling ahash v0.8.12\n    Checking raw-cpuid v10.7.0\n   Compiling const-random-macro v0.1.16\n    Checking log v0.4.27\n    Checking memory_addr v0.4.0\n   Compiling proc-macro-crate v3.3.0\n   Compiling axerrno v0.1.0\n    Checking volatile v0.4.6\n    Checking x86_64 v0.15.2\n    Checking const-random v0.1.18\n    Checking page_table_entry v0.5.5\n    Checking allocator-api2 v0.2.21\n    Checking page_table_multiarch v0.5.5\n    Checking memory_set v0.4.0\n    Checking numeric-enum-macro v0.2.0\n    Checking lazyinit v0.2.2\n    Checking winnow v0.6.26\n   Compiling serde_derive v1.0.219\n    Checking hashbrown v0.14.5\n   Compiling enumerable_derive v1.2.0\n    Checking axaddrspace v0.1.0 (https://github.com/arceos-hypervisor/axaddrspace.git#2d8f6df5)\n   Compiling crate_interface v0.1.4\n   Compiling serde_repr v0.1.20\n   Compiling axvisor_api_proc v0.1.0 (https://github.com/arceos-hypervisor/axvisor_api.git#4102b0a4)\n    Checking enumerable v1.2.0\n   Compiling paste v1.0.15\n   Compiling percpu v0.2.0\n   Compiling percpu_macros v0.2.0\n    Checking axvisor_api v0.1.0 (https://github.com/arceos-hypervisor/axvisor_api.git#4102b0a4)\n    Checking bit v0.1.1\n    Checking tock-registers v0.10.0\n    Checking raw-cpuid v11.5.0\n    Checking axvcpu v0.1.0 (https://github.com/arceos-hypervisor/axvcpu.git#0dae8925)\n    Checking toml_datetime v0.6.6 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n    Checking serde_spanned v0.6.6 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n    Checking toml_edit v0.22.15 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n    Checking toml v0.8.14 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n    Checking axvmconfig v0.1.0 (https://github.com/arceos-hypervisor/axvmconfig.git#1b9435fd)\n    Checking axdevice_base v0.1.0 (https://github.com/arceos-hypervisor/axdevice_crates.git#09fe1c30)\n    Checking x86_vlapic v0.1.0 (https://github.com/arceos-hypervisor/x86_vlapic.git#1f3edfb0)\n    Checking x86_vcpu v0.1.0 (/home/runner/check/batch_1/arceos-hypervisor/x86_vcpu)\nerror[E0557]: feature has been removed\n --> src/lib.rs:3:12\n  |\n3 | #![feature(concat_idents)]\n  |            ^^^^^^^^^^^^^ feature has been removed\n  |\n  = note: removed in CURRENT_RUSTC_VERSION; see <https://github.com/rust-lang/rust/pull/142704> for more information\n  = note: use the `${concat(..)}` metavariable expression instead\n\nerror: unsafe attribute used without unsafe\n   --> src/vmx/vcpu.rs:894:7\n    |\n894 |     #[naked]\n    |       ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n894 |     #[unsafe(naked)]\n    |       +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> src/vmx/vcpu.rs:906:7\n    |\n906 |     #[naked]\n    |       ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n906 |     #[unsafe(naked)]\n    |       +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> src/vmx/vcpu.rs:914:7\n    |\n914 |     #[naked]\n    |       ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n914 |     #[unsafe(naked)]\n    |       +++++++     +\n\nerror: cannot find macro `concat_idents` in this scope\n  --> src/vmx/percpu.rs:72:30\n   |\n72 |                 let fixed1 = concat_idents!(IA32_VMX_, $crx, _FIXED1).read();\n   |                              ^^^^^^^^^^^^^\n...\n79 |         if !cr_is_valid!(Cr4::read().bits(), CR4) {\n   |             ------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `cr_is_valid` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n  --> src/vmx/percpu.rs:71:30\n   |\n71 |                 let fixed0 = concat_idents!(IA32_VMX_, $crx, _FIXED0).read();\n   |                              ^^^^^^^^^^^^^\n...\n79 |         if !cr_is_valid!(Cr4::read().bits(), CR4) {\n   |             ------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `cr_is_valid` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n  --> src/vmx/percpu.rs:72:30\n   |\n72 |                 let fixed1 = concat_idents!(IA32_VMX_, $crx, _FIXED1).read();\n   |                              ^^^^^^^^^^^^^\n...\n76 |         if !cr_is_valid!(Cr0::read().bits(), CR0) {\n   |             ------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `cr_is_valid` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n  --> src/vmx/percpu.rs:71:30\n   |\n71 |                 let fixed0 = concat_idents!(IA32_VMX_, $crx, _FIXED0).read();\n   |                              ^^^^^^^^^^^^^\n...\n76 |         if !cr_is_valid!(Cr0::read().bits(), CR0) {\n   |             ------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `cr_is_valid` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:629:17\n    |\n629 |                 concat_idents!($seg, _SELECTOR).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n636 |         set_guest_segment!(ES, 0x93); // 16-bit, present, data, read/write, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:630:17\n    |\n630 |                 concat_idents!($seg, _BASE).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n636 |         set_guest_segment!(ES, 0x93); // 16-bit, present, data, read/write, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:631:17\n    |\n631 |                 concat_idents!($seg, _LIMIT).write(0xffff)?;\n    |                 ^^^^^^^^^^^^^\n...\n636 |         set_guest_segment!(ES, 0x93); // 16-bit, present, data, read/write, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:632:17\n    |\n632 |                 concat_idents!($seg, _ACCESS_RIGHTS).write($access_rights)?;\n    |                 ^^^^^^^^^^^^^\n...\n636 |         set_guest_segment!(ES, 0x93); // 16-bit, present, data, read/write, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:629:17\n    |\n629 |                 concat_idents!($seg, _SELECTOR).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n637 |         set_guest_segment!(CS, 0x9b); // 16-bit, present, code, exec/read, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:630:17\n    |\n630 |                 concat_idents!($seg, _BASE).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n637 |         set_guest_segment!(CS, 0x9b); // 16-bit, present, code, exec/read, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:631:17\n    |\n631 |                 concat_idents!($seg, _LIMIT).write(0xffff)?;\n    |                 ^^^^^^^^^^^^^\n...\n637 |         set_guest_segment!(CS, 0x9b); // 16-bit, present, code, exec/read, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:632:17\n    |\n632 |                 concat_idents!($seg, _ACCESS_RIGHTS).write($access_rights)?;\n    |                 ^^^^^^^^^^^^^\n...\n637 |         set_guest_segment!(CS, 0x9b); // 16-bit, present, code, exec/read, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:629:17\n    |\n629 |                 concat_idents!($seg, _SELECTOR).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n638 |         set_guest_segment!(SS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:630:17\n    |\n630 |                 concat_idents!($seg, _BASE).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n638 |         set_guest_segment!(SS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:631:17\n    |\n631 |                 concat_idents!($seg, _LIMIT).write(0xffff)?;\n    |                 ^^^^^^^^^^^^^\n...\n638 |         set_guest_segment!(SS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:632:17\n    |\n632 |                 concat_idents!($seg, _ACCESS_RIGHTS).write($access_rights)?;\n    |                 ^^^^^^^^^^^^^\n...\n638 |         set_guest_segment!(SS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:629:17\n    |\n629 |                 concat_idents!($seg, _SELECTOR).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n639 |         set_guest_segment!(DS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:630:17\n    |\n630 |                 concat_idents!($seg, _BASE).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n639 |         set_guest_segment!(DS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:631:17\n    |\n631 |                 concat_idents!($seg, _LIMIT).write(0xffff)?;\n    |                 ^^^^^^^^^^^^^\n...\n639 |         set_guest_segment!(DS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:632:17\n    |\n632 |                 concat_idents!($seg, _ACCESS_RIGHTS).write($access_rights)?;\n    |                 ^^^^^^^^^^^^^\n...\n639 |         set_guest_segment!(DS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:629:17\n    |\n629 |                 concat_idents!($seg, _SELECTOR).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n640 |         set_guest_segment!(FS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:630:17\n    |\n630 |                 concat_idents!($seg, _BASE).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n640 |         set_guest_segment!(FS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:631:17\n    |\n631 |                 concat_idents!($seg, _LIMIT).write(0xffff)?;\n    |                 ^^^^^^^^^^^^^\n...\n640 |         set_guest_segment!(FS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:632:17\n    |\n632 |                 concat_idents!($seg, _ACCESS_RIGHTS).write($access_rights)?;\n    |                 ^^^^^^^^^^^^^\n...\n640 |         set_guest_segment!(FS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:629:17\n    |\n629 |                 concat_idents!($seg, _SELECTOR).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n641 |         set_guest_segment!(GS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:630:17\n    |\n630 |                 concat_idents!($seg, _BASE).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n641 |         set_guest_segment!(GS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:631:17\n    |\n631 |                 concat_idents!($seg, _LIMIT).write(0xffff)?;\n    |                 ^^^^^^^^^^^^^\n...\n641 |         set_guest_segment!(GS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:632:17\n    |\n632 |                 concat_idents!($seg, _ACCESS_RIGHTS).write($access_rights)?;\n    |                 ^^^^^^^^^^^^^\n...\n641 |         set_guest_segment!(GS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:629:17\n    |\n629 |                 concat_idents!($seg, _SELECTOR).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n642 |         set_guest_segment!(TR, 0x8b); // present, system, 32-bit TSS busy\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:630:17\n    |\n630 |                 concat_idents!($seg, _BASE).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n642 |         set_guest_segment!(TR, 0x8b); // present, system, 32-bit TSS busy\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:631:17\n    |\n631 |                 concat_idents!($seg, _LIMIT).write(0xffff)?;\n    |                 ^^^^^^^^^^^^^\n...\n642 |         set_guest_segment!(TR, 0x8b); // present, system, 32-bit TSS busy\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:632:17\n    |\n632 |                 concat_idents!($seg, _ACCESS_RIGHTS).write($access_rights)?;\n    |                 ^^^^^^^^^^^^^\n...\n642 |         set_guest_segment!(TR, 0x8b); // present, system, 32-bit TSS busy\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:629:17\n    |\n629 |                 concat_idents!($seg, _SELECTOR).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n643 |         set_guest_segment!(LDTR, 0x82); // present, system, LDT\n    |         ------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:630:17\n    |\n630 |                 concat_idents!($seg, _BASE).write(0)?;\n    |                 ^^^^^^^^^^^^^\n...\n643 |         set_guest_segment!(LDTR, 0x82); // present, system, LDT\n    |         ------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:631:17\n    |\n631 |                 concat_idents!($seg, _LIMIT).write(0xffff)?;\n    |                 ^^^^^^^^^^^^^\n...\n643 |         set_guest_segment!(LDTR, 0x82); // present, system, LDT\n    |         ------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat_idents` in this scope\n   --> src/vmx/vcpu.rs:632:17\n    |\n632 |                 concat_idents!($seg, _ACCESS_RIGHTS).write($access_rights)?;\n    |                 ^^^^^^^^^^^^^\n...\n643 |         set_guest_segment!(LDTR, 0x82); // present, system, LDT\n    |         ------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `Msr::*`\n  --> src/vmx/percpu.rs:69:21\n   |\n69 |                 use Msr::*;\n   |                     ^^^^^^\n...\n76 |         if !cr_is_valid!(Cr0::read().bits(), CR0) {\n   |             ------------------------------------- in this macro invocation\n   |\n   = note: `#[warn(unused_imports)]` on by default\n   = note: this warning originates in the macro `cr_is_valid` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `Msr::*`\n  --> src/vmx/percpu.rs:69:21\n   |\n69 |                 use Msr::*;\n   |                     ^^^^^^\n...\n79 |         if !cr_is_valid!(Cr4::read().bits(), CR4) {\n   |             ------------------------------------- in this macro invocation\n   |\n   = note: this warning originates in the macro `cr_is_valid` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `vmx::vcpu`\n  --> src/vmx/vcpu.rs:35:71\n   |\n35 | use crate::{ept::GuestPageWalkInfo, msr::Msr, regs::GeneralRegisters, vmx::vcpu};\n   |                                                                       ^^^^^^^^^\n\nwarning: unused import: `VmcsGuest16::*`\n   --> src/vmx/vcpu.rs:626:21\n    |\n626 |                 use VmcsGuest16::*;\n    |                     ^^^^^^^^^^^^^^\n...\n636 |         set_guest_segment!(ES, 0x93); // 16-bit, present, data, read/write, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest32::*`\n   --> src/vmx/vcpu.rs:627:21\n    |\n627 |                 use VmcsGuest32::*;\n    |                     ^^^^^^^^^^^^^^\n...\n636 |         set_guest_segment!(ES, 0x93); // 16-bit, present, data, read/write, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuestNW::*`\n   --> src/vmx/vcpu.rs:628:21\n    |\n628 |                 use VmcsGuestNW::*;\n    |                     ^^^^^^^^^^^^^^\n...\n636 |         set_guest_segment!(ES, 0x93); // 16-bit, present, data, read/write, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest16::*`\n   --> src/vmx/vcpu.rs:626:21\n    |\n626 |                 use VmcsGuest16::*;\n    |                     ^^^^^^^^^^^^^^\n...\n637 |         set_guest_segment!(CS, 0x9b); // 16-bit, present, code, exec/read, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest32::*`\n   --> src/vmx/vcpu.rs:627:21\n    |\n627 |                 use VmcsGuest32::*;\n    |                     ^^^^^^^^^^^^^^\n...\n637 |         set_guest_segment!(CS, 0x9b); // 16-bit, present, code, exec/read, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuestNW::*`\n   --> src/vmx/vcpu.rs:628:21\n    |\n628 |                 use VmcsGuestNW::*;\n    |                     ^^^^^^^^^^^^^^\n...\n637 |         set_guest_segment!(CS, 0x9b); // 16-bit, present, code, exec/read, accessed\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest16::*`\n   --> src/vmx/vcpu.rs:626:21\n    |\n626 |                 use VmcsGuest16::*;\n    |                     ^^^^^^^^^^^^^^\n...\n638 |         set_guest_segment!(SS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest32::*`\n   --> src/vmx/vcpu.rs:627:21\n    |\n627 |                 use VmcsGuest32::*;\n    |                     ^^^^^^^^^^^^^^\n...\n638 |         set_guest_segment!(SS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuestNW::*`\n   --> src/vmx/vcpu.rs:628:21\n    |\n628 |                 use VmcsGuestNW::*;\n    |                     ^^^^^^^^^^^^^^\n...\n638 |         set_guest_segment!(SS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest16::*`\n   --> src/vmx/vcpu.rs:626:21\n    |\n626 |                 use VmcsGuest16::*;\n    |                     ^^^^^^^^^^^^^^\n...\n639 |         set_guest_segment!(DS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest32::*`\n   --> src/vmx/vcpu.rs:627:21\n    |\n627 |                 use VmcsGuest32::*;\n    |                     ^^^^^^^^^^^^^^\n...\n639 |         set_guest_segment!(DS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuestNW::*`\n   --> src/vmx/vcpu.rs:628:21\n    |\n628 |                 use VmcsGuestNW::*;\n    |                     ^^^^^^^^^^^^^^\n...\n639 |         set_guest_segment!(DS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest16::*`\n   --> src/vmx/vcpu.rs:626:21\n    |\n626 |                 use VmcsGuest16::*;\n    |                     ^^^^^^^^^^^^^^\n...\n640 |         set_guest_segment!(FS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest32::*`\n   --> src/vmx/vcpu.rs:627:21\n    |\n627 |                 use VmcsGuest32::*;\n    |                     ^^^^^^^^^^^^^^\n...\n640 |         set_guest_segment!(FS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuestNW::*`\n   --> src/vmx/vcpu.rs:628:21\n    |\n628 |                 use VmcsGuestNW::*;\n    |                     ^^^^^^^^^^^^^^\n...\n640 |         set_guest_segment!(FS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest16::*`\n   --> src/vmx/vcpu.rs:626:21\n    |\n626 |                 use VmcsGuest16::*;\n    |                     ^^^^^^^^^^^^^^\n...\n641 |         set_guest_segment!(GS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest32::*`\n   --> src/vmx/vcpu.rs:627:21\n    |\n627 |                 use VmcsGuest32::*;\n    |                     ^^^^^^^^^^^^^^\n...\n641 |         set_guest_segment!(GS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuestNW::*`\n   --> src/vmx/vcpu.rs:628:21\n    |\n628 |                 use VmcsGuestNW::*;\n    |                     ^^^^^^^^^^^^^^\n...\n641 |         set_guest_segment!(GS, 0x93);\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest16::*`\n   --> src/vmx/vcpu.rs:626:21\n    |\n626 |                 use VmcsGuest16::*;\n    |                     ^^^^^^^^^^^^^^\n...\n642 |         set_guest_segment!(TR, 0x8b); // present, system, 32-bit TSS busy\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest32::*`\n   --> src/vmx/vcpu.rs:627:21\n    |\n627 |                 use VmcsGuest32::*;\n    |                     ^^^^^^^^^^^^^^\n...\n642 |         set_guest_segment!(TR, 0x8b); // present, system, 32-bit TSS busy\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuestNW::*`\n   --> src/vmx/vcpu.rs:628:21\n    |\n628 |                 use VmcsGuestNW::*;\n    |                     ^^^^^^^^^^^^^^\n...\n642 |         set_guest_segment!(TR, 0x8b); // present, system, 32-bit TSS busy\n    |         ---------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest16::*`\n   --> src/vmx/vcpu.rs:626:21\n    |\n626 |                 use VmcsGuest16::*;\n    |                     ^^^^^^^^^^^^^^\n...\n643 |         set_guest_segment!(LDTR, 0x82); // present, system, LDT\n    |         ------------------------------ in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuest32::*`\n   --> src/vmx/vcpu.rs:627:21\n    |\n627 |                 use VmcsGuest32::*;\n    |                     ^^^^^^^^^^^^^^\n...\n643 |         set_guest_segment!(LDTR, 0x82); // present, system, LDT\n    |         ------------------------------ in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused import: `VmcsGuestNW::*`\n   --> src/vmx/vcpu.rs:628:21\n    |\n628 |                 use VmcsGuestNW::*;\n    |                     ^^^^^^^^^^^^^^\n...\n643 |         set_guest_segment!(LDTR, 0x82); // present, system, LDT\n    |         ------------------------------ in this macro invocation\n    |\n    = note: this warning originates in the macro `set_guest_segment` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: the feature `naked_functions` has been stable since 1.88.0 and no longer requires an attribute to enable\n --> src/lib.rs:4:12\n  |\n4 | #![feature(naked_functions)]\n  |            ^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\nwarning: unreachable expression\n    --> src/vmx/vcpu.rs:1059:9\n     |\n1056 |         unimplemented!(\"apic access\");\n     |         ----------------------------- any code following this expression is unreachable\n...\n1059 |         self.advance_rip(exit_info.exit_instruction_length as _)\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable expression\n     |\n     = note: `#[warn(unreachable_code)]` on by default\n\nwarning: unnecessary `unsafe` block\n   --> src/vmx/vcpu.rs:877:9\n    |\n877 |         unsafe {\n    |         ^^^^^^ unnecessary `unsafe` block\n...\n903 |         vmx_entry_with!(\"vmlaunch\")\n    |         --------------------------- in this macro invocation\n    |\n    = note: `#[warn(unused_unsafe)]` on by default\n    = note: this warning originates in the macro `vmx_entry_with` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unnecessary `unsafe` block\n   --> src/vmx/vcpu.rs:877:9\n    |\n877 |         unsafe {\n    |         ^^^^^^ unnecessary `unsafe` block\n...\n911 |         vmx_entry_with!(\"vmresume\")\n    |         --------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `vmx_entry_with` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unnecessary `unsafe` block\n   --> src/vmx/vcpu.rs:921:9\n    |\n921 |         unsafe {\n    |         ^^^^^^ unnecessary `unsafe` block\n\nwarning: unused variable: `write`\n    --> src/vmx/vcpu.rs:1044:13\n     |\n1044 |         let write = match apic_access_exit_info.access_type {\n     |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_write`\n     |\n     = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `exit_info`\n    --> src/vmx/vcpu.rs:1041:38\n     |\n1041 |     fn handle_apic_access(&mut self, exit_info: &VmxExitInfo) -> AxResult {\n     |                                      ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_exit_info`\n\nFor more information about this error, try `rustc --explain E0557`.\nwarning: `x86_vcpu` (lib) generated 34 warnings\nerror: could not compile `x86_vcpu` (lib) due to 40 previous errors; 34 warnings emitted\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=x86_vcpu, checker=SemverChecks\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/arceos-hypervisor/x86_vcpu\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-07-13 4:33:48.663947006 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building x86_vcpu v0.1.0 (current)\nerror: running cargo-doc on crate 'x86_vcpu' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling crunchy v0.2.4\n   Compiling libc v0.2.174\n    Checking cfg-if v1.0.1\n   Compiling equivalent v1.0.2\n   Compiling tiny-keccak v2.0.2\n   Compiling hashbrown v0.15.4\n    Checking bit_field v0.10.2\n   Compiling winnow v0.7.12\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling indexmap v2.10.0\n   Compiling rustversion v1.0.21\n   Compiling toml_datetime v0.6.11\n   Compiling getrandom v0.2.16\n    Checking bitflags v1.3.2\n   Compiling x86 v0.52.0\n   Compiling serde v1.0.219\n   Compiling zerocopy v0.8.26\n   Compiling toml_edit v0.22.27\n    Checking bitflags v2.9.1\n   Compiling once_cell v1.21.3\n   Compiling version_check v0.9.5\n   Compiling const-random-macro v0.1.16\n   Compiling ahash v0.8.12\n    Checking raw-cpuid v10.7.0\n    Checking log v0.4.27\n    Checking volatile v0.4.6\n    Checking memory_addr v0.4.0\n   Compiling axerrno v0.1.0\n    Checking x86_64 v0.15.2\n   Compiling proc-macro-crate v3.3.0\n    Checking const-random v0.1.18\n    Checking page_table_entry v0.5.5\n    Checking allocator-api2 v0.2.21\n    Checking page_table_multiarch v0.5.5\n    Checking memory_set v0.4.0\n   Compiling serde_derive v1.0.219\n    Checking numeric-enum-macro v0.2.0\n    Checking lazyinit v0.2.2\n    Checking hashbrown v0.14.5\n    Checking winnow v0.6.26\n    Checking axaddrspace v0.1.0 (https://github.com/arceos-hypervisor/axaddrspace.git#2d8f6df5)\n   Compiling enumerable_derive v1.2.0\n   Compiling axvisor_api_proc v0.1.0 (https://github.com/arceos-hypervisor/axvisor_api.git#4102b0a4)\n   Compiling serde_repr v0.1.20\n   Compiling crate_interface v0.1.4\n    Checking enumerable v1.2.0\n   Compiling paste v1.0.15\n   Compiling percpu v0.2.0\n    Checking axvisor_api v0.1.0 (https://github.com/arceos-hypervisor/axvisor_api.git#4102b0a4)\n   Compiling percpu_macros v0.2.0\n    Checking tock-registers v0.10.0\n    Checking bit v0.1.1\n    Checking raw-cpuid v11.5.0\n    Checking axvcpu v0.1.0 (https://github.com/arceos-hypervisor/axvcpu.git#0dae8925)\n    Checking toml_datetime v0.6.6 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n    Checking serde_spanned v0.6.6 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n    Checking toml_edit v0.22.15 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n    Checking toml v0.8.14 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n    Checking axvmconfig v0.1.0 (https://github.com/arceos-hypervisor/axvmconfig.git#1b9435fd)\n    Checking axdevice_base v0.1.0 (https://github.com/arceos-hypervisor/axdevice_crates.git#09fe1c30)\n    Checking x86_vlapic v0.1.0 (https://github.com/arceos-hypervisor/x86_vlapic.git#1f3edfb0)\n Documenting x86_vcpu v0.1.0 (/home/runner/check/batch_1/arceos-hypervisor/x86_vcpu)\nerror[E0557]: feature has been removed\n --> /home/runner/check/batch_1/arceos-hypervisor/x86_vcpu/src/lib.rs:3:12\n  |\n3 | #![feature(concat_idents)]\n  |            ^^^^^^^^^^^^^ feature has been removed\n  |\n  = note: removed in CURRENT_RUSTC_VERSION; see <https://github.com/rust-lang/rust/pull/142704> for more information\n  = note: use the `${concat(..)}` metavariable expression instead\n\nerror: Compilation failed, aborting rustdoc\n\nFor more information about this error, try `rustc --explain E0557`.\nerror: could not document `x86_vcpu`\n\n-----\n\nerror: failed to build rustdoc for crate x86_vcpu v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/arceos-hypervisor/x86_vcpu --features amd,default,tracing,vmx &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate x86_vcpu v0.1.0\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Atomvchecker",
    "Outdated",
    "Geiger",
    "Unused Deps",
    "Unformatted"
  ]
}