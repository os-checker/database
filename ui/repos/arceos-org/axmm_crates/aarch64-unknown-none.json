{
  "repo": {
    "user": "arceos-org",
    "repo": "axmm_crates"
  },
  "data": [
    {
      "user": "arceos-org",
      "repo": "axmm_crates",
      "pkg": "memory_set",
      "count": 2,
      "raw_reports": [
        {
          "file": "(virtual) atomvchecker",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=memory_set, checker=Atomvchecker\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_3/arceos-org/axmm_crates/memory_set\n// cmd=cargo +nightly-2023-03-09 atomvchecker -k atomicity_violation -- --target aarch64-unknown-none \n// timestamp=2025-06-28 15:24:50.107397805 +08:00:00\n   Compiling memory_addr v0.4.0 (/home/runner/check/batch_3/arceos-org/axmm_crates/memory_addr)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `compiler_builtins`\n\nerror[E0463]: can't find crate for `core`\n --> memory_addr/src/addr.rs:1:5\n  |\n1 | use core::cmp::Ord;\n  |     ^^^^ can't find crate\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n --> memory_addr/src/range.rs:1:5\n  |\n1 | use core::{fmt, ops::Range};\n  |     ^^^^ can't find crate\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find macro `include_str` in this scope\n --> memory_addr/src/lib.rs:2:10\n  |\n2 | #![doc = include_str!(\"../README.md\")]\n  |          ^^^^^^^^^^^\n\nerror: cannot find macro `panic` in this scope\n   --> memory_addr/src/addr.rs:131:13\n    |\n131 |             panic!(\"overflow in `MemoryAddr::offset_from`\");\n    |             ^^^^^\n\nerror: cannot find attribute `derive` in this scope\n   --> memory_addr/src/addr.rs:311:11\n    |\n311 |           #[derive(Copy, Clone, Default, Ord, PartialOrd, Eq, PartialEq)]\n    |             ^^^^^^\n...\n450 | / def_usize_addr! {\n451 | |     /// A physical memory address.\n452 | |     pub type PhysAddr;\n453 | |\n454 | |     /// A virtual memory address.\n455 | |     pub type VirtAddr;\n456 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `def_usize_addr` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat` in this scope\n   --> memory_addr/src/addr.rs:316:21\n    |\n316 |               #[doc = concat!(\"Converts an `usize` to an [`\", stringify!($name), \"`].\")]\n    |                       ^^^^^^\n...\n450 | / def_usize_addr! {\n451 | |     /// A physical memory address.\n452 | |     pub type PhysAddr;\n453 | |\n454 | |     /// A virtual memory address.\n455 | |     pub type VirtAddr;\n456 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `def_usize_addr` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat` in this scope\n   --> memory_addr/src/addr.rs:322:21\n    |\n322 |               #[doc = concat!(\"Converts an [`\", stringify!($name), \"`] to an `usize`.\")]\n    |                       ^^^^^^\n...\n450 | / def_usize_addr! {\n451 | |     /// A physical memory address.\n452 | |     pub type PhysAddr;\n453 | |\n454 | |     /// A virtual memory address.\n455 | |     pub type VirtAddr;\n456 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `def_usize_addr` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find attribute `derive` in this scope\n   --> memory_addr/src/addr.rs:311:11\n    |\n311 |           #[derive(Copy, Clone, Default, Ord, PartialOrd, Eq, PartialEq)]\n    |             ^^^^^^\n...\n450 | / def_usize_addr! {\n451 | |     /// A physical memory address.\n452 | |     pub type PhysAddr;\n453 | |\n454 | |     /// A virtual memory address.\n455 | |     pub type VirtAddr;\n456 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `$crate::def_usize_addr` which comes from the expansion of the macro `def_usize_addr` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat` in this scope\n   --> memory_addr/src/addr.rs:316:21\n    |\n316 |               #[doc = concat!(\"Converts an `usize` to an [`\", stringify!($name), \"`].\")]\n    |                       ^^^^^^\n...\n450 | / def_usize_addr! {\n451 | |     /// A physical memory address.\n452 | |     pub type PhysAddr;\n453 | |\n454 | |     /// A virtual memory address.\n455 | |     pub type VirtAddr;\n456 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `$crate::def_usize_addr` which comes from the expansion of the macro `def_usize_addr` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat` in this scope\n   --> memory_addr/src/addr.rs:322:21\n    |\n322 |               #[doc = concat!(\"Converts an [`\", stringify!($name), \"`] to an `usize`.\")]\n    |                       ^^^^^^\n...\n450 | / def_usize_addr! {\n451 | |     /// A physical memory address.\n452 | |     pub type PhysAddr;\n453 | |\n454 | |     /// A virtual memory address.\n455 | |     pub type VirtAddr;\n456 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `$crate::def_usize_addr` which comes from the expansion of the macro `def_usize_addr` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `format_args` in this scope\n   --> memory_addr/src/addr.rs:429:29\n    |\n429 |                   f.write_fmt(format_args!($format, format_args!(\"{:#x}\", self.0)))\n    |                               ^^^^^^^^^^^\n...\n458 | / def_usize_addr_formatter! {\n459 | |     PhysAddr = \"PA:{}\";\n460 | |     VirtAddr = \"VA:{}\";\n461 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `def_usize_addr_formatter` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `format_args` in this scope\n   --> memory_addr/src/addr.rs:435:29\n    |\n435 |                   f.write_fmt(format_args!($format, format_args!(\"{:#x}\", self.0)))\n    |                               ^^^^^^^^^^^\n...\n458 | / def_usize_addr_formatter! {\n459 | |     PhysAddr = \"PA:{}\";\n460 | |     VirtAddr = \"VA:{}\";\n461 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `def_usize_addr_formatter` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `format_args` in this scope\n   --> memory_addr/src/addr.rs:441:29\n    |\n441 |                   f.write_fmt(format_args!($format, format_args!(\"{:#X}\", self.0)))\n    |                               ^^^^^^^^^^^\n...\n458 | / def_usize_addr_formatter! {\n459 | |     PhysAddr = \"PA:{}\";\n460 | |     VirtAddr = \"VA:{}\";\n461 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `def_usize_addr_formatter` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `format_args` in this scope\n   --> memory_addr/src/addr.rs:429:29\n    |\n429 |                   f.write_fmt(format_args!($format, format_args!(\"{:#x}\", self.0)))\n    |                               ^^^^^^^^^^^\n...\n458 | / def_usize_addr_formatter! {\n459 | |     PhysAddr = \"PA:{}\";\n460 | |     VirtAddr = \"VA:{}\";\n461 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `$crate::def_usize_addr_formatter` which comes from the expansion of the macro `def_usize_addr_formatter` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `format_args` in this scope\n   --> memory_addr/src/addr.rs:435:29\n    |\n435 |                   f.write_fmt(format_args!($format, format_args!(\"{:#x}\", self.0)))\n    |                               ^^^^^^^^^^^\n...\n458 | / def_usize_addr_formatter! {\n459 | |     PhysAddr = \"PA:{}\";\n460 | |     VirtAddr = \"VA:{}\";\n461 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `$crate::def_usize_addr_formatter` which comes from the expansion of the macro `def_usize_addr_formatter` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `format_args` in this scope\n   --> memory_addr/src/addr.rs:441:29\n    |\n441 |                   f.write_fmt(format_args!($format, format_args!(\"{:#X}\", self.0)))\n    |                               ^^^^^^^^^^^\n...\n458 | / def_usize_addr_formatter! {\n459 | |     PhysAddr = \"PA:{}\";\n460 | |     VirtAddr = \"VA:{}\";\n461 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `$crate::def_usize_addr_formatter` which comes from the expansion of the macro `def_usize_addr_formatter` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find attribute `derive` in this scope\n  --> memory_addr/src/range.rs:22:3\n   |\n22 | #[derive(Clone, Copy, PartialEq, Eq)]\n   |   ^^^^^^\n\nerror: cannot find macro `assert` in this scope\n  --> memory_addr/src/range.rs:59:9\n   |\n59 |         assert!(\n   |         ^^^^^^\n\nerror: cannot find macro `panic` in this scope\n   --> memory_addr/src/range.rs:141:13\n    |\n141 |             panic!(\n    |             ^^^^^\n\nerror: cannot find macro `write` in this scope\n   --> memory_addr/src/range.rs:341:9\n    |\n341 |         write!(f, \"{:?}..{:?}\", self.start, self.end)\n    |         ^^^^^\n\nerror: cannot find macro `write` in this scope\n   --> memory_addr/src/range.rs:351:9\n    |\n351 |         write!(f, \"{:x}..{:x}\", self.start, self.end)\n    |         ^^^^^\n\nerror: cannot find macro `write` in this scope\n   --> memory_addr/src/range.rs:361:9\n    |\n361 |         write!(f, \"{:X}..{:X}\", self.start, self.end)\n    |         ^^^^^\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:343:14\n    |\n343 |         impl core::ops::Add<usize> for $name {\n    |              ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:351:14\n    |\n351 |         impl core::ops::AddAssign<usize> for $name {\n    |              ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:358:14\n    |\n358 |         impl core::ops::Sub<usize> for $name {\n    |              ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:366:14\n    |\n366 |         impl core::ops::SubAssign<usize> for $name {\n    |              ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:373:14\n    |\n373 |         impl core::ops::Sub<$name> for $name {\n    |              ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:427:14\n    |\n427 |         impl core::fmt::Debug for $name {\n    |              ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:428:35\n    |\n428 |             fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {\n    |                                   ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:428:60\n    |\n428 |             fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {\n    |                                                            ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:433:14\n    |\n433 |         impl core::fmt::LowerHex for $name {\n    |              ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:434:35\n    |\n434 |             fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {\n    |                                   ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:434:60\n    |\n434 |             fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {\n    |                                                            ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:439:14\n    |\n439 |         impl core::fmt::UpperHex for $name {\n    |              ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:440:35\n    |\n440 |             fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {\n    |                                   ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:440:60\n    |\n440 |             fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {\n    |                                                            ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0405]: cannot find trait `Copy` in this scope\n  --> memory_addr/src/addr.rs:14:5\n   |\n14 |     Copy\n   |     ^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> memory_addr/src/addr.rs:16:7\n   |\n16 |     + From<usize>\n   |       ^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `Into` in this scope\n  --> memory_addr/src/addr.rs:17:7\n   |\n17 |     + Into<usize>\n   |       ^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `Into` in this scope\n  --> memory_addr/src/addr.rs:32:12\n   |\n32 |         U: Into<usize>,\n   |            ^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `Into` in this scope\n  --> memory_addr/src/addr.rs:42:12\n   |\n42 |         U: Into<usize>,\n   |            ^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `Into` in this scope\n  --> memory_addr/src/addr.rs:52:12\n   |\n52 |         U: Into<usize>,\n   |            ^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `Into` in this scope\n  --> memory_addr/src/addr.rs:62:12\n   |\n62 |         U: Into<usize>,\n   |            ^^^^ not found in this scope\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> memory_addr/src/addr.rs:175:41\n    |\n175 |     fn checked_add(self, rhs: usize) -> Option<Self> {\n    |                                         ^^^^^^ not found in this scope\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> memory_addr/src/addr.rs:217:41\n    |\n217 |     fn checked_sub(self, rhs: usize) -> Option<Self> {\n    |                                         ^^^^^^ not found in this scope\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> memory_addr/src/addr.rs:256:45\n    |\n256 |     fn checked_sub_addr(self, rhs: Self) -> Option<usize> {\n    |                                             ^^^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `Copy` in this scope\n   --> memory_addr/src/addr.rs:263:35\n    |\n263 | impl<T> MemoryAddr for T where T: Copy + From<usize> + Into<usize> + Ord {}\n    |                                   ^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> memory_addr/src/addr.rs:263:42\n    |\n263 | impl<T> MemoryAddr for T where T: Copy + From<usize> + Into<usize> + Ord {}\n    |                                          ^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `Into` in this scope\n   --> memory_addr/src/addr.rs:263:56\n    |\n263 | impl<T> MemoryAddr for T where T: Copy + From<usize> + Into<usize> + Ord {}\n    |                                                        ^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> memory_addr/src/addr.rs:329:14\n    |\n329 |           impl From<usize> for $name {\n    |                ^^^^ not found in this scope\n...\n450 | / def_usize_addr! {\n451 | |     /// A physical memory address.\n452 | |     pub type PhysAddr;\n453 | |\n454 | |     /// A virtual memory address.\n455 | |     pub type VirtAddr;\n456 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `def_usize_addr` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> memory_addr/src/addr.rs:336:14\n    |\n336 |           impl From<$name> for usize {\n    |                ^^^^ not found in this scope\n...\n450 | / def_usize_addr! {\n451 | |     /// A physical memory address.\n452 | |     pub type PhysAddr;\n453 | |\n454 | |     /// A virtual memory address.\n455 | |     pub type VirtAddr;\n456 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `def_usize_addr` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> memory_addr/src/addr.rs:329:14\n    |\n329 |           impl From<usize> for $name {\n    |                ^^^^ not found in this scope\n...\n450 | / def_usize_addr! {\n451 | |     /// A physical memory address.\n452 | |     pub type PhysAddr;\n453 | |\n454 | |     /// A virtual memory address.\n455 | |     pub type VirtAddr;\n456 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `$crate::def_usize_addr` which comes from the expansion of the macro `def_usize_addr` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> memory_addr/src/addr.rs:336:14\n    |\n336 |           impl From<$name> for usize {\n    |                ^^^^ not found in this scope\n...\n450 | / def_usize_addr! {\n451 | |     /// A physical memory address.\n452 | |     pub type PhysAddr;\n453 | |\n454 | |     /// A virtual memory address.\n455 | |     pub type VirtAddr;\n456 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `$crate::def_usize_addr` which comes from the expansion of the macro `def_usize_addr` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> memory_addr/src/iter.rs:38:37\n   |\n38 |     pub fn new(start: A, end: A) -> Option<Self> {\n   |                                     ^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `None` in this scope\n  --> memory_addr/src/iter.rs:43:13\n   |\n43 |             None\n   |             ^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `Iterator` in this scope\n  --> memory_addr/src/iter.rs:50:33\n   |\n50 | impl<A, const PAGE_SIZE: usize> Iterator for PageIter<PAGE_SIZE, A>\n   |                                 ^^^^^^^^ not found in this scope\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> memory_addr/src/iter.rs:56:27\n   |\n56 |     fn next(&mut self) -> Option<Self::Item> {\n   |                           ^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `None` in this scope\n  --> memory_addr/src/iter.rs:62:13\n   |\n62 |             None\n   |             ^^^^ not found in this scope\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> memory_addr/src/range.rs:83:41\n   |\n83 |     pub fn try_new(start: A, end: A) -> Option<Self> {\n   |                                         ^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `None` in this scope\n  --> memory_addr/src/range.rs:87:13\n   |\n87 |             None\n   |             ^^^^ not found in this scope\n\nerror[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> memory_addr/src/range.rs:138:16\n    |\n138 |         if let Some(end) = start.checked_add(size) {\n    |                ^^^^ not found in this scope\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> memory_addr/src/range.rs:165:58\n    |\n165 |     pub fn try_from_start_size(start: A, size: usize) -> Option<Self> {\n    |                                                          ^^^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `TryFrom` in this scope\n   --> memory_addr/src/range.rs:307:12\n    |\n307 | impl<A, T> TryFrom<Range<T>> for AddrRange<A>\n    |            ^^^^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> memory_addr/src/range.rs:309:21\n    |\n309 |     A: MemoryAddr + From<T>,\n    |                     ^^^^ not found in this scope\n\nerror[E0412]: cannot find type `Result` in this scope\n   --> memory_addr/src/range.rs:314:37\n    |\n314 |     fn try_from(range: Range<T>) -> Result<Self, Self::Error> {\n    |                                     ^^^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `Default` in this scope\n   --> memory_addr/src/range.rs:322:9\n    |\n322 | impl<A> Default for AddrRange<A>\n    |         ^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n  --> memory_addr/src/iter.rs:45:13\n   |\n45 |             Some(Self { start, end })\n   |             ^^^^ not found in this scope\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n  --> memory_addr/src/iter.rs:60:13\n   |\n60 |             Some(ret)\n   |             ^^^^ not found in this scope\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n  --> memory_addr/src/range.rs:85:13\n   |\n85 |             Some(Self { start, end })\n   |             ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0405, E0412, E0425, E0463, E0531.\nFor more information about an error, try `rustc --explain E0405`.\nerror: could not compile `memory_addr` (lib) due to 71 previous errors\n"
            ]
          }
        },
        {
          "file": "memory_set/src/set.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: you should consider adding a `Default` implementation for `MemorySet<B>`\n  --> memory_set/src/set.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             areas: BTreeMap::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<B: MappingBackend> Default for MemorySet<B> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "arceos-org",
      "repo": "axmm_crates",
      "pkg": "memory_addr",
      "count": 1,
      "raw_reports": [
        {
          "file": "(virtual) atomvchecker",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=memory_addr, checker=Atomvchecker\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_3/arceos-org/axmm_crates/memory_addr\n// cmd=cargo +nightly-2023-03-09 atomvchecker -k atomicity_violation -- --target aarch64-unknown-none \n// timestamp=2025-06-28 15:24:49.749948444 +08:00:00\n   Compiling memory_addr v0.4.0 (/home/runner/check/batch_3/arceos-org/axmm_crates/memory_addr)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `compiler_builtins`\n\nerror[E0463]: can't find crate for `core`\n --> memory_addr/src/addr.rs:1:5\n  |\n1 | use core::cmp::Ord;\n  |     ^^^^ can't find crate\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n --> memory_addr/src/range.rs:1:5\n  |\n1 | use core::{fmt, ops::Range};\n  |     ^^^^ can't find crate\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find macro `include_str` in this scope\n --> memory_addr/src/lib.rs:2:10\n  |\n2 | #![doc = include_str!(\"../README.md\")]\n  |          ^^^^^^^^^^^\n\nerror: cannot find macro `panic` in this scope\n   --> memory_addr/src/addr.rs:131:13\n    |\n131 |             panic!(\"overflow in `MemoryAddr::offset_from`\");\n    |             ^^^^^\n\nerror: cannot find attribute `derive` in this scope\n   --> memory_addr/src/addr.rs:311:11\n    |\n311 |           #[derive(Copy, Clone, Default, Ord, PartialOrd, Eq, PartialEq)]\n    |             ^^^^^^\n...\n450 | / def_usize_addr! {\n451 | |     /// A physical memory address.\n452 | |     pub type PhysAddr;\n453 | |\n454 | |     /// A virtual memory address.\n455 | |     pub type VirtAddr;\n456 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `def_usize_addr` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat` in this scope\n   --> memory_addr/src/addr.rs:316:21\n    |\n316 |               #[doc = concat!(\"Converts an `usize` to an [`\", stringify!($name), \"`].\")]\n    |                       ^^^^^^\n...\n450 | / def_usize_addr! {\n451 | |     /// A physical memory address.\n452 | |     pub type PhysAddr;\n453 | |\n454 | |     /// A virtual memory address.\n455 | |     pub type VirtAddr;\n456 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `def_usize_addr` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat` in this scope\n   --> memory_addr/src/addr.rs:322:21\n    |\n322 |               #[doc = concat!(\"Converts an [`\", stringify!($name), \"`] to an `usize`.\")]\n    |                       ^^^^^^\n...\n450 | / def_usize_addr! {\n451 | |     /// A physical memory address.\n452 | |     pub type PhysAddr;\n453 | |\n454 | |     /// A virtual memory address.\n455 | |     pub type VirtAddr;\n456 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `def_usize_addr` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find attribute `derive` in this scope\n   --> memory_addr/src/addr.rs:311:11\n    |\n311 |           #[derive(Copy, Clone, Default, Ord, PartialOrd, Eq, PartialEq)]\n    |             ^^^^^^\n...\n450 | / def_usize_addr! {\n451 | |     /// A physical memory address.\n452 | |     pub type PhysAddr;\n453 | |\n454 | |     /// A virtual memory address.\n455 | |     pub type VirtAddr;\n456 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `$crate::def_usize_addr` which comes from the expansion of the macro `def_usize_addr` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat` in this scope\n   --> memory_addr/src/addr.rs:316:21\n    |\n316 |               #[doc = concat!(\"Converts an `usize` to an [`\", stringify!($name), \"`].\")]\n    |                       ^^^^^^\n...\n450 | / def_usize_addr! {\n451 | |     /// A physical memory address.\n452 | |     pub type PhysAddr;\n453 | |\n454 | |     /// A virtual memory address.\n455 | |     pub type VirtAddr;\n456 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `$crate::def_usize_addr` which comes from the expansion of the macro `def_usize_addr` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `concat` in this scope\n   --> memory_addr/src/addr.rs:322:21\n    |\n322 |               #[doc = concat!(\"Converts an [`\", stringify!($name), \"`] to an `usize`.\")]\n    |                       ^^^^^^\n...\n450 | / def_usize_addr! {\n451 | |     /// A physical memory address.\n452 | |     pub type PhysAddr;\n453 | |\n454 | |     /// A virtual memory address.\n455 | |     pub type VirtAddr;\n456 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `$crate::def_usize_addr` which comes from the expansion of the macro `def_usize_addr` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `format_args` in this scope\n   --> memory_addr/src/addr.rs:429:29\n    |\n429 |                   f.write_fmt(format_args!($format, format_args!(\"{:#x}\", self.0)))\n    |                               ^^^^^^^^^^^\n...\n458 | / def_usize_addr_formatter! {\n459 | |     PhysAddr = \"PA:{}\";\n460 | |     VirtAddr = \"VA:{}\";\n461 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `def_usize_addr_formatter` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `format_args` in this scope\n   --> memory_addr/src/addr.rs:435:29\n    |\n435 |                   f.write_fmt(format_args!($format, format_args!(\"{:#x}\", self.0)))\n    |                               ^^^^^^^^^^^\n...\n458 | / def_usize_addr_formatter! {\n459 | |     PhysAddr = \"PA:{}\";\n460 | |     VirtAddr = \"VA:{}\";\n461 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `def_usize_addr_formatter` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `format_args` in this scope\n   --> memory_addr/src/addr.rs:441:29\n    |\n441 |                   f.write_fmt(format_args!($format, format_args!(\"{:#X}\", self.0)))\n    |                               ^^^^^^^^^^^\n...\n458 | / def_usize_addr_formatter! {\n459 | |     PhysAddr = \"PA:{}\";\n460 | |     VirtAddr = \"VA:{}\";\n461 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `def_usize_addr_formatter` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `format_args` in this scope\n   --> memory_addr/src/addr.rs:429:29\n    |\n429 |                   f.write_fmt(format_args!($format, format_args!(\"{:#x}\", self.0)))\n    |                               ^^^^^^^^^^^\n...\n458 | / def_usize_addr_formatter! {\n459 | |     PhysAddr = \"PA:{}\";\n460 | |     VirtAddr = \"VA:{}\";\n461 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `$crate::def_usize_addr_formatter` which comes from the expansion of the macro `def_usize_addr_formatter` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `format_args` in this scope\n   --> memory_addr/src/addr.rs:435:29\n    |\n435 |                   f.write_fmt(format_args!($format, format_args!(\"{:#x}\", self.0)))\n    |                               ^^^^^^^^^^^\n...\n458 | / def_usize_addr_formatter! {\n459 | |     PhysAddr = \"PA:{}\";\n460 | |     VirtAddr = \"VA:{}\";\n461 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `$crate::def_usize_addr_formatter` which comes from the expansion of the macro `def_usize_addr_formatter` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find macro `format_args` in this scope\n   --> memory_addr/src/addr.rs:441:29\n    |\n441 |                   f.write_fmt(format_args!($format, format_args!(\"{:#X}\", self.0)))\n    |                               ^^^^^^^^^^^\n...\n458 | / def_usize_addr_formatter! {\n459 | |     PhysAddr = \"PA:{}\";\n460 | |     VirtAddr = \"VA:{}\";\n461 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `$crate::def_usize_addr_formatter` which comes from the expansion of the macro `def_usize_addr_formatter` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: cannot find attribute `derive` in this scope\n  --> memory_addr/src/range.rs:22:3\n   |\n22 | #[derive(Clone, Copy, PartialEq, Eq)]\n   |   ^^^^^^\n\nerror: cannot find macro `assert` in this scope\n  --> memory_addr/src/range.rs:59:9\n   |\n59 |         assert!(\n   |         ^^^^^^\n\nerror: cannot find macro `panic` in this scope\n   --> memory_addr/src/range.rs:141:13\n    |\n141 |             panic!(\n    |             ^^^^^\n\nerror: cannot find macro `write` in this scope\n   --> memory_addr/src/range.rs:341:9\n    |\n341 |         write!(f, \"{:?}..{:?}\", self.start, self.end)\n    |         ^^^^^\n\nerror: cannot find macro `write` in this scope\n   --> memory_addr/src/range.rs:351:9\n    |\n351 |         write!(f, \"{:x}..{:x}\", self.start, self.end)\n    |         ^^^^^\n\nerror: cannot find macro `write` in this scope\n   --> memory_addr/src/range.rs:361:9\n    |\n361 |         write!(f, \"{:X}..{:X}\", self.start, self.end)\n    |         ^^^^^\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:343:14\n    |\n343 |         impl core::ops::Add<usize> for $name {\n    |              ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:351:14\n    |\n351 |         impl core::ops::AddAssign<usize> for $name {\n    |              ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:358:14\n    |\n358 |         impl core::ops::Sub<usize> for $name {\n    |              ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:366:14\n    |\n366 |         impl core::ops::SubAssign<usize> for $name {\n    |              ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:373:14\n    |\n373 |         impl core::ops::Sub<$name> for $name {\n    |              ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:427:14\n    |\n427 |         impl core::fmt::Debug for $name {\n    |              ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:428:35\n    |\n428 |             fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {\n    |                                   ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:428:60\n    |\n428 |             fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {\n    |                                                            ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:433:14\n    |\n433 |         impl core::fmt::LowerHex for $name {\n    |              ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:434:35\n    |\n434 |             fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {\n    |                                   ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:434:60\n    |\n434 |             fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {\n    |                                                            ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:439:14\n    |\n439 |         impl core::fmt::UpperHex for $name {\n    |              ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:440:35\n    |\n440 |             fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {\n    |                                   ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n   --> memory_addr/src/addr.rs:440:60\n    |\n440 |             fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {\n    |                                                            ^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not be installed\n    = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0405]: cannot find trait `Copy` in this scope\n  --> memory_addr/src/addr.rs:14:5\n   |\n14 |     Copy\n   |     ^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> memory_addr/src/addr.rs:16:7\n   |\n16 |     + From<usize>\n   |       ^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `Into` in this scope\n  --> memory_addr/src/addr.rs:17:7\n   |\n17 |     + Into<usize>\n   |       ^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `Into` in this scope\n  --> memory_addr/src/addr.rs:32:12\n   |\n32 |         U: Into<usize>,\n   |            ^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `Into` in this scope\n  --> memory_addr/src/addr.rs:42:12\n   |\n42 |         U: Into<usize>,\n   |            ^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `Into` in this scope\n  --> memory_addr/src/addr.rs:52:12\n   |\n52 |         U: Into<usize>,\n   |            ^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `Into` in this scope\n  --> memory_addr/src/addr.rs:62:12\n   |\n62 |         U: Into<usize>,\n   |            ^^^^ not found in this scope\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> memory_addr/src/addr.rs:175:41\n    |\n175 |     fn checked_add(self, rhs: usize) -> Option<Self> {\n    |                                         ^^^^^^ not found in this scope\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> memory_addr/src/addr.rs:217:41\n    |\n217 |     fn checked_sub(self, rhs: usize) -> Option<Self> {\n    |                                         ^^^^^^ not found in this scope\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> memory_addr/src/addr.rs:256:45\n    |\n256 |     fn checked_sub_addr(self, rhs: Self) -> Option<usize> {\n    |                                             ^^^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `Copy` in this scope\n   --> memory_addr/src/addr.rs:263:35\n    |\n263 | impl<T> MemoryAddr for T where T: Copy + From<usize> + Into<usize> + Ord {}\n    |                                   ^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> memory_addr/src/addr.rs:263:42\n    |\n263 | impl<T> MemoryAddr for T where T: Copy + From<usize> + Into<usize> + Ord {}\n    |                                          ^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `Into` in this scope\n   --> memory_addr/src/addr.rs:263:56\n    |\n263 | impl<T> MemoryAddr for T where T: Copy + From<usize> + Into<usize> + Ord {}\n    |                                                        ^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> memory_addr/src/addr.rs:329:14\n    |\n329 |           impl From<usize> for $name {\n    |                ^^^^ not found in this scope\n...\n450 | / def_usize_addr! {\n451 | |     /// A physical memory address.\n452 | |     pub type PhysAddr;\n453 | |\n454 | |     /// A virtual memory address.\n455 | |     pub type VirtAddr;\n456 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `def_usize_addr` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> memory_addr/src/addr.rs:336:14\n    |\n336 |           impl From<$name> for usize {\n    |                ^^^^ not found in this scope\n...\n450 | / def_usize_addr! {\n451 | |     /// A physical memory address.\n452 | |     pub type PhysAddr;\n453 | |\n454 | |     /// A virtual memory address.\n455 | |     pub type VirtAddr;\n456 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `def_usize_addr` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> memory_addr/src/addr.rs:329:14\n    |\n329 |           impl From<usize> for $name {\n    |                ^^^^ not found in this scope\n...\n450 | / def_usize_addr! {\n451 | |     /// A physical memory address.\n452 | |     pub type PhysAddr;\n453 | |\n454 | |     /// A virtual memory address.\n455 | |     pub type VirtAddr;\n456 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `$crate::def_usize_addr` which comes from the expansion of the macro `def_usize_addr` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> memory_addr/src/addr.rs:336:14\n    |\n336 |           impl From<$name> for usize {\n    |                ^^^^ not found in this scope\n...\n450 | / def_usize_addr! {\n451 | |     /// A physical memory address.\n452 | |     pub type PhysAddr;\n453 | |\n454 | |     /// A virtual memory address.\n455 | |     pub type VirtAddr;\n456 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `$crate::def_usize_addr` which comes from the expansion of the macro `def_usize_addr` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> memory_addr/src/iter.rs:38:37\n   |\n38 |     pub fn new(start: A, end: A) -> Option<Self> {\n   |                                     ^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `None` in this scope\n  --> memory_addr/src/iter.rs:43:13\n   |\n43 |             None\n   |             ^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `Iterator` in this scope\n  --> memory_addr/src/iter.rs:50:33\n   |\n50 | impl<A, const PAGE_SIZE: usize> Iterator for PageIter<PAGE_SIZE, A>\n   |                                 ^^^^^^^^ not found in this scope\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> memory_addr/src/iter.rs:56:27\n   |\n56 |     fn next(&mut self) -> Option<Self::Item> {\n   |                           ^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `None` in this scope\n  --> memory_addr/src/iter.rs:62:13\n   |\n62 |             None\n   |             ^^^^ not found in this scope\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> memory_addr/src/range.rs:83:41\n   |\n83 |     pub fn try_new(start: A, end: A) -> Option<Self> {\n   |                                         ^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `None` in this scope\n  --> memory_addr/src/range.rs:87:13\n   |\n87 |             None\n   |             ^^^^ not found in this scope\n\nerror[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> memory_addr/src/range.rs:138:16\n    |\n138 |         if let Some(end) = start.checked_add(size) {\n    |                ^^^^ not found in this scope\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> memory_addr/src/range.rs:165:58\n    |\n165 |     pub fn try_from_start_size(start: A, size: usize) -> Option<Self> {\n    |                                                          ^^^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `TryFrom` in this scope\n   --> memory_addr/src/range.rs:307:12\n    |\n307 | impl<A, T> TryFrom<Range<T>> for AddrRange<A>\n    |            ^^^^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> memory_addr/src/range.rs:309:21\n    |\n309 |     A: MemoryAddr + From<T>,\n    |                     ^^^^ not found in this scope\n\nerror[E0412]: cannot find type `Result` in this scope\n   --> memory_addr/src/range.rs:314:37\n    |\n314 |     fn try_from(range: Range<T>) -> Result<Self, Self::Error> {\n    |                                     ^^^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `Default` in this scope\n   --> memory_addr/src/range.rs:322:9\n    |\n322 | impl<A> Default for AddrRange<A>\n    |         ^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n  --> memory_addr/src/iter.rs:45:13\n   |\n45 |             Some(Self { start, end })\n   |             ^^^^ not found in this scope\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n  --> memory_addr/src/iter.rs:60:13\n   |\n60 |             Some(ret)\n   |             ^^^^ not found in this scope\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n  --> memory_addr/src/range.rs:85:13\n   |\n85 |             Some(Self { start, end })\n   |             ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0405, E0412, E0425, E0463, E0531.\nFor more information about an error, try `rustc --explain E0405`.\nerror: could not compile `memory_addr` (lib) due to 71 previous errors\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Atomvchecker",
    "Outdated",
    "Geiger",
    "Unused Deps",
    "Unformatted"
  ]
}