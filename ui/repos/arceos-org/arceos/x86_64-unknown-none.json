{"repo":{"user":"arceos-org","repo":"arceos"},"data":[{"user":"arceos-org","repo":"arceos","pkg":"axfs","count":3,"raw_reports":[{"file":"modules/axfs/src/api/file.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/api/file.rs:27:5\n   |\n27 | /     pub const fn new() -> Self {\n28 | |         OpenOptions(fops::OpenOptions::new())\n29 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl Default for OpenOptions {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"]}},{"file":"modules/axhal/src/arch/x86_64/trap.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"]}},{"file":"modules/axfs/src/fops.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/fops.rs:54:5\n   |\n54 | /     pub const fn new() -> Self {\n55 | |         Self {\n56 | |             // generic\n57 | |             read: false,\n...  |\n66 | |         }\n67 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n52 + impl Default for OpenOptions {\n53 +     fn default() -> Self {\n54 +         Self::new()\n55 +     }\n56 + }\n   |\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axdriver","count":1,"raw_reports":[{"file":"modules/axhal/src/arch/x86_64/trap.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axnet","count":2,"raw_reports":[{"file":"modules/axnet/src/smoltcp_impl/tcp.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `TcpSocket`\n  --> modules/axnet/src/smoltcp_impl/tcp.rs:50:5\n   |\n50 | /     pub const fn new() -> Self {\n51 | |         Self {\n52 | |             state: AtomicU8::new(STATE_CLOSED),\n53 | |             handle: UnsafeCell::new(None),\n...  |\n57 | |         }\n58 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n48 + impl Default for TcpSocket {\n49 +     fn default() -> Self {\n50 +         Self::new()\n51 +     }\n52 + }\n   |\n\n"]}},{"file":"modules/axhal/src/arch/x86_64/trap.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axalloc","count":1,"raw_reports":[{"file":"modules/axalloc/src/lib.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `GlobalAllocator`\n  --> modules/axalloc/src/lib.rs:57:5\n   |\n57 | /     pub const fn new() -> Self {\n58 | |         Self {\n59 | |             balloc: SpinNoIrq::new(DefaultByteAllocator::new()),\n60 | |             palloc: SpinNoIrq::new(BitmapPageAllocator::new()),\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n55 + impl Default for GlobalAllocator {\n56 +     fn default() -> Self {\n57 +         Self::new()\n58 +     }\n59 + }\n   |\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axmm","count":1,"raw_reports":[{"file":"modules/axhal/src/arch/x86_64/trap.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axtask","count":1,"raw_reports":[{"file":"modules/axhal/src/arch/x86_64/trap.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"arceos_posix_api","count":2,"raw_reports":[{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-09-07T07:18:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-07T07:18:08Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/arch/x86_64/trap.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axruntime","count":1,"raw_reports":[{"file":"modules/axhal/src/arch/x86_64/trap.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axlibc","count":2,"raw_reports":[{"file":"modules/axhal/src/arch/x86_64/trap.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-09-07T07:22:42Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-07T07:22:42Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"arceos_api","count":1,"raw_reports":[{"file":"modules/axhal/src/arch/x86_64/trap.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axstd","count":1,"raw_reports":[{"file":"modules/axhal/src/arch/x86_64/trap.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axdma","count":1,"raw_reports":[{"file":"modules/axhal/src/arch/x86_64/trap.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axfeat","count":1,"raw_reports":[{"file":"modules/axhal/src/arch/x86_64/trap.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"mingo","count":7,"raw_reports":[{"file":"src/main.rs","count":3,"kinds":{"Clippy(Error)":["error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n","error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n","error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"]}},{"file":"src/cpu.rs","count":1,"kinds":{"Clippy(Error)":["error[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=mingo, checker=Clippy\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader\n// cmd=cargo clippy --target x86_64-unknown-none --no-deps --message-format=json\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader)\nerror: could not compile `mingo` (bin \"kernel\") due to 6 previous errors\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=mingo, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader)\nerror: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\nerror[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\nerror[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\nerror[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `mingo` (bin \"kernel\") due to 5 previous errors\n"]}},{"file":"src/panic_wait.rs","count":1,"kinds":{"Clippy(Error)":["error: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axdisplay","count":1,"raw_reports":[{"file":"modules/axhal/src/arch/x86_64/trap.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axhal","count":2,"raw_reports":[{"file":"modules/axhal/src/arch/x86_64/trap.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"]}},{"file":"modules/axhal/src/arch/x86_64/context.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `TaskContext`\n   --> modules/axhal/src/arch/x86_64/context.rs:148:5\n    |\n148 | /     pub const fn new() -> Self {\n149 | |         Self {\n150 | |             kstack_top: va!(0),\n151 | |             rsp: 0,\n...   |\n155 | |         }\n156 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n146 + impl Default for TaskContext {\n147 +     fn default() -> Self {\n148 +         Self::new()\n149 +     }\n150 + }\n    |\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axsync","count":1,"raw_reports":[{"file":"modules/axhal/src/arch/x86_64/trap.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Lockbud(Probably)","Lockbud(Possibly)","Unformatted"]}