{
  "repo": {
    "user": "arceos-org",
    "repo": "scheduler"
  },
  "data": [
    {
      "user": "arceos-org",
      "repo": "scheduler",
      "pkg": "scheduler",
      "count": 6,
      "raw_reports": [
        {
          "file": "(virtual) geiger",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=scheduler, checker=Geiger\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/arceos-org/scheduler\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2025-06-28 14:18:40.399976227 +08:00:00\n     Removed 0 files\n    Checking linked_list_r4l v0.2.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_4/arceos-org/scheduler/target/debug/deps/linked_list_r4l-117e3cffd03abc29.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_4/arceos-org/scheduler/target/debug/deps/liblinked_list_r4l-117e3cffd03abc29.rmeta\",\"emit\":\"metadata\"}\n    Checking scheduler v0.2.1 (/home/runner/check/batch_4/arceos-org/scheduler)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_4/arceos-org/scheduler/target/debug/deps/scheduler-609a30918c3ffcdb.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_4/arceos-org/scheduler/target/debug/deps/libscheduler-609a30918c3ffcdb.rmeta\",\"emit\":\"metadata\"}\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.18s\n    Scanning done\nWARNING: Dependency file was never scanned: /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/linked_list_r4l-0.2.1/README.md\nerror: Found 1 warnings\n"
            ]
          }
        },
        {
          "file": "[Geiger] Unsafe code statistics",
          "features": "",
          "count": 1,
          "kinds": {
            "Geiger": [
              "pkg=scheduler, checker=Geiger\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_4/arceos-org/scheduler\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\ntimestamp=2025-06-28 14:18:40.631027353 +08:00:00\n\n\nMetric output format: x/y\n    x = unsafe code used by the build\n    y = total unsafe code found in the crate\n\nSymbols:\n    :) = No `unsafe` usage found, declares #![forbid(unsafe_code)]\n    ?  = No `unsafe` usage found, missing #![forbid(unsafe_code)]\n    !  = `unsafe` usage found\n\nFunctions  Expressions  Impls  Traits  Methods  Dependency\n\n0/0        2/2          0/0    0/0     0/0      !  scheduler 0.2.1\n0/0        126/126      4/4    0/0     9/9      !  `-- linked_list_r4l 0.2.1\n\n0/0        128/128      4/4    0/0     9/9\n\n"
            ]
          }
        },
        {
          "file": "[Rapx] memory safety detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Rapx": [
              "pkg=scheduler, checker=Rapx\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_4/arceos-org/scheduler\ncmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-28 14:18:36.967632708 +08:00:00\n\nwarning: Dangling pointer detected.\n   --> src/cfs.rs:145:1\n    |\n145 | / fn remove_task(&mut self, task: &Self::SchedItem) -> Option<Self::SchedItem> {\n146 | |         if let Some((_, tmp)) = self\n...   |\n158 | |         }\n159 | |     }\n    | |_____- Dangling pointer detected.\n    |\nwarning: Dangling pointer detected.\n   --> src/cfs.rs:161:1\n    |\n161 | / fn pick_next_task(&mut self) -> Option<Self::SchedItem> {\n162 | |         if let Some((_, v)) = self.ready_queue.pop_first() {\n...   |\n166 | |         }\n167 | |     }\n    | |_____- Dangling pointer detected.\n    |\n"
            ]
          }
        },
        {
          "file": "src/cfs.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: you should consider adding a `Default` implementation for `CFScheduler<T>`\n   --> src/cfs.rs:111:5\n    |\n111 | /     pub const fn new() -> Self {\n112 | |         Self {\n113 | |             ready_queue: BTreeMap::new(),\n114 | |             min_vruntime: None,\n...   |\n117 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n109 + impl<T> Default for CFScheduler<T> {\n110 +     fn default() -> Self {\n111 +         Self::new()\n112 +     }\n113 + }\n    |\n\n"
            ]
          }
        },
        {
          "file": "src/fifo.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: you should consider adding a `Default` implementation for `FifoScheduler<T>`\n  --> src/fifo.rs:29:5\n   |\n29 | /     pub const fn new() -> Self {\n30 | |         Self {\n31 | |             ready_queue: List::new(),\n32 | |         }\n33 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n27 + impl<T> Default for FifoScheduler<T> {\n28 +     fn default() -> Self {\n29 +         Self::new()\n30 +     }\n31 + }\n   |\n\n"
            ]
          }
        },
        {
          "file": "src/round_robin.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: you should consider adding a `Default` implementation for `RRScheduler<T, S>`\n  --> src/round_robin.rs:64:5\n   |\n64 | /     pub const fn new() -> Self {\n65 | |         Self {\n66 | |             ready_queue: VecDeque::new(),\n67 | |         }\n68 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n62 + impl<T, const S: usize> Default for RRScheduler<T, S> {\n63 +     fn default() -> Self {\n64 +         Self::new()\n65 +     }\n66 + }\n   |\n\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Atomvchecker",
    "Outdated",
    "Geiger",
    "Unused Deps",
    "Unformatted"
  ]
}