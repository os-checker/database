{
  "repo": {
    "user": "arceos-org",
    "repo": "kernel_guard"
  },
  "data": [
    {
      "user": "arceos-org",
      "repo": "kernel_guard",
      "pkg": "kernel_guard",
      "count": 3,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kernel_guard, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_24/arceos-org/kernel_guard\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-02-16 21:52:26.372845502 +08:00:00\n    Building kernel_guard v0.1.2 (current)\n       Built [   0.275s] (current)\n     Parsing kernel_guard v0.1.2 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_24/arceos-org/kernel_guard/target/semver-checks/local-kernel_guard-0_1_2-8256b7f4c497607d/target/riscv64gc-unknown-none-elf/doc/kernel_guard.json\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=kernel_guard, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_24/arceos-org/kernel_guard\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-02-16 21:52:26.862991557 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building kernel_guard v0.1.2 (current)\n       Built [   0.275s] (current)\n     Parsing kernel_guard v0.1.2 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_24/arceos-org/kernel_guard/target/semver-checks/local-kernel_guard-0_1_2-8256b7f4c497607d/target/riscv64gc-unknown-none-elf/doc/kernel_guard.json\n"
            ]
          }
        },
        {
          "file": "src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: you should consider adding a `Default` implementation for `NoOp`\n   --> src/lib.rs:121:5\n    |\n121 | /     pub const fn new() -> Self {\n122 | |         Self\n123 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n119 + impl Default for NoOp {\n120 +     fn default() -> Self {\n121 +         Self::new()\n122 +     }\n123 + }\n    |\n\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}