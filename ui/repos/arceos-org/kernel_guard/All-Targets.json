{
  "repo": {
    "user": "arceos-org",
    "repo": "kernel_guard"
  },
  "data": [
    {
      "user": "arceos-org",
      "repo": "kernel_guard",
      "pkg": "kernel_guard",
      "count": 12,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 5,
          "kinds": {
            "Cargo": [
              "// pkg_name=kernel_guard, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_24/arceos-org/kernel_guard\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-02-16 21:52:25.860272209 +08:00:00\n    Building kernel_guard v0.1.2 (current)\n       Built [   0.299s] (current)\n     Parsing kernel_guard v0.1.2 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_24/arceos-org/kernel_guard/target/semver-checks/local-kernel_guard-0_1_2-8256b7f4c497607d/target/x86_64-unknown-none/doc/kernel_guard.json\n",
              "// pkg_name=kernel_guard, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=loongarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_24/arceos-org/kernel_guard\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none \n// timestamp=2025-02-16 21:52:27.356465514 +08:00:00\n    Building kernel_guard v0.1.2 (current)\n       Built [   0.278s] (current)\n     Parsing kernel_guard v0.1.2 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_24/arceos-org/kernel_guard/target/semver-checks/local-kernel_guard-0_1_2-8256b7f4c497607d/target/loongarch64-unknown-none/doc/kernel_guard.json\n",
              "// pkg_name=kernel_guard, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_24/arceos-org/kernel_guard\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-02-16 21:52:26.864637001 +08:00:00\n    Building kernel_guard v0.1.2 (current)\n       Built [   0.276s] (current)\n     Parsing kernel_guard v0.1.2 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_24/arceos-org/kernel_guard/target/semver-checks/local-kernel_guard-0_1_2-8256b7f4c497607d/target/aarch64-unknown-none/doc/kernel_guard.json\n",
              "// pkg_name=kernel_guard, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_24/arceos-org/kernel_guard\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-02-16 21:52:26.372845502 +08:00:00\n    Building kernel_guard v0.1.2 (current)\n       Built [   0.275s] (current)\n     Parsing kernel_guard v0.1.2 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_24/arceos-org/kernel_guard/target/semver-checks/local-kernel_guard-0_1_2-8256b7f4c497607d/target/riscv64gc-unknown-none-elf/doc/kernel_guard.json\n",
              "// pkg_name=kernel_guard, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_24/arceos-org/kernel_guard\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-02-16 21:52:21.820814075 +08:00:00\n    Building kernel_guard v0.1.2 (current)\n       Built [   3.759s] (current)\n     Parsing kernel_guard v0.1.2 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_24/arceos-org/kernel_guard/target/semver-checks/local-kernel_guard-0_1_2-8256b7f4c497607d/target/x86_64-unknown-linux-gnu/doc/kernel_guard.json\n"
            ]
          }
        },
        {
          "file": "src/lib.rs",
          "features": "",
          "count": 5,
          "kinds": {
            "Clippy(Warn)": [
              "warning: you should consider adding a `Default` implementation for `NoOp`\n   --> src/lib.rs:121:5\n    |\n121 | /     pub const fn new() -> Self {\n122 | |         Self\n123 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n119 + impl Default for NoOp {\n120 +     fn default() -> Self {\n121 +         Self::new()\n122 +     }\n123 + }\n    |\n\n",
              "warning: you should consider adding a `Default` implementation for `NoOp`\n   --> src/lib.rs:121:5\n    |\n121 | /     pub const fn new() -> Self {\n122 | |         Self\n123 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n119 + impl Default for NoOp {\n120 +     fn default() -> Self {\n121 +         Self::new()\n122 +     }\n123 + }\n    |\n\n",
              "warning: you should consider adding a `Default` implementation for `NoOp`\n   --> src/lib.rs:121:5\n    |\n121 | /     pub const fn new() -> Self {\n122 | |         Self\n123 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n119 + impl Default for NoOp {\n120 +     fn default() -> Self {\n121 +         Self::new()\n122 +     }\n123 + }\n    |\n\n",
              "warning: you should consider adding a `Default` implementation for `NoOp`\n   --> src/lib.rs:121:5\n    |\n121 | /     pub const fn new() -> Self {\n122 | |         Self\n123 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n119 + impl Default for NoOp {\n120 +     fn default() -> Self {\n121 +         Self::new()\n122 +     }\n123 + }\n    |\n\n",
              "warning: you should consider adding a `Default` implementation for `NoOp`\n   --> src/lib.rs:121:5\n    |\n121 | /     pub const fn new() -> Self {\n122 | |         Self\n123 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n119 + impl Default for NoOp {\n120 +     fn default() -> Self {\n121 +         Self::new()\n122 +     }\n123 + }\n    |\n\n"
            ]
          }
        },
        {
          "file": "src/arch/x86.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Mirai": [
              "warning: [MIRAI] Inline assembly code cannot be analyzed by MIRAI.\n --> src/arch/x86.rs:9:14\n  |\n9 |     unsafe { asm!(\"pushf; pop {}; cli\", out(reg) flags) };\n  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: [MIRAI] Inline assembly code cannot be analyzed by MIRAI.\n  --> src/arch/x86.rs:16:18\n   |\n16 |         unsafe { asm!(\"sti\") };\n   |                  ^^^^^^^^^^^\n\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}