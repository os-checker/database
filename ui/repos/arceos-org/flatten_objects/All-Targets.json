{"repo":{"user":"arceos-org","repo":"flatten_objects"},"data":[{"user":"arceos-org","repo":"flatten_objects","pkg":"flatten_objects","count":4,"raw_reports":[{"file":"src/lib.rs","count":4,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `FlattenObjects<T, CAP>`\n  --> src/lib.rs:72:5\n   |\n72 | /     pub const fn new() -> Self {\n73 | |         assert!(CAP <= 1024);\n74 | |         Self {\n75 | |             objects: MaybeUninit::uninit_array(),\n...  |\n80 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n51 + impl<T, const CAP: usize> Default for FlattenObjects<T, CAP> {\n52 +     fn default() -> Self {\n53 +         Self::new()\n54 +     }\n55 + }\n   |\n\n","warning: you should consider adding a `Default` implementation for `FlattenObjects<T, CAP>`\n  --> src/lib.rs:72:5\n   |\n72 | /     pub const fn new() -> Self {\n73 | |         assert!(CAP <= 1024);\n74 | |         Self {\n75 | |             objects: MaybeUninit::uninit_array(),\n...  |\n80 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n51 + impl<T, const CAP: usize> Default for FlattenObjects<T, CAP> {\n52 +     fn default() -> Self {\n53 +         Self::new()\n54 +     }\n55 + }\n   |\n\n","warning: you should consider adding a `Default` implementation for `FlattenObjects<T, CAP>`\n  --> src/lib.rs:72:5\n   |\n72 | /     pub const fn new() -> Self {\n73 | |         assert!(CAP <= 1024);\n74 | |         Self {\n75 | |             objects: MaybeUninit::uninit_array(),\n...  |\n80 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n51 + impl<T, const CAP: usize> Default for FlattenObjects<T, CAP> {\n52 +     fn default() -> Self {\n53 +         Self::new()\n54 +     }\n55 + }\n   |\n\n","warning: you should consider adding a `Default` implementation for `FlattenObjects<T, CAP>`\n  --> src/lib.rs:72:5\n   |\n72 | /     pub const fn new() -> Self {\n73 | |         assert!(CAP <= 1024);\n74 | |         Self {\n75 | |             objects: MaybeUninit::uninit_array(),\n...  |\n80 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n51 + impl<T, const CAP: usize> Default for FlattenObjects<T, CAP> {\n52 +     fn default() -> Self {\n53 +         Self::new()\n54 +     }\n55 + }\n   |\n\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Semver Violation","Audit","Mirai","Rapx","Rudra","Lockbud(Probably)","Lockbud(Possibly)","Outdated","Geiger","Unformatted"]}