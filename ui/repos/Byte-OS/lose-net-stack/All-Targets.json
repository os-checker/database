{
  "repo": {
    "user": "Byte-OS",
    "repo": "lose-net-stack"
  },
  "data": [
    {
      "user": "Byte-OS",
      "repo": "lose-net-stack",
      "pkg": "lose-net-stack",
      "count": 125,
      "raw_reports": [
        {
          "file": "src/lib.rs",
          "features": "",
          "count": 22,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/lib.rs (original lines from 3 to 3)\n-mod net;\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/lib.rs (original lines from 6 to 6)\n+mod net;\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/lib.rs (original lines from 20 to 20)\n-pub use net::TcpFlags;\n+use consts::*;\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/lib.rs (original lines from 24 to 24)\n+pub use net::TcpFlags;\n+use net::IP_LEN;\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/lib.rs (original lines from 27 to 27)\n-use net::IP_LEN;\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/lib.rs (original lines from 32 to 32)\n-use consts::*;\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/lib.rs (original lines from 37 to 38)\n-    pub ip:  IPv4,\n-    pub mac: MacAddress\n+    pub ip: IPv4,\n+    pub mac: MacAddress,\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/lib.rs (original lines from 43 to 46)\n-        Self {\n-            ip,\n-            mac\n-        }\n+        Self { ip, mac }\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/lib.rs (original lines from 49 to 51)\n-    fn analysis_udp(&self, mut data_ptr_iter: UnsafeRefIter, ip_header: &Ip, eth_header: &Eth) -> Packet {\n-        let udp_header = unsafe{data_ptr_iter.next::<UDP>()}.unwrap();\n-        let data = unsafe{data_ptr_iter.get_curr_arr()};\n+    fn analysis_udp(\n+        &self,\n+        mut data_ptr_iter: UnsafeRefIter,\n+        ip_header: &Ip,\n+        eth_header: &Eth,\n+    ) -> Packet {\n+        let udp_header = unsafe { data_ptr_iter.next::<UDP>() }.unwrap();\n+        let data = unsafe { data_ptr_iter.get_curr_arr() };\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/lib.rs (original lines from 54 to 62)\n-        Packet::UDP(packets::udp::UDPPacket { \n-            source_ip: IPv4::from_u32(ip_header.src.to_be()), \n-            source_mac: MacAddress::new(eth_header.shost), \n-            source_port: udp_header.sport.to_be(), \n-            dest_ip: IPv4::from_u32(ip_header.dst.to_be()), \n-            dest_mac: MacAddress::new(eth_header.dhost), \n-            dest_port: udp_header.dport.to_be(), \n-            data_len, \n-            data: &data[..data_len]\n+        Packet::UDP(packets::udp::UDPPacket {\n+            source_ip: IPv4::from_u32(ip_header.src.to_be()),\n+            source_mac: MacAddress::new(eth_header.shost),\n+            source_port: udp_header.sport.to_be(),\n+            dest_ip: IPv4::from_u32(ip_header.dst.to_be()),\n+            dest_mac: MacAddress::new(eth_header.dhost),\n+            dest_port: udp_header.dport.to_be(),\n+            data_len,\n+            data: &data[..data_len],\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/lib.rs (original lines from 66 to 67)\n-    fn analysis_tcp(&self, mut data_ptr_iter: UnsafeRefIter, ip_header: &Ip, eth_header: &Eth) -> Packet {\n-        let tcp_header = unsafe{data_ptr_iter.next::<TCP>()}.unwrap();\n+    fn analysis_tcp(\n+        &self,\n+        mut data_ptr_iter: UnsafeRefIter,\n+        ip_header: &Ip,\n+        eth_header: &Eth,\n+    ) -> Packet {\n+        let tcp_header = unsafe { data_ptr_iter.next::<TCP>() }.unwrap();\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/lib.rs (original lines from 69 to 69)\n-        let data = &unsafe{data_ptr_iter.get_curr_arr()}[offset..];\n+        let data = &unsafe { data_ptr_iter.get_curr_arr() }[offset..];\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/lib.rs (original lines from 73 to 78)\n-            source_ip: IPv4::from_u32(ip_header.src.to_be()), \n-            source_mac: MacAddress::new(eth_header.shost), \n-            source_port: tcp_header.sport.to_be(), \n-            dest_ip: IPv4::from_u32(ip_header.dst.to_be()), \n-            dest_mac: MacAddress::new(eth_header.dhost), \n-            dest_port: tcp_header.dport.to_be(), \n+            source_ip: IPv4::from_u32(ip_header.src.to_be()),\n+            source_mac: MacAddress::new(eth_header.shost),\n+            source_port: tcp_header.sport.to_be(),\n+            dest_ip: IPv4::from_u32(ip_header.dst.to_be()),\n+            dest_mac: MacAddress::new(eth_header.dhost),\n+            dest_port: tcp_header.dport.to_be(),\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/lib.rs (original lines from 89 to 90)\n-    fn analysis_icmp(&self, data_ptr_iter: UnsafeRefIter, _ip_header: &Ip, _eth_header: &Eth) -> Packet {\n-        let _data = unsafe{data_ptr_iter.get_curr_arr()};\n+    fn analysis_icmp(\n+        &self,\n+        data_ptr_iter: UnsafeRefIter,\n+        _ip_header: &Ip,\n+        _eth_header: &Eth,\n+    ) -> Packet {\n+        let _data = unsafe { data_ptr_iter.get_curr_arr() };\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/lib.rs (original lines from 96 to 96)\n-        let ip_header = unsafe{data_ptr_iter.next::<Ip>()}.unwrap();\n+        let ip_header = unsafe { data_ptr_iter.next::<Ip>() }.unwrap();\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/lib.rs (original lines from 99 to 99)\n-            return Packet::None\n+            return Packet::None;\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/lib.rs (original lines from 103 to 103)\n-            return Packet::None\n+            return Packet::None;\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/lib.rs (original lines from 115 to 115)\n-        let arp_header = unsafe{data_ptr_iter.next::<Arp>()}.unwrap();\n+        let arp_header = unsafe { data_ptr_iter.next::<Arp>() }.unwrap();\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/lib.rs (original lines from 122 to 126)\n-                IPv4::from_u32(arp_header.spa.to_be()), \n-                MacAddress::new(arp_header.sha), \n-                IPv4::from_u32(arp_header.tpa.to_be()), \n-                MacAddress::new(arp_header.tha), \n-                rtype\n+                IPv4::from_u32(arp_header.spa.to_be()),\n+                MacAddress::new(arp_header.sha),\n+                IPv4::from_u32(arp_header.tpa.to_be()),\n+                MacAddress::new(arp_header.tha),\n+                rtype,\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/lib.rs (original lines from 133 to 133)\n-        let eth_header = unsafe{data_ptr_iter.next::<Eth>()}.unwrap();\n+        let eth_header = unsafe { data_ptr_iter.next::<Eth>() }.unwrap();\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/lib.rs (original lines from 137 to 137)\n-            _ => Packet::None // Unsupported type\n+            _ => Packet::None, // Unsupported type\n"
            ],
            "Clippy(Warn)": [
              "warning: operator precedence can trip the unwary\n  --> src/lib.rs:68:24\n   |\n68 |         let offset = ((tcp_header.offset >> 4 & 0xf) as usize - 5) * 4;\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(tcp_header.offset >> 4) & 0xf`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n\n"
            ]
          }
        },
        {
          "file": "src/net.rs",
          "features": "",
          "count": 21,
          "kinds": {
            "Clippy(Warn)": [
              "warning: item uses `packed` representation without ABI-qualification\n  --> src/net.rs:14:1\n   |\n12 |   #[repr(packed)]\n   |          ------ `packed` representation set here\n13 |   #[derive(Debug, Clone, Copy)]\n14 | / pub struct Arp {\n15 | |     pub(crate) httype: u16, // Hardware type\n16 | |     pub(crate) pttype: u16, // Protocol type, For IPv4, this has the value 0x0800.\n17 | |     pub(crate) hlen: u8,    // Hardware length: Ethernet address length is 6.\n...  |\n23 | |     pub(crate) tpa: u32     // Target protocol address\n24 | | }\n   | |_^\n   |\n   = warning: unqualified `#[repr(packed)]` defaults to `#[repr(Rust, packed)]`, which has no stable ABI\n   = help: qualify the desired ABI explicity via `#[repr(C, packed)]` or `#[repr(Rust, packed)]`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#repr_packed_without_abi\n   = note: `#[warn(clippy::repr_packed_without_abi)]` on by default\n\n",
              "warning: item uses `packed` representation without ABI-qualification\n  --> src/net.rs:29:1\n   |\n27 |   #[repr(packed)]\n   |          ------ `packed` representation set here\n28 |   #[derive(Debug, Clone, Copy)]\n29 | / pub struct Ip {\n30 | |     pub(crate) vhl: u8,    // version << 4 | header length >> 2\n31 | |     pub(crate) tos: u8,    // type of service\n32 | |     pub(crate) len: u16,   // total length, packet length\n...  |\n39 | |     pub(crate) dst: u32    // destination ip\n40 | | }\n   | |_^\n   |\n   = warning: unqualified `#[repr(packed)]` defaults to `#[repr(Rust, packed)]`, which has no stable ABI\n   = help: qualify the desired ABI explicity via `#[repr(C, packed)]` or `#[repr(Rust, packed)]`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#repr_packed_without_abi\n\n",
              "warning: item uses `packed` representation without ABI-qualification\n  --> src/net.rs:45:1\n   |\n43 |   #[repr(packed)]\n   |          ------ `packed` representation set here\n44 |   #[derive(Debug, Clone, Copy)]\n45 | / pub struct UDP {\n46 | |     pub(crate) sport: u16, // souce port\n47 | |     pub(crate) dport: u16, // destination port\n48 | |     pub(crate) ulen: u16,  // length, including udp header, not including IP header\n49 | |     pub(crate) sum: u16    // checksum\n50 | | }\n   | |_^\n   |\n   = warning: unqualified `#[repr(packed)]` defaults to `#[repr(Rust, packed)]`, which has no stable ABI\n   = help: qualify the desired ABI explicity via `#[repr(C, packed)]` or `#[repr(Rust, packed)]`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#repr_packed_without_abi\n\n",
              "warning: name `UDP` contains a capitalized acronym\n  --> src/net.rs:45:12\n   |\n45 | pub struct UDP {\n   |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Udp`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n",
              "warning: item uses `packed` representation without ABI-qualification\n  --> src/net.rs:68:1\n   |\n66 |   #[repr(packed)]\n   |          ------ `packed` representation set here\n67 |   #[derive(Debug, Clone, Copy)]\n68 | / pub struct TCP {\n69 | |     pub(crate) sport: u16, // souce port\n70 | |     pub(crate) dport: u16, // destination port\n71 | |     pub(crate) seq: u32, // sequence number\n...  |\n77 | |     pub(crate) urg: u16,    // urgent pointer\n78 | | }\n   | |_^\n   |\n   = warning: unqualified `#[repr(packed)]` defaults to `#[repr(Rust, packed)]`, which has no stable ABI\n   = help: qualify the desired ABI explicity via `#[repr(C, packed)]` or `#[repr(Rust, packed)]`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#repr_packed_without_abi\n\n",
              "warning: name `TCP` contains a capitalized acronym\n  --> src/net.rs:68:12\n   |\n68 | pub struct TCP {\n   |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Tcp`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
              "warning: item uses `packed` representation without ABI-qualification\n  --> src/net.rs:83:1\n   |\n81 |   #[repr(packed)]\n   |          ------ `packed` representation set here\n82 |   #[derive(Debug, Clone, Copy)]\n83 | / pub struct ICMP {\n84 | |     pub(crate) type_: u8,\n85 | |     pub(crate) code: u8,\n86 | |     pub(crate) checksum: u16,\n87 | |     pub(crate) id: u16,\n88 | |     pub(crate) seq: u16,\n89 | | }\n   | |_^\n   |\n   = warning: unqualified `#[repr(packed)]` defaults to `#[repr(Rust, packed)]`, which has no stable ABI\n   = help: qualify the desired ABI explicity via `#[repr(C, packed)]` or `#[repr(Rust, packed)]`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#repr_packed_without_abi\n\n",
              "warning: name `ICMP` contains a capitalized acronym\n  --> src/net.rs:83:12\n   |\n83 | pub struct ICMP {\n   |            ^^^^ help: consider making the acronym lowercase, except the initial letter: `Icmp`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
            ],
            "Unformatted": [
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/net.rs (original lines from 3 to 3)\n-\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/net.rs (original lines from 9 to 9)\n-    pub(crate) rtype: u16      // packet type, arp or ip\n+    pub(crate) rtype: u16,     // packet type, arp or ip\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/net.rs (original lines from 15 to 23)\n-    pub(crate) httype: u16, // Hardware type\n-    pub(crate) pttype: u16, // Protocol type, For IPv4, this has the value 0x0800.\n-    pub(crate) hlen: u8,    // Hardware length: Ethernet address length is 6.\n-    pub(crate) plen: u8,    // Protocol length: IPv4 address length is 4.\n-    pub(crate) op: u16,     // Operation: 1 for request, 2 for reply.\n-    pub(crate) sha: [u8; 6],// Sender hardware address\n-    pub(crate) spa: u32,    // Sender protocol address\n-    pub(crate) tha: [u8; 6],// Target hardware address\n-    pub(crate) tpa: u32     // Target protocol address\n+    pub(crate) httype: u16,  // Hardware type\n+    pub(crate) pttype: u16,  // Protocol type, For IPv4, this has the value 0x0800.\n+    pub(crate) hlen: u8,     // Hardware length: Ethernet address length is 6.\n+    pub(crate) plen: u8,     // Protocol length: IPv4 address length is 4.\n+    pub(crate) op: u16,      // Operation: 1 for request, 2 for reply.\n+    pub(crate) sha: [u8; 6], // Sender hardware address\n+    pub(crate) spa: u32,     // Sender protocol address\n+    pub(crate) tha: [u8; 6], // Target hardware address\n+    pub(crate) tpa: u32,     // Target protocol address\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/net.rs (original lines from 30 to 39)\n-    pub(crate) vhl: u8,    // version << 4 | header length >> 2\n-    pub(crate) tos: u8,    // type of service\n-    pub(crate) len: u16,   // total length, packet length\n-    pub(crate) id: u16,    // identification, can combine all packets\n-    pub(crate) off: u16,   // fragment offset field, packet from\n-    pub(crate) ttl: u8,    // time to live\n-    pub(crate) pro: u8,    // protocol， ICMP(1)、IGMP(2)、TCP(6)、UDP(17)\n-    pub(crate) sum: u16,   // checksum,\n-    pub(crate) src: u32,   // souce ip\n-    pub(crate) dst: u32    // destination ip\n+    pub(crate) vhl: u8,  // version << 4 | header length >> 2\n+    pub(crate) tos: u8,  // type of service\n+    pub(crate) len: u16, // total length, packet length\n+    pub(crate) id: u16,  // identification, can combine all packets\n+    pub(crate) off: u16, // fragment offset field, packet from\n+    pub(crate) ttl: u8,  // time to live\n+    pub(crate) pro: u8,  // protocol， ICMP(1)、IGMP(2)、TCP(6)、UDP(17)\n+    pub(crate) sum: u16, // checksum,\n+    pub(crate) src: u32, // souce ip\n+    pub(crate) dst: u32, // destination ip\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/net.rs (original lines from 49 to 49)\n-    pub(crate) sum: u16    // checksum\n+    pub(crate) sum: u16,   // checksum\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/net.rs (original lines from 69 to 73)\n-    pub(crate) sport: u16, // souce port\n-    pub(crate) dport: u16, // destination port\n-    pub(crate) seq: u32, // sequence number\n-    pub(crate) ack: u32, // acknowledgement number\n-    pub(crate) offset: u8, // offset, first 4 bytes are tcp header length\n+    pub(crate) sport: u16,      // souce port\n+    pub(crate) dport: u16,      // destination port\n+    pub(crate) seq: u32,        // sequence number\n+    pub(crate) ack: u32,        // acknowledgement number\n+    pub(crate) offset: u8,      // offset, first 4 bytes are tcp header length\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/net.rs (original lines from 75 to 77)\n-    pub(crate) win: u16,    // window size\n-    pub(crate) sum: u16,    // checksum\n-    pub(crate) urg: u16,    // urgent pointer\n+    pub(crate) win: u16,        // window size\n+    pub(crate) sum: u16,        // checksum\n+    pub(crate) urg: u16,        // urgent pointer\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/net.rs (original lines from 93 to 93)\n-pub(crate) const IP_LEN:  usize = size_of::<Ip>();\n+pub(crate) const IP_LEN: usize = size_of::<Ip>();\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/net.rs (original lines from 102 to 102)\n-00 00 00 00 00 00 0a 00 02 0f                         ..........                  \n+00 00 00 00 00 00 0a 00 02 0f                         ..........\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/net.rs (original lines from 108 to 108)\n-52 55 0a 00 02 02 0a 00 02 02                         RU........                  \n+52 55 0a 00 02 02 0a 00 02 02                         RU........\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/net.rs (original lines from 117 to 117)\n-73 20 61 20 70 69 6e 67 21                            s a ping!                     \n+73 20 61 20 70 69 6e 67 21                            s a ping!\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/net.rs (original lines from 121 to 121)\n-74 68 69 73 20 69 73 20 61 20 70 69 6e 67 21          this is a ping!   \n+74 68 69 73 20 69 73 20 61 20 70 69 6e 67 21          this is a ping!\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/net.rs (original lines from 125 to 125)\n+\n"
            ]
          }
        },
        {
          "file": "src/packets/arp.rs",
          "features": "",
          "count": 17,
          "kinds": {
            "Clippy(Warn)": [
              "warning: variable does not need to be mutable\n  --> src/packets/arp.rs:55:13\n   |\n55 |         let mut eth_header = unsafe{ data_ptr_iter.next_mut::<Eth>() }.unwrap();\n   |             ----^^^^^^^^^^\n   |             |\n   |             help: remove this `mut`\n   |\n   = note: `#[warn(unused_mut)]` on by default\n\n",
              "warning: variable does not need to be mutable\n  --> src/packets/arp.rs:61:13\n   |\n61 |         let mut arp_header = unsafe { data_ptr_iter.next_mut::<Arp>() }.unwrap();\n   |             ----^^^^^^^^^^\n   |             |\n   |             help: remove this `mut`\n\n"
            ],
            "Unformatted": [
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 3 to 3)\n+use crate::consts::{\n+    ARP_ETHADDR_LEN, ARP_HRD_ETHER, ARP_OP_REPLY, ARP_OP_REQUEST, BROADCAST_MAC, ETH_RTYPE_ARP,\n+    ETH_RTYPE_IP,\n+};\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 5 to 7)\n-use crate::consts::{ARP_OP_REQUEST, ARP_OP_REPLY, ARP_HRD_ETHER, ETH_RTYPE_IP, ARP_ETHADDR_LEN, ETH_RTYPE_ARP, BROADCAST_MAC};\n-use crate::MacAddress;\n-use crate::IPv4;\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 9 to 9)\n+use crate::IPv4;\n+use crate::MacAddress;\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 14 to 14)\n-    Unsupported\n+    Unsupported,\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 22 to 22)\n-            _ => ArpType::Unsupported\n+            _ => ArpType::Unsupported,\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 41 to 41)\n-    pub rtype: ArpType\n+    pub rtype: ArpType,\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 45 to 46)\n-    pub fn new(sender_ip: IPv4, sender_mac: MacAddress, target_ip: IPv4, target_mac: MacAddress, rtype: ArpType) -> Self {\n-        ArpPacket { sender_ip, sender_mac, target_ip, target_mac, rtype }\n+    pub fn new(\n+        sender_ip: IPv4,\n+        sender_mac: MacAddress,\n+        target_ip: IPv4,\n+        target_mac: MacAddress,\n+        rtype: ArpType,\n+    ) -> Self {\n+        ArpPacket {\n+            sender_ip,\n+            sender_mac,\n+            target_ip,\n+            target_mac,\n+            rtype,\n+        }\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 55 to 55)\n-        let mut eth_header = unsafe{ data_ptr_iter.next_mut::<Eth>() }.unwrap();\n+        let mut eth_header = unsafe { data_ptr_iter.next_mut::<Eth>() }.unwrap();\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 64 to 65)\n-        arp_header.hlen = ARP_ETHADDR_LEN as u8;    // mac address len\n-        arp_header.plen = 4;    // ipv4\n+        arp_header.hlen = ARP_ETHADDR_LEN as u8; // mac address len\n+        arp_header.plen = 4; // ipv4\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 67 to 67)\n-        \n+\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 70 to 70)\n-    \n+\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 76 to 76)\n-    pub fn reply_packet(&self, local_ip: IPv4, local_mac: MacAddress) -> Result<Self, NetStackErrors> {\n+    pub fn reply_packet(\n+        &self,\n+        local_ip: IPv4,\n+        local_mac: MacAddress,\n+    ) -> Result<Self, NetStackErrors> {\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 80 to 84)\n-                    local_ip, \n-                    local_mac, \n-                    self.sender_ip, \n-                    self.sender_mac, \n-                    ArpType::Reply\n+                    local_ip,\n+                    local_mac,\n+                    self.sender_ip,\n+                    self.sender_mac,\n+                    ArpType::Reply,\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 89 to 89)\n-            _ => Err(NetStackErrors::NotRequiredReplyArp)\n+            _ => Err(NetStackErrors::NotRequiredReplyArp),\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 93 to 93)\n+\n"
            ]
          }
        },
        {
          "file": "src/packets/tcp.rs",
          "features": "",
          "count": 15,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 4 to 4)\n-use crate::utils::{UnsafeRefIter, check_sum};\n+use crate::net::{Eth, Ip, TcpFlags, ETH_LEN, IP_LEN, TCP, TCP_LEN};\n+use crate::utils::{check_sum, UnsafeRefIter};\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 7 to 7)\n-use crate::net::{TCP_LEN, IP_LEN, ETH_LEN, Eth, Ip, TCP, TcpFlags};\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 19 to 24)\n-    pub seq: u32,           // sequence number\n-    pub ack: u32,           // acknowledgement number\n-    pub flags: TcpFlags,    // flags, last 6 are flags(U, A, P, R, S, F)\n-    pub win: u16,           // window size\n-    pub urg: u16,           // urgent pointer\n-    pub data: &'a [u8]      // data buffer\n+    pub seq: u32,        // sequence number\n+    pub ack: u32,        // acknowledgement number\n+    pub flags: TcpFlags, // flags, last 6 are flags(U, A, P, R, S, F)\n+    pub win: u16,        // window size\n+    pub urg: u16,        // urgent pointer\n+    pub data: &'a [u8],  // data buffer\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 27 to 27)\n-impl<'a> TCPPacket<'a>  {\n+impl<'a> TCPPacket<'a> {\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 33 to 36)\n-        let eth_header = unsafe{data_ptr_iter.next_mut::<Eth>()}.unwrap();\n-        let ip_header = unsafe{data_ptr_iter.next_mut::<Ip>()}.unwrap();\n-        let tcp_header = unsafe{data_ptr_iter.next_mut::<TCP>()}.unwrap();\n-        let tcp_data = unsafe {data_ptr_iter.get_curr_arr_mut()};\n+        let eth_header = unsafe { data_ptr_iter.next_mut::<Eth>() }.unwrap();\n+        let ip_header = unsafe { data_ptr_iter.next_mut::<Ip>() }.unwrap();\n+        let tcp_header = unsafe { data_ptr_iter.next_mut::<TCP>() }.unwrap();\n+        let tcp_data = unsafe { data_ptr_iter.get_curr_arr_mut() };\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 38 to 38)\n-\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 42 to 42)\n-        \n+\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 48 to 48)\n-        ip_header.id  = 0; // packet identified, use 0 as default\n+        ip_header.id = 0; // packet identified, use 0 as default\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 64 to 64)\n-        \n+\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 69 to 69)\n-        tcp_header.sum = check_sum(tcp_header as *mut _ as *mut u8, (TCP_LEN + self.data_len) as _, sum); // tcp checksum. zero means no checksum is provided.\n+        tcp_header.sum = check_sum(\n+            tcp_header as *mut _ as *mut u8,\n+            (TCP_LEN + self.data_len) as _,\n+            sum,\n+        ); // tcp checksum. zero means no checksum is provided.\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 74 to 74)\n-    pub fn reply(&self, data: &'a[u8]) -> Self {\n+    pub fn reply(&self, data: &'a [u8]) -> Self {\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 90 to 90)\n-        \n+\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 108 to 108)\n-            data: TCP_EMPTY_DATA\n+            data: TCP_EMPTY_DATA,\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 112 to 112)\n+\n"
            ],
            "Clippy(Warn)": [
              "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/packets/tcp.rs:63:34\n   |\n63 |         tcp_data.copy_from_slice(&self.data);\n   |                                  ^^^^^^^^^^ help: change this to: `self.data`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
            ]
          }
        },
        {
          "file": "src/packets/udp.rs",
          "features": "",
          "count": 14,
          "kinds": {
            "Clippy(Warn)": [
              "warning: this function has too many arguments (8/7)\n  --> src/packets/udp.rs:22:5\n   |\n22 | /     pub fn new(source_ip: IPv4, source_mac: MacAddress, source_port: u16, \n23 | |         dest_ip: IPv4, dest_mac: MacAddress, dest_port: u16, \n24 | |         data_len: usize, data: &'a [u8]) -> Self {\n   | |________________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n   = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n",
              "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/packets/udp.rs:68:34\n   |\n68 |         udp_data.copy_from_slice(&self.data);\n   |                                  ^^^^^^^^^^ help: change this to: `self.data`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
            ],
            "Unformatted": [
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 3 to 4)\n-use crate::consts::{ETH_RTYPE_IP, IP_PROTOCAL_UDP, IP_HEADER_VHL};\n-use crate::net::{UDP, Eth, Ip, UDP_LEN, IP_LEN, ETH_LEN};\n+use crate::consts::{ETH_RTYPE_IP, IP_HEADER_VHL, IP_PROTOCAL_UDP};\n+use crate::net::{Eth, Ip, ETH_LEN, IP_LEN, UDP, UDP_LEN};\n+use crate::utils::{check_sum, UnsafeRefIter};\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 7 to 7)\n-use crate::utils::{UnsafeRefIter, check_sum};\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 18 to 18)\n-    pub data: &'a [u8]\n+    pub data: &'a [u8],\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 22 to 24)\n-    pub fn new(source_ip: IPv4, source_mac: MacAddress, source_port: u16, \n-        dest_ip: IPv4, dest_mac: MacAddress, dest_port: u16, \n-        data_len: usize, data: &'a [u8]) -> Self {\n+    pub fn new(\n+        source_ip: IPv4,\n+        source_mac: MacAddress,\n+        source_port: u16,\n+        dest_ip: IPv4,\n+        dest_mac: MacAddress,\n+        dest_port: u16,\n+        data_len: usize,\n+        data: &'a [u8],\n+    ) -> Self {\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 33 to 33)\n-            data\n+            data,\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 42 to 45)\n-        let eth_header = unsafe{data_ptr_iter.next_mut::<Eth>()}.unwrap();\n-        let ip_header = unsafe{data_ptr_iter.next_mut::<Ip>()}.unwrap();\n-        let udp_header = unsafe{data_ptr_iter.next_mut::<UDP>()}.unwrap();\n-        let udp_data = unsafe {data_ptr_iter.get_curr_arr_mut()};\n+        let eth_header = unsafe { data_ptr_iter.next_mut::<Eth>() }.unwrap();\n+        let ip_header = unsafe { data_ptr_iter.next_mut::<Ip>() }.unwrap();\n+        let udp_header = unsafe { data_ptr_iter.next_mut::<UDP>() }.unwrap();\n+        let udp_data = unsafe { data_ptr_iter.get_curr_arr_mut() };\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 47 to 47)\n-\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 51 to 51)\n-        \n+\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 57 to 57)\n-        ip_header.id  = 0; // packet identified, use 0 as default\n+        ip_header.id = 0; // packet identified, use 0 as default\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 65 to 66)\n-        udp_header.sum   = 0; // udp checksum   zero means no checksum is provided.\n-        udp_header.ulen  = ((self.data_len + UDP_LEN) as u16).to_be();\n+        udp_header.sum = 0; // udp checksum   zero means no checksum is provided.\n+        udp_header.ulen = ((self.data_len + UDP_LEN) as u16).to_be();\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 75 to 82)\n-            self.dest_ip, \n-            self.dest_mac, \n-            self.dest_port, \n-            self.source_ip, \n-            self.source_mac, \n-            self.source_port, \n-            data.len(), \n-            data\n+            self.dest_ip,\n+            self.dest_mac,\n+            self.dest_port,\n+            self.source_ip,\n+            self.source_mac,\n+            self.source_port,\n+            data.len(),\n+            data,\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 86 to 86)\n+\n"
            ]
          }
        },
        {
          "file": "src/utils.rs",
          "features": "",
          "count": 12,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/utils.rs (original lines from 5 to 5)\n-    end: usize\n+    end: usize,\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/utils.rs (original lines from 11 to 13)\n-        Self { \n-            ptr: data.as_ptr() as usize, \n-            end: data.as_ptr() as usize + data.len()\n+        Self {\n+            ptr: data.as_ptr() as usize,\n+            end: data.as_ptr() as usize + data.len(),\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/utils.rs (original lines from 40 to 40)\n-    pub unsafe fn get_curr_arr(&self) -> &'static [u8]{\n+    pub unsafe fn get_curr_arr(&self) -> &'static [u8] {\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/utils.rs (original lines from 45 to 45)\n-    pub unsafe fn get_curr_arr_mut(&self) -> &'static mut [u8]{\n+    pub unsafe fn get_curr_arr_mut(&self) -> &'static mut [u8] {\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/utils.rs (original lines from 51 to 52)\n-pub fn check_sum(addr:*mut u8, len:u32, sum: u32) -> u16 {\n-    let mut sum:u32 = sum;\n+pub fn check_sum(addr: *mut u8, len: u32, sum: u32) -> u16 {\n+    let mut sum: u32 = sum;\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/utils.rs (original lines from 55 to 57)\n-    \n-     while nleft > 1 {\n-        sum += unsafe{ *w as u32 };\n+\n+    while nleft > 1 {\n+        sum += unsafe { *w as u32 };\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/utils.rs (original lines from 65 to 65)\n-     }\n+    }\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/utils.rs (original lines from 67 to 69)\n-     if nleft == 1 {\n-        sum += unsafe { *(w as *const u8) as u32};\n-     }\n+    if nleft == 1 {\n+        sum += unsafe { *(w as *const u8) as u32 };\n+    }\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/utils.rs (original lines from 71 to 71)\n+    sum = (sum & 0xFFFF) + (sum >> 16);\n+    sum = sum + (sum >> 16);\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/utils.rs (original lines from 72 to 73)\n-     sum = (sum & 0xFFFF) + (sum >> 16);\n-     sum = sum + (sum >> 16);\n+    let answer: u16 = !sum as u16;\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/utils.rs (original lines from 75 to 77)\n-     let answer:u16 = !sum as u16;\n-\n-     answer\n+    answer\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/utils.rs (original lines from 79 to 79)\n+\n"
            ]
          }
        },
        {
          "file": "src/addr.rs",
          "features": "",
          "count": 10,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/addr.rs (original lines from 1 to 1)\n-use core::fmt::{Display, Debug};\n+use core::fmt::{Debug, Display};\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/addr.rs (original lines from 3 to 3)\n-use alloc::{string::String, format};\n+use alloc::{format, string::String};\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/addr.rs (original lines from 18 to 18)\n-        format!(\"{}.{}.{}.{}\", (self.0 >> 24) & 0xff, (self.0 >> 16) & 0xff, (self.0 >> 8) & 0xff, self.0 & 0xff)\n+        format!(\n+            \"{}.{}.{}.{}\",\n+            (self.0 >> 24) & 0xff,\n+            (self.0 >> 16) & 0xff,\n+            (self.0 >> 8) & 0xff,\n+            self.0 & 0xff\n+        )\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/addr.rs (original lines from 50 to 50)\n-        format!(\"{:x}:{:x}:{:x}:{:x}:{:x}:{:x}\", self.0[0], self.0[1], self.0[2], self.0[3], self.0[4], self.0[5])\n+        format!(\n+            \"{:x}:{:x}:{:x}:{:x}:{:x}:{:x}\",\n+            self.0[0], self.0[1], self.0[2], self.0[3], self.0[4], self.0[5]\n+        )\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/addr.rs (original lines from 62 to 62)\n-        f.debug_tuple(\"MacAddress\").field(&self.to_string()).finish()\n+        f.debug_tuple(\"MacAddress\")\n+            .field(&self.to_string())\n+            .finish()\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/addr.rs (original lines from 65 to 65)\n+\n"
            ],
            "Clippy(Warn)": [
              "warning: operator precedence can trip the unwary\n  --> src/addr.rs:10:14\n   |\n10 |         IPv4((a1 as u32) << 24 | (a2 as u32) << 16 | (a3 as u32) << 8 | (a4 as u32))\n   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(a1 as u32) << 24 | (a2 as u32) << 16 | ((a3 as u32) << 8)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n   = note: `#[warn(clippy::precedence)]` on by default\n\n",
              "warning: operator precedence can trip the unwary\n  --> src/addr.rs:10:14\n   |\n10 |         IPv4((a1 as u32) << 24 | (a2 as u32) << 16 | (a3 as u32) << 8 | (a4 as u32))\n   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((a1 as u32) << 24) | ((a2 as u32) << 16)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n\n"
            ],
            "Clippy(Error)": [
              "error: type `addr::IPv4` implements inherent method `to_string(&self) -> String` which shadows the implementation of `Display`\n  --> src/addr.rs:17:5\n   |\n17 | /     pub fn to_string(&self) -> String {\n18 | |         format!(\"{}.{}.{}.{}\", (self.0 >> 24) & 0xff, (self.0 >> 16) & 0xff, (self.0 >> 8) & 0xff, self.0 & 0xff)\n19 | |     }\n   | |_____^\n   |\n   = help: remove the inherent method from type `addr::IPv4`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inherent_to_string_shadow_display\n   = note: `#[deny(clippy::inherent_to_string_shadow_display)]` on by default\n\n",
              "error: type `addr::MacAddress` implements inherent method `to_string(&self) -> String` which shadows the implementation of `Display`\n  --> src/addr.rs:49:5\n   |\n49 | /     pub fn to_string(&self) -> String {\n50 | |         format!(\"{:x}:{:x}:{:x}:{:x}:{:x}:{:x}\", self.0[0], self.0[1], self.0[2], self.0[3], self.0[4], self.0[5])\n51 | |     }\n   | |_____^\n   |\n   = help: remove the inherent method from type `addr::MacAddress`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inherent_to_string_shadow_display\n\n"
            ]
          }
        },
        {
          "file": "src/consts.rs",
          "features": "",
          "count": 5,
          "kinds": {
            "Clippy(Warn)": [
              "warning: operator precedence can trip the unwary\n  --> src/consts.rs:21:38\n   |\n21 | pub(crate) const IP_HEADER_VHL: u8 = 4 << 4 | 20 >> 2;\n   |                                      ^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(4 << 4) | (20 >> 2)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n\n",
              "warning: constant `ARP_PTYPE_ETHTYPE_IP` is never used\n  --> src/consts.rs:10:18\n   |\n10 | pub(crate) const ARP_PTYPE_ETHTYPE_IP: u16 = 0x0800;\n   |                  ^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: constant `IP_PROTOCAL_IGMP` is never used\n  --> src/consts.rs:17:18\n   |\n17 | pub(crate) const IP_PROTOCAL_IGMP: u8 = 2;\n   |                  ^^^^^^^^^^^^^^^^\n\n"
            ],
            "Unformatted": [
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/consts.rs (original lines from 5 to 5)\n-pub(crate) const ETH_RTYPE_IP: u16 =  0x0800; // Internet protocol\n+pub(crate) const ETH_RTYPE_IP: u16 = 0x0800; // Internet protocol\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/consts.rs (original lines from 24 to 24)\n+\n"
            ]
          }
        },
        {
          "file": "src/results.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/results.rs (original lines from 1 to 1)\n-use crate::packets::{udp::UDPPacket, arp::ArpPacket, tcp::TCPPacket};\n+use crate::packets::{arp::ArpPacket, tcp::TCPPacket, udp::UDPPacket};\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/results.rs (original lines from 11 to 11)\n-    None\n+    None,\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/results.rs (original lines from 18 to 18)\n+\n"
            ]
          }
        },
        {
          "file": "src/packets/mod.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/mod.rs (original lines from 1 to 1)\n-pub mod udp;\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/packets/mod.rs (original lines from 4 to 4)\n+pub mod udp;\n+\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=lose-net-stack, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_2/Byte-OS/lose-net-stack\n// cmd=cargo clippy --target riscv64imac-unknown-none-elf  --no-deps\n// timestamp=2025-02-16 22:46:20.559038195 +08:00:00\n    Checking bitflags v1.3.2\n    Checking lose-net-stack v0.1.0 (/home/runner/check/batch_2/Byte-OS/lose-net-stack)\nerror: could not compile `lose-net-stack` (lib) due to 2 previous errors; 19 warnings emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=lose-net-stack, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_2/Byte-OS/lose-net-stack\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \n// timestamp=2025-03-07 17:21:06.698199469 +08:00:00\n    Building lose-net-stack v0.1.0 (current)\n       Built [   0.324s] (current)\n     Parsing lose-net-stack v0.1.0 (current)\n      Parsed [   0.003s] (current)\nerror: lose-net-stack not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=lose-net-stack, checker=Outdated\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_2/Byte-OS/lose-net-stack\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 22:46:27.8771205 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  1.3.2    ---     2.8.0   Normal  ---\nlog       0.4.17   0.4.25  0.4.25  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=lose-net-stack, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_2/Byte-OS/lose-net-stack\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \ntimestamp=2025-03-07 17:21:07.348389337 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building lose-net-stack v0.1.0 (current)\n       Built [   0.324s] (current)\n     Parsing lose-net-stack v0.1.0 (current)\n      Parsed [   0.003s] (current)\nerror: lose-net-stack not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "lose-net-stack",
      "pkg": "example",
      "count": 25,
      "raw_reports": [
        {
          "file": "src/net.rs",
          "features": "",
          "count": 11,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/example/src/net.rs (original lines from 167 to 167)\n-    if tcp_packet.data_len > 10 && tcp_packet.data[..4] == [0x47,0x45,0x54, 0x20] {\n+    if tcp_packet.data_len > 10 && tcp_packet.data[..4] == [0x47, 0x45, 0x54, 0x20] {\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/example/src/net.rs (original lines from 180 to 180)\n-            net.send(&reply_packet.build_data()).expect(\"can't send reply packet\");\n+            net.send(&reply_packet.build_data())\n+                .expect(\"can't send reply packet\");\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/example/src/net.rs (original lines from 187 to 187)\n-        net.send(&reply_packet.build_data()).expect(\"can't send reply packet\");\n+        net.send(&reply_packet.build_data())\n+            .expect(\"can't send reply packet\");\n"
            ],
            "Clippy(Warn)": [
              "warning: using `println!(\"\")`\n   --> src/net.rs:146:9\n    |\n146 |         println!(\"\");\n    |         ^^^^^^^^^^^^ help: replace it with: `println!()`\n    |\n    = note: `#[warn(clippy::println_empty_string)]` on by default\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#println_empty_string\n\n",
              "warning: this call to `as_ref` does nothing\n  --> src/net.rs:58:45\n   |\n58 |                     String::from_utf8_lossy(udp_packet.data.as_ref())\n   |                                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `udp_packet.data`\n   |\n   = note: `#[warn(clippy::useless_asref)]` on by default\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_asref\n\n",
              "warning: this call to `as_ref` does nothing\n  --> src/net.rs:60:25\n   |\n60 |                 hexdump(udp_packet.data.as_ref());\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `udp_packet.data`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_asref\n\n",
              "warning: this call to `as_ref` does nothing\n  --> src/net.rs:62:44\n   |\n62 |                 if String::from_utf8_lossy(udp_packet.data.as_ref()) == \"this is a ping!\" {\n   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `udp_packet.data`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_asref\n\n",
              "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/net.rs:76:30\n   |\n76 |                     net.send(&reply_data).expect(\"can't send to net\");\n   |                              ^^^^^^^^^^^ help: change this to: `reply_data`\n   |\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
              "warning: this call to `as_ref` does nothing\n   --> src/net.rs:100:49\n    |\n100 |                         String::from_utf8_lossy(tcp_packet.data.as_ref())\n    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `tcp_packet.data`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_asref\n\n",
              "warning: this call to `as_ref` does nothing\n   --> src/net.rs:103:29\n    |\n103 |                     hexdump(tcp_packet.data.as_ref());\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `tcp_packet.data`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_asref\n\n",
              "warning: manual `RangeInclusive::contains` implementation\n   --> src/net.rs:136:20\n    |\n136 |                 if c >= 0x20 && c <= 0x7e {\n    |                    ^^^^^^^^^^^^^^^^^^^^^^ help: use: `(0x20..=0x7e).contains(&c)`\n    |\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n\n"
            ]
          }
        },
        {
          "file": "src/main.rs",
          "features": "",
          "count": 5,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/example/src/main.rs (original lines from 15 to 15)\n-mod net;\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/example/src/main.rs (original lines from 17 to 17)\n+mod net;\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/example/src/main.rs (original lines from 20 to 20)\n-/// \n+///\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/example/src/main.rs (original lines from 24 to 24)\n-\n",
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/example/src/main.rs (original lines from 26 to 26)\n-\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_2/Byte-OS/lose-net-stack/src/consts.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: constant `ARP_PTYPE_ETHTYPE_IP` is never used\n  --> /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/consts.rs:10:18\n   |\n10 | pub(crate) const ARP_PTYPE_ETHTYPE_IP: u16 = 0x0800;\n   |                  ^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: constant `IP_PROTOCAL_IGMP` is never used\n  --> /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/consts.rs:17:18\n   |\n17 | pub(crate) const IP_PROTOCAL_IGMP: u8 = 2;\n   |                  ^^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_2/Byte-OS/lose-net-stack/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused `#[macro_use]` import\n  --> /home/runner/check/batch_2/Byte-OS/lose-net-stack/src/lib.rs:13:1\n   |\n13 | #[macro_use]\n   | ^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=example, checker=Lockbud\n// toolchain=nightly-2022-08-08, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/lose-net-stack/example\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64imac-unknown-none-elf \n// timestamp=2025-03-07 21:51:44.249519128 +08:00:00\nwarning: `/home/runner/check/batch_1/Byte-OS/lose-net-stack/example/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/batch_1/Byte-OS/lose-net-stack/example/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\n   Compiling proc-macro2 v1.0.51\n   Compiling autocfg v1.1.0\n   Compiling unicode-ident v1.0.6\n   Compiling quote v1.0.23\n   Compiling log v0.4.17\n   Compiling scopeguard v1.1.0\n   Compiling syn v1.0.109\n   Compiling cfg-if v1.0.0\n[2025-03-07T13:51:44Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.17/src/lib.rs:1522:11: 1522:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.17/src/lib.rs:1525:13: 1525:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-03-07T13:51:44Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\nerror[E0635]: unknown feature `proc_macro_span_shrink`\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.51/src/lib.rs:92:30\n   |\n92 |     feature(proc_macro_span, proc_macro_span_shrink)\n   |                              ^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling lock_api v0.4.9\n   Compiling byteorder v1.4.3\n   Compiling bitflags v1.3.2\n   Compiling spin v0.5.2\n   Compiling lazy_static v1.4.0\n   Compiling lose-net-stack v0.1.0 (/home/runner/check/batch_1/Byte-OS/lose-net-stack)\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `proc-macro2` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nwarning: unused `#[macro_use]` import\n  --> /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs:13:1\n   |\n13 | #[macro_use]\n   | ^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: variable does not need to be mutable\n  --> /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs:55:13\n   |\n55 |         let mut eth_header = unsafe{ data_ptr_iter.next_mut::<Eth>() }.unwrap();\n   |             ----^^^^^^^^^^\n   |             |\n   |             help: remove this `mut`\n   |\n   = note: `#[warn(unused_mut)]` on by default\n\nwarning: variable does not need to be mutable\n  --> /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs:61:13\n   |\n61 |         let mut arp_header = unsafe { data_ptr_iter.next_mut::<Arp>() }.unwrap();\n   |             ----^^^^^^^^^^\n   |             |\n   |             help: remove this `mut`\n\nwarning: constant `ARP_PTYPE_ETHTYPE_IP` is never used\n  --> /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/consts.rs:10:18\n   |\n10 | pub(crate) const ARP_PTYPE_ETHTYPE_IP: u16 = 0x0800;\n   |                  ^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\nwarning: constant `IP_PROTOCAL_IGMP` is never used\n  --> /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/consts.rs:17:18\n   |\n17 | pub(crate) const IP_PROTOCAL_IGMP: u8 = 2;\n   |                  ^^^^^^^^^^^^^^^^\n\nwarning: `lose-net-stack` (lib) generated 5 warnings (run `cargo fix --lib -p lose-net-stack` to apply 2 suggestions)\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=example, checker=Rapx\n// toolchain=nightly-2022-08-08, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_2/Byte-OS/lose-net-stack/example\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64imac-unknown-none-elf \n// timestamp=2025-02-16 22:46:23.388671005 +08:00:00\nwarning: `/home/runner/check/batch_2/Byte-OS/lose-net-stack/example/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/batch_2/Byte-OS/lose-net-stack/example/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\n   Compiling proc-macro2 v1.0.51\n   Compiling autocfg v1.1.0\n   Compiling unicode-ident v1.0.6\n   Compiling quote v1.0.23\n    Checking scopeguard v1.1.0\n   Compiling log v0.4.17\n   Compiling syn v1.0.109\n    Checking cfg-if v1.0.0\n   Compiling lock_api v0.4.9\nerror[E0635]: unknown feature `proc_macro_span_shrink`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.51/src/lib.rs:92:30\n   |\n92 |     feature(proc_macro_span, proc_macro_span_shrink)\n   |                              ^^^^^^^^^^^^^^^^^^^^^^\n\n    Checking bitflags v1.3.2\n    Checking byteorder v1.4.3\n    Checking spin v0.5.2\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `proc-macro2` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n14:46:24|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 732 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (22 crate dependencies)\nCrate:     linked_list_allocator\nVersion:   0.9.1\nTitle:     Multiple vulnerabilities resulting in out-of-bounds writes\nDate:      2022-09-07\nID:        RUSTSEC-2022-0063\nURL:       https://rustsec.org/advisories/RUSTSEC-2022-0063\nSeverity:  8.4 (high)\nSolution:  Upgrade to >=0.10.2\nDependency tree:\nlinked_list_allocator 0.9.1\n└── opensbi-rt 0.1.0\n    └── example 0.1.0\n\nCrate:     zerocopy\nVersion:   0.6.1\nTitle:     Some Ref methods are unsound with some type parameters\nDate:      2023-12-14\nID:        RUSTSEC-2023-0074\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0074\nSolution:  Upgrade to >=0.2.9, <0.3.0 OR >=0.3.2, <0.4.0 OR >=0.4.1, <0.5.0 OR >=0.5.2, <0.6.0 OR >=0.6.6, <0.7.0 OR >=0.7.31\nDependency tree:\nzerocopy 0.6.1\n└── virtio-drivers 0.3.0\n    └── example 0.1.0\n\nCrate:     spin\nVersion:   0.9.4\nWarning:   unsound\nTitle:     Initialisation failure in `Once::try_call_once` can lead to undefined behaviour for other initialisers\nDate:      2023-03-31\nID:        RUSTSEC-2023-0031\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0031\nDependency tree:\nspin 0.9.4\n└── opensbi-rt 0.1.0\n    └── example 0.1.0\n\nCrate:     spin\nVersion:   0.9.4\nWarning:   yanked\n\nCrate:     zerocopy\nVersion:   0.6.1\nWarning:   yanked\n\nwarning: 3 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 732,\n    \"last-commit\": \"ddccfe8aced779f7b54d27bbe7e122ecb1dda33a\",\n    \"last-updated\": \"2025-02-14T08:11:43Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 22\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 2,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2022-0063\",\n          \"package\": \"linked_list_allocator\",\n          \"title\": \"Multiple vulnerabilities resulting in out-of-bounds writes\",\n          \"description\": \"* The heap initialization methods were missing a minimum size check for the given heap size argument. This could lead to **out-of-bound writes** when a heap was initialized with a size smaller than `3 * size_of::<usize>` because of metadata write operations.\\n* When calling `Heap::extend` with a size smaller than two `usize`s (e.g., 16 on `x86_64`), the size was erroneously rounded up to the minimum size, which could result in an **out-of-bounds write**.\\n* Calling `Heap::extend` on an empty heap tried to construct a heap starting at address 0, which is also an **out-of-bounds write**.\\n  * One specific way to trigger this accidentally is to call `Heap::new` (or a similar constructor) with a heap size that is smaller than two `usize`s. This was treated as an empty heap as well.\\n* Calling `Heap::extend` on a heap whose size is not a multiple of the size of two `usize`s resulted in unaligned writes. It also left the heap in an unexpected state, which might lead to subsequent issues. We did not find a way to exploit this undefined behavior yet (apart from DoS on platforms that fault on unaligned writes).\",\n          \"date\": \"2022-09-07\",\n          \"aliases\": [\n            \"CVE-2022-36086\",\n            \"GHSA-xg8p-34w2-j49j\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-corruption\"\n          ],\n          \"keywords\": [],\n          \"cvss\": \"CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H\",\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/advisories/GHSA-xg8p-34w2-j49j\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10.2\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": null,\n        \"package\": {\n          \"name\": \"linked_list_allocator\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"549ce1740e46b291953c4340adcd74c59bcf4308f4cac050fd33ba91b7168f4a\",\n          \"dependencies\": [\n            {\n              \"name\": \"spinning_top\",\n              \"version\": \"0.2.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      },\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0074\",\n          \"package\": \"zerocopy\",\n          \"title\": \"Some Ref methods are unsound with some type parameters\",\n          \"description\": \"The `Ref` methods `into_ref`, `into_mut`, `into_slice`, and `into_slice_mut` are unsound\\nand may allow safe code to exhibit undefined behavior when used with `Ref<B, T>` where `B`\\nis [`cell::Ref`](https://doc.rust-lang.org/core/cell/struct.Ref.html) or\\n[`cell::RefMut`](https://doc.rust-lang.org/core/cell/struct.RefMut.html). Note that these\\nmethods remain sound when used with `B` types other than `cell::Ref` or `cell::RefMut`.\\n\\nSee https://github.com/google/zerocopy/issues/716 for a more in-depth analysis.\\n\\nThe current plan is to yank the affected versions soon. See\\nhttps://github.com/google/zerocopy/issues/679 for more detail.\",\n          \"date\": \"2023-12-14\",\n          \"aliases\": [\n            \"GHSA-3mv5-343c-w2qg\",\n            \"GHSA-rjhf-4mh8-9xjq\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"ref\",\n            \"refcell\",\n            \"mutable-aliasing\"\n          ],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/google/zerocopy/issues/716\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.2.9, <0.3.0\",\n            \">=0.3.2, <0.4.0\",\n            \">=0.4.1, <0.5.0\",\n            \">=0.5.2, <0.6.0\",\n            \">=0.6.6, <0.7.0\",\n            \">=0.7.31\"\n          ],\n          \"unaffected\": [\n            \"<0.2.2\"\n          ]\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"zerocopy::Ref::into_mut\": [\n              \">=0.2.2, <0.2.9\",\n              \">=0.3.0, <0.3.2\",\n              \">=0.4.0, <0.4.1\",\n              \">=0.5.0, <0.5.2\",\n              \">=0.6.0, <0.6.6\",\n              \">=0.7.0, <0.7.31\"\n            ],\n            \"zerocopy::Ref::into_mut_slice\": [\n              \">=0.2.2, <0.2.9\",\n              \">=0.3.0, <0.3.2\",\n              \">=0.4.0, <0.4.1\",\n              \">=0.5.0, <0.5.2\",\n              \">=0.6.0, <0.6.6\",\n              \">=0.7.0, <0.7.31\"\n            ],\n            \"zerocopy::Ref::into_ref\": [\n              \">=0.2.2, <0.2.9\",\n              \">=0.3.0, <0.3.2\",\n              \">=0.4.0, <0.4.1\",\n              \">=0.5.0, <0.5.2\",\n              \">=0.6.0, <0.6.6\",\n              \">=0.7.0, <0.7.31\"\n            ],\n            \"zerocopy::Ref::into_slice\": [\n              \">=0.2.2, <0.2.9\",\n              \">=0.3.0, <0.3.2\",\n              \">=0.4.0, <0.4.1\",\n              \">=0.5.0, <0.5.2\",\n              \">=0.6.0, <0.6.6\",\n              \">=0.7.0, <0.7.31\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"zerocopy\",\n          \"version\": \"0.6.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"332f188cc1bcf1fe1064b8c58d150f497e697f49774aa846f2dc949d9a25f236\",\n          \"dependencies\": [\n            {\n              \"name\": \"byteorder\",\n              \"version\": \"1.4.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"zerocopy-derive\",\n              \"version\": \"0.3.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"spin\",\n          \"version\": \"0.9.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"7f6002a767bff9e83f8eeecf883ecb8011875a21ae8da43bffb817a57e78cc09\",\n          \"dependencies\": [\n            {\n              \"name\": \"lock_api\",\n              \"version\": \"0.4.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0031\",\n          \"package\": \"spin\",\n          \"title\": \"Initialisation failure in `Once::try_call_once` can lead to undefined behaviour for other initialisers\",\n          \"description\": \"`Once::try_call_once` is unsound if invoked more than once concurrently and any call fails to initialise successfully.\",\n          \"date\": \"2023-03-31\",\n          \"aliases\": [\n            \"GHSA-2qv5-7mw5-j3cg\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/mvdnes/spin-rs/issues/148\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.9.8\"\n          ],\n          \"unaffected\": [\n            \"<0.9.3\"\n          ]\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"spin\",\n          \"version\": \"0.9.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"7f6002a767bff9e83f8eeecf883ecb8011875a21ae8da43bffb817a57e78cc09\",\n          \"dependencies\": [\n            {\n              \"name\": \"lock_api\",\n              \"version\": \"0.4.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      },\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"zerocopy\",\n          \"version\": \"0.6.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"332f188cc1bcf1fe1064b8c58d150f497e697f49774aa846f2dc949d9a25f236\",\n          \"dependencies\": [\n            {\n              \"name\": \"byteorder\",\n              \"version\": \"1.4.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"zerocopy-derive\",\n              \"version\": \"0.3.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=example, checker=Outdated\ntoolchain=nightly-2022-08-08, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_2/Byte-OS/lose-net-stack/example\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 22:46:27.614232124 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\nlazy_static     1.4.0    1.5.0   1.5.0   Normal  ---\nlog             0.4.17   0.4.25  0.4.25  Normal  ---\nvirtio-drivers  0.3.0    ---     0.9.0   Normal  ---\n"
            ]
          }
        },
        {
          "file": "src/dns.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/example/src/dns.rs (original lines from 1 to 1)\n+\n+\n"
            ]
          }
        },
        {
          "file": "src/virtio_impls.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_2/Byte-OS/lose-net-stack/example/src/virtio_impls.rs (original lines from 51 to 51)\n+\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}