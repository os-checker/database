{
  "repo": {
    "user": "Byte-OS",
    "repo": "ByteOS"
  },
  "data": [
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "fs",
      "count": 11,
      "raw_reports": [
        {
          "file": "filesystem/fs/src/file.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: using `clone` on type `usize` which implements the `Copy` trait\n  --> filesystem/fs/src/file.rs:24:32\n   |\n24 |             offset: Mutex::new(self.offset.lock().clone()),\n   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*self.offset.lock()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n",
              "warning: using `clone` on type `OpenFlags` which implements the `Copy` trait\n  --> filesystem/fs/src/file.rs:25:31\n   |\n25 |             flags: Mutex::new(self.flags.lock().clone()),\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*self.flags.lock()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=fs, checker=Audit\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/fs\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:46.174149585 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=fs, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/fs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:15:15.13526452 +08:00:00\n    Building fs v0.1.0 (current)\nerror: running cargo-doc on crate 'fs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n    Checking bitflags v2.9.1\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling toml_datetime v0.6.11\n   Compiling rustversion v1.0.21\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.13.0\n    Checking sbi-spec v0.0.4\n   Compiling toml_edit v0.22.27\n   Compiling polyhal v0.4.0\n    Checking riscv-pac v0.2.0\n    Checking log v0.4.27\n    Checking critical-section v1.2.0\n   Compiling syscalls v0.6.18 (https://github.com/jasonwhite/syscalls.git#92624de3)\n    Checking embedded-hal v1.0.0\n    Checking sbi-rt v0.0.2\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking spin v0.10.0\n    Checking lazyinit v0.2.2\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking cfg-if v1.0.1\n    Checking arrayvec v0.7.6\n   Compiling linkme-impl v0.3.33\n    Checking fdt-parser v0.4.17\n    Checking buddy_system_allocator v0.9.1\n    Checking bit_field v0.10.2\n    Checking downcast-rs v2.0.1\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling fs v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/fs)\n   Compiling proc-macro-crate v3.3.0\n   Compiling riscv-macros v0.2.0\n   Compiling num_enum_derive v0.7.4\n   Compiling polyhal-macro v0.4.0\n    Checking linkme v0.3.33\n    Checking num_enum v0.7.4\n    Checking libc-types v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate fs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/fs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate fs v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=fs, checker=Udeps\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/fs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:24:52.628286792 +08:00:00\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking libc-types v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types)\n    Checking polyhal v0.4.0\n   Compiling fs v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/fs)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=fs, checker=Udeps\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/fs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:24:53.220135803 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking libc-types v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types)\n    Checking polyhal v0.4.0\n   Compiling fs v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/fs)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=fs, checker=Outdated\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/fs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:21:36.567185945 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.9.0    2.9.1   2.9.1   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=fs, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/fs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:15:22.027770453 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building fs v0.1.0 (current)\nerror: running cargo-doc on crate 'fs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n    Checking bitflags v2.9.1\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling toml_datetime v0.6.11\n   Compiling rustversion v1.0.21\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.13.0\n    Checking sbi-spec v0.0.4\n   Compiling toml_edit v0.22.27\n   Compiling polyhal v0.4.0\n    Checking riscv-pac v0.2.0\n    Checking log v0.4.27\n    Checking critical-section v1.2.0\n   Compiling syscalls v0.6.18 (https://github.com/jasonwhite/syscalls.git#92624de3)\n    Checking embedded-hal v1.0.0\n    Checking sbi-rt v0.0.2\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking spin v0.10.0\n    Checking lazyinit v0.2.2\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking cfg-if v1.0.1\n    Checking arrayvec v0.7.6\n   Compiling linkme-impl v0.3.33\n    Checking fdt-parser v0.4.17\n    Checking buddy_system_allocator v0.9.1\n    Checking bit_field v0.10.2\n    Checking downcast-rs v2.0.1\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling fs v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/fs)\n   Compiling proc-macro-crate v3.3.0\n   Compiling riscv-macros v0.2.0\n   Compiling num_enum_derive v0.7.4\n   Compiling polyhal-macro v0.4.0\n    Checking linkme v0.3.33\n    Checking num_enum v0.7.4\n    Checking libc-types v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate fs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/fs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate fs v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "executor",
      "count": 10,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=executor, checker=Audit\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/executor\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:41.676326225 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=executor, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/executor\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:14:07.134183472 +08:00:00\n    Building executor v0.1.0 (current)\nerror: running cargo-doc on crate 'executor' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n    Checking scopeguard v1.2.0\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling paste v1.0.15\n   Compiling version_check v0.9.5\n   Compiling toml_datetime v0.6.11\n   Compiling zerocopy v0.8.26\n   Compiling ahash v0.8.12\n    Checking cfg-if v1.0.1\n   Compiling riscv v0.13.0\n   Compiling toml_edit v0.22.27\n    Checking static_assertions v1.1.0\n    Checking sbi-spec v0.0.4\n   Compiling polyhal v0.4.0\n    Checking critical-section v1.2.0\n    Checking once_cell v1.21.3\n    Checking embedded-hal v1.0.0\n    Checking riscv-pac v0.2.0\n    Checking sbi-rt v0.0.2\n    Checking spin v0.10.0\n    Checking spin v0.9.8\n    Checking arrayvec v0.7.6\n   Compiling proc-macro-crate v3.3.0\n    Checking fdt-parser v0.4.17\n    Checking bitflags v2.9.1\n    Checking allocator-api2 v0.2.21\n    Checking lazyinit v0.2.2\n    Checking log v0.4.27\n    Checking hashbrown v0.14.5\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking downcast-rs v2.0.1\n   Compiling riscv-macros v0.2.0\n   Compiling polyhal-macro v0.4.0\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n\n-----\n\nerror: failed to build rustdoc for crate executor v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/crates/executor &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate executor v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=executor, checker=Udeps\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/executor\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:24:46.474406151 +08:00:00\n   Compiling ahash v0.8.11\n    Checking zerocopy v0.7.32\n    Checking once_cell v1.21.0\n    Checking allocator-api2 v0.2.16\n    Checking polyhal v0.4.0\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=executor, checker=Udeps\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/executor\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:24:46.896108961 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling ahash v0.8.11\n    Checking zerocopy v0.7.32\n    Checking once_cell v1.21.0\n    Checking allocator-api2 v0.2.16\n    Checking polyhal v0.4.0\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=executor, checker=Outdated\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/executor\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:20:53.712831396 +08:00:00\n\nName       Project  Compat  Latest  Kind    Platform\n----       -------  ------  ------  ----    --------\nhashbrown  0.14.5   ---     0.15.4  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=executor, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/executor\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:14:13.395797255 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building executor v0.1.0 (current)\nerror: running cargo-doc on crate 'executor' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n    Checking scopeguard v1.2.0\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling paste v1.0.15\n   Compiling version_check v0.9.5\n   Compiling toml_datetime v0.6.11\n   Compiling zerocopy v0.8.26\n   Compiling ahash v0.8.12\n    Checking cfg-if v1.0.1\n   Compiling riscv v0.13.0\n   Compiling toml_edit v0.22.27\n    Checking static_assertions v1.1.0\n    Checking sbi-spec v0.0.4\n   Compiling polyhal v0.4.0\n    Checking critical-section v1.2.0\n    Checking once_cell v1.21.3\n    Checking embedded-hal v1.0.0\n    Checking riscv-pac v0.2.0\n    Checking sbi-rt v0.0.2\n    Checking spin v0.10.0\n    Checking spin v0.9.8\n    Checking arrayvec v0.7.6\n   Compiling proc-macro-crate v3.3.0\n    Checking fdt-parser v0.4.17\n    Checking bitflags v2.9.1\n    Checking allocator-api2 v0.2.21\n    Checking lazyinit v0.2.2\n    Checking log v0.4.27\n    Checking hashbrown v0.14.5\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking downcast-rs v2.0.1\n   Compiling riscv-macros v0.2.0\n   Compiling polyhal-macro v0.4.0\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n\n-----\n\nerror: failed to build rustdoc for crate executor v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/crates/executor &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate executor v0.1.0\n"
            ]
          }
        },
        {
          "file": "crates/executor/src/executor.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: very complex type used. Consider factoring parts into `type` definitions\n  --> crates/executor/src/executor.rs:30:12\n   |\n30 |     cores: LazyInit<Vec<Mutex<Option<Arc<dyn AsyncTask>>>>>,\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity\n   = note: `#[warn(clippy::type_complexity)]` on by default\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "ext4fs",
      "count": 10,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ext4fs, checker=Audit\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4fs\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:43.308232777 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ext4fs, checker=Clippy\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4fs\n// cmd=cargo clippy --target riscv64imac-unknown-none-elf  --no-deps\n// timestamp=2025-06-28 12:12:36.038549472 +08:00:00\n   Compiling lwext4_rust v0.2.0 (https://github.com/Azure-stars/lwext4_rust.git?rev=ee5131c#ee5131ca)\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (https://github.com/Azure-stars/lwext4_rust.git?rev=ee5131c#ee5131ca)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Byte-OS/ByteOS/target/debug/build/lwext4_rust-95b80d03d16b9754/build-script-build` (exit status: 101)\n  --- stdout\n  make: Entering directory '/home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make: Leaving directory '/home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      riscv64-linux-musl-gcc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make: *** [Makefile:37: musl-generic] Error 1\n\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/build.rs:48:9:\n  assertion failed: status.success()\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ext4fs, checker=Lockbud\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4fs\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:19:18.709665871 +08:00:00\n[2025-06-28T04:19:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling lwext4_rust v0.2.0 (https://github.com/Azure-stars/lwext4_rust.git?rev=ee5131c#ee5131ca)\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (https://github.com/Azure-stars/lwext4_rust.git?rev=ee5131c#ee5131ca)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Byte-OS/ByteOS/target/debug/build/lwext4_rust-95b80d03d16b9754/build-script-build` (exit status: 101)\n  --- stdout\n  make: Entering directory '/home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make: Leaving directory '/home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      riscv64-linux-musl-gcc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make: *** [Makefile:37: musl-generic] Error 1\n\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/build.rs:48:9:\n  assertion failed: status.success()\n  stack backtrace:\n     0:     0x5629af58bcb0 - std::backtrace_rs::backtrace::libunwind::trace::h09b3d24f06048964\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/../../backtrace/src/backtrace/libunwind.rs:116:5\n     1:     0x5629af58bcb0 - std::backtrace_rs::backtrace::trace_unsynchronized::hf47addf765c6ae4e\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x5629af58bcb0 - std::sys::backtrace::_print_fmt::h1cac4748ae805433\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:66:9\n     3:     0x5629af58bcb0 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h51876e9b806abd2f\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:39:26\n     4:     0x5629af5ada83 - core::fmt::rt::Argument::fmt::h74675d727819c734\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/fmt/rt.rs:177:76\n     5:     0x5629af5ada83 - core::fmt::write::hec8160b518640e0a\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/fmt/mod.rs:1449:21\n     6:     0x5629af588d73 - std::io::Write::write_fmt::h23dd9fd522f1ed73\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/io/mod.rs:1890:15\n     7:     0x5629af58bb02 - std::sys::backtrace::BacktraceLock::print::h82fa1cbd2f5c85f6\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:42:9\n     8:     0x5629af58ca4f - std::panicking::default_hook::{{closure}}::h0c71ebc4d32ee68d\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:298:22\n     9:     0x5629af58c8ba - std::panicking::default_hook::h869bbd2dc4246a59\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:325:9\n    10:     0x5629af58d322 - std::panicking::rust_panic_with_hook::he7cb010bd1162eb7\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:831:13\n    11:     0x5629af58d186 - std::panicking::begin_panic_handler::{{closure}}::h144a44d32326050e\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:697:13\n    12:     0x5629af58c1b9 - std::sys::backtrace::__rust_end_short_backtrace::h7baa569e657f05a9\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:168:18\n    13:     0x5629af58ce4d - rust_begin_unwind\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:695:5\n    14:     0x5629af5accb0 - core::panicking::panic_fmt::hc13ec85888cb23ce\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/panicking.rs:75:14\n    15:     0x5629af5acd3c - core::panicking::panic::h296877b1e66d3b41\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/panicking.rs:145:5\n    16:     0x5629af566639 - build_script_build::main::h5180c3d8ec01dd7a\n                                 at /home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/build.rs:48:9\n    17:     0x5629af56380b - core::ops::function::FnOnce::call_once::he7dddd4a8ebae2bd\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:250:5\n    18:     0x5629af562cde - std::sys::backtrace::__rust_begin_short_backtrace::h1eee043fe58785ce\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/backtrace.rs:152:18\n    19:     0x5629af55f441 - std::rt::lang_start::{{closure}}::h845338bd888c9f6f\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/rt.rs:199:18\n    20:     0x5629af585a10 - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::h73c200d88ac341db\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/ops/function.rs:284:13\n    21:     0x5629af585a10 - std::panicking::try::do_call::h5d854913854b71fe\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:587:40\n    22:     0x5629af585a10 - std::panicking::try::hf1ae1b2a2498e678\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:550:19\n    23:     0x5629af585a10 - std::panic::catch_unwind::hcfb0a552e6092b8e\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panic.rs:358:14\n    24:     0x5629af585a10 - std::rt::lang_start_internal::{{closure}}::hb0245fc583346cd7\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/rt.rs:168:24\n    25:     0x5629af585a10 - std::panicking::try::do_call::h946e97edafdf2f58\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:587:40\n    26:     0x5629af585a10 - std::panicking::try::ha9077e2e87ccc6a6\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:550:19\n    27:     0x5629af585a10 - std::panic::catch_unwind::hd02f80e9111b6f00\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panic.rs:358:14\n    28:     0x5629af585a10 - std::rt::lang_start_internal::h13b1bd40350dac66\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/rt.rs:164:5\n    29:     0x5629af55f427 - std::rt::lang_start::h7c3e1fee94beef88\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/rt.rs:198:5\n    30:     0x5629af566d7e - main\n    31:     0x7feb6482a1ca - <unknown>\n    32:     0x7feb6482a28b - __libc_start_main\n    33:     0x5629af55e015 - _start\n    34:                0x0 - <unknown>\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ext4fs, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4fs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:14:29.772519156 +08:00:00\n    Building ext4fs v0.1.0 (current)\nerror: running cargo-doc on crate 'ext4fs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling toml_datetime v0.6.11\n   Compiling paste v1.0.15\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n    Checking bitflags v2.9.1\n    Checking static_assertions v1.1.0\n   Compiling rustversion v1.0.21\n   Compiling riscv v0.13.0\n    Checking sbi-spec v0.0.4\n    Checking spin v0.9.8\n   Compiling polyhal v0.4.0\n    Checking embedded-hal v1.0.0\n    Checking log v0.4.27\n    Checking riscv-pac v0.2.0\n    Checking critical-section v1.2.0\n   Compiling linkme-impl v0.3.33\n   Compiling toml_edit v0.22.27\n    Checking sbi-rt v0.0.2\n    Checking spin v0.10.0\n    Checking cfg-if v1.0.1\n    Checking arrayvec v0.7.6\n    Checking lazyinit v0.2.2\n    Checking fdt-parser v0.4.17\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n   Compiling syscalls v0.6.18 (https://github.com/jasonwhite/syscalls.git#92624de3)\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking buddy_system_allocator v0.9.1\n    Checking bit_field v0.10.2\n   Compiling lwext4_rust v0.2.0 (https://github.com/Azure-stars/lwext4_rust.git?rev=ee5131c#ee5131ca)\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n    Checking downcast-rs v2.0.1\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (https://github.com/Azure-stars/lwext4_rust.git?rev=ee5131c#ee5131ca)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Byte-OS/ByteOS/target/semver-checks/local-ext4fs-0_1_0-riscv64imac_unknown_none_elf-01666ec060466c14/target/debug/build/lwext4_rust-95b80d03d16b9754/build-script-build` (exit status: 101)\n  --- stdout\n  make: Entering directory '/home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make: Leaving directory '/home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      riscv64-linux-musl-gcc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make: *** [Makefile:37: musl-generic] Error 1\n\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/build.rs:48:9:\n  assertion failed: status.success()\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate ext4fs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4fs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate ext4fs v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ext4fs, checker=Udeps\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4fs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:24:48.741464127 +08:00:00\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking polyhal v0.4.0\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n   Compiling lwext4_rust v0.2.0 (https://github.com/Azure-stars/lwext4_rust.git?rev=ee5131c#ee5131ca)\n    Checking libc-types v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (https://github.com/Azure-stars/lwext4_rust.git?rev=ee5131c#ee5131ca)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Byte-OS/ByteOS/target/debug/build/lwext4_rust-95b80d03d16b9754/build-script-build` (exit status: 101)\n  --- stdout\n  make: Entering directory '/home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make: Leaving directory '/home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      riscv64-linux-musl-gcc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make: *** [Makefile:37: musl-generic] Error 1\n\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/build.rs:48:9:\n  assertion failed: status.success()\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=ext4fs, checker=Udeps\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4fs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:24:49.378833296 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking polyhal v0.4.0\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n   Compiling lwext4_rust v0.2.0 (https://github.com/Azure-stars/lwext4_rust.git?rev=ee5131c#ee5131ca)\n    Checking libc-types v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (https://github.com/Azure-stars/lwext4_rust.git?rev=ee5131c#ee5131ca)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Byte-OS/ByteOS/target/debug/build/lwext4_rust-95b80d03d16b9754/build-script-build` (exit status: 101)\n  --- stdout\n  make: Entering directory '/home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make: Leaving directory '/home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      riscv64-linux-musl-gcc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make: *** [Makefile:37: musl-generic] Error 1\n\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/build.rs:48:9:\n  assertion failed: status.success()\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=ext4fs, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4fs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:14:35.23344564 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building ext4fs v0.1.0 (current)\nerror: running cargo-doc on crate 'ext4fs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling toml_datetime v0.6.11\n   Compiling paste v1.0.15\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n    Checking bitflags v2.9.1\n    Checking static_assertions v1.1.0\n   Compiling rustversion v1.0.21\n   Compiling riscv v0.13.0\n    Checking sbi-spec v0.0.4\n    Checking spin v0.9.8\n   Compiling polyhal v0.4.0\n    Checking embedded-hal v1.0.0\n    Checking log v0.4.27\n    Checking riscv-pac v0.2.0\n    Checking critical-section v1.2.0\n   Compiling linkme-impl v0.3.33\n   Compiling toml_edit v0.22.27\n    Checking sbi-rt v0.0.2\n    Checking spin v0.10.0\n    Checking cfg-if v1.0.1\n    Checking arrayvec v0.7.6\n    Checking lazyinit v0.2.2\n    Checking fdt-parser v0.4.17\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n   Compiling syscalls v0.6.18 (https://github.com/jasonwhite/syscalls.git#92624de3)\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking buddy_system_allocator v0.9.1\n    Checking bit_field v0.10.2\n   Compiling lwext4_rust v0.2.0 (https://github.com/Azure-stars/lwext4_rust.git?rev=ee5131c#ee5131ca)\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n    Checking downcast-rs v2.0.1\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (https://github.com/Azure-stars/lwext4_rust.git?rev=ee5131c#ee5131ca)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Byte-OS/ByteOS/target/semver-checks/local-ext4fs-0_1_0-riscv64imac_unknown_none_elf-01666ec060466c14/target/debug/build/lwext4_rust-95b80d03d16b9754/build-script-build` (exit status: 101)\n  --- stdout\n  make: Entering directory '/home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make: Leaving directory '/home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      riscv64-linux-musl-gcc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make: *** [Makefile:37: musl-generic] Error 1\n\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/build.rs:48:9:\n  assertion failed: status.success()\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate ext4fs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4fs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate ext4fs v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "kramdisk",
      "count": 10,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kramdisk, checker=Audit\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:52.466185128 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kramdisk, checker=Clippy\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk\n// cmd=cargo clippy --target riscv64imac-unknown-none-elf  --no-deps\n// timestamp=2025-06-28 12:12:53.64984051 +08:00:00\n   Compiling kramdisk v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk)\nerror: failed to run custom build command for `kramdisk v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Byte-OS/ByteOS/target/debug/build/kramdisk-bee069a1272df925/build-script-build` (exit status: 101)\n  --- stderr\n\n  thread 'main' panicked at driver/kramdisk/build.rs:13:53:\n  can't find manifest directory: NotPresent\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kramdisk, checker=Lockbud\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:19:34.205464532 +08:00:00\n[2025-06-28T04:19:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kramdisk v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk)\nerror: failed to run custom build command for `kramdisk v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Byte-OS/ByteOS/target/debug/build/kramdisk-0b919c9e6bf0b894/build-script-build` (exit status: 101)\n  --- stderr\n\n  thread 'main' panicked at driver/kramdisk/build.rs:13:53:\n  can't find manifest directory: NotPresent\n  stack backtrace:\n     0:     0x55e5d2585720 - std::backtrace_rs::backtrace::libunwind::trace::h09b3d24f06048964\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/../../backtrace/src/backtrace/libunwind.rs:116:5\n     1:     0x55e5d2585720 - std::backtrace_rs::backtrace::trace_unsynchronized::hf47addf765c6ae4e\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55e5d2585720 - std::sys::backtrace::_print_fmt::h1cac4748ae805433\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:66:9\n     3:     0x55e5d2585720 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h51876e9b806abd2f\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:39:26\n     4:     0x55e5d25a2d23 - core::fmt::rt::Argument::fmt::h74675d727819c734\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/fmt/rt.rs:177:76\n     5:     0x55e5d25a2d23 - core::fmt::write::hec8160b518640e0a\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/fmt/mod.rs:1449:21\n     6:     0x55e5d2582aa3 - std::io::Write::write_fmt::h23dd9fd522f1ed73\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/io/mod.rs:1890:15\n     7:     0x55e5d2585572 - std::sys::backtrace::BacktraceLock::print::h82fa1cbd2f5c85f6\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:42:9\n     8:     0x55e5d25864bf - std::panicking::default_hook::{{closure}}::h0c71ebc4d32ee68d\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:298:22\n     9:     0x55e5d258632a - std::panicking::default_hook::h869bbd2dc4246a59\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:325:9\n    10:     0x55e5d2586d92 - std::panicking::rust_panic_with_hook::he7cb010bd1162eb7\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:831:13\n    11:     0x55e5d2586c2a - std::panicking::begin_panic_handler::{{closure}}::h144a44d32326050e\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:704:13\n    12:     0x55e5d2585c29 - std::sys::backtrace::__rust_end_short_backtrace::h7baa569e657f05a9\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:168:18\n    13:     0x55e5d25868bd - rust_begin_unwind\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:695:5\n    14:     0x55e5d25a1f50 - core::panicking::panic_fmt::hc13ec85888cb23ce\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/panicking.rs:75:14\n    15:     0x55e5d25a22f6 - core::result::unwrap_failed::h68ee3ebc0a871e1d\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/result.rs:1704:5\n    16:     0x55e5d2563a46 - core::result::Result<T,E>::expect::ha0c8de9ab1b1600c\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:1061:23\n    17:     0x55e5d2564759 - build_script_build::main::ha4954a181e90d83d\n                                 at /home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk/build.rs:13:23\n    18:     0x55e5d256334b - core::ops::function::FnOnce::call_once::hd19b8ab106fe7b15\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:250:5\n    19:     0x55e5d2562bbe - std::sys::backtrace::__rust_begin_short_backtrace::hda555096c8e7425e\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/backtrace.rs:152:18\n    20:     0x55e5d2562a91 - std::rt::lang_start::{{closure}}::h760865ba532539ce\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/rt.rs:199:18\n    21:     0x55e5d257fce0 - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::h73c200d88ac341db\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/ops/function.rs:284:13\n    22:     0x55e5d257fce0 - std::panicking::try::do_call::h5d854913854b71fe\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:587:40\n    23:     0x55e5d257fce0 - std::panicking::try::hf1ae1b2a2498e678\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:550:19\n    24:     0x55e5d257fce0 - std::panic::catch_unwind::hcfb0a552e6092b8e\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panic.rs:358:14\n    25:     0x55e5d257fce0 - std::rt::lang_start_internal::{{closure}}::hb0245fc583346cd7\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/rt.rs:168:24\n    26:     0x55e5d257fce0 - std::panicking::try::do_call::h946e97edafdf2f58\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:587:40\n    27:     0x55e5d257fce0 - std::panicking::try::ha9077e2e87ccc6a6\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:550:19\n    28:     0x55e5d257fce0 - std::panic::catch_unwind::hd02f80e9111b6f00\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panic.rs:358:14\n    29:     0x55e5d257fce0 - std::rt::lang_start_internal::h13b1bd40350dac66\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/rt.rs:164:5\n    30:     0x55e5d2562a77 - std::rt::lang_start::h6dd3f87e7892aca1\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/rt.rs:198:5\n    31:     0x55e5d2564b0e - main\n    32:     0x7f76b282a1ca - <unknown>\n    33:     0x7f76b282a28b - __libc_start_main\n    34:     0x55e5d2562155 - _start\n    35:                0x0 - <unknown>\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kramdisk, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:16:16.578832394 +08:00:00\n    Building kramdisk v0.1.0 (current)\nerror: running cargo-doc on crate 'kramdisk' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling autocfg v1.5.0\n   Compiling unicode-ident v1.0.18\n    Checking scopeguard v1.2.0\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling paste v1.0.15\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.13.0\n    Checking sbi-spec v0.0.4\n    Checking spin v0.9.8\n   Compiling polyhal v0.4.0\n    Checking riscv-pac v0.2.0\n    Checking embedded-hal v1.0.0\n   Compiling linkme-impl v0.3.33\n    Checking critical-section v1.2.0\n   Compiling toml_edit v0.22.27\n    Checking sbi-rt v0.0.2\n    Checking spin v0.10.0\n    Checking arrayvec v0.7.6\n    Checking log v0.4.27\n    Checking cfg-if v1.0.1\n    Checking fdt-parser v0.4.17\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking lazyinit v0.2.2\n    Checking bitflags v2.9.1\n    Checking buddy_system_allocator v0.9.1\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking bit_field v0.10.2\n   Compiling kramdisk v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk)\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\nerror: failed to run custom build command for `kramdisk v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Byte-OS/ByteOS/target/semver-checks/local-kramdisk-0_1_0-riscv64imac_unknown_none_elf-01666ec060466c14/target/debug/build/kramdisk-8efddaf227e4050f/build-script-build` (exit status: 101)\n  --- stderr\n\n  thread 'main' panicked at /home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk/build.rs:13:53:\n  can't find manifest directory: NotPresent\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate kramdisk v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate kramdisk v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kramdisk, checker=Udeps\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:25:03.723005004 +08:00:00\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking polyhal v0.4.0\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n   Compiling kramdisk v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: failed to run custom build command for `kramdisk v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Byte-OS/ByteOS/target/debug/build/kramdisk-0b919c9e6bf0b894/build-script-build` (exit status: 101)\n  --- stderr\n\n  thread 'main' panicked at driver/kramdisk/build.rs:13:53:\n  can't find manifest directory: NotPresent\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=kramdisk, checker=Udeps\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:25:04.032200514 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking polyhal v0.4.0\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n   Compiling kramdisk v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: failed to run custom build command for `kramdisk v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Byte-OS/ByteOS/target/debug/build/kramdisk-0b919c9e6bf0b894/build-script-build` (exit status: 101)\n  --- stderr\n\n  thread 'main' panicked at driver/kramdisk/build.rs:13:53:\n  can't find manifest directory: NotPresent\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=kramdisk, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:16:21.348895056 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building kramdisk v0.1.0 (current)\nerror: running cargo-doc on crate 'kramdisk' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling autocfg v1.5.0\n   Compiling unicode-ident v1.0.18\n    Checking scopeguard v1.2.0\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling paste v1.0.15\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.13.0\n    Checking sbi-spec v0.0.4\n    Checking spin v0.9.8\n   Compiling polyhal v0.4.0\n    Checking riscv-pac v0.2.0\n    Checking embedded-hal v1.0.0\n   Compiling linkme-impl v0.3.33\n    Checking critical-section v1.2.0\n   Compiling toml_edit v0.22.27\n    Checking sbi-rt v0.0.2\n    Checking spin v0.10.0\n    Checking arrayvec v0.7.6\n    Checking log v0.4.27\n    Checking cfg-if v1.0.1\n    Checking fdt-parser v0.4.17\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking lazyinit v0.2.2\n    Checking bitflags v2.9.1\n    Checking buddy_system_allocator v0.9.1\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking bit_field v0.10.2\n   Compiling kramdisk v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk)\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\nerror: failed to run custom build command for `kramdisk v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Byte-OS/ByteOS/target/semver-checks/local-kramdisk-0_1_0-riscv64imac_unknown_none_elf-01666ec060466c14/target/debug/build/kramdisk-8efddaf227e4050f/build-script-build` (exit status: 101)\n  --- stderr\n\n  thread 'main' panicked at /home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk/build.rs:13:53:\n  can't find manifest directory: NotPresent\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate kramdisk v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate kramdisk v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "devfs",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=devfs, checker=Audit\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/devfs\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:37.450503522 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=devfs, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/devfs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:13:26.11128871 +08:00:00\n    Building devfs v0.1.0 (current)\nerror: running cargo-doc on crate 'devfs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling paste v1.0.15\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling toml_datetime v0.6.11\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.9.1\n   Compiling rustversion v1.0.21\n   Compiling riscv v0.13.0\n    Checking sbi-spec v0.0.4\n    Checking spin v0.9.8\n   Compiling polyhal v0.4.0\n    Checking riscv-pac v0.2.0\n    Checking embedded-hal v1.0.0\n   Compiling toml_edit v0.22.27\n    Checking critical-section v1.2.0\n   Compiling linkme-impl v0.3.33\n    Checking sbi-rt v0.0.2\n    Checking spin v0.10.0\n    Checking log v0.4.27\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking fdt-parser v0.4.17\n    Checking cfg-if v1.0.1\n    Checking arrayvec v0.7.6\n   Compiling syscalls v0.6.18 (https://github.com/jasonwhite/syscalls.git#92624de3)\n    Checking lazyinit v0.2.2\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking buddy_system_allocator v0.9.1\n    Checking bit_field v0.10.2\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n    Checking downcast-rs v2.0.1\n   Compiling proc-macro-crate v3.3.0\n   Compiling riscv-macros v0.2.0\n   Compiling num_enum_derive v0.7.4\n   Compiling polyhal-macro v0.4.0\n    Checking linkme v0.3.33\n    Checking num_enum v0.7.4\n    Checking libc-types v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate devfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/devfs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate devfs v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=devfs, checker=Udeps\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/devfs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:24:40.849999816 +08:00:00\n    Checking scopeguard v1.1.0\n   Compiling lock_api v0.4.9\n    Checking bitflags v2.9.0\n    Checking static_assertions v1.1.0\n    Checking sbi-spec v0.0.4\n   Compiling riscv v0.13.0\n    Checking critical-section v1.2.0\n    Checking embedded-hal v1.0.0\n    Checking riscv-pac v0.2.0\n    Checking sbi-rt v0.0.2\n   Compiling polyhal v0.4.0\n    Checking arrayvec v0.7.6\n    Checking lazyinit v0.2.1\n    Checking log v0.4.27\n    Checking spin v0.9.8\n    Checking spin v0.10.0\n    Checking cfg-if v1.0.0\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking fdt-parser v0.4.12\n   Compiling syscalls v0.6.18 (https://github.com/jasonwhite/syscalls.git#92624de3)\n    Checking buddy_system_allocator v0.9.0\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking num_enum v0.7.3\n    Checking bit_field v0.10.2\n    Checking libc-types v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types)\n    Checking linkme v0.3.22\n    Checking downcast-rs v2.0.1\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=devfs, checker=Udeps\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/devfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:24:41.981809463 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking scopeguard v1.1.0\n   Compiling lock_api v0.4.9\n    Checking bitflags v2.9.0\n    Checking static_assertions v1.1.0\n    Checking sbi-spec v0.0.4\n   Compiling riscv v0.13.0\n    Checking critical-section v1.2.0\n    Checking embedded-hal v1.0.0\n    Checking riscv-pac v0.2.0\n    Checking sbi-rt v0.0.2\n   Compiling polyhal v0.4.0\n    Checking arrayvec v0.7.6\n    Checking lazyinit v0.2.1\n    Checking log v0.4.27\n    Checking spin v0.9.8\n    Checking spin v0.10.0\n    Checking cfg-if v1.0.0\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking fdt-parser v0.4.12\n   Compiling syscalls v0.6.18 (https://github.com/jasonwhite/syscalls.git#92624de3)\n    Checking buddy_system_allocator v0.9.0\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking num_enum v0.7.3\n    Checking bit_field v0.10.2\n    Checking libc-types v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types)\n    Checking linkme v0.3.22\n    Checking downcast-rs v2.0.1\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=devfs, checker=Outdated\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/devfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:20:24.715844604 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.9.0    2.9.1   2.9.1   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=devfs, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/devfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:13:32.631913175 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building devfs v0.1.0 (current)\nerror: running cargo-doc on crate 'devfs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling paste v1.0.15\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling toml_datetime v0.6.11\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.9.1\n   Compiling rustversion v1.0.21\n   Compiling riscv v0.13.0\n    Checking sbi-spec v0.0.4\n    Checking spin v0.9.8\n   Compiling polyhal v0.4.0\n    Checking riscv-pac v0.2.0\n    Checking embedded-hal v1.0.0\n   Compiling toml_edit v0.22.27\n    Checking critical-section v1.2.0\n   Compiling linkme-impl v0.3.33\n    Checking sbi-rt v0.0.2\n    Checking spin v0.10.0\n    Checking log v0.4.27\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking fdt-parser v0.4.17\n    Checking cfg-if v1.0.1\n    Checking arrayvec v0.7.6\n   Compiling syscalls v0.6.18 (https://github.com/jasonwhite/syscalls.git#92624de3)\n    Checking lazyinit v0.2.2\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking buddy_system_allocator v0.9.1\n    Checking bit_field v0.10.2\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n    Checking downcast-rs v2.0.1\n   Compiling proc-macro-crate v3.3.0\n   Compiling riscv-macros v0.2.0\n   Compiling num_enum_derive v0.7.4\n   Compiling polyhal-macro v0.4.0\n    Checking linkme v0.3.33\n    Checking num_enum v0.7.4\n    Checking libc-types v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate devfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/devfs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate devfs v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "devices",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=devices, checker=Audit\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/devices\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:39.895360851 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=devices, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/devices\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:13:47.303559952 +08:00:00\n    Building devices v0.1.0 (current)\nerror: running cargo-doc on crate 'devices' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking scopeguard v1.2.0\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling toml_datetime v0.6.11\n   Compiling paste v1.0.15\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.13.0\n    Checking sbi-spec v0.0.4\n    Checking spin v0.9.8\n   Compiling polyhal v0.4.0\n   Compiling toml_edit v0.22.27\n   Compiling linkme-impl v0.3.33\n    Checking riscv-pac v0.2.0\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.2.0\n    Checking sbi-rt v0.0.2\n    Checking spin v0.10.0\n    Checking cfg-if v1.0.1\n    Checking arrayvec v0.7.6\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking fdt-parser v0.4.17\n    Checking lazyinit v0.2.2\n    Checking bitflags v2.9.1\n    Checking log v0.4.27\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking buddy_system_allocator v0.9.1\n    Checking bit_field v0.10.2\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling proc-macro-crate v3.3.0\n   Compiling riscv-macros v0.2.0\n   Compiling polyhal-macro v0.4.0\n    Checking linkme v0.3.33\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n\n-----\n\nerror: failed to build rustdoc for crate devices v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/crates/devices &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate devices v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=devices, checker=Udeps\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/devices\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:24:45.187717892 +08:00:00\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking polyhal v0.4.0\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=devices, checker=Udeps\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/devices\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:24:45.479011487 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking polyhal v0.4.0\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=devices, checker=Outdated\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/devices\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:20:39.290063026 +08:00:00\n\nName        Project  Compat  Latest  Kind    Platform\n----        -------  ------  ------  ----    --------\nfdt-parser  0.4.12   0.4.17  0.4.17  Normal  ---\nlinkme      0.3.22   0.3.33  0.3.33  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=devices, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/devices\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:13:53.357053106 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building devices v0.1.0 (current)\nerror: running cargo-doc on crate 'devices' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking scopeguard v1.2.0\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling toml_datetime v0.6.11\n   Compiling paste v1.0.15\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.13.0\n    Checking sbi-spec v0.0.4\n    Checking spin v0.9.8\n   Compiling polyhal v0.4.0\n   Compiling toml_edit v0.22.27\n   Compiling linkme-impl v0.3.33\n    Checking riscv-pac v0.2.0\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.2.0\n    Checking sbi-rt v0.0.2\n    Checking spin v0.10.0\n    Checking cfg-if v1.0.1\n    Checking arrayvec v0.7.6\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking fdt-parser v0.4.17\n    Checking lazyinit v0.2.2\n    Checking bitflags v2.9.1\n    Checking log v0.4.27\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking buddy_system_allocator v0.9.1\n    Checking bit_field v0.10.2\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling proc-macro-crate v3.3.0\n   Compiling riscv-macros v0.2.0\n   Compiling polyhal-macro v0.4.0\n    Checking linkme v0.3.33\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n\n-----\n\nerror: failed to build rustdoc for crate devices v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/crates/devices &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate devices v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "ext4rsfs",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ext4rsfs, checker=Audit\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4rsfs\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:44.93921814 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ext4rsfs, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4rsfs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:14:57.012759285 +08:00:00\n    Building ext4rsfs v0.1.0 (current)\nerror: running cargo-doc on crate 'ext4rsfs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling toml_datetime v0.6.11\n    Checking bitflags v2.9.1\n   Compiling paste v1.0.15\n   Compiling lock_api v0.4.13\n   Compiling winnow v0.7.11\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling riscv v0.13.0\n    Checking static_assertions v1.1.0\n   Compiling rustversion v1.0.21\n    Checking sbi-spec v0.0.4\n    Checking spin v0.9.8\n   Compiling polyhal v0.4.0\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.2.0\n    Checking log v0.4.27\n    Checking riscv-pac v0.2.0\n   Compiling linkme-impl v0.3.33\n    Checking sbi-rt v0.0.2\n    Checking spin v0.10.0\n   Compiling toml_edit v0.22.27\n    Checking lazyinit v0.2.2\n   Compiling syscalls v0.6.18 (https://github.com/jasonwhite/syscalls.git#92624de3)\n    Checking fdt-parser v0.4.17\n    Checking arrayvec v0.7.6\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking cfg-if v1.0.1\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking buddy_system_allocator v0.9.1\n    Checking bit_field v0.10.2\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n    Checking downcast-rs v2.0.1\n    Checking ext4_rs v1.3.2\n   Compiling proc-macro-crate v3.3.0\n   Compiling riscv-macros v0.2.0\n   Compiling num_enum_derive v0.7.4\n    Checking linkme v0.3.33\n   Compiling polyhal-macro v0.4.0\n    Checking num_enum v0.7.4\n    Checking libc-types v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate ext4rsfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4rsfs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate ext4rsfs v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ext4rsfs, checker=Udeps\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4rsfs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:24:50.489764351 +08:00:00\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking polyhal v0.4.0\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking libc-types v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types)\n    Checking ext4_rs v1.3.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=ext4rsfs, checker=Udeps\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4rsfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:24:51.088001001 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking polyhal v0.4.0\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking libc-types v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types)\n    Checking ext4_rs v1.3.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=ext4rsfs, checker=Outdated\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4rsfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:21:21.870445483 +08:00:00\n\nName     Project  Compat  Latest  Kind    Platform\n----     -------  ------  ------  ----    --------\next4_rs  1.3.1    1.3.2   1.3.2   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=ext4rsfs, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4rsfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:15:03.862962927 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building ext4rsfs v0.1.0 (current)\nerror: running cargo-doc on crate 'ext4rsfs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling toml_datetime v0.6.11\n    Checking bitflags v2.9.1\n   Compiling paste v1.0.15\n   Compiling lock_api v0.4.13\n   Compiling winnow v0.7.11\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling riscv v0.13.0\n    Checking static_assertions v1.1.0\n   Compiling rustversion v1.0.21\n    Checking sbi-spec v0.0.4\n    Checking spin v0.9.8\n   Compiling polyhal v0.4.0\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.2.0\n    Checking log v0.4.27\n    Checking riscv-pac v0.2.0\n   Compiling linkme-impl v0.3.33\n    Checking sbi-rt v0.0.2\n    Checking spin v0.10.0\n   Compiling toml_edit v0.22.27\n    Checking lazyinit v0.2.2\n   Compiling syscalls v0.6.18 (https://github.com/jasonwhite/syscalls.git#92624de3)\n    Checking fdt-parser v0.4.17\n    Checking arrayvec v0.7.6\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking cfg-if v1.0.1\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking buddy_system_allocator v0.9.1\n    Checking bit_field v0.10.2\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n    Checking downcast-rs v2.0.1\n    Checking ext4_rs v1.3.2\n   Compiling proc-macro-crate v3.3.0\n   Compiling riscv-macros v0.2.0\n   Compiling num_enum_derive v0.7.4\n    Checking linkme v0.3.33\n   Compiling polyhal-macro v0.4.0\n    Checking num_enum v0.7.4\n    Checking libc-types v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate ext4rsfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4rsfs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate ext4rsfs v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "kernel",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kernel, checker=Audit\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:49.742752196 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kernel, checker=Clippy\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\n// cmd=cargo clippy --target riscv64imac-unknown-none-elf  --no-deps\n// timestamp=2025-06-28 12:12:48.895649895 +08:00:00\n   Compiling riscv-macros v0.2.0\n    Checking linkme v0.3.22\n    Checking num_enum v0.7.3\n   Compiling thiserror v2.0.12\n   Compiling zerocopy v0.8.24\n    Checking libc-types v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types)\n   Compiling futures-core v0.3.28\n    Checking embedded-io v0.6.1\n   Compiling kramdisk v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk)\nerror: failed to run custom build command for `kramdisk v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Byte-OS/ByteOS/target/debug/build/kramdisk-bee069a1272df925/build-script-build` (exit status: 101)\n  --- stderr\n\n  thread 'main' panicked at driver/kramdisk/build.rs:13:53:\n  can't find manifest directory: NotPresent\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kernel, checker=Lockbud\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:19:30.115008626 +08:00:00\n[2025-06-28T04:19:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling riscv v0.13.0\n   Compiling linkme v0.3.22\n   Compiling num_enum v0.7.3\n   Compiling zerocopy v0.8.24\n   Compiling libc-types v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types)\n   Compiling thiserror v2.0.12\n   Compiling embedded-io v0.6.1\n   Compiling kramdisk v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk)\nerror: failed to run custom build command for `kramdisk v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Byte-OS/ByteOS/target/debug/build/kramdisk-0b919c9e6bf0b894/build-script-build` (exit status: 101)\n  --- stderr\n\n  thread 'main' panicked at driver/kramdisk/build.rs:13:53:\n  can't find manifest directory: NotPresent\n  stack backtrace:\n     0:     0x55ffd0110720 - std::backtrace_rs::backtrace::libunwind::trace::h09b3d24f06048964\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/../../backtrace/src/backtrace/libunwind.rs:116:5\n     1:     0x55ffd0110720 - std::backtrace_rs::backtrace::trace_unsynchronized::hf47addf765c6ae4e\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55ffd0110720 - std::sys::backtrace::_print_fmt::h1cac4748ae805433\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:66:9\n     3:     0x55ffd0110720 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h51876e9b806abd2f\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:39:26\n     4:     0x55ffd012dd23 - core::fmt::rt::Argument::fmt::h74675d727819c734\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/fmt/rt.rs:177:76\n     5:     0x55ffd012dd23 - core::fmt::write::hec8160b518640e0a\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/fmt/mod.rs:1449:21\n     6:     0x55ffd010daa3 - std::io::Write::write_fmt::h23dd9fd522f1ed73\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/io/mod.rs:1890:15\n     7:     0x55ffd0110572 - std::sys::backtrace::BacktraceLock::print::h82fa1cbd2f5c85f6\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:42:9\n     8:     0x55ffd01114bf - std::panicking::default_hook::{{closure}}::h0c71ebc4d32ee68d\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:298:22\n     9:     0x55ffd011132a - std::panicking::default_hook::h869bbd2dc4246a59\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:325:9\n    10:     0x55ffd0111d92 - std::panicking::rust_panic_with_hook::he7cb010bd1162eb7\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:831:13\n    11:     0x55ffd0111c2a - std::panicking::begin_panic_handler::{{closure}}::h144a44d32326050e\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:704:13\n    12:     0x55ffd0110c29 - std::sys::backtrace::__rust_end_short_backtrace::h7baa569e657f05a9\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:168:18\n    13:     0x55ffd01118bd - rust_begin_unwind\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:695:5\n    14:     0x55ffd012cf50 - core::panicking::panic_fmt::hc13ec85888cb23ce\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/panicking.rs:75:14\n    15:     0x55ffd012d2f6 - core::result::unwrap_failed::h68ee3ebc0a871e1d\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/result.rs:1704:5\n    16:     0x55ffd00eea46 - core::result::Result<T,E>::expect::ha0c8de9ab1b1600c\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:1061:23\n    17:     0x55ffd00ef759 - build_script_build::main::ha4954a181e90d83d\n                                 at /home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk/build.rs:13:23\n    18:     0x55ffd00ee34b - core::ops::function::FnOnce::call_once::hd19b8ab106fe7b15\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:250:5\n    19:     0x55ffd00edbbe - std::sys::backtrace::__rust_begin_short_backtrace::hda555096c8e7425e\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/backtrace.rs:152:18\n    20:     0x55ffd00eda91 - std::rt::lang_start::{{closure}}::h760865ba532539ce\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/rt.rs:199:18\n    21:     0x55ffd010ace0 - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::h73c200d88ac341db\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/ops/function.rs:284:13\n    22:     0x55ffd010ace0 - std::panicking::try::do_call::h5d854913854b71fe\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:587:40\n    23:     0x55ffd010ace0 - std::panicking::try::hf1ae1b2a2498e678\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:550:19\n    24:     0x55ffd010ace0 - std::panic::catch_unwind::hcfb0a552e6092b8e\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panic.rs:358:14\n    25:     0x55ffd010ace0 - std::rt::lang_start_internal::{{closure}}::hb0245fc583346cd7\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/rt.rs:168:24\n    26:     0x55ffd010ace0 - std::panicking::try::do_call::h946e97edafdf2f58\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:587:40\n    27:     0x55ffd010ace0 - std::panicking::try::ha9077e2e87ccc6a6\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:550:19\n    28:     0x55ffd010ace0 - std::panic::catch_unwind::hd02f80e9111b6f00\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panic.rs:358:14\n    29:     0x55ffd010ace0 - std::rt::lang_start_internal::h13b1bd40350dac66\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/rt.rs:164:5\n    30:     0x55ffd00eda77 - std::rt::lang_start::h6dd3f87e7892aca1\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/rt.rs:198:5\n    31:     0x55ffd00efb0e - main\n    32:     0x7f194702a1ca - <unknown>\n    33:     0x7f194702a28b - __libc_start_main\n    34:     0x55ffd00ed155 - _start\n    35:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kernel, checker=Udeps\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:25:00.147835581 +08:00:00\n    Checking riscv v0.13.0\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking linkme v0.3.22\n    Checking num_enum v0.7.3\n   Compiling zerocopy v0.8.24\n   Compiling thiserror v2.0.12\n    Checking libc-types v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types)\n   Compiling futures-core v0.3.28\n   Compiling toml v0.5.11\n    Checking polyhal v0.4.0\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\n    Checking vfscore v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/vfscore)\n   Compiling enumn v0.1.14\nerror: could not compile `polyhal` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=kernel, checker=Udeps\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:25:01.666848134 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking riscv v0.13.0\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking linkme v0.3.22\n    Checking num_enum v0.7.3\n   Compiling zerocopy v0.8.24\n   Compiling thiserror v2.0.12\n    Checking libc-types v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types)\n   Compiling futures-core v0.3.28\n   Compiling toml v0.5.11\n    Checking polyhal v0.4.0\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\n    Checking vfscore v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/vfscore)\n   Compiling enumn v0.1.14\nerror: could not compile `polyhal` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=kernel, checker=Outdated\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:22:07.452660975 +08:00:00\n\nName          Project  Compat   Latest   Kind    Platform\n----          -------  ------   ------   ----    --------\nfutures-lite  1.13.0   ---      2.6.0    Normal  ---\nhashbrown     0.14.5   ---      0.15.4   Normal  ---\nserde         1.0.188  1.0.219  1.0.219  Build   ---\nserde_derive  1.0.188  1.0.219  1.0.219  Build   ---\ntoml          0.5.11   ---      0.8.23   Build   ---\nxmas-elf      0.9.0    0.9.1    0.10.0   Normal  ---\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "kvirtio",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kvirtio, checker=Audit\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kvirtio\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:54.7391398 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kvirtio, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kvirtio\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:16:35.858552251 +08:00:00\n    Building kvirtio v0.1.0 (current)\nerror: running cargo-doc on crate 'kvirtio' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling toml_datetime v0.6.11\n   Compiling paste v1.0.15\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.13.0\n    Checking sbi-spec v0.0.4\n    Checking spin v0.9.8\n   Compiling toml_edit v0.22.27\n   Compiling polyhal v0.4.0\n    Checking bitflags v2.9.1\n   Compiling linkme-impl v0.3.33\n    Checking embedded-hal v1.0.0\n    Checking riscv-pac v0.2.0\n    Checking log v0.4.27\n    Checking critical-section v1.2.0\n    Checking sbi-rt v0.0.2\n    Checking spin v0.10.0\n    Checking arrayvec v0.7.6\n   Compiling thiserror v2.0.12\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n   Compiling zerocopy v0.8.26\n    Checking fdt-parser v0.4.17\n    Checking cfg-if v1.0.1\n    Checking lazyinit v0.2.2\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking buddy_system_allocator v0.9.1\n    Checking bit_field v0.10.2\n    Checking embedded-io v0.6.1\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling proc-macro-crate v3.3.0\n   Compiling riscv-macros v0.2.0\n   Compiling polyhal-macro v0.4.0\n   Compiling thiserror-impl v2.0.12\n   Compiling zerocopy-derive v0.8.26\n    Checking linkme v0.3.33\n   Compiling enumn v0.1.14\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate kvirtio v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/driver/kvirtio &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate kvirtio v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kvirtio, checker=Udeps\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kvirtio\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:25:05.898540516 +08:00:00\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking polyhal v0.4.0\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking thiserror v2.0.12\n    Checking zerocopy v0.8.24\n    Checking embedded-io v0.6.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=kvirtio, checker=Udeps\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kvirtio\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:25:06.892183058 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking polyhal v0.4.0\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking thiserror v2.0.12\n    Checking zerocopy v0.8.24\n    Checking embedded-io v0.6.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=kvirtio, checker=Outdated\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kvirtio\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:22:42.242305127 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\nvirtio-drivers  0.8.0    ---     0.11.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=kvirtio, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kvirtio\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:16:42.822415945 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building kvirtio v0.1.0 (current)\nerror: running cargo-doc on crate 'kvirtio' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling toml_datetime v0.6.11\n   Compiling paste v1.0.15\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.13.0\n    Checking sbi-spec v0.0.4\n    Checking spin v0.9.8\n   Compiling toml_edit v0.22.27\n   Compiling polyhal v0.4.0\n    Checking bitflags v2.9.1\n   Compiling linkme-impl v0.3.33\n    Checking embedded-hal v1.0.0\n    Checking riscv-pac v0.2.0\n    Checking log v0.4.27\n    Checking critical-section v1.2.0\n    Checking sbi-rt v0.0.2\n    Checking spin v0.10.0\n    Checking arrayvec v0.7.6\n   Compiling thiserror v2.0.12\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n   Compiling zerocopy v0.8.26\n    Checking fdt-parser v0.4.17\n    Checking cfg-if v1.0.1\n    Checking lazyinit v0.2.2\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking buddy_system_allocator v0.9.1\n    Checking bit_field v0.10.2\n    Checking embedded-io v0.6.1\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling proc-macro-crate v3.3.0\n   Compiling riscv-macros v0.2.0\n   Compiling polyhal-macro v0.4.0\n   Compiling thiserror-impl v2.0.12\n   Compiling zerocopy-derive v0.8.26\n    Checking linkme v0.3.33\n   Compiling enumn v0.1.14\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate kvirtio v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/driver/kvirtio &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate kvirtio v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "ns16550a",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ns16550a, checker=Audit\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/ns16550a\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:55.724850021 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ns16550a, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/ns16550a\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:17:09.562545993 +08:00:00\n    Building ns16550a v0.1.0 (current)\nerror: running cargo-doc on crate 'ns16550a' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking scopeguard v1.2.0\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling paste v1.0.15\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling toml_datetime v0.6.11\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.13.0\n    Checking sbi-spec v0.0.4\n    Checking spin v0.9.8\n   Compiling polyhal v0.4.0\n    Checking critical-section v1.2.0\n   Compiling linkme-impl v0.3.33\n    Checking embedded-hal v1.0.0\n    Checking riscv-pac v0.2.0\n   Compiling toml_edit v0.22.27\n    Checking sbi-rt v0.0.2\n    Checking spin v0.10.0\n    Checking bitflags v2.9.1\n    Checking arrayvec v0.7.6\n    Checking cfg-if v1.0.1\n    Checking log v0.4.27\n    Checking lazyinit v0.2.2\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking fdt-parser v0.4.17\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking buddy_system_allocator v0.9.1\n    Checking bit_field v0.10.2\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n    Checking ns16550a v0.2.0\n   Compiling proc-macro-crate v3.3.0\n   Compiling riscv-macros v0.2.0\n   Compiling polyhal-macro v0.4.0\n    Checking linkme v0.3.33\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n\n-----\n\nerror: failed to build rustdoc for crate ns16550a v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/driver/ns16550a &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate ns16550a v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ns16550a, checker=Udeps\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/ns16550a\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:25:12.660772544 +08:00:00\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking polyhal v0.4.0\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking ns16550a v0.2.0\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=ns16550a, checker=Udeps\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/ns16550a\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:25:12.956048744 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking polyhal v0.4.0\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking ns16550a v0.2.0\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=ns16550a, checker=Outdated\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/ns16550a\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:23:19.660412617 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nns16550a  0.2.0    ---     0.5.0   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=ns16550a, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/ns16550a\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:17:15.388759833 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building ns16550a v0.1.0 (current)\nerror: running cargo-doc on crate 'ns16550a' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking scopeguard v1.2.0\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling paste v1.0.15\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling toml_datetime v0.6.11\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.13.0\n    Checking sbi-spec v0.0.4\n    Checking spin v0.9.8\n   Compiling polyhal v0.4.0\n    Checking critical-section v1.2.0\n   Compiling linkme-impl v0.3.33\n    Checking embedded-hal v1.0.0\n    Checking riscv-pac v0.2.0\n   Compiling toml_edit v0.22.27\n    Checking sbi-rt v0.0.2\n    Checking spin v0.10.0\n    Checking bitflags v2.9.1\n    Checking arrayvec v0.7.6\n    Checking cfg-if v1.0.1\n    Checking log v0.4.27\n    Checking lazyinit v0.2.2\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking fdt-parser v0.4.17\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking buddy_system_allocator v0.9.1\n    Checking bit_field v0.10.2\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n    Checking ns16550a v0.2.0\n   Compiling proc-macro-crate v3.3.0\n   Compiling riscv-macros v0.2.0\n   Compiling polyhal-macro v0.4.0\n    Checking linkme v0.3.33\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n\n-----\n\nerror: failed to build rustdoc for crate ns16550a v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/driver/ns16550a &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate ns16550a v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "runtime",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=runtime, checker=Audit\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:59.855959548 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=runtime, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:18:06.233714024 +08:00:00\n    Building runtime v0.1.0 (current)\nerror: running cargo-doc on crate 'runtime' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking scopeguard v1.2.0\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling paste v1.0.15\n   Compiling toml_datetime v0.6.11\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.13.0\n    Checking sbi-spec v0.0.4\n    Checking spin v0.9.8\n   Compiling polyhal v0.4.0\n    Checking embedded-hal v1.0.0\n   Compiling toml_edit v0.22.27\n    Checking riscv-pac v0.2.0\n    Checking critical-section v1.2.0\n    Checking sbi-rt v0.0.2\n    Checking spin v0.10.0\n    Checking fdt-parser v0.4.17\n    Checking bitflags v2.9.1\n    Checking lazyinit v0.2.2\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking cfg-if v1.0.1\n    Checking log v0.4.27\n    Checking arrayvec v0.7.6\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking buddy_system_allocator v0.9.1\n    Checking bit_field v0.10.2\n   Compiling proc-macro-crate v3.3.0\n   Compiling riscv-macros v0.2.0\n   Compiling polyhal-macro v0.4.0\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n\n-----\n\nerror: failed to build rustdoc for crate runtime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate runtime v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=runtime, checker=Udeps\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:25:18.076369293 +08:00:00\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking polyhal v0.4.0\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=runtime, checker=Udeps\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:25:18.376959292 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking polyhal v0.4.0\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=runtime, checker=Outdated\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:24:02.320034203 +08:00:00\n\nName                    Project  Compat  Latest  Kind    Platform\n----                    -------  ------  ------  ----    --------\nbuddy_system_allocator  0.9.0    0.9.1   0.11.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=runtime, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:18:11.792244897 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building runtime v0.1.0 (current)\nerror: running cargo-doc on crate 'runtime' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking scopeguard v1.2.0\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling paste v1.0.15\n   Compiling toml_datetime v0.6.11\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.13.0\n    Checking sbi-spec v0.0.4\n    Checking spin v0.9.8\n   Compiling polyhal v0.4.0\n    Checking embedded-hal v1.0.0\n   Compiling toml_edit v0.22.27\n    Checking riscv-pac v0.2.0\n    Checking critical-section v1.2.0\n    Checking sbi-rt v0.0.2\n    Checking spin v0.10.0\n    Checking fdt-parser v0.4.17\n    Checking bitflags v2.9.1\n    Checking lazyinit v0.2.2\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking cfg-if v1.0.1\n    Checking log v0.4.27\n    Checking arrayvec v0.7.6\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking buddy_system_allocator v0.9.1\n    Checking bit_field v0.10.2\n   Compiling proc-macro-crate v3.3.0\n   Compiling riscv-macros v0.2.0\n   Compiling polyhal-macro v0.4.0\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n\n-----\n\nerror: failed to build rustdoc for crate runtime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate runtime v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "general-plic",
      "count": 8,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=general-plic, checker=Audit\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/general-plic\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:48.481493932 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=general-plic, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/general-plic\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:15:29.687438555 +08:00:00\n    Building general-plic v0.1.0 (current)\nerror: running cargo-doc on crate 'general-plic' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking scopeguard v1.2.0\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling paste v1.0.15\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling toml_datetime v0.6.11\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.13.0\n    Checking sbi-spec v0.0.4\n    Checking spin v0.9.8\n   Compiling polyhal v0.4.0\n    Checking riscv-pac v0.2.0\n    Checking embedded-hal v1.0.0\n   Compiling linkme-impl v0.3.33\n   Compiling toml_edit v0.22.27\n    Checking critical-section v1.2.0\n    Checking sbi-rt v0.0.2\n    Checking spin v0.10.0\n    Checking log v0.4.27\n    Checking fdt-parser v0.4.17\n    Checking arrayvec v0.7.6\n    Checking cfg-if v1.0.1\n    Checking lazyinit v0.2.2\n    Checking bitflags v2.9.1\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking buddy_system_allocator v0.9.1\n    Checking bit_field v0.10.2\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling proc-macro-crate v3.3.0\n   Compiling riscv-macros v0.2.0\n   Compiling polyhal-macro v0.4.0\n    Checking linkme v0.3.33\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n\n-----\n\nerror: failed to build rustdoc for crate general-plic v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/driver/general-plic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate general-plic v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=general-plic, checker=Udeps\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/general-plic\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:24:54.483736402 +08:00:00\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking polyhal v0.4.0\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=general-plic, checker=Udeps\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/general-plic\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:24:54.778674646 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking polyhal v0.4.0\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=general-plic, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/general-plic\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:15:35.585746528 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building general-plic v0.1.0 (current)\nerror: running cargo-doc on crate 'general-plic' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking scopeguard v1.2.0\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling paste v1.0.15\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling toml_datetime v0.6.11\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.13.0\n    Checking sbi-spec v0.0.4\n    Checking spin v0.9.8\n   Compiling polyhal v0.4.0\n    Checking riscv-pac v0.2.0\n    Checking embedded-hal v1.0.0\n   Compiling linkme-impl v0.3.33\n   Compiling toml_edit v0.22.27\n    Checking critical-section v1.2.0\n    Checking sbi-rt v0.0.2\n    Checking spin v0.10.0\n    Checking log v0.4.27\n    Checking fdt-parser v0.4.17\n    Checking arrayvec v0.7.6\n    Checking cfg-if v1.0.1\n    Checking lazyinit v0.2.2\n    Checking bitflags v2.9.1\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking buddy_system_allocator v0.9.1\n    Checking bit_field v0.10.2\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling proc-macro-crate v3.3.0\n   Compiling riscv-macros v0.2.0\n   Compiling polyhal-macro v0.4.0\n    Checking linkme v0.3.33\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n\n-----\n\nerror: failed to build rustdoc for crate general-plic v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/driver/general-plic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate general-plic v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "kgoldfish-rtc",
      "count": 8,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kgoldfish-rtc, checker=Audit\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kgoldfish-rtc\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:50.896403429 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kgoldfish-rtc, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kgoldfish-rtc\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:15:57.584971609 +08:00:00\n    Building kgoldfish-rtc v0.1.0 (current)\nerror: running cargo-doc on crate 'kgoldfish-rtc' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking scopeguard v1.2.0\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling toml_datetime v0.6.11\n   Compiling paste v1.0.15\n   Compiling riscv v0.13.0\n    Checking static_assertions v1.1.0\n    Checking sbi-spec v0.0.4\n    Checking spin v0.9.8\n   Compiling polyhal v0.4.0\n    Checking riscv-pac v0.2.0\n    Checking embedded-hal v1.0.0\n   Compiling toml_edit v0.22.27\n    Checking critical-section v1.2.0\n   Compiling linkme-impl v0.3.33\n    Checking sbi-rt v0.0.2\n    Checking spin v0.10.0\n    Checking bitflags v2.9.1\n    Checking fdt-parser v0.4.17\n    Checking log v0.4.27\n    Checking arrayvec v0.7.6\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking cfg-if v1.0.1\n    Checking lazyinit v0.2.2\n    Checking buddy_system_allocator v0.9.1\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking bit_field v0.10.2\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling proc-macro-crate v3.3.0\n   Compiling riscv-macros v0.2.0\n   Compiling polyhal-macro v0.4.0\n    Checking linkme v0.3.33\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n\n-----\n\nerror: failed to build rustdoc for crate kgoldfish-rtc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/driver/kgoldfish-rtc &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate kgoldfish-rtc v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kgoldfish-rtc, checker=Udeps\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kgoldfish-rtc\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:25:02.452869262 +08:00:00\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking polyhal v0.4.0\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=kgoldfish-rtc, checker=Udeps\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kgoldfish-rtc\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:25:02.742993987 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking polyhal v0.4.0\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=kgoldfish-rtc, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kgoldfish-rtc\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:16:03.387432006 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building kgoldfish-rtc v0.1.0 (current)\nerror: running cargo-doc on crate 'kgoldfish-rtc' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking scopeguard v1.2.0\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling toml_datetime v0.6.11\n   Compiling paste v1.0.15\n   Compiling riscv v0.13.0\n    Checking static_assertions v1.1.0\n    Checking sbi-spec v0.0.4\n    Checking spin v0.9.8\n   Compiling polyhal v0.4.0\n    Checking riscv-pac v0.2.0\n    Checking embedded-hal v1.0.0\n   Compiling toml_edit v0.22.27\n    Checking critical-section v1.2.0\n   Compiling linkme-impl v0.3.33\n    Checking sbi-rt v0.0.2\n    Checking spin v0.10.0\n    Checking bitflags v2.9.1\n    Checking fdt-parser v0.4.17\n    Checking log v0.4.27\n    Checking arrayvec v0.7.6\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking cfg-if v1.0.1\n    Checking lazyinit v0.2.2\n    Checking buddy_system_allocator v0.9.1\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking bit_field v0.10.2\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling proc-macro-crate v3.3.0\n   Compiling riscv-macros v0.2.0\n   Compiling polyhal-macro v0.4.0\n    Checking linkme v0.3.33\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\n\n-----\n\nerror: failed to build rustdoc for crate kgoldfish-rtc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/driver/kgoldfish-rtc &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate kgoldfish-rtc v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "ramfs",
      "count": 8,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ramfs, checker=Audit\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ramfs\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:57.671979172 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ramfs, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ramfs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:17:46.171653738 +08:00:00\n    Building ramfs v0.1.0 (current)\nerror: running cargo-doc on crate 'ramfs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling paste v1.0.15\n   Compiling toml_datetime v0.6.11\n   Compiling rustversion v1.0.21\n    Checking bitflags v2.9.1\n   Compiling riscv v0.13.0\n    Checking static_assertions v1.1.0\n    Checking sbi-spec v0.0.4\n   Compiling toml_edit v0.22.27\n    Checking spin v0.9.8\n   Compiling polyhal v0.4.0\n    Checking embedded-hal v1.0.0\n   Compiling syscalls v0.6.18 (https://github.com/jasonwhite/syscalls.git#92624de3)\n    Checking critical-section v1.2.0\n    Checking riscv-pac v0.2.0\n    Checking sbi-rt v0.0.2\n    Checking spin v0.10.0\n    Checking arrayvec v0.7.6\n    Checking fdt-parser v0.4.17\n    Checking log v0.4.27\n    Checking cfg-if v1.0.1\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking lazyinit v0.2.2\n    Checking buddy_system_allocator v0.9.1\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking downcast-rs v2.0.1\n    Checking bit_field v0.10.2\n   Compiling proc-macro-crate v3.3.0\n   Compiling riscv-macros v0.2.0\n   Compiling num_enum_derive v0.7.4\n   Compiling polyhal-macro v0.4.0\n    Checking num_enum v0.7.4\n    Checking libc-types v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate ramfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ramfs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate ramfs v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ramfs, checker=Udeps\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ramfs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:25:16.587455206 +08:00:00\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking libc-types v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types)\n    Checking polyhal v0.4.0\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=ramfs, checker=Udeps\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ramfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:25:17.149908722 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking libc-types v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types)\n    Checking polyhal v0.4.0\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=ramfs, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ramfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:17:52.531640926 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building ramfs v0.1.0 (current)\nerror: running cargo-doc on crate 'ramfs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling paste v1.0.15\n   Compiling toml_datetime v0.6.11\n   Compiling rustversion v1.0.21\n    Checking bitflags v2.9.1\n   Compiling riscv v0.13.0\n    Checking static_assertions v1.1.0\n    Checking sbi-spec v0.0.4\n   Compiling toml_edit v0.22.27\n    Checking spin v0.9.8\n   Compiling polyhal v0.4.0\n    Checking embedded-hal v1.0.0\n   Compiling syscalls v0.6.18 (https://github.com/jasonwhite/syscalls.git#92624de3)\n    Checking critical-section v1.2.0\n    Checking riscv-pac v0.2.0\n    Checking sbi-rt v0.0.2\n    Checking spin v0.10.0\n    Checking arrayvec v0.7.6\n    Checking fdt-parser v0.4.17\n    Checking log v0.4.27\n    Checking cfg-if v1.0.1\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\n    Checking lazyinit v0.2.2\n    Checking buddy_system_allocator v0.9.1\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking downcast-rs v2.0.1\n    Checking bit_field v0.10.2\n   Compiling proc-macro-crate v3.3.0\n   Compiling riscv-macros v0.2.0\n   Compiling num_enum_derive v0.7.4\n   Compiling polyhal-macro v0.4.0\n    Checking num_enum v0.7.4\n    Checking libc-types v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:149:3\n    |\n149 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n149 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:176:3\n    |\n176 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n176 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyhal-0.4.0/src/components/kcontext/riscv64.rs:200:3\n    |\n200 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n200 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `polyhal` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate ramfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ramfs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate ramfs v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "procfs",
      "count": 5,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=procfs, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/procfs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:17:29.015016874 +08:00:00\n    Building procfs v0.1.0 (current)\n       Built [   3.413s] (current)\n     Parsing procfs v0.1.0 (current)\n      Parsed [   0.001s] (current)\n    Building procfs v0.1.0 (baseline)\nerror: running cargo-doc on crate 'procfs' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling libc v0.2.174\n    Checking lazy_static v1.5.0\n    Checking byteorder v1.5.0\nerror[E0463]: can't find crate for `std`\n --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lazy_static-1.5.0/src/inline_lazy.rs:9:1\n  |\n9 | extern crate std;\n  | ^^^^^^^^^^^^^^^^^ can't find crate\n  |\n  = note: the `riscv64imac-unknown-none-elf` target may not support the standard library\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `riscv64imac-unknown-none-elf` target may not support the standard library\n  = note: `std` is required by `byteorder` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `lazy_static` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0463]: can't find crate for `std`\n --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:1:5\n  |\n1 | use std::{\n  |     ^^^ can't find crate\n  |\n  = note: the `riscv64imac-unknown-none-elf` target may not support the standard library\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:1588:9\n     |\n1588 |     use std::mem::size_of;\n     |         ^^^ can't find crate\n     |\n     = note: the `riscv64imac-unknown-none-elf` target may not support the standard library\n     = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1209:27\n     |\n1209 |             const _: () = assert!(align_of::<u32>() <= align_of::<f32>());\n     |                           ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1271:27\n     |\n1271 |             const _: () = assert!(align_of::<u64>() <= align_of::<f64>());\n     |                           ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find attribute `derive` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1812:3\n     |\n1812 | #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]\n     |   ^^^^^^\n     |\nhelp: consider importing this attribute macro\n     |\n76   + use core::prelude::rust_2024::derive;\n     |\n\nerror: cannot find macro `panic` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1817:9\n     |\n1817 |         panic!(\"BigEndian default\")\n     |         ^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::panic;\n     |\n\nerror: cannot find attribute `derive` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1842:3\n     |\n1842 | #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]\n     |   ^^^^^^\n     |\nhelp: consider importing this attribute macro\n     |\n76   + use core::prelude::rust_2024::derive;\n     |\n\nerror: cannot find macro `panic` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1847:9\n     |\n1847 |         panic!(\"LittleEndian default\")\n     |         ^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::panic;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1962:9\n     |\n1962 |         assert!(1 <= nbytes && nbytes <= out.len() && nbytes <= buf.len());\n     |         ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1971:9\n     |\n1971 |         assert!(1 <= nbytes && nbytes <= out.len() && nbytes <= buf.len());\n     |         ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1999:9\n     |\n1999 |         assert!(pack_size(n) <= nbytes && nbytes <= 8);\n     |         ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2000:9\n     |\n2000 |         assert!(nbytes <= buf.len());\n     |         ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2013:9\n     |\n2013 |         assert!(pack_size128(n) <= nbytes && nbytes <= 16);\n     |         ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2014:9\n     |\n2014 |         assert!(nbytes <= buf.len());\n     |         ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1914:9\n     |\n1914 |         assert_eq!(src.len(), dst.len() * SIZE);\n     |         ^^^^^^^^^\n...\n2027 |         read_slice!(src, dst, u16, from_be_bytes);\n     |         ----------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `read_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1914:9\n     |\n1914 |         assert_eq!(src.len(), dst.len() * SIZE);\n     |         ^^^^^^^^^\n...\n2032 |         read_slice!(src, dst, u32, from_be_bytes);\n     |         ----------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `read_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1914:9\n     |\n1914 |         assert_eq!(src.len(), dst.len() * SIZE);\n     |         ^^^^^^^^^\n...\n2037 |         read_slice!(src, dst, u64, from_be_bytes);\n     |         ----------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `read_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1914:9\n     |\n1914 |         assert_eq!(src.len(), dst.len() * SIZE);\n     |         ^^^^^^^^^\n...\n2042 |         read_slice!(src, dst, u128, from_be_bytes);\n     |         ------------------------------------------ in this macro invocation\n     |\n     = note: this error originates in the macro `read_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1931:9\n     |\n1931 |         assert_eq!(src.len() * SIZE, dst.len());\n     |         ^^^^^^^^^\n...\n2047 |         write_slice!(src, dst, u16, to_be_bytes);\n     |         ---------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `write_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1931:9\n     |\n1931 |         assert_eq!(src.len() * SIZE, dst.len());\n     |         ^^^^^^^^^\n...\n2052 |         write_slice!(src, dst, u32, to_be_bytes);\n     |         ---------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `write_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1931:9\n     |\n1931 |         assert_eq!(src.len() * SIZE, dst.len());\n     |         ^^^^^^^^^\n...\n2057 |         write_slice!(src, dst, u64, to_be_bytes);\n     |         ---------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `write_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1931:9\n     |\n1931 |         assert_eq!(src.len() * SIZE, dst.len());\n     |         ^^^^^^^^^\n...\n2062 |         write_slice!(src, dst, u128, to_be_bytes);\n     |         ----------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `write_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `cfg` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2067:12\n     |\n2067 |         if cfg!(target_endian = \"little\") {\n     |            ^^^\n     |\n     = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n     |\n76   + use core::cfg;\n     |\n\nerror: cannot find macro `cfg` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2076:12\n     |\n2076 |         if cfg!(target_endian = \"little\") {\n     |            ^^^\n     |\n     = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n     |\n76   + use core::cfg;\n     |\n\nerror: cannot find macro `cfg` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2085:12\n     |\n2085 |         if cfg!(target_endian = \"little\") {\n     |            ^^^\n     |\n     = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n     |\n76   + use core::cfg;\n     |\n\nerror: cannot find macro `cfg` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2094:12\n     |\n2094 |         if cfg!(target_endian = \"little\") {\n     |            ^^^\n     |\n     = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n     |\n76   + use core::cfg;\n     |\n\nerror: cannot find macro `cfg` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2103:12\n     |\n2103 |         if cfg!(target_endian = \"little\") {\n     |            ^^^\n     |\n     = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n     |\n76   + use core::cfg;\n     |\n\nerror: cannot find macro `cfg` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2115:12\n     |\n2115 |         if cfg!(target_endian = \"little\") {\n     |            ^^^\n     |\n     = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n     |\n76   + use core::cfg;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2150:9\n     |\n2150 |         assert!(1 <= nbytes && nbytes <= out.len() && nbytes <= buf.len());\n     |         ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2158:9\n     |\n2158 |         assert!(1 <= nbytes && nbytes <= out.len() && nbytes <= buf.len());\n     |         ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2185:9\n     |\n2185 |         assert!(pack_size(n as u64) <= nbytes && nbytes <= 8);\n     |         ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2186:9\n     |\n2186 |         assert!(nbytes <= buf.len());\n     |         ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2195:9\n     |\n2195 |         assert!(pack_size128(n as u128) <= nbytes && nbytes <= 16);\n     |         ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2196:9\n     |\n2196 |         assert!(nbytes <= buf.len());\n     |         ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1914:9\n     |\n1914 |         assert_eq!(src.len(), dst.len() * SIZE);\n     |         ^^^^^^^^^\n...\n2205 |         read_slice!(src, dst, u16, from_le_bytes);\n     |         ----------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `read_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1914:9\n     |\n1914 |         assert_eq!(src.len(), dst.len() * SIZE);\n     |         ^^^^^^^^^\n...\n2210 |         read_slice!(src, dst, u32, from_le_bytes);\n     |         ----------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `read_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1914:9\n     |\n1914 |         assert_eq!(src.len(), dst.len() * SIZE);\n     |         ^^^^^^^^^\n...\n2215 |         read_slice!(src, dst, u64, from_le_bytes);\n     |         ----------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `read_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1914:9\n     |\n1914 |         assert_eq!(src.len(), dst.len() * SIZE);\n     |         ^^^^^^^^^\n...\n2220 |         read_slice!(src, dst, u128, from_le_bytes);\n     |         ------------------------------------------ in this macro invocation\n     |\n     = note: this error originates in the macro `read_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1931:9\n     |\n1931 |         assert_eq!(src.len() * SIZE, dst.len());\n     |         ^^^^^^^^^\n...\n2225 |         write_slice!(src, dst, u16, to_le_bytes);\n     |         ---------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `write_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1931:9\n     |\n1931 |         assert_eq!(src.len() * SIZE, dst.len());\n     |         ^^^^^^^^^\n...\n2230 |         write_slice!(src, dst, u32, to_le_bytes);\n     |         ---------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `write_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1931:9\n     |\n1931 |         assert_eq!(src.len() * SIZE, dst.len());\n     |         ^^^^^^^^^\n...\n2235 |         write_slice!(src, dst, u64, to_le_bytes);\n     |         ---------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `write_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1931:9\n     |\n1931 |         assert_eq!(src.len() * SIZE, dst.len());\n     |         ^^^^^^^^^\n...\n2240 |         write_slice!(src, dst, u128, to_le_bytes);\n     |         ----------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `write_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `cfg` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2245:12\n     |\n2245 |         if cfg!(target_endian = \"big\") {\n     |            ^^^\n     |\n     = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n     |\n76   + use core::cfg;\n     |\n\nerror: cannot find macro `cfg` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2254:12\n     |\n2254 |         if cfg!(target_endian = \"big\") {\n     |            ^^^\n     |\n     = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n     |\n76   + use core::cfg;\n     |\n\nerror: cannot find macro `cfg` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2263:12\n     |\n2263 |         if cfg!(target_endian = \"big\") {\n     |            ^^^\n     |\n     = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n     |\n76   + use core::cfg;\n     |\n\nerror: cannot find macro `cfg` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2272:12\n     |\n2272 |         if cfg!(target_endian = \"big\") {\n     |            ^^^\n     |\n     = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n     |\n76   + use core::cfg;\n     |\n\nerror: cannot find macro `cfg` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2281:12\n     |\n2281 |         if cfg!(target_endian = \"big\") {\n     |            ^^^\n     |\n     = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n     |\n76   + use core::cfg;\n     |\n\nerror: cannot find macro `cfg` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2293:12\n     |\n2293 |         if cfg!(target_endian = \"big\") {\n     |            ^^^\n     |\n     = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n     |\n76   + use core::cfg;\n     |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:58:9\n   |\n58 |         Ok(buf[0])\n   |         ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n1  + use core::result::Result::Ok;\n   |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:88:9\n   |\n88 |         Ok(buf[0] as i8)\n   |         ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n1  + use core::result::Result::Ok;\n   |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:115:9\n    |\n115 |         Ok(T::read_u16(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:142:9\n    |\n142 |         Ok(T::read_i16(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:168:9\n    |\n168 |         Ok(T::read_u24(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:194:9\n    |\n194 |         Ok(T::read_i24(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:220:9\n    |\n220 |         Ok(T::read_u32(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:246:9\n    |\n246 |         Ok(T::read_i32(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:272:9\n    |\n272 |         Ok(T::read_u48(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:298:9\n    |\n298 |         Ok(T::read_i48(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:324:9\n    |\n324 |         Ok(T::read_u64(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:350:9\n    |\n350 |         Ok(T::read_i64(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:379:9\n    |\n379 |         Ok(T::read_u128(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:405:9\n    |\n405 |         Ok(T::read_i128(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:430:9\n    |\n430 |         Ok(T::read_uint(&buf[..nbytes], nbytes))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:455:9\n    |\n455 |         Ok(T::read_int(&buf[..nbytes], nbytes))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:463:9\n    |\n463 |         Ok(T::read_uint128(&buf[..nbytes], nbytes))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:471:9\n    |\n471 |         Ok(T::read_int128(&buf[..nbytes], nbytes))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:502:9\n    |\n502 |         Ok(T::read_f32(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:533:9\n    |\n533 |         Ok(T::read_f64(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:568:9\n    |\n568 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:603:9\n    |\n603 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:641:9\n    |\n641 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:682:9\n    |\n682 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:753:9\n    |\n753 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:788:9\n    |\n788 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:826:9\n    |\n826 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:867:9\n    |\n867 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:908:9\n    |\n908 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:993:9\n    |\n993 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0405]: cannot find trait `Sized` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:1049:21\n     |\n1049 | impl<R: io::Read + ?Sized> ReadBytesExt for R {}\n     |                     ^^^^^ not found in this scope\n     |\nhelp: consider importing this trait\n     |\n1    + use core::marker::Sized;\n     |\n\nerror[E0405]: cannot find trait `Sized` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:1579:22\n     |\n1579 | impl<W: io::Write + ?Sized> WriteBytesExt for W {}\n     |                      ^^^^^ not found in this scope\n     |\nhelp: consider importing this trait\n     |\n1    + use core::marker::Sized;\n     |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:1587:30\n     |\n1587 | unsafe fn slice_to_u8_mut<T: Copy>(slice: &mut [T]) -> &mut [u8] {\n     |                              ^^^^ not found in this scope\n     |\nhelp: consider importing this trait\n     |\n1    + use core::marker::Copy;\n     |\n\nerror[E0405]: cannot find trait `Clone` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:213:5\n    |\n213 |     Clone\n    |     ^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n76  + use core::clone::Clone;\n    |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:214:7\n    |\n214 |     + Copy\n    |       ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n76  + use core::marker::Copy;\n    |\n\nerror[E0405]: cannot find trait `Default` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:216:7\n    |\n216 |     + Default\n    |       ^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n76  + use core::default::Default;\n    |\n\nerror[E0405]: cannot find trait `Eq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:217:7\n    |\n217 |     + Eq\n    |       ^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n76  + use core::cmp::Eq;\n    |\n\nerror[E0405]: cannot find trait `Ord` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:219:7\n    |\n219 |     + Ord\n    |       ^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n76  + use core::cmp::Ord;\n    |\n\nerror[E0405]: cannot find trait `PartialEq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:220:7\n    |\n220 |     + PartialEq\n    |       ^^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n76  + use core::cmp::PartialEq;\n    |\n\nerror[E0405]: cannot find trait `PartialOrd` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:221:7\n    |\n221 |     + PartialOrd\n    |       ^^^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n76  + use core::cmp::PartialOrd;\n    |\n\nerror[E0405]: cannot find trait `Default` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1815:6\n     |\n1815 | impl Default for BigEndian {\n     |      ^^^^^^^ not found in this scope\n     |\nhelp: consider importing this trait\n     |\n76   + use core::default::Default;\n     |\n\nerror[E0405]: cannot find trait `Default` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1845:6\n     |\n1845 | impl Default for LittleEndian {\n     |      ^^^^^^^ not found in this scope\n     |\nhelp: consider importing this trait\n     |\n76   + use core::default::Default;\n     |\n\nerror: relaxing a default bound only does something for `?Sized`; all other traits are not bound by default\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:1049:20\n     |\n1049 | impl<R: io::Read + ?Sized> ReadBytesExt for R {}\n     |                    ^^^^^^\n\nerror: relaxing a default bound only does something for `?Sized`; all other traits are not bound by default\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:1579:21\n     |\n1579 | impl<W: io::Write + ?Sized> WriteBytesExt for W {}\n     |                     ^^^^^^\n\nSome errors have detailed explanations: E0405, E0425, E0463.\nFor more information about an error, try `rustc --explain E0405`.\nerror: could not compile `byteorder` (lib) due to 93 previous errors\n\n-----\n\nerror: failed to build rustdoc for crate procfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add procfs@=0.1.0 &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate procfs v0.1.0\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=procfs, checker=Udeps\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/procfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:25:14.73814063 +08:00:00\n\n\nstdout:\nunused dependencies:\n`procfs v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/procfs)`\n└─── dependencies\n     ├─── \"log\"\n     └─── \"sync\"\nNote: These dependencies might be used by other targets.\n      To find dependencies that are not used by any target, enable `--all-targets`.\nNote: They might be false-positive.\n      For example, `cargo-udeps` cannot detect usage of crates that are only used in doc-tests.\n      To ignore some dependencies, write `package.metadata.cargo-udeps.ignore` in Cargo.toml.\n\nstderr:\n    Checking libc-types v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types)\n    Checking sync v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync)\n    Checking vfscore v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/vfscore)\n    Checking procfs v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/procfs)\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.54s\ninfo: Loading depinfo from \"/home/runner/check/batch_1/Byte-OS/ByteOS/target/riscv64imac-unknown-none-elf/debug/deps/libc_types-253fee8504894622.d\"\ninfo: Loading depinfo from \"/home/runner/check/batch_1/Byte-OS/ByteOS/target/riscv64imac-unknown-none-elf/debug/deps/sync-de13c4621803e331.d\"\ninfo: Loading depinfo from \"/home/runner/check/batch_1/Byte-OS/ByteOS/target/riscv64imac-unknown-none-elf/debug/deps/vfscore-87eaa5a85f4e0796.d\"\ninfo: Loading depinfo from \"/home/runner/check/batch_1/Byte-OS/ByteOS/target/riscv64imac-unknown-none-elf/debug/deps/procfs-0decef77cdca0917.d\"\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=procfs, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/procfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:17:33.357511979 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building procfs v0.1.0 (current)\n       Built [   3.413s] (current)\n     Parsing procfs v0.1.0 (current)\n      Parsed [   0.001s] (current)\n    Building procfs v0.1.0 (baseline)\nerror: running cargo-doc on crate 'procfs' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling libc v0.2.174\n    Checking lazy_static v1.5.0\n    Checking byteorder v1.5.0\nerror[E0463]: can't find crate for `std`\n --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lazy_static-1.5.0/src/inline_lazy.rs:9:1\n  |\n9 | extern crate std;\n  | ^^^^^^^^^^^^^^^^^ can't find crate\n  |\n  = note: the `riscv64imac-unknown-none-elf` target may not support the standard library\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `riscv64imac-unknown-none-elf` target may not support the standard library\n  = note: `std` is required by `byteorder` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `lazy_static` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0463]: can't find crate for `std`\n --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:1:5\n  |\n1 | use std::{\n  |     ^^^ can't find crate\n  |\n  = note: the `riscv64imac-unknown-none-elf` target may not support the standard library\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:1588:9\n     |\n1588 |     use std::mem::size_of;\n     |         ^^^ can't find crate\n     |\n     = note: the `riscv64imac-unknown-none-elf` target may not support the standard library\n     = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1209:27\n     |\n1209 |             const _: () = assert!(align_of::<u32>() <= align_of::<f32>());\n     |                           ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1271:27\n     |\n1271 |             const _: () = assert!(align_of::<u64>() <= align_of::<f64>());\n     |                           ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find attribute `derive` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1812:3\n     |\n1812 | #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]\n     |   ^^^^^^\n     |\nhelp: consider importing this attribute macro\n     |\n76   + use core::prelude::rust_2024::derive;\n     |\n\nerror: cannot find macro `panic` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1817:9\n     |\n1817 |         panic!(\"BigEndian default\")\n     |         ^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::panic;\n     |\n\nerror: cannot find attribute `derive` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1842:3\n     |\n1842 | #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]\n     |   ^^^^^^\n     |\nhelp: consider importing this attribute macro\n     |\n76   + use core::prelude::rust_2024::derive;\n     |\n\nerror: cannot find macro `panic` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1847:9\n     |\n1847 |         panic!(\"LittleEndian default\")\n     |         ^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::panic;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1962:9\n     |\n1962 |         assert!(1 <= nbytes && nbytes <= out.len() && nbytes <= buf.len());\n     |         ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1971:9\n     |\n1971 |         assert!(1 <= nbytes && nbytes <= out.len() && nbytes <= buf.len());\n     |         ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1999:9\n     |\n1999 |         assert!(pack_size(n) <= nbytes && nbytes <= 8);\n     |         ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2000:9\n     |\n2000 |         assert!(nbytes <= buf.len());\n     |         ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2013:9\n     |\n2013 |         assert!(pack_size128(n) <= nbytes && nbytes <= 16);\n     |         ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2014:9\n     |\n2014 |         assert!(nbytes <= buf.len());\n     |         ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1914:9\n     |\n1914 |         assert_eq!(src.len(), dst.len() * SIZE);\n     |         ^^^^^^^^^\n...\n2027 |         read_slice!(src, dst, u16, from_be_bytes);\n     |         ----------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `read_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1914:9\n     |\n1914 |         assert_eq!(src.len(), dst.len() * SIZE);\n     |         ^^^^^^^^^\n...\n2032 |         read_slice!(src, dst, u32, from_be_bytes);\n     |         ----------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `read_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1914:9\n     |\n1914 |         assert_eq!(src.len(), dst.len() * SIZE);\n     |         ^^^^^^^^^\n...\n2037 |         read_slice!(src, dst, u64, from_be_bytes);\n     |         ----------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `read_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1914:9\n     |\n1914 |         assert_eq!(src.len(), dst.len() * SIZE);\n     |         ^^^^^^^^^\n...\n2042 |         read_slice!(src, dst, u128, from_be_bytes);\n     |         ------------------------------------------ in this macro invocation\n     |\n     = note: this error originates in the macro `read_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1931:9\n     |\n1931 |         assert_eq!(src.len() * SIZE, dst.len());\n     |         ^^^^^^^^^\n...\n2047 |         write_slice!(src, dst, u16, to_be_bytes);\n     |         ---------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `write_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1931:9\n     |\n1931 |         assert_eq!(src.len() * SIZE, dst.len());\n     |         ^^^^^^^^^\n...\n2052 |         write_slice!(src, dst, u32, to_be_bytes);\n     |         ---------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `write_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1931:9\n     |\n1931 |         assert_eq!(src.len() * SIZE, dst.len());\n     |         ^^^^^^^^^\n...\n2057 |         write_slice!(src, dst, u64, to_be_bytes);\n     |         ---------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `write_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1931:9\n     |\n1931 |         assert_eq!(src.len() * SIZE, dst.len());\n     |         ^^^^^^^^^\n...\n2062 |         write_slice!(src, dst, u128, to_be_bytes);\n     |         ----------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `write_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `cfg` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2067:12\n     |\n2067 |         if cfg!(target_endian = \"little\") {\n     |            ^^^\n     |\n     = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n     |\n76   + use core::cfg;\n     |\n\nerror: cannot find macro `cfg` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2076:12\n     |\n2076 |         if cfg!(target_endian = \"little\") {\n     |            ^^^\n     |\n     = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n     |\n76   + use core::cfg;\n     |\n\nerror: cannot find macro `cfg` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2085:12\n     |\n2085 |         if cfg!(target_endian = \"little\") {\n     |            ^^^\n     |\n     = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n     |\n76   + use core::cfg;\n     |\n\nerror: cannot find macro `cfg` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2094:12\n     |\n2094 |         if cfg!(target_endian = \"little\") {\n     |            ^^^\n     |\n     = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n     |\n76   + use core::cfg;\n     |\n\nerror: cannot find macro `cfg` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2103:12\n     |\n2103 |         if cfg!(target_endian = \"little\") {\n     |            ^^^\n     |\n     = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n     |\n76   + use core::cfg;\n     |\n\nerror: cannot find macro `cfg` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2115:12\n     |\n2115 |         if cfg!(target_endian = \"little\") {\n     |            ^^^\n     |\n     = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n     |\n76   + use core::cfg;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2150:9\n     |\n2150 |         assert!(1 <= nbytes && nbytes <= out.len() && nbytes <= buf.len());\n     |         ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2158:9\n     |\n2158 |         assert!(1 <= nbytes && nbytes <= out.len() && nbytes <= buf.len());\n     |         ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2185:9\n     |\n2185 |         assert!(pack_size(n as u64) <= nbytes && nbytes <= 8);\n     |         ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2186:9\n     |\n2186 |         assert!(nbytes <= buf.len());\n     |         ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2195:9\n     |\n2195 |         assert!(pack_size128(n as u128) <= nbytes && nbytes <= 16);\n     |         ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2196:9\n     |\n2196 |         assert!(nbytes <= buf.len());\n     |         ^^^^^^\n     |\nhelp: consider importing this macro\n     |\n76   + use core::assert;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1914:9\n     |\n1914 |         assert_eq!(src.len(), dst.len() * SIZE);\n     |         ^^^^^^^^^\n...\n2205 |         read_slice!(src, dst, u16, from_le_bytes);\n     |         ----------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `read_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1914:9\n     |\n1914 |         assert_eq!(src.len(), dst.len() * SIZE);\n     |         ^^^^^^^^^\n...\n2210 |         read_slice!(src, dst, u32, from_le_bytes);\n     |         ----------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `read_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1914:9\n     |\n1914 |         assert_eq!(src.len(), dst.len() * SIZE);\n     |         ^^^^^^^^^\n...\n2215 |         read_slice!(src, dst, u64, from_le_bytes);\n     |         ----------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `read_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1914:9\n     |\n1914 |         assert_eq!(src.len(), dst.len() * SIZE);\n     |         ^^^^^^^^^\n...\n2220 |         read_slice!(src, dst, u128, from_le_bytes);\n     |         ------------------------------------------ in this macro invocation\n     |\n     = note: this error originates in the macro `read_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1931:9\n     |\n1931 |         assert_eq!(src.len() * SIZE, dst.len());\n     |         ^^^^^^^^^\n...\n2225 |         write_slice!(src, dst, u16, to_le_bytes);\n     |         ---------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `write_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1931:9\n     |\n1931 |         assert_eq!(src.len() * SIZE, dst.len());\n     |         ^^^^^^^^^\n...\n2230 |         write_slice!(src, dst, u32, to_le_bytes);\n     |         ---------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `write_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1931:9\n     |\n1931 |         assert_eq!(src.len() * SIZE, dst.len());\n     |         ^^^^^^^^^\n...\n2235 |         write_slice!(src, dst, u64, to_le_bytes);\n     |         ---------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `write_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `assert_eq` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1931:9\n     |\n1931 |         assert_eq!(src.len() * SIZE, dst.len());\n     |         ^^^^^^^^^\n...\n2240 |         write_slice!(src, dst, u128, to_le_bytes);\n     |         ----------------------------------------- in this macro invocation\n     |\n     = note: this error originates in the macro `write_slice` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n     |\n76   + use core::assert_eq;\n     |\n\nerror: cannot find macro `cfg` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2245:12\n     |\n2245 |         if cfg!(target_endian = \"big\") {\n     |            ^^^\n     |\n     = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n     |\n76   + use core::cfg;\n     |\n\nerror: cannot find macro `cfg` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2254:12\n     |\n2254 |         if cfg!(target_endian = \"big\") {\n     |            ^^^\n     |\n     = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n     |\n76   + use core::cfg;\n     |\n\nerror: cannot find macro `cfg` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2263:12\n     |\n2263 |         if cfg!(target_endian = \"big\") {\n     |            ^^^\n     |\n     = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n     |\n76   + use core::cfg;\n     |\n\nerror: cannot find macro `cfg` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2272:12\n     |\n2272 |         if cfg!(target_endian = \"big\") {\n     |            ^^^\n     |\n     = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n     |\n76   + use core::cfg;\n     |\n\nerror: cannot find macro `cfg` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2281:12\n     |\n2281 |         if cfg!(target_endian = \"big\") {\n     |            ^^^\n     |\n     = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n     |\n76   + use core::cfg;\n     |\n\nerror: cannot find macro `cfg` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:2293:12\n     |\n2293 |         if cfg!(target_endian = \"big\") {\n     |            ^^^\n     |\n     = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n     |\n76   + use core::cfg;\n     |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:58:9\n   |\n58 |         Ok(buf[0])\n   |         ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n1  + use core::result::Result::Ok;\n   |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:88:9\n   |\n88 |         Ok(buf[0] as i8)\n   |         ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n1  + use core::result::Result::Ok;\n   |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:115:9\n    |\n115 |         Ok(T::read_u16(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:142:9\n    |\n142 |         Ok(T::read_i16(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:168:9\n    |\n168 |         Ok(T::read_u24(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:194:9\n    |\n194 |         Ok(T::read_i24(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:220:9\n    |\n220 |         Ok(T::read_u32(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:246:9\n    |\n246 |         Ok(T::read_i32(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:272:9\n    |\n272 |         Ok(T::read_u48(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:298:9\n    |\n298 |         Ok(T::read_i48(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:324:9\n    |\n324 |         Ok(T::read_u64(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:350:9\n    |\n350 |         Ok(T::read_i64(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:379:9\n    |\n379 |         Ok(T::read_u128(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:405:9\n    |\n405 |         Ok(T::read_i128(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:430:9\n    |\n430 |         Ok(T::read_uint(&buf[..nbytes], nbytes))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:455:9\n    |\n455 |         Ok(T::read_int(&buf[..nbytes], nbytes))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:463:9\n    |\n463 |         Ok(T::read_uint128(&buf[..nbytes], nbytes))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:471:9\n    |\n471 |         Ok(T::read_int128(&buf[..nbytes], nbytes))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:502:9\n    |\n502 |         Ok(T::read_f32(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:533:9\n    |\n533 |         Ok(T::read_f64(&buf))\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:568:9\n    |\n568 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:603:9\n    |\n603 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:641:9\n    |\n641 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:682:9\n    |\n682 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:753:9\n    |\n753 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:788:9\n    |\n788 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:826:9\n    |\n826 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:867:9\n    |\n867 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:908:9\n    |\n908 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:993:9\n    |\n993 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0405]: cannot find trait `Sized` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:1049:21\n     |\n1049 | impl<R: io::Read + ?Sized> ReadBytesExt for R {}\n     |                     ^^^^^ not found in this scope\n     |\nhelp: consider importing this trait\n     |\n1    + use core::marker::Sized;\n     |\n\nerror[E0405]: cannot find trait `Sized` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:1579:22\n     |\n1579 | impl<W: io::Write + ?Sized> WriteBytesExt for W {}\n     |                      ^^^^^ not found in this scope\n     |\nhelp: consider importing this trait\n     |\n1    + use core::marker::Sized;\n     |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:1587:30\n     |\n1587 | unsafe fn slice_to_u8_mut<T: Copy>(slice: &mut [T]) -> &mut [u8] {\n     |                              ^^^^ not found in this scope\n     |\nhelp: consider importing this trait\n     |\n1    + use core::marker::Copy;\n     |\n\nerror[E0405]: cannot find trait `Clone` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:213:5\n    |\n213 |     Clone\n    |     ^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n76  + use core::clone::Clone;\n    |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:214:7\n    |\n214 |     + Copy\n    |       ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n76  + use core::marker::Copy;\n    |\n\nerror[E0405]: cannot find trait `Default` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:216:7\n    |\n216 |     + Default\n    |       ^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n76  + use core::default::Default;\n    |\n\nerror[E0405]: cannot find trait `Eq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:217:7\n    |\n217 |     + Eq\n    |       ^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n76  + use core::cmp::Eq;\n    |\n\nerror[E0405]: cannot find trait `Ord` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:219:7\n    |\n219 |     + Ord\n    |       ^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n76  + use core::cmp::Ord;\n    |\n\nerror[E0405]: cannot find trait `PartialEq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:220:7\n    |\n220 |     + PartialEq\n    |       ^^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n76  + use core::cmp::PartialEq;\n    |\n\nerror[E0405]: cannot find trait `PartialOrd` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:221:7\n    |\n221 |     + PartialOrd\n    |       ^^^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n76  + use core::cmp::PartialOrd;\n    |\n\nerror[E0405]: cannot find trait `Default` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1815:6\n     |\n1815 | impl Default for BigEndian {\n     |      ^^^^^^^ not found in this scope\n     |\nhelp: consider importing this trait\n     |\n76   + use core::default::Default;\n     |\n\nerror[E0405]: cannot find trait `Default` in this scope\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs:1845:6\n     |\n1845 | impl Default for LittleEndian {\n     |      ^^^^^^^ not found in this scope\n     |\nhelp: consider importing this trait\n     |\n76   + use core::default::Default;\n     |\n\nerror: relaxing a default bound only does something for `?Sized`; all other traits are not bound by default\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:1049:20\n     |\n1049 | impl<R: io::Read + ?Sized> ReadBytesExt for R {}\n     |                    ^^^^^^\n\nerror: relaxing a default bound only does something for `?Sized`; all other traits are not bound by default\n    --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/io.rs:1579:21\n     |\n1579 | impl<W: io::Write + ?Sized> WriteBytesExt for W {}\n     |                     ^^^^^^\n\nSome errors have detailed explanations: E0405, E0425, E0463.\nFor more information about an error, try `rustc --explain E0405`.\nerror: could not compile `byteorder` (lib) due to 93 previous errors\n\n-----\n\nerror: failed to build rustdoc for crate procfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add procfs@=0.1.0 &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate procfs v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "libc-types",
      "count": 3,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=libc-types, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:16:55.294219989 +08:00:00\n    Building libc-types v0.1.0 (current)\n       Built [   2.902s] (current)\n     Parsing libc-types v0.1.0 (current)\n      Parsed [   0.010s] (current)\nerror: libc-types not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=libc-types, checker=Outdated\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:23:05.373149174 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.9.0    2.9.1   2.9.1   Normal  ---\nnum_enum  0.7.3    0.7.4   0.7.4   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=libc-types, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:16:58.535135606 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building libc-types v0.1.0 (current)\n       Built [   2.902s] (current)\n     Parsing libc-types v0.1.0 (current)\n      Parsed [   0.010s] (current)\nerror: libc-types not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "sync",
      "count": 3,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sync, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:18:21.854257984 +08:00:00\n    Building sync v0.1.0 (current)\n       Built [   0.713s] (current)\n     Parsing sync v0.1.0 (current)\n      Parsed [   0.001s] (current)\n    Building sync v0.1.0 (baseline)\nerror: running cargo-doc on crate 'sync' failed with output:\n-----\n Documenting sync v0.1.0\nerror[E0557]: feature has been removed\n --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sync-0.1.0/src/lib.rs:3:12\n  |\n3 | #![feature(const_fn)]\n  |            ^^^^^^^^ feature has been removed\n  |\n  = note: removed in 1.54.0; see <https://github.com/rust-lang/rust/pull/85109> for more information\n  = note: split into finer-grained feature gates\n\nerror: Compilation failed, aborting rustdoc\n\nFor more information about this error, try `rustc --explain E0557`.\nerror: could not document `sync`\n\n-----\n\nerror: failed to build rustdoc for crate sync v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add sync@=0.1.0 &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sync v0.1.0\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=sync, checker=Outdated\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:24:17.303583486 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nspin  0.9.8    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=sync, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:18:23.079492197 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building sync v0.1.0 (current)\n       Built [   0.713s] (current)\n     Parsing sync v0.1.0 (current)\n      Parsed [   0.001s] (current)\n    Building sync v0.1.0 (baseline)\nerror: running cargo-doc on crate 'sync' failed with output:\n-----\n Documenting sync v0.1.0\nerror[E0557]: feature has been removed\n --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sync-0.1.0/src/lib.rs:3:12\n  |\n3 | #![feature(const_fn)]\n  |            ^^^^^^^^ feature has been removed\n  |\n  = note: removed in 1.54.0; see <https://github.com/rust-lang/rust/pull/85109> for more information\n  = note: split into finer-grained feature gates\n\nerror: Compilation failed, aborting rustdoc\n\nFor more information about this error, try `rustc --explain E0557`.\nerror: could not document `sync`\n\n-----\n\nerror: failed to build rustdoc for crate sync v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add sync@=0.1.0 &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sync v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "vfscore",
      "count": 3,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=vfscore, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/vfscore\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-28 12:18:29.899389466 +08:00:00\n    Building vfscore v0.1.0 (current)\n       Built [   3.175s] (current)\n     Parsing vfscore v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: vfscore not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=vfscore, checker=Outdated\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/vfscore\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:24:31.818661969 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.9.0    2.9.1   2.9.1   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=vfscore, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/vfscore\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-28 12:18:33.642544786 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building vfscore v0.1.0 (current)\n       Built [   3.175s] (current)\n     Parsing vfscore v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: vfscore not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Atomvchecker",
    "Outdated",
    "Geiger",
    "Unused Deps",
    "Unformatted"
  ]
}