{
  "repo": {
    "user": "Byte-OS",
    "repo": "ByteOS"
  },
  "data": [
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "fs",
      "count": 11,
      "raw_reports": [
        {
          "file": "filesystem/fs/src/file.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: using `clone` on type `usize` which implements the `Copy` trait\n  --> filesystem/fs/src/file.rs:24:32\n   |\n24 |             offset: Mutex::new(self.offset.lock().clone()),\n   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*self.offset.lock()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n",
              "warning: using `clone` on type `OpenFlags` which implements the `Copy` trait\n  --> filesystem/fs/src/file.rs:25:31\n   |\n25 |             flags: Mutex::new(self.flags.lock().clone()),\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*self.flags.lock()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=fs, checker=Audit\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/fs\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:47.178544079 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=fs, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/fs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:15:05.998267077 +08:00:00\n    Building fs v0.1.0 (current)\nerror: running cargo-doc on crate 'fs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate fs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/fs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate fs v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=fs, checker=Udeps\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/fs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:24:51.733196932 +08:00:00\n    Checking scopeguard v1.1.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.9.0\n    Checking log v0.4.27\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=fs, checker=Udeps\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/fs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:24:51.886357775 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking scopeguard v1.1.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.9.0\n    Checking log v0.4.27\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=fs, checker=Outdated\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/fs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:21:27.778008848 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.9.0    2.9.1   2.9.1   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=fs, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/fs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:15:07.170097738 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building fs v0.1.0 (current)\nerror: running cargo-doc on crate 'fs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate fs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/fs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate fs v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "executor",
      "count": 10,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=executor, checker=Audit\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/executor\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:40.980353943 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=executor, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/executor\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:14:06.168687418 +08:00:00\n    Building executor v0.1.0 (current)\nerror: running cargo-doc on crate 'executor' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling hashbrown v0.15.4\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate executor v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/crates/executor &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate executor v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=executor, checker=Udeps\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/executor\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:24:46.310503634 +08:00:00\n    Checking scopeguard v1.1.0\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n   Compiling ahash v0.8.11\n    Checking once_cell v1.21.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `once_cell` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=executor, checker=Udeps\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/executor\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:24:46.470751343 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking scopeguard v1.1.0\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n   Compiling ahash v0.8.11\n    Checking once_cell v1.21.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `once_cell` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=executor, checker=Outdated\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/executor\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:20:44.914549609 +08:00:00\n\nName       Project  Compat  Latest  Kind    Platform\n----       -------  ------  ------  ----    --------\nhashbrown  0.14.5   ---     0.15.4  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=executor, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/executor\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:14:07.131134355 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building executor v0.1.0 (current)\nerror: running cargo-doc on crate 'executor' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling hashbrown v0.15.4\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate executor v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/crates/executor &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate executor v0.1.0\n"
            ]
          }
        },
        {
          "file": "crates/executor/src/executor.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: very complex type used. Consider factoring parts into `type` definitions\n  --> crates/executor/src/executor.rs:30:12\n   |\n30 |     cores: LazyInit<Vec<Mutex<Option<Arc<dyn AsyncTask>>>>>,\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity\n   = note: `#[warn(clippy::type_complexity)]` on by default\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "ext4fs",
      "count": 10,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ext4fs, checker=Audit\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4fs\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:42.666276648 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ext4fs, checker=Clippy\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4fs\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat  --no-deps\n// timestamp=2025-06-28 12:12:33.639246503 +08:00:00\n   Compiling lwext4_rust v0.2.0 (https://github.com/Azure-stars/lwext4_rust.git?rev=ee5131c#ee5131ca)\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (https://github.com/Azure-stars/lwext4_rust.git?rev=ee5131c#ee5131ca)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Byte-OS/ByteOS/target/debug/build/lwext4_rust-95b80d03d16b9754/build-script-build` (exit status: 101)\n  --- stdout\n  Retrieve lwext4 source code\n  To patch lwext4 src\n  make: Entering directory '/home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make: Leaving directory '/home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      aarch64-linux-musl-gcc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make: *** [Makefile:37: musl-generic] Error 1\n\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/build.rs:48:9:\n  assertion failed: status.success()\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ext4fs, checker=Lockbud\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4fs\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:19:19.154477386 +08:00:00\n[2025-06-28T04:19:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling lwext4_rust v0.2.0 (https://github.com/Azure-stars/lwext4_rust.git?rev=ee5131c#ee5131ca)\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (https://github.com/Azure-stars/lwext4_rust.git?rev=ee5131c#ee5131ca)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Byte-OS/ByteOS/target/debug/build/lwext4_rust-95b80d03d16b9754/build-script-build` (exit status: 101)\n  --- stdout\n  make: Entering directory '/home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make: Leaving directory '/home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      aarch64-linux-musl-gcc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make: *** [Makefile:37: musl-generic] Error 1\n\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/build.rs:48:9:\n  assertion failed: status.success()\n  stack backtrace:\n     0:     0x556b4d61dcb0 - std::backtrace_rs::backtrace::libunwind::trace::h09b3d24f06048964\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/../../backtrace/src/backtrace/libunwind.rs:116:5\n     1:     0x556b4d61dcb0 - std::backtrace_rs::backtrace::trace_unsynchronized::hf47addf765c6ae4e\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x556b4d61dcb0 - std::sys::backtrace::_print_fmt::h1cac4748ae805433\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:66:9\n     3:     0x556b4d61dcb0 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h51876e9b806abd2f\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:39:26\n     4:     0x556b4d63fa83 - core::fmt::rt::Argument::fmt::h74675d727819c734\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/fmt/rt.rs:177:76\n     5:     0x556b4d63fa83 - core::fmt::write::hec8160b518640e0a\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/fmt/mod.rs:1449:21\n     6:     0x556b4d61ad73 - std::io::Write::write_fmt::h23dd9fd522f1ed73\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/io/mod.rs:1890:15\n     7:     0x556b4d61db02 - std::sys::backtrace::BacktraceLock::print::h82fa1cbd2f5c85f6\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:42:9\n     8:     0x556b4d61ea4f - std::panicking::default_hook::{{closure}}::h0c71ebc4d32ee68d\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:298:22\n     9:     0x556b4d61e8ba - std::panicking::default_hook::h869bbd2dc4246a59\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:325:9\n    10:     0x556b4d61f322 - std::panicking::rust_panic_with_hook::he7cb010bd1162eb7\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:831:13\n    11:     0x556b4d61f186 - std::panicking::begin_panic_handler::{{closure}}::h144a44d32326050e\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:697:13\n    12:     0x556b4d61e1b9 - std::sys::backtrace::__rust_end_short_backtrace::h7baa569e657f05a9\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:168:18\n    13:     0x556b4d61ee4d - rust_begin_unwind\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:695:5\n    14:     0x556b4d63ecb0 - core::panicking::panic_fmt::hc13ec85888cb23ce\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/panicking.rs:75:14\n    15:     0x556b4d63ed3c - core::panicking::panic::h296877b1e66d3b41\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/panicking.rs:145:5\n    16:     0x556b4d5f8639 - build_script_build::main::h5180c3d8ec01dd7a\n                                 at /home/runner/.cargo/git/checkouts/lwext4_rust-42b311d794fde3a2/ee5131c/build.rs:48:9\n    17:     0x556b4d5f580b - core::ops::function::FnOnce::call_once::he7dddd4a8ebae2bd\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:250:5\n    18:     0x556b4d5f4cde - std::sys::backtrace::__rust_begin_short_backtrace::h1eee043fe58785ce\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/backtrace.rs:152:18\n    19:     0x556b4d5f1441 - std::rt::lang_start::{{closure}}::h845338bd888c9f6f\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/rt.rs:199:18\n    20:     0x556b4d617a10 - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::h73c200d88ac341db\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/ops/function.rs:284:13\n    21:     0x556b4d617a10 - std::panicking::try::do_call::h5d854913854b71fe\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:587:40\n    22:     0x556b4d617a10 - std::panicking::try::hf1ae1b2a2498e678\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:550:19\n    23:     0x556b4d617a10 - std::panic::catch_unwind::hcfb0a552e6092b8e\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panic.rs:358:14\n    24:     0x556b4d617a10 - std::rt::lang_start_internal::{{closure}}::hb0245fc583346cd7\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/rt.rs:168:24\n    25:     0x556b4d617a10 - std::panicking::try::do_call::h946e97edafdf2f58\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:587:40\n    26:     0x556b4d617a10 - std::panicking::try::ha9077e2e87ccc6a6\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:550:19\n    27:     0x556b4d617a10 - std::panic::catch_unwind::hd02f80e9111b6f00\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panic.rs:358:14\n    28:     0x556b4d617a10 - std::rt::lang_start_internal::h13b1bd40350dac66\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/rt.rs:164:5\n    29:     0x556b4d5f1427 - std::rt::lang_start::h7c3e1fee94beef88\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/rt.rs:198:5\n    30:     0x556b4d5f8d7e - main\n    31:     0x7f1d8582a1ca - <unknown>\n    32:     0x7f1d8582a28b - __libc_start_main\n    33:     0x556b4d5f0015 - _start\n    34:                0x0 - <unknown>\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ext4fs, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4fs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:14:22.112493852 +08:00:00\n    Building ext4fs v0.1.0 (current)\nerror: running cargo-doc on crate 'ext4fs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate ext4fs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4fs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate ext4fs v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ext4fs, checker=Udeps\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4fs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:24:49.383697858 +08:00:00\n    Checking scopeguard v1.1.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.9.0\n    Checking log v0.4.27\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=ext4fs, checker=Udeps\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4fs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:24:49.537287148 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking scopeguard v1.1.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.9.0\n    Checking log v0.4.27\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=ext4fs, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4fs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:14:23.163434225 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building ext4fs v0.1.0 (current)\nerror: running cargo-doc on crate 'ext4fs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate ext4fs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4fs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate ext4fs v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "kramdisk",
      "count": 10,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kramdisk, checker=Audit\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:53.121773992 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kramdisk, checker=Clippy\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat  --no-deps\n// timestamp=2025-06-28 12:12:53.215723751 +08:00:00\n   Compiling kramdisk v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk)\nerror: failed to run custom build command for `kramdisk v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Byte-OS/ByteOS/target/debug/build/kramdisk-bee069a1272df925/build-script-build` (exit status: 101)\n  --- stderr\n\n  thread 'main' panicked at driver/kramdisk/build.rs:13:53:\n  can't find manifest directory: NotPresent\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kramdisk, checker=Lockbud\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:19:34.046246786 +08:00:00\n[2025-06-28T04:19:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kramdisk v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk)\nerror: failed to run custom build command for `kramdisk v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Byte-OS/ByteOS/target/debug/build/kramdisk-0b919c9e6bf0b894/build-script-build` (exit status: 101)\n  --- stderr\n\n  thread 'main' panicked at driver/kramdisk/build.rs:13:53:\n  can't find manifest directory: NotPresent\n  stack backtrace:\n     0:     0x55804dbb4720 - std::backtrace_rs::backtrace::libunwind::trace::h09b3d24f06048964\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/../../backtrace/src/backtrace/libunwind.rs:116:5\n     1:     0x55804dbb4720 - std::backtrace_rs::backtrace::trace_unsynchronized::hf47addf765c6ae4e\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55804dbb4720 - std::sys::backtrace::_print_fmt::h1cac4748ae805433\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:66:9\n     3:     0x55804dbb4720 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h51876e9b806abd2f\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:39:26\n     4:     0x55804dbd1d23 - core::fmt::rt::Argument::fmt::h74675d727819c734\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/fmt/rt.rs:177:76\n     5:     0x55804dbd1d23 - core::fmt::write::hec8160b518640e0a\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/fmt/mod.rs:1449:21\n     6:     0x55804dbb1aa3 - std::io::Write::write_fmt::h23dd9fd522f1ed73\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/io/mod.rs:1890:15\n     7:     0x55804dbb4572 - std::sys::backtrace::BacktraceLock::print::h82fa1cbd2f5c85f6\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:42:9\n     8:     0x55804dbb54bf - std::panicking::default_hook::{{closure}}::h0c71ebc4d32ee68d\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:298:22\n     9:     0x55804dbb532a - std::panicking::default_hook::h869bbd2dc4246a59\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:325:9\n    10:     0x55804dbb5d92 - std::panicking::rust_panic_with_hook::he7cb010bd1162eb7\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:831:13\n    11:     0x55804dbb5c2a - std::panicking::begin_panic_handler::{{closure}}::h144a44d32326050e\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:704:13\n    12:     0x55804dbb4c29 - std::sys::backtrace::__rust_end_short_backtrace::h7baa569e657f05a9\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:168:18\n    13:     0x55804dbb58bd - rust_begin_unwind\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:695:5\n    14:     0x55804dbd0f50 - core::panicking::panic_fmt::hc13ec85888cb23ce\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/panicking.rs:75:14\n    15:     0x55804dbd12f6 - core::result::unwrap_failed::h68ee3ebc0a871e1d\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/result.rs:1704:5\n    16:     0x55804db92a46 - core::result::Result<T,E>::expect::ha0c8de9ab1b1600c\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:1061:23\n    17:     0x55804db93759 - build_script_build::main::ha4954a181e90d83d\n                                 at /home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk/build.rs:13:23\n    18:     0x55804db9234b - core::ops::function::FnOnce::call_once::hd19b8ab106fe7b15\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:250:5\n    19:     0x55804db91bbe - std::sys::backtrace::__rust_begin_short_backtrace::hda555096c8e7425e\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/backtrace.rs:152:18\n    20:     0x55804db91a91 - std::rt::lang_start::{{closure}}::h760865ba532539ce\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/rt.rs:199:18\n    21:     0x55804dbaece0 - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::h73c200d88ac341db\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/ops/function.rs:284:13\n    22:     0x55804dbaece0 - std::panicking::try::do_call::h5d854913854b71fe\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:587:40\n    23:     0x55804dbaece0 - std::panicking::try::hf1ae1b2a2498e678\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:550:19\n    24:     0x55804dbaece0 - std::panic::catch_unwind::hcfb0a552e6092b8e\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panic.rs:358:14\n    25:     0x55804dbaece0 - std::rt::lang_start_internal::{{closure}}::hb0245fc583346cd7\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/rt.rs:168:24\n    26:     0x55804dbaece0 - std::panicking::try::do_call::h946e97edafdf2f58\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:587:40\n    27:     0x55804dbaece0 - std::panicking::try::ha9077e2e87ccc6a6\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:550:19\n    28:     0x55804dbaece0 - std::panic::catch_unwind::hd02f80e9111b6f00\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panic.rs:358:14\n    29:     0x55804dbaece0 - std::rt::lang_start_internal::h13b1bd40350dac66\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/rt.rs:164:5\n    30:     0x55804db91a77 - std::rt::lang_start::h6dd3f87e7892aca1\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/rt.rs:198:5\n    31:     0x55804db93b0e - main\n    32:     0x7ff51522a1ca - <unknown>\n    33:     0x7ff51522a28b - __libc_start_main\n    34:     0x55804db91155 - _start\n    35:                0x0 - <unknown>\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kramdisk, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:16:10.087934777 +08:00:00\n    Building kramdisk v0.1.0 (current)\nerror: running cargo-doc on crate 'kramdisk' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate kramdisk v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate kramdisk v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kramdisk, checker=Udeps\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:25:03.070860539 +08:00:00\n    Checking scopeguard v1.1.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.9.0\n    Checking fdt-parser v0.4.12\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bitflags` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nerror: could not compile `fdt-parser` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=kramdisk, checker=Udeps\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:25:03.223089594 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking scopeguard v1.1.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.9.0\n    Checking fdt-parser v0.4.12\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bitflags` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nerror: could not compile `fdt-parser` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=kramdisk, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:16:10.910466677 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building kramdisk v0.1.0 (current)\nerror: running cargo-doc on crate 'kramdisk' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate kramdisk v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate kramdisk v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "devfs",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=devfs, checker=Audit\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/devfs\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:37.848281518 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=devfs, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/devfs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:13:17.325718559 +08:00:00\n    Building devfs v0.1.0 (current)\nerror: running cargo-doc on crate 'devfs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate devfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/devfs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate devfs v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=devfs, checker=Udeps\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/devfs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:24:34.596889857 +08:00:00\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.8\n   Compiling autocfg v1.4.0\n    Checking scopeguard v1.1.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=devfs, checker=Udeps\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/devfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:24:35.038120738 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.8\n   Compiling autocfg v1.4.0\n    Checking scopeguard v1.1.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=devfs, checker=Outdated\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/devfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:20:27.633662798 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.9.0    2.9.1   2.9.1   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=devfs, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/devfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:13:18.717541374 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building devfs v0.1.0 (current)\nerror: running cargo-doc on crate 'devfs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate devfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/devfs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate devfs v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "devices",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=devices, checker=Audit\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/devices\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:39.228607078 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=devices, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/devices\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:13:39.668072618 +08:00:00\n    Building devices v0.1.0 (current)\nerror: running cargo-doc on crate 'devices' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate devices v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/crates/devices &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate devices v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=devices, checker=Udeps\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/devices\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:24:45.483926673 +08:00:00\n    Checking scopeguard v1.1.0\n   Compiling lock_api v0.4.9\n    Checking tock-registers v0.8.1\n   Compiling polyhal v0.4.0\n    Checking cfg-if v1.0.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=devices, checker=Udeps\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/devices\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:24:45.655159757 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking scopeguard v1.1.0\n   Compiling lock_api v0.4.9\n    Checking tock-registers v0.8.1\n   Compiling polyhal v0.4.0\n    Checking cfg-if v1.0.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=devices, checker=Outdated\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/devices\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:20:36.229139953 +08:00:00\n\nName        Project  Compat  Latest  Kind    Platform\n----        -------  ------  ------  ----    --------\nfdt-parser  0.4.12   0.4.17  0.4.17  Normal  ---\nlinkme      0.3.22   0.3.33  0.3.33  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=devices, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/devices\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:13:40.536937541 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building devices v0.1.0 (current)\nerror: running cargo-doc on crate 'devices' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate devices v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/crates/devices &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate devices v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "ext4rsfs",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ext4rsfs, checker=Audit\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4rsfs\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:44.281271914 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ext4rsfs, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4rsfs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:15:03.866354245 +08:00:00\n    Building ext4rsfs v0.1.0 (current)\nerror: running cargo-doc on crate 'ext4rsfs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate ext4rsfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4rsfs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate ext4rsfs v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ext4rsfs, checker=Udeps\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4rsfs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:24:49.541749541 +08:00:00\n    Checking scopeguard v1.1.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.9.0\n    Checking log v0.4.27\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=ext4rsfs, checker=Udeps\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4rsfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:24:49.694620389 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking scopeguard v1.1.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.9.0\n    Checking log v0.4.27\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=ext4rsfs, checker=Outdated\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4rsfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:21:13.520447845 +08:00:00\n\nName     Project  Compat  Latest  Kind    Platform\n----     -------  ------  ------  ----    --------\next4_rs  1.3.1    1.3.2   1.3.2   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=ext4rsfs, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4rsfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:15:04.946270295 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building ext4rsfs v0.1.0 (current)\nerror: running cargo-doc on crate 'ext4rsfs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate ext4rsfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ext4rsfs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate ext4rsfs v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "kernel",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kernel, checker=Audit\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:49.107954615 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kernel, checker=Clippy\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat  --no-deps\n// timestamp=2025-06-28 12:12:51.195731652 +08:00:00\n    Checking polyhal v0.4.0\n    Checking linkme v0.3.22\n    Checking num_enum v0.7.3\n   Compiling zerocopy v0.8.24\n   Compiling thiserror v2.0.12\n    Checking libc-types v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types)\n   Compiling futures-core v0.3.28\n    Checking embedded-io v0.6.1\n   Compiling kramdisk v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk)\nerror: failed to run custom build command for `kramdisk v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Byte-OS/ByteOS/target/debug/build/kramdisk-bee069a1272df925/build-script-build` (exit status: 101)\n  --- stderr\n\n  thread 'main' panicked at driver/kramdisk/build.rs:13:53:\n  can't find manifest directory: NotPresent\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kernel, checker=Lockbud\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:19:25.678460462 +08:00:00\n[2025-06-28T04:19:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling polyhal v0.4.0\n   Compiling linkme v0.3.22\n   Compiling num_enum v0.7.3\n   Compiling thiserror v2.0.12\n   Compiling libc-types v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types)\n   Compiling zerocopy v0.8.24\n   Compiling kramdisk v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk)\n   Compiling embedded-io v0.6.1\nerror: failed to run custom build command for `kramdisk v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Byte-OS/ByteOS/target/debug/build/kramdisk-0b919c9e6bf0b894/build-script-build` (exit status: 101)\n  --- stderr\n\n  thread 'main' panicked at driver/kramdisk/build.rs:13:53:\n  can't find manifest directory: NotPresent\n  stack backtrace:\n     0:     0x55cdec93a720 - std::backtrace_rs::backtrace::libunwind::trace::h09b3d24f06048964\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/../../backtrace/src/backtrace/libunwind.rs:116:5\n     1:     0x55cdec93a720 - std::backtrace_rs::backtrace::trace_unsynchronized::hf47addf765c6ae4e\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55cdec93a720 - std::sys::backtrace::_print_fmt::h1cac4748ae805433\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:66:9\n     3:     0x55cdec93a720 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h51876e9b806abd2f\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:39:26\n     4:     0x55cdec957d23 - core::fmt::rt::Argument::fmt::h74675d727819c734\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/fmt/rt.rs:177:76\n     5:     0x55cdec957d23 - core::fmt::write::hec8160b518640e0a\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/fmt/mod.rs:1449:21\n     6:     0x55cdec937aa3 - std::io::Write::write_fmt::h23dd9fd522f1ed73\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/io/mod.rs:1890:15\n     7:     0x55cdec93a572 - std::sys::backtrace::BacktraceLock::print::h82fa1cbd2f5c85f6\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:42:9\n     8:     0x55cdec93b4bf - std::panicking::default_hook::{{closure}}::h0c71ebc4d32ee68d\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:298:22\n     9:     0x55cdec93b32a - std::panicking::default_hook::h869bbd2dc4246a59\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:325:9\n    10:     0x55cdec93bd92 - std::panicking::rust_panic_with_hook::he7cb010bd1162eb7\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:831:13\n    11:     0x55cdec93bc2a - std::panicking::begin_panic_handler::{{closure}}::h144a44d32326050e\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:704:13\n    12:     0x55cdec93ac29 - std::sys::backtrace::__rust_end_short_backtrace::h7baa569e657f05a9\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:168:18\n    13:     0x55cdec93b8bd - rust_begin_unwind\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:695:5\n    14:     0x55cdec956f50 - core::panicking::panic_fmt::hc13ec85888cb23ce\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/panicking.rs:75:14\n    15:     0x55cdec9572f6 - core::result::unwrap_failed::h68ee3ebc0a871e1d\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/result.rs:1704:5\n    16:     0x55cdec918a46 - core::result::Result<T,E>::expect::ha0c8de9ab1b1600c\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:1061:23\n    17:     0x55cdec919759 - build_script_build::main::ha4954a181e90d83d\n                                 at /home/runner/check/batch_1/Byte-OS/ByteOS/driver/kramdisk/build.rs:13:23\n    18:     0x55cdec91834b - core::ops::function::FnOnce::call_once::hd19b8ab106fe7b15\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:250:5\n    19:     0x55cdec917bbe - std::sys::backtrace::__rust_begin_short_backtrace::hda555096c8e7425e\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/backtrace.rs:152:18\n    20:     0x55cdec917a91 - std::rt::lang_start::{{closure}}::h760865ba532539ce\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/rt.rs:199:18\n    21:     0x55cdec934ce0 - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::h73c200d88ac341db\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/ops/function.rs:284:13\n    22:     0x55cdec934ce0 - std::panicking::try::do_call::h5d854913854b71fe\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:587:40\n    23:     0x55cdec934ce0 - std::panicking::try::hf1ae1b2a2498e678\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:550:19\n    24:     0x55cdec934ce0 - std::panic::catch_unwind::hcfb0a552e6092b8e\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panic.rs:358:14\n    25:     0x55cdec934ce0 - std::rt::lang_start_internal::{{closure}}::hb0245fc583346cd7\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/rt.rs:168:24\n    26:     0x55cdec934ce0 - std::panicking::try::do_call::h946e97edafdf2f58\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:587:40\n    27:     0x55cdec934ce0 - std::panicking::try::ha9077e2e87ccc6a6\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:550:19\n    28:     0x55cdec934ce0 - std::panic::catch_unwind::hd02f80e9111b6f00\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panic.rs:358:14\n    29:     0x55cdec934ce0 - std::rt::lang_start_internal::h13b1bd40350dac66\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/rt.rs:164:5\n    30:     0x55cdec917a77 - std::rt::lang_start::h6dd3f87e7892aca1\n                                 at /home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/rt.rs:198:5\n    31:     0x55cdec919b0e - main\n    32:     0x7f853142a1ca - <unknown>\n    33:     0x7f853142a28b - __libc_start_main\n    34:     0x55cdec917155 - _start\n    35:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kernel, checker=Udeps\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:25:01.671915919 +08:00:00\n    Checking scopeguard v1.1.0\n    Checking bitflags v2.9.0\n    Checking tock-registers v0.8.1\n    Checking log v0.4.27\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=kernel, checker=Udeps\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:25:01.840267669 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking scopeguard v1.1.0\n    Checking bitflags v2.9.0\n    Checking tock-registers v0.8.1\n    Checking log v0.4.27\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=kernel, checker=Outdated\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:21:57.86375386 +08:00:00\n\nName          Project  Compat   Latest   Kind    Platform\n----          -------  ------   ------   ----    --------\nfutures-lite  1.13.0   ---      2.6.0    Normal  ---\nhashbrown     0.14.5   ---      0.15.4   Normal  ---\nserde         1.0.188  1.0.219  1.0.219  Build   ---\nserde_derive  1.0.188  1.0.219  1.0.219  Build   ---\ntoml          0.5.11   ---      0.8.23   Build   ---\nxmas-elf      0.9.0    0.9.1    0.10.0   Normal  ---\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "kvirtio",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kvirtio, checker=Audit\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kvirtio\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:54.069696699 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kvirtio, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kvirtio\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:16:27.403665155 +08:00:00\n    Building kvirtio v0.1.0 (current)\nerror: running cargo-doc on crate 'kvirtio' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate kvirtio v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/driver/kvirtio &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate kvirtio v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kvirtio, checker=Udeps\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kvirtio\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:25:04.376971819 +08:00:00\n    Checking scopeguard v1.1.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.9.0\n    Checking log v0.4.27\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=kvirtio, checker=Udeps\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kvirtio\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:25:04.531635755 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking scopeguard v1.1.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.9.0\n    Checking log v0.4.27\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=kvirtio, checker=Outdated\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kvirtio\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:22:50.885776779 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\nvirtio-drivers  0.8.0    ---     0.11.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=kvirtio, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kvirtio\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:16:28.278928098 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building kvirtio v0.1.0 (current)\nerror: running cargo-doc on crate 'kvirtio' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate kvirtio v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/driver/kvirtio &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate kvirtio v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "ns16550a",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ns16550a, checker=Audit\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/ns16550a\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:56.051374787 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ns16550a, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/ns16550a\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:17:01.766076579 +08:00:00\n    Building ns16550a v0.1.0 (current)\nerror: running cargo-doc on crate 'ns16550a' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate ns16550a v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/driver/ns16550a &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate ns16550a v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ns16550a, checker=Udeps\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/ns16550a\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:25:12.039729627 +08:00:00\n    Checking scopeguard v1.1.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.9.0\n    Checking arrayvec v0.7.6\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `arrayvec` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=ns16550a, checker=Udeps\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/ns16550a\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:25:12.192518487 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking scopeguard v1.1.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.9.0\n    Checking arrayvec v0.7.6\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `arrayvec` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=ns16550a, checker=Outdated\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/ns16550a\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:23:14.044182591 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nns16550a  0.2.0    ---     0.5.0   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=ns16550a, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/ns16550a\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:17:02.841900343 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building ns16550a v0.1.0 (current)\nerror: running cargo-doc on crate 'ns16550a' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate ns16550a v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/driver/ns16550a &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate ns16550a v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "runtime",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=runtime, checker=Audit\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:59.199588601 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=runtime, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:18:18.261105583 +08:00:00\n    Building runtime v0.1.0 (current)\nerror: running cargo-doc on crate 'runtime' failed with output:\n-----\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate runtime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate runtime v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=runtime, checker=Udeps\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:25:18.381807378 +08:00:00\n    Checking scopeguard v1.1.0\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking arrayvec v0.7.6\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `arrayvec` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=runtime, checker=Udeps\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:25:18.53086977 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking scopeguard v1.1.0\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking arrayvec v0.7.6\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `arrayvec` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=runtime, checker=Outdated\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:23:59.503997029 +08:00:00\n\nName                    Project  Compat  Latest  Kind    Platform\n----                    -------  ------  ------  ----    --------\nbuddy_system_allocator  0.9.0    0.9.1   0.11.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=runtime, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:18:19.027725017 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building runtime v0.1.0 (current)\nerror: running cargo-doc on crate 'runtime' failed with output:\n-----\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate runtime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate runtime v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "general-plic",
      "count": 8,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=general-plic, checker=Audit\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/general-plic\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:47.523352113 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=general-plic, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/general-plic\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:15:42.448359713 +08:00:00\n    Building general-plic v0.1.0 (current)\nerror: running cargo-doc on crate 'general-plic' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate general-plic v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/driver/general-plic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate general-plic v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=general-plic, checker=Udeps\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/general-plic\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:24:53.814498209 +08:00:00\n    Checking scopeguard v1.1.0\n    Checking tock-registers v0.8.1\n    Checking fdt-parser v0.4.12\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `fdt-parser` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=general-plic, checker=Udeps\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/general-plic\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:24:54.025113483 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking scopeguard v1.1.0\n    Checking tock-registers v0.8.1\n    Checking fdt-parser v0.4.12\n   Compiling runtime v0.1.0 (/home/runner/check/batch_1/Byte-OS/ByteOS/crates/runtime)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `fdt-parser` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=general-plic, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/general-plic\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:15:43.284484854 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building general-plic v0.1.0 (current)\nerror: running cargo-doc on crate 'general-plic' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate general-plic v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/driver/general-plic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate general-plic v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "kgoldfish-rtc",
      "count": 8,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kgoldfish-rtc, checker=Audit\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kgoldfish-rtc\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:51.537898306 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kgoldfish-rtc, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kgoldfish-rtc\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:15:50.057041186 +08:00:00\n    Building kgoldfish-rtc v0.1.0 (current)\nerror: running cargo-doc on crate 'kgoldfish-rtc' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate kgoldfish-rtc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/driver/kgoldfish-rtc &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate kgoldfish-rtc v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kgoldfish-rtc, checker=Udeps\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kgoldfish-rtc\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:25:01.84343206 +08:00:00\n    Checking scopeguard v1.1.0\n    Checking tock-registers v0.8.1\n    Checking fdt-parser v0.4.12\n    Checking lazyinit v0.2.1\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `lazyinit` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `fdt-parser` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=kgoldfish-rtc, checker=Udeps\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kgoldfish-rtc\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:25:01.993393023 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking scopeguard v1.1.0\n    Checking tock-registers v0.8.1\n    Checking fdt-parser v0.4.12\n    Checking lazyinit v0.2.1\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `lazyinit` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `fdt-parser` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=kgoldfish-rtc, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/driver/kgoldfish-rtc\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:15:50.903432737 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building kgoldfish-rtc v0.1.0 (current)\nerror: running cargo-doc on crate 'kgoldfish-rtc' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate kgoldfish-rtc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/driver/kgoldfish-rtc &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate kgoldfish-rtc v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "ramfs",
      "count": 8,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.0\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.0\n└── kernel 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.5.0\n│   └── polyhal 0.4.0\n│       ├── runtime 0.1.0\n│       │   ├── ramfs 0.1.0\n│       │   │   └── fs 0.1.0\n│       │   │       └── kernel 0.1.0\n│       │   ├── kernel 0.1.0\n│       │   └── devices 0.1.0\n│       │       ├── ns16550a 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kvirtio 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kramdisk 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kgoldfish-rtc 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── kernel 0.1.0\n│       │       ├── general-plic 0.1.0\n│       │       │   └── kernel 0.1.0\n│       │       ├── fs 0.1.0\n│       │       ├── ext4rsfs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       ├── ext4fs 0.1.0\n│       │       │   └── fs 0.1.0\n│       │       └── devfs 0.1.0\n│       │           └── fs 0.1.0\n│       ├── ramfs 0.1.0\n│       ├── polyhal-trap 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── polyhal-boot 0.4.0\n│       │   └── kernel 0.1.0\n│       ├── kernel 0.1.0\n│       ├── executor 0.1.0\n│       │   └── kernel 0.1.0\n│       └── devices 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.4.0\n│   ├── polyhal-boot 0.4.0\n│   └── polyhal 0.4.0\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.4.0\n    ├── polyhal-boot 0.4.0\n    └── polyhal 0.4.0\n\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    │   └── kernel 0.1.0\n    ├── ext4rsfs 0.1.0\n    │   └── fs 0.1.0\n    ├── ext4fs 0.1.0\n    │   └── fs 0.1.0\n    └── devfs 0.1.0\n        └── fs 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 111\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f820cc767d65b32eef9d7ce7201448f28501c59edc55d47b71375fea579fc2df\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ramfs, checker=Audit\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ramfs\n// cmd=cargo audit\n// timestamp=2025-06-28 12:18:58.540177333 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (111 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ramfs, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ramfs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:17:37.896030494 +08:00:00\n    Building ramfs v0.1.0 (current)\nerror: running cargo-doc on crate 'ramfs' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate ramfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ramfs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate ramfs v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ramfs, checker=Udeps\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ramfs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:25:17.154100283 +08:00:00\n    Checking scopeguard v1.1.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.9.0\n    Checking num_enum v0.7.3\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `num_enum` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=ramfs, checker=Udeps\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ramfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:25:17.305159774 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking scopeguard v1.1.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.9.0\n    Checking num_enum v0.7.3\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `num_enum` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=ramfs, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ramfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:17:38.835330583 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building ramfs v0.1.0 (current)\nerror: running cargo-doc on crate 'ramfs' failed with output:\n-----\n   Compiling autocfg v1.5.0\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate ramfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/ramfs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate ramfs v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "procfs",
      "count": 6,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=procfs, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/procfs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:17:22.100029808 +08:00:00\n    Building procfs v0.1.0 (current)\nerror: running cargo-doc on crate 'procfs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling rustversion v1.0.21\n   Compiling autocfg v1.5.0\n   Compiling syscalls v0.6.18 (https://github.com/jasonwhite/syscalls.git#92624de3)\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate procfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/procfs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate procfs v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=procfs, checker=Udeps\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/procfs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:25:13.439806592 +08:00:00\n    Checking scopeguard v1.1.0\n   Compiling syscalls v0.6.18 (https://github.com/jasonwhite/syscalls.git#92624de3)\n    Checking bitflags v2.9.0\n    Checking num_enum v0.7.3\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `num_enum` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `syscalls` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:19:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:19:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=procfs, checker=Udeps\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/procfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:25:13.581818423 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking scopeguard v1.1.0\n   Compiling syscalls v0.6.18 (https://github.com/jasonwhite/syscalls.git#92624de3)\n    Checking bitflags v2.9.0\n    Checking num_enum v0.7.3\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `num_enum` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `syscalls` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=procfs, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/procfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:17:22.957358421 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building procfs v0.1.0 (current)\nerror: running cargo-doc on crate 'procfs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling rustversion v1.0.21\n   Compiling autocfg v1.5.0\n   Compiling syscalls v0.6.18 (https://github.com/jasonwhite/syscalls.git#92624de3)\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate procfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/procfs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate procfs v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "libc-types",
      "count": 5,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=libc-types, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:16:50.611441904 +08:00:00\n    Building libc-types v0.1.0 (current)\nerror: running cargo-doc on crate 'libc-types' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling rustversion v1.0.21\n    Checking bitflags v2.9.1\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bitflags` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate libc-types v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate libc-types v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=libc-types, checker=Udeps\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:25:07.892357001 +08:00:00\n   Compiling proc-macro2 v1.0.95\n    Checking bitflags v2.9.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bitflags` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=libc-types, checker=Udeps\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:25:08.118392841 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling proc-macro2 v1.0.95\n    Checking bitflags v2.9.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bitflags` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=libc-types, checker=Outdated\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:22:56.533462524 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.9.0    2.9.1   2.9.1   Normal  ---\nnum_enum  0.7.3    0.7.4   0.7.4   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=libc-types, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:16:51.21967259 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building libc-types v0.1.0 (current)\nerror: running cargo-doc on crate 'libc-types' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling rustversion v1.0.21\n    Checking bitflags v2.9.1\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bitflags` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate libc-types v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/crates/libc-types &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate libc-types v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "sync",
      "count": 5,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sync, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:18:19.724215945 +08:00:00\n    Building sync v0.1.0 (current)\nerror: running cargo-doc on crate 'sync' failed with output:\n-----\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate sync v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sync v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sync, checker=Udeps\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:25:18.535491161 +08:00:00\n    Checking scopeguard v1.1.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=sync, checker=Udeps\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:25:18.660064492 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking scopeguard v1.1.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=sync, checker=Outdated\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:24:20.347788059 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nspin  0.9.8    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=sync, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:18:20.329450509 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building sync v0.1.0 (current)\nerror: running cargo-doc on crate 'sync' failed with output:\n-----\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate sync v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/crates/sync &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sync v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "ByteOS",
      "pkg": "vfscore",
      "count": 5,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=vfscore, checker=SemverChecks\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/vfscore\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:18:24.323804009 +08:00:00\n    Building vfscore v0.1.0 (current)\nerror: running cargo-doc on crate 'vfscore' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling rustversion v1.0.21\n   Compiling syscalls v0.6.18 (https://github.com/jasonwhite/syscalls.git#92624de3)\n    Checking bitflags v2.9.1\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bitflags` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate vfscore v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/vfscore &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate vfscore v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=vfscore, checker=Udeps\n// toolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/vfscore\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:25:19.201582947 +08:00:00\n    Checking bitflags v2.9.0\n    Checking downcast-rs v2.0.1\n    Checking num_enum v0.7.3\n    Checking syscalls v0.6.18 (https://github.com/jasonwhite/syscalls.git#92624de3)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `num_enum` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `downcast-rs` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `syscalls` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=vfscore, checker=Udeps\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/vfscore\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:25:19.340246309 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking bitflags v2.9.0\n    Checking downcast-rs v2.0.1\n    Checking num_enum v0.7.3\n    Checking syscalls v0.6.18 (https://github.com/jasonwhite/syscalls.git#92624de3)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `num_enum` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `downcast-rs` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `syscalls` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=vfscore, checker=Outdated\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/vfscore\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:24:23.240975036 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.9.0    2.9.1   2.9.1   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=vfscore, checker=SemverChecks\ntoolchain=nightly-2025-02-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/vfscore\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:18:25.115459915 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building vfscore v0.1.0 (current)\nerror: running cargo-doc on crate 'vfscore' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling rustversion v1.0.21\n   Compiling syscalls v0.6.18 (https://github.com/jasonwhite/syscalls.git#92624de3)\n    Checking bitflags v2.9.1\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bitflags` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate vfscore v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/ByteOS/filesystem/vfscore &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate vfscore v0.1.0\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Atomvchecker",
    "Outdated",
    "Geiger",
    "Unused Deps",
    "Unformatted"
  ]
}