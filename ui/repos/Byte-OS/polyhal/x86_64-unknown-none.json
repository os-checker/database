{
  "repo": {
    "user": "Byte-OS",
    "repo": "polyhal"
  },
  "data": [
    {
      "user": "Byte-OS",
      "repo": "polyhal",
      "pkg": "polyhal",
      "count": 9,
      "raw_reports": [
        {
          "file": "polyhal/src/pagetable/x86_64.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: associated constants `VADDR_BITS` and `USER_VADDR_END` are never used\n   --> polyhal/src/pagetable/x86_64.rs:124:22\n    |\n118 | impl PageTable {\n    | -------------- associated constants in this implementation\n...\n124 |     pub(crate) const VADDR_BITS: usize = 48;\n    |                      ^^^^^^^^^^\n125 |     pub(crate) const USER_VADDR_END: usize = (1 << Self::VADDR_BITS) - 1;\n    |                      ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: associated constants `VADDR_BITS` and `USER_VADDR_END` are never used\n   --> polyhal/src/pagetable/x86_64.rs:124:22\n    |\n118 | impl PageTable {\n    | -------------- associated constants in this implementation\n...\n124 |     pub(crate) const VADDR_BITS: usize = 48;\n    |                      ^^^^^^^^^^\n125 |     pub(crate) const USER_VADDR_END: usize = (1 << Self::VADDR_BITS) - 1;\n    |                      ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/polyhal/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   └── polyhal 0.2.4\n│       ├── polyhal-trap 0.2.4\n│       │   └── example 0.1.0\n│       ├── polyhal-boot 0.2.4\n│       │   └── example 0.1.0\n│       └── example 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.2.4\n│   ├── polyhal-boot 0.2.4\n│   └── polyhal 0.2.4\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.2.4\n    ├── polyhal-boot 0.2.4\n    └── polyhal 0.2.4\n\n\n{\n  \"database\": {\n    \"advisory-count\": 752,\n    \"last-commit\": \"1273f0099ce6882659ff64b852c8fdb5f8cdd5b9\",\n    \"last-updated\": \"2025-04-10T14:29:37+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 54\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=polyhal, checker=Lockbud\n// toolchain=nightly-2024-07-15, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/polyhal/polyhal\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-04-20 4:45:05.988216777 +08:00:00\n   Compiling x86_64 v0.14.12\n[2025-04-19T20:44:57Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.26/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.26/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-04-19T20:44:57Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling polyhal v0.2.4 (/home/runner/check/batch_1/Byte-OS/polyhal/polyhal)\n   Compiling uart_16550 v0.3.2\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=polyhal, checker=Rapx\n// toolchain=nightly-2024-07-15, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/polyhal/polyhal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-04-20 4:46:03.229402665 +08:00:00\n   Compiling autocfg v1.4.0\n   Compiling proc-macro2 v1.0.94\n    Checking bit_field v0.10.2\n    Checking bitflags v2.9.0\n   Compiling rustversion v1.0.20\n   Compiling unicode-ident v1.0.18\n    Checking bitflags v1.3.2\n   Compiling paste v1.0.15\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling quote v1.0.40\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking x86_64 v0.14.12\n   Compiling syn v2.0.100\n   Compiling polyhal v0.2.4 (/home/runner/check/batch_1/Byte-OS/polyhal/polyhal)\n    Checking log v0.4.26\n    Checking bit v0.1.1\n    Checking acpi v5.2.0\n    Checking uart_16550 v0.3.2\n    Checking x2apic v0.4.3\n    Checking multiboot v0.8.0\n    Checking spin v0.10.0\n    Checking raw-cpuid v11.5.0\n    Checking fdt-parser v0.4.10\n    Checking lazyinit v0.2.1\n    Checking cfg-if v1.0.0\n    Checking arrayvec v0.7.6\n   Compiling polyhal-macro v0.2.4 (/home/runner/check/batch_1/Byte-OS/polyhal/polyhal-macro)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> polyhal/src/components/kcontext/x86_64.rs:154:5\n    |\n154 | /     core::arch::asm!(\n155 | |         // Save Kernel Context.\n156 | |         \"\n157 | |         pop     r8 \n...   |\n166 | |         options(noreturn)\n167 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> polyhal/src/components/kcontext/x86_64.rs:197:5\n    |\n197 | /     core::arch::asm!(\n198 | |         // consume the return address(rip) in the stack\n199 | |         // for consistency with context_switch.\n200 | |         // and save page table to r9\n...   |\n217 | |         options(noreturn)\n218 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> polyhal/src/lib.rs:4:12\n  |\n4 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `unsafe_attributes` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> polyhal/src/lib.rs:8:12\n  |\n8 | #![feature(unsafe_attributes)]\n  |            ^^^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0787`.\nwarning: `polyhal` (lib) generated 2 warnings\nerror: could not compile `polyhal` (lib) due to 2 previous errors; 2 warnings emitted\n20:46:08|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=polyhal, checker=SemverChecks\n// toolchain=nightly-2024-07-15, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/polyhal/polyhal\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-04-20 4:44:24.594266216 +08:00:00\n    Building polyhal v0.2.4 (current)\nerror: running cargo-doc on crate 'polyhal' failed with output:\n-----\n   Compiling rustversion v1.0.20\n    Checking bitflags v2.9.0\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `x86_64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bit_field` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate polyhal v0.2.4\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/polyhal/polyhal --features boot,default,graphic,logger,trap &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate polyhal v0.2.4\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=polyhal, checker=Outdated\ntoolchain=nightly-2024-07-15, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/polyhal/polyhal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-04-20 4:47:27.972433151 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nfdt-parser      0.4.10   0.4.13  0.4.13  Normal  ---\nlog             0.4.26   0.4.27  0.4.27  Normal  ---\nloongArch64     0.2.4    0.2.5   0.2.5   Normal  cfg(target_arch = \"loongarch64\")\nsbi-rt          0.0.2    ---     0.0.3   Normal  cfg(target_arch = \"riscv64\")\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx2apic          0.4.3    ---     0.5.0   Normal  cfg(target_arch = \"x86_64\")\nx86_64          0.14.12  ---     0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=polyhal, checker=SemverChecks\ntoolchain=nightly-2024-07-15, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/polyhal/polyhal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-04-20 4:44:25.097883831 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building polyhal v0.2.4 (current)\nerror: running cargo-doc on crate 'polyhal' failed with output:\n-----\n   Compiling rustversion v1.0.20\n    Checking bitflags v2.9.0\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `x86_64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bit_field` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate polyhal v0.2.4\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/polyhal/polyhal --features boot,default,graphic,logger,trap &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate polyhal v0.2.4\n"
            ]
          }
        },
        {
          "file": "polyhal/src/debug_console/x86_64/vga_text.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: casting raw pointers to the same type and constness is unnecessary (`*mut debug_console::x86_64::vga_text::FChar` -> `*mut debug_console::x86_64::vga_text::FChar`)\n  --> polyhal/src/debug_console/x86_64/vga_text.rs:37:26\n   |\n37 |         let vga_buffer = Self::VGA_BUFFER_PTR as *mut FChar;\n   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::VGA_BUFFER_PTR`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n   = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "polyhal",
      "pkg": "polyhal-boot",
      "count": 9,
      "raw_reports": [
        {
          "file": "polyhal/src/pagetable/x86_64.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: associated constants `VADDR_BITS` and `USER_VADDR_END` are never used\n   --> polyhal/src/pagetable/x86_64.rs:124:22\n    |\n118 | impl PageTable {\n    | -------------- associated constants in this implementation\n...\n124 |     pub(crate) const VADDR_BITS: usize = 48;\n    |                      ^^^^^^^^^^\n125 |     pub(crate) const USER_VADDR_END: usize = (1 << Self::VADDR_BITS) - 1;\n    |                      ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: associated constants `VADDR_BITS` and `USER_VADDR_END` are never used\n   --> polyhal/src/pagetable/x86_64.rs:124:22\n    |\n118 | impl PageTable {\n    | -------------- associated constants in this implementation\n...\n124 |     pub(crate) const VADDR_BITS: usize = 48;\n    |                      ^^^^^^^^^^\n125 |     pub(crate) const USER_VADDR_END: usize = (1 << Self::VADDR_BITS) - 1;\n    |                      ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/polyhal/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   └── polyhal 0.2.4\n│       ├── polyhal-trap 0.2.4\n│       │   └── example 0.1.0\n│       ├── polyhal-boot 0.2.4\n│       │   └── example 0.1.0\n│       └── example 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.2.4\n│   ├── polyhal-boot 0.2.4\n│   └── polyhal 0.2.4\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.2.4\n    ├── polyhal-boot 0.2.4\n    └── polyhal 0.2.4\n\n\n{\n  \"database\": {\n    \"advisory-count\": 752,\n    \"last-commit\": \"1273f0099ce6882659ff64b852c8fdb5f8cdd5b9\",\n    \"last-updated\": \"2025-04-10T14:29:37+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 54\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=polyhal-boot, checker=Lockbud\n// toolchain=nightly-2024-07-15, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/polyhal/polyhal-boot\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-04-20 4:45:08.080234088 +08:00:00\n   Compiling x86_64 v0.14.12\n[2025-04-19T20:44:57Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.26/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.26/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-04-19T20:44:57Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=polyhal-boot, checker=Rapx\n// toolchain=nightly-2024-07-15, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/polyhal/polyhal-boot\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-04-20 4:46:31.803287496 +08:00:00\n   Compiling autocfg v1.4.0\n    Checking bitflags v2.9.0\n   Compiling rustversion v1.0.20\n   Compiling proc-macro2 v1.0.94\n    Checking bit_field v0.10.2\n   Compiling paste v1.0.15\n   Compiling unicode-ident v1.0.18\n    Checking bitflags v1.3.2\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling quote v1.0.40\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking x86_64 v0.14.12\n   Compiling syn v2.0.100\n   Compiling polyhal v0.2.4 (/home/runner/check/batch_1/Byte-OS/polyhal/polyhal)\n    Checking log v0.4.26\n    Checking bit v0.1.1\n    Checking acpi v5.2.0\n    Checking uart_16550 v0.3.2\n    Checking multiboot v0.8.0\n    Checking x2apic v0.4.3\n    Checking spin v0.10.0\n    Checking raw-cpuid v11.5.0\n    Checking fdt-parser v0.4.10\n    Checking lazyinit v0.2.1\n    Checking cfg-if v1.0.0\n    Checking arrayvec v0.7.6\n   Compiling polyhal-macro v0.2.4 (/home/runner/check/batch_1/Byte-OS/polyhal/polyhal-macro)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> polyhal/src/components/kcontext/x86_64.rs:154:5\n    |\n154 | /     core::arch::asm!(\n155 | |         // Save Kernel Context.\n156 | |         \"\n157 | |         pop     r8 \n...   |\n166 | |         options(noreturn)\n167 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> polyhal/src/components/kcontext/x86_64.rs:197:5\n    |\n197 | /     core::arch::asm!(\n198 | |         // consume the return address(rip) in the stack\n199 | |         // for consistency with context_switch.\n200 | |         // and save page table to r9\n...   |\n217 | |         options(noreturn)\n218 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> polyhal/src/lib.rs:4:12\n  |\n4 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `unsafe_attributes` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> polyhal/src/lib.rs:8:12\n  |\n8 | #![feature(unsafe_attributes)]\n  |            ^^^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0787`.\nwarning: `polyhal` (lib) generated 2 warnings\nerror: could not compile `polyhal` (lib) due to 2 previous errors; 2 warnings emitted\n20:46:37|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=polyhal-boot, checker=SemverChecks\n// toolchain=nightly-2024-07-15, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/polyhal/polyhal-boot\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-04-20 4:44:30.315352908 +08:00:00\n    Building polyhal-boot v0.2.4 (current)\nerror: running cargo-doc on crate 'polyhal-boot' failed with output:\n-----\n   Compiling rustversion v1.0.20\n    Checking bitflags v2.9.0\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `x86_64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bit_field` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate polyhal-boot v0.2.4\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/polyhal/polyhal-boot --features graphic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate polyhal-boot v0.2.4\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=polyhal-boot, checker=Outdated\ntoolchain=nightly-2024-07-15, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/polyhal/polyhal-boot\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-04-20 4:47:29.996186959 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nloongArch64     0.2.4    0.2.5   0.2.5   Normal  cfg(target_arch = \"loongarch64\")\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.14.12  ---     0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=polyhal-boot, checker=SemverChecks\ntoolchain=nightly-2024-07-15, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/polyhal/polyhal-boot\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-04-20 4:44:30.811383584 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building polyhal-boot v0.2.4 (current)\nerror: running cargo-doc on crate 'polyhal-boot' failed with output:\n-----\n   Compiling rustversion v1.0.20\n    Checking bitflags v2.9.0\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `x86_64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bit_field` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate polyhal-boot v0.2.4\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/polyhal/polyhal-boot --features graphic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate polyhal-boot v0.2.4\n"
            ]
          }
        },
        {
          "file": "polyhal/src/debug_console/x86_64/vga_text.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: casting raw pointers to the same type and constness is unnecessary (`*mut debug_console::x86_64::vga_text::FChar` -> `*mut debug_console::x86_64::vga_text::FChar`)\n  --> polyhal/src/debug_console/x86_64/vga_text.rs:37:26\n   |\n37 |         let vga_buffer = Self::VGA_BUFFER_PTR as *mut FChar;\n   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::VGA_BUFFER_PTR`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n   = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "polyhal",
      "pkg": "polyhal-trap",
      "count": 9,
      "raw_reports": [
        {
          "file": "polyhal/src/pagetable/x86_64.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: associated constants `VADDR_BITS` and `USER_VADDR_END` are never used\n   --> polyhal/src/pagetable/x86_64.rs:124:22\n    |\n118 | impl PageTable {\n    | -------------- associated constants in this implementation\n...\n124 |     pub(crate) const VADDR_BITS: usize = 48;\n    |                      ^^^^^^^^^^\n125 |     pub(crate) const USER_VADDR_END: usize = (1 << Self::VADDR_BITS) - 1;\n    |                      ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: associated constants `VADDR_BITS` and `USER_VADDR_END` are never used\n   --> polyhal/src/pagetable/x86_64.rs:124:22\n    |\n118 | impl PageTable {\n    | -------------- associated constants in this implementation\n...\n124 |     pub(crate) const VADDR_BITS: usize = 48;\n    |                      ^^^^^^^^^^\n125 |     pub(crate) const USER_VADDR_END: usize = (1 << Self::VADDR_BITS) - 1;\n    |                      ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/polyhal/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   └── polyhal 0.2.4\n│       ├── polyhal-trap 0.2.4\n│       │   └── example 0.1.0\n│       ├── polyhal-boot 0.2.4\n│       │   └── example 0.1.0\n│       └── example 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.2.4\n│   ├── polyhal-boot 0.2.4\n│   └── polyhal 0.2.4\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.2.4\n    ├── polyhal-boot 0.2.4\n    └── polyhal 0.2.4\n\n\n{\n  \"database\": {\n    \"advisory-count\": 752,\n    \"last-commit\": \"1273f0099ce6882659ff64b852c8fdb5f8cdd5b9\",\n    \"last-updated\": \"2025-04-10T14:29:37+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 54\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=polyhal-trap, checker=Lockbud\n// toolchain=nightly-2024-07-15, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/polyhal/polyhal-trap\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-04-20 4:45:10.172221629 +08:00:00\n   Compiling x86_64 v0.14.12\n[2025-04-19T20:44:57Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.26/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.26/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-04-19T20:44:57Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=polyhal-trap, checker=Rapx\n// toolchain=nightly-2024-07-15, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/polyhal/polyhal-trap\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-04-20 4:47:13.794763198 +08:00:00\n   Compiling autocfg v1.4.0\n   Compiling rustversion v1.0.20\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.94\n    Checking bitflags v2.9.0\n   Compiling unicode-ident v1.0.18\n   Compiling paste v1.0.15\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling x86 v0.52.0\n   Compiling quote v1.0.40\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n    Checking x86_64 v0.14.12\n   Compiling syn v2.0.100\n   Compiling polyhal v0.2.4 (/home/runner/check/batch_1/Byte-OS/polyhal/polyhal)\n    Checking log v0.4.26\n    Checking bit v0.1.1\n    Checking acpi v5.2.0\n    Checking x2apic v0.4.3\n    Checking uart_16550 v0.3.2\n    Checking multiboot v0.8.0\n    Checking spin v0.10.0\n    Checking raw-cpuid v11.5.0\n    Checking fdt-parser v0.4.10\n    Checking cfg-if v1.0.0\n    Checking arrayvec v0.7.6\n    Checking lazyinit v0.2.1\n   Compiling polyhal-macro v0.2.4 (/home/runner/check/batch_1/Byte-OS/polyhal/polyhal-macro)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> polyhal/src/components/kcontext/x86_64.rs:154:5\n    |\n154 | /     core::arch::asm!(\n155 | |         // Save Kernel Context.\n156 | |         \"\n157 | |         pop     r8 \n...   |\n166 | |         options(noreturn)\n167 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> polyhal/src/components/kcontext/x86_64.rs:197:5\n    |\n197 | /     core::arch::asm!(\n198 | |         // consume the return address(rip) in the stack\n199 | |         // for consistency with context_switch.\n200 | |         // and save page table to r9\n...   |\n217 | |         options(noreturn)\n218 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> polyhal/src/lib.rs:4:12\n  |\n4 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `unsafe_attributes` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> polyhal/src/lib.rs:8:12\n  |\n8 | #![feature(unsafe_attributes)]\n  |            ^^^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0787`.\nwarning: `polyhal` (lib) generated 2 warnings\nerror: could not compile `polyhal` (lib) due to 2 previous errors; 2 warnings emitted\n20:47:19|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=polyhal-trap, checker=SemverChecks\n// toolchain=nightly-2024-07-15, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/polyhal/polyhal-trap\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-04-20 4:44:35.07208134 +08:00:00\n    Building polyhal-trap v0.2.4 (current)\nerror: running cargo-doc on crate 'polyhal-trap' failed with output:\n-----\n    Checking bit_field v0.10.2\n    Checking bitflags v2.9.0\n   Compiling rustversion v1.0.20\n    Checking bitflags v1.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `x86_64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bit_field` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate polyhal-trap v0.2.4\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/polyhal/polyhal-trap &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate polyhal-trap v0.2.4\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=polyhal-trap, checker=Outdated\ntoolchain=nightly-2024-07-15, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/polyhal/polyhal-trap\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-04-20 4:47:33.995736729 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.26   0.4.27  0.4.27  Normal  ---\nloongArch64     0.2.4    0.2.5   0.2.5   Normal  cfg(target_arch = \"loongarch64\")\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.14.12  ---     0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=polyhal-trap, checker=SemverChecks\ntoolchain=nightly-2024-07-15, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/polyhal/polyhal-trap\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-04-20 4:44:35.575008385 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building polyhal-trap v0.2.4 (current)\nerror: running cargo-doc on crate 'polyhal-trap' failed with output:\n-----\n    Checking bit_field v0.10.2\n    Checking bitflags v2.9.0\n   Compiling rustversion v1.0.20\n    Checking bitflags v1.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `x86_64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bit_field` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate polyhal-trap v0.2.4\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Byte-OS/polyhal/polyhal-trap &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate polyhal-trap v0.2.4\n"
            ]
          }
        },
        {
          "file": "polyhal/src/debug_console/x86_64/vga_text.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: casting raw pointers to the same type and constness is unnecessary (`*mut debug_console::x86_64::vga_text::FChar` -> `*mut debug_console::x86_64::vga_text::FChar`)\n  --> polyhal/src/debug_console/x86_64/vga_text.rs:37:26\n   |\n37 |         let vga_buffer = Self::VGA_BUFFER_PTR as *mut FChar;\n   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::VGA_BUFFER_PTR`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n   = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "polyhal",
      "pkg": "example",
      "count": 7,
      "raw_reports": [
        {
          "file": "polyhal/src/pagetable/x86_64.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: associated constants `VADDR_BITS` and `USER_VADDR_END` are never used\n   --> polyhal/src/pagetable/x86_64.rs:124:22\n    |\n118 | impl PageTable {\n    | -------------- associated constants in this implementation\n...\n124 |     pub(crate) const VADDR_BITS: usize = 48;\n    |                      ^^^^^^^^^^\n125 |     pub(crate) const USER_VADDR_END: usize = (1 << Self::VADDR_BITS) - 1;\n    |                      ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: associated constants `VADDR_BITS` and `USER_VADDR_END` are never used\n   --> polyhal/src/pagetable/x86_64.rs:124:22\n    |\n118 | impl PageTable {\n    | -------------- associated constants in this implementation\n...\n124 |     pub(crate) const VADDR_BITS: usize = 48;\n    |                      ^^^^^^^^^^\n125 |     pub(crate) const USER_VADDR_END: usize = (1 << Self::VADDR_BITS) - 1;\n    |                      ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Byte-OS/polyhal/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   └── polyhal 0.2.4\n│       ├── polyhal-trap 0.2.4\n│       │   └── example 0.1.0\n│       ├── polyhal-boot 0.2.4\n│       │   └── example 0.1.0\n│       └── example 0.1.0\n├── riscv 0.13.0\n│   ├── polyhal-trap 0.2.4\n│   ├── polyhal-boot 0.2.4\n│   └── polyhal 0.2.4\n└── multiboot 0.8.0\n    ├── polyhal-trap 0.2.4\n    ├── polyhal-boot 0.2.4\n    └── polyhal 0.2.4\n\n\n{\n  \"database\": {\n    \"advisory-count\": 752,\n    \"last-commit\": \"1273f0099ce6882659ff64b852c8fdb5f8cdd5b9\",\n    \"last-updated\": \"2025-04-10T14:29:37+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 54\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=example, checker=Lockbud\n// toolchain=nightly-2024-07-15, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/polyhal/example\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-04-20 4:44:57.066560219 +08:00:00\n   Compiling bitflags v2.9.0\n   Compiling rustversion v1.0.20\n   Compiling bit_field v0.10.2\n   Compiling lock_api v0.4.12\n   Compiling scopeguard v1.2.0\n   Compiling bitflags v1.3.2\n   Compiling raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling log v0.4.26\n   Compiling volatile v0.4.6\n   Compiling bit v0.1.1\n[2025-04-19T20:44:57Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.26/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.26/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-04-19T20:44:57Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling acpi v5.2.0\n   Compiling polyhal v0.2.4 (/home/runner/check/batch_1/Byte-OS/polyhal/polyhal)\n   Compiling spin v0.10.0\n   Compiling multiboot v0.8.0\n   Compiling raw-cpuid v11.5.0\n   Compiling x86_64 v0.14.12\n   Compiling fdt-parser v0.4.10\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n   Compiling cfg-if v1.0.0\n   Compiling arrayvec v0.7.6\n   Compiling lazyinit v0.2.1\n   Compiling byteorder v1.5.0\n   Compiling zerocopy v0.7.35\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=example, checker=Rapx\n// toolchain=nightly-2024-07-15, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/polyhal/example\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-04-20 4:45:33.549443344 +08:00:00\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n    Checking bitflags v2.9.0\n   Compiling rustversion v1.0.20\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n    Checking scopeguard v1.2.0\n   Compiling paste v1.0.15\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.100\n   Compiling x86 v0.52.0\n    Checking volatile v0.4.6\n    Checking log v0.4.26\n    Checking x86_64 v0.14.12\n   Compiling polyhal v0.2.4 (/home/runner/check/batch_1/Byte-OS/polyhal/polyhal)\n    Checking bit v0.1.1\n    Checking multiboot v0.8.0\n    Checking acpi v5.2.0\n    Checking x2apic v0.4.3\n    Checking spin v0.10.0\n    Checking uart_16550 v0.3.2\n    Checking raw-cpuid v11.5.0\n    Checking lazyinit v0.2.1\n    Checking cfg-if v1.0.0\n    Checking arrayvec v0.7.6\n    Checking fdt-parser v0.4.10\n    Checking byteorder v1.5.0\n    Checking spin v0.9.8\n   Compiling example v0.1.0 (/home/runner/check/batch_1/Byte-OS/polyhal/example)\n    Checking buddy_system_allocator v0.11.0\n   Compiling polyhal-macro v0.2.4 (/home/runner/check/batch_1/Byte-OS/polyhal/polyhal-macro)\n   Compiling zerocopy-derive v0.7.35\n   Compiling enumn v0.1.14\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> polyhal/src/components/kcontext/x86_64.rs:154:5\n    |\n154 | /     core::arch::asm!(\n155 | |         // Save Kernel Context.\n156 | |         \"\n157 | |         pop     r8 \n...   |\n166 | |         options(noreturn)\n167 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> polyhal/src/components/kcontext/x86_64.rs:197:5\n    |\n197 | /     core::arch::asm!(\n198 | |         // consume the return address(rip) in the stack\n199 | |         // for consistency with context_switch.\n200 | |         // and save page table to r9\n...   |\n217 | |         options(noreturn)\n218 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> polyhal/src/lib.rs:4:12\n  |\n4 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `unsafe_attributes` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> polyhal/src/lib.rs:8:12\n  |\n8 | #![feature(unsafe_attributes)]\n  |            ^^^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0787`.\n    Checking zerocopy v0.7.35\nwarning: `polyhal` (lib) generated 2 warnings\nerror: could not compile `polyhal` (lib) due to 2 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n20:45:39|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=example, checker=Outdated\ntoolchain=nightly-2024-07-15, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/polyhal/example\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-04-20 4:47:25.941207251 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\nlog             0.4.26   0.4.27  0.4.27  Normal  ---\nvirtio-drivers  0.7.5    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "example/src/main.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: empty `loop {}` wastes CPU cycles\n  --> example/src/main.rs:96:5\n   |\n96 |     loop {}\n   |     ^^^^^^^\n   |\n   = help: you should either use `panic!()` or add a call pausing or sleeping the thread to the loop body\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_loop\n   = note: `#[warn(clippy::empty_loop)]` on by default\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Byte-OS",
      "repo": "polyhal",
      "pkg": "polyhal-macro",
      "count": 1,
      "raw_reports": [
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=polyhal-macro, checker=Outdated\ntoolchain=nightly-2024-07-15, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/polyhal/polyhal-macro\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-04-20 4:47:31.999726634 +08:00:00\n\nName         Project  Compat  Latest  Kind    Platform\n----         -------  ------  ------  ----    --------\nproc-macro2  1.0.94   1.0.95  1.0.95  Normal  ---\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}