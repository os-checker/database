{"repo":{"user":"kern-crates","repo":"riscv_vcpu"},"data":[{"user":"kern-crates","repo":"riscv_vcpu","pkg":"riscv_vcpu","count":4,"raw_reports":[{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=riscv_vcpu, checker=Clippy\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_9/kern-crates/riscv_vcpu\n// cmd=cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json\n    Checking log v0.4.22\n    Checking memory_addr v0.3.1\n   Compiling riscv v0.11.1\n    Checking critical-section v1.2.0\n    Checking embedded-hal v1.0.0\n    Checking bitflags v2.6.0\n   Compiling axerrno v0.1.0\n    Checking cfg-if v1.0.0\n    Checking bit_field v0.10.2\n   Compiling percpu v0.1.5\n   Compiling bare-metal v0.2.5\n   Compiling riscv v0.6.0 (https://github.com/rcore-os/riscv#11d43cf7)\n    Checking page_table_entry v0.4.1\n    Checking memory_set v0.3.1\n    Checking lazyinit v0.2.1\n    Checking sbi-spec v0.0.7\n    Checking numeric-enum-macro v0.2.0\n    Checking sbi-rt v0.0.3\n    Checking page_table_multiarch v0.4.1\n   Compiling memoffset v0.9.1\n   Compiling rustsbi-macros v0.0.2\n    Checking bitflags v1.3.2\n    Checking axaddrspace v0.1.0 (https://github.com/arceos-hypervisor/axaddrspace.git#0e4ddd0f)\n   Compiling crate_interface v0.1.3\n    Checking axvcpu v0.1.0 (https://github.com/arceos-hypervisor/axvcpu.git#fba6c6a0)\n    Checking riscv-decode v0.2.1 (https://github.com/KuangjuX/riscv-decode.git#0e346d0a)\n    Checking tock-registers v0.8.1\n    Checking rustsbi v0.4.0\n    Checking riscv_vcpu v0.1.0 (/home/runner/check/batch_9/kern-crates/riscv_vcpu)\nerror: could not compile `riscv_vcpu` (lib) due to 1 previous error; 1 warning emitted\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-02T04:20:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:20:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-02T04:20:26Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:20:26Z WARN  lockbud::callbacks] crate riscv_target contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/detect.rs","count":1,"kinds":{"Clippy(Error)":["error[E0787]: the `asm!` macro is not allowed in naked functions\n   --> src/detect.rs:150:5\n    |\n150 | /     asm!(\n151 | |         \".p2align 2\",\n152 | |         \"addi   sp, sp, -8*21\",\n153 | |         \"sd     ra, 0*8(sp)\",\n...   |\n208 | |         options(noreturn),\n209 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n"]}},{"file":"src/lib.rs","count":1,"kinds":{"Clippy(Warn)":["warning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> src/lib.rs:5:12\n  |\n5 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Audit","Mirai","Rap","Rudra","Lockbud(Probably)","Lockbud(Possibly)","Outdated","Geiger","Unformatted"]}