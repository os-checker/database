{"repo":{"user":"kern-crates","repo":"taskctx"},"data":[{"user":"kern-crates","repo":"taskctx","pkg":"taskctx","count":4,"raw_reports":[{"file":"src/lib.rs","count":2,"kinds":{"Clippy(Warn)":["warning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> src/lib.rs:15:12\n   |\n15 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\n","warning: doc list item without indentation\n  --> src/lib.rs:12:5\n   |\n12 | //! task can be preempted. It can be used to implement preemption protection lock.\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\n   = note: `#[warn(clippy::doc_lazy_continuation)]` on by default\nhelp: indent this line\n   |\n12 | //!   task can be preempted. It can be used to implement preemption protection lock.\n   |     ++\n\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-09-28T16:09:34Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T16:09:34Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/arch/x86_64.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `TaskContext`\n   --> src/arch/x86_64.rs:110:5\n    |\n110 | /     pub const fn new() -> Self {\n111 | |         Self {\n112 | |             kstack_top: VirtAddr::from(0),\n113 | |             rsp: 0,\n...   |\n117 | |         }\n118 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for TaskContext {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Lockbud(Probably)","Lockbud(Possibly)","Unformatted"]}