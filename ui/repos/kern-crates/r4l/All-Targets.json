{
  "repo": {
    "user": "kern-crates",
    "repo": "r4l"
  },
  "data": [
    {
      "user": "kern-crates",
      "repo": "r4l",
      "pkg": "r4l",
      "count": 117,
      "raw_reports": [
        {
          "file": "r4l/src/print.rs",
          "features": "",
          "count": 16,
          "kinds": {
            "Mirai": [
              "error[E0433]: failed to resolve: could not find `log_print` in the crate root\n   --> r4l/src/print.rs:228:17\n    |\n228 |           $crate::log_print!($crate::print::LogLevel::Info, $($arg)*)\n    |                   ^^^^^^^^^ could not find `log_print` in the crate root\n    |\n   ::: r4l/src/init.rs:25:5\n    |\n25  | /     crate::pr_info!(\n26  | |         \"enter driver_framework_init start_Addr {:p}  end_Addr{:p}\",\n27  | |         start_addr,\n28  | |         end_addr\n29  | |     );\n    | |_____- in this macro invocation\n    |\n    = note: this error originates in the macro `crate::pr_info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error[E0433]: failed to resolve: could not find `log_print` in the crate root\n   --> r4l/src/print.rs:228:17\n    |\n228 |         $crate::log_print!($crate::print::LogLevel::Info, $($arg)*)\n    |                 ^^^^^^^^^ could not find `log_print` in the crate root\n    |\n   ::: r4l/src/init.rs:36:9\n    |\n36  |         crate::pr_info!(\"Function at address {:p} returned: {}\",current_addr,result);\n    |         ---------------------------------------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `crate::pr_info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error[E0433]: failed to resolve: could not find `log_print` in the crate root\n   --> r4l/src/print.rs:228:17\n    |\n228 |         $crate::log_print!($crate::print::LogLevel::Info, $($arg)*)\n    |                 ^^^^^^^^^ could not find `log_print` in the crate root\n    |\n   ::: r4l/src/of/platform.rs:26:9\n    |\n26  |         crate::pr_info!(\"bus node: {:?} \", i.compatible().unwrap().first());\n    |         ------------------------------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `crate::pr_info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error[E0433]: failed to resolve: could not find `log_print` in the crate root\n   --> r4l/src/print.rs:228:17\n    |\n228 |         $crate::log_print!($crate::print::LogLevel::Info, $($arg)*)\n    |                 ^^^^^^^^^ could not find `log_print` in the crate root\n    |\n   ::: r4l/src/of/platform.rs:31:21\n    |\n31  |                     crate::pr_info!(\"create platform {:?} child device {}\", i.first(), c.first())\n    |                     ----------------------------------------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `crate::pr_info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error[E0433]: failed to resolve: could not find `log_print` in the crate root\n   --> r4l/src/print.rs:228:17\n    |\n228 |         $crate::log_print!($crate::print::LogLevel::Info, $($arg)*)\n    |                 ^^^^^^^^^ could not find `log_print` in the crate root\n    |\n   ::: r4l/src/of/platform.rs:34:21\n    |\n34  |                     crate::pr_info!(\"create platform {:?} child device none\", i.first())\n    |                     -------------------------------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `crate::pr_info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error[E0433]: failed to resolve: could not find `log_print` in the crate root\n   --> r4l/src/print.rs:254:17\n    |\n254 |         $crate::log_print!($crate::print::LogLevel::Debug, $($arg)*)\n    |                 ^^^^^^^^^ could not find `log_print` in the crate root\n    |\n   ::: r4l/src/of/irq.rs:19:9\n    |\n19  |         pr_debug!(\"irq {} parent intsize={}\\n\",parent.compatible().unwrap().first(), intsize);\n    |         ------------------------------------------------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `pr_debug` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error[E0433]: failed to resolve: could not find `log_print` in the crate root\n   --> r4l/src/print.rs:254:17\n    |\n254 |         $crate::log_print!($crate::print::LogLevel::Debug, $($arg)*)\n    |                 ^^^^^^^^^ could not find `log_print` in the crate root\n    |\n   ::: r4l/src/of/irq.rs:26:9\n    |\n26  |         pr_debug!(\" intspec={:?}\\n\", res.args);\n    |         -------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `pr_debug` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error[E0433]: failed to resolve: could not find `log_print` in the crate root\n   --> r4l/src/print.rs:228:17\n    |\n228 |         $crate::log_print!($crate::print::LogLevel::Info, $($arg)*)\n    |                 ^^^^^^^^^ could not find `log_print` in the crate root\n    |\n   ::: r4l/src/platform/platform_bus.rs:45:29\n    |\n45  | ...                   pr_info!(\"driver : {} device matched\", id);\n    |                       ------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `pr_info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
            ],
            "Clippy(Error)": [
              "error[E0433]: failed to resolve: could not find `log_print` in the crate root\n   --> r4l/src/print.rs:228:17\n    |\n228 |           $crate::log_print!($crate::print::LogLevel::Info, $($arg)*)\n    |                   ^^^^^^^^^ could not find `log_print` in the crate root\n    |\n   ::: r4l/src/init.rs:25:5\n    |\n25  | /     crate::pr_info!(\n26  | |         \"enter driver_framework_init start_Addr {:p}  end_Addr{:p}\",\n27  | |         start_addr,\n28  | |         end_addr\n29  | |     );\n    | |_____- in this macro invocation\n    |\n    = note: this error originates in the macro `crate::pr_info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error[E0433]: failed to resolve: could not find `log_print` in the crate root\n   --> r4l/src/print.rs:228:17\n    |\n228 |         $crate::log_print!($crate::print::LogLevel::Info, $($arg)*)\n    |                 ^^^^^^^^^ could not find `log_print` in the crate root\n    |\n   ::: r4l/src/init.rs:36:9\n    |\n36  |         crate::pr_info!(\"Function at address {:p} returned: {}\",current_addr,result);\n    |         ---------------------------------------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `crate::pr_info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error[E0433]: failed to resolve: could not find `log_print` in the crate root\n   --> r4l/src/print.rs:228:17\n    |\n228 |         $crate::log_print!($crate::print::LogLevel::Info, $($arg)*)\n    |                 ^^^^^^^^^ could not find `log_print` in the crate root\n    |\n   ::: r4l/src/of/platform.rs:26:9\n    |\n26  |         crate::pr_info!(\"bus node: {:?} \", i.compatible().unwrap().first());\n    |         ------------------------------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `crate::pr_info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error[E0433]: failed to resolve: could not find `log_print` in the crate root\n   --> r4l/src/print.rs:228:17\n    |\n228 |         $crate::log_print!($crate::print::LogLevel::Info, $($arg)*)\n    |                 ^^^^^^^^^ could not find `log_print` in the crate root\n    |\n   ::: r4l/src/of/platform.rs:31:21\n    |\n31  |                     crate::pr_info!(\"create platform {:?} child device {}\", i.first(), c.first())\n    |                     ----------------------------------------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `crate::pr_info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error[E0433]: failed to resolve: could not find `log_print` in the crate root\n   --> r4l/src/print.rs:228:17\n    |\n228 |         $crate::log_print!($crate::print::LogLevel::Info, $($arg)*)\n    |                 ^^^^^^^^^ could not find `log_print` in the crate root\n    |\n   ::: r4l/src/of/platform.rs:34:21\n    |\n34  |                     crate::pr_info!(\"create platform {:?} child device none\", i.first())\n    |                     -------------------------------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `crate::pr_info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error[E0433]: failed to resolve: could not find `log_print` in the crate root\n   --> r4l/src/print.rs:254:17\n    |\n254 |         $crate::log_print!($crate::print::LogLevel::Debug, $($arg)*)\n    |                 ^^^^^^^^^ could not find `log_print` in the crate root\n    |\n   ::: r4l/src/of/irq.rs:19:9\n    |\n19  |         pr_debug!(\"irq {} parent intsize={}\\n\",parent.compatible().unwrap().first(), intsize);\n    |         ------------------------------------------------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `pr_debug` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error[E0433]: failed to resolve: could not find `log_print` in the crate root\n   --> r4l/src/print.rs:254:17\n    |\n254 |         $crate::log_print!($crate::print::LogLevel::Debug, $($arg)*)\n    |                 ^^^^^^^^^ could not find `log_print` in the crate root\n    |\n   ::: r4l/src/of/irq.rs:26:9\n    |\n26  |         pr_debug!(\" intspec={:?}\\n\", res.args);\n    |         -------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `pr_debug` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error[E0433]: failed to resolve: could not find `log_print` in the crate root\n   --> r4l/src/print.rs:228:17\n    |\n228 |         $crate::log_print!($crate::print::LogLevel::Info, $($arg)*)\n    |                 ^^^^^^^^^ could not find `log_print` in the crate root\n    |\n   ::: r4l/src/platform/platform_bus.rs:45:29\n    |\n45  | ...                   pr_info!(\"driver : {} device matched\", id);\n    |                       ------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `pr_info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/platform/platform_drv.rs",
          "features": "",
          "count": 12,
          "kinds": {
            "Mirai": [
              "error[E0432]: unresolved imports `crate::sync::Arc`, `crate::sync::Mutex`\n --> r4l/src/platform/platform_drv.rs:6:5\n  |\n6 |     sync::Arc, sync::Mutex,\n  |     ^^^^^^^^^  ^^^^^^^^^^^ no `Mutex` in `sync`\n  |     |\n  |     no `Arc` in `sync`\n  |\n  = help: consider importing this struct instead:\n          alloc::sync::Arc\n\n",
              "error[E0432]: unresolved imports `crate::sync::Arc`, `crate::sync::Mutex`\n --> r4l/src/platform/platform_drv.rs:6:5\n  |\n6 |     sync::Arc, sync::Mutex,\n  |     ^^^^^^^^^  ^^^^^^^^^^^ no `Mutex` in `sync`\n  |     |\n  |     no `Arc` in `sync`\n  |\n  = help: consider importing this struct instead:\n          alloc::sync::Arc\n\n",
              "warning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\n",
              "warning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\n",
              "warning: unused macro definition: `module_platform_device`\n   --> r4l/src/platform/platform_drv.rs:136:14\n    |\n136 | macro_rules! module_platform_device {\n    |              ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\n",
              "warning: unused variable: `pdev`\n   --> r4l/src/platform/platform_drv.rs:115:20\n    |\n115 |     fn get_id_info(pdev: &PlatformDevice) -> Option<&'static T::IdInfo> {\n    |                    ^^^^ help: if this is intentional, prefix it with an underscore: `_pdev`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\n"
            ],
            "Clippy(Warn)": [
              "warning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\n",
              "warning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\n",
              "warning: unused macro definition: `module_platform_device`\n   --> r4l/src/platform/platform_drv.rs:136:14\n    |\n136 | macro_rules! module_platform_device {\n    |              ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\n",
              "warning: unused variable: `pdev`\n   --> r4l/src/platform/platform_drv.rs:115:20\n    |\n115 |     fn get_id_info(pdev: &PlatformDevice) -> Option<&'static T::IdInfo> {\n    |                    ^^^^ help: if this is intentional, prefix it with an underscore: `_pdev`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\n"
            ],
            "Clippy(Error)": [
              "error[E0432]: unresolved imports `crate::sync::Arc`, `crate::sync::Mutex`\n --> r4l/src/platform/platform_drv.rs:6:5\n  |\n6 |     sync::Arc, sync::Mutex,\n  |     ^^^^^^^^^  ^^^^^^^^^^^ no `Mutex` in `sync`\n  |     |\n  |     no `Arc` in `sync`\n  |\n  = help: consider importing this struct instead:\n          alloc::sync::Arc\n\n",
              "error[E0432]: unresolved imports `crate::sync::Arc`, `crate::sync::Mutex`\n --> r4l/src/platform/platform_drv.rs:6:5\n  |\n6 |     sync::Arc, sync::Mutex,\n  |     ^^^^^^^^^  ^^^^^^^^^^^ no `Mutex` in `sync`\n  |     |\n  |     no `Arc` in `sync`\n  |\n  = help: consider importing this struct instead:\n          alloc::sync::Arc\n\n"
            ]
          }
        },
        {
          "file": "src/irq/mod.rs",
          "features": "",
          "count": 11,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/mod.rs (original lines from 16 to 19)\n-use crate::{\n-    error::Result,\n-    str::CString,\n-};\n+use crate::{error::Result, str::CString};\n",
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/mod.rs (original lines from 23 to 23)\n-use core::fmt;\n",
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/mod.rs (original lines from 25 to 25)\n+use core::fmt;\n",
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/mod.rs (original lines from 42 to 42)\n-impl  InternalRegistration {\n+impl InternalRegistration {\n",
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/mod.rs (original lines from 54 to 57)\n-        Ok(Self {\n-            irq,\n-            name,\n-        })\n+        Ok(Self { irq, name })\n",
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/mod.rs (original lines from 107 to 107)\n-    irq: u32\n+    irq: u32,\n",
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/mod.rs (original lines from 119 to 119)\n-    pub fn try_new<H: Handler> (\n+    pub fn try_new<H: Handler>(\n",
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/mod.rs (original lines from 124 to 126)\n-    ) -> Result<Self>  where <H as Handler>::Data: 'static {\n-        IRQ_DATA_ARRAY.lock().push(IrqData{data: Box::new(data), irq});\n-        Ok(Self(InternalRegistration::try_new(irq, Self::handler::<H>, None, flags, name)?))\n+    ) -> Result<Self>\n+    where\n+        <H as Handler>::Data: 'static,\n+    {\n+        IRQ_DATA_ARRAY.lock().push(IrqData {\n+            data: Box::new(data),\n+            irq,\n+        });\n+        Ok(Self(InternalRegistration::try_new(\n+            irq,\n+            Self::handler::<H>,\n+            None,\n+            flags,\n+            name,\n+        )?))\n",
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/mod.rs (original lines from 130 to 130)\n-    fn handler<H: Handler> (irq:u32) where <H as Handler>::Data: 'static {\n+    fn handler<H: Handler>(irq: u32)\n+    where\n+        <H as Handler>::Data: 'static,\n+    {\n",
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/mod.rs (original lines from 132 to 132)\n-        let irq_data = lock.iter().find(|x|x.irq == irq).unwrap();\n+        let irq_data = lock.iter().find(|x| x.irq == irq).unwrap();\n",
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/mod.rs (original lines from 139 to 139)\n-        IRQ_DATA_ARRAY.lock().retain(|x:&IrqData| x.irq != self.0.irq);\n+        IRQ_DATA_ARRAY\n+            .lock()\n+            .retain(|x: &IrqData| x.irq != self.0.irq);\n"
            ]
          }
        },
        {
          "file": "r4l/src/of/platform.rs",
          "features": "",
          "count": 9,
          "kinds": {
            "Mirai": [
              "error[E0432]: unresolved import `crate::sync::Arc`\n --> r4l/src/of/platform.rs:7:5\n  |\n7 | use crate::sync::Arc;\n  |     ^^^^^^^^^^^^^^^^ no `Arc` in `sync`\n  |\nhelp: consider importing this struct instead\n  |\n7 | use alloc::sync::Arc;\n  |     ~~~~~~~~~~~~~~~~\n\n",
              "error[E0432]: unresolved import `crate::sync::Mutex`\n --> r4l/src/of/platform.rs:8:5\n  |\n8 | use crate::sync::Mutex;\n  |     ^^^^^^^^^^^^^^^^^^ no `Mutex` in `sync`\n\n",
              "warning: unused import: `super::DeviceId`\n --> r4l/src/of/platform.rs:3:5\n  |\n3 | use super::DeviceId;\n  |     ^^^^^^^^^^^^^^^\n\n",
              "warning: unused import: `crate::pr_debug`\n --> r4l/src/of/platform.rs:6:5\n  |\n6 | use crate::pr_debug;\n  |     ^^^^^^^^^^^^^^^\n\n"
            ],
            "Clippy(Error)": [
              "error[E0432]: unresolved import `crate::sync::Arc`\n --> r4l/src/of/platform.rs:7:5\n  |\n7 | use crate::sync::Arc;\n  |     ^^^^^^^^^^^^^^^^ no `Arc` in `sync`\n  |\nhelp: consider importing this struct instead\n  |\n7 | use alloc::sync::Arc;\n  |     ~~~~~~~~~~~~~~~~\n\n",
              "error[E0432]: unresolved import `crate::sync::Mutex`\n --> r4l/src/of/platform.rs:8:5\n  |\n8 | use crate::sync::Mutex;\n  |     ^^^^^^^^^^^^^^^^^^ no `Mutex` in `sync`\n\n"
            ],
            "Clippy(Warn)": [
              "warning: unused import: `super::DeviceId`\n --> r4l/src/of/platform.rs:3:5\n  |\n3 | use super::DeviceId;\n  |     ^^^^^^^^^^^^^^^\n\n",
              "warning: unused import: `crate::pr_debug`\n --> r4l/src/of/platform.rs:6:5\n  |\n6 | use crate::pr_debug;\n  |     ^^^^^^^^^^^^^^^\n\n",
              "warning: constants have by default a `'static` lifetime\n  --> r4l/src/of/platform.rs:11:37\n   |\n11 | const OF_DEFAULT_BUS_MATCH_TABLE: [&'static str; 4] =\n   |                                    -^^^^^^^---- help: consider removing `'static`: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n   = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/irq/mod.rs",
          "features": "",
          "count": 8,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `crate::str::CString`\n  --> r4l/src/irq/mod.rs:18:5\n   |\n18 |     str::CString,\n   |     ^^^^^^^^^^^^ no `CString` in `str`\n   |\n   = help: consider importing this struct instead:\n           alloc::ffi::CString\n\n",
              "error[E0432]: unresolved import `crate::sync::Mutex`\n  --> r4l/src/irq/mod.rs:22:5\n   |\n22 | use crate::sync::Mutex;\n   |     ^^^^^^^^^^^^^^^^^^ no `Mutex` in `sync`\n\n",
              "error[E0599]: no function or associated item named `handler` found for struct `irq::Registration` in the current scope\n   --> r4l/src/irq/mod.rs:126:58\n    |\n100 | pub struct Registration(InternalRegistration);\n    | ----------------------- function or associated item `handler` not found for this struct\n...\n126 |         Ok(Self(InternalRegistration::try_new(irq, Self::handler::<H>, None, flags, name)?))\n    |                                                          ^^^^^^^ function or associated item not found in `Registration`\n\n"
            ],
            "Clippy(Warn)": [
              "warning: unused import: `os_api::*`\n  --> r4l/src/irq/mod.rs:14:9\n   |\n14 | pub use os_api::*;\n   |         ^^^^^^^^^\n\n"
            ],
            "Mirai": [
              "error[E0432]: unresolved import `crate::str::CString`\n  --> r4l/src/irq/mod.rs:18:5\n   |\n18 |     str::CString,\n   |     ^^^^^^^^^^^^ no `CString` in `str`\n   |\n   = help: consider importing this struct instead:\n           alloc::ffi::CString\n\n",
              "error[E0432]: unresolved import `crate::sync::Mutex`\n  --> r4l/src/irq/mod.rs:22:5\n   |\n22 | use crate::sync::Mutex;\n   |     ^^^^^^^^^^^^^^^^^^ no `Mutex` in `sync`\n\n",
              "warning: unused import: `os_api::*`\n  --> r4l/src/irq/mod.rs:14:9\n   |\n14 | pub use os_api::*;\n   |         ^^^^^^^^^\n\n",
              "error[E0599]: no function or associated item named `handler` found for struct `irq::Registration` in the current scope\n   --> r4l/src/irq/mod.rs:126:58\n    |\n100 | pub struct Registration(InternalRegistration);\n    | ----------------------- function or associated item `handler` not found for this struct\n...\n126 |         Ok(Self(InternalRegistration::try_new(irq, Self::handler::<H>, None, flags, name)?))\n    |                                                          ^^^^^^^ function or associated item not found in `Registration`\n\n"
            ]
          }
        },
        {
          "file": "src/of/irq.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/of/irq.rs (original lines from 14 to 15)\n-    fn of_irq_parse_one(node: OfNode<'static>, index: usize)\n-        -> Result<Self>  {\n+    fn of_irq_parse_one(node: OfNode<'static>, index: usize) -> Result<Self> {\n",
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/of/irq.rs (original lines from 18 to 19)\n-        \n-        pr_debug!(\"irq {} parent intsize={}\\n\",parent.compatible().unwrap().first(), intsize);\n",
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/of/irq.rs (original lines from 21 to 21)\n-        let mut res = Self{np: parent, args_count: intsize, args: [0;MAX_PHANDLE_ARGS]};\n+        pr_debug!(\n+            \"irq {} parent intsize={}\\n\",\n+            parent.compatible().unwrap().first(),\n+            intsize\n+        );\n",
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/of/irq.rs (original lines from 23 to 23)\n+        let mut res = Self {\n+            np: parent,\n+            args_count: intsize,\n+            args: [0; MAX_PHANDLE_ARGS],\n+        };\n+\n",
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/of/irq.rs (original lines from 24 to 24)\n-            res.args[i] = of::of_property_read_u32(node, \"interrupts\", (index * intsize) + i).ok_or(EINVAL)?;\n+            res.args[i] = of::of_property_read_u32(node, \"interrupts\", (index * intsize) + i)\n+                .ok_or(EINVAL)?;\n",
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/of/irq.rs (original lines from 27 to 27)\n-        // TODO: Check if there are any interrupt-map translations to process \n+        // TODO: Check if there are any interrupt-map translations to process\n"
            ]
          }
        },
        {
          "file": "macros/src/helpers.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Warn)": [
              "warning: struct `Generics` is never constructed\n   --> macros/src/helpers.rs:109:19\n    |\n109 | pub(crate) struct Generics {\n    |                   ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: function `parse_generics` is never used\n   --> macros/src/helpers.rs:128:15\n    |\n128 | pub(crate) fn parse_generics(input: TokenStream) -> (Generics, Vec<TokenTree>) {\n    |               ^^^^^^^^^^^^^^\n\n"
            ],
            "Mirai": [
              "warning: struct `Generics` is never constructed\n   --> macros/src/helpers.rs:109:19\n    |\n109 | pub(crate) struct Generics {\n    |                   ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: function `parse_generics` is never used\n   --> macros/src/helpers.rs:128:15\n    |\n128 | pub(crate) fn parse_generics(input: TokenStream) -> (Generics, Vec<TokenTree>) {\n    |               ^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/bus.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused import: `core::ops::Deref`\n --> r4l/src/bus.rs:8:5\n  |\n8 | use core::ops::Deref;\n  |     ^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
            ],
            "Clippy(Error)": [
              "error[E0432]: unresolved import `crate::sync::Arc`\n --> r4l/src/bus.rs:7:5\n  |\n7 | use crate::sync::Arc;\n  |     ^^^^^^^^^^^^^^^^ no `Arc` in `sync`\n  |\nhelp: consider importing this struct instead\n  |\n7 | use alloc::sync::Arc;\n  |     ~~~~~~~~~~~~~~~~\n\n"
            ],
            "Mirai": [
              "error[E0432]: unresolved import `crate::sync::Arc`\n --> r4l/src/bus.rs:7:5\n  |\n7 | use crate::sync::Arc;\n  |     ^^^^^^^^^^^^^^^^ no `Arc` in `sync`\n  |\nhelp: consider importing this struct instead\n  |\n7 | use alloc::sync::Arc;\n  |     ~~~~~~~~~~~~~~~~\n\n",
              "warning: unused import: `core::ops::Deref`\n --> r4l/src/bus.rs:8:5\n  |\n8 | use core::ops::Deref;\n  |     ^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/driver/driver.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `crate::c_str`\n --> r4l/src/driver/driver.rs:6:13\n  |\n6 | use crate::{c_str, sync::Arc};\n  |             ^^^^^ no `c_str` in the root\n  |\n  = help: consider importing one of these modules instead:\n          core::ffi::c_str\n          alloc::ffi::c_str\n\n",
              "error[E0432]: unresolved import `crate::sync::Arc`\n --> r4l/src/driver/driver.rs:6:20\n  |\n6 | use crate::{c_str, sync::Arc};\n  |                    ^^^^^^^^^ no `Arc` in `sync`\n  |\n  = help: consider importing this struct instead:\n          alloc::sync::Arc\n\n"
            ],
            "Mirai": [
              "error[E0432]: unresolved import `crate::c_str`\n --> r4l/src/driver/driver.rs:6:13\n  |\n6 | use crate::{c_str, sync::Arc};\n  |             ^^^^^ no `c_str` in the root\n  |\n  = help: consider importing one of these modules instead:\n          core::ffi::c_str\n          alloc::ffi::c_str\n\n",
              "error[E0432]: unresolved import `crate::sync::Arc`\n --> r4l/src/driver/driver.rs:6:20\n  |\n6 | use crate::{c_str, sync::Arc};\n  |                    ^^^^^^^^^ no `Arc` in `sync`\n  |\n  = help: consider importing this struct instead:\n          alloc::sync::Arc\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/error.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `self::error`\n  --> r4l/src/error.rs:77:15\n   |\n77 | pub use self::error::code;\n   |               ^^^^^ could not find `error` in `self`\n   |\nnote: found an item that was configured out\n  --> r4l/src/error.rs:9:5\n   |\n9  | mod error {\n   |     ^^^^^\nnote: the item is gated behind the `starry` feature\n  --> r4l/src/error.rs:8:7\n   |\n8  | #[cfg(feature = \"starry\")]\n   |       ^^^^^^^^^^^^^^^^^^\n\n",
              "error[E0432]: unresolved import `self::error`\n  --> r4l/src/error.rs:78:15\n   |\n78 | pub use self::error::Error;\n   |               ^^^^^ could not find `error` in `self`\n   |\nnote: found an item that was configured out\n  --> r4l/src/error.rs:9:5\n   |\n9  | mod error {\n   |     ^^^^^\nnote: the item is gated behind the `starry` feature\n  --> r4l/src/error.rs:8:7\n   |\n8  | #[cfg(feature = \"starry\")]\n   |       ^^^^^^^^^^^^^^^^^^\n\n"
            ],
            "Mirai": [
              "error[E0432]: unresolved import `self::error`\n  --> r4l/src/error.rs:77:15\n   |\n77 | pub use self::error::code;\n   |               ^^^^^ could not find `error` in `self`\n   |\nnote: found an item that was configured out\n  --> r4l/src/error.rs:9:5\n   |\n9  | mod error {\n   |     ^^^^^\nnote: the item is gated behind the `starry` feature\n  --> r4l/src/error.rs:8:7\n   |\n8  | #[cfg(feature = \"starry\")]\n   |       ^^^^^^^^^^^^^^^^^^\n\n",
              "error[E0432]: unresolved import `self::error`\n  --> r4l/src/error.rs:78:15\n   |\n78 | pub use self::error::Error;\n   |               ^^^^^ could not find `error` in `self`\n   |\nnote: found an item that was configured out\n  --> r4l/src/error.rs:9:5\n   |\n9  | mod error {\n   |     ^^^^^\nnote: the item is gated behind the `starry` feature\n  --> r4l/src/error.rs:8:7\n   |\n8  | #[cfg(feature = \"starry\")]\n   |       ^^^^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/lib.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Warn)": [
              "warning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\n --> r4l/src/lib.rs:9:12\n  |\n9 | #![feature(generic_const_exprs)]\n  |            ^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\n  = note: `#[warn(incomplete_features)]` on by default\n\n",
              "warning: the feature `generic_const_items` is incomplete and may not be safe to use and/or cause compiler crashes\n  --> r4l/src/lib.rs:10:12\n   |\n10 | #![feature(generic_const_items)]\n   |            ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #113521 <https://github.com/rust-lang/rust/issues/113521> for more information\n\n"
            ],
            "Mirai": [
              "warning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\n --> r4l/src/lib.rs:9:12\n  |\n9 | #![feature(generic_const_exprs)]\n  |            ^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\n  = note: `#[warn(incomplete_features)]` on by default\n\n",
              "warning: the feature `generic_const_items` is incomplete and may not be safe to use and/or cause compiler crashes\n  --> r4l/src/lib.rs:10:12\n   |\n10 | #![feature(generic_const_items)]\n   |            ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #113521 <https://github.com/rust-lang/rust/issues/113521> for more information\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/platform/platform_bus.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved imports `crate::sync::Arc`, `crate::sync::Mutex`\n  --> r4l/src/platform/platform_bus.rs:10:19\n   |\n10 | use crate::sync::{Arc, Mutex};\n   |                   ^^^  ^^^^^ no `Mutex` in `sync`\n   |                   |\n   |                   no `Arc` in `sync`\n   |\n   = help: consider importing this struct instead:\n           alloc::sync::Arc\n\n",
              "error[E0432]: unresolved imports `crate::sync::Arc`, `crate::sync::Mutex`\n  --> r4l/src/platform/platform_bus.rs:10:19\n   |\n10 | use crate::sync::{Arc, Mutex};\n   |                   ^^^  ^^^^^ no `Mutex` in `sync`\n   |                   |\n   |                   no `Arc` in `sync`\n   |\n   = help: consider importing this struct instead:\n           alloc::sync::Arc\n\n"
            ],
            "Mirai": [
              "error[E0432]: unresolved imports `crate::sync::Arc`, `crate::sync::Mutex`\n  --> r4l/src/platform/platform_bus.rs:10:19\n   |\n10 | use crate::sync::{Arc, Mutex};\n   |                   ^^^  ^^^^^ no `Mutex` in `sync`\n   |                   |\n   |                   no `Arc` in `sync`\n   |\n   = help: consider importing this struct instead:\n           alloc::sync::Arc\n\n",
              "error[E0432]: unresolved imports `crate::sync::Arc`, `crate::sync::Mutex`\n  --> r4l/src/platform/platform_bus.rs:10:19\n   |\n10 | use crate::sync::{Arc, Mutex};\n   |                   ^^^  ^^^^^ no `Mutex` in `sync`\n   |                   |\n   |                   no `Arc` in `sync`\n   |\n   = help: consider importing this struct instead:\n           alloc::sync::Arc\n\n"
            ]
          }
        },
        {
          "file": "src/of/mod.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/of/mod.rs (original lines from 4 to 4)\n-mod platform;\n",
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/of/mod.rs (original lines from 6 to 6)\n+mod platform;\n",
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/of/mod.rs (original lines from 8 to 8)\n-pub use platform::*;\n",
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/of/mod.rs (original lines from 10 to 10)\n+pub use platform::*;\n"
            ]
          }
        },
        {
          "file": "src/init.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/init.rs (original lines from 5 to 5)\n-\n",
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/init.rs (original lines from 36 to 36)\n-        crate::pr_info!(\"Function at address {:p} returned: {}\",current_addr,result);\n+        crate::pr_info!(\n+            \"Function at address {:p} returned: {}\",\n+            current_addr,\n+            result\n+        );\n",
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/init.rs (original lines from 45 to 51)\n-    initcall(InitcallAddrPair(_initcall1 as *const u8, _initcall1_end as *const u8));\n-    initcall(InitcallAddrPair(_initcall2 as *const u8, _initcall2_end as *const u8));\n-    initcall(InitcallAddrPair(_initcall3 as *const u8, _initcall3_end as *const u8));\n-    initcall(InitcallAddrPair(_initcall4 as *const u8, _initcall4_end as *const u8));\n-    initcall(InitcallAddrPair(_initcall5 as *const u8, _initcall5_end as *const u8));\n-    initcall(InitcallAddrPair(_initcall6 as *const u8, _initcall6_end as *const u8));\n-    initcall(InitcallAddrPair(_initcall7 as *const u8, _initcall7_end as *const u8));\n+    initcall(InitcallAddrPair(\n+        _initcall1 as *const u8,\n+        _initcall1_end as *const u8,\n+    ));\n+    initcall(InitcallAddrPair(\n+        _initcall2 as *const u8,\n+        _initcall2_end as *const u8,\n+    ));\n+    initcall(InitcallAddrPair(\n+        _initcall3 as *const u8,\n+        _initcall3_end as *const u8,\n+    ));\n+    initcall(InitcallAddrPair(\n+        _initcall4 as *const u8,\n+        _initcall4_end as *const u8,\n+    ));\n+    initcall(InitcallAddrPair(\n+        _initcall5 as *const u8,\n+        _initcall5_end as *const u8,\n+    ));\n+    initcall(InitcallAddrPair(\n+        _initcall6 as *const u8,\n+        _initcall6_end as *const u8,\n+    ));\n+    initcall(InitcallAddrPair(\n+        _initcall7 as *const u8,\n+        _initcall7_end as *const u8,\n+    ));\n"
            ]
          }
        },
        {
          "file": "src/str.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/str.rs (original lines from 28 to 28)\n+    use crate::prelude::Error;\n",
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/str.rs (original lines from 30 to 30)\n-    use crate::prelude::Error;\n",
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/str.rs (original lines from 35 to 35)\n-            Ok(Self(alloc::format!(\"{}\",args)))\n+            Ok(Self(alloc::format!(\"{}\", args)))\n"
            ]
          }
        },
        {
          "file": "r4l/src/device.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Mirai": [
              "warning: unused import: `crate::pr_info`\n --> r4l/src/device.rs:8:5\n  |\n8 | use crate::pr_info;\n  |     ^^^^^^^^^^^^^^\n\n"
            ],
            "Clippy(Warn)": [
              "warning: unused import: `crate::pr_info`\n --> r4l/src/device.rs:8:5\n  |\n8 | use crate::pr_info;\n  |     ^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/irq/os_api.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `os_irq_interface`\n  --> r4l/src/irq/os_api.rs:13:9\n   |\n13 | pub use os_irq_interface::*;\n   |         ^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `os_irq_interface`\n   |\n   = help: if you wanted to use a crate named `os_irq_interface`, use `cargo add os_irq_interface` to add it to your `Cargo.toml`\n\n"
            ],
            "Mirai": [
              "error[E0432]: unresolved import `os_irq_interface`\n  --> r4l/src/irq/os_api.rs:13:9\n   |\n13 | pub use os_irq_interface::*;\n   |         ^^^^^^^^^^^^^^^^ use of undeclared crate or module `os_irq_interface`\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/linked_list.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `list`\n  --> r4l/src/linked_list.rs:11:9\n   |\n11 | pub use list::*;\n   |         ^^^^ use of unresolved module or unlinked crate `list`\n   |\n   = help: if you wanted to use a crate named `list`, use `cargo add list` to add it to your `Cargo.toml`\n\n"
            ],
            "Mirai": [
              "error[E0432]: unresolved import `list`\n  --> r4l/src/linked_list.rs:11:9\n   |\n11 | pub use list::*;\n   |         ^^^^ use of undeclared crate or module `list`\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/prelude.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Mirai": [
              "error[E0432]: unresolved import `super::str::CStr`\n  --> r4l/src/prelude.rs:19:17\n   |\n19 | pub use super::{str::CStr, ThisModule};\n   |                 ^^^^^^^^^ no `CStr` in `str`\n   |\n   = help: consider importing this struct instead:\n           core::ffi::CStr\n\n"
            ],
            "Clippy(Error)": [
              "error[E0432]: unresolved import `super::str::CStr`\n  --> r4l/src/prelude.rs:19:17\n   |\n19 | pub use super::{str::CStr, ThisModule};\n   |                 ^^^^^^^^^ no `CStr` in `str`\n   |\n   = help: consider importing this struct instead:\n           core::ffi::CStr\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/str.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `str`\n  --> r4l/src/str.rs:40:9\n   |\n40 | pub use str::*;\n   |         ^^^ help: a similar path exists: `crate::str`\n   |\n   = note: `use` statements changed in Rust 2018; read more at <https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html>\n\n"
            ],
            "Mirai": [
              "error[E0432]: unresolved import `str`\n  --> r4l/src/str.rs:40:9\n   |\n40 | pub use str::*;\n   |         ^^^ help: a similar path exists: `crate::str`\n   |\n   = note: `use` statements changed in Rust 2018; read more at <https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html>\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/sync.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `sync`\n  --> r4l/src/sync.rs:15:9\n   |\n15 | pub use sync::*;\n   |         ^^^^ help: a similar path exists: `crate::sync`\n   |\n   = note: `use` statements changed in Rust 2018; read more at <https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html>\n\n"
            ],
            "Mirai": [
              "error[E0432]: unresolved import `sync`\n  --> r4l/src/sync.rs:15:9\n   |\n15 | pub use sync::*;\n   |         ^^^^ help: a similar path exists: `crate::sync`\n   |\n   = note: `use` statements changed in Rust 2018; read more at <https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html>\n\n"
            ]
          }
        },
        {
          "file": "src/lib.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/lib.rs (original lines from 24 to 24)\n+pub mod irq;\n",
              "file: /home/runner/check/batch_4/kern-crates/r4l/r4l/src/lib.rs (original lines from 32 to 32)\n-pub mod irq;\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_4/kern-crates/r4l/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   ├── axhal 0.1.0\n│   │   ├── r4l 0.1.0\n│   │   │   ├── r4l_platform_sample 0.1.0\n│   │   │   ├── r4l_minimal_sample 0.1.0\n│   │   │   └── ax88796b 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   ├── r4l 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       └── r4l 0.1.0\n│   │   └── axsync 0.1.0\n│   └── axhal 0.1.0\n│       ├── axtask 0.1.0\n│       │   └── axsignal 0.1.0\n│       │       └── axtask 0.1.0\n│       └── axsignal 0.1.0\n└── riscv 0.12.1\n    ├── page_table_multiarch 0.5.3\n    │   └── axhal 0.1.0\n    └── axhal 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 772,\n    \"last-commit\": \"4584ad9a5ea16ce196317cf4d3593e974fb4a8a1\",\n    \"last-updated\": \"2025-05-02T10:23:27+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 159\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=r4l, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/kern-crates/r4l/r4l\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-05-04 11:01:09.582636502 +08:00:00\n    Checking spin v0.9.8\n   Compiling syn v2.0.101\n    Checking lazy_static v1.5.0\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling darling_core v0.20.11\n   Compiling darling_macro v0.20.11\n   Compiling darling v0.20.11\n   Compiling derive_builder_core v0.20.2\n   Compiling derive_builder_macro v0.20.2\n    Checking derive_builder v0.20.2\n    Checking r4l v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/r4l)\nerror: could not compile `r4l` (lib) due to 25 previous errors; 11 warnings emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=r4l, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/kern-crates/r4l/r4l\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 11:03:43.320092611 +08:00:00\n   Compiling syn v2.0.101\n   Compiling spin v0.9.8\nwarning: struct `Generics` is never constructed\n   --> macros/src/helpers.rs:109:19\n    |\n109 | pub(crate) struct Generics {\n    |                   ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\nwarning: function `parse_generics` is never used\n   --> macros/src/helpers.rs:128:15\n    |\n128 | pub(crate) fn parse_generics(input: TokenStream) -> (Generics, Vec<TokenTree>) {\n    |               ^^^^^^^^^^^^^^\n\nwarning: `r4l-macros` (lib) generated 2 warnings\n   Compiling lazy_static v1.5.0\n   Compiling of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling darling_core v0.20.11\n   Compiling darling_macro v0.20.11\n   Compiling darling v0.20.11\n   Compiling derive_builder_core v0.20.2\n   Compiling derive_builder_macro v0.20.2\n   Compiling derive_builder v0.20.2\n   Compiling r4l v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/r4l)\nerror[E0432]: unresolved import `crate::c_str`\n --> r4l/src/driver/driver.rs:6:13\n  |\n6 | use crate::{c_str, sync::Arc};\n  |             ^^^^^ no `c_str` in the root\n  |\n  = help: consider importing one of these modules instead:\n          core::ffi::c_str\n          alloc::ffi::c_str\n\nerror[E0432]: unresolved import `self::error`\n  --> r4l/src/error.rs:77:15\n   |\n77 | pub use self::error::code;\n   |               ^^^^^ could not find `error` in `self`\n   |\nnote: found an item that was configured out\n  --> r4l/src/error.rs:9:5\n   |\n9  | mod error {\n   |     ^^^^^\nnote: the item is gated behind the `starry` feature\n  --> r4l/src/error.rs:8:7\n   |\n8  | #[cfg(feature = \"starry\")]\n   |       ^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `self::error`\n  --> r4l/src/error.rs:78:15\n   |\n78 | pub use self::error::Error;\n   |               ^^^^^ could not find `error` in `self`\n   |\nnote: found an item that was configured out\n  --> r4l/src/error.rs:9:5\n   |\n9  | mod error {\n   |     ^^^^^\nnote: the item is gated behind the `starry` feature\n  --> r4l/src/error.rs:8:7\n   |\n8  | #[cfg(feature = \"starry\")]\n   |       ^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `list`\n  --> r4l/src/linked_list.rs:11:9\n   |\n11 | pub use list::*;\n   |         ^^^^ use of unresolved module or unlinked crate `list`\n   |\n   = help: if you wanted to use a crate named `list`, use `cargo add list` to add it to your `Cargo.toml`\n\nerror[E0432]: unresolved import `str`\n  --> r4l/src/str.rs:40:9\n   |\n40 | pub use str::*;\n   |         ^^^ help: a similar path exists: `crate::str`\n   |\n   = note: `use` statements changed in Rust 2018; read more at <https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html>\n\nerror[E0432]: unresolved import `sync`\n  --> r4l/src/sync.rs:15:9\n   |\n15 | pub use sync::*;\n   |         ^^^^ help: a similar path exists: `crate::sync`\n   |\n   = note: `use` statements changed in Rust 2018; read more at <https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html>\n\nerror[E0432]: unresolved import `os_irq_interface`\n  --> r4l/src/irq/os_api.rs:13:9\n   |\n13 | pub use os_irq_interface::*;\n   |         ^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `os_irq_interface`\n   |\n   = help: if you wanted to use a crate named `os_irq_interface`, use `cargo add os_irq_interface` to add it to your `Cargo.toml`\n\nerror[E0432]: unresolved import `crate::sync::Arc`\n --> r4l/src/bus.rs:7:5\n  |\n7 | use crate::sync::Arc;\n  |     ^^^^^^^^^^^^^^^^ no `Arc` in `sync`\n  |\nhelp: consider importing this struct instead\n  |\n7 | use alloc::sync::Arc;\n  |     ~~~~~~~~~~~~~~~~\n\nerror[E0432]: unresolved import `crate::sync::Arc`\n --> r4l/src/driver/driver.rs:6:20\n  |\n6 | use crate::{c_str, sync::Arc};\n  |                    ^^^^^^^^^ no `Arc` in `sync`\n  |\n  = help: consider importing this struct instead:\n          alloc::sync::Arc\n\nerror[E0432]: unresolved import `crate::sync::Arc`\n --> r4l/src/of/platform.rs:7:5\n  |\n7 | use crate::sync::Arc;\n  |     ^^^^^^^^^^^^^^^^ no `Arc` in `sync`\n  |\nhelp: consider importing this struct instead\n  |\n7 | use alloc::sync::Arc;\n  |     ~~~~~~~~~~~~~~~~\n\nerror[E0432]: unresolved import `crate::sync::Mutex`\n --> r4l/src/of/platform.rs:8:5\n  |\n8 | use crate::sync::Mutex;\n  |     ^^^^^^^^^^^^^^^^^^ no `Mutex` in `sync`\n\nerror[E0432]: unresolved imports `crate::sync::Arc`, `crate::sync::Mutex`\n  --> r4l/src/platform/platform_bus.rs:10:19\n   |\n10 | use crate::sync::{Arc, Mutex};\n   |                   ^^^  ^^^^^ no `Mutex` in `sync`\n   |                   |\n   |                   no `Arc` in `sync`\n   |\n   = help: consider importing this struct instead:\n           alloc::sync::Arc\n\nerror[E0432]: unresolved imports `crate::sync::Arc`, `crate::sync::Mutex`\n --> r4l/src/platform/platform_drv.rs:6:5\n  |\n6 |     sync::Arc, sync::Mutex,\n  |     ^^^^^^^^^  ^^^^^^^^^^^ no `Mutex` in `sync`\n  |     |\n  |     no `Arc` in `sync`\n  |\n  = help: consider importing this struct instead:\n          alloc::sync::Arc\n\nerror[E0432]: unresolved import `super::str::CStr`\n  --> r4l/src/prelude.rs:19:17\n   |\n19 | pub use super::{str::CStr, ThisModule};\n   |                 ^^^^^^^^^ no `CStr` in `str`\n   |\n   = help: consider importing this struct instead:\n           core::ffi::CStr\n\nerror[E0432]: unresolved import `crate::str::CString`\n  --> r4l/src/irq/mod.rs:18:5\n   |\n18 |     str::CString,\n   |     ^^^^^^^^^^^^ no `CString` in `str`\n   |\n   = help: consider importing this struct instead:\n           alloc::ffi::CString\n\nerror[E0432]: unresolved import `crate::sync::Mutex`\n  --> r4l/src/irq/mod.rs:22:5\n   |\n22 | use crate::sync::Mutex;\n   |     ^^^^^^^^^^^^^^^^^^ no `Mutex` in `sync`\n\nerror[E0433]: failed to resolve: could not find `log_print` in the crate root\n   --> r4l/src/print.rs:228:17\n    |\n228 |           $crate::log_print!($crate::print::LogLevel::Info, $($arg)*)\n    |                   ^^^^^^^^^ could not find `log_print` in the crate root\n    |\n   ::: r4l/src/init.rs:25:5\n    |\n25  | /     crate::pr_info!(\n26  | |         \"enter driver_framework_init start_Addr {:p}  end_Addr{:p}\",\n27  | |         start_addr,\n28  | |         end_addr\n29  | |     );\n    | |_____- in this macro invocation\n    |\n    = note: this error originates in the macro `crate::pr_info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0433]: failed to resolve: could not find `log_print` in the crate root\n   --> r4l/src/print.rs:228:17\n    |\n228 |         $crate::log_print!($crate::print::LogLevel::Info, $($arg)*)\n    |                 ^^^^^^^^^ could not find `log_print` in the crate root\n    |\n   ::: r4l/src/init.rs:36:9\n    |\n36  |         crate::pr_info!(\"Function at address {:p} returned: {}\",current_addr,result);\n    |         ---------------------------------------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `crate::pr_info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0433]: failed to resolve: could not find `log_print` in the crate root\n   --> r4l/src/print.rs:228:17\n    |\n228 |         $crate::log_print!($crate::print::LogLevel::Info, $($arg)*)\n    |                 ^^^^^^^^^ could not find `log_print` in the crate root\n    |\n   ::: r4l/src/of/platform.rs:26:9\n    |\n26  |         crate::pr_info!(\"bus node: {:?} \", i.compatible().unwrap().first());\n    |         ------------------------------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `crate::pr_info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0433]: failed to resolve: could not find `log_print` in the crate root\n   --> r4l/src/print.rs:228:17\n    |\n228 |         $crate::log_print!($crate::print::LogLevel::Info, $($arg)*)\n    |                 ^^^^^^^^^ could not find `log_print` in the crate root\n    |\n   ::: r4l/src/of/platform.rs:31:21\n    |\n31  |                     crate::pr_info!(\"create platform {:?} child device {}\", i.first(), c.first())\n    |                     ----------------------------------------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `crate::pr_info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0433]: failed to resolve: could not find `log_print` in the crate root\n   --> r4l/src/print.rs:228:17\n    |\n228 |         $crate::log_print!($crate::print::LogLevel::Info, $($arg)*)\n    |                 ^^^^^^^^^ could not find `log_print` in the crate root\n    |\n   ::: r4l/src/of/platform.rs:34:21\n    |\n34  |                     crate::pr_info!(\"create platform {:?} child device none\", i.first())\n    |                     -------------------------------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `crate::pr_info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0433]: failed to resolve: could not find `log_print` in the crate root\n   --> r4l/src/print.rs:254:17\n    |\n254 |         $crate::log_print!($crate::print::LogLevel::Debug, $($arg)*)\n    |                 ^^^^^^^^^ could not find `log_print` in the crate root\n    |\n   ::: r4l/src/of/irq.rs:19:9\n    |\n19  |         pr_debug!(\"irq {} parent intsize={}\\n\",parent.compatible().unwrap().first(), intsize);\n    |         ------------------------------------------------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `pr_debug` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0433]: failed to resolve: could not find `log_print` in the crate root\n   --> r4l/src/print.rs:254:17\n    |\n254 |         $crate::log_print!($crate::print::LogLevel::Debug, $($arg)*)\n    |                 ^^^^^^^^^ could not find `log_print` in the crate root\n    |\n   ::: r4l/src/of/irq.rs:26:9\n    |\n26  |         pr_debug!(\" intspec={:?}\\n\", res.args);\n    |         -------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `pr_debug` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0433]: failed to resolve: could not find `log_print` in the crate root\n   --> r4l/src/print.rs:228:17\n    |\n228 |         $crate::log_print!($crate::print::LogLevel::Info, $($arg)*)\n    |                 ^^^^^^^^^ could not find `log_print` in the crate root\n    |\n   ::: r4l/src/platform/platform_bus.rs:45:29\n    |\n45  | ...                   pr_info!(\"driver : {} device matched\", id);\n    |                       ------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `pr_info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\n --> r4l/src/lib.rs:9:12\n  |\n9 | #![feature(generic_const_exprs)]\n  |            ^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\n  = note: `#[warn(incomplete_features)]` on by default\n\nwarning: the feature `generic_const_items` is incomplete and may not be safe to use and/or cause compiler crashes\n  --> r4l/src/lib.rs:10:12\n   |\n10 | #![feature(generic_const_items)]\n   |            ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #113521 <https://github.com/rust-lang/rust/issues/113521> for more information\n\nwarning: unused import: `core::ops::Deref`\n --> r4l/src/bus.rs:8:5\n  |\n8 | use core::ops::Deref;\n  |     ^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `crate::pr_info`\n --> r4l/src/device.rs:8:5\n  |\n8 | use crate::pr_info;\n  |     ^^^^^^^^^^^^^^\n\nwarning: unused import: `super::DeviceId`\n --> r4l/src/of/platform.rs:3:5\n  |\n3 | use super::DeviceId;\n  |     ^^^^^^^^^^^^^^^\n\nwarning: unused import: `crate::pr_debug`\n --> r4l/src/of/platform.rs:6:5\n  |\n6 | use crate::pr_debug;\n  |     ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `module_platform_device`\n   --> r4l/src/platform/platform_drv.rs:136:14\n    |\n136 | macro_rules! module_platform_device {\n    |              ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused import: `os_api::*`\n  --> r4l/src/irq/mod.rs:14:9\n   |\n14 | pub use os_api::*;\n   |         ^^^^^^^^^\n\nerror[E0599]: no function or associated item named `handler` found for struct `irq::Registration` in the current scope\n   --> r4l/src/irq/mod.rs:126:58\n    |\n100 | pub struct Registration(InternalRegistration);\n    | ----------------------- function or associated item `handler` not found for this struct\n...\n126 |         Ok(Self(InternalRegistration::try_new(irq, Self::handler::<H>, None, flags, name)?))\n    |                                                          ^^^^^^^ function or associated item not found in `Registration`\n\nwarning: unused variable: `pdev`\n   --> r4l/src/platform/platform_drv.rs:115:20\n    |\n115 |     fn get_id_info(pdev: &PlatformDevice) -> Option<&'static T::IdInfo> {\n    |                    ^^^^ help: if this is intentional, prefix it with an underscore: `_pdev`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\nSome errors have detailed explanations: E0432, E0433, E0599.\nFor more information about an error, try `rustc --explain E0432`.\nwarning: `r4l` (lib) generated 10 warnings\nerror: could not compile `r4l` (lib) due to 25 previous errors; 10 warnings emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=r4l, checker=Mirai\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/kern-crates/r4l/r4l\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 11:03:15.917867725 +08:00:00\n    Checking spin v0.9.8\n   Compiling syn v2.0.101\n    Checking lazy_static v1.5.0\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling darling_core v0.20.11\n   Compiling darling_macro v0.20.11\n   Compiling darling v0.20.11\n   Compiling derive_builder_core v0.20.2\n   Compiling derive_builder_macro v0.20.2\n    Checking derive_builder v0.20.2\n    Checking r4l v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/r4l)\nerror: could not compile `r4l` (lib) due to 25 previous errors; 10 warnings emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=r4l, checker=Rapx\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/kern-crates/r4l/r4l\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 11:03:53.379055588 +08:00:00\n    Updating crates.io index\nerror: failed to get `taskctx` as a dependency of package `axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#8bed6725)`\n    ... which satisfies git dependency `axhal` (locked to 0.1.0) of package `r4l v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/r4l)`\n    ... which satisfies path dependency `kernel` (locked to 0.1.0) of package `ax88796b v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/drivers/net/phy/ax88796b)`\n\nCaused by:\n  failed to load source for dependency `taskctx`\n\nCaused by:\n  Unable to update https://github.com/Starry-OS/taskctx.git#bee485a8\n\nCaused by:\n  failed to parse manifest at `/home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/bee485a/Cargo.toml`\n\nCaused by:\n  feature `edition2024` is required\n\n  The package requires the Cargo feature called `edition2024`, but that feature is not stabilized in this version of Cargo (1.83.0-nightly (15fbd2f60 2024-10-08)).\n  Consider trying a more recent nightly release.\n  See https://doc.rust-lang.org/nightly/cargo/reference/unstable.html#edition-2024 for more information about the status of this feature.\n03:03:53|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=r4l, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/kern-crates/r4l/r4l\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 11:01:42.273748059 +08:00:00\n    Building r4l v0.1.0 (current)\nerror: running cargo-doc on crate 'r4l' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.3\n   Compiling toml_datetime v0.6.9\n   Compiling winnow v0.7.9\n   Compiling toml_write v0.1.1\n    Checking bit_field v0.10.2\n   Compiling strsim v0.11.1\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.101\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n    Checking log v0.4.21\n   Compiling serde v1.0.219\n    Checking raw-cpuid v10.7.0\n   Compiling utf8parse v0.2.2\n   Compiling rustversion v1.0.20\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.26\n   Compiling anstyle-parse v0.2.6\n   Compiling anstyle-query v1.1.2\n   Compiling anstyle v1.0.10\n   Compiling autocfg v1.4.0\n   Compiling is_terminal_polyfill v1.70.1\n   Compiling heck v0.5.0\n   Compiling colorchoice v1.0.3\n   Compiling anstream v0.6.18\n   Compiling lock_api v0.4.12\n    Checking bitflags v2.9.0\n   Compiling clap_lex v0.7.4\n   Compiling clap_builder v4.5.37\n    Checking volatile v0.4.6\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking spin v0.9.8\n    Checking static_assertions v1.1.0\n   Compiling libc v0.2.172\n    Checking x86_64 v0.15.2\n   Compiling clap_derive v4.5.32\n   Compiling crate_interface v0.1.4\n   Compiling paste v1.0.15\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking kernel_guard v0.1.2\n   Compiling svgbobdoc v0.3.0\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking const-default v1.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling linkme-impl v0.3.32\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking rlsf v0.2.1\n    Checking kspin v0.1.0\n    Checking x86_64 v0.14.13\n    Checking bitmap-allocator v0.2.0\n   Compiling clap v4.5.37\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling axconfig-gen v0.1.0\n    Checking bit v0.1.1\n   Compiling percpu v0.2.0\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking page_table_entry v0.5.3\n   Compiling percpu_macros v0.2.0\n   Compiling axconfig-gen-macros v0.1.0\n    Checking x2apic v0.4.3\n    Checking raw-cpuid v11.5.0\n   Compiling unicode-segmentation v1.12.0\n   Compiling fnv v1.0.7\n   Compiling ident_case v1.0.1\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling darling_core v0.20.11\n   Compiling convert_case v0.7.1\n    Checking linkme v0.3.32\n    Checking page_table_multiarch v0.5.3\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking bitmaps v3.2.1\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking handler_table v0.1.2\n    Checking int_ratio v0.1.1\n    Checking tock-registers v0.8.1\n   Compiling unicode-xid v0.2.6\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazyinit v0.2.1\n   Compiling derive_more-impl v2.0.1\n    Checking cpumask v0.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#8bed6725)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking timer_list v0.1.0\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git#7352c083)\n    Checking axtask v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n   Compiling strum_macros v0.27.1\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking linux-raw-sys v0.9.4\n   Compiling darling_macro v0.20.11\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling darling v0.20.11\n   Compiling derive_builder_core v0.20.2\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling r4l-macros v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/macros)\nwarning: struct `Generics` is never constructed\n   --> /home/runner/check/batch_4/kern-crates/r4l/macros/src/helpers.rs:109:19\n    |\n109 | pub(crate) struct Generics {\n    |                   ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\nwarning: function `parse_generics` is never used\n   --> /home/runner/check/batch_4/kern-crates/r4l/macros/src/helpers.rs:128:15\n    |\n128 | pub(crate) fn parse_generics(input: TokenStream) -> (Generics, Vec<TokenTree>) {\n    |               ^^^^^^^^^^^^^^\n\nwarning: `r4l-macros` (lib) generated 2 warnings\n   Compiling derive_builder_macro v0.20.2\n    Checking derive_builder v0.20.2\n    Checking derive_more v2.0.1\n    Checking axtask v0.1.0 (https://github.com/Starry-OS/axtask.git#d41e0730)\n    Checking axsync v0.1.0 (https://github.com/Starry-OS/axsync.git#70651a7c)\n Documenting r4l v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/r4l)\nerror[E0432]: unresolved import `axhal::irq`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/os_api.rs:5:16\n   |\n5  |     use axhal::irq::register_handler;\n   |                ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0433]: failed to resolve: could not find `irq` in `axhal`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/os_api.rs:7:34\n   |\n7  |     pub type IrqHandler = axhal::irq::IrqHandler;\n   |                                  ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\nhelp: consider importing this module\n   |\n5  +     use crate::irq;\n   |\nhelp: if you import `irq`, refer to it directly\n   |\n7  -     pub type IrqHandler = axhal::irq::IrqHandler;\n7  +     pub type IrqHandler = irq::IrqHandler;\n   |\n\nSome errors have detailed explanations: E0432, E0433.\nFor more information about an error, try `rustc --explain E0432`.\nerror: could not document `r4l`\n\n-----\n\nerror: failed to build rustdoc for crate r4l v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/kern-crates/r4l/r4l --features axerrno,axhal,axlog,axsync,axtask,linked_list,rust_os,starry &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate r4l v0.1.0\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=r4l, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_4/kern-crates/r4l/r4l\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-05-04 11:02:07.806351712 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building r4l v0.1.0 (current)\nerror: running cargo-doc on crate 'r4l' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.3\n   Compiling toml_datetime v0.6.9\n   Compiling winnow v0.7.9\n   Compiling toml_write v0.1.1\n    Checking bit_field v0.10.2\n   Compiling strsim v0.11.1\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.101\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n    Checking log v0.4.21\n   Compiling serde v1.0.219\n    Checking raw-cpuid v10.7.0\n   Compiling utf8parse v0.2.2\n   Compiling rustversion v1.0.20\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.26\n   Compiling anstyle-parse v0.2.6\n   Compiling anstyle-query v1.1.2\n   Compiling anstyle v1.0.10\n   Compiling autocfg v1.4.0\n   Compiling is_terminal_polyfill v1.70.1\n   Compiling heck v0.5.0\n   Compiling colorchoice v1.0.3\n   Compiling anstream v0.6.18\n   Compiling lock_api v0.4.12\n    Checking bitflags v2.9.0\n   Compiling clap_lex v0.7.4\n   Compiling clap_builder v4.5.37\n    Checking volatile v0.4.6\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking spin v0.9.8\n    Checking static_assertions v1.1.0\n   Compiling libc v0.2.172\n    Checking x86_64 v0.15.2\n   Compiling clap_derive v4.5.32\n   Compiling crate_interface v0.1.4\n   Compiling paste v1.0.15\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking kernel_guard v0.1.2\n   Compiling svgbobdoc v0.3.0\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking const-default v1.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling linkme-impl v0.3.32\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking rlsf v0.2.1\n    Checking kspin v0.1.0\n    Checking x86_64 v0.14.13\n    Checking bitmap-allocator v0.2.0\n   Compiling clap v4.5.37\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling axconfig-gen v0.1.0\n    Checking bit v0.1.1\n   Compiling percpu v0.2.0\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking page_table_entry v0.5.3\n   Compiling percpu_macros v0.2.0\n   Compiling axconfig-gen-macros v0.1.0\n    Checking x2apic v0.4.3\n    Checking raw-cpuid v11.5.0\n   Compiling unicode-segmentation v1.12.0\n   Compiling fnv v1.0.7\n   Compiling ident_case v1.0.1\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling darling_core v0.20.11\n   Compiling convert_case v0.7.1\n    Checking linkme v0.3.32\n    Checking page_table_multiarch v0.5.3\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking bitmaps v3.2.1\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking handler_table v0.1.2\n    Checking int_ratio v0.1.1\n    Checking tock-registers v0.8.1\n   Compiling unicode-xid v0.2.6\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazyinit v0.2.1\n   Compiling derive_more-impl v2.0.1\n    Checking cpumask v0.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#8bed6725)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking timer_list v0.1.0\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git#7352c083)\n    Checking axtask v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n   Compiling strum_macros v0.27.1\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking linux-raw-sys v0.9.4\n   Compiling darling_macro v0.20.11\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling darling v0.20.11\n   Compiling derive_builder_core v0.20.2\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling r4l-macros v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/macros)\nwarning: struct `Generics` is never constructed\n   --> /home/runner/check/batch_4/kern-crates/r4l/macros/src/helpers.rs:109:19\n    |\n109 | pub(crate) struct Generics {\n    |                   ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\nwarning: function `parse_generics` is never used\n   --> /home/runner/check/batch_4/kern-crates/r4l/macros/src/helpers.rs:128:15\n    |\n128 | pub(crate) fn parse_generics(input: TokenStream) -> (Generics, Vec<TokenTree>) {\n    |               ^^^^^^^^^^^^^^\n\nwarning: `r4l-macros` (lib) generated 2 warnings\n   Compiling derive_builder_macro v0.20.2\n    Checking derive_builder v0.20.2\n    Checking derive_more v2.0.1\n    Checking axtask v0.1.0 (https://github.com/Starry-OS/axtask.git#d41e0730)\n    Checking axsync v0.1.0 (https://github.com/Starry-OS/axsync.git#70651a7c)\n Documenting r4l v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/r4l)\nerror[E0432]: unresolved import `axhal::irq`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/os_api.rs:5:16\n   |\n5  |     use axhal::irq::register_handler;\n   |                ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0433]: failed to resolve: could not find `irq` in `axhal`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/os_api.rs:7:34\n   |\n7  |     pub type IrqHandler = axhal::irq::IrqHandler;\n   |                                  ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\nhelp: consider importing this module\n   |\n5  +     use crate::irq;\n   |\nhelp: if you import `irq`, refer to it directly\n   |\n7  -     pub type IrqHandler = axhal::irq::IrqHandler;\n7  +     pub type IrqHandler = irq::IrqHandler;\n   |\n\nSome errors have detailed explanations: E0432, E0433.\nFor more information about an error, try `rustc --explain E0432`.\nerror: could not document `r4l`\n\n-----\n\nerror: failed to build rustdoc for crate r4l v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/kern-crates/r4l/r4l --features axerrno,axhal,axlog,axsync,axtask,linked_list,rust_os,starry &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate r4l v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "kern-crates",
      "repo": "r4l",
      "pkg": "ax88796b",
      "count": 52,
      "raw_reports": [
        {
          "file": "r4l/src/platform/platform_drv.rs",
          "features": "",
          "count": 16,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\n",
              "warning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\n",
              "warning: unused macro definition: `module_platform_device`\n   --> r4l/src/platform/platform_drv.rs:136:14\n    |\n136 | macro_rules! module_platform_device {\n    |              ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\n",
              "warning: unused variable: `this`\n  --> r4l/src/platform/platform_drv.rs:40:17\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                 ^^^^ help: if this is intentional, prefix it with an underscore: `_this`\n\n",
              "warning: unused variable: `name`\n  --> r4l/src/platform/platform_drv.rs:40:34\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                  ^^^^ help: if this is intentional, prefix it with an underscore: `_name`\n\n",
              "warning: unused variable: `module`\n  --> r4l/src/platform/platform_drv.rs:40:55\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                                       ^^^^^^ help: if this is intentional, prefix it with an underscore: `_module`\n\n",
              "warning: unused variable: `pdrv`\n   --> r4l/src/platform/platform_drv.rs:111:19\n    |\n111 |     fn unregister(pdrv: &mut Self::RegType) {}\n    |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_pdrv`\n\n",
              "warning: unused variable: `pdev`\n   --> r4l/src/platform/platform_drv.rs:115:20\n    |\n115 |     fn get_id_info(pdev: &PlatformDevice) -> Option<&'static T::IdInfo> {\n    |                    ^^^^ help: if this is intentional, prefix it with an underscore: `_pdev`\n\n"
            ],
            "Mirai": [
              "warning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\n",
              "warning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\n",
              "warning: unused macro definition: `module_platform_device`\n   --> r4l/src/platform/platform_drv.rs:136:14\n    |\n136 | macro_rules! module_platform_device {\n    |              ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\n",
              "warning: unused variable: `this`\n  --> r4l/src/platform/platform_drv.rs:40:17\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                 ^^^^ help: if this is intentional, prefix it with an underscore: `_this`\n\n",
              "warning: unused variable: `name`\n  --> r4l/src/platform/platform_drv.rs:40:34\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                  ^^^^ help: if this is intentional, prefix it with an underscore: `_name`\n\n",
              "warning: unused variable: `module`\n  --> r4l/src/platform/platform_drv.rs:40:55\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                                       ^^^^^^ help: if this is intentional, prefix it with an underscore: `_module`\n\n",
              "warning: unused variable: `pdrv`\n   --> r4l/src/platform/platform_drv.rs:111:19\n    |\n111 |     fn unregister(pdrv: &mut Self::RegType) {}\n    |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_pdrv`\n\n",
              "warning: unused variable: `pdev`\n   --> r4l/src/platform/platform_drv.rs:115:20\n    |\n115 |     fn get_id_info(pdev: &PlatformDevice) -> Option<&'static T::IdInfo> {\n    |                    ^^^^ help: if this is intentional, prefix it with an underscore: `_pdev`\n\n"
            ]
          }
        },
        {
          "file": "macros/src/helpers.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Warn)": [
              "warning: struct `Generics` is never constructed\n   --> macros/src/helpers.rs:109:19\n    |\n109 | pub(crate) struct Generics {\n    |                   ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: function `parse_generics` is never used\n   --> macros/src/helpers.rs:128:15\n    |\n128 | pub(crate) fn parse_generics(input: TokenStream) -> (Generics, Vec<TokenTree>) {\n    |               ^^^^^^^^^^^^^^\n\n"
            ],
            "Mirai": [
              "warning: struct `Generics` is never constructed\n   --> macros/src/helpers.rs:109:19\n    |\n109 | pub(crate) struct Generics {\n    |                   ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: function `parse_generics` is never used\n   --> macros/src/helpers.rs:128:15\n    |\n128 | pub(crate) fn parse_generics(input: TokenStream) -> (Generics, Vec<TokenTree>) {\n    |               ^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/bus.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused import: `crate::sync::Arc`\n --> r4l/src/bus.rs:7:5\n  |\n7 | use crate::sync::Arc;\n  |     ^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n",
              "warning: unused import: `core::ops::Deref`\n --> r4l/src/bus.rs:8:5\n  |\n8 | use core::ops::Deref;\n  |     ^^^^^^^^^^^^^^^^\n\n"
            ],
            "Mirai": [
              "warning: unused import: `crate::sync::Arc`\n --> r4l/src/bus.rs:7:5\n  |\n7 | use crate::sync::Arc;\n  |     ^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n",
              "warning: unused import: `core::ops::Deref`\n --> r4l/src/bus.rs:8:5\n  |\n8 | use core::ops::Deref;\n  |     ^^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/irq/os_api.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Mirai": [
              "error[E0432]: unresolved import `axhal::irq`\n  --> r4l/src/irq/os_api.rs:5:16\n   |\n5  |     use axhal::irq::register_handler;\n   |                ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\n\n",
              "error[E0433]: failed to resolve: could not find `irq` in `axhal`\n  --> r4l/src/irq/os_api.rs:7:34\n   |\n7  |     pub type IrqHandler = axhal::irq::IrqHandler;\n   |                                  ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\nhelp: consider importing this module\n   |\n5  +     use crate::irq;\n   |\nhelp: if you import `irq`, refer to it directly\n   |\n7  -     pub type IrqHandler = axhal::irq::IrqHandler;\n7  +     pub type IrqHandler = irq::IrqHandler;\n   |\n\n"
            ],
            "Clippy(Error)": [
              "error[E0432]: unresolved import `axhal::irq`\n  --> r4l/src/irq/os_api.rs:5:16\n   |\n5  |     use axhal::irq::register_handler;\n   |                ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\n\n",
              "error[E0433]: failed to resolve: could not find `irq` in `axhal`\n  --> r4l/src/irq/os_api.rs:7:34\n   |\n7  |     pub type IrqHandler = axhal::irq::IrqHandler;\n   |                                  ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\nhelp: consider importing this module\n   |\n5  +     use crate::irq;\n   |\nhelp: if you import `irq`, refer to it directly\n   |\n7  -     pub type IrqHandler = axhal::irq::IrqHandler;\n7  +     pub type IrqHandler = irq::IrqHandler;\n   |\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/lib.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Mirai": [
              "warning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\n --> r4l/src/lib.rs:9:12\n  |\n9 | #![feature(generic_const_exprs)]\n  |            ^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\n  = note: `#[warn(incomplete_features)]` on by default\n\n",
              "warning: the feature `generic_const_items` is incomplete and may not be safe to use and/or cause compiler crashes\n  --> r4l/src/lib.rs:10:12\n   |\n10 | #![feature(generic_const_items)]\n   |            ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #113521 <https://github.com/rust-lang/rust/issues/113521> for more information\n\n"
            ],
            "Clippy(Warn)": [
              "warning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\n --> r4l/src/lib.rs:9:12\n  |\n9 | #![feature(generic_const_exprs)]\n  |            ^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\n  = note: `#[warn(incomplete_features)]` on by default\n\n",
              "warning: the feature `generic_const_items` is incomplete and may not be safe to use and/or cause compiler crashes\n  --> r4l/src/lib.rs:10:12\n   |\n10 | #![feature(generic_const_items)]\n   |            ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #113521 <https://github.com/rust-lang/rust/issues/113521> for more information\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/of/platform.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused import: `super::DeviceId`\n --> r4l/src/of/platform.rs:3:5\n  |\n3 | use super::DeviceId;\n  |     ^^^^^^^^^^^^^^^\n\n",
              "warning: unused import: `crate::pr_debug`\n --> r4l/src/of/platform.rs:6:5\n  |\n6 | use crate::pr_debug;\n  |     ^^^^^^^^^^^^^^^\n\n"
            ],
            "Mirai": [
              "warning: unused import: `super::DeviceId`\n --> r4l/src/of/platform.rs:3:5\n  |\n3 | use super::DeviceId;\n  |     ^^^^^^^^^^^^^^^\n\n",
              "warning: unused import: `crate::pr_debug`\n --> r4l/src/of/platform.rs:6:5\n  |\n6 | use crate::pr_debug;\n  |     ^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/device.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Mirai": [
              "warning: unused import: `crate::pr_info`\n --> r4l/src/device.rs:8:5\n  |\n8 | use crate::pr_info;\n  |     ^^^^^^^^^^^^^^\n\n"
            ],
            "Clippy(Warn)": [
              "warning: unused import: `crate::pr_info`\n --> r4l/src/device.rs:8:5\n  |\n8 | use crate::pr_info;\n  |     ^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/driver/driver.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Mirai": [
              "warning: unused import: `super::IdArray`\n --> r4l/src/driver/driver.rs:8:5\n  |\n8 | use super::IdArray;\n  |     ^^^^^^^^^^^^^^\n\n"
            ],
            "Clippy(Warn)": [
              "warning: unused import: `super::IdArray`\n --> r4l/src/driver/driver.rs:8:5\n  |\n8 | use super::IdArray;\n  |     ^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/init.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused variable: `e`\n  --> r4l/src/init.rs:14:16\n   |\n14 |     if let Err(e) = crate::of::of_platform_default_populate_init() {\n   |                ^ help: if this is intentional, prefix it with an underscore: `_e`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"
            ],
            "Mirai": [
              "warning: unused variable: `e`\n  --> r4l/src/init.rs:14:16\n   |\n14 |     if let Err(e) = crate::of::of_platform_default_populate_init() {\n   |                ^ help: if this is intentional, prefix it with an underscore: `_e`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/platform/platform_bus.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Mirai": [
              "warning: unreachable pattern\n  --> r4l/src/platform/platform_bus.rs:49:21\n   |\n43 |                     Compatible(id) => {\n   |                     -------------- matches all the relevant values\n...\n49 |                     _ => panic!(\"invalid id table\"),\n   |                     ^ no value can reach this\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\n"
            ],
            "Clippy(Warn)": [
              "warning: unreachable pattern\n  --> r4l/src/platform/platform_bus.rs:49:21\n   |\n43 |                     Compatible(id) => {\n   |                     -------------- matches all the relevant values\n...\n49 |                     _ => panic!(\"invalid id table\"),\n   |                     ^ no value can reach this\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_4/kern-crates/r4l/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   ├── axhal 0.1.0\n│   │   ├── r4l 0.1.0\n│   │   │   ├── r4l_platform_sample 0.1.0\n│   │   │   ├── r4l_minimal_sample 0.1.0\n│   │   │   └── ax88796b 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   ├── r4l 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       └── r4l 0.1.0\n│   │   └── axsync 0.1.0\n│   └── axhal 0.1.0\n│       ├── axtask 0.1.0\n│       │   └── axsignal 0.1.0\n│       │       └── axtask 0.1.0\n│       └── axsignal 0.1.0\n└── riscv 0.12.1\n    ├── page_table_multiarch 0.5.3\n    │   └── axhal 0.1.0\n    └── axhal 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 772,\n    \"last-commit\": \"4584ad9a5ea16ce196317cf4d3593e974fb4a8a1\",\n    \"last-updated\": \"2025-05-02T10:23:27+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 159\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ax88796b, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/kern-crates/r4l/drivers/net/phy/ax88796b\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-05-04 11:00:52.168900852 +08:00:00\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.3\n   Compiling winnow v0.7.9\n   Compiling toml_write v0.1.1\n   Compiling toml_datetime v0.6.9\n    Checking bit_field v0.10.2\n   Compiling strsim v0.11.1\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.101\n    Checking cfg-if v1.0.0\n   Compiling serde v1.0.219\n    Checking log v0.4.21\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling utf8parse v0.2.2\n   Compiling rustversion v1.0.20\n   Compiling toml_edit v0.22.26\n   Compiling anstyle-parse v0.2.6\n   Compiling heck v0.5.0\n   Compiling colorchoice v1.0.3\n   Compiling anstyle-query v1.1.2\n   Compiling is_terminal_polyfill v1.70.1\n   Compiling anstyle v1.0.10\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling anstream v0.6.18\n    Checking bitflags v2.9.0\n   Compiling clap_lex v0.7.4\n   Compiling clap_builder v4.5.37\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n    Checking volatile v0.4.6\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking spin v0.9.8\n    Checking static_assertions v1.1.0\n   Compiling libc v0.2.172\n    Checking x86_64 v0.15.2\n   Compiling paste v1.0.15\n   Compiling clap_derive v4.5.32\n   Compiling crate_interface v0.1.4\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking kernel_guard v0.1.2\n   Compiling svgbobdoc v0.3.0\n   Compiling linkme-impl v0.3.32\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking memory_addr v0.3.2\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking const-default v1.0.0\n   Compiling axerrno v0.1.0\n    Checking rlsf v0.2.1\n    Checking kspin v0.1.0\n    Checking x86_64 v0.14.13\n    Checking bitmap-allocator v0.2.0\n    Checking bit v0.1.1\n   Compiling percpu v0.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling clap v4.5.37\n   Compiling axconfig-gen v0.1.0\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking page_table_entry v0.5.3\n   Compiling percpu_macros v0.2.0\n    Checking x2apic v0.4.3\n    Checking raw-cpuid v11.5.0\n   Compiling axconfig-gen-macros v0.1.0\n   Compiling ident_case v1.0.1\n   Compiling fnv v1.0.7\n   Compiling unicode-segmentation v1.12.0\n   Compiling darling_core v0.20.11\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling convert_case v0.7.1\n    Checking linkme v0.3.32\n    Checking page_table_multiarch v0.5.3\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling unicode-xid v0.2.6\n    Checking lazyinit v0.2.1\n    Checking handler_table v0.1.2\n    Checking int_ratio v0.1.1\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bitmaps v3.2.1\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking aarch64-cpu v9.4.0\n   Compiling derive_more-impl v2.0.1\n    Checking cpumask v0.1.0\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#8bed6725)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git#7352c083)\n    Checking timer_list v0.1.0\n    Checking axtask v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n   Compiling strum_macros v0.27.1\n    Checking linux-raw-sys v0.9.4\n   Compiling darling_macro v0.20.11\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling darling v0.20.11\n   Compiling derive_builder_core v0.20.2\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling r4l-macros v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/macros)\n   Compiling derive_builder_macro v0.20.2\n    Checking derive_builder v0.20.2\n    Checking derive_more v2.0.1\n    Checking axtask v0.1.0 (https://github.com/Starry-OS/axtask.git#d41e0730)\n    Checking axsync v0.1.0 (https://github.com/Starry-OS/axsync.git#70651a7c)\n    Checking r4l v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/r4l)\nerror: could not compile `r4l` (lib) due to 2 previous errors; 17 warnings emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ax88796b, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/kern-crates/r4l/drivers/net/phy/ax88796b\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 11:03:21.614862601 +08:00:00\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling hashbrown v0.15.3\n   Compiling equivalent v1.0.2\n   Compiling winnow v0.7.9\n   Compiling toml_datetime v0.6.9\n   Compiling toml_write v0.1.1\n   Compiling bit_field v0.10.2\n   Compiling cfg-if v1.0.0\n   Compiling strsim v0.11.1\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n   Compiling log v0.4.21\n[2025-05-04T03:03:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-04T03:03:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling syn v2.0.101\n   Compiling serde v1.0.219\n   Compiling bitflags v1.3.2\n   Compiling raw-cpuid v10.7.0\n   Compiling utf8parse v0.2.2\n   Compiling rustversion v1.0.20\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.26\n   Compiling anstyle-parse v0.2.6\n   Compiling colorchoice v1.0.3\n   Compiling is_terminal_polyfill v1.70.1\n   Compiling anstyle v1.0.10\n   Compiling autocfg v1.4.0\n   Compiling heck v0.5.0\n   Compiling anstyle-query v1.1.2\n   Compiling anstream v0.6.18\n   Compiling lock_api v0.4.12\n   Compiling bitflags v2.9.0\n   Compiling clap_lex v0.7.4\n   Compiling clap_builder v4.5.37\n   Compiling volatile v0.4.6\n   Compiling scopeguard v1.2.0\n   Compiling syn v1.0.109\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling spin v0.9.8\n   Compiling libc v0.2.172\n   Compiling static_assertions v1.1.0\n   Compiling x86_64 v0.15.2\n   Compiling clap_derive v4.5.32\n   Compiling crate_interface v0.1.4\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n   Compiling paste v1.0.15\n   Compiling svgbobdoc v0.3.0\n   Compiling kernel_guard v0.1.2\n   Compiling axerrno v0.1.0\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling memory_addr v0.3.2\n   Compiling linkme-impl v0.3.32\n   Compiling const-default v1.0.0\n   Compiling rlsf v0.2.1\n   Compiling kspin v0.1.0\n   Compiling x86_64 v0.14.13\n   Compiling bitmap-allocator v0.2.0\n   Compiling clap v4.5.37\n   Compiling axconfig-gen v0.1.0\n   Compiling percpu v0.2.0\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling bit v0.1.1\n   Compiling allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n   Compiling page_table_entry v0.5.3\n   Compiling percpu_macros v0.2.0\n   Compiling axconfig-gen-macros v0.1.0\n   Compiling x2apic v0.4.3\n   Compiling raw-cpuid v11.5.0\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling fnv v1.0.7\n   Compiling ident_case v1.0.1\n   Compiling unicode-segmentation v1.12.0\n   Compiling darling_core v0.20.11\n   Compiling linkme v0.3.32\n   Compiling page_table_multiarch v0.5.3\n   Compiling convert_case v0.7.1\n   Compiling axalloc v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n   Compiling axlog v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n   Compiling handler_table v0.1.2\n   Compiling bitmaps v3.2.1\n   Compiling unicode-xid v0.2.6\n   Compiling tock-registers v0.8.1\n   Compiling lazyinit v0.2.1\n   Compiling int_ratio v0.1.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling aarch64-cpu v9.4.0\n   Compiling cpumask v0.1.0\n   Compiling derive_more-impl v2.0.1\n   Compiling scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n   Compiling spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#8bed6725)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling lazy_static v1.5.0\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git#7352c083)\n   Compiling timer_list v0.1.0\n   Compiling fdt v0.1.5\n   Compiling of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling darling_macro v0.20.11\n   Compiling axtask v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n   Compiling darling v0.20.11\n   Compiling strum_macros v0.27.1\n   Compiling ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling linux-raw-sys v0.9.4\n   Compiling handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n   Compiling lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling derive_builder_core v0.20.2\n   Compiling axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling r4l-macros v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/macros)\nwarning: struct `Generics` is never constructed\n   --> macros/src/helpers.rs:109:19\n    |\n109 | pub(crate) struct Generics {\n    |                   ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\nwarning: function `parse_generics` is never used\n   --> macros/src/helpers.rs:128:15\n    |\n128 | pub(crate) fn parse_generics(input: TokenStream) -> (Generics, Vec<TokenTree>) {\n    |               ^^^^^^^^^^^^^^\n\nwarning: `r4l-macros` (lib) generated 2 warnings\n   Compiling derive_builder_macro v0.20.2\n   Compiling derive_builder v0.20.2\n   Compiling derive_more v2.0.1\n   Compiling axtask v0.1.0 (https://github.com/Starry-OS/axtask.git#d41e0730)\n   Compiling axsync v0.1.0 (https://github.com/Starry-OS/axsync.git#70651a7c)\n   Compiling r4l v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/r4l)\nerror[E0432]: unresolved import `axhal::irq`\n  --> r4l/src/irq/os_api.rs:5:16\n   |\n5  |     use axhal::irq::register_handler;\n   |                ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0433]: failed to resolve: could not find `irq` in `axhal`\n  --> r4l/src/irq/os_api.rs:7:34\n   |\n7  |     pub type IrqHandler = axhal::irq::IrqHandler;\n   |                                  ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\nhelp: consider importing this module\n   |\n5  +     use crate::irq;\n   |\nhelp: if you import `irq`, refer to it directly\n   |\n7  -     pub type IrqHandler = axhal::irq::IrqHandler;\n7  +     pub type IrqHandler = irq::IrqHandler;\n   |\n\nwarning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\n --> r4l/src/lib.rs:9:12\n  |\n9 | #![feature(generic_const_exprs)]\n  |            ^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\n  = note: `#[warn(incomplete_features)]` on by default\n\nwarning: the feature `generic_const_items` is incomplete and may not be safe to use and/or cause compiler crashes\n  --> r4l/src/lib.rs:10:12\n   |\n10 | #![feature(generic_const_items)]\n   |            ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #113521 <https://github.com/rust-lang/rust/issues/113521> for more information\n\nwarning: unused import: `crate::sync::Arc`\n --> r4l/src/bus.rs:7:5\n  |\n7 | use crate::sync::Arc;\n  |     ^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `core::ops::Deref`\n --> r4l/src/bus.rs:8:5\n  |\n8 | use core::ops::Deref;\n  |     ^^^^^^^^^^^^^^^^\n\nwarning: unused import: `crate::pr_info`\n --> r4l/src/device.rs:8:5\n  |\n8 | use crate::pr_info;\n  |     ^^^^^^^^^^^^^^\n\nwarning: unused import: `super::IdArray`\n --> r4l/src/driver/driver.rs:8:5\n  |\n8 | use super::IdArray;\n  |     ^^^^^^^^^^^^^^\n\nwarning: unused import: `super::DeviceId`\n --> r4l/src/of/platform.rs:3:5\n  |\n3 | use super::DeviceId;\n  |     ^^^^^^^^^^^^^^^\n\nwarning: unused import: `crate::pr_debug`\n --> r4l/src/of/platform.rs:6:5\n  |\n6 | use crate::pr_debug;\n  |     ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `module_platform_device`\n   --> r4l/src/platform/platform_drv.rs:136:14\n    |\n136 | macro_rules! module_platform_device {\n    |              ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused variable: `e`\n  --> r4l/src/init.rs:14:16\n   |\n14 |     if let Err(e) = crate::of::of_platform_default_populate_init() {\n   |                ^ help: if this is intentional, prefix it with an underscore: `_e`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\nwarning: unreachable pattern\n  --> r4l/src/platform/platform_bus.rs:49:21\n   |\n43 |                     Compatible(id) => {\n   |                     -------------- matches all the relevant values\n...\n49 |                     _ => panic!(\"invalid id table\"),\n   |                     ^ no value can reach this\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: unused variable: `this`\n  --> r4l/src/platform/platform_drv.rs:40:17\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                 ^^^^ help: if this is intentional, prefix it with an underscore: `_this`\n\nwarning: unused variable: `name`\n  --> r4l/src/platform/platform_drv.rs:40:34\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                  ^^^^ help: if this is intentional, prefix it with an underscore: `_name`\n\nwarning: unused variable: `module`\n  --> r4l/src/platform/platform_drv.rs:40:55\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                                       ^^^^^^ help: if this is intentional, prefix it with an underscore: `_module`\n\nwarning: unused variable: `pdrv`\n   --> r4l/src/platform/platform_drv.rs:111:19\n    |\n111 |     fn unregister(pdrv: &mut Self::RegType) {}\n    |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_pdrv`\n\nwarning: unused variable: `pdev`\n   --> r4l/src/platform/platform_drv.rs:115:20\n    |\n115 |     fn get_id_info(pdev: &PlatformDevice) -> Option<&'static T::IdInfo> {\n    |                    ^^^^ help: if this is intentional, prefix it with an underscore: `_pdev`\n\nSome errors have detailed explanations: E0432, E0433.\nFor more information about an error, try `rustc --explain E0432`.\nwarning: `r4l` (lib) generated 17 warnings\nerror: could not compile `r4l` (lib) due to 2 previous errors; 17 warnings emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ax88796b, checker=Mirai\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/kern-crates/r4l/drivers/net/phy/ax88796b\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 11:02:58.227201006 +08:00:00\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.3\n   Compiling toml_write v0.1.1\n   Compiling toml_datetime v0.6.9\n   Compiling winnow v0.7.9\n    Checking bit_field v0.10.2\n    Checking cfg-if v1.0.0\n   Compiling strsim v0.11.1\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.101\n   Compiling serde v1.0.219\n    Checking bitflags v1.3.2\n    Checking log v0.4.21\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling rustversion v1.0.20\n   Compiling utf8parse v0.2.2\n   Compiling anstyle-parse v0.2.6\n   Compiling toml_edit v0.22.26\n   Compiling colorchoice v1.0.3\n   Compiling autocfg v1.4.0\n   Compiling heck v0.5.0\n   Compiling anstyle-query v1.1.2\n   Compiling is_terminal_polyfill v1.70.1\n   Compiling anstyle v1.0.10\n   Compiling anstream v0.6.18\n   Compiling lock_api v0.4.12\n   Compiling clap_lex v0.7.4\n    Checking bitflags v2.9.0\n   Compiling clap_builder v4.5.37\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking spin v0.9.8\n   Compiling libc v0.2.172\n    Checking static_assertions v1.1.0\n    Checking x86_64 v0.15.2\n   Compiling clap_derive v4.5.32\n   Compiling crate_interface v0.1.4\n   Compiling unicode-width v0.1.14\n   Compiling paste v1.0.15\n   Compiling base64 v0.13.1\n    Checking kernel_guard v0.1.2\n   Compiling svgbobdoc v0.3.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling linkme-impl v0.3.32\n    Checking const-default v1.0.0\n    Checking memory_addr v0.3.2\n   Compiling axerrno v0.1.0\n    Checking rlsf v0.2.1\n    Checking kspin v0.1.0\n    Checking x86_64 v0.14.13\n   Compiling clap v4.5.37\n   Compiling axconfig-gen v0.1.0\n    Checking bitmap-allocator v0.2.0\n    Checking bit v0.1.1\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling percpu v0.2.0\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking page_table_entry v0.5.3\n   Compiling percpu_macros v0.2.0\n   Compiling axconfig-gen-macros v0.1.0\n    Checking x2apic v0.4.3\n    Checking raw-cpuid v11.5.0\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling unicode-segmentation v1.12.0\n   Compiling ident_case v1.0.1\n   Compiling fnv v1.0.7\n   Compiling darling_core v0.20.11\n    Checking linkme v0.3.32\n   Compiling convert_case v0.7.1\n    Checking page_table_multiarch v0.5.3\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling unicode-xid v0.2.6\n    Checking bitmaps v3.2.1\n    Checking tock-registers v0.8.1\n    Checking lazyinit v0.2.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking handler_table v0.1.2\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking int_ratio v0.1.1\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking aarch64-cpu v9.4.0\n    Checking cpumask v0.1.0\n   Compiling derive_more-impl v2.0.1\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#8bed6725)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking lazy_static v1.5.0\n    Checking timer_list v0.1.0\n    Checking fdt v0.1.5\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git#7352c083)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axtask v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling strum_macros v0.27.1\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking linux-raw-sys v0.9.4\n   Compiling darling_macro v0.20.11\n   Compiling darling v0.20.11\n   Compiling derive_builder_core v0.20.2\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling r4l-macros v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/macros)\n   Compiling derive_builder_macro v0.20.2\n    Checking derive_builder v0.20.2\n    Checking derive_more v2.0.1\n    Checking axtask v0.1.0 (https://github.com/Starry-OS/axtask.git#d41e0730)\n    Checking axsync v0.1.0 (https://github.com/Starry-OS/axsync.git#70651a7c)\n    Checking r4l v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/r4l)\nerror: could not compile `r4l` (lib) due to 2 previous errors; 17 warnings emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ax88796b, checker=Rapx\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/kern-crates/r4l/drivers/net/phy/ax88796b\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 11:03:52.681377919 +08:00:00\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\nerror: failed to get `taskctx` as a dependency of package `axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#8bed6725)`\n    ... which satisfies git dependency `axhal` (locked to 0.1.0) of package `r4l v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/r4l)`\n    ... which satisfies path dependency `kernel` (locked to 0.1.0) of package `ax88796b v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/drivers/net/phy/ax88796b)`\n\nCaused by:\n  failed to load source for dependency `taskctx`\n\nCaused by:\n  Unable to update https://github.com/Starry-OS/taskctx.git#bee485a8\n\nCaused by:\n  failed to parse manifest at `/home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/bee485a/Cargo.toml`\n\nCaused by:\n  feature `edition2024` is required\n\n  The package requires the Cargo feature called `edition2024`, but that feature is not stabilized in this version of Cargo (1.83.0-nightly (15fbd2f60 2024-10-08)).\n  Consider trying a more recent nightly release.\n  See https://doc.rust-lang.org/nightly/cargo/reference/unstable.html#edition-2024 for more information about the status of this feature.\n03:03:53|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ax88796b, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/kern-crates/r4l/drivers/net/phy/ax88796b\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 11:01:16.223118862 +08:00:00\n    Building ax88796b v0.1.0 (current)\nerror: running cargo-doc on crate 'ax88796b' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.3\n   Compiling toml_write v0.1.1\n   Compiling toml_datetime v0.6.9\n   Compiling winnow v0.7.9\n    Checking bit_field v0.10.2\n    Checking cfg-if v1.0.0\n   Compiling strsim v0.11.1\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.101\n    Checking log v0.4.21\n    Checking bitflags v1.3.2\n   Compiling serde v1.0.219\n    Checking raw-cpuid v10.7.0\n   Compiling utf8parse v0.2.2\n   Compiling x86 v0.52.0\n   Compiling rustversion v1.0.20\n   Compiling toml_edit v0.22.26\n   Compiling anstyle-parse v0.2.6\n   Compiling autocfg v1.4.0\n   Compiling is_terminal_polyfill v1.70.1\n   Compiling heck v0.5.0\n   Compiling colorchoice v1.0.3\n   Compiling anstyle v1.0.10\n   Compiling anstyle-query v1.1.2\n   Compiling anstream v0.6.18\n   Compiling lock_api v0.4.12\n   Compiling clap_lex v0.7.4\n    Checking bitflags v2.9.0\n   Compiling clap_builder v4.5.37\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking spin v0.9.8\n   Compiling libc v0.2.172\n    Checking static_assertions v1.1.0\n    Checking x86_64 v0.15.2\n   Compiling clap_derive v4.5.32\n   Compiling crate_interface v0.1.4\n   Compiling paste v1.0.15\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking kernel_guard v0.1.2\n   Compiling svgbobdoc v0.3.0\n    Checking const-default v1.0.0\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling linkme-impl v0.3.32\n    Checking rlsf v0.2.1\n    Checking kspin v0.1.0\n    Checking x86_64 v0.14.13\n    Checking bitmap-allocator v0.2.0\n   Compiling clap v4.5.37\n    Checking bit v0.1.1\n   Compiling axconfig-gen v0.1.0\n   Compiling percpu v0.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking page_table_entry v0.5.3\n   Compiling percpu_macros v0.2.0\n   Compiling axconfig-gen-macros v0.1.0\n    Checking x2apic v0.4.3\n    Checking raw-cpuid v11.5.0\n   Compiling fnv v1.0.7\n   Compiling ident_case v1.0.1\n   Compiling unicode-segmentation v1.12.0\n   Compiling darling_core v0.20.11\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling convert_case v0.7.1\n    Checking linkme v0.3.32\n    Checking page_table_multiarch v0.5.3\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking handler_table v0.1.2\n   Compiling unicode-xid v0.2.6\n    Checking bitmaps v3.2.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking lazyinit v0.2.1\n    Checking int_ratio v0.1.1\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking cpumask v0.1.0\n   Compiling derive_more-impl v2.0.1\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#8bed6725)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking lazy_static v1.5.0\n    Checking timer_list v0.1.0\n    Checking fdt v0.1.5\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git#7352c083)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axtask v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n   Compiling strum_macros v0.27.1\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking linux-raw-sys v0.9.4\n   Compiling darling_macro v0.20.11\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling darling v0.20.11\n   Compiling derive_builder_core v0.20.2\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling r4l-macros v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/macros)\nwarning: struct `Generics` is never constructed\n   --> /home/runner/check/batch_4/kern-crates/r4l/macros/src/helpers.rs:109:19\n    |\n109 | pub(crate) struct Generics {\n    |                   ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\nwarning: function `parse_generics` is never used\n   --> /home/runner/check/batch_4/kern-crates/r4l/macros/src/helpers.rs:128:15\n    |\n128 | pub(crate) fn parse_generics(input: TokenStream) -> (Generics, Vec<TokenTree>) {\n    |               ^^^^^^^^^^^^^^\n\nwarning: `r4l-macros` (lib) generated 2 warnings\n   Compiling derive_builder_macro v0.20.2\n    Checking derive_builder v0.20.2\n    Checking derive_more v2.0.1\n    Checking axtask v0.1.0 (https://github.com/Starry-OS/axtask.git#d41e0730)\n    Checking axsync v0.1.0 (https://github.com/Starry-OS/axsync.git#70651a7c)\n    Checking r4l v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/r4l)\nerror[E0432]: unresolved import `axhal::irq`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/os_api.rs:5:16\n   |\n5  |     use axhal::irq::register_handler;\n   |                ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0433]: failed to resolve: could not find `irq` in `axhal`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/os_api.rs:7:34\n   |\n7  |     pub type IrqHandler = axhal::irq::IrqHandler;\n   |                                  ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\nhelp: consider importing this module\n   |\n5  +     use crate::irq;\n   |\nhelp: if you import `irq`, refer to it directly\n   |\n7  -     pub type IrqHandler = axhal::irq::IrqHandler;\n7  +     pub type IrqHandler = irq::IrqHandler;\n   |\n\nwarning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/lib.rs:9:12\n  |\n9 | #![feature(generic_const_exprs)]\n  |            ^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\n  = note: `#[warn(incomplete_features)]` on by default\n\nwarning: the feature `generic_const_items` is incomplete and may not be safe to use and/or cause compiler crashes\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/lib.rs:10:12\n   |\n10 | #![feature(generic_const_items)]\n   |            ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #113521 <https://github.com/rust-lang/rust/issues/113521> for more information\n\nwarning: unused import: `crate::sync::Arc`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/bus.rs:7:5\n  |\n7 | use crate::sync::Arc;\n  |     ^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `core::ops::Deref`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/bus.rs:8:5\n  |\n8 | use core::ops::Deref;\n  |     ^^^^^^^^^^^^^^^^\n\nwarning: unused import: `crate::pr_info`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/device.rs:8:5\n  |\n8 | use crate::pr_info;\n  |     ^^^^^^^^^^^^^^\n\nwarning: unused import: `super::IdArray`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/driver/driver.rs:8:5\n  |\n8 | use super::IdArray;\n  |     ^^^^^^^^^^^^^^\n\nwarning: unused import: `super::DeviceId`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/of/platform.rs:3:5\n  |\n3 | use super::DeviceId;\n  |     ^^^^^^^^^^^^^^^\n\nwarning: unused import: `crate::pr_debug`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/of/platform.rs:6:5\n  |\n6 | use crate::pr_debug;\n  |     ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `module_platform_device`\n   --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:136:14\n    |\n136 | macro_rules! module_platform_device {\n    |              ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused variable: `e`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/init.rs:14:16\n   |\n14 |     if let Err(e) = crate::of::of_platform_default_populate_init() {\n   |                ^ help: if this is intentional, prefix it with an underscore: `_e`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\nwarning: unreachable pattern\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_bus.rs:49:21\n   |\n43 |                     Compatible(id) => {\n   |                     -------------- matches all the relevant values\n...\n49 |                     _ => panic!(\"invalid id table\"),\n   |                     ^ no value can reach this\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: unused variable: `this`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:40:17\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                 ^^^^ help: if this is intentional, prefix it with an underscore: `_this`\n\nwarning: unused variable: `name`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:40:34\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                  ^^^^ help: if this is intentional, prefix it with an underscore: `_name`\n\nwarning: unused variable: `module`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:40:55\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                                       ^^^^^^ help: if this is intentional, prefix it with an underscore: `_module`\n\nwarning: unused variable: `pdrv`\n   --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:111:19\n    |\n111 |     fn unregister(pdrv: &mut Self::RegType) {}\n    |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_pdrv`\n\nwarning: unused variable: `pdev`\n   --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:115:20\n    |\n115 |     fn get_id_info(pdev: &PlatformDevice) -> Option<&'static T::IdInfo> {\n    |                    ^^^^ help: if this is intentional, prefix it with an underscore: `_pdev`\n\nSome errors have detailed explanations: E0432, E0433.\nFor more information about an error, try `rustc --explain E0432`.\nwarning: `r4l` (lib) generated 17 warnings\nerror: could not compile `r4l` (lib) due to 2 previous errors; 17 warnings emitted\n\n-----\n\nerror: failed to build rustdoc for crate ax88796b v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/kern-crates/r4l/drivers/net/phy/ax88796b --features default,starry &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate ax88796b v0.1.0\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-04T03:03:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-04T03:03:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=ax88796b, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_4/kern-crates/r4l/drivers/net/phy/ax88796b\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-05-04 11:01:42.267582226 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building ax88796b v0.1.0 (current)\nerror: running cargo-doc on crate 'ax88796b' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.3\n   Compiling toml_write v0.1.1\n   Compiling toml_datetime v0.6.9\n   Compiling winnow v0.7.9\n    Checking bit_field v0.10.2\n    Checking cfg-if v1.0.0\n   Compiling strsim v0.11.1\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.101\n    Checking log v0.4.21\n    Checking bitflags v1.3.2\n   Compiling serde v1.0.219\n    Checking raw-cpuid v10.7.0\n   Compiling utf8parse v0.2.2\n   Compiling x86 v0.52.0\n   Compiling rustversion v1.0.20\n   Compiling toml_edit v0.22.26\n   Compiling anstyle-parse v0.2.6\n   Compiling autocfg v1.4.0\n   Compiling is_terminal_polyfill v1.70.1\n   Compiling heck v0.5.0\n   Compiling colorchoice v1.0.3\n   Compiling anstyle v1.0.10\n   Compiling anstyle-query v1.1.2\n   Compiling anstream v0.6.18\n   Compiling lock_api v0.4.12\n   Compiling clap_lex v0.7.4\n    Checking bitflags v2.9.0\n   Compiling clap_builder v4.5.37\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking spin v0.9.8\n   Compiling libc v0.2.172\n    Checking static_assertions v1.1.0\n    Checking x86_64 v0.15.2\n   Compiling clap_derive v4.5.32\n   Compiling crate_interface v0.1.4\n   Compiling paste v1.0.15\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking kernel_guard v0.1.2\n   Compiling svgbobdoc v0.3.0\n    Checking const-default v1.0.0\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling linkme-impl v0.3.32\n    Checking rlsf v0.2.1\n    Checking kspin v0.1.0\n    Checking x86_64 v0.14.13\n    Checking bitmap-allocator v0.2.0\n   Compiling clap v4.5.37\n    Checking bit v0.1.1\n   Compiling axconfig-gen v0.1.0\n   Compiling percpu v0.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking page_table_entry v0.5.3\n   Compiling percpu_macros v0.2.0\n   Compiling axconfig-gen-macros v0.1.0\n    Checking x2apic v0.4.3\n    Checking raw-cpuid v11.5.0\n   Compiling fnv v1.0.7\n   Compiling ident_case v1.0.1\n   Compiling unicode-segmentation v1.12.0\n   Compiling darling_core v0.20.11\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling convert_case v0.7.1\n    Checking linkme v0.3.32\n    Checking page_table_multiarch v0.5.3\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking handler_table v0.1.2\n   Compiling unicode-xid v0.2.6\n    Checking bitmaps v3.2.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking lazyinit v0.2.1\n    Checking int_ratio v0.1.1\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking cpumask v0.1.0\n   Compiling derive_more-impl v2.0.1\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#8bed6725)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking lazy_static v1.5.0\n    Checking timer_list v0.1.0\n    Checking fdt v0.1.5\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git#7352c083)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axtask v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n   Compiling strum_macros v0.27.1\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking linux-raw-sys v0.9.4\n   Compiling darling_macro v0.20.11\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling darling v0.20.11\n   Compiling derive_builder_core v0.20.2\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling r4l-macros v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/macros)\nwarning: struct `Generics` is never constructed\n   --> /home/runner/check/batch_4/kern-crates/r4l/macros/src/helpers.rs:109:19\n    |\n109 | pub(crate) struct Generics {\n    |                   ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\nwarning: function `parse_generics` is never used\n   --> /home/runner/check/batch_4/kern-crates/r4l/macros/src/helpers.rs:128:15\n    |\n128 | pub(crate) fn parse_generics(input: TokenStream) -> (Generics, Vec<TokenTree>) {\n    |               ^^^^^^^^^^^^^^\n\nwarning: `r4l-macros` (lib) generated 2 warnings\n   Compiling derive_builder_macro v0.20.2\n    Checking derive_builder v0.20.2\n    Checking derive_more v2.0.1\n    Checking axtask v0.1.0 (https://github.com/Starry-OS/axtask.git#d41e0730)\n    Checking axsync v0.1.0 (https://github.com/Starry-OS/axsync.git#70651a7c)\n    Checking r4l v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/r4l)\nerror[E0432]: unresolved import `axhal::irq`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/os_api.rs:5:16\n   |\n5  |     use axhal::irq::register_handler;\n   |                ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0433]: failed to resolve: could not find `irq` in `axhal`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/os_api.rs:7:34\n   |\n7  |     pub type IrqHandler = axhal::irq::IrqHandler;\n   |                                  ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\nhelp: consider importing this module\n   |\n5  +     use crate::irq;\n   |\nhelp: if you import `irq`, refer to it directly\n   |\n7  -     pub type IrqHandler = axhal::irq::IrqHandler;\n7  +     pub type IrqHandler = irq::IrqHandler;\n   |\n\nwarning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/lib.rs:9:12\n  |\n9 | #![feature(generic_const_exprs)]\n  |            ^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\n  = note: `#[warn(incomplete_features)]` on by default\n\nwarning: the feature `generic_const_items` is incomplete and may not be safe to use and/or cause compiler crashes\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/lib.rs:10:12\n   |\n10 | #![feature(generic_const_items)]\n   |            ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #113521 <https://github.com/rust-lang/rust/issues/113521> for more information\n\nwarning: unused import: `crate::sync::Arc`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/bus.rs:7:5\n  |\n7 | use crate::sync::Arc;\n  |     ^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `core::ops::Deref`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/bus.rs:8:5\n  |\n8 | use core::ops::Deref;\n  |     ^^^^^^^^^^^^^^^^\n\nwarning: unused import: `crate::pr_info`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/device.rs:8:5\n  |\n8 | use crate::pr_info;\n  |     ^^^^^^^^^^^^^^\n\nwarning: unused import: `super::IdArray`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/driver/driver.rs:8:5\n  |\n8 | use super::IdArray;\n  |     ^^^^^^^^^^^^^^\n\nwarning: unused import: `super::DeviceId`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/of/platform.rs:3:5\n  |\n3 | use super::DeviceId;\n  |     ^^^^^^^^^^^^^^^\n\nwarning: unused import: `crate::pr_debug`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/of/platform.rs:6:5\n  |\n6 | use crate::pr_debug;\n  |     ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `module_platform_device`\n   --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:136:14\n    |\n136 | macro_rules! module_platform_device {\n    |              ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused variable: `e`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/init.rs:14:16\n   |\n14 |     if let Err(e) = crate::of::of_platform_default_populate_init() {\n   |                ^ help: if this is intentional, prefix it with an underscore: `_e`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\nwarning: unreachable pattern\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_bus.rs:49:21\n   |\n43 |                     Compatible(id) => {\n   |                     -------------- matches all the relevant values\n...\n49 |                     _ => panic!(\"invalid id table\"),\n   |                     ^ no value can reach this\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: unused variable: `this`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:40:17\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                 ^^^^ help: if this is intentional, prefix it with an underscore: `_this`\n\nwarning: unused variable: `name`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:40:34\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                  ^^^^ help: if this is intentional, prefix it with an underscore: `_name`\n\nwarning: unused variable: `module`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:40:55\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                                       ^^^^^^ help: if this is intentional, prefix it with an underscore: `_module`\n\nwarning: unused variable: `pdrv`\n   --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:111:19\n    |\n111 |     fn unregister(pdrv: &mut Self::RegType) {}\n    |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_pdrv`\n\nwarning: unused variable: `pdev`\n   --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:115:20\n    |\n115 |     fn get_id_info(pdev: &PlatformDevice) -> Option<&'static T::IdInfo> {\n    |                    ^^^^ help: if this is intentional, prefix it with an underscore: `_pdev`\n\nSome errors have detailed explanations: E0432, E0433.\nFor more information about an error, try `rustc --explain E0432`.\nwarning: `r4l` (lib) generated 17 warnings\nerror: could not compile `r4l` (lib) due to 2 previous errors; 17 warnings emitted\n\n-----\n\nerror: failed to build rustdoc for crate ax88796b v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/kern-crates/r4l/drivers/net/phy/ax88796b --features default,starry &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate ax88796b v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "kern-crates",
      "repo": "r4l",
      "pkg": "r4l_minimal_sample",
      "count": 52,
      "raw_reports": [
        {
          "file": "r4l/src/platform/platform_drv.rs",
          "features": "",
          "count": 16,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\n",
              "warning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\n",
              "warning: unused macro definition: `module_platform_device`\n   --> r4l/src/platform/platform_drv.rs:136:14\n    |\n136 | macro_rules! module_platform_device {\n    |              ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\n",
              "warning: unused variable: `this`\n  --> r4l/src/platform/platform_drv.rs:40:17\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                 ^^^^ help: if this is intentional, prefix it with an underscore: `_this`\n\n",
              "warning: unused variable: `name`\n  --> r4l/src/platform/platform_drv.rs:40:34\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                  ^^^^ help: if this is intentional, prefix it with an underscore: `_name`\n\n",
              "warning: unused variable: `module`\n  --> r4l/src/platform/platform_drv.rs:40:55\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                                       ^^^^^^ help: if this is intentional, prefix it with an underscore: `_module`\n\n",
              "warning: unused variable: `pdrv`\n   --> r4l/src/platform/platform_drv.rs:111:19\n    |\n111 |     fn unregister(pdrv: &mut Self::RegType) {}\n    |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_pdrv`\n\n",
              "warning: unused variable: `pdev`\n   --> r4l/src/platform/platform_drv.rs:115:20\n    |\n115 |     fn get_id_info(pdev: &PlatformDevice) -> Option<&'static T::IdInfo> {\n    |                    ^^^^ help: if this is intentional, prefix it with an underscore: `_pdev`\n\n"
            ],
            "Mirai": [
              "warning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\n",
              "warning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\n",
              "warning: unused macro definition: `module_platform_device`\n   --> r4l/src/platform/platform_drv.rs:136:14\n    |\n136 | macro_rules! module_platform_device {\n    |              ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\n",
              "warning: unused variable: `this`\n  --> r4l/src/platform/platform_drv.rs:40:17\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                 ^^^^ help: if this is intentional, prefix it with an underscore: `_this`\n\n",
              "warning: unused variable: `name`\n  --> r4l/src/platform/platform_drv.rs:40:34\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                  ^^^^ help: if this is intentional, prefix it with an underscore: `_name`\n\n",
              "warning: unused variable: `module`\n  --> r4l/src/platform/platform_drv.rs:40:55\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                                       ^^^^^^ help: if this is intentional, prefix it with an underscore: `_module`\n\n",
              "warning: unused variable: `pdrv`\n   --> r4l/src/platform/platform_drv.rs:111:19\n    |\n111 |     fn unregister(pdrv: &mut Self::RegType) {}\n    |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_pdrv`\n\n",
              "warning: unused variable: `pdev`\n   --> r4l/src/platform/platform_drv.rs:115:20\n    |\n115 |     fn get_id_info(pdev: &PlatformDevice) -> Option<&'static T::IdInfo> {\n    |                    ^^^^ help: if this is intentional, prefix it with an underscore: `_pdev`\n\n"
            ]
          }
        },
        {
          "file": "macros/src/helpers.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Mirai": [
              "warning: struct `Generics` is never constructed\n   --> macros/src/helpers.rs:109:19\n    |\n109 | pub(crate) struct Generics {\n    |                   ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: function `parse_generics` is never used\n   --> macros/src/helpers.rs:128:15\n    |\n128 | pub(crate) fn parse_generics(input: TokenStream) -> (Generics, Vec<TokenTree>) {\n    |               ^^^^^^^^^^^^^^\n\n"
            ],
            "Clippy(Warn)": [
              "warning: struct `Generics` is never constructed\n   --> macros/src/helpers.rs:109:19\n    |\n109 | pub(crate) struct Generics {\n    |                   ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: function `parse_generics` is never used\n   --> macros/src/helpers.rs:128:15\n    |\n128 | pub(crate) fn parse_generics(input: TokenStream) -> (Generics, Vec<TokenTree>) {\n    |               ^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/bus.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused import: `crate::sync::Arc`\n --> r4l/src/bus.rs:7:5\n  |\n7 | use crate::sync::Arc;\n  |     ^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n",
              "warning: unused import: `core::ops::Deref`\n --> r4l/src/bus.rs:8:5\n  |\n8 | use core::ops::Deref;\n  |     ^^^^^^^^^^^^^^^^\n\n"
            ],
            "Mirai": [
              "warning: unused import: `crate::sync::Arc`\n --> r4l/src/bus.rs:7:5\n  |\n7 | use crate::sync::Arc;\n  |     ^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n",
              "warning: unused import: `core::ops::Deref`\n --> r4l/src/bus.rs:8:5\n  |\n8 | use core::ops::Deref;\n  |     ^^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/irq/os_api.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `axhal::irq`\n  --> r4l/src/irq/os_api.rs:5:16\n   |\n5  |     use axhal::irq::register_handler;\n   |                ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\n\n",
              "error[E0433]: failed to resolve: could not find `irq` in `axhal`\n  --> r4l/src/irq/os_api.rs:7:34\n   |\n7  |     pub type IrqHandler = axhal::irq::IrqHandler;\n   |                                  ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\nhelp: consider importing this module\n   |\n5  +     use crate::irq;\n   |\nhelp: if you import `irq`, refer to it directly\n   |\n7  -     pub type IrqHandler = axhal::irq::IrqHandler;\n7  +     pub type IrqHandler = irq::IrqHandler;\n   |\n\n"
            ],
            "Mirai": [
              "error[E0432]: unresolved import `axhal::irq`\n  --> r4l/src/irq/os_api.rs:5:16\n   |\n5  |     use axhal::irq::register_handler;\n   |                ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\n\n",
              "error[E0433]: failed to resolve: could not find `irq` in `axhal`\n  --> r4l/src/irq/os_api.rs:7:34\n   |\n7  |     pub type IrqHandler = axhal::irq::IrqHandler;\n   |                                  ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\nhelp: consider importing this module\n   |\n5  +     use crate::irq;\n   |\nhelp: if you import `irq`, refer to it directly\n   |\n7  -     pub type IrqHandler = axhal::irq::IrqHandler;\n7  +     pub type IrqHandler = irq::IrqHandler;\n   |\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/lib.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Warn)": [
              "warning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\n --> r4l/src/lib.rs:9:12\n  |\n9 | #![feature(generic_const_exprs)]\n  |            ^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\n  = note: `#[warn(incomplete_features)]` on by default\n\n",
              "warning: the feature `generic_const_items` is incomplete and may not be safe to use and/or cause compiler crashes\n  --> r4l/src/lib.rs:10:12\n   |\n10 | #![feature(generic_const_items)]\n   |            ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #113521 <https://github.com/rust-lang/rust/issues/113521> for more information\n\n"
            ],
            "Mirai": [
              "warning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\n --> r4l/src/lib.rs:9:12\n  |\n9 | #![feature(generic_const_exprs)]\n  |            ^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\n  = note: `#[warn(incomplete_features)]` on by default\n\n",
              "warning: the feature `generic_const_items` is incomplete and may not be safe to use and/or cause compiler crashes\n  --> r4l/src/lib.rs:10:12\n   |\n10 | #![feature(generic_const_items)]\n   |            ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #113521 <https://github.com/rust-lang/rust/issues/113521> for more information\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/of/platform.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Mirai": [
              "warning: unused import: `super::DeviceId`\n --> r4l/src/of/platform.rs:3:5\n  |\n3 | use super::DeviceId;\n  |     ^^^^^^^^^^^^^^^\n\n",
              "warning: unused import: `crate::pr_debug`\n --> r4l/src/of/platform.rs:6:5\n  |\n6 | use crate::pr_debug;\n  |     ^^^^^^^^^^^^^^^\n\n"
            ],
            "Clippy(Warn)": [
              "warning: unused import: `super::DeviceId`\n --> r4l/src/of/platform.rs:3:5\n  |\n3 | use super::DeviceId;\n  |     ^^^^^^^^^^^^^^^\n\n",
              "warning: unused import: `crate::pr_debug`\n --> r4l/src/of/platform.rs:6:5\n  |\n6 | use crate::pr_debug;\n  |     ^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/device.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused import: `crate::pr_info`\n --> r4l/src/device.rs:8:5\n  |\n8 | use crate::pr_info;\n  |     ^^^^^^^^^^^^^^\n\n"
            ],
            "Mirai": [
              "warning: unused import: `crate::pr_info`\n --> r4l/src/device.rs:8:5\n  |\n8 | use crate::pr_info;\n  |     ^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/driver/driver.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused import: `super::IdArray`\n --> r4l/src/driver/driver.rs:8:5\n  |\n8 | use super::IdArray;\n  |     ^^^^^^^^^^^^^^\n\n"
            ],
            "Mirai": [
              "warning: unused import: `super::IdArray`\n --> r4l/src/driver/driver.rs:8:5\n  |\n8 | use super::IdArray;\n  |     ^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/init.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused variable: `e`\n  --> r4l/src/init.rs:14:16\n   |\n14 |     if let Err(e) = crate::of::of_platform_default_populate_init() {\n   |                ^ help: if this is intentional, prefix it with an underscore: `_e`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"
            ],
            "Mirai": [
              "warning: unused variable: `e`\n  --> r4l/src/init.rs:14:16\n   |\n14 |     if let Err(e) = crate::of::of_platform_default_populate_init() {\n   |                ^ help: if this is intentional, prefix it with an underscore: `_e`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/platform/platform_bus.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unreachable pattern\n  --> r4l/src/platform/platform_bus.rs:49:21\n   |\n43 |                     Compatible(id) => {\n   |                     -------------- matches all the relevant values\n...\n49 |                     _ => panic!(\"invalid id table\"),\n   |                     ^ no value can reach this\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\n"
            ],
            "Mirai": [
              "warning: unreachable pattern\n  --> r4l/src/platform/platform_bus.rs:49:21\n   |\n43 |                     Compatible(id) => {\n   |                     -------------- matches all the relevant values\n...\n49 |                     _ => panic!(\"invalid id table\"),\n   |                     ^ no value can reach this\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_4/kern-crates/r4l/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   ├── axhal 0.1.0\n│   │   ├── r4l 0.1.0\n│   │   │   ├── r4l_platform_sample 0.1.0\n│   │   │   ├── r4l_minimal_sample 0.1.0\n│   │   │   └── ax88796b 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   ├── r4l 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       └── r4l 0.1.0\n│   │   └── axsync 0.1.0\n│   └── axhal 0.1.0\n│       ├── axtask 0.1.0\n│       │   └── axsignal 0.1.0\n│       │       └── axtask 0.1.0\n│       └── axsignal 0.1.0\n└── riscv 0.12.1\n    ├── page_table_multiarch 0.5.3\n    │   └── axhal 0.1.0\n    └── axhal 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 772,\n    \"last-commit\": \"4584ad9a5ea16ce196317cf4d3593e974fb4a8a1\",\n    \"last-updated\": \"2025-05-02T10:23:27+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 159\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=r4l_minimal_sample, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/kern-crates/r4l/drivers/sample/minimal\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-05-04 11:01:15.614343028 +08:00:00\n    Checking r4l v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/r4l)\nerror: could not compile `r4l` (lib) due to 2 previous errors; 17 warnings emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=r4l_minimal_sample, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/kern-crates/r4l/drivers/sample/minimal\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 11:03:51.905496043 +08:00:00\n[2025-05-04T03:03:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-04T03:03:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\nwarning: struct `Generics` is never constructed\n   --> macros/src/helpers.rs:109:19\n    |\n109 | pub(crate) struct Generics {\n    |                   ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\nwarning: function `parse_generics` is never used\n   --> macros/src/helpers.rs:128:15\n    |\n128 | pub(crate) fn parse_generics(input: TokenStream) -> (Generics, Vec<TokenTree>) {\n    |               ^^^^^^^^^^^^^^\n\nwarning: `r4l-macros` (lib) generated 2 warnings\n   Compiling r4l v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/r4l)\nerror[E0432]: unresolved import `axhal::irq`\n  --> r4l/src/irq/os_api.rs:5:16\n   |\n5  |     use axhal::irq::register_handler;\n   |                ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0433]: failed to resolve: could not find `irq` in `axhal`\n  --> r4l/src/irq/os_api.rs:7:34\n   |\n7  |     pub type IrqHandler = axhal::irq::IrqHandler;\n   |                                  ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\nhelp: consider importing this module\n   |\n5  +     use crate::irq;\n   |\nhelp: if you import `irq`, refer to it directly\n   |\n7  -     pub type IrqHandler = axhal::irq::IrqHandler;\n7  +     pub type IrqHandler = irq::IrqHandler;\n   |\n\nwarning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\n --> r4l/src/lib.rs:9:12\n  |\n9 | #![feature(generic_const_exprs)]\n  |            ^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\n  = note: `#[warn(incomplete_features)]` on by default\n\nwarning: the feature `generic_const_items` is incomplete and may not be safe to use and/or cause compiler crashes\n  --> r4l/src/lib.rs:10:12\n   |\n10 | #![feature(generic_const_items)]\n   |            ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #113521 <https://github.com/rust-lang/rust/issues/113521> for more information\n\nwarning: unused import: `crate::sync::Arc`\n --> r4l/src/bus.rs:7:5\n  |\n7 | use crate::sync::Arc;\n  |     ^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `core::ops::Deref`\n --> r4l/src/bus.rs:8:5\n  |\n8 | use core::ops::Deref;\n  |     ^^^^^^^^^^^^^^^^\n\nwarning: unused import: `crate::pr_info`\n --> r4l/src/device.rs:8:5\n  |\n8 | use crate::pr_info;\n  |     ^^^^^^^^^^^^^^\n\nwarning: unused import: `super::IdArray`\n --> r4l/src/driver/driver.rs:8:5\n  |\n8 | use super::IdArray;\n  |     ^^^^^^^^^^^^^^\n\nwarning: unused import: `super::DeviceId`\n --> r4l/src/of/platform.rs:3:5\n  |\n3 | use super::DeviceId;\n  |     ^^^^^^^^^^^^^^^\n\nwarning: unused import: `crate::pr_debug`\n --> r4l/src/of/platform.rs:6:5\n  |\n6 | use crate::pr_debug;\n  |     ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `module_platform_device`\n   --> r4l/src/platform/platform_drv.rs:136:14\n    |\n136 | macro_rules! module_platform_device {\n    |              ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused variable: `e`\n  --> r4l/src/init.rs:14:16\n   |\n14 |     if let Err(e) = crate::of::of_platform_default_populate_init() {\n   |                ^ help: if this is intentional, prefix it with an underscore: `_e`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\nwarning: unreachable pattern\n  --> r4l/src/platform/platform_bus.rs:49:21\n   |\n43 |                     Compatible(id) => {\n   |                     -------------- matches all the relevant values\n...\n49 |                     _ => panic!(\"invalid id table\"),\n   |                     ^ no value can reach this\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: unused variable: `this`\n  --> r4l/src/platform/platform_drv.rs:40:17\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                 ^^^^ help: if this is intentional, prefix it with an underscore: `_this`\n\nwarning: unused variable: `name`\n  --> r4l/src/platform/platform_drv.rs:40:34\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                  ^^^^ help: if this is intentional, prefix it with an underscore: `_name`\n\nwarning: unused variable: `module`\n  --> r4l/src/platform/platform_drv.rs:40:55\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                                       ^^^^^^ help: if this is intentional, prefix it with an underscore: `_module`\n\nwarning: unused variable: `pdrv`\n   --> r4l/src/platform/platform_drv.rs:111:19\n    |\n111 |     fn unregister(pdrv: &mut Self::RegType) {}\n    |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_pdrv`\n\nwarning: unused variable: `pdev`\n   --> r4l/src/platform/platform_drv.rs:115:20\n    |\n115 |     fn get_id_info(pdev: &PlatformDevice) -> Option<&'static T::IdInfo> {\n    |                    ^^^^ help: if this is intentional, prefix it with an underscore: `_pdev`\n\nSome errors have detailed explanations: E0432, E0433.\nFor more information about an error, try `rustc --explain E0432`.\nwarning: `r4l` (lib) generated 17 warnings\nerror: could not compile `r4l` (lib) due to 2 previous errors; 17 warnings emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=r4l_minimal_sample, checker=Mirai\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/kern-crates/r4l/drivers/sample/minimal\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 11:03:20.84419055 +08:00:00\n    Checking r4l v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/r4l)\nerror: could not compile `r4l` (lib) due to 2 previous errors; 17 warnings emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=r4l_minimal_sample, checker=Rapx\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/kern-crates/r4l/drivers/sample/minimal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 11:03:54.090262466 +08:00:00\n    Updating crates.io index\nerror: failed to get `taskctx` as a dependency of package `axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#8bed6725)`\n    ... which satisfies git dependency `axhal` (locked to 0.1.0) of package `r4l v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/r4l)`\n    ... which satisfies path dependency `kernel` (locked to 0.1.0) of package `ax88796b v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/drivers/net/phy/ax88796b)`\n\nCaused by:\n  failed to load source for dependency `taskctx`\n\nCaused by:\n  Unable to update https://github.com/Starry-OS/taskctx.git#bee485a8\n\nCaused by:\n  failed to parse manifest at `/home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/bee485a/Cargo.toml`\n\nCaused by:\n  feature `edition2024` is required\n\n  The package requires the Cargo feature called `edition2024`, but that feature is not stabilized in this version of Cargo (1.83.0-nightly (15fbd2f60 2024-10-08)).\n  Consider trying a more recent nightly release.\n  See https://doc.rust-lang.org/nightly/cargo/reference/unstable.html#edition-2024 for more information about the status of this feature.\n03:03:54|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=r4l_minimal_sample, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/kern-crates/r4l/drivers/sample/minimal\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 11:02:07.812212733 +08:00:00\n    Building r4l_minimal_sample v0.1.0 (current)\nerror: running cargo-doc on crate 'r4l_minimal_sample' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.3\n   Compiling winnow v0.7.9\n   Compiling toml_datetime v0.6.9\n   Compiling toml_write v0.1.1\n    Checking bit_field v0.10.2\n    Checking cfg-if v1.0.0\n   Compiling strsim v0.11.1\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.101\n   Compiling serde v1.0.219\n    Checking bitflags v1.3.2\n    Checking log v0.4.21\n    Checking raw-cpuid v10.7.0\n   Compiling rustversion v1.0.20\n   Compiling utf8parse v0.2.2\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.26\n   Compiling anstyle-parse v0.2.6\n   Compiling heck v0.5.0\n   Compiling autocfg v1.4.0\n   Compiling anstyle-query v1.1.2\n   Compiling anstyle v1.0.10\n   Compiling colorchoice v1.0.3\n   Compiling is_terminal_polyfill v1.70.1\n   Compiling anstream v0.6.18\n   Compiling lock_api v0.4.12\n   Compiling clap_lex v0.7.4\n    Checking bitflags v2.9.0\n   Compiling clap_builder v4.5.37\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking spin v0.9.8\n    Checking static_assertions v1.1.0\n   Compiling libc v0.2.172\n    Checking x86_64 v0.15.2\n   Compiling base64 v0.13.1\n   Compiling clap_derive v4.5.32\n   Compiling crate_interface v0.1.4\n   Compiling paste v1.0.15\n   Compiling unicode-width v0.1.14\n    Checking kernel_guard v0.1.2\n   Compiling svgbobdoc v0.3.0\n    Checking memory_addr v0.3.2\n    Checking const-default v1.0.0\n   Compiling axerrno v0.1.0\n   Compiling linkme-impl v0.3.32\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking rlsf v0.2.1\n    Checking kspin v0.1.0\n    Checking x86_64 v0.14.13\n    Checking bitmap-allocator v0.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling percpu v0.2.0\n    Checking bit v0.1.1\n   Compiling clap v4.5.37\n   Compiling axconfig-gen v0.1.0\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking page_table_entry v0.5.3\n   Compiling percpu_macros v0.2.0\n    Checking x2apic v0.4.3\n    Checking raw-cpuid v11.5.0\n   Compiling axconfig-gen-macros v0.1.0\n   Compiling fnv v1.0.7\n   Compiling ident_case v1.0.1\n   Compiling unicode-segmentation v1.12.0\n   Compiling darling_core v0.20.11\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling convert_case v0.7.1\n    Checking linkme v0.3.32\n    Checking page_table_multiarch v0.5.3\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling unicode-xid v0.2.6\n    Checking lazyinit v0.2.1\n    Checking handler_table v0.1.2\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bitmaps v3.2.1\n    Checking int_ratio v0.1.1\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking aarch64-cpu v9.4.0\n   Compiling derive_more-impl v2.0.1\n    Checking cpumask v0.1.0\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#8bed6725)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking timer_list v0.1.0\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git#7352c083)\n    Checking axtask v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n   Compiling strum_macros v0.27.1\n    Checking linux-raw-sys v0.9.4\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling darling_macro v0.20.11\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling darling v0.20.11\n   Compiling derive_builder_core v0.20.2\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling r4l-macros v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/macros)\nwarning: struct `Generics` is never constructed\n   --> /home/runner/check/batch_4/kern-crates/r4l/macros/src/helpers.rs:109:19\n    |\n109 | pub(crate) struct Generics {\n    |                   ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\nwarning: function `parse_generics` is never used\n   --> /home/runner/check/batch_4/kern-crates/r4l/macros/src/helpers.rs:128:15\n    |\n128 | pub(crate) fn parse_generics(input: TokenStream) -> (Generics, Vec<TokenTree>) {\n    |               ^^^^^^^^^^^^^^\n\nwarning: `r4l-macros` (lib) generated 2 warnings\n   Compiling derive_builder_macro v0.20.2\n    Checking derive_builder v0.20.2\n    Checking derive_more v2.0.1\n    Checking axtask v0.1.0 (https://github.com/Starry-OS/axtask.git#d41e0730)\n    Checking axsync v0.1.0 (https://github.com/Starry-OS/axsync.git#70651a7c)\n    Checking r4l v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/r4l)\nerror[E0432]: unresolved import `axhal::irq`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/os_api.rs:5:16\n   |\n5  |     use axhal::irq::register_handler;\n   |                ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0433]: failed to resolve: could not find `irq` in `axhal`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/os_api.rs:7:34\n   |\n7  |     pub type IrqHandler = axhal::irq::IrqHandler;\n   |                                  ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\nhelp: consider importing this module\n   |\n5  +     use crate::irq;\n   |\nhelp: if you import `irq`, refer to it directly\n   |\n7  -     pub type IrqHandler = axhal::irq::IrqHandler;\n7  +     pub type IrqHandler = irq::IrqHandler;\n   |\n\nwarning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/lib.rs:9:12\n  |\n9 | #![feature(generic_const_exprs)]\n  |            ^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\n  = note: `#[warn(incomplete_features)]` on by default\n\nwarning: the feature `generic_const_items` is incomplete and may not be safe to use and/or cause compiler crashes\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/lib.rs:10:12\n   |\n10 | #![feature(generic_const_items)]\n   |            ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #113521 <https://github.com/rust-lang/rust/issues/113521> for more information\n\nwarning: unused import: `crate::sync::Arc`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/bus.rs:7:5\n  |\n7 | use crate::sync::Arc;\n  |     ^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `core::ops::Deref`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/bus.rs:8:5\n  |\n8 | use core::ops::Deref;\n  |     ^^^^^^^^^^^^^^^^\n\nwarning: unused import: `crate::pr_info`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/device.rs:8:5\n  |\n8 | use crate::pr_info;\n  |     ^^^^^^^^^^^^^^\n\nwarning: unused import: `super::IdArray`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/driver/driver.rs:8:5\n  |\n8 | use super::IdArray;\n  |     ^^^^^^^^^^^^^^\n\nwarning: unused import: `super::DeviceId`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/of/platform.rs:3:5\n  |\n3 | use super::DeviceId;\n  |     ^^^^^^^^^^^^^^^\n\nwarning: unused import: `crate::pr_debug`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/of/platform.rs:6:5\n  |\n6 | use crate::pr_debug;\n  |     ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `module_platform_device`\n   --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:136:14\n    |\n136 | macro_rules! module_platform_device {\n    |              ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused variable: `e`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/init.rs:14:16\n   |\n14 |     if let Err(e) = crate::of::of_platform_default_populate_init() {\n   |                ^ help: if this is intentional, prefix it with an underscore: `_e`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\nwarning: unreachable pattern\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_bus.rs:49:21\n   |\n43 |                     Compatible(id) => {\n   |                     -------------- matches all the relevant values\n...\n49 |                     _ => panic!(\"invalid id table\"),\n   |                     ^ no value can reach this\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: unused variable: `this`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:40:17\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                 ^^^^ help: if this is intentional, prefix it with an underscore: `_this`\n\nwarning: unused variable: `name`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:40:34\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                  ^^^^ help: if this is intentional, prefix it with an underscore: `_name`\n\nwarning: unused variable: `module`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:40:55\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                                       ^^^^^^ help: if this is intentional, prefix it with an underscore: `_module`\n\nwarning: unused variable: `pdrv`\n   --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:111:19\n    |\n111 |     fn unregister(pdrv: &mut Self::RegType) {}\n    |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_pdrv`\n\nwarning: unused variable: `pdev`\n   --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:115:20\n    |\n115 |     fn get_id_info(pdev: &PlatformDevice) -> Option<&'static T::IdInfo> {\n    |                    ^^^^ help: if this is intentional, prefix it with an underscore: `_pdev`\n\nSome errors have detailed explanations: E0432, E0433.\nFor more information about an error, try `rustc --explain E0432`.\nwarning: `r4l` (lib) generated 17 warnings\nerror: could not compile `r4l` (lib) due to 2 previous errors; 17 warnings emitted\n\n-----\n\nerror: failed to build rustdoc for crate r4l_minimal_sample v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/kern-crates/r4l/drivers/sample/minimal --features default,no_global_oom_handling,starry &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate r4l_minimal_sample v0.1.0\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-04T03:03:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-04T03:03:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=r4l_minimal_sample, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_4/kern-crates/r4l/drivers/sample/minimal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-05-04 11:02:33.576633439 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building r4l_minimal_sample v0.1.0 (current)\nerror: running cargo-doc on crate 'r4l_minimal_sample' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.3\n   Compiling winnow v0.7.9\n   Compiling toml_datetime v0.6.9\n   Compiling toml_write v0.1.1\n    Checking bit_field v0.10.2\n    Checking cfg-if v1.0.0\n   Compiling strsim v0.11.1\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.101\n   Compiling serde v1.0.219\n    Checking bitflags v1.3.2\n    Checking log v0.4.21\n    Checking raw-cpuid v10.7.0\n   Compiling rustversion v1.0.20\n   Compiling utf8parse v0.2.2\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.26\n   Compiling anstyle-parse v0.2.6\n   Compiling heck v0.5.0\n   Compiling autocfg v1.4.0\n   Compiling anstyle-query v1.1.2\n   Compiling anstyle v1.0.10\n   Compiling colorchoice v1.0.3\n   Compiling is_terminal_polyfill v1.70.1\n   Compiling anstream v0.6.18\n   Compiling lock_api v0.4.12\n   Compiling clap_lex v0.7.4\n    Checking bitflags v2.9.0\n   Compiling clap_builder v4.5.37\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking spin v0.9.8\n    Checking static_assertions v1.1.0\n   Compiling libc v0.2.172\n    Checking x86_64 v0.15.2\n   Compiling base64 v0.13.1\n   Compiling clap_derive v4.5.32\n   Compiling crate_interface v0.1.4\n   Compiling paste v1.0.15\n   Compiling unicode-width v0.1.14\n    Checking kernel_guard v0.1.2\n   Compiling svgbobdoc v0.3.0\n    Checking memory_addr v0.3.2\n    Checking const-default v1.0.0\n   Compiling axerrno v0.1.0\n   Compiling linkme-impl v0.3.32\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking rlsf v0.2.1\n    Checking kspin v0.1.0\n    Checking x86_64 v0.14.13\n    Checking bitmap-allocator v0.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling percpu v0.2.0\n    Checking bit v0.1.1\n   Compiling clap v4.5.37\n   Compiling axconfig-gen v0.1.0\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking page_table_entry v0.5.3\n   Compiling percpu_macros v0.2.0\n    Checking x2apic v0.4.3\n    Checking raw-cpuid v11.5.0\n   Compiling axconfig-gen-macros v0.1.0\n   Compiling fnv v1.0.7\n   Compiling ident_case v1.0.1\n   Compiling unicode-segmentation v1.12.0\n   Compiling darling_core v0.20.11\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling convert_case v0.7.1\n    Checking linkme v0.3.32\n    Checking page_table_multiarch v0.5.3\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling unicode-xid v0.2.6\n    Checking lazyinit v0.2.1\n    Checking handler_table v0.1.2\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bitmaps v3.2.1\n    Checking int_ratio v0.1.1\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking aarch64-cpu v9.4.0\n   Compiling derive_more-impl v2.0.1\n    Checking cpumask v0.1.0\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#8bed6725)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking timer_list v0.1.0\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git#7352c083)\n    Checking axtask v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n   Compiling strum_macros v0.27.1\n    Checking linux-raw-sys v0.9.4\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling darling_macro v0.20.11\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling darling v0.20.11\n   Compiling derive_builder_core v0.20.2\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling r4l-macros v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/macros)\nwarning: struct `Generics` is never constructed\n   --> /home/runner/check/batch_4/kern-crates/r4l/macros/src/helpers.rs:109:19\n    |\n109 | pub(crate) struct Generics {\n    |                   ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\nwarning: function `parse_generics` is never used\n   --> /home/runner/check/batch_4/kern-crates/r4l/macros/src/helpers.rs:128:15\n    |\n128 | pub(crate) fn parse_generics(input: TokenStream) -> (Generics, Vec<TokenTree>) {\n    |               ^^^^^^^^^^^^^^\n\nwarning: `r4l-macros` (lib) generated 2 warnings\n   Compiling derive_builder_macro v0.20.2\n    Checking derive_builder v0.20.2\n    Checking derive_more v2.0.1\n    Checking axtask v0.1.0 (https://github.com/Starry-OS/axtask.git#d41e0730)\n    Checking axsync v0.1.0 (https://github.com/Starry-OS/axsync.git#70651a7c)\n    Checking r4l v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/r4l)\nerror[E0432]: unresolved import `axhal::irq`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/os_api.rs:5:16\n   |\n5  |     use axhal::irq::register_handler;\n   |                ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0433]: failed to resolve: could not find `irq` in `axhal`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/os_api.rs:7:34\n   |\n7  |     pub type IrqHandler = axhal::irq::IrqHandler;\n   |                                  ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\nhelp: consider importing this module\n   |\n5  +     use crate::irq;\n   |\nhelp: if you import `irq`, refer to it directly\n   |\n7  -     pub type IrqHandler = axhal::irq::IrqHandler;\n7  +     pub type IrqHandler = irq::IrqHandler;\n   |\n\nwarning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/lib.rs:9:12\n  |\n9 | #![feature(generic_const_exprs)]\n  |            ^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\n  = note: `#[warn(incomplete_features)]` on by default\n\nwarning: the feature `generic_const_items` is incomplete and may not be safe to use and/or cause compiler crashes\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/lib.rs:10:12\n   |\n10 | #![feature(generic_const_items)]\n   |            ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #113521 <https://github.com/rust-lang/rust/issues/113521> for more information\n\nwarning: unused import: `crate::sync::Arc`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/bus.rs:7:5\n  |\n7 | use crate::sync::Arc;\n  |     ^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `core::ops::Deref`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/bus.rs:8:5\n  |\n8 | use core::ops::Deref;\n  |     ^^^^^^^^^^^^^^^^\n\nwarning: unused import: `crate::pr_info`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/device.rs:8:5\n  |\n8 | use crate::pr_info;\n  |     ^^^^^^^^^^^^^^\n\nwarning: unused import: `super::IdArray`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/driver/driver.rs:8:5\n  |\n8 | use super::IdArray;\n  |     ^^^^^^^^^^^^^^\n\nwarning: unused import: `super::DeviceId`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/of/platform.rs:3:5\n  |\n3 | use super::DeviceId;\n  |     ^^^^^^^^^^^^^^^\n\nwarning: unused import: `crate::pr_debug`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/of/platform.rs:6:5\n  |\n6 | use crate::pr_debug;\n  |     ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `module_platform_device`\n   --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:136:14\n    |\n136 | macro_rules! module_platform_device {\n    |              ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused variable: `e`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/init.rs:14:16\n   |\n14 |     if let Err(e) = crate::of::of_platform_default_populate_init() {\n   |                ^ help: if this is intentional, prefix it with an underscore: `_e`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\nwarning: unreachable pattern\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_bus.rs:49:21\n   |\n43 |                     Compatible(id) => {\n   |                     -------------- matches all the relevant values\n...\n49 |                     _ => panic!(\"invalid id table\"),\n   |                     ^ no value can reach this\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: unused variable: `this`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:40:17\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                 ^^^^ help: if this is intentional, prefix it with an underscore: `_this`\n\nwarning: unused variable: `name`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:40:34\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                  ^^^^ help: if this is intentional, prefix it with an underscore: `_name`\n\nwarning: unused variable: `module`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:40:55\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                                       ^^^^^^ help: if this is intentional, prefix it with an underscore: `_module`\n\nwarning: unused variable: `pdrv`\n   --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:111:19\n    |\n111 |     fn unregister(pdrv: &mut Self::RegType) {}\n    |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_pdrv`\n\nwarning: unused variable: `pdev`\n   --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:115:20\n    |\n115 |     fn get_id_info(pdev: &PlatformDevice) -> Option<&'static T::IdInfo> {\n    |                    ^^^^ help: if this is intentional, prefix it with an underscore: `_pdev`\n\nSome errors have detailed explanations: E0432, E0433.\nFor more information about an error, try `rustc --explain E0432`.\nwarning: `r4l` (lib) generated 17 warnings\nerror: could not compile `r4l` (lib) due to 2 previous errors; 17 warnings emitted\n\n-----\n\nerror: failed to build rustdoc for crate r4l_minimal_sample v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/kern-crates/r4l/drivers/sample/minimal --features default,no_global_oom_handling,starry &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate r4l_minimal_sample v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "kern-crates",
      "repo": "r4l",
      "pkg": "r4l_platform_sample",
      "count": 52,
      "raw_reports": [
        {
          "file": "r4l/src/platform/platform_drv.rs",
          "features": "",
          "count": 16,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\n",
              "warning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\n",
              "warning: unused macro definition: `module_platform_device`\n   --> r4l/src/platform/platform_drv.rs:136:14\n    |\n136 | macro_rules! module_platform_device {\n    |              ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\n",
              "warning: unused variable: `this`\n  --> r4l/src/platform/platform_drv.rs:40:17\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                 ^^^^ help: if this is intentional, prefix it with an underscore: `_this`\n\n",
              "warning: unused variable: `name`\n  --> r4l/src/platform/platform_drv.rs:40:34\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                  ^^^^ help: if this is intentional, prefix it with an underscore: `_name`\n\n",
              "warning: unused variable: `module`\n  --> r4l/src/platform/platform_drv.rs:40:55\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                                       ^^^^^^ help: if this is intentional, prefix it with an underscore: `_module`\n\n",
              "warning: unused variable: `pdrv`\n   --> r4l/src/platform/platform_drv.rs:111:19\n    |\n111 |     fn unregister(pdrv: &mut Self::RegType) {}\n    |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_pdrv`\n\n",
              "warning: unused variable: `pdev`\n   --> r4l/src/platform/platform_drv.rs:115:20\n    |\n115 |     fn get_id_info(pdev: &PlatformDevice) -> Option<&'static T::IdInfo> {\n    |                    ^^^^ help: if this is intentional, prefix it with an underscore: `_pdev`\n\n"
            ],
            "Mirai": [
              "warning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\n",
              "warning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\n",
              "warning: unused macro definition: `module_platform_device`\n   --> r4l/src/platform/platform_drv.rs:136:14\n    |\n136 | macro_rules! module_platform_device {\n    |              ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\n",
              "warning: unused variable: `this`\n  --> r4l/src/platform/platform_drv.rs:40:17\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                 ^^^^ help: if this is intentional, prefix it with an underscore: `_this`\n\n",
              "warning: unused variable: `name`\n  --> r4l/src/platform/platform_drv.rs:40:34\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                  ^^^^ help: if this is intentional, prefix it with an underscore: `_name`\n\n",
              "warning: unused variable: `module`\n  --> r4l/src/platform/platform_drv.rs:40:55\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                                       ^^^^^^ help: if this is intentional, prefix it with an underscore: `_module`\n\n",
              "warning: unused variable: `pdrv`\n   --> r4l/src/platform/platform_drv.rs:111:19\n    |\n111 |     fn unregister(pdrv: &mut Self::RegType) {}\n    |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_pdrv`\n\n",
              "warning: unused variable: `pdev`\n   --> r4l/src/platform/platform_drv.rs:115:20\n    |\n115 |     fn get_id_info(pdev: &PlatformDevice) -> Option<&'static T::IdInfo> {\n    |                    ^^^^ help: if this is intentional, prefix it with an underscore: `_pdev`\n\n"
            ]
          }
        },
        {
          "file": "macros/src/helpers.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Mirai": [
              "warning: struct `Generics` is never constructed\n   --> macros/src/helpers.rs:109:19\n    |\n109 | pub(crate) struct Generics {\n    |                   ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: function `parse_generics` is never used\n   --> macros/src/helpers.rs:128:15\n    |\n128 | pub(crate) fn parse_generics(input: TokenStream) -> (Generics, Vec<TokenTree>) {\n    |               ^^^^^^^^^^^^^^\n\n"
            ],
            "Clippy(Warn)": [
              "warning: struct `Generics` is never constructed\n   --> macros/src/helpers.rs:109:19\n    |\n109 | pub(crate) struct Generics {\n    |                   ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: function `parse_generics` is never used\n   --> macros/src/helpers.rs:128:15\n    |\n128 | pub(crate) fn parse_generics(input: TokenStream) -> (Generics, Vec<TokenTree>) {\n    |               ^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/bus.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused import: `crate::sync::Arc`\n --> r4l/src/bus.rs:7:5\n  |\n7 | use crate::sync::Arc;\n  |     ^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n",
              "warning: unused import: `core::ops::Deref`\n --> r4l/src/bus.rs:8:5\n  |\n8 | use core::ops::Deref;\n  |     ^^^^^^^^^^^^^^^^\n\n"
            ],
            "Mirai": [
              "warning: unused import: `crate::sync::Arc`\n --> r4l/src/bus.rs:7:5\n  |\n7 | use crate::sync::Arc;\n  |     ^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n",
              "warning: unused import: `core::ops::Deref`\n --> r4l/src/bus.rs:8:5\n  |\n8 | use core::ops::Deref;\n  |     ^^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/irq/os_api.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `axhal::irq`\n  --> r4l/src/irq/os_api.rs:5:16\n   |\n5  |     use axhal::irq::register_handler;\n   |                ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\n\n",
              "error[E0433]: failed to resolve: could not find `irq` in `axhal`\n  --> r4l/src/irq/os_api.rs:7:34\n   |\n7  |     pub type IrqHandler = axhal::irq::IrqHandler;\n   |                                  ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\nhelp: consider importing this module\n   |\n5  +     use crate::irq;\n   |\nhelp: if you import `irq`, refer to it directly\n   |\n7  -     pub type IrqHandler = axhal::irq::IrqHandler;\n7  +     pub type IrqHandler = irq::IrqHandler;\n   |\n\n"
            ],
            "Mirai": [
              "error[E0432]: unresolved import `axhal::irq`\n  --> r4l/src/irq/os_api.rs:5:16\n   |\n5  |     use axhal::irq::register_handler;\n   |                ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\n\n",
              "error[E0433]: failed to resolve: could not find `irq` in `axhal`\n  --> r4l/src/irq/os_api.rs:7:34\n   |\n7  |     pub type IrqHandler = axhal::irq::IrqHandler;\n   |                                  ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\nhelp: consider importing this module\n   |\n5  +     use crate::irq;\n   |\nhelp: if you import `irq`, refer to it directly\n   |\n7  -     pub type IrqHandler = axhal::irq::IrqHandler;\n7  +     pub type IrqHandler = irq::IrqHandler;\n   |\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/lib.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Mirai": [
              "warning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\n --> r4l/src/lib.rs:9:12\n  |\n9 | #![feature(generic_const_exprs)]\n  |            ^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\n  = note: `#[warn(incomplete_features)]` on by default\n\n",
              "warning: the feature `generic_const_items` is incomplete and may not be safe to use and/or cause compiler crashes\n  --> r4l/src/lib.rs:10:12\n   |\n10 | #![feature(generic_const_items)]\n   |            ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #113521 <https://github.com/rust-lang/rust/issues/113521> for more information\n\n"
            ],
            "Clippy(Warn)": [
              "warning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\n --> r4l/src/lib.rs:9:12\n  |\n9 | #![feature(generic_const_exprs)]\n  |            ^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\n  = note: `#[warn(incomplete_features)]` on by default\n\n",
              "warning: the feature `generic_const_items` is incomplete and may not be safe to use and/or cause compiler crashes\n  --> r4l/src/lib.rs:10:12\n   |\n10 | #![feature(generic_const_items)]\n   |            ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #113521 <https://github.com/rust-lang/rust/issues/113521> for more information\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/of/platform.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Mirai": [
              "warning: unused import: `super::DeviceId`\n --> r4l/src/of/platform.rs:3:5\n  |\n3 | use super::DeviceId;\n  |     ^^^^^^^^^^^^^^^\n\n",
              "warning: unused import: `crate::pr_debug`\n --> r4l/src/of/platform.rs:6:5\n  |\n6 | use crate::pr_debug;\n  |     ^^^^^^^^^^^^^^^\n\n"
            ],
            "Clippy(Warn)": [
              "warning: unused import: `super::DeviceId`\n --> r4l/src/of/platform.rs:3:5\n  |\n3 | use super::DeviceId;\n  |     ^^^^^^^^^^^^^^^\n\n",
              "warning: unused import: `crate::pr_debug`\n --> r4l/src/of/platform.rs:6:5\n  |\n6 | use crate::pr_debug;\n  |     ^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/device.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused import: `crate::pr_info`\n --> r4l/src/device.rs:8:5\n  |\n8 | use crate::pr_info;\n  |     ^^^^^^^^^^^^^^\n\n"
            ],
            "Mirai": [
              "warning: unused import: `crate::pr_info`\n --> r4l/src/device.rs:8:5\n  |\n8 | use crate::pr_info;\n  |     ^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/driver/driver.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Mirai": [
              "warning: unused import: `super::IdArray`\n --> r4l/src/driver/driver.rs:8:5\n  |\n8 | use super::IdArray;\n  |     ^^^^^^^^^^^^^^\n\n"
            ],
            "Clippy(Warn)": [
              "warning: unused import: `super::IdArray`\n --> r4l/src/driver/driver.rs:8:5\n  |\n8 | use super::IdArray;\n  |     ^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/init.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Mirai": [
              "warning: unused variable: `e`\n  --> r4l/src/init.rs:14:16\n   |\n14 |     if let Err(e) = crate::of::of_platform_default_populate_init() {\n   |                ^ help: if this is intentional, prefix it with an underscore: `_e`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"
            ],
            "Clippy(Warn)": [
              "warning: unused variable: `e`\n  --> r4l/src/init.rs:14:16\n   |\n14 |     if let Err(e) = crate::of::of_platform_default_populate_init() {\n   |                ^ help: if this is intentional, prefix it with an underscore: `_e`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "r4l/src/platform/platform_bus.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Mirai": [
              "warning: unreachable pattern\n  --> r4l/src/platform/platform_bus.rs:49:21\n   |\n43 |                     Compatible(id) => {\n   |                     -------------- matches all the relevant values\n...\n49 |                     _ => panic!(\"invalid id table\"),\n   |                     ^ no value can reach this\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\n"
            ],
            "Clippy(Warn)": [
              "warning: unreachable pattern\n  --> r4l/src/platform/platform_bus.rs:49:21\n   |\n43 |                     Compatible(id) => {\n   |                     -------------- matches all the relevant values\n...\n49 |                     _ => panic!(\"invalid id table\"),\n   |                     ^ no value can reach this\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_4/kern-crates/r4l/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   ├── axhal 0.1.0\n│   │   ├── r4l 0.1.0\n│   │   │   ├── r4l_platform_sample 0.1.0\n│   │   │   ├── r4l_minimal_sample 0.1.0\n│   │   │   └── ax88796b 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   ├── r4l 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       └── r4l 0.1.0\n│   │   └── axsync 0.1.0\n│   └── axhal 0.1.0\n│       ├── axtask 0.1.0\n│       │   └── axsignal 0.1.0\n│       │       └── axtask 0.1.0\n│       └── axsignal 0.1.0\n└── riscv 0.12.1\n    ├── page_table_multiarch 0.5.3\n    │   └── axhal 0.1.0\n    └── axhal 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 772,\n    \"last-commit\": \"4584ad9a5ea16ce196317cf4d3593e974fb4a8a1\",\n    \"last-updated\": \"2025-05-02T10:23:27+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 159\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=r4l_platform_sample, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/kern-crates/r4l/drivers/sample/platform\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-05-04 11:01:15.919755688 +08:00:00\n    Checking r4l v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/r4l)\nerror: could not compile `r4l` (lib) due to 2 previous errors; 17 warnings emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=r4l_platform_sample, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/kern-crates/r4l/drivers/sample/platform\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 11:03:52.172497902 +08:00:00\n[2025-05-04T03:03:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-04T03:03:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\nwarning: struct `Generics` is never constructed\n   --> macros/src/helpers.rs:109:19\n    |\n109 | pub(crate) struct Generics {\n    |                   ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\nwarning: function `parse_generics` is never used\n   --> macros/src/helpers.rs:128:15\n    |\n128 | pub(crate) fn parse_generics(input: TokenStream) -> (Generics, Vec<TokenTree>) {\n    |               ^^^^^^^^^^^^^^\n\nwarning: `r4l-macros` (lib) generated 2 warnings\n   Compiling r4l v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/r4l)\nerror[E0432]: unresolved import `axhal::irq`\n  --> r4l/src/irq/os_api.rs:5:16\n   |\n5  |     use axhal::irq::register_handler;\n   |                ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0433]: failed to resolve: could not find `irq` in `axhal`\n  --> r4l/src/irq/os_api.rs:7:34\n   |\n7  |     pub type IrqHandler = axhal::irq::IrqHandler;\n   |                                  ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\nhelp: consider importing this module\n   |\n5  +     use crate::irq;\n   |\nhelp: if you import `irq`, refer to it directly\n   |\n7  -     pub type IrqHandler = axhal::irq::IrqHandler;\n7  +     pub type IrqHandler = irq::IrqHandler;\n   |\n\nwarning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\n --> r4l/src/lib.rs:9:12\n  |\n9 | #![feature(generic_const_exprs)]\n  |            ^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\n  = note: `#[warn(incomplete_features)]` on by default\n\nwarning: the feature `generic_const_items` is incomplete and may not be safe to use and/or cause compiler crashes\n  --> r4l/src/lib.rs:10:12\n   |\n10 | #![feature(generic_const_items)]\n   |            ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #113521 <https://github.com/rust-lang/rust/issues/113521> for more information\n\nwarning: unused import: `crate::sync::Arc`\n --> r4l/src/bus.rs:7:5\n  |\n7 | use crate::sync::Arc;\n  |     ^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `core::ops::Deref`\n --> r4l/src/bus.rs:8:5\n  |\n8 | use core::ops::Deref;\n  |     ^^^^^^^^^^^^^^^^\n\nwarning: unused import: `crate::pr_info`\n --> r4l/src/device.rs:8:5\n  |\n8 | use crate::pr_info;\n  |     ^^^^^^^^^^^^^^\n\nwarning: unused import: `super::IdArray`\n --> r4l/src/driver/driver.rs:8:5\n  |\n8 | use super::IdArray;\n  |     ^^^^^^^^^^^^^^\n\nwarning: unused import: `super::DeviceId`\n --> r4l/src/of/platform.rs:3:5\n  |\n3 | use super::DeviceId;\n  |     ^^^^^^^^^^^^^^^\n\nwarning: unused import: `crate::pr_debug`\n --> r4l/src/of/platform.rs:6:5\n  |\n6 | use crate::pr_debug;\n  |     ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `module_platform_device`\n   --> r4l/src/platform/platform_drv.rs:136:14\n    |\n136 | macro_rules! module_platform_device {\n    |              ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused variable: `e`\n  --> r4l/src/init.rs:14:16\n   |\n14 |     if let Err(e) = crate::of::of_platform_default_populate_init() {\n   |                ^ help: if this is intentional, prefix it with an underscore: `_e`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\nwarning: unreachable pattern\n  --> r4l/src/platform/platform_bus.rs:49:21\n   |\n43 |                     Compatible(id) => {\n   |                     -------------- matches all the relevant values\n...\n49 |                     _ => panic!(\"invalid id table\"),\n   |                     ^ no value can reach this\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: unused variable: `this`\n  --> r4l/src/platform/platform_drv.rs:40:17\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                 ^^^^ help: if this is intentional, prefix it with an underscore: `_this`\n\nwarning: unused variable: `name`\n  --> r4l/src/platform/platform_drv.rs:40:34\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                  ^^^^ help: if this is intentional, prefix it with an underscore: `_name`\n\nwarning: unused variable: `module`\n  --> r4l/src/platform/platform_drv.rs:40:55\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                                       ^^^^^^ help: if this is intentional, prefix it with an underscore: `_module`\n\nwarning: unused variable: `pdrv`\n   --> r4l/src/platform/platform_drv.rs:111:19\n    |\n111 |     fn unregister(pdrv: &mut Self::RegType) {}\n    |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_pdrv`\n\nwarning: unused variable: `pdev`\n   --> r4l/src/platform/platform_drv.rs:115:20\n    |\n115 |     fn get_id_info(pdev: &PlatformDevice) -> Option<&'static T::IdInfo> {\n    |                    ^^^^ help: if this is intentional, prefix it with an underscore: `_pdev`\n\nSome errors have detailed explanations: E0432, E0433.\nFor more information about an error, try `rustc --explain E0432`.\nwarning: `r4l` (lib) generated 17 warnings\nerror: could not compile `r4l` (lib) due to 2 previous errors; 17 warnings emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=r4l_platform_sample, checker=Mirai\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/kern-crates/r4l/drivers/sample/platform\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 11:03:21.219332378 +08:00:00\n    Checking r4l v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/r4l)\nerror: could not compile `r4l` (lib) due to 2 previous errors; 17 warnings emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=r4l_platform_sample, checker=Rapx\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/kern-crates/r4l/drivers/sample/platform\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 11:03:54.441525993 +08:00:00\n    Updating crates.io index\nerror: failed to get `taskctx` as a dependency of package `axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#8bed6725)`\n    ... which satisfies git dependency `axhal` (locked to 0.1.0) of package `r4l v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/r4l)`\n    ... which satisfies path dependency `kernel` (locked to 0.1.0) of package `ax88796b v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/drivers/net/phy/ax88796b)`\n\nCaused by:\n  failed to load source for dependency `taskctx`\n\nCaused by:\n  Unable to update https://github.com/Starry-OS/taskctx.git#bee485a8\n\nCaused by:\n  failed to parse manifest at `/home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/bee485a/Cargo.toml`\n\nCaused by:\n  feature `edition2024` is required\n\n  The package requires the Cargo feature called `edition2024`, but that feature is not stabilized in this version of Cargo (1.83.0-nightly (15fbd2f60 2024-10-08)).\n  Consider trying a more recent nightly release.\n  See https://doc.rust-lang.org/nightly/cargo/reference/unstable.html#edition-2024 for more information about the status of this feature.\n03:03:54|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=r4l_platform_sample, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/kern-crates/r4l/drivers/sample/platform\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 11:02:33.583401294 +08:00:00\n    Building r4l_platform_sample v0.1.0 (current)\nerror: running cargo-doc on crate 'r4l_platform_sample' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.3\n   Compiling toml_datetime v0.6.9\n   Compiling winnow v0.7.9\n   Compiling toml_write v0.1.1\n    Checking bit_field v0.10.2\n   Compiling strsim v0.11.1\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.101\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\n   Compiling serde v1.0.219\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling utf8parse v0.2.2\n   Compiling x86 v0.52.0\n   Compiling rustversion v1.0.20\n   Compiling toml_edit v0.22.26\n   Compiling anstyle-parse v0.2.6\n   Compiling anstyle v1.0.10\n   Compiling is_terminal_polyfill v1.70.1\n   Compiling heck v0.5.0\n   Compiling autocfg v1.4.0\n   Compiling anstyle-query v1.1.2\n   Compiling colorchoice v1.0.3\n   Compiling anstream v0.6.18\n   Compiling lock_api v0.4.12\n    Checking bitflags v2.9.0\n   Compiling clap_lex v0.7.4\n   Compiling clap_builder v4.5.37\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n    Checking volatile v0.4.6\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking spin v0.9.8\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking static_assertions v1.1.0\n   Compiling libc v0.2.172\n    Checking x86_64 v0.15.2\n   Compiling paste v1.0.15\n   Compiling clap_derive v4.5.32\n   Compiling crate_interface v0.1.4\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking kernel_guard v0.1.2\n   Compiling svgbobdoc v0.3.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n   Compiling linkme-impl v0.3.32\n    Checking const-default v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking rlsf v0.2.1\n    Checking kspin v0.1.0\n    Checking x86_64 v0.14.13\n    Checking bitmap-allocator v0.2.0\n   Compiling percpu v0.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bit v0.1.1\n   Compiling clap v4.5.37\n   Compiling axconfig-gen v0.1.0\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking page_table_entry v0.5.3\n   Compiling percpu_macros v0.2.0\n    Checking x2apic v0.4.3\n    Checking raw-cpuid v11.5.0\n   Compiling axconfig-gen-macros v0.1.0\n   Compiling ident_case v1.0.1\n   Compiling unicode-segmentation v1.12.0\n   Compiling fnv v1.0.7\n   Compiling darling_core v0.20.11\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling convert_case v0.7.1\n    Checking linkme v0.3.32\n    Checking page_table_multiarch v0.5.3\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling unicode-xid v0.2.6\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazyinit v0.2.1\n    Checking tock-registers v0.8.1\n    Checking handler_table v0.1.2\n    Checking int_ratio v0.1.1\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking bitmaps v3.2.1\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking aarch64-cpu v9.4.0\n   Compiling derive_more-impl v2.0.1\n    Checking cpumask v0.1.0\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#8bed6725)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git#7352c083)\n    Checking timer_list v0.1.0\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking axtask v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n   Compiling strum_macros v0.27.1\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking linux-raw-sys v0.9.4\n   Compiling darling_macro v0.20.11\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling darling v0.20.11\n   Compiling derive_builder_core v0.20.2\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling r4l-macros v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/macros)\nwarning: struct `Generics` is never constructed\n   --> /home/runner/check/batch_4/kern-crates/r4l/macros/src/helpers.rs:109:19\n    |\n109 | pub(crate) struct Generics {\n    |                   ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\nwarning: function `parse_generics` is never used\n   --> /home/runner/check/batch_4/kern-crates/r4l/macros/src/helpers.rs:128:15\n    |\n128 | pub(crate) fn parse_generics(input: TokenStream) -> (Generics, Vec<TokenTree>) {\n    |               ^^^^^^^^^^^^^^\n\nwarning: `r4l-macros` (lib) generated 2 warnings\n   Compiling derive_builder_macro v0.20.2\n    Checking derive_builder v0.20.2\n    Checking derive_more v2.0.1\n    Checking axtask v0.1.0 (https://github.com/Starry-OS/axtask.git#d41e0730)\n    Checking axsync v0.1.0 (https://github.com/Starry-OS/axsync.git#70651a7c)\n    Checking r4l v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/r4l)\nerror[E0432]: unresolved import `axhal::irq`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/os_api.rs:5:16\n   |\n5  |     use axhal::irq::register_handler;\n   |                ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0433]: failed to resolve: could not find `irq` in `axhal`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/os_api.rs:7:34\n   |\n7  |     pub type IrqHandler = axhal::irq::IrqHandler;\n   |                                  ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\nhelp: consider importing this module\n   |\n5  +     use crate::irq;\n   |\nhelp: if you import `irq`, refer to it directly\n   |\n7  -     pub type IrqHandler = axhal::irq::IrqHandler;\n7  +     pub type IrqHandler = irq::IrqHandler;\n   |\n\nwarning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/lib.rs:9:12\n  |\n9 | #![feature(generic_const_exprs)]\n  |            ^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\n  = note: `#[warn(incomplete_features)]` on by default\n\nwarning: the feature `generic_const_items` is incomplete and may not be safe to use and/or cause compiler crashes\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/lib.rs:10:12\n   |\n10 | #![feature(generic_const_items)]\n   |            ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #113521 <https://github.com/rust-lang/rust/issues/113521> for more information\n\nwarning: unused import: `crate::sync::Arc`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/bus.rs:7:5\n  |\n7 | use crate::sync::Arc;\n  |     ^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `core::ops::Deref`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/bus.rs:8:5\n  |\n8 | use core::ops::Deref;\n  |     ^^^^^^^^^^^^^^^^\n\nwarning: unused import: `crate::pr_info`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/device.rs:8:5\n  |\n8 | use crate::pr_info;\n  |     ^^^^^^^^^^^^^^\n\nwarning: unused import: `super::IdArray`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/driver/driver.rs:8:5\n  |\n8 | use super::IdArray;\n  |     ^^^^^^^^^^^^^^\n\nwarning: unused import: `super::DeviceId`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/of/platform.rs:3:5\n  |\n3 | use super::DeviceId;\n  |     ^^^^^^^^^^^^^^^\n\nwarning: unused import: `crate::pr_debug`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/of/platform.rs:6:5\n  |\n6 | use crate::pr_debug;\n  |     ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `module_platform_device`\n   --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:136:14\n    |\n136 | macro_rules! module_platform_device {\n    |              ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused variable: `e`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/init.rs:14:16\n   |\n14 |     if let Err(e) = crate::of::of_platform_default_populate_init() {\n   |                ^ help: if this is intentional, prefix it with an underscore: `_e`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\nwarning: unreachable pattern\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_bus.rs:49:21\n   |\n43 |                     Compatible(id) => {\n   |                     -------------- matches all the relevant values\n...\n49 |                     _ => panic!(\"invalid id table\"),\n   |                     ^ no value can reach this\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: unused variable: `this`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:40:17\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                 ^^^^ help: if this is intentional, prefix it with an underscore: `_this`\n\nwarning: unused variable: `name`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:40:34\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                  ^^^^ help: if this is intentional, prefix it with an underscore: `_name`\n\nwarning: unused variable: `module`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:40:55\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                                       ^^^^^^ help: if this is intentional, prefix it with an underscore: `_module`\n\nwarning: unused variable: `pdrv`\n   --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:111:19\n    |\n111 |     fn unregister(pdrv: &mut Self::RegType) {}\n    |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_pdrv`\n\nwarning: unused variable: `pdev`\n   --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:115:20\n    |\n115 |     fn get_id_info(pdev: &PlatformDevice) -> Option<&'static T::IdInfo> {\n    |                    ^^^^ help: if this is intentional, prefix it with an underscore: `_pdev`\n\nSome errors have detailed explanations: E0432, E0433.\nFor more information about an error, try `rustc --explain E0432`.\nwarning: `r4l` (lib) generated 17 warnings\nerror: could not compile `r4l` (lib) due to 2 previous errors; 17 warnings emitted\n\n-----\n\nerror: failed to build rustdoc for crate r4l_platform_sample v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/kern-crates/r4l/drivers/sample/platform --features default,no_global_oom_handling,starry &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate r4l_platform_sample v0.1.0\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-04T03:03:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-04T03:03:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=r4l_platform_sample, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_4/kern-crates/r4l/drivers/sample/platform\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-05-04 11:02:55.328555609 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building r4l_platform_sample v0.1.0 (current)\nerror: running cargo-doc on crate 'r4l_platform_sample' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.3\n   Compiling toml_datetime v0.6.9\n   Compiling winnow v0.7.9\n   Compiling toml_write v0.1.1\n    Checking bit_field v0.10.2\n   Compiling strsim v0.11.1\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.101\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\n   Compiling serde v1.0.219\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling utf8parse v0.2.2\n   Compiling x86 v0.52.0\n   Compiling rustversion v1.0.20\n   Compiling toml_edit v0.22.26\n   Compiling anstyle-parse v0.2.6\n   Compiling anstyle v1.0.10\n   Compiling is_terminal_polyfill v1.70.1\n   Compiling heck v0.5.0\n   Compiling autocfg v1.4.0\n   Compiling anstyle-query v1.1.2\n   Compiling colorchoice v1.0.3\n   Compiling anstream v0.6.18\n   Compiling lock_api v0.4.12\n    Checking bitflags v2.9.0\n   Compiling clap_lex v0.7.4\n   Compiling clap_builder v4.5.37\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n    Checking volatile v0.4.6\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking spin v0.9.8\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking static_assertions v1.1.0\n   Compiling libc v0.2.172\n    Checking x86_64 v0.15.2\n   Compiling paste v1.0.15\n   Compiling clap_derive v4.5.32\n   Compiling crate_interface v0.1.4\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking kernel_guard v0.1.2\n   Compiling svgbobdoc v0.3.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n   Compiling linkme-impl v0.3.32\n    Checking const-default v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking rlsf v0.2.1\n    Checking kspin v0.1.0\n    Checking x86_64 v0.14.13\n    Checking bitmap-allocator v0.2.0\n   Compiling percpu v0.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bit v0.1.1\n   Compiling clap v4.5.37\n   Compiling axconfig-gen v0.1.0\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking page_table_entry v0.5.3\n   Compiling percpu_macros v0.2.0\n    Checking x2apic v0.4.3\n    Checking raw-cpuid v11.5.0\n   Compiling axconfig-gen-macros v0.1.0\n   Compiling ident_case v1.0.1\n   Compiling unicode-segmentation v1.12.0\n   Compiling fnv v1.0.7\n   Compiling darling_core v0.20.11\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling convert_case v0.7.1\n    Checking linkme v0.3.32\n    Checking page_table_multiarch v0.5.3\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n   Compiling unicode-xid v0.2.6\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazyinit v0.2.1\n    Checking tock-registers v0.8.1\n    Checking handler_table v0.1.2\n    Checking int_ratio v0.1.1\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking bitmaps v3.2.1\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking aarch64-cpu v9.4.0\n   Compiling derive_more-impl v2.0.1\n    Checking cpumask v0.1.0\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#8bed6725)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git#7352c083)\n    Checking timer_list v0.1.0\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking axtask v0.1.0 (https://github.com/oscomp/arceos.git#b8434b45)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n   Compiling strum_macros v0.27.1\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking linux-raw-sys v0.9.4\n   Compiling darling_macro v0.20.11\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling darling v0.20.11\n   Compiling derive_builder_core v0.20.2\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling r4l-macros v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/macros)\nwarning: struct `Generics` is never constructed\n   --> /home/runner/check/batch_4/kern-crates/r4l/macros/src/helpers.rs:109:19\n    |\n109 | pub(crate) struct Generics {\n    |                   ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\nwarning: function `parse_generics` is never used\n   --> /home/runner/check/batch_4/kern-crates/r4l/macros/src/helpers.rs:128:15\n    |\n128 | pub(crate) fn parse_generics(input: TokenStream) -> (Generics, Vec<TokenTree>) {\n    |               ^^^^^^^^^^^^^^\n\nwarning: `r4l-macros` (lib) generated 2 warnings\n   Compiling derive_builder_macro v0.20.2\n    Checking derive_builder v0.20.2\n    Checking derive_more v2.0.1\n    Checking axtask v0.1.0 (https://github.com/Starry-OS/axtask.git#d41e0730)\n    Checking axsync v0.1.0 (https://github.com/Starry-OS/axsync.git#70651a7c)\n    Checking r4l v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/r4l)\nerror[E0432]: unresolved import `axhal::irq`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/os_api.rs:5:16\n   |\n5  |     use axhal::irq::register_handler;\n   |                ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0433]: failed to resolve: could not find `irq` in `axhal`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/irq/os_api.rs:7:34\n   |\n7  |     pub type IrqHandler = axhal::irq::IrqHandler;\n   |                                  ^^^ could not find `irq` in `axhal`\n   |\nnote: found an item that was configured out\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:53:9\n   |\n53 | pub mod irq;\n   |         ^^^\nnote: the item is gated behind the `irq` feature\n  --> /home/runner/.cargo/git/checkouts/axhal-119c43838a5d3216/8bed672/src/lib.rs:52:7\n   |\n52 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^\nhelp: consider importing this module\n   |\n5  +     use crate::irq;\n   |\nhelp: if you import `irq`, refer to it directly\n   |\n7  -     pub type IrqHandler = axhal::irq::IrqHandler;\n7  +     pub type IrqHandler = irq::IrqHandler;\n   |\n\nwarning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/lib.rs:9:12\n  |\n9 | #![feature(generic_const_exprs)]\n  |            ^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\n  = note: `#[warn(incomplete_features)]` on by default\n\nwarning: the feature `generic_const_items` is incomplete and may not be safe to use and/or cause compiler crashes\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/lib.rs:10:12\n   |\n10 | #![feature(generic_const_items)]\n   |            ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #113521 <https://github.com/rust-lang/rust/issues/113521> for more information\n\nwarning: unused import: `crate::sync::Arc`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/bus.rs:7:5\n  |\n7 | use crate::sync::Arc;\n  |     ^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `core::ops::Deref`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/bus.rs:8:5\n  |\n8 | use core::ops::Deref;\n  |     ^^^^^^^^^^^^^^^^\n\nwarning: unused import: `crate::pr_info`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/device.rs:8:5\n  |\n8 | use crate::pr_info;\n  |     ^^^^^^^^^^^^^^\n\nwarning: unused import: `super::IdArray`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/driver/driver.rs:8:5\n  |\n8 | use super::IdArray;\n  |     ^^^^^^^^^^^^^^\n\nwarning: unused import: `super::DeviceId`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/of/platform.rs:3:5\n  |\n3 | use super::DeviceId;\n  |     ^^^^^^^^^^^^^^^\n\nwarning: unused import: `crate::pr_debug`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/of/platform.rs:6:5\n  |\n6 | use crate::pr_debug;\n  |     ^^^^^^^^^^^^^^^\n\nwarning: unused imports: `driver::IdArray` and `driver::IdTable`\n --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:5:32\n  |\n5 |     device::DeviceOps, driver, driver::IdArray, driver::IdTable, error::*, of, prelude::*,\n  |                                ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `module_platform_device`\n   --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:136:14\n    |\n136 | macro_rules! module_platform_device {\n    |              ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused variable: `e`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/init.rs:14:16\n   |\n14 |     if let Err(e) = crate::of::of_platform_default_populate_init() {\n   |                ^ help: if this is intentional, prefix it with an underscore: `_e`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\nwarning: unreachable pattern\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_bus.rs:49:21\n   |\n43 |                     Compatible(id) => {\n   |                     -------------- matches all the relevant values\n...\n49 |                     _ => panic!(\"invalid id table\"),\n   |                     ^ no value can reach this\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: unused variable: `this`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:40:17\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                 ^^^^ help: if this is intentional, prefix it with an underscore: `_this`\n\nwarning: unused variable: `name`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:40:34\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                  ^^^^ help: if this is intentional, prefix it with an underscore: `_name`\n\nwarning: unused variable: `module`\n  --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:40:55\n   |\n40 |     fn register(this: Arc<Self>, name: &'static CStr, module: &'static ThisModule) -> Result {\n   |                                                       ^^^^^^ help: if this is intentional, prefix it with an underscore: `_module`\n\nwarning: unused variable: `pdrv`\n   --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:111:19\n    |\n111 |     fn unregister(pdrv: &mut Self::RegType) {}\n    |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_pdrv`\n\nwarning: unused variable: `pdev`\n   --> /home/runner/check/batch_4/kern-crates/r4l/r4l/src/platform/platform_drv.rs:115:20\n    |\n115 |     fn get_id_info(pdev: &PlatformDevice) -> Option<&'static T::IdInfo> {\n    |                    ^^^^ help: if this is intentional, prefix it with an underscore: `_pdev`\n\nSome errors have detailed explanations: E0432, E0433.\nFor more information about an error, try `rustc --explain E0432`.\nwarning: `r4l` (lib) generated 17 warnings\nerror: could not compile `r4l` (lib) due to 2 previous errors; 17 warnings emitted\n\n-----\n\nerror: failed to build rustdoc for crate r4l_platform_sample v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/kern-crates/r4l/drivers/sample/platform --features default,no_global_oom_handling,starry &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate r4l_platform_sample v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "kern-crates",
      "repo": "r4l",
      "pkg": "r4l-macros",
      "count": 8,
      "raw_reports": [
        {
          "file": "macros/src/helpers.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: struct `Generics` is never constructed\n   --> macros/src/helpers.rs:109:19\n    |\n109 | pub(crate) struct Generics {\n    |                   ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: function `parse_generics` is never used\n   --> macros/src/helpers.rs:128:15\n    |\n128 | pub(crate) fn parse_generics(input: TokenStream) -> (Generics, Vec<TokenTree>) {\n    |               ^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "src/helpers.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_4/kern-crates/r4l/macros/src/helpers.rs (original lines from 62 to 62)\n-        \"core\"     => \".initcall1.init\".to_string(),\n+        \"core\" => \".initcall1.init\".to_string(),\n",
              "file: /home/runner/check/batch_4/kern-crates/r4l/macros/src/helpers.rs (original lines from 64 to 68)\n-        \"arch\"     => \".initcall3.init\".to_string(),\n-        \"subsys\"   => \".initcall4.init\".to_string(),\n-        \"fs\"       => \".initcall5.init\".to_string(),\n-        \"device\"   => \".initcall6.init\".to_string(),\n-        \"late\"     => \".initcall7.init\".to_string(),\n+        \"arch\" => \".initcall3.init\".to_string(),\n+        \"subsys\" => \".initcall4.init\".to_string(),\n+        \"fs\" => \".initcall5.init\".to_string(),\n+        \"device\" => \".initcall6.init\".to_string(),\n+        \"late\" => \".initcall7.init\".to_string(),\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=r4l-macros, checker=Rapx\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/kern-crates/r4l/macros\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 11:03:53.735670735 +08:00:00\n    Updating crates.io index\nerror: failed to get `taskctx` as a dependency of package `axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#8bed6725)`\n    ... which satisfies git dependency `axhal` (locked to 0.1.0) of package `r4l v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/r4l)`\n    ... which satisfies path dependency `kernel` (locked to 0.1.0) of package `ax88796b v0.1.0 (/home/runner/check/batch_4/kern-crates/r4l/drivers/net/phy/ax88796b)`\n\nCaused by:\n  failed to load source for dependency `taskctx`\n\nCaused by:\n  Unable to update https://github.com/Starry-OS/taskctx.git#bee485a8\n\nCaused by:\n  failed to parse manifest at `/home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/bee485a/Cargo.toml`\n\nCaused by:\n  feature `edition2024` is required\n\n  The package requires the Cargo feature called `edition2024`, but that feature is not stabilized in this version of Cargo (1.83.0-nightly (15fbd2f60 2024-10-08)).\n  Consider trying a more recent nightly release.\n  See https://doc.rust-lang.org/nightly/cargo/reference/unstable.html#edition-2024 for more information about the status of this feature.\n03:03:54|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=r4l-macros, checker=Outdated\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_4/kern-crates/r4l/macros\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-04 11:04:48.568784317 +08:00:00\n\nName  Project  Compat  Latest   Kind    Platform\n----  -------  ------  ------   ----    --------\nsyn   1.0.109  ---     2.0.101  Normal  ---\n"
            ]
          }
        },
        {
          "file": "macros/src/module.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: field assignment outside of initializer for an instance created with Default::default()\n  --> macros/src/module.rs:38:9\n   |\n38 |         info.initcall = \".initcall6.init\".to_string();\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: consider initializing the variable with `module::ModuleInfo { initcall: \".initcall6.init\".to_string(), ..Default::default() }` and removing relevant reassignments\n  --> macros/src/module.rs:37:9\n   |\n37 |         let mut info = ModuleInfo::default();\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default\n   = note: `#[warn(clippy::field_reassign_with_default)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "src/module.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_4/kern-crates/r4l/macros/src/module.rs (original lines from 40 to 41)\n-        const EXPECTED_KEYS: &[&str] =\n-            &[\"type\", \"name\", \"author\", \"description\", \"license\", \"initcall\", \"alias\"];\n+        const EXPECTED_KEYS: &[&str] = &[\n+            \"type\",\n+            \"name\",\n+            \"author\",\n+            \"description\",\n+            \"license\",\n+            \"initcall\",\n+            \"alias\",\n+        ];\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}