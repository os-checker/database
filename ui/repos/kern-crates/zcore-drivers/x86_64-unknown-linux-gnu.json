{
  "repo": {
    "user": "kern-crates",
    "repo": "zcore-drivers"
  },
  "data": [
    {
      "user": "kern-crates",
      "repo": "zcore-drivers",
      "pkg": "zcore-drivers",
      "count": 51,
      "raw_reports": [
        {
          "file": "src/bus/pci.rs",
          "features": "",
          "count": 7,
          "kinds": {
            "Clippy(Error)": [
              "error: unexpected `cfg` condition value: `board_malta`\n  --> src/bus/pci.rs:56:7\n   |\n56 | #[cfg(feature = \"board_malta\")]\n   |       ^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `feature` are: `allwinner`, `async-std`, `board-qemu`, `d1-pac`, `fu740`, `graphic`, `loopback`, `mock`, `no-pci`, `rcore-console`, `sdl2`, `virtio`, and `virtio-drivers`\n   = help: consider adding `board_malta` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\nnote: the lint level is defined here\n  --> src/lib.rs:4:9\n   |\n4  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(unexpected_cfgs)]` implied by `#[deny(warnings)]`\n\n",
              "error: variables can be used directly in the `format!` string\n   --> src/bus/pci.rs:151:9\n    |\n151 |         debug!(\"PCI device has cap id {} at {:#X}\", cap_id, cap_ptr);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n    = note: `#[deny(clippy::uninlined_format_args)]` implied by `#[deny(warnings)]`\nhelp: change this to\n    |\n151 -         debug!(\"PCI device has cap id {} at {:#X}\", cap_id, cap_ptr);\n151 +         debug!(\"PCI device has cap id {cap_id} at {cap_ptr:#X}\");\n    |\n\n",
              "error: variables can be used directly in the `format!` string\n   --> src/bus/pci.rs:214:17\n    |\n214 |                 info!(\"Found ixgbe dev {:#x}, irq: {:?}\", vaddr, irq);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n214 -                 info!(\"Found ixgbe dev {:#x}, irq: {:?}\", vaddr, irq);\n214 +                 info!(\"Found ixgbe dev {vaddr:#x}, irq: {irq:?}\");\n    |\n\n",
              "error: variables can be used directly in the `format!` string\n   --> src/bus/pci.rs:228:17\n    |\n228 |                 info!(\"DEV: {:?}, BAR0: {:#x}\", dev, addr);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n228 -                 info!(\"DEV: {:?}, BAR0: {:#x}\", dev, addr);\n228 +                 info!(\"DEV: {dev:?}, BAR0: {addr:#x}\");\n    |\n\n",
              "error: variables can be used directly in the `format!` string\n   --> src/bus/pci.rs:234:17\n    |\n234 | /                 info!(\n235 | |                     \"Found Intel I211 ethernet controller dev {:?}, addr: {:x?}\",\n236 | |                     dev, addr\n237 | |                 );\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
              "error: variables can be used directly in the `format!` string\n   --> src/bus/pci.rs:247:13\n    |\n247 |             info!(\"Found AHCI dev {:?} BAR5 {:x?}\", dev, addr);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n247 -             info!(\"Found AHCI dev {:?} BAR5 {:x?}\", dev, addr);\n247 +             info!(\"Found AHCI dev {dev:?} BAR5 {addr:x?}\");\n    |\n\n"
            ],
            "Mirai": [
              "error: unexpected `cfg` condition value: `board_malta`\n  --> src/bus/pci.rs:56:7\n   |\n56 | #[cfg(feature = \"board_malta\")]\n   |       ^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `feature` are: `allwinner`, `async-std`, `board-qemu`, `d1-pac`, `fu740`, `graphic`, `loopback`, `mock`, `no-pci`, `rcore-console`, `sdl2`, `virtio`, and `virtio-drivers`\n   = help: consider adding `board_malta` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\nnote: the lint level is defined here\n  --> src/lib.rs:4:9\n   |\n4  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(unexpected_cfgs)]` implied by `#[deny(warnings)]`\n\n"
            ]
          }
        },
        {
          "file": "src/nvme/interface.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Clippy(Error)": [
              "error: transmute used without annotations\n   --> src/nvme/interface.rs:108:46\n    |\n108 |         let common_cmd = unsafe { core::mem::transmute(cmd) };\n    |                                              ^^^^^^^^^ help: consider adding missing annotations: `transmute::<nvme::interface::NvmeIdentify, nvme::interface::NvmeCommonCommand>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n    = note: `#[deny(clippy::missing_transmute_annotations)]` implied by `#[deny(warnings)]`\n\n",
              "error: transmute used without annotations\n   --> src/nvme/interface.rs:174:46\n    |\n174 |         let common_cmd = unsafe { core::mem::transmute(cmd) };\n    |                                              ^^^^^^^^^ help: consider adding missing annotations: `transmute::<nvme::interface::NvmeCreateCq, nvme::interface::NvmeCommonCommand>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n",
              "error: transmute used without annotations\n   --> src/nvme/interface.rs:207:46\n    |\n207 |         let common_cmd = unsafe { core::mem::transmute(cmd) };\n    |                                              ^^^^^^^^^ help: consider adding missing annotations: `transmute::<nvme::interface::NvmeCreateSq, nvme::interface::NvmeCommonCommand>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n",
              "error: transmute used without annotations\n   --> src/nvme/interface.rs:268:46\n    |\n268 |         let common_cmd = unsafe { core::mem::transmute(cmd) };\n    |                                              ^^^^^^^^^ help: consider adding missing annotations: `transmute::<nvme::interface::NvmeRWCommand, nvme::interface::NvmeCommonCommand>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n",
              "error: transmute used without annotations\n   --> src/nvme/interface.rs:321:46\n    |\n321 |         let common_cmd = unsafe { core::mem::transmute(cmd) };\n    |                                              ^^^^^^^^^ help: consider adding missing annotations: `transmute::<nvme::interface::NvmeRWCommand, nvme::interface::NvmeCommonCommand>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n",
              "error: variables can be used directly in the `format!` string\n   --> src/nvme/interface.rs:360:9\n    |\n360 |         warn!(\"nvme device irq {}\", irq);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n360 -         warn!(\"nvme device irq {}\", irq);\n360 +         warn!(\"nvme device irq {irq}\");\n    |\n\n"
            ]
          }
        },
        {
          "file": "src/net/e1000.rs",
          "features": "",
          "count": 5,
          "kinds": {
            "Clippy(Error)": [
              "error: variables can be used directly in the `format!` string\n  --> src/net/e1000.rs:54:21\n   |\n54 |                     info!(\"e1000 try_handle_interrupt poll: {:?}\", p);\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n54 -                     info!(\"e1000 try_handle_interrupt poll: {:?}\", p);\n54 +                     info!(\"e1000 try_handle_interrupt poll: {p:?}\");\n   |\n\n",
              "error: variables can be used directly in the `format!` string\n  --> src/net/e1000.rs:57:21\n   |\n57 |                     warn!(\"poll got err {}\", err);\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n57 -                     warn!(\"poll got err {}\", err);\n57 +                     warn!(\"poll got err {err}\");\n   |\n\n",
              "error: variables can be used directly in the `format!` string\n  --> src/net/e1000.rs:85:17\n   |\n85 |                 trace!(\"e1000 NetScheme poll: {:?}\", p);\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n85 -                 trace!(\"e1000 NetScheme poll: {:?}\", p);\n85 +                 trace!(\"e1000 NetScheme poll: {p:?}\");\n   |\n\n",
              "error: variables can be used directly in the `format!` string\n  --> src/net/e1000.rs:89:17\n   |\n89 |                 warn!(\"poll got err {}\", err);\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n89 -                 warn!(\"poll got err {}\", err);\n89 +                 warn!(\"poll got err {err}\");\n   |\n\n",
              "error: variables can be used directly in the `format!` string\n   --> src/net/e1000.rs:177:5\n    |\n177 |     info!(\"Probing e1000 {} @ {:#x}\", name, header);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n177 -     info!(\"Probing e1000 {} @ {:#x}\", name, header);\n177 +     info!(\"Probing e1000 {name} @ {header:#x}\");\n    |\n\n"
            ]
          }
        },
        {
          "file": "src/utils/irq_manager.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Error)": [
              "error: variables can be used directly in the `format!` string\n  --> src/utils/irq_manager.rs:25:9\n   |\n25 |         info!(\"IRQ alloc_block {}\", count);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n25 -         info!(\"IRQ alloc_block {}\", count);\n25 +         info!(\"IRQ alloc_block {count}\");\n   |\n\n",
              "error: variables can be used directly in the `format!` string\n  --> src/utils/irq_manager.rs:40:9\n   |\n40 |         info!(\"IRQ register handler {}\", irq_num);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n40 -         info!(\"IRQ register handler {}\", irq_num);\n40 +         info!(\"IRQ register handler {irq_num}\");\n   |\n\n",
              "error: variables can be used directly in the `format!` string\n  --> src/utils/irq_manager.rs:56:9\n   |\n56 |         info!(\"IRQ unregister handler {}\", irq_num);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n56 -         info!(\"IRQ unregister handler {}\", irq_num);\n56 +         info!(\"IRQ unregister handler {irq_num}\");\n   |\n\n",
              "error: variables can be used directly in the `format!` string\n  --> src/utils/irq_manager.rs:68:9\n   |\n68 |         info!(\"IRQ overwrite handle {}\", irq_num);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n68 -         info!(\"IRQ overwrite handle {}\", irq_num);\n68 +         info!(\"IRQ overwrite handle {irq_num}\");\n   |\n\n"
            ]
          }
        },
        {
          "file": "src/irq/x86_apic/mod.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Error)": [
              "error: variables can be used directly in the `format!` string\n  --> src/irq/x86_apic/mod.rs:43:13\n   |\n43 | /             error!(\n44 | |                 \"cannot find IOAPIC for global system interrupt number {}\",\n45 | |                 gsi\n46 | |             );\n   | |_____________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
              "error: variables can be used directly in the `format!` string\n  --> src/irq/x86_apic/mod.rs:70:13\n   |\n70 |             error!(\"invalid local APIC interrupt vector {}\", vector);\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n70 -             error!(\"invalid local APIC interrupt vector {}\", vector);\n70 +             error!(\"invalid local APIC interrupt vector {vector}\");\n   |\n\n",
              "error: variables can be used directly in the `format!` string\n  --> src/irq/x86_apic/mod.rs:90:13\n   |\n90 |             warn!(\"no registered handler for interrupt vector {}!\", vector);\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n90 -             warn!(\"no registered handler for interrupt vector {}!\", vector);\n90 +             warn!(\"no registered handler for interrupt vector {vector}!\");\n   |\n\n"
            ]
          }
        },
        {
          "file": "src/utils/devicetree.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Error)": [
              "error: variables can be used directly in the `format!` string\n  --> src/utils/devicetree.rs:34:9\n   |\n34 |         info!(\"Loading device tree blob from {:#x}\", dtb_base_vaddr);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n34 -         info!(\"Loading device tree blob from {:#x}\", dtb_base_vaddr);\n34 +         info!(\"Loading device tree blob from {dtb_base_vaddr:#x}\");\n   |\n\n",
              "error: variables can be used directly in the `format!` string\n  --> src/utils/devicetree.rs:38:17\n   |\n38 | /                 warn!(\n39 | |                     \"device-tree: failed to load DTB @ {:#x}: {:?}\",\n40 | |                     dtb_base_vaddr, err\n41 | |                 );\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
              "error: parameter is only used in recursion\n  --> src/utils/devicetree.rs:47:23\n   |\n47 |     fn walk_inner<F>(&self, node: &Node, props: InheritProps, device_node_op: &mut F)\n   |                       ^^^^\n   |\nnote: parameter used here\n  --> src/utils/devicetree.rs:64:13\n   |\n64 |             self.walk_inner(child, props, device_node_op);\n   |             ^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\n   = note: `#[deny(clippy::only_used_in_recursion)]` implied by `#[deny(warnings)]`\n\n"
            ]
          }
        },
        {
          "file": "src/input/mouse.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error: clamp-like pattern without using clamp function\n  --> src/input/mouse.rs:38:18\n   |\n38 |         let dx = self.dx.max(-127).min(127);\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `self.dx.clamp(-127, 127)`\n   |\n   = note: clamp will panic if max < min\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_clamp\n   = note: `#[deny(clippy::manual_clamp)]` implied by `#[deny(warnings)]`\n\n",
              "error: clamp-like pattern without using clamp function\n  --> src/input/mouse.rs:39:18\n   |\n39 |         let dy = self.dy.max(-127).min(127);\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `self.dy.clamp(-127, 127)`\n   |\n   = note: clamp will panic if max < min\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_clamp\n\n"
            ]
          }
        },
        {
          "file": "src/irq/x86_apic/lapic.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Mirai": [
              "error: creating a mutable reference to mutable static is discouraged\n  --> src/irq/x86_apic/lapic.rs:16:9\n   |\n16 | /         LOCAL_APIC\n17 | |             .as_mut()\n   | |_____________________^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\n\n"
            ],
            "Clippy(Error)": [
              "error: creating a mutable reference to mutable static\n  --> src/irq/x86_apic/lapic.rs:16:9\n   |\n16 | /         LOCAL_APIC\n17 | |             .as_mut()\n   | |_____________________^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=zcore-drivers, checker=Clippy\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_5/kern-crates/zcore-drivers\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-06-28 11:34:26.484677913 +08:00:00\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling autocfg v1.5.0\n   Compiling rustversion v1.0.21\n    Checking log v0.4.27\n    Checking scopeguard v1.2.0\n   Compiling paste v1.0.15\n    Checking bitflags v2.9.1\n    Checking volatile v0.4.6\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.13\n    Checking spin v0.9.8\n    Checking rsdp v2.0.1\n    Checking byteorder v1.5.0\n    Checking x86_64 v0.14.13\n    Checking managed v0.8.0\n    Checking volatile v0.3.0\n    Checking cfg-if v1.0.1\n    Checking bit v0.1.1\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking acpi v4.1.1\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n    Checking lazy_static v1.5.0\n    Checking numeric-enum-macro v0.2.0\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking x2apic v0.4.3\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking zcore-drivers v0.1.0 (/home/runner/check/batch_5/kern-crates/zcore-drivers)\nerror: could not compile `zcore-drivers` (lib) due to 36 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) geiger",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=zcore-drivers, checker=Geiger\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_5/kern-crates/zcore-drivers\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2025-06-28 11:34:58.226116216 +08:00:00\n     Removed 0 files\n    Checking bit_field v0.10.2\n   Compiling autocfg v1.5.0\n    Checking bitflags v1.3.2\n    Checking log v0.4.27\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/bitflags-e452f082b53802d5.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/bit_field-1cb827c223858202.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libbitflags-e452f082b53802d5.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/autocfg-3b49e0afa777d415.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/log-61ee3d839ec629a2.d\",\"emit\":\"dep-info\"}\n   Compiling rustversion v1.0.21\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/build/rustversion-0768b5f6fd8db8b7/build_script_build-0768b5f6fd8db8b7.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libbit_field-1cb827c223858202.rmeta\",\"emit\":\"metadata\"}\n    Checking scopeguard v1.2.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/liblog-61ee3d839ec629a2.rmeta\",\"emit\":\"metadata\"}\n    Checking volatile v0.4.6\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/scopeguard-f9f4a2b4ed0dfe04.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/volatile-9c3a5d9b8a46e4be.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libscopeguard-f9f4a2b4ed0dfe04.rmeta\",\"emit\":\"metadata\"}\n   Compiling paste v1.0.15\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libvolatile-9c3a5d9b8a46e4be.rmeta\",\"emit\":\"metadata\"}\n    Checking bitflags v2.9.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/build/paste-9245072c691d01c9/build_script_build-9245072c691d01c9.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libautocfg-3b49e0afa777d415.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/bitflags-7c3693fde2daac8d.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libbitflags-7c3693fde2daac8d.rmeta\",\"emit\":\"metadata\"}\n    Checking raw-cpuid v10.7.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/build/rustversion-0768b5f6fd8db8b7/build_script_build-0768b5f6fd8db8b7\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/build/paste-9245072c691d01c9/build_script_build-9245072c691d01c9\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/rustversion-0cd5cbeb9eaceaca.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/paste-324a265740fab356.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libautocfg-3b49e0afa777d415.rlib\",\"emit\":\"link\"}\n   Compiling lock_api v0.4.13\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/raw_cpuid-5f4ca47649f2be1c.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/build/lock_api-f541141e107cd5c7/build_script_build-f541141e107cd5c7.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/build/lock_api-f541141e107cd5c7/build_script_build-f541141e107cd5c7\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/lock_api-4e210db0b18355ba.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/liblock_api-4e210db0b18355ba.rmeta\",\"emit\":\"metadata\"}\n    Checking spin v0.9.8\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libpaste-324a265740fab356.so\",\"emit\":\"link\"}\n    Checking rsdp v2.0.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/spin-611747a21ad09090.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/rsdp-f559feb2f18d6322.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/librustversion-0cd5cbeb9eaceaca.so\",\"emit\":\"link\"}\n    Checking x86_64 v0.14.13\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/librsdp-f559feb2f18d6322.rmeta\",\"emit\":\"metadata\"}\n    Checking managed v0.8.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/managed-4df74ce53108a461.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libspin-611747a21ad09090.rmeta\",\"emit\":\"metadata\"}\n    Checking cfg-if v1.0.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/cfg_if-375191e112da1984.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libcfg_if-375191e112da1984.rmeta\",\"emit\":\"metadata\"}\n    Checking bit v0.1.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/bit-b1ed57f362979867.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libbit-b1ed57f362979867.rmeta\",\"emit\":\"metadata\"}\n    Checking volatile v0.3.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libmanaged-4df74ce53108a461.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/volatile-e750ae413730edb8.d\",\"emit\":\"dep-info\"}\n    Checking byteorder v1.5.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libvolatile-e750ae413730edb8.rmeta\",\"emit\":\"metadata\"}\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/byteorder-c0ce989625e81065.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/x86_64-22a650480a550269.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/isomorphic_drivers-a10b43350a1d852c.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libbyteorder-c0ce989625e81065.rmeta\",\"emit\":\"metadata\"}\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libraw_cpuid-5f4ca47649f2be1c.rmeta\",\"emit\":\"metadata\"}\n    Checking acpi v4.1.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/acpi-6ca5341683547806.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libisomorphic_drivers-a10b43350a1d852c.rmeta\",\"emit\":\"metadata\"}\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/smoltcp-1073abf06d095b5e.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/pci-135e58a1c960626f.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libacpi-6ca5341683547806.rmeta\",\"emit\":\"metadata\"}\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/bitmap_allocator-e016312ba735ccde.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libbitmap_allocator-e016312ba735ccde.rmeta\",\"emit\":\"metadata\"}\n    Checking lazy_static v1.5.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/lazy_static-60ca989b7acce3fe.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/liblazy_static-60ca989b7acce3fe.rmeta\",\"emit\":\"metadata\"}\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/device_tree-4cedf408bfc0d65d.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libpci-135e58a1c960626f.rmeta\",\"emit\":\"metadata\"}\n    Checking numeric-enum-macro v0.2.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libdevice_tree-4cedf408bfc0d65d.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/numeric_enum_macro-796a58d6f2689351.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libnumeric_enum_macro-796a58d6f2689351.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libx86_64-22a650480a550269.rmeta\",\"emit\":\"metadata\"}\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking x2apic v0.4.3\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/lock-3aeed834f2f5222a.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/liblock-3aeed834f2f5222a.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/x2apic-2840b6e45f00e797.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libx2apic-2840b6e45f00e797.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libsmoltcp-1073abf06d095b5e.rmeta\",\"emit\":\"metadata\"}\n    Checking zcore-drivers v0.1.0 (/home/runner/check/batch_5/kern-crates/zcore-drivers)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/zcore_drivers-f4a739606300089f.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"unexpected `cfg` condition value: `board_malta`\",\"code\":{\"code\":\"unexpected_cfgs\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"src/bus/pci.rs\",\"byte_start\":1458,\"byte_end\":1481,\"line_start\":56,\"line_end\":56,\"column_start\":7,\"column_end\":30,\"is_primary\":true,\"text\":[{\"text\":\"#[cfg(feature = \\\"board_malta\\\")]\",\"highlight_start\":7,\"highlight_end\":30}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"expected values for `feature` are: `allwinner`, `async-std`, `board-qemu`, `d1-pac`, `fu740`, `graphic`, `loopback`, `mock`, `no-pci`, `rcore-console`, `sdl2`, `virtio`, and `virtio-drivers`\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"consider adding `board_malta` as a feature in `Cargo.toml`\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"the lint level is defined here\",\"code\":null,\"level\":\"note\",\"spans\":[{\"file_name\":\"src/lib.rs\",\"byte_start\":82,\"byte_end\":90,\"line_start\":4,\"line_end\":4,\"column_start\":9,\"column_end\":17,\"is_primary\":true,\"text\":[{\"text\":\"#![deny(warnings)]\",\"highlight_start\":9,\"highlight_end\":17}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"`#[deny(unexpected_cfgs)]` implied by `#[deny(warnings)]`\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: unexpected `cfg` condition value: `board_malta`\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/bus/pci.rs:56:7\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m56\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m#[cfg(feature = \\\"board_malta\\\")]\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m       \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: expected values for `feature` are: `allwinner`, `async-std`, `board-qemu`, `d1-pac`, `fu740`, `graphic`, `loopback`, `mock`, `no-pci`, `rcore-console`, `sdl2`, `virtio`, and `virtio-drivers`\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mhelp\\u001b[0m\\u001b[0m: consider adding `board_malta` as a feature in `Cargo.toml`\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;10mnote\\u001b[0m\\u001b[0m: the lint level is defined here\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/lib.rs:4:9\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m4\\u001b[0m\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m#![deny(warnings)]\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m         \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;10m^^^^^^^^\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: `#[deny(unexpected_cfgs)]` implied by `#[deny(warnings)]`\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"lifetime flowing from input to output with different syntax can be confusing\",\"code\":{\"code\":\"mismatched_lifetime_syntaxes\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"src/display/uefi.rs\",\"byte_start\":500,\"byte_end\":505,\"line_start\":29,\"line_end\":29,\"column_start\":11,\"column_end\":16,\"is_primary\":true,\"text\":[{\"text\":\"    fn fb(&self) -> FrameBuffer {\",\"highlight_start\":11,\"highlight_end\":16}],\"label\":\"this lifetime flows to the output\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"src/display/uefi.rs\",\"byte_start\":510,\"byte_end\":521,\"line_start\":29,\"line_end\":29,\"column_start\":21,\"column_end\":32,\"is_primary\":false,\"text\":[{\"text\":\"    fn fb(&self) -> FrameBuffer {\",\"highlight_start\":21,\"highlight_end\":32}],\"label\":\"the lifetime gets resolved as `'_`\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"`#[deny(mismatched_lifetime_syntaxes)]` implied by `#[deny(warnings)]`\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"one option is to remove the lifetime for references and use the anonymous lifetime for paths\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"src/display/uefi.rs\",\"byte_start\":521,\"byte_end\":521,\"line_start\":29,\"line_end\":29,\"column_start\":32,\"column_end\":32,\"is_primary\":true,\"text\":[{\"text\":\"    fn fb(&self) -> FrameBuffer {\",\"highlight_start\":32,\"highlight_end\":32}],\"label\":null,\"suggested_replacement\":\"<'_>\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"one option is to consistently use `'_`\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"src/display/uefi.rs\",\"byte_start\":501,\"byte_end\":501,\"line_start\":29,\"line_end\":29,\"column_start\":12,\"column_end\":12,\"is_primary\":true,\"text\":[{\"text\":\"    fn fb(&self) -> FrameBuffer {\",\"highlight_start\":12,\"highlight_end\":12}],\"label\":null,\"suggested_replacement\":\"'_ \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null},{\"file_name\":\"src/display/uefi.rs\",\"byte_start\":521,\"byte_end\":521,\"line_start\":29,\"line_end\":29,\"column_start\":32,\"column_end\":32,\"is_primary\":true,\"text\":[{\"text\":\"    fn fb(&self) -> FrameBuffer {\",\"highlight_start\":32,\"highlight_end\":32}],\"label\":null,\"suggested_replacement\":\"<'_>\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: lifetime flowing from input to output with different syntax can be confusing\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/display/uefi.rs:29:11\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m29\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m    fn fb(&self) -> FrameBuffer {\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m           \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^\\u001b[0m\\u001b[0m     \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m-----------\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12mthe lifetime gets resolved as `'_`\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m           \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m|\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m           \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mthis lifetime flows to the output\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: `#[deny(mismatched_lifetime_syntaxes)]` implied by `#[deny(warnings)]`\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: one option is to remove the lifetime for references and use the anonymous lifetime for paths\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m29\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0m    fn fb(&self) -> FrameBuffer\\u001b[0m\\u001b[0m\\u001b[38;5;10m<'_>\\u001b[0m\\u001b[0m {\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                                \\u001b[0m\\u001b[0m\\u001b[38;5;10m++++\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"creating a mutable reference to mutable static\",\"code\":{\"code\":\"static_mut_refs\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"src/irq/x86_apic/lapic.rs\",\"byte_start\":364,\"byte_end\":396,\"line_start\":16,\"line_end\":17,\"column_start\":9,\"column_end\":22,\"is_primary\":true,\"text\":[{\"text\":\"        LOCAL_APIC\",\"highlight_start\":9,\"highlight_end\":19},{\"text\":\"            .as_mut()\",\"highlight_start\":1,\"highlight_end\":22}],\"label\":\"mutable reference to mutable static\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"`#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: creating a mutable reference to mutable static\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/irq/x86_apic/lapic.rs:16:9\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m16\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m/\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m        LOCAL_APIC\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m17\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m            .as_mut()\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m|_____________________^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mmutable reference to mutable static\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"lifetime flowing from input to output with different syntax can be confusing\",\"code\":{\"code\":\"mismatched_lifetime_syntaxes\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"src/scheme/display.rs\",\"byte_start\":4030,\"byte_end\":4035,\"line_start\":167,\"line_end\":167,\"column_start\":11,\"column_end\":16,\"is_primary\":true,\"text\":[{\"text\":\"    fn fb(&self) -> FrameBuffer;\",\"highlight_start\":11,\"highlight_end\":16}],\"label\":\"this lifetime flows to the output\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"src/scheme/display.rs\",\"byte_start\":4040,\"byte_end\":4051,\"line_start\":167,\"line_end\":167,\"column_start\":21,\"column_end\":32,\"is_primary\":false,\"text\":[{\"text\":\"    fn fb(&self) -> FrameBuffer;\",\"highlight_start\":21,\"highlight_end\":32}],\"label\":\"the lifetime gets resolved as `'_`\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"one option is to remove the lifetime for references and use the anonymous lifetime for paths\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"src/scheme/display.rs\",\"byte_start\":4051,\"byte_end\":4051,\"line_start\":167,\"line_end\":167,\"column_start\":32,\"column_end\":32,\"is_primary\":true,\"text\":[{\"text\":\"    fn fb(&self) -> FrameBuffer;\",\"highlight_start\":32,\"highlight_end\":32}],\"label\":null,\"suggested_replacement\":\"<'_>\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"one option is to consistently use `'_`\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"src/scheme/display.rs\",\"byte_start\":4031,\"byte_end\":4031,\"line_start\":167,\"line_end\":167,\"column_start\":12,\"column_end\":12,\"is_primary\":true,\"text\":[{\"text\":\"    fn fb(&self) -> FrameBuffer;\",\"highlight_start\":12,\"highlight_end\":12}],\"label\":null,\"suggested_replacement\":\"'_ \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null},{\"file_name\":\"src/scheme/display.rs\",\"byte_start\":4051,\"byte_end\":4051,\"line_start\":167,\"line_end\":167,\"column_start\":32,\"column_end\":32,\"is_primary\":true,\"text\":[{\"text\":\"    fn fb(&self) -> FrameBuffer;\",\"highlight_start\":32,\"highlight_end\":32}],\"label\":null,\"suggested_replacement\":\"<'_>\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: lifetime flowing from input to output with different syntax can be confusing\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/scheme/display.rs:167:11\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m167\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m    fn fb(&self) -> FrameBuffer;\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m           \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^\\u001b[0m\\u001b[0m     \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m-----------\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12mthe lifetime gets resolved as `'_`\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m           \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m|\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m           \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mthis lifetime flows to the output\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: one option is to remove the lifetime for references and use the anonymous lifetime for paths\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m167\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0m    fn fb(&self) -> FrameBuffer\\u001b[0m\\u001b[0m\\u001b[38;5;10m<'_>\\u001b[0m\\u001b[0m;\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                                \\u001b[0m\\u001b[0m\\u001b[38;5;10m++++\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"aborting due to 4 previous errors\",\"code\":null,\"level\":\"error\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: aborting due to 4 previous errors\\u001b[0m\\n\\n\"}\nerror: could not compile `zcore-drivers` (lib)\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-2025-06-26-x86_64-unknown-linux-gnu/bin/rustc --crate-name zcore_drivers --edition=2018 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values(\"allwinner\", \"async-std\", \"board-qemu\", \"d1-pac\", \"fu740\", \"graphic\", \"loopback\", \"mock\", \"no-pci\", \"rcore-console\", \"sdl2\", \"virtio\", \"virtio-drivers\"))' -C metadata=18fec420e0844a00 -C extra-filename=-f4a739606300089f --out-dir /home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps -L dependency=/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps --extern acpi=/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libacpi-6ca5341683547806.rmeta --extern bitflags=/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libbitflags-e452f082b53802d5.rmeta --extern bitmap_allocator=/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libbitmap_allocator-e016312ba735ccde.rmeta --extern cfg_if=/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libcfg_if-375191e112da1984.rmeta --extern device_tree=/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libdevice_tree-4cedf408bfc0d65d.rmeta --extern isomorphic_drivers=/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libisomorphic_drivers-a10b43350a1d852c.rmeta --extern lazy_static=/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/liblazy_static-60ca989b7acce3fe.rmeta --extern lock=/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/liblock-3aeed834f2f5222a.rmeta --extern log=/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/liblog-61ee3d839ec629a2.rmeta --extern numeric_enum_macro=/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libnumeric_enum_macro-796a58d6f2689351.rmeta --extern pci=/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libpci-135e58a1c960626f.rmeta --extern smoltcp=/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libsmoltcp-1073abf06d095b5e.rmeta --extern volatile=/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libvolatile-e750ae413730edb8.rmeta --extern x2apic=/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libx2apic-2840b6e45f00e797.rmeta --extern x86_64=/home/runner/check/batch_5/kern-crates/zcore-drivers/target/debug/deps/libx86_64-22a650480a550269.rmeta` (exit status: 1)\nerror: Cargo(\"1 job failed\")\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=zcore-drivers, checker=Lockbud\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_5/kern-crates/zcore-drivers\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-06-28 11:34:48.655159727 +08:00:00\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling autocfg v1.5.0\n   Compiling log v0.4.27\n   Compiling rustversion v1.0.21\n   Compiling scopeguard v1.2.0\n[2025-06-28T03:34:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T03:34:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling volatile v0.4.6\n   Compiling paste v1.0.15\n   Compiling bitflags v2.9.1\n   Compiling raw-cpuid v10.7.0\n   Compiling lock_api v0.4.13\n   Compiling spin v0.9.8\n   Compiling rsdp v2.0.1\n   Compiling x86_64 v0.14.13\n   Compiling cfg-if v1.0.1\n   Compiling managed v0.8.0\n   Compiling volatile v0.3.0\n   Compiling bit v0.1.1\n   Compiling byteorder v1.5.0\n   Compiling isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n   Compiling smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n   Compiling acpi v4.1.1\n   Compiling pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n   Compiling device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n   Compiling lazy_static v1.5.0\n   Compiling numeric-enum-macro v0.2.0\n   Compiling lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n   Compiling x2apic v0.4.3\n   Compiling zcore-drivers v0.1.0 (/home/runner/check/batch_5/kern-crates/zcore-drivers)\nerror: unexpected `cfg` condition value: `board_malta`\n  --> src/bus/pci.rs:56:7\n   |\n56 | #[cfg(feature = \"board_malta\")]\n   |       ^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `feature` are: `allwinner`, `async-std`, `board-qemu`, `d1-pac`, `fu740`, `graphic`, `loopback`, `mock`, `no-pci`, `rcore-console`, `sdl2`, `virtio`, and `virtio-drivers`\n   = help: consider adding `board_malta` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\nnote: the lint level is defined here\n  --> src/lib.rs:4:9\n   |\n4  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(unexpected_cfgs)]` implied by `#[deny(warnings)]`\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/irq/x86_apic/lapic.rs:16:9\n   |\n16 | /         LOCAL_APIC\n17 | |             .as_mut()\n   | |_____________________^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\n\nerror: could not compile `zcore-drivers` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=zcore-drivers, checker=Mirai\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_5/kern-crates/zcore-drivers\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-06-28 11:34:45.610609943 +08:00:00\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling autocfg v1.5.0\n    Checking log v0.4.27\n   Compiling rustversion v1.0.21\n    Checking scopeguard v1.2.0\n    Checking bitflags v2.9.1\n   Compiling paste v1.0.15\n    Checking volatile v0.4.6\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.13\n    Checking spin v0.9.8\n    Checking rsdp v2.0.1\n    Checking x86_64 v0.14.13\n    Checking managed v0.8.0\n    Checking volatile v0.3.0\n    Checking bit v0.1.1\n    Checking byteorder v1.5.0\n    Checking cfg-if v1.0.1\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking acpi v4.1.1\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n    Checking lazy_static v1.5.0\n    Checking numeric-enum-macro v0.2.0\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking x2apic v0.4.3\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking zcore-drivers v0.1.0 (/home/runner/check/batch_5/kern-crates/zcore-drivers)\nerror: could not compile `zcore-drivers` (lib) due to 2 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=zcore-drivers, checker=Rapx\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_5/kern-crates/zcore-drivers\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-06-28 11:34:52.613230686 +08:00:00\n    Checking bitflags v1.3.2\n   Compiling autocfg v1.5.0\n    Checking bit_field v0.10.2\n   Compiling rustversion v1.0.21\n    Checking log v0.4.27\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n   Compiling paste v1.0.15\n    Checking bitflags v2.9.1\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.13\n    Checking x86_64 v0.14.13\n    Checking rsdp v2.0.1\n    Checking spin v0.9.8\n    Checking cfg-if v1.0.1\n    Checking managed v0.8.0\n    Checking byteorder v1.5.0\n    Checking volatile v0.3.0\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n    Checking bit v0.1.1\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking acpi v4.1.1\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n    Checking lazy_static v1.5.0\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n03:34:55|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=zcore-drivers, checker=SemverChecks\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_5/kern-crates/zcore-drivers\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-06-28 11:34:29.264715803 +08:00:00\n    Building zcore-drivers v0.1.0 (current)\n       Built [  14.649s] (current)\n     Parsing zcore-drivers v0.1.0 (current)\n      Parsed [   0.028s] (current)\nerror: zcore-drivers not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=zcore-drivers, checker=Udeps\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_5/kern-crates/zcore-drivers\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-linux-gnu \n// timestamp=2025-06-28 11:35:01.079715943 +08:00:00\n    Checking bit_field v0.10.2\n   Compiling autocfg v1.5.0\n    Checking bitflags v1.3.2\n   Compiling rustversion v1.0.21\n    Checking log v0.4.27\n    Checking scopeguard v1.2.0\n    Checking bitflags v2.9.1\n    Checking volatile v0.4.6\n   Compiling paste v1.0.15\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.13\n    Checking spin v0.9.8\n    Checking rsdp v2.0.1\n    Checking x86_64 v0.14.13\n    Checking byteorder v1.5.0\n    Checking cfg-if v1.0.1\n    Checking bit v0.1.1\n    Checking managed v0.8.0\n    Checking volatile v0.3.0\n    Checking acpi v4.1.1\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking numeric-enum-macro v0.2.0\n    Checking lazy_static v1.5.0\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking x2apic v0.4.3\n    Checking zcore-drivers v0.1.0 (/home/runner/check/batch_5/kern-crates/zcore-drivers)\nerror: unexpected `cfg` condition value: `board_malta`\n  --> src/bus/pci.rs:56:7\n   |\n56 | #[cfg(feature = \"board_malta\")]\n   |       ^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `feature` are: `allwinner`, `async-std`, `board-qemu`, `d1-pac`, `fu740`, `graphic`, `loopback`, `mock`, `no-pci`, `rcore-console`, `sdl2`, `virtio`, and `virtio-drivers`\n   = help: consider adding `board_malta` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\nnote: the lint level is defined here\n  --> src/lib.rs:4:9\n   |\n4  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(unexpected_cfgs)]` implied by `#[deny(warnings)]`\n\nerror: lifetime flowing from input to output with different syntax can be confusing\n  --> src/display/uefi.rs:29:11\n   |\n29 |     fn fb(&self) -> FrameBuffer {\n   |           ^^^^^     ----------- the lifetime gets resolved as `'_`\n   |           |\n   |           this lifetime flows to the output\n   |\n   = note: `#[deny(mismatched_lifetime_syntaxes)]` implied by `#[deny(warnings)]`\nhelp: one option is to remove the lifetime for references and use the anonymous lifetime for paths\n   |\n29 |     fn fb(&self) -> FrameBuffer<'_> {\n   |                                ++++\n\nerror: creating a mutable reference to mutable static\n  --> src/irq/x86_apic/lapic.rs:16:9\n   |\n16 | /         LOCAL_APIC\n17 | |             .as_mut()\n   | |_____________________^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\n\nerror: lifetime flowing from input to output with different syntax can be confusing\n   --> src/scheme/display.rs:167:11\n    |\n167 |     fn fb(&self) -> FrameBuffer;\n    |           ^^^^^     ----------- the lifetime gets resolved as `'_`\n    |           |\n    |           this lifetime flows to the output\n    |\nhelp: one option is to remove the lifetime for references and use the anonymous lifetime for paths\n    |\n167 |     fn fb(&self) -> FrameBuffer<'_>;\n    |                                ++++\n\nerror: could not compile `zcore-drivers` (lib) due to 4 previous errors\n"
            ]
          }
        },
        {
          "file": "Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── zcore-drivers 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 135\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T03:34:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T03:34:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=zcore-drivers, checker=Udeps\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_5/kern-crates/zcore-drivers\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-28 11:35:03.697994962 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking bit_field v0.10.2\n   Compiling autocfg v1.5.0\n    Checking bitflags v1.3.2\n   Compiling rustversion v1.0.21\n    Checking log v0.4.27\n    Checking scopeguard v1.2.0\n    Checking bitflags v2.9.1\n    Checking volatile v0.4.6\n   Compiling paste v1.0.15\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.13\n    Checking spin v0.9.8\n    Checking rsdp v2.0.1\n    Checking x86_64 v0.14.13\n    Checking byteorder v1.5.0\n    Checking cfg-if v1.0.1\n    Checking bit v0.1.1\n    Checking managed v0.8.0\n    Checking volatile v0.3.0\n    Checking acpi v4.1.1\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking numeric-enum-macro v0.2.0\n    Checking lazy_static v1.5.0\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking x2apic v0.4.3\n    Checking zcore-drivers v0.1.0 (/home/runner/check/batch_5/kern-crates/zcore-drivers)\nerror: unexpected `cfg` condition value: `board_malta`\n  --> src/bus/pci.rs:56:7\n   |\n56 | #[cfg(feature = \"board_malta\")]\n   |       ^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `feature` are: `allwinner`, `async-std`, `board-qemu`, `d1-pac`, `fu740`, `graphic`, `loopback`, `mock`, `no-pci`, `rcore-console`, `sdl2`, `virtio`, and `virtio-drivers`\n   = help: consider adding `board_malta` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\nnote: the lint level is defined here\n  --> src/lib.rs:4:9\n   |\n4  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(unexpected_cfgs)]` implied by `#[deny(warnings)]`\n\nerror: lifetime flowing from input to output with different syntax can be confusing\n  --> src/display/uefi.rs:29:11\n   |\n29 |     fn fb(&self) -> FrameBuffer {\n   |           ^^^^^     ----------- the lifetime gets resolved as `'_`\n   |           |\n   |           this lifetime flows to the output\n   |\n   = note: `#[deny(mismatched_lifetime_syntaxes)]` implied by `#[deny(warnings)]`\nhelp: one option is to remove the lifetime for references and use the anonymous lifetime for paths\n   |\n29 |     fn fb(&self) -> FrameBuffer<'_> {\n   |                                ++++\n\nerror: creating a mutable reference to mutable static\n  --> src/irq/x86_apic/lapic.rs:16:9\n   |\n16 | /         LOCAL_APIC\n17 | |             .as_mut()\n   | |_____________________^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\n\nerror: lifetime flowing from input to output with different syntax can be confusing\n   --> src/scheme/display.rs:167:11\n    |\n167 |     fn fb(&self) -> FrameBuffer;\n    |           ^^^^^     ----------- the lifetime gets resolved as `'_`\n    |           |\n    |           this lifetime flows to the output\n    |\nhelp: one option is to remove the lifetime for references and use the anonymous lifetime for paths\n    |\n167 |     fn fb(&self) -> FrameBuffer<'_>;\n    |                                ++++\n\nerror: could not compile `zcore-drivers` (lib) due to 4 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=zcore-drivers, checker=Outdated\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_5/kern-crates/zcore-drivers\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 11:34:58.147125857 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nacpi      4.1.1    ---     5.2.0   Normal  cfg(target_arch = \"x86_64\")\nbitflags  1.3.2    ---     2.9.1   Normal  ---\nd1-pac    0.0.27   ---     0.0.32  Normal  ---\nriscv     0.10.1   ---     0.14.0  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsdl2      0.34.5   ---     0.37.0  Normal  cfg(not(target_os = \"none\"))\nvolatile  0.3.0    ---     0.6.1   Normal  ---\nx2apic    0.4.3    ---     0.5.0   Normal  cfg(target_arch = \"x86_64\")\nx86_64    0.14.13  ---     0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=zcore-drivers, checker=SemverChecks\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_5/kern-crates/zcore-drivers\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-28 11:34:45.046113318 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building zcore-drivers v0.1.0 (current)\n       Built [  14.649s] (current)\n     Parsing zcore-drivers v0.1.0 (current)\n      Parsed [   0.028s] (current)\nerror: zcore-drivers not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "src/display/uefi.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error: lifetime flowing from input to output with different syntax can be confusing\n  --> src/display/uefi.rs:29:11\n   |\n29 |     fn fb(&self) -> FrameBuffer {\n   |           ^^^^^     ----------- the lifetime gets resolved as `'_`\n   |           |\n   |           this lifetime flows to the output\n   |\n   = note: `#[deny(mismatched_lifetime_syntaxes)]` implied by `#[deny(warnings)]`\nhelp: one option is to remove the lifetime for references and use the anonymous lifetime for paths\n   |\n29 |     fn fb(&self) -> FrameBuffer<'_> {\n   |                                ++++\n\n"
            ]
          }
        },
        {
          "file": "src/net/loopback.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error: variables can be used directly in the `format!` string\n  --> src/net/loopback.rs:45:17\n   |\n45 |                 debug!(\"poll got err {}\", err);\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n45 -                 debug!(\"poll got err {}\", err);\n45 +                 debug!(\"poll got err {err}\");\n   |\n\n"
            ]
          }
        },
        {
          "file": "src/nvme/nvme_queue.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error: variables can be used directly in the `format!` string\n  --> src/nvme/nvme_queue.rs:40:9\n   |\n40 |         trace!(\"data_va: {:x}, data_pa: {:x}\", data_va, data_pa);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n40 -         trace!(\"data_va: {:x}, data_pa: {:x}\", data_va, data_pa);\n40 +         trace!(\"data_va: {data_va:x}, data_pa: {data_pa:x}\");\n   |\n\n"
            ]
          }
        },
        {
          "file": "src/scheme/display.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error: lifetime flowing from input to output with different syntax can be confusing\n   --> src/scheme/display.rs:167:11\n    |\n167 |     fn fb(&self) -> FrameBuffer;\n    |           ^^^^^     ----------- the lifetime gets resolved as `'_`\n    |           |\n    |           this lifetime flows to the output\n    |\nhelp: one option is to remove the lifetime for references and use the anonymous lifetime for paths\n    |\n167 |     fn fb(&self) -> FrameBuffer<'_>;\n    |                                ++++\n\n"
            ]
          }
        },
        {
          "file": "src/uart/buffered.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error: length comparison to zero\n  --> src/uart/buffered.rs:47:12\n   |\n47 |         if self.buf.lock().len() > 0 {\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!self.buf.lock().is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[deny(clippy::len_zero)]` implied by `#[deny(warnings)]`\n\n"
            ]
          }
        },
        {
          "file": "src/utils/id_allocator.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error: variables can be used directly in the `format!` string\n  --> src/utils/id_allocator.rs:29:17\n   |\n29 |                 warn!(\"out of range in IdAllocator::new(): {:#x?}\", range);\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n29 -                 warn!(\"out of range in IdAllocator::new(): {:#x?}\", range);\n29 +                 warn!(\"out of range in IdAllocator::new(): {range:#x?}\");\n   |\n\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Atomvchecker",
    "Outdated",
    "Geiger",
    "Unused Deps",
    "Unformatted"
  ]
}