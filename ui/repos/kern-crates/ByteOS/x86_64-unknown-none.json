{"repo":{"user":"kern-crates","repo":"ByteOS"},"data":[{"user":"kern-crates","repo":"ByteOS","pkg":"kernel","count":20,"raw_reports":[{"file":"kernel/src/syscall/task.rs","count":5,"kinds":{"Clippy(Warn)":["warning: this `else { if .. }` block can be collapsed\n   --> kernel/src/syscall/task.rs:726:24\n    |\n726 |                   } else {\n    |  ________________________^\n727 | |                     if let Some(index) = target_signal.real_time_index() {\n728 | |                         child_tcb.signal_queue[index] += 1;\n729 | |                     }\n730 | |                 }\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\n    = note: `#[warn(clippy::collapsible_else_if)]` on by default\nhelp: collapse nested if block\n    |\n726 ~                 } else if let Some(index) = target_signal.real_time_index() {\n727 +                     child_tcb.signal_queue[index] += 1;\n728 +                 }\n    |\n\n","warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:757:36\n    |\n757 |             sec: stime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n    = note: `#[warn(clippy::inconsistent_digit_grouping)]` on by default\n\n","warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:758:37\n    |\n758 |             usec: stime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n","warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:761:36\n    |\n761 |             sec: utime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n","warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:762:37\n    |\n762 |             usec: utime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"]}},{"file":"kernel/build.rs","count":3,"kinds":{"Clippy(Warn)":["warning: comparison to empty slice\n  --> kernel/build.rs:17:12\n   |\n17 |         if module == \"\" {\n   |            ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `module.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n   = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n","warning: single-character string constant used as pattern\n  --> kernel/build.rs:20:84\n   |\n20 |         module_file_content.push_str(&format!(\"extern crate {};\\n\", module.replace(\"-\", \"_\")))\n   |                                                                                    ^^^ help: try using a `char` instead: `'-'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n","warning: single-character string constant used as pattern\n  --> kernel/build.rs:29:16\n   |\n29 |         .split(\",\")\n   |                ^^^ help: try using a `char` instead: `','`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"]}},{"file":"kernel/src/syscall/fd.rs","count":2,"kinds":{"Clippy(Warn)":["warning: digits of hex, binary or octal literal not in groups of equal size\n   --> kernel/src/syscall/fd.rs:699:57\n    |\n699 |         let etime = current_nsec() + timeout as usize * 0x1000_000;\n    |                                                         ^^^^^^^^^^ help: consider: `0x0100_0000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n    = note: `#[warn(clippy::unusual_byte_groupings)]` on by default\n\n","warning: digits of hex, binary or octal literal not in groups of equal size\n   --> kernel/src/syscall/fd.rs:936:31\n    |\n936 |             stime + timeout * 0x1000_000\n    |                               ^^^^^^^^^^ help: consider: `0x0100_0000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n\n"]}},{"file":"kernel/src/user/socket_pair.rs","count":2,"kinds":{"Clippy(Warn)":["warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:42:9\n   |\n42 | /         if events.contains(PollEvent::POLLOUT) {\n43 | |             if self.inner.lock().len() <= 0x50000 {\n44 | |                 res |= PollEvent::POLLOUT;\n45 | |             }\n46 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n   = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n   |\n42 ~         if events.contains(PollEvent::POLLOUT) && self.inner.lock().len() <= 0x50000 {\n43 +             res |= PollEvent::POLLOUT;\n44 +         }\n   |\n\n","warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:47:9\n   |\n47 | /         if events.contains(PollEvent::POLLIN) {\n48 | |             if self.inner.lock().len() > 0 {\n49 | |                 res |= PollEvent::POLLIN;\n50 | |             }\n51 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n   |\n47 ~         if events.contains(PollEvent::POLLIN) && self.inner.lock().len() > 0 {\n48 +             res |= PollEvent::POLLIN;\n49 +         }\n   |\n\n"]}},{"file":"/home/runner/check/batch_2/kern-crates/ByteOS/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 663 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (96 crate dependencies)\nCrate:     ahash\nVersion:   0.8.3\nWarning:   yanked\nDependency tree:\nahash 0.8.3\n└── hashbrown 0.14.0\n    ├── kernel 0.1.0\n    └── executor 0.1.0\n        └── kernel 0.1.0\n\nwarning: 1 allowed warning found\n\n{\n  \"database\": {\n    \"advisory-count\": 663,\n    \"last-commit\": \"acb7ce45817b13dd34cb32540ff18be4e1f3ba09\",\n    \"last-updated\": \"2024-10-09T00:13:59+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 96\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"ahash\",\n          \"version\": \"0.8.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"2c99f64d1e06488f620f932677e24bc6e2897582980441ae90a671415bd7ec2f\",\n          \"dependencies\": [\n            {\n              \"name\": \"cfg-if\",\n              \"version\": \"1.0.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"once_cell\",\n              \"version\": \"1.19.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=kernel, checker=Clippy\n// toolchain=nightly-2023-12-01, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_2/kern-crates/ByteOS/kernel\n// cmd=cargo clippy --target x86_64-unknown-none --no-deps --message-format=json\n    Checking cfg-if v1.0.0\n    Checking scopeguard v1.1.0\n   Compiling lock_api v0.4.9\n   Compiling log v0.4.17\n    Checking bitflags v1.3.2\n    Checking bitflags v2.4.2\n    Checking bit_field v0.10.2\n   Compiling paste v1.0.14\n   Compiling rustversion v1.0.12\n    Checking raw-cpuid v10.7.0\n    Checking spin v0.9.8\n   Compiling x86 v0.52.0\n    Checking volatile v0.4.6\n   Compiling percpu v0.1.0 (https://github.com/Byte-OS/percpu.git#a71e60e3)\n    Checking bit v0.1.1\n    Checking sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n    Checking irq_safety v0.1.1 (https://github.com/theseus-os/irq_safety.git#11bfab9f)\n    Checking raw-cpuid v11.0.1\n    Checking multiboot v0.8.0\n    Checking fdt v0.1.5\n    Checking byteorder v1.4.3\n    Checking x86_64 v0.14.10\n    Checking zerocopy v0.7.32\n    Checking linkme v0.3.22\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n    Checking downcast-rs v1.2.0\n    Checking vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling num-traits v0.2.16\n   Compiling ahash v0.8.3\n    Checking once_cell v1.19.0\n    Checking virtio-drivers v0.7.1 (https://github.com/rcore-os/virtio-drivers?rev=61ece50#61ece509)\n   Compiling futures-core v0.3.28\n    Checking num_enum v0.6.1\n    Checking allocator-api2 v0.2.16\n    Checking x2apic v0.4.3\n    Checking polyhal v0.1.0 (https://github.com/Byte-OS/polyhal.git#78137eed)\n   Compiling kramdisk v0.1.0 (https://github.com/Byte-OS/kramdisk.git#9eb2394b)\n    Checking hashbrown v0.14.0\n   Compiling allocator v0.1.0 (https://github.com/Byte-OS/allocator.git?rev=c6ce949146d5feab1d406502b19b035f5d392c35#c6ce9491)\n    Checking procfs v0.1.0 (https://github.com/Byte-OS/procfs.git#0477d4ee)\n    Checking frame_allocator v0.1.0 (https://github.com/Byte-OS/bit_frame_allocator.git#e401675a)\n    Checking buddy_system_allocator v0.9.0\n    Checking hal v0.1.0 (https://github.com/Byte-OS/hal.git#6f40272c)\n    Checking ramfs v0.1.0 (https://github.com/Byte-OS/ramfs.git#57167265)\n    Checking fatfs v0.4.0 (https://github.com/byte-os/rust-fatfs.git#3b45ddc5)\n    Checking zero v0.1.3\n    Checking ns16550a v0.2.0\n    Checking pin-project-lite v0.2.9\n    Checking xmas-elf v0.9.0\n    Checking futures-lite v1.13.0\n    Checking devices v0.1.0 (https://github.com/Byte-OS/devices.git#28ba385a)\n    Checking logging v0.1.0 (https://github.com/Byte-OS/logging.git#3e749346)\n    Checking devfs v0.1.0 (https://github.com/Byte-OS/devfs.git#c5e510df)\n    Checking ns16550a v0.1.0 (https://github.com/Byte-OS/driver-ns16550a.git#059e0f27)\n    Checking kgoldfish-rtc v0.1.0 (https://github.com/Byte-OS/driver-kgoldfish-rtc.git#66e0234f)\n    Checking general-plic v0.1.0 (https://github.com/Byte-OS/driver-general-plic.git#d6196a18)\n    Checking kvirtio v0.1.0 (https://github.com/Byte-OS/driver-kvirtio.git#5917abe9)\n    Checking executor v0.1.0 (https://github.com/Byte-OS/executor.git#d1dd77ff)\n   Compiling kernel v0.1.0 (/home/runner/check/batch_2/kern-crates/ByteOS/kernel)\n    Checking lose-net-stack v0.1.0 (https://github.com/byte-os/lose-net-stack?rev=bb99460#bb99460f)\n    Checking signal v0.1.0 (https://github.com/Byte-OS/signal.git#a03290b1)\n    Checking fs v0.1.0 (https://github.com/Byte-OS/fs.git#6d968ea7)\nerror: could not compile `kernel` (bin \"kernel\") due to 2 previous errors; 12 warnings emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=kernel, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_2/kern-crates/ByteOS/kernel\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none\n   Compiling cfg-if v1.0.0\n   Compiling scopeguard v1.1.0\n   Compiling lock_api v0.4.9\n   Compiling log v0.4.17\n   Compiling bitflags v1.3.2\n   Compiling bitflags v2.4.2\n   Compiling bit_field v0.10.2\n[2024-10-12T15:56:49Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1522:11: 1522:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1525:13: 1525:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:56:49Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling rustversion v1.0.12\n   Compiling paste v1.0.14\n   Compiling raw-cpuid v10.7.0\n   Compiling spin v0.9.8\n   Compiling x86 v0.52.0\n   Compiling volatile v0.4.6\n   Compiling percpu v0.1.0 (https://github.com/Byte-OS/percpu.git#a71e60e3)\n   Compiling bit v0.1.1\n   Compiling sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n   Compiling irq_safety v0.1.1 (https://github.com/theseus-os/irq_safety.git#11bfab9f)\n   Compiling raw-cpuid v11.0.1\n   Compiling multiboot v0.8.0\n   Compiling x86_64 v0.14.10\n   Compiling fdt v0.1.5\n   Compiling x2apic v0.4.3\n   Compiling byteorder v1.4.3\n   Compiling linkme v0.3.22\n   Compiling polyhal v0.1.0 (https://github.com/Byte-OS/polyhal.git#78137eed)\n   Compiling zerocopy v0.7.32\n   Compiling timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling downcast-rs v1.2.0\n   Compiling vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling num-traits v0.2.16\n   Compiling frame_allocator v0.1.0 (https://github.com/Byte-OS/bit_frame_allocator.git#e401675a)\n   Compiling virtio-drivers v0.7.1 (https://github.com/rcore-os/virtio-drivers?rev=61ece50#61ece509)\n   Compiling ahash v0.8.3\n   Compiling once_cell v1.19.0\n   Compiling futures-core v0.3.28\n   Compiling num_enum v0.6.1\nerror[E0635]: unknown feature `stdsimd`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ahash-0.8.3/src/lib.rs:99:42\n   |\n99 | #![cfg_attr(feature = \"stdsimd\", feature(stdsimd))]\n   |                                          ^^^^^^^\n\n   Compiling hal v0.1.0 (https://github.com/Byte-OS/hal.git#6f40272c)\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `ahash` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:56:49Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1522:11: 1522:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1525:13: 1525:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:56:49Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"kernel/src/syscall/mod.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unneeded sub `cfg` when there is only one condition\n   --> kernel/src/syscall/mod.rs:381:19\n    |\n381 |             #[cfg(any(target_arch = \"x86_64\"))]\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `target_arch = \"x86_64\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_minimal_cfg\n    = note: `#[warn(clippy::non_minimal_cfg)]` on by default\n\n"]}},{"file":"kernel/src/syscall/shm.rs","count":1,"kinds":{"Clippy(Warn)":["warning: this is a decimal constant\n  --> kernel/src/syscall/shm.rs:31:21\n   |\n31 |         if shmflg & 01000 > 0 {\n   |                     ^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_prefixed_literal\n   = note: `#[warn(clippy::zero_prefixed_literal)]` on by default\nhelp: if you mean to use a decimal constant, remove the `0` to avoid confusion\n   |\n31 |         if shmflg & 1000 > 0 {\n   |                     ~~~~\nhelp: if you mean to use an octal constant, use `0o`\n   |\n31 |         if shmflg & 0o1000 > 0 {\n   |                     ~~~~~~\n\n"]}},{"file":"kernel/src/tasks/initproc.rs","count":1,"kinds":{"Clippy(Warn)":["warning: constants have by default a `'static` lifetime\n   --> kernel/src/tasks/initproc.rs:213:27\n    |\n213 | pub const USER_WORK_DIR: &'static str = \"/\";\n    |                          -^^^^^^^---- help: consider removing `'static`: `&str`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n    = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default\n\n"]}},{"file":"kernel/src/user/signal.rs","count":1,"kinds":{"Clippy(Error)":["error[E0432]: unresolved import `polyhal::SIG_RETURN_ADDR`\n --> kernel/src/user/signal.rs:5:30\n  |\n5 | use polyhal::{TrapFrameArgs, SIG_RETURN_ADDR};\n  |                              ^^^^^^^^^^^^^^^ no `SIG_RETURN_ADDR` in the root\n\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Audit","Mirai","Lockbud(Probably)","Lockbud(Possibly)","Unformatted"]}