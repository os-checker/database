{"repo":{"user":"kern-crates","repo":"arm_vcpu"},"data":[{"user":"kern-crates","repo":"arm_vcpu","pkg":"arm_vcpu","count":11,"raw_reports":[{"file":"(virtual) clippy","count":2,"kinds":{"Cargo":["// pkg_name=arm_vcpu, checker=Clippy\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_3/kern-crates/arm_vcpu\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling rustversion v1.0.18\n   Compiling proc-macro2 v1.0.89\n    Checking bit_field v0.10.2\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.13\n    Checking bitflags v1.3.2\n   Compiling autocfg v1.4.0\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.3.1\n    Checking volatile v0.4.6\n    Checking bitflags v2.6.0\n    Checking x86_64 v0.15.1\n   Compiling quote v1.0.37\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0\n    Checking log v0.4.22\n   Compiling syn v2.0.86\n   Compiling percpu v0.1.5\n    Checking cfg-if v1.0.0\n    Checking spin v0.9.8\n    Checking memory_set v0.3.1\n    Checking numeric-enum-macro v0.2.0\n    Checking lazyinit v0.2.1\n    Checking tock-registers v0.8.1\n    Checking smccc v0.1.1\n    Checking aarch64-cpu v9.4.0\n    Checking page_table_entry v0.4.1\n    Checking cortex-a v8.1.1\n    Checking page_table_multiarch v0.4.1\n    Checking axaddrspace v0.1.0 (https://github.com/arceos-hypervisor/axaddrspace.git#0e4ddd0f)\n   Compiling percpu_macros v0.1.5\n    Checking axvcpu v0.1.0 (https://github.com/arceos-hypervisor/axvcpu.git#fba6c6a0)\n    Checking arm_vcpu v0.1.0 (/home/runner/check/batch_3/kern-crates/arm_vcpu)\nerror: could not compile `arm_vcpu` (lib) due to 2 previous errors; 1 warning emitted\n","// pkg_name=arm_vcpu, checker=Clippy\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_3/kern-crates/arm_vcpu\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking tock-registers v0.8.1\n    Checking memory_addr v0.3.1\n    Checking bitflags v2.6.0\n    Checking log v0.4.22\n    Checking aarch64-cpu v9.4.0\n   Compiling axerrno v0.1.0\n    Checking cfg-if v1.0.0\n   Compiling percpu v0.1.5\n    Checking memory_set v0.3.1\n    Checking numeric-enum-macro v0.2.0\n    Checking bit_field v0.10.2\n    Checking lazyinit v0.2.1\n    Checking cortex-a v8.1.1\n    Checking smccc v0.1.1\n    Checking page_table_entry v0.4.1\n    Checking page_table_multiarch v0.4.1\n    Checking axaddrspace v0.1.0 (https://github.com/arceos-hypervisor/axaddrspace.git#0e4ddd0f)\n    Checking axvcpu v0.1.0 (https://github.com/arceos-hypervisor/axvcpu.git#fba6c6a0)\n    Checking arm_vcpu v0.1.0 (/home/runner/check/batch_3/kern-crates/arm_vcpu)\nerror: could not compile `arm_vcpu` (lib) due to 1 previous error; 1 warning emitted\n"]}},{"file":"[lockbud] Not supported to display yet.","count":2,"kinds":{"Lockbud(Possibly)":["[2024-11-02T04:32:31Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:32:31Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-11-02T04:32:36Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:32:36Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/exception.rs","count":2,"kinds":{"Clippy(Error)":["error[E0787]: the `asm!` macro is not allowed in naked functions\n   --> src/exception.rs:274:5\n    |\n274 | /     core::arch::asm!(\n275 | |         \"add sp, sp, 34 * 8\",       // Skip the exception frame.\n276 | |         \"mov x9, sp\", // Currently `sp` points to `&Aarch64VCpu.host_stack_top`, see `run_guest()` in vcpu.rs.\n277 | |         \"ldr x10, [x9]\", // Get `host_stack_top` value from `&Aarch64VCpu.host_stack_top`.\n...   |\n281 | |         options(noreturn),\n282 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n","error[E0787]: the `asm!` macro is not allowed in naked functions\n   --> src/exception.rs:274:5\n    |\n274 | /     core::arch::asm!(\n275 | |         \"add sp, sp, 34 * 8\",       // Skip the exception frame.\n276 | |         \"mov x9, sp\", // Currently `sp` points to `&Aarch64VCpu.host_stack_top`, see `run_guest()` in vcpu.rs.\n277 | |         \"ldr x10, [x9]\", // Get `host_stack_top` value from `&Aarch64VCpu.host_stack_top`.\n...   |\n281 | |         options(noreturn),\n282 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n"]}},{"file":"src/lib.rs","count":2,"kinds":{"Clippy(Warn)":["warning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> src/lib.rs:4:12\n  |\n4 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n","warning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> src/lib.rs:4:12\n  |\n4 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=arm_vcpu, checker=Lockbud\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_3/kern-crates/arm_vcpu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling rustversion v1.0.18\n   Compiling proc-macro2 v1.0.89\n   Compiling bit_field v0.10.2\n   Compiling bitflags v1.3.2\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.4.0\n   Compiling x86 v0.52.0\n   Compiling raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling volatile v0.4.6\n   Compiling memory_addr v0.3.1\n   Compiling bitflags v2.6.0\n   Compiling quote v1.0.37\n   Compiling x86_64 v0.15.1\n   Compiling log v0.4.22\n[2024-11-02T04:32:31Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:32:31Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling scopeguard v1.2.0\n   Compiling axerrno v0.1.0\n   Compiling syn v2.0.86\n   Compiling percpu v0.1.5\n   Compiling cfg-if v1.0.0\n   Compiling spin v0.9.8\n   Compiling memory_set v0.3.1\n   Compiling numeric-enum-macro v0.2.0\n   Compiling tock-registers v0.8.1\n   Compiling page_table_entry v0.4.1\n   Compiling page_table_multiarch v0.4.1\n   Compiling lazyinit v0.2.1\n   Compiling axaddrspace v0.1.0 (https://github.com/arceos-hypervisor/axaddrspace.git#0e4ddd0f)\n   Compiling cortex-a v8.1.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling smccc v0.1.1\n   Compiling percpu_macros v0.1.5\n   Compiling axvcpu v0.1.0 (https://github.com/arceos-hypervisor/axvcpu.git#fba6c6a0)\n   Compiling arm_vcpu v0.1.0 (/home/runner/check/batch_3/kern-crates/arm_vcpu)\nerror: invalid register `x11`: unknown register\n   --> src/vcpu.rs:132:13\n    |\n132 |             in(\"x11\") &self.host_stack_top as *const _ as usize,\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `arm_vcpu` (lib) due to 1 previous error\n"]}},{"file":"(virtual) rap","count":1,"kinds":{"Cargo":["// pkg_name=arm_vcpu, checker=Rap\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_3/kern-crates/arm_vcpu\n// cmd=cargo +nightly-2024-06-30 rap -F -M\n   Compiling proc-macro2 v1.0.89\n   Compiling rustversion v1.0.18\n    Checking bit_field v0.10.2\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.13\n    Checking bitflags v1.3.2\n   Compiling autocfg v1.4.0\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n    Checking volatile v0.4.6\n    Checking bitflags v2.6.0\n    Checking memory_addr v0.3.1\n   Compiling quote v1.0.37\n    Checking x86_64 v0.15.1\n   Compiling axerrno v0.1.0\n    Checking scopeguard v1.2.0\n    Checking log v0.4.22\n   Compiling syn v2.0.86\n   Compiling percpu v0.1.5\n    Checking cfg-if v1.0.0\n    Checking spin v0.9.8\n    Checking page_table_entry v0.4.1\n    Checking memory_set v0.3.1\n    Checking page_table_multiarch v0.4.1\n    Checking numeric-enum-macro v0.2.0\n    Checking lazyinit v0.2.1\n    Checking tock-registers v0.8.1\n    Checking smccc v0.1.1\n    Checking axaddrspace v0.1.0 (https://github.com/arceos-hypervisor/axaddrspace.git#0e4ddd0f)\n    Checking cortex-a v8.1.1\n    Checking aarch64-cpu v9.4.0\n   Compiling percpu_macros v0.1.5\n    Checking axvcpu v0.1.0 (https://github.com/arceos-hypervisor/axvcpu.git#fba6c6a0)\n    Checking arm_vcpu v0.1.0 (/home/runner/check/batch_3/kern-crates/arm_vcpu)\nerror: invalid register `x11`: unknown register\n   --> src/vcpu.rs:132:13\n    |\n132 |             in(\"x11\") &self.host_stack_top as *const _ as usize,\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `arm_vcpu` (lib) due to 1 previous error\n04:32:44|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"src/vcpu.rs","count":1,"kinds":{"Clippy(Error)":["error: invalid register `x11`: unknown register\n   --> src/vcpu.rs:132:13\n    |\n132 |             in(\"x11\") &self.host_stack_top as *const _ as usize,\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Audit","Mirai","Rap","Rudra","Lockbud(Probably)","Lockbud(Possibly)","Outdated","Geiger","Unformatted"]}