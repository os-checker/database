{"repo":{"user":"kern-crates","repo":"axsignal"},"data":[{"user":"kern-crates","repo":"axsignal","pkg":"axsignal","count":3,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axsignal, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_5/kern-crates/axsignal\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling bit_field v0.10.2\n   Compiling bitflags v1.3.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n   Compiling raw-cpuid v10.7.0\n   Compiling autocfg v1.3.0\n   Compiling toml_edit v0.22.20\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.12\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\n   Compiling quote v1.0.37\n   Compiling scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling bitflags v2.6.0\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling cfg-if v1.0.0\n   Compiling syn v2.0.77\n   Compiling static_assertions v1.1.0\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling log v0.4.22\n   Compiling volatile v0.4.6\n   Compiling spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling aarch64-cpu v9.4.0\n   Compiling lazy_static v1.5.0\n   Compiling x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs","count":1,"kinds":{"Clippy(Error)":["error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axsignal, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_5/kern-crates/axsignal\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Blocking waiting for file lock on package cache\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n    Blocking waiting for file lock on package cache\n     Locking 62 packages to latest compatible versions\n      Adding bitflags v1.3.2 (latest: v2.6.0)\n      Adding raw-cpuid v10.7.0 (latest: v11.1.0)\n      Adding tock-registers v0.8.1 (latest: v0.9.0)\n      Adding volatile v0.4.6 (latest: v0.6.1)\n      Adding x86_64 v0.14.12 (latest: v0.15.1)\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.5.0\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling toml_edit v0.22.20\n   Compiling proc-macro2 v1.0.86\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.12\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\n   Compiling x86 v0.52.0\nerror: could not compile `axconfig` (build script) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Lockbud(Probably)","Lockbud(Possibly)","Unformatted"]}