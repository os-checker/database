{
  "repo": {
    "user": "kern-crates",
    "repo": "zCore"
  },
  "data": [
    {
      "user": "kern-crates",
      "repo": "zCore",
      "pkg": "zcore",
      "count": 43,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs",
          "features": "",
          "count": 15,
          "kinds": {
            "Clippy(Error)": [
              "error[E0463]: can't find crate for `core`\n  |\n  = note: the `x86_64-unknown-uefi` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-uefi`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n",
              "error[E0463]: can't find crate for `compiler_builtins`\n\n",
              "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:217:17\n    |\n217 |                 assert!(bit < Self::BIT_LENGTH);\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:227:17\n    |\n227 |                 assert!(range.start < Self::BIT_LENGTH);\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:228:17\n    |\n228 |                 assert!(range.end <= Self::BIT_LENGTH);\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:229:17\n    |\n229 |                 assert!(range.start < range.end);\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:241:17\n    |\n241 |                 assert!(bit < Self::BIT_LENGTH);\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:257:17\n    |\n257 |                 assert!(range.start < Self::BIT_LENGTH);\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:258:17\n    |\n258 |                 assert!(range.end <= Self::BIT_LENGTH);\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:259:17\n    |\n259 |                 assert!(range.start < range.end);\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:260:17\n    |\n260 |                 assert!(value << (Self::BIT_LENGTH - (range.end - range.start)) >>\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:298:9\n    |\n298 |         assert!(range.len() <= T::BIT_LENGTH);\n    |         ^^^^^^\n\n",
              "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:306:9\n    |\n306 |         assert!(slice_end - slice_start <= 1);\n    |         ^^^^^^\n\n",
              "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:335:9\n    |\n335 |         assert!(range.len() <= T::BIT_LENGTH);\n    |         ^^^^^^\n\n",
              "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:342:9\n    |\n342 |         assert!(slice_end - slice_start <= 1);\n    |         ^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `naive_timer`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs:7:5\n  |\n7 | use naive_timer::Timer;\n  |     ^^^^^^^^^^^ use of undeclared crate or module `naive_timer`\n\n",
              "error[E0599]: no method named `lock` found for struct `NAIVE_TIMER` in the current scope\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs:28:25\n   |\n12 | / lazy_static::lazy_static! {\n13 | |     static ref NAIVE_TIMER:Mutex<Timer> = Mutex::new(Timer::default());\n14 | | }\n   | |_- method `lock` not found for this struct\n...\n28 |               NAIVE_TIMER.lock().add(deadline, callback);\n   |                           ^^^^ method not found in `NAIVE_TIMER`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `lock`, perhaps you need to implement it:\n           candidate #1: `lock_api::mutex::RawMutex`\n\n",
              "error[E0599]: no method named `lock` found for struct `NAIVE_TIMER` in the current scope\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs:32:25\n   |\n12 | / lazy_static::lazy_static! {\n13 | |     static ref NAIVE_TIMER:Mutex<Timer> = Mutex::new(Timer::default());\n14 | | }\n   | |_- method `lock` not found for this struct\n...\n32 |               NAIVE_TIMER.lock().expire(timer_now());\n   |                           ^^^^ method not found in `NAIVE_TIMER`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `lock`, perhaps you need to implement it:\n           candidate #1: `lock_api::mutex::RawMutex`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.3.2/src/lib.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Error)": [
              "error[E0463]: can't find crate for `core`\n  |\n  = note: the `x86_64-unknown-uefi` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-uefi`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n",
              "error[E0463]: can't find crate for `compiler_builtins`\n\n",
              "error[E0463]: can't find crate for `core`\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.3.2/src/lib.rs:282:1\n    |\n282 | pub extern crate core as _core;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ can't find crate\n    |\n    = note: the `x86_64-unknown-uefi` target may not be installed\n    = help: consider downloading the target with `rustup target add x86_64-unknown-uefi`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/config.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0433]: failed to resolve: use of undeclared crate or module `uefi`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/config.rs:3:5\n  |\n3 | use uefi::proto::console::gop::ModeInfo;\n  |     ^^^^ use of undeclared crate or module `uefi`\n\n",
              "error[E0433]: failed to resolve: use of undeclared crate or module `uefi`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/config.rs:4:5\n  |\n4 | use uefi::table::boot::MemoryDescriptor;\n  |     ^^^^ use of undeclared crate or module `uefi`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/trap.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `trapframe::TrapFrame`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/trap.rs:2:5\n  |\n2 | use trapframe::TrapFrame;\n  |     ^^^^^^^^^^^^^^^^^^^^ no `TrapFrame` in the root\n\n",
              "error[E0433]: failed to resolve: use of undeclared crate or module `executor`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/trap.rs:41:17\n   |\n41 |                 executor::handle_timeout();\n   |                 ^^^^^^^^ use of undeclared crate or module `executor`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/boot.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0425]: cannot find function `init` in crate `trapframe`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/boot.rs:24:33\n   |\n24 |             unsafe { trapframe::init() };\n   |                                 ^^^^ not found in `trapframe`\n   |\nhelp: consider importing one of these items\n   |\n3  | use crate::imp::arch::timer::init;\n   |\n3  | use crate::net::init;\n   |\n3  | use zcore_drivers::bus::pci::init;\n   |\n3  | use zcore_drivers::net::e1000::init;\n   |\nhelp: if you import `init`, refer to it directly\n   |\n24 -             unsafe { trapframe::init() };\n24 +             unsafe { init() };\n   |\n\n",
              "error[E0425]: cannot find function `init` in crate `trapframe`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/boot.rs:31:33\n   |\n31 |             unsafe { trapframe::init() };\n   |                                 ^^^^ not found in `trapframe`\n   |\nhelp: consider importing one of these items\n   |\n3  | use crate::imp::arch::timer::init;\n   |\n3  | use crate::net::init;\n   |\n3  | use zcore_drivers::bus::pci::init;\n   |\n3  | use zcore_drivers::net::e1000::init;\n   |\nhelp: if you import `init`, refer to it directly\n   |\n31 -             unsafe { trapframe::init() };\n31 +             unsafe { init() };\n   |\n\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 2,
          "kinds": {
            "Cargo": [
              "// pkg_name=zcore, checker=Clippy\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-musl\n// features=\n// pkg_dir=/home/runner/check/batch_32/kern-crates/zCore\n// cmd=cargo clippy --target x86_64-unknown-linux-musl  --no-deps\n// timestamp=2025-02-16 22:38:46.698737984 +08:00:00\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling lock_api v0.4.12\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.12\n    Checking log v0.4.21\n   Compiling rustversion v1.0.17\n    Checking scopeguard v1.2.0\n    Checking raw-cpuid v10.7.0\n    Checking volatile v0.4.6\n   Compiling quote v1.0.36\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.68\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n    Checking volatile v0.3.0\n    Checking cfg-if v1.0.0\n    Checking lazy_static v1.5.0\n    Checking rsdp v2.0.1\n    Checking x86_64 v0.14.12\n    Checking managed v0.8.0\n    Checking byteorder v1.5.0\n    Checking futures-core v0.3.30\n   Compiling x86 v0.46.0\n    Checking futures-sink v0.3.30\n   Compiling trapframe v0.9.0\n    Checking bit v0.1.1\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking acpi v4.1.1\n    Checking x2apic v0.4.3\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking numeric-enum-macro v0.2.0\n    Checking futures-task v0.3.30\n    Checking futures-channel v0.3.30\n    Checking futures-io v0.3.30\n    Checking zero v0.1.3\n    Checking ahash v0.4.8\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n    Checking uniset v0.2.0 (https://github.com/pleasewhy/uniset?rev=40edbd7506979daa1d49f935b568873a6a21c5c0#40edbd75)\n    Checking unicycle v0.7.1 (https://github.com/pleasewhy/unicycle?rev=904f1c061d4784a5642e092d308cf523a9270c6e#904f1c06)\n    Checking hashbrown v0.9.1\n    Checking xmas-elf v0.7.0\n    Checking region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\n    Checking downcast-rs v1.2.1\n    Checking woke v0.0.2\n    Checking bit-iter v1.2.0\n   Compiling zcore v0.1.0 (/home/runner/check/batch_32/kern-crates/zCore)\n    Checking customizable-buddy v0.0.3\n    Checking executor v0.1.0 (https://github.com/DeathWish5/PreemptiveScheduler?rev=e8cd353#e8cd3531)\n   Compiling futures-macro v0.3.30\n   Compiling git-version-macro v0.3.9\n    Checking git-version v0.3.9\n    Checking kernel-hal v0.1.0 (https://github.com/kern-crates/zcore-kernel-hal.git?rev=eae409f2#eae409f2)\n    Checking futures-util v0.3.30\nerror: could not compile `kernel-hal` due to 16 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=zcore, checker=Clippy\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-uefi\n// features=\n// pkg_dir=/home/runner/check/batch_32/kern-crates/zCore\n// cmd=cargo clippy --target x86_64-unknown-uefi  --no-deps\n// timestamp=2025-02-16 22:38:44.102369348 +08:00:00\n    Updating git repository `https://github.com/elliott10/rcore-fs`\n    Updating git repository `https://github.com/kern-crates/zcore-linux-object.git`\n    Updating git repository `https://github.com/kern-crates/zcore-loader.git`\n    Updating git repository `https://github.com/Luchangcheng2333/rayboot`\n    Updating git repository `https://github.com/rcore-os/rboot.git`\n    Updating git repository `https://github.com/kern-crates/zcore-linux-syscall.git`\n    Updating git repository `https://github.com/kern-crates/zcore-zircon-syscall.git`\n Downloading crates ...\n  Downloaded cfg-if v1.0.0\n  Downloaded bit_field v0.10.2\n  Downloaded futures v0.3.30\n  Downloaded futures-channel v0.3.30\n  Downloaded acpi v4.1.1\n  Downloaded bitflags v1.3.2\n  Downloaded bit-iter v1.2.0\n  Downloaded pin-project-lite v0.2.14\n  Downloaded numeric-enum-macro v0.2.0\n  Downloaded git-version-macro v0.3.9\n  Downloaded rsdp v2.0.1\n  Downloaded git-version v0.3.9\n  Downloaded woke v0.0.2\n  Downloaded zero v0.1.3\n  Downloaded volatile v0.3.0\n  Downloaded pin-utils v0.1.0\n  Downloaded rustversion v1.0.17\n  Downloaded trapframe v0.9.0\n  Downloaded volatile v0.4.6\n  Downloaded byteorder v1.5.0\n  Downloaded futures-core v0.3.30\n  Downloaded futures-io v0.3.30\n  Downloaded x2apic v0.4.3\n  Downloaded scopeguard v1.2.0\n  Downloaded xmas-elf v0.7.0\n  Downloaded futures-sink v0.3.30\n  Downloaded customizable-buddy v0.0.3\n  Downloaded futures-task v0.3.30\n  Downloaded downcast-rs v1.2.1\n  Downloaded spin v0.9.8\n  Downloaded quote v1.0.36\n  Downloaded autocfg v1.3.0\n  Downloaded lock_api v0.4.12\n  Downloaded lazy_static v1.5.0\n  Downloaded futures-macro v0.3.30\n  Downloaded unicode-ident v1.0.12\n  Downloaded proc-macro2 v1.0.86\n  Downloaded raw-cpuid v10.7.0\n  Downloaded ahash v0.4.8\n  Downloaded bitflags v2.6.0\n  Downloaded paste v1.0.15\n  Downloaded x86_64 v0.14.12\n  Downloaded hashbrown v0.9.1\n  Downloaded managed v0.8.0\n  Downloaded futures-util v0.3.30\n  Downloaded syn v2.0.68\n  Downloaded x86 v0.46.0\n  Downloaded bit v0.1.1\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling autocfg v1.3.0\n   Compiling proc-macro2 v1.0.86\nerror: could not compile `bitflags` due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `bit_field` due to 16 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 2,
          "kinds": {
            "Cargo": [
              "// pkg_name=zcore, checker=Lockbud\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-uefi\n// features=\n// pkg_dir=/home/runner/check/batch_5/kern-crates/zCore\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-uefi \n// timestamp=2025-03-07 22:01:11.510349902 +08:00:00\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling autocfg v1.3.0\n   Compiling proc-macro2 v1.0.86\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `x86_64-unknown-uefi` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-uefi`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bit_field` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `bitflags` (lib) due to 1 previous error\n",
              "// pkg_name=zcore, checker=Lockbud\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-musl\n// features=\n// pkg_dir=/home/runner/check/batch_5/kern-crates/zCore\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-musl \n// timestamp=2025-03-07 22:01:11.931790958 +08:00:00\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n   Compiling lock_api v0.4.12\n   Compiling unicode-ident v1.0.12\n   Compiling log v0.4.21\n   Compiling rustversion v1.0.17\n   Compiling scopeguard v1.2.0\n[2025-03-07T14:01:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-03-07T14:01:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling raw-cpuid v10.7.0\n   Compiling bitflags v2.6.0\n   Compiling quote v1.0.36\n   Compiling volatile v0.4.6\n   Compiling syn v2.0.68\n   Compiling spin v0.9.8\n   Compiling x86_64 v0.14.12\n   Compiling paste v1.0.15\n   Compiling volatile v0.3.0\n   Compiling cfg-if v1.0.0\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n   Compiling lazy_static v1.5.0\n   Compiling rsdp v2.0.1\n   Compiling trapframe v0.9.0\n   Compiling futures-core v0.3.30\n   Compiling bit v0.1.1\n   Compiling futures-sink v0.3.30\n   Compiling x86 v0.46.0\n   Compiling managed v0.8.0\nFor more information about this error, try `rustc --explain E0053`.\n   Compiling byteorder v1.5.0\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 2,
          "kinds": {
            "Cargo": [
              "// pkg_name=zcore, checker=Rapx\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-musl\n// features=\n// pkg_dir=/home/runner/check/batch_32/kern-crates/zCore\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-musl \n// timestamp=2025-02-16 22:39:10.49440473 +08:00:00\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling autocfg v1.3.0\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.12\n   Compiling rustversion v1.0.17\n    Checking log v0.4.21\n    Checking scopeguard v1.2.0\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n   Compiling quote v1.0.36\n    Checking bitflags v2.6.0\n    Checking volatile v0.4.6\n   Compiling syn v2.0.68\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n    Checking x86_64 v0.14.12\n    Checking volatile v0.3.0\n    Checking cfg-if v1.0.0\n    Checking lazy_static v1.5.0\n    Checking rsdp v2.0.1\n    Checking managed v0.8.0\n    Checking byteorder v1.5.0\n    Checking futures-core v0.3.30\n    Checking futures-sink v0.3.30\n    Checking bit v0.1.1\n   Compiling trapframe v0.9.0\n   Compiling x86 v0.46.0\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking x2apic v0.4.3\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking acpi v4.1.1\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n    Checking pin-project-lite v0.2.14\n    Checking numeric-enum-macro v0.2.0\n    Checking futures-task v0.3.30\n    Checking pin-utils v0.1.0\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking futures-channel v0.3.30\n    Checking futures-io v0.3.30\n    Checking zero v0.1.3\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n    Checking uniset v0.2.0 (https://github.com/pleasewhy/uniset?rev=40edbd7506979daa1d49f935b568873a6a21c5c0#40edbd75)\n    Checking ahash v0.4.8\n    Checking hashbrown v0.9.1\n    Checking unicycle v0.7.1 (https://github.com/pleasewhy/unicycle?rev=904f1c061d4784a5642e092d308cf523a9270c6e#904f1c06)\n    Checking xmas-elf v0.7.0\n    Checking bit-iter v1.2.0\n    Checking region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\nerror[E0635]: unknown feature `btree_drain_filter`\n --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:2:12\n  |\n2 | #![feature(btree_drain_filter)]\n  |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `drain_filter` found for struct `BTreeSet` in the current scope\n   --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:120:14\n    |\n119 | /         self.regions\n120 | |             .drain_filter(|r| {\n    | |             -^^^^^^^^^^^^ method not found in `BTreeSet<Region>`\n    | |_____________|\n    |\n\nSome errors have detailed explanations: E0599, E0635.\nFor more information about an error, try `rustc --explain E0599`.\nerror: could not compile `region-alloc` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n14:39:16|RAP|ERROR|: Finished with non-zero exit code.\n",
              "// pkg_name=zcore, checker=Rapx\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-uefi\n// features=\n// pkg_dir=/home/runner/check/batch_32/kern-crates/zCore\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-uefi \n// timestamp=2025-02-16 22:39:09.786090594 +08:00:00\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n   Compiling autocfg v1.3.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `x86_64-unknown-uefi` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-uefi`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bit_field` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `bitflags` (lib) due to 1 previous error\n14:39:10|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "Cargo.lock",
          "features": "",
          "count": 2,
          "kinds": {
            "Audit": [
              "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 732 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (224 crate dependencies)\nCrate:     instant\nVersion:   0.1.13\nWarning:   unmaintained\nTitle:     `instant` is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0384\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0384\nDependency tree:\ninstant 0.1.13\n└── fastrand 1.9.0\n    └── futures-lite 1.13.0\n        ├── async-std 1.12.0\n        │   ├── zcore-drivers 0.1.0\n        │   │   ├── linux-object 0.1.0\n        │   │   │   ├── zcore-loader 0.1.0\n        │   │   │   │   └── zcore 0.1.0\n        │   │   │   ├── zcore 0.1.0\n        │   │   │   └── linux-syscall 0.1.0\n        │   │   │       └── zcore-loader 0.1.0\n        │   │   └── kernel-hal 0.1.0\n        │   │       ├── zircon-syscall 0.1.0\n        │   │       │   └── zcore-loader 0.1.0\n        │   │       ├── zircon-object 0.1.0\n        │   │       │   ├── zircon-syscall 0.1.0\n        │   │       │   ├── zcore-loader 0.1.0\n        │   │       │   ├── zcore 0.1.0\n        │   │       │   ├── linux-syscall 0.1.0\n        │   │       │   └── linux-object 0.1.0\n        │   │       ├── zcore-loader 0.1.0\n        │   │       ├── zcore 0.1.0\n        │   │       ├── linux-syscall 0.1.0\n        │   │       └── linux-object 0.1.0\n        │   ├── zcore 0.1.0\n        │   └── kernel-hal 0.1.0\n        └── async-io 1.13.0\n            └── async-std 1.12.0\n\nCrate:     critical-section\nVersion:   1.1.2\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.2\n└── riscv 0.10.1\n    ├── zcore-drivers 0.1.0\n    │   ├── linux-object 0.1.0\n    │   │   ├── zcore-loader 0.1.0\n    │   │   │   └── zcore 0.1.0\n    │   │   ├── zcore 0.1.0\n    │   │   └── linux-syscall 0.1.0\n    │   │       └── zcore-loader 0.1.0\n    │   └── kernel-hal 0.1.0\n    │       ├── zircon-syscall 0.1.0\n    │       │   └── zcore-loader 0.1.0\n    │       ├── zircon-object 0.1.0\n    │       │   ├── zircon-syscall 0.1.0\n    │       │   ├── zcore-loader 0.1.0\n    │       │   ├── zcore 0.1.0\n    │       │   ├── linux-syscall 0.1.0\n    │       │   └── linux-object 0.1.0\n    │       ├── zcore-loader 0.1.0\n    │       ├── zcore 0.1.0\n    │       ├── linux-syscall 0.1.0\n    │       └── linux-object 0.1.0\n    ├── zcore 0.1.0\n    └── kernel-hal 0.1.0\n\nCrate:     futures-util\nVersion:   0.3.30\nWarning:   yanked\nDependency tree:\nfutures-util 0.3.30\n└── futures 0.3.30\n    ├── zircon-syscall 0.1.0\n    │   └── zcore-loader 0.1.0\n    │       └── zcore 0.1.0\n    ├── zircon-object 0.1.0\n    │   ├── zircon-syscall 0.1.0\n    │   ├── zcore-loader 0.1.0\n    │   ├── zcore 0.1.0\n    │   ├── linux-syscall 0.1.0\n    │   │   └── zcore-loader 0.1.0\n    │   └── linux-object 0.1.0\n    │       ├── zcore-loader 0.1.0\n    │       ├── zcore 0.1.0\n    │       └── linux-syscall 0.1.0\n    └── linux-syscall 0.1.0\n\nwarning: 3 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 732,\n    \"last-commit\": \"ddccfe8aced779f7b54d27bbe7e122ecb1dda33a\",\n    \"last-updated\": \"2025-02-14T08:11:43Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 224\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"instant\",\n          \"version\": \"0.1.13\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e0242819d153cba4b4b05a5a8f2a7e9bbf97b6055b2a002b395c96b5ff3c0222\",\n          \"dependencies\": [\n            {\n              \"name\": \"cfg-if\",\n              \"version\": \"1.0.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0384\",\n          \"package\": \"instant\",\n          \"title\": \"`instant` is unmaintained\",\n          \"description\": \"This crate is no longer maintained, and the author recommends using the maintained [`web-time`] crate instead.\\n\\n[`web-time`]: https://crates.io/crates/web-time\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [\n            \"https://crates.io/crates/instant/0.1.13\",\n            \"https://github.com/sebcrozet/instant/issues/52\"\n          ],\n          \"source\": null,\n          \"url\": null,\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.2\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"7059fff8937831a9ae6f0fe4d658ffabf58f2ca96aa9dec1c889f936f705f216\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      },\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"futures-util\",\n          \"version\": \"0.3.30\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48\",\n          \"dependencies\": [\n            {\n              \"name\": \"futures-core\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-macro\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-sink\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-task\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-project-lite\",\n              \"version\": \"0.2.14\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-utils\",\n              \"version\": \"0.1.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}",
              "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 732 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (224 crate dependencies)\nCrate:     instant\nVersion:   0.1.13\nWarning:   unmaintained\nTitle:     `instant` is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0384\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0384\nDependency tree:\ninstant 0.1.13\n└── fastrand 1.9.0\n    └── futures-lite 1.13.0\n        ├── async-std 1.12.0\n        │   ├── zcore-drivers 0.1.0\n        │   │   ├── linux-object 0.1.0\n        │   │   │   ├── zcore-loader 0.1.0\n        │   │   │   │   └── zcore 0.1.0\n        │   │   │   ├── zcore 0.1.0\n        │   │   │   └── linux-syscall 0.1.0\n        │   │   │       └── zcore-loader 0.1.0\n        │   │   └── kernel-hal 0.1.0\n        │   │       ├── zircon-syscall 0.1.0\n        │   │       │   └── zcore-loader 0.1.0\n        │   │       ├── zircon-object 0.1.0\n        │   │       │   ├── zircon-syscall 0.1.0\n        │   │       │   ├── zcore-loader 0.1.0\n        │   │       │   ├── zcore 0.1.0\n        │   │       │   ├── linux-syscall 0.1.0\n        │   │       │   └── linux-object 0.1.0\n        │   │       ├── zcore-loader 0.1.0\n        │   │       ├── zcore 0.1.0\n        │   │       ├── linux-syscall 0.1.0\n        │   │       └── linux-object 0.1.0\n        │   ├── zcore 0.1.0\n        │   └── kernel-hal 0.1.0\n        └── async-io 1.13.0\n            └── async-std 1.12.0\n\nCrate:     critical-section\nVersion:   1.1.2\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.2\n└── riscv 0.10.1\n    ├── zcore-drivers 0.1.0\n    │   ├── linux-object 0.1.0\n    │   │   ├── zcore-loader 0.1.0\n    │   │   │   └── zcore 0.1.0\n    │   │   ├── zcore 0.1.0\n    │   │   └── linux-syscall 0.1.0\n    │   │       └── zcore-loader 0.1.0\n    │   └── kernel-hal 0.1.0\n    │       ├── zircon-syscall 0.1.0\n    │       │   └── zcore-loader 0.1.0\n    │       ├── zircon-object 0.1.0\n    │       │   ├── zircon-syscall 0.1.0\n    │       │   ├── zcore-loader 0.1.0\n    │       │   ├── zcore 0.1.0\n    │       │   ├── linux-syscall 0.1.0\n    │       │   └── linux-object 0.1.0\n    │       ├── zcore-loader 0.1.0\n    │       ├── zcore 0.1.0\n    │       ├── linux-syscall 0.1.0\n    │       └── linux-object 0.1.0\n    ├── zcore 0.1.0\n    └── kernel-hal 0.1.0\n\nCrate:     futures-util\nVersion:   0.3.30\nWarning:   yanked\nDependency tree:\nfutures-util 0.3.30\n└── futures 0.3.30\n    ├── zircon-syscall 0.1.0\n    │   └── zcore-loader 0.1.0\n    │       └── zcore 0.1.0\n    ├── zircon-object 0.1.0\n    │   ├── zircon-syscall 0.1.0\n    │   ├── zcore-loader 0.1.0\n    │   ├── zcore 0.1.0\n    │   ├── linux-syscall 0.1.0\n    │   │   └── zcore-loader 0.1.0\n    │   └── linux-object 0.1.0\n    │       ├── zcore-loader 0.1.0\n    │       ├── zcore 0.1.0\n    │       └── linux-syscall 0.1.0\n    └── linux-syscall 0.1.0\n\nwarning: 3 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 732,\n    \"last-commit\": \"ddccfe8aced779f7b54d27bbe7e122ecb1dda33a\",\n    \"last-updated\": \"2025-02-14T08:11:43Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 224\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"instant\",\n          \"version\": \"0.1.13\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e0242819d153cba4b4b05a5a8f2a7e9bbf97b6055b2a002b395c96b5ff3c0222\",\n          \"dependencies\": [\n            {\n              \"name\": \"cfg-if\",\n              \"version\": \"1.0.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0384\",\n          \"package\": \"instant\",\n          \"title\": \"`instant` is unmaintained\",\n          \"description\": \"This crate is no longer maintained, and the author recommends using the maintained [`web-time`] crate instead.\\n\\n[`web-time`]: https://crates.io/crates/web-time\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [\n            \"https://crates.io/crates/instant/0.1.13\",\n            \"https://github.com/sebcrozet/instant/issues/52\"\n          ],\n          \"source\": null,\n          \"url\": null,\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.2\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"7059fff8937831a9ae6f0fe4d658ffabf58f2ca96aa9dec1c889f936f705f216\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      },\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"futures-util\",\n          \"version\": \"0.3.30\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48\",\n          \"dependencies\": [\n            {\n              \"name\": \"futures-core\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-macro\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-sink\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-task\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-project-lite\",\n              \"version\": \"0.2.14\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-utils\",\n              \"version\": \"0.1.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 2,
          "kinds": {
            "Outdated": [
              "pkg=zcore, checker=Outdated\ntoolchain=nightly-2022-10-27, target=x86_64-unknown-linux-musl\nfeatures=\npkg_dir=/home/runner/check/batch_32/kern-crates/zCore\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 22:39:22.974077432 +08:00:00\n\nName                    Project  Compat  Latest  Kind    Platform\n----                    -------  ------  ------  ----    --------\nasync-std               1.12.0   1.13.0  1.13.0  Normal  cfg(not(target_os = \"none\"))\nbuddy_system_allocator  0.8.0    ---     0.11.0  Normal  cfg(all(target_os = \"none\", target_arch = \"x86_64\"))\nchrono                  0.4.38   0.4.39  0.4.39  Normal  cfg(not(target_os = \"none\"))\nlog                     0.4.21   0.4.25  0.4.25  Normal  ---\nriscv                   0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsbi-rt                  0.0.2    ---     0.0.3   Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\n",
              "pkg=zcore, checker=Outdated\ntoolchain=nightly-2022-10-27, target=x86_64-unknown-uefi\nfeatures=\npkg_dir=/home/runner/check/batch_32/kern-crates/zCore\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 22:39:21.649113726 +08:00:00\n\nName                    Project  Compat  Latest  Kind    Platform\n----                    -------  ------  ------  ----    --------\nasync-std               1.12.0   1.13.0  1.13.0  Normal  cfg(not(target_os = \"none\"))\nbuddy_system_allocator  0.8.0    ---     0.11.0  Normal  cfg(all(target_os = \"none\", target_arch = \"x86_64\"))\nchrono                  0.4.38   0.4.39  0.4.39  Normal  cfg(not(target_os = \"none\"))\nlog                     0.4.21   0.4.25  0.4.25  Normal  ---\nriscv                   0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsbi-rt                  0.0.2    ---     0.0.3   Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/cpu.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `raw_cpuid`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/cpu.rs:3:5\n  |\n3 | use raw_cpuid::CpuId;\n  |     ^^^^^^^^^ use of undeclared crate or module `raw_cpuid`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/drivers.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error[E0433]: failed to resolve: use of undeclared crate or module `x2apic`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/drivers.rs:36:9\n   |\n36 |     use x2apic::lapic::{TimerDivide, TimerMode};\n   |         ^^^^^^ use of undeclared crate or module `x2apic`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mem.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error[E0433]: failed to resolve: use of undeclared crate or module `uefi`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mem.rs:5:5\n  |\n5 | use uefi::table::boot::MemoryType;\n  |     ^^^^ use of undeclared crate or module `uefi`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error[E0433]: failed to resolve: use of undeclared crate or module `x86_smpboot`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mod.rs:51:9\n   |\n51 |         x86_smpboot::start_application_processors(\n   |         ^^^^^^^^^^^ use of undeclared crate or module `x86_smpboot`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/thread.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error[E0433]: failed to resolve: use of undeclared crate or module `executor`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/thread.rs:17:13\n   |\n17 |             executor::spawn(future);\n   |             ^^^^^^^^ use of undeclared crate or module `executor`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/common/context.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error[E0599]: no method named `run` found for struct `trapframe::UserContext` in the current scope\n   --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/common/context.rs:232:24\n    |\n232 |                 self.0.run()\n    |                        ^^^ method not found in `trapframe::UserContext`\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "kern-crates",
      "repo": "zCore",
      "pkg": "rboot",
      "count": 10,
      "raw_reports": [
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 2,
          "kinds": {
            "Cargo": [
              "// pkg_name=rboot, checker=Lockbud\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-uefi\n// features=\n// pkg_dir=/home/runner/check/batch_5/kern-crates/zCore/rboot\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-uefi \n// timestamp=2025-03-07 22:01:09.85067185 +08:00:00\nwarning: `/home/runner/check/batch_5/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/batch_5/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: \"/home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/Cargo.lock\" does not exist, unable to build with the standard library, try:\n        rustup component add rust-src --toolchain nightly-2025-02-01-x86_64-unknown-linux-gnu\n",
              "// pkg_name=rboot, checker=Lockbud\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-musl\n// features=\n// pkg_dir=/home/runner/check/batch_5/kern-crates/zCore/rboot\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-musl \n// timestamp=2025-03-07 22:01:09.946752306 +08:00:00\nwarning: `/home/runner/check/batch_5/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/batch_5/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: \"/home/runner/.rustup/toolchains/nightly-2025-02-01-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/Cargo.lock\" does not exist, unable to build with the standard library, try:\n        rustup component add rust-src --toolchain nightly-2025-02-01-x86_64-unknown-linux-gnu\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 2,
          "kinds": {
            "Cargo": [
              "// pkg_name=rboot, checker=Rapx\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-uefi\n// features=\n// pkg_dir=/home/runner/check/batch_32/kern-crates/zCore/rboot\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-uefi \n// timestamp=2025-02-16 22:39:07.027962497 +08:00:00\nwarning: `/home/runner/check/batch_32/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/batch_32/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: \"/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/Cargo.lock\" does not exist, unable to build with the standard library, try:\n        rustup component add rust-src --toolchain nightly-2024-10-12-x86_64-unknown-linux-gnu\n14:39:07|RAP|ERROR|: Finished with non-zero exit code.\n",
              "// pkg_name=rboot, checker=Rapx\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-musl\n// features=\n// pkg_dir=/home/runner/check/batch_32/kern-crates/zCore/rboot\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-musl \n// timestamp=2025-02-16 22:39:07.319893743 +08:00:00\nwarning: `/home/runner/check/batch_32/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/batch_32/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: \"/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/Cargo.lock\" does not exist, unable to build with the standard library, try:\n        rustup component add rust-src --toolchain nightly-2024-10-12-x86_64-unknown-linux-gnu\n14:39:07|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 2,
          "kinds": {
            "Cargo": [
              "// pkg_name=rboot, checker=SemverChecks\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-uefi\n// features=\n// pkg_dir=/home/runner/check/batch_33/kern-crates/zCore/rboot\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-uefi \n// timestamp=2025-03-07 17:18:51.0897821 +08:00:00\nwarning: `/home/runner/check/batch_33/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\n    Building rboot v0.1.6 (current)\nerror: running cargo-doc on crate 'rboot' failed with output:\n-----\nwarning: `/home/runner/check/batch_33/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: \"/home/runner/.rustup/toolchains/nightly-2025-01-26-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/Cargo.lock\" does not exist, unable to build with the standard library, try:\n        rustup component add rust-src --toolchain nightly-2025-01-26-x86_64-unknown-linux-gnu\n\n-----\n\nerror: failed to build rustdoc for crate rboot v0.1.6\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_33/kern-crates/zCore/rboot --features default,rboot,uefi-services &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rboot v0.1.6\n",
              "// pkg_name=rboot, checker=SemverChecks\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-musl\n// features=\n// pkg_dir=/home/runner/check/batch_33/kern-crates/zCore/rboot\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-musl \n// timestamp=2025-03-07 17:18:51.574276559 +08:00:00\nwarning: `/home/runner/check/batch_33/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\n    Building rboot v0.1.6 (current)\nerror: running cargo-doc on crate 'rboot' failed with output:\n-----\nwarning: `/home/runner/check/batch_33/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: \"/home/runner/.rustup/toolchains/nightly-2025-01-26-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/Cargo.lock\" does not exist, unable to build with the standard library, try:\n        rustup component add rust-src --toolchain nightly-2025-01-26-x86_64-unknown-linux-gnu\n\n-----\n\nerror: failed to build rustdoc for crate rboot v0.1.6\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_33/kern-crates/zCore/rboot --features default,rboot,uefi-services &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rboot v0.1.6\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 2,
          "kinds": {
            "Outdated": [
              "pkg=rboot, checker=Outdated\ntoolchain=nightly-2022-10-27, target=x86_64-unknown-uefi\nfeatures=\npkg_dir=/home/runner/check/batch_32/kern-crates/zCore/rboot\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 22:39:18.082269438 +08:00:00\n\nName           Project  Compat  Latest  Kind    Platform\n----           -------  ------  ------  ----    --------\nuefi           0.14.0   ---     0.34.1  Normal  ---\nuefi-services  0.11.0   ---     0.25.0  Normal  ---\nx86_64         0.14.13  ---     0.15.2  Normal  ---\nxmas-elf       0.8.0    ---     0.9.1   Normal  ---\n",
              "pkg=rboot, checker=Outdated\ntoolchain=nightly-2022-10-27, target=x86_64-unknown-linux-musl\nfeatures=\npkg_dir=/home/runner/check/batch_32/kern-crates/zCore/rboot\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 22:39:18.370534927 +08:00:00\n\nName           Project  Compat  Latest  Kind    Platform\n----           -------  ------  ------  ----    --------\nuefi           0.14.0   ---     0.34.1  Normal  ---\nuefi-services  0.11.0   ---     0.25.0  Normal  ---\nx86_64         0.14.13  ---     0.15.2  Normal  ---\nxmas-elf       0.8.0    ---     0.9.1   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 2,
          "kinds": {
            "Semver Violation": [
              "pkg=rboot, checker=SemverChecks\ntoolchain=nightly-2022-10-27, target=x86_64-unknown-uefi\nfeatures=\npkg_dir=/home/runner/check/batch_33/kern-crates/zCore/rboot\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-uefi \ntimestamp=2025-03-07 17:18:51.572470874 +08:00:00\n\n\nstdout:\n\nstderr:\nwarning: `/home/runner/check/batch_33/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\n    Building rboot v0.1.6 (current)\nerror: running cargo-doc on crate 'rboot' failed with output:\n-----\nwarning: `/home/runner/check/batch_33/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: \"/home/runner/.rustup/toolchains/nightly-2025-01-26-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/Cargo.lock\" does not exist, unable to build with the standard library, try:\n        rustup component add rust-src --toolchain nightly-2025-01-26-x86_64-unknown-linux-gnu\n\n-----\n\nerror: failed to build rustdoc for crate rboot v0.1.6\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_33/kern-crates/zCore/rboot --features default,rboot,uefi-services &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rboot v0.1.6\n",
              "pkg=rboot, checker=SemverChecks\ntoolchain=nightly-2022-10-27, target=x86_64-unknown-linux-musl\nfeatures=\npkg_dir=/home/runner/check/batch_33/kern-crates/zCore/rboot\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-musl \ntimestamp=2025-03-07 17:18:52.017656887 +08:00:00\n\n\nstdout:\n\nstderr:\nwarning: `/home/runner/check/batch_33/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\n    Building rboot v0.1.6 (current)\nerror: running cargo-doc on crate 'rboot' failed with output:\n-----\nwarning: `/home/runner/check/batch_33/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: \"/home/runner/.rustup/toolchains/nightly-2025-01-26-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/Cargo.lock\" does not exist, unable to build with the standard library, try:\n        rustup component add rust-src --toolchain nightly-2025-01-26-x86_64-unknown-linux-gnu\n\n-----\n\nerror: failed to build rustdoc for crate rboot v0.1.6\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_33/kern-crates/zCore/rboot --features default,rboot,uefi-services &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rboot v0.1.6\n"
            ]
          }
        }
      ]
    },
    {
      "user": "kern-crates",
      "repo": "zCore",
      "pkg": "zircon-user",
      "count": 8,
      "raw_reports": [
        {
          "file": "(virtual) outdated",
          "features": "",
          "count": 2,
          "kinds": {
            "Cargo": [
              "// pkg_name=zircon-user, checker=Outdated\n// toolchain=nightly-2022-01-20, target=x86_64-unknown-linux-musl\n// features=\n// pkg_dir=/home/runner/check/batch_32/kern-crates/zCore/zcore-zircon-user\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n// timestamp=2025-02-16 22:39:23.019787098 +08:00:00\nwarning: `/home/runner/check/batch_32/kern-crates/zCore/zcore-zircon-user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/batch_32/kern-crates/zCore/zcore-zircon-user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: failed to run `rustc` to learn about target-specific information\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-2025-01-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names -L ../prebuilt/zircon/x64 --target x86_64-fuchsia --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg` (exit status: 1)\n  --- stderr\n  error: Error loading target specification: Could not find specification for target \"x86_64-fuchsia\". Run `rustc --print target-list` for a list of built-in targets\n\n",
              "// pkg_name=zircon-user, checker=Outdated\n// toolchain=nightly-2022-01-20, target=x86_64-unknown-uefi\n// features=\n// pkg_dir=/home/runner/check/batch_32/kern-crates/zCore/zcore-zircon-user\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n// timestamp=2025-02-16 22:39:22.975457564 +08:00:00\nwarning: `/home/runner/check/batch_32/kern-crates/zCore/zcore-zircon-user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/batch_32/kern-crates/zCore/zcore-zircon-user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: failed to run `rustc` to learn about target-specific information\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-2025-01-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names -L ../prebuilt/zircon/x64 --target x86_64-fuchsia --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg` (exit status: 1)\n  --- stderr\n  error: Error loading target specification: Could not find specification for target \"x86_64-fuchsia\". Run `rustc --print target-list` for a list of built-in targets\n\n"
            ]
          }
        },
        {
          "file": "src/bin/hello.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0463]: can't find crate for `std`\n  |\n  = note: the `x86_64-unknown-uefi` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-uefi`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n",
              "error: cannot find macro `println` in this scope\n --> src/bin/hello.rs:2:5\n  |\n2 |     println!(\"Hello, zCore!\");\n  |     ^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=zircon-user, checker=Clippy\n// toolchain=nightly-2022-01-20, target=x86_64-unknown-uefi\n// features=\n// pkg_dir=/home/runner/check/batch_32/kern-crates/zCore/zcore-zircon-user\n// cmd=cargo clippy --target x86_64-unknown-uefi  --no-deps\n// timestamp=2025-02-16 22:38:55.936814117 +08:00:00\n    Checking zircon-user v0.1.0 (/home/runner/check/batch_32/kern-crates/zCore/zcore-zircon-user)\nerror: could not compile `zircon-user` due to 4 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=zircon-user, checker=Lockbud\n// toolchain=nightly-2022-01-20, target=x86_64-unknown-uefi\n// features=\n// pkg_dir=/home/runner/check/batch_5/kern-crates/zCore/zcore-zircon-user\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-uefi \n// timestamp=2025-03-07 22:01:16.54531967 +08:00:00\nwarning: `/home/runner/check/batch_5/kern-crates/zCore/zcore-zircon-user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/batch_5/kern-crates/zCore/zcore-zircon-user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\n   Compiling zircon-user v0.1.0 (/home/runner/check/batch_5/kern-crates/zCore/zcore-zircon-user)\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `x86_64-unknown-uefi` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-uefi`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `zircon-user` (bin \"hello\") due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=zircon-user, checker=Rapx\n// toolchain=nightly-2022-01-20, target=x86_64-unknown-uefi\n// features=\n// pkg_dir=/home/runner/check/batch_32/kern-crates/zCore/zcore-zircon-user\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-uefi \n// timestamp=2025-02-16 22:39:16.737945162 +08:00:00\nwarning: `/home/runner/check/batch_32/kern-crates/zCore/zcore-zircon-user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/batch_32/kern-crates/zCore/zcore-zircon-user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\n    Checking zircon-user v0.1.0 (/home/runner/check/batch_32/kern-crates/zCore/zcore-zircon-user)\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `x86_64-unknown-uefi` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-uefi`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `zircon-user` (bin \"hello\") due to 1 previous error\n14:39:17|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "unkonwn-but-maybe-important",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error: requires `sized` lang_item\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "kern-crates",
      "repo": "zCore",
      "pkg": "uart",
      "count": 4,
      "raw_reports": [
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 2,
          "kinds": {
            "Cargo": [
              "// pkg_name=uart, checker=Lockbud\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-musl\n// features=\n// pkg_dir=/home/runner/check/batch_5/kern-crates/zCore/zcore-tests/testcases/src/uart\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-musl \n// timestamp=2025-03-07 22:01:10.038810394 +08:00:00\n   Compiling cfg_aliases v0.2.1\n   Compiling libc v0.2.170\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v2.9.0\n   Compiling nix v0.29.0\n   Compiling uart v0.1.0 (/home/runner/check/batch_5/kern-crates/zCore/zcore-tests/testcases/src/uart)\nerror[E0432]: unresolved imports `nix::fcntl::open`, `nix::fcntl::OFlag`, `nix::sys::stat`\n   --> src/main.rs:2:13\n    |\n2   |     fcntl::{open, OFlag},\n    |             ^^^^  ^^^^^ no `OFlag` in `fcntl`\n    |             |\n    |             no `open` in `fcntl`\n3   |     sys::stat::Mode,\n    |          ^^^^ could not find `stat` in `sys`\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.29.0/src/fcntl.rs:220:8\n    |\n220 | pub fn open<P: ?Sized + NixPath>(\n    |        ^^^^\nnote: the item is gated behind the `fs` feature\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.29.0/src/fcntl.rs:212:4\n    |\n212 | #![feature = \"fs\"]\n    |    ^^^^^^^\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.29.0/src/sys/mod.rs:128:13\n    |\n128 |     pub mod stat;\n    |             ^^^^\nnote: the item is gated behind the `fs` feature\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.29.0/src/sys/mod.rs:126:8\n    |\n126 |     #![feature = \"fs\"]\n    |        ^^^^^^^\n\nFor more information about this error, try `rustc --explain E0432`.\nerror: could not compile `uart` (bin \"uart\") due to 1 previous error\n",
              "// pkg_name=uart, checker=Lockbud\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-uefi\n// features=\n// pkg_dir=/home/runner/check/batch_5/kern-crates/zCore/zcore-tests/testcases/src/uart\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-uefi \n// timestamp=2025-03-07 22:01:11.426444941 +08:00:00\n   Compiling libc v0.2.170\n   Compiling bitflags v2.9.0\n   Compiling cfg-if v1.0.0\n   Compiling nix v0.29.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `x86_64-unknown-uefi` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-uefi`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `libc` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 2,
          "kinds": {
            "Cargo": [
              "// pkg_name=uart, checker=Rapx\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-musl\n// features=\n// pkg_dir=/home/runner/check/batch_32/kern-crates/zCore/zcore-tests/testcases/src/uart\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-musl \n// timestamp=2025-02-16 22:39:08.16789046 +08:00:00\n   Compiling libc v0.2.169\n   Compiling cfg_aliases v0.2.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling nix v0.29.0\n    Checking uart v0.1.0 (/home/runner/check/batch_32/kern-crates/zCore/zcore-tests/testcases/src/uart)\nerror[E0432]: unresolved imports `nix::fcntl::open`, `nix::fcntl::OFlag`, `nix::sys::stat`\n   --> src/main.rs:2:13\n    |\n2   |     fcntl::{open, OFlag},\n    |             ^^^^  ^^^^^ no `OFlag` in `fcntl`\n    |             |\n    |             no `open` in `fcntl`\n3   |     sys::stat::Mode,\n    |          ^^^^ could not find `stat` in `sys`\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/fcntl.rs:220:8\n    |\n220 | pub fn open<P: ?Sized + NixPath>(\n    |        ^^^^\nnote: the item is gated behind the `fs` feature\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/fcntl.rs:212:4\n    |\n212 | #![feature = \"fs\"]\n    |    ^^^^^^^\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/sys/mod.rs:128:13\n    |\n128 |     pub mod stat;\n    |             ^^^^\nnote: the item is gated behind the `fs` feature\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/sys/mod.rs:126:8\n    |\n126 |     #![feature = \"fs\"]\n    |        ^^^^^^^\n\nFor more information about this error, try `rustc --explain E0432`.\nerror: could not compile `uart` (bin \"uart\") due to 1 previous error\n14:39:09|RAP|ERROR|: Finished with non-zero exit code.\n",
              "// pkg_name=uart, checker=Rapx\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-uefi\n// features=\n// pkg_dir=/home/runner/check/batch_32/kern-crates/zCore/zcore-tests/testcases/src/uart\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-uefi \n// timestamp=2025-02-16 22:39:07.604082607 +08:00:00\n   Compiling libc v0.2.169\n   Compiling cfg_aliases v0.2.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `x86_64-unknown-uefi` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-uefi`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `bitflags` (lib) due to 1 previous error\n14:39:08|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}