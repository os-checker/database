{"repo":{"user":"kern-crates","repo":"rCoreloongArch"},"data":[{"user":"kern-crates","repo":"rCoreloongArch","pkg":"kernel","count":37,"raw_reports":[{"file":"src/trap/mod.rs","count":7,"kinds":{"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 2 to 2)\n-use crate::config::{TICKS_PER_SEC};\n+use crate::config::TICKS_PER_SEC;\n","file: /home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 8 to 8)\n+use crate::println;\n","file: /home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 11 to 11)\n-use crate::{println};\n","file: /home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 16 to 16)\n-use loongarch64::register::*;\n","file: /home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 19 to 19)\n+use loongarch64::register::*;\n","file: /home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 102 to 102)\n-    ecfg::set_lie(LineBasedInterrupt::TIMER|LineBasedInterrupt::HWI0);\n+    ecfg::set_lie(LineBasedInterrupt::TIMER | LineBasedInterrupt::HWI0);\n","file: /home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 162 to 162)\n-        Trap::Interrupt( Interrupt::Timer) => {\n+        Trap::Interrupt(Interrupt::Timer) => {\n"]}},{"file":"/home/runner/.cargo/git/checkouts/loongarch64-1c364f4d86ee311b/92d9355/src/iocsr.rs","count":4,"kinds":{"Mirai":["error: type `u8` cannot be used with this register class\n  --> /home/runner/.cargo/git/checkouts/loongarch64-1c364f4d86ee311b/92d9355/src/iocsr.rs:24:41\n   |\n24 |         asm!(\"iocsrwr.b {},{}\", in(reg) value, in(reg) reg);\n   |                                         ^^^^^\n   |\n   = note: register class `reg` supports these types: i16, i32, i64, f32, f64\n   = help: consider using the `reg_byte` register class instead\n\n","error: type `u8` cannot be used with this register class\n  --> /home/runner/.cargo/git/checkouts/loongarch64-1c364f4d86ee311b/92d9355/src/iocsr.rs:32:41\n   |\n32 |         asm!(\"iocsrrd.b {},{}\",out(reg) val, in(reg) reg);\n   |                                         ^^^\n   |\n   = note: register class `reg` supports these types: i16, i32, i64, f32, f64\n   = help: consider using the `reg_byte` register class instead\n\n"],"Clippy(Error)":["error: type `u8` cannot be used with this register class\n  --> /home/runner/.cargo/git/checkouts/loongarch64-1c364f4d86ee311b/92d9355/src/iocsr.rs:24:41\n   |\n24 |         asm!(\"iocsrwr.b {},{}\", in(reg) value, in(reg) reg);\n   |                                         ^^^^^\n   |\n   = note: register class `reg` supports these types: i16, i32, i64, f32, f64\n   = help: consider using the `reg_byte` register class instead\n\n","error: type `u8` cannot be used with this register class\n  --> /home/runner/.cargo/git/checkouts/loongarch64-1c364f4d86ee311b/92d9355/src/iocsr.rs:32:41\n   |\n32 |         asm!(\"iocsrrd.b {},{}\",out(reg) val, in(reg) reg);\n   |                                         ^^^\n   |\n   = note: register class `reg` supports these types: i16, i32, i64, f32, f64\n   = help: consider using the `reg_byte` register class instead\n\n"]}},{"file":"isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs","count":4,"kinds":{"Clippy(Warn)":["warning: the type `[&mut [net::ethernet::intel::ixgbe::IXGBESendDesc]; 4]` does not permit being left uninitialized\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:500:22\n    |\n500 |             unsafe { MaybeUninit::uninit().assume_init() };\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                      |\n    |                      this code causes undefined behavior when executed\n    |                      help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n    = note: references must be non-null\n    = note: `#[warn(invalid_value)]` on by default\n\n","warning: the type `[&mut [net::ethernet::intel::ixgbe::IXGBESendDesc]; 4]` does not permit being left uninitialized\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:500:22\n    |\n500 |             unsafe { MaybeUninit::uninit().assume_init() };\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                      |\n    |                      this code causes undefined behavior when executed\n    |                      help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n    = note: references must be non-null\n    = note: `#[warn(invalid_value)]` on by default\n\n"],"Mirai":["warning: the type `[&mut [IXGBESendDesc]; 4]` does not permit being left uninitialized\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:500:22\n    |\n500 |             unsafe { MaybeUninit::uninit().assume_init() };\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                      |\n    |                      this code causes undefined behavior when executed\n    |                      help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n    = note: references must be non-null\n    = note: `#[warn(invalid_value)]` on by default\n\n","warning: the type `[&mut [IXGBESendDesc]; 4]` does not permit being left uninitialized\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:500:22\n    |\n500 |             unsafe { MaybeUninit::uninit().assume_init() };\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                      |\n    |                      this code causes undefined behavior when executed\n    |                      help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n    = note: references must be non-null\n    = note: `#[warn(invalid_value)]` on by default\n\n"]}},{"file":"src/loongarch/driver/mod.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel/src/loongarch/driver/mod.rs (original lines from 5 to 5)\n-mod vbe;\n","file: /home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel/src/loongarch/driver/mod.rs (original lines from 7 to 7)\n+mod vbe;\n","file: /home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel/src/loongarch/driver/mod.rs (original lines from 19 to 19)\n-\n"]}},{"file":"src/main.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel/src/main.rs (original lines from 34 to 34)\n+use crate::loongarch::{\n+    ahci_init, extioi_init, i8042_init, ls7a_intc_init, rtc_init, rtc_time_read, vbe_test,\n+};\n","file: /home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel/src/main.rs (original lines from 35 to 35)\n-use crate::loongarch::{ahci_init, extioi_init, i8042_init, ls7a_intc_init, rtc_init, rtc_time_read, vbe_test};\n","file: /home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel/src/main.rs (original lines from 48 to 52)\n-pub fn main(\n-    argc: usize,\n-    argv: *const *const u8,\n-    boot_params_interface: *const (),\n-) {\n+pub fn main(argc: usize, argv: *const *const u8, boot_params_interface: *const ()) {\n"]}},{"file":"src/trap/context.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel/src/trap/context.rs (original lines from 3 to 3)\n-use loongarch64::register::{CpuMode, prmd};\n+use loongarch64::register::{prmd, CpuMode};\n","file: /home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel/src/trap/context.rs (original lines from 24 to 24)\n-\n","file: /home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel/src/trap/context.rs (original lines from 34 to 34)\n-            prmd:prmd::read().raw(),\n+            prmd: prmd::read().raw(),\n"]}},{"file":"src/loongarch/rtc.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel/src/loongarch/rtc.rs (original lines from 1 to 1)\n+use crate::loongarch::driver::rtc::RtcTime;\n","file: /home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel/src/loongarch/rtc.rs (original lines from 4 to 4)\n-use crate::loongarch::driver::rtc::RtcTime;\n"]}},{"file":"src/syscall/process.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel/src/syscall/process.rs (original lines from 1 to 1)\n+use crate::fs::{open_file, OpenFlags};\n","file: /home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel/src/syscall/process.rs (original lines from 8 to 8)\n-use crate::fs::{open_file, OpenFlags};\n"]}},{"file":"src/timer.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel/src/timer.rs (original lines from 9 to 9)\n-\n","file: /home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel/src/timer.rs (original lines from 39 to 39)\n-static TIMERS:Lazy<Mutex<BinaryHeap<TimerCondVar>>> = Lazy::new(||Mutex::new(BinaryHeap::<TimerCondVar>::new()));\n+static TIMERS: Lazy<Mutex<BinaryHeap<TimerCondVar>>> =\n+    Lazy::new(|| Mutex::new(BinaryHeap::<TimerCondVar>::new()));\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=kernel, checker=Clippy\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking scopeguard v1.2.0\n   Compiling lock_api v0.4.12\n   Compiling num-traits v0.2.19\n   Compiling az v1.2.1\n    Checking bit_field v0.10.2\n   Compiling memchr v2.3.4\n    Checking byteorder v1.5.0\n    Checking spin v0.9.8\n   Compiling nom v6.2.2\n    Checking bitflags v1.3.2\n    Checking micromath v1.1.1\n    Checking log v0.4.22\n    Checking lazy_static v1.5.0\n    Checking zero v0.1.3\n    Checking xmas-elf v0.8.0\n    Checking float-cmp v0.8.0\n    Checking rlibc v1.0.0\n    Checking spin v0.7.1\n    Checking virtio-input-decoder v0.1.4\n    Checking embedded-graphics-core v0.3.3\n    Checking rustc-demangle v0.1.24\n    Checking volatile v0.3.0\n    Checking oorandom v11.1.4\n   Compiling kernel v0.1.0 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel)\n    Checking isomorphic_drivers v0.1.0 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/isomorphic_drivers)\n    Checking stack_trace v0.1.0 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/stack_trace)\n    Checking buddy_system_allocator v0.6.0\n    Checking easy-fs v0.1.0 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/easy-fs)\n    Checking embedded-graphics v0.7.1\n    Checking loongArch64 v0.2.4 (https://github.com/Godones/loongArch64#92d93554)\n    Checking pci v0.0.1 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/pci)\nerror: could not compile `loongArch64` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=kernel, checker=Lockbud\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling lock_api v0.4.12\n   Compiling az v1.2.1\n   Compiling num-traits v0.2.19\n   Compiling memchr v2.3.4\n   Compiling spin v0.9.8\n   Compiling nom v6.2.2\n[2024-10-09T07:38:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:38:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling micromath v1.1.1\n   Compiling lazy_static v1.5.0\n   Compiling zero v0.1.3\n   Compiling xmas-elf v0.8.0\n   Compiling float-cmp v0.8.0\n   Compiling oorandom v11.1.4\n   Compiling rustc-demangle v0.1.24\n   Compiling embedded-graphics-core v0.3.3\n   Compiling virtio-input-decoder v0.1.4\n   Compiling rlibc v1.0.0\n   Compiling spin v0.7.1\n   Compiling embedded-graphics v0.7.1\n   Compiling buddy_system_allocator v0.6.0\n   Compiling stack_trace v0.1.0 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/stack_trace)\nerror: invalid instruction mnemonic 'move'\n  --> stack_trace/src/trace.rs:38:15\n   |\n38 |         asm!(\"move {},$sp\",out(reg)t);\n   |               ^\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:2:2\n   |\n2  |     move rax,sp\n   |     ^^^^\n\nerror: could not compile `stack_trace` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=kernel, checker=Mirai\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling autocfg v1.4.0\n    Checking scopeguard v1.2.0\n   Compiling az v1.2.1\n    Checking bit_field v0.10.2\n   Compiling memchr v2.3.4\n   Compiling version_check v0.9.5\n    Checking byteorder v1.5.0\n   Compiling nom v6.2.2\n   Compiling lock_api v0.4.12\n   Compiling num-traits v0.2.19\n    Checking bitflags v1.3.2\n    Checking micromath v1.1.1\n    Checking log v0.4.22\n    Checking spin v0.9.8\n    Checking embedded-graphics-core v0.3.3\n    Checking lazy_static v1.5.0\n    Checking zero v0.1.3\n    Checking xmas-elf v0.8.0\n   Compiling kernel v0.1.0 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel)\n    Checking volatile v0.3.0\n    Checking float-cmp v0.8.0\n    Checking spin v0.7.1\n    Checking embedded-graphics v0.7.1\n    Checking rustc-demangle v0.1.24\n    Checking oorandom v11.1.4\n    Checking virtio-input-decoder v0.1.4\n    Checking rlibc v1.0.0\n    Checking stack_trace v0.1.0 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/stack_trace)\n    Checking buddy_system_allocator v0.6.0\n    Checking isomorphic_drivers v0.1.0 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/isomorphic_drivers)\n    Checking easy-fs v0.1.0 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/easy-fs)\n    Checking loongArch64 v0.2.4 (https://github.com/Godones/loongArch64#92d93554)\n    Checking pci v0.0.1 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/pci)\nerror: could not compile `loongArch64` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-09T07:38:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:38:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/config.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel/src/config.rs (original lines from 12 to 12)\n-// pub const KERNEL_STACK_SIZE: usize = PAGE_SIZE; //内核栈大小\n+                                              // pub const KERNEL_STACK_SIZE: usize = PAGE_SIZE; //内核栈大小\n"]}},{"file":"src/loongarch/driver/rtc.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel/src/loongarch/driver/rtc.rs (original lines from 32 to 32)\n+\n"]}},{"file":"src/print.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel/src/print.rs (original lines from 31 to 31)\n-pub static CONSOLE: Lazy< Mutex<Console>> = Lazy::new(||Mutex::new(Console::new(UART)));\n+pub static CONSOLE: Lazy<Mutex<Console>> = Lazy::new(|| Mutex::new(Console::new(UART)));\n"]}}]},{"user":"kern-crates","repo":"rCoreloongArch","pkg":"pci","count":29,"raw_reports":[{"file":"pci/src/lib.rs","count":29,"kinds":{"Clippy(Warn)":["warning: using tabs in doc comments is not recommended\n   --> pci/src/lib.rs:127:15\n    |\n127 | /// Bits 31-24    Bits 23-16    Bits 15-11        Bits 10-8    Bits 7-0\n    |               ^^^^ help: consider using four spaces per tab\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#tabs_in_doc_comments\n    = note: `#[warn(clippy::tabs_in_doc_comments)]` on by default\n\n","warning: using tabs in doc comments is not recommended\n   --> pci/src/lib.rs:127:26\n    |\n127 | /// Bits 31-24    Bits 23-16    Bits 15-11        Bits 10-8    Bits 7-0\n    |                             ^^^^ help: consider using four spaces per tab\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#tabs_in_doc_comments\n\n","warning: using tabs in doc comments is not recommended\n   --> pci/src/lib.rs:127:37\n    |\n127 | /// Bits 31-24    Bits 23-16    Bits 15-11        Bits 10-8    Bits 7-0\n    |                                           ^^^^ help: consider using four spaces per tab\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#tabs_in_doc_comments\n\n","warning: using tabs in doc comments is not recommended\n   --> pci/src/lib.rs:127:51\n    |\n127 | /// Bits 31-24    Bits 23-16    Bits 15-11        Bits 10-8    Bits 7-0\n    |                                                            ^^^^ help: consider using four spaces per tab\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#tabs_in_doc_comments\n\n","warning: using tabs in doc comments is not recommended\n   --> pci/src/lib.rs:128:27\n    |\n128 | /// base addr   Bus Number    Device Number    Function    Number    Register Offset1\n    |                           ^^^^ help: consider using four spaces per tab\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#tabs_in_doc_comments\n\n","warning: using tabs in doc comments is not recommended\n   --> pci/src/lib.rs:128:41\n    |\n128 | /// base addr   Bus Number    Device Number    Function    Number    Register Offset1\n    |                                            ^^^^ help: consider using four spaces per tab\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#tabs_in_doc_comments\n\n","warning: using tabs in doc comments is not recommended\n   --> pci/src/lib.rs:128:60\n    |\n128 | /// base addr   Bus Number    Device Number    Function    Number    Register Offset1\n    |                                                                  ^^^^ help: consider using four spaces per tab\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#tabs_in_doc_comments\n\n","warning: redundant field names in struct initialization\n   --> pci/src/lib.rs:471:9\n    |\n471 |         prog_if: prog_if,\n    |         ^^^^^^^^^^^^^^^^ help: replace it with: `prog_if`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n    = note: `#[warn(clippy::redundant_field_names)]` on by default\n\n","warning: redundant field names in struct initialization\n   --> pci/src/lib.rs:472:9\n    |\n472 |         class: class,\n    |         ^^^^^^^^^^^^ help: replace it with: `class`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","warning: redundant field names in struct initialization\n   --> pci/src/lib.rs:473:9\n    |\n473 |         subclass: subclass,\n    |         ^^^^^^^^^^^^^^^^^^ help: replace it with: `subclass`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","warning: unsafe function's docs miss `# Safety` section\n  --> pci/src/lib.rs:41:5\n   |\n41 |     unsafe fn read8(&self, port: u16) -> u8;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n","warning: unsafe function's docs miss `# Safety` section\n  --> pci/src/lib.rs:42:5\n   |\n42 |     unsafe fn read16(&self, port: u16) -> u16;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n","warning: unsafe function's docs miss `# Safety` section\n  --> pci/src/lib.rs:43:5\n   |\n43 |     unsafe fn read32(&self, port: u16) -> u32;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n","warning: unsafe function's docs miss `# Safety` section\n  --> pci/src/lib.rs:44:5\n   |\n44 |     unsafe fn write8(&self, port: u16, val: u8);\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n","warning: unsafe function's docs miss `# Safety` section\n  --> pci/src/lib.rs:45:5\n   |\n45 |     unsafe fn write16(&self, port: u16, val: u16);\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n","warning: unsafe function's docs miss `# Safety` section\n  --> pci/src/lib.rs:46:5\n   |\n46 |     unsafe fn write32(&self, port: u16, val: u32);\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n","warning: unsafe function's docs miss `# Safety` section\n  --> pci/src/lib.rs:60:5\n   |\n60 |     pub unsafe fn read8<T: PortOps>(self, ops: &T, loc: Location, offset: u16) -> u8 {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n","warning: unsafe function's docs miss `# Safety` section\n  --> pci/src/lib.rs:66:5\n   |\n66 |     pub unsafe fn read16<T: PortOps>(self, ops: &T, loc: Location, offset: u16) -> u16 {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n","warning: unsafe function's docs miss `# Safety` section\n  --> pci/src/lib.rs:72:5\n   |\n72 |     pub unsafe fn read32<T: PortOps>(self, _ops: &T, loc: Location, offset: u16) -> u32 {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n","warning: unsafe function's docs miss `# Safety` section\n  --> pci/src/lib.rs:86:5\n   |\n86 |     pub unsafe fn write8<T: PortOps>(self, ops: &T, loc: Location, offset: u16, val: u8) {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n","warning: unsafe function's docs miss `# Safety` section\n  --> pci/src/lib.rs:99:5\n   |\n99 |     pub unsafe fn write16<T: PortOps>(self, ops: &T, loc: Location, offset: u16, val: u16) {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n","warning: unsafe function's docs miss `# Safety` section\n   --> pci/src/lib.rs:113:5\n    |\n113 |     pub unsafe fn write32<T: PortOps>(self, _ops: &T, loc: Location, offset: u16, val: u32) {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n","warning: unsafe function's docs miss `# Safety` section\n   --> pci/src/lib.rs:340:5\n    |\n340 | /     pub unsafe fn decode<T: PortOps>(\n341 | |         ops: &T,\n342 | |         loc: Location,\n343 | |         am: CSpaceAccessMethod,\n344 | |         idx: u16,\n345 | |     ) -> (Option<BAR>, usize) {\n    | |_____________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n","warning: this if-then-else expression returns a bool literal\n   --> pci/src/lib.rs:396:9\n    |\n396 | /         if self.loc.bus == 255 && self.loc.device == 31 && self.loc.function == 7 {\n397 | |             true\n398 | |         } else {\n399 | |             false\n400 | |         }\n    | |_________^ help: you can reduce it to: `self.loc.bus == 255 && self.loc.device == 31 && self.loc.function == 7`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_bool\n    = note: `#[warn(clippy::needless_bool)]` on by default\n\n","warning: unneeded `return` statement\n   --> pci/src/lib.rs:407:36\n    |\n407 |               self.loc.function += 1;\n    |  ____________________________________^\n408 | |             return;\n    | |__________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n407 -             self.loc.function += 1;\n408 -             return;\n407 +             self.loc.function += 1;\n    |\n\n","warning: unneeded `return` statement\n   --> pci/src/lib.rs:412:38\n    |\n412 |                   self.loc.device += 1;\n    |  ______________________________________^\n413 | |                 return;\n    | |______________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n412 -                 self.loc.device += 1;\n413 -                 return;\n412 +                 self.loc.device += 1;\n    |\n\n","warning: unneeded `return` statement\n   --> pci/src/lib.rs:420:39\n    |\n420 |                       self.loc.bus += 1;\n    |  _______________________________________^\n421 | |                     return;\n    | |__________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n420 -                     self.loc.bus += 1;\n421 -                     return;\n420 +                     self.loc.bus += 1;\n    |\n\n","warning: unsafe function's docs miss `# Safety` section\n   --> pci/src/lib.rs:450:1\n    |\n450 | / pub unsafe fn probe_function<T: PortOps>(\n451 | |     ops: &T,\n452 | |     loc: Location,\n453 | |     am: CSpaceAccessMethod,\n454 | | ) -> Option<PCIDevice> {\n    | |______________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n","warning: unsafe function's docs miss `# Safety` section\n   --> pci/src/lib.rs:587:1\n    |\n587 | / pub unsafe fn scan_bus<T: PortOps>(\n588 | |     ops: &T,\n589 | |     am: CSpaceAccessMethod,\n590 | |     base_addr: usize,\n591 | | ) -> BusScan<T> {\n    | |_______________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"]}}]},{"user":"kern-crates","repo":"rCoreloongArch","pkg":"isomorphic_drivers","count":27,"raw_reports":[{"file":"isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs","count":14,"kinds":{"Clippy(Error)":["error: this operation will always return zero. This is likely not the intended outcome\n  --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:95:27\n   |\n95 | const IXGBE_CTRL: usize = 0x00000 / 4;\n   |                           ^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n   = note: `#[deny(clippy::erasing_op)]` on by default\n\n","error: this call for this type may be undefined behavior\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:500:22\n    |\n500 |             unsafe { MaybeUninit::uninit().assume_init() };\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninit_assumed_init\n    = note: `#[deny(clippy::uninit_assumed_init)]` on by default\n\n"],"Clippy(Warn)":["warning: the loop variable `i` is only used to index `ixgbe`\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:385:18\n    |\n385 |         for i in IXGBE_PFUTA..IXGBE_PFUTA_END {\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n385 |         for <item> in ixgbe.iter_mut().take(IXGBE_PFUTA_END).skip(IXGBE_PFUTA) {\n    |             ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","warning: the loop variable `i` is only used to index `ixgbe`\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:389:18\n    |\n389 |         for i in IXGBE_VFTA..IXGBE_VFTA_END {\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n389 |         for <item> in ixgbe.iter_mut().take(IXGBE_VFTA_END).skip(IXGBE_VFTA) {\n    |             ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","warning: the loop variable `i` is only used to index `ixgbe`\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:393:18\n    |\n393 |         for i in IXGBE_PFVLVF..IXGBE_PFVLVF_END {\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n393 |         for <item> in ixgbe.iter_mut().take(IXGBE_PFVLVF_END).skip(IXGBE_PFVLVF) {\n    |             ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","warning: the loop variable `i` is only used to index `ixgbe`\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:397:18\n    |\n397 |         for i in IXGBE_MPSAR..IXGBE_MPSAR_END {\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n397 |         for <item> in ixgbe.iter_mut().take(IXGBE_MPSAR_END).skip(IXGBE_MPSAR) {\n    |             ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","warning: the loop variable `i` is only used to index `ixgbe`\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:401:18\n    |\n401 |         for i in IXGBE_PFVLVFB..IXGBE_PFVLVFB_END {\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n401 |         for <item> in ixgbe.iter_mut().take(IXGBE_PFVLVFB_END).skip(IXGBE_PFVLVFB) {\n    |             ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","warning: the loop variable `i` is only used to index `ixgbe`\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:405:18\n    |\n405 |         for i in IXGBE_MTA..IXGBE_MTA_END {\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n405 |         for <item> in ixgbe.iter_mut().take(IXGBE_MTA_END).skip(IXGBE_MTA) {\n    |             ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","warning: this operation has no effect\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:441:32\n    |\n441 |             *x = (*x & !0xf) | (8 << 0) | (1 << 28);\n    |                                ^^^^^^^^ help: consider reducing it to: `8`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: the loop variable `i` is used to index `send_queue`\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:508:22\n    |\n508 |             for i in 0..IXGBE_SEND_DESC_NUM {\n    |                      ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator and enumerate()\n    |\n508 |             for (i, <item>) in send_queue.iter_mut().enumerate().take(IXGBE_SEND_DESC_NUM) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","warning: the type `[&mut [net::ethernet::intel::ixgbe::IXGBESendDesc]; 4]` does not permit being left uninitialized\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:500:22\n    |\n500 |             unsafe { MaybeUninit::uninit().assume_init() };\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                      |\n    |                      this code causes undefined behavior when executed\n    |                      help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n    = note: references must be non-null\n    = note: `#[warn(invalid_value)]` on by default\n\n","warning: the type `[&mut [net::ethernet::intel::ixgbe::IXGBESendDesc]; 4]` does not permit being left uninitialized\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:500:22\n    |\n500 |             unsafe { MaybeUninit::uninit().assume_init() };\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                      |\n    |                      this code causes undefined behavior when executed\n    |                      help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n    = note: references must be non-null\n    = note: `#[warn(invalid_value)]` on by default\n\n"],"Mirai":["warning: the type `[&mut [net::ethernet::intel::ixgbe::IXGBESendDesc]; 4]` does not permit being left uninitialized\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:500:22\n    |\n500 |             unsafe { MaybeUninit::uninit().assume_init() };\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                      |\n    |                      this code causes undefined behavior when executed\n    |                      help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n    = note: references must be non-null\n    = note: `#[warn(invalid_value)]` on by default\n\n","warning: the type `[&mut [net::ethernet::intel::ixgbe::IXGBESendDesc]; 4]` does not permit being left uninitialized\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:500:22\n    |\n500 |             unsafe { MaybeUninit::uninit().assume_init() };\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                      |\n    |                      this code causes undefined behavior when executed\n    |                      help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n    = note: references must be non-null\n    = note: `#[warn(invalid_value)]` on by default\n\n"]}},{"file":"isomorphic_drivers/src/net/ethernet/intel/e1000.rs","count":6,"kinds":{"Clippy(Warn)":["warning: the loop variable `i` is only used to index `send_queue`\n   --> isomorphic_drivers/src/net/ethernet/intel/e1000.rs:117:18\n    |\n117 |         for i in 0..send_queue.len() {\n    |                  ^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n117 |         for <item> in &mut send_queue {\n    |             ~~~~~~    ~~~~~~~~~~~~~~~\n\n","warning: manual implementation of an assign operation\n   --> isomorphic_drivers/src/net/ethernet/intel/e1000.rs:132:13\n    |\n132 |             ral = ral | (mac.as_bytes()[i] as u32) << (i * 8);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `ral |= (mac.as_bytes()[i] as u32) << (i * 8)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n    = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n","warning: manual implementation of an assign operation\n   --> isomorphic_drivers/src/net/ethernet/intel/e1000.rs:135:13\n    |\n135 |             rah = rah | (mac.as_bytes()[i + 4] as u32) << (i * 8);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `rah |= (mac.as_bytes()[i + 4] as u32) << (i * 8)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n\n","warning: the loop variable `i` is only used to index `e1000`\n   --> isomorphic_drivers/src/net/ethernet/intel/e1000.rs:143:18\n    |\n143 |         for i in E1000_MTA..E1000_RAL {\n    |                  ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n143 |         for <item> in e1000.iter_mut().take(E1000_RAL).skip(E1000_MTA) {\n    |             ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","warning: the loop variable `i` is only used to index `recv_queue`\n   --> isomorphic_drivers/src/net/ethernet/intel/e1000.rs:161:18\n    |\n161 |         for i in 0..recv_queue.len() {\n    |                  ^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n161 |         for <item> in &mut recv_queue {\n    |             ~~~~~~    ~~~~~~~~~~~~~~~\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> isomorphic_drivers/src/net/ethernet/intel/e1000.rs:255:32\n    |\n255 |         target.copy_from_slice(&buffer);\n    |                                ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"]}},{"file":"isomorphic_drivers/src/block/ahci.rs","count":5,"kinds":{"Clippy(Error)":["error: incompatible bit mask: `_ | 32768` can never be equal to `1`\n   --> isomorphic_drivers/src/block/ahci.rs:332:19\n    |\n332 |             while port.command.read() | (1 << 15) == 1 {}\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n    = note: `#[deny(clippy::bad_bit_mask)]` on by default\n\n","error: incompatible bit mask: `_ | 16384` can never be equal to `1`\n   --> isomorphic_drivers/src/block/ahci.rs:339:19\n    |\n339 |             while port.command.read() | (1 << 14) == 1 {}\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n\n","error: incompatible bit mask: `_ | 1` can never be equal to `0`\n   --> isomorphic_drivers/src/block/ahci.rs:403:19\n    |\n403 |             while port.command.read() | (1 << 0) == 0 {}\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n\n"],"Clippy(Warn)":["warning: this operation has no effect\n   --> isomorphic_drivers/src/block/ahci.rs:282:22\n    |\n282 |         self.lba_0 = (lba >> 0) as u8;\n    |                      ^^^^^^^^^^ help: consider reducing it to: `lba`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n","warning: unneeded `return` statement\n   --> isomorphic_drivers/src/block/ahci.rs:517:5\n    |\n517 |     return String::from_utf8(swapped_data).unwrap();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n517 -     return String::from_utf8(swapped_data).unwrap();\n517 +     String::from_utf8(swapped_data).unwrap()\n    |\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=isomorphic_drivers, checker=Clippy\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/rCoreloongArch/isomorphic_drivers\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking scopeguard v1.2.0\n    Checking bitflags v1.3.2\n    Checking log v0.4.22\n   Compiling lock_api v0.4.12\n    Checking volatile v0.3.0\n    Checking bit_field v0.10.2\n    Checking spin v0.9.8\n    Checking isomorphic_drivers v0.1.0 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/isomorphic_drivers)\nerror: could not compile `isomorphic_drivers` (lib) due to 6 previous errors; 17 warnings emitted\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-09T07:38:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:38:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"rCoreloongArch","pkg":"vbe","count":15,"raw_reports":[{"file":"vbe/src/old_impl/vbe.rs","count":3,"kinds":{"Clippy(Warn)":["warning: operator precedence can trip the unwary\n   --> vbe/src/old_impl/vbe.rs:221:28\n    |\n221 |                     tabs = (self.x_position + 8) & !(8 - 1) - self.x_position;\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(self.x_position + 8) & (!(8 - 1) - self.x_position)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n    = note: `#[warn(clippy::precedence)]` on by default\n\n","warning: casting to the same type is unnecessary (`usize` -> `usize`)\n  --> vbe/src/old_impl/vbe.rs:99:54\n   |\n99 |                     let addr = frame_buffer_addr.add(((y + i) * weight + x + j) as usize);\n   |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `((y + i) * weight + x + j)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> vbe/src/old_impl/vbe.rs:131:46\n    |\n131 |             let addr = frame_buffer_addr.add((y * weight + x) as usize);\n    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(y * weight + x)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"]}},{"file":"vbe/src/gui/basic/icon.rs","count":2,"kinds":{"Clippy(Warn)":["warning: manual implementation of an assign operation\n  --> vbe/src/gui/basic/icon.rs:72:17\n   |\n72 |                 x = x + 70;\n   |                 ^^^^^^^^^^ help: replace it with: `x += 70`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n   = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n","warning: manual implementation of an assign operation\n  --> vbe/src/gui/basic/icon.rs:75:17\n   |\n75 |                 y = y + 90;\n   |                 ^^^^^^^^^^ help: replace it with: `y += 90`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n\n"]}},{"file":"vbe/src/gui/basic/window.rs","count":2,"kinds":{"Clippy(Warn)":["warning: returning the result of a `let` binding from a block\n   --> vbe/src/gui/basic/window.rs:109:9\n    |\n79  | /         let window = Arc::new(Self {\n80  | |             id,\n81  | |             inner: unsafe {\n82  | |                 Mutex::new(WindowsInner {\n...   |\n98  | |             },\n99  | |         });\n    | |___________- unnecessary `let` binding\n...\n109 |           window\n    |           ^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n    = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n    |\n79  ~         \n80  |         // use log::info;\n  ...\n88  |         // );\n89  ~         Arc::new(Self {\n90  +             id,\n91  +             inner: unsafe {\n92  +                 Mutex::new(WindowsInner {\n93  +                     event: VecDeque::new(),\n94  +                     name: \"\".to_string(),\n95  +                     component: {\n96  +                         let mut v: VecDeque<Arc<dyn Component>> = VecDeque::new();\n97  +                         v.push_back(bar);\n98  +                         v.push_back(windows.clone());\n99  +                         v\n100 +                     },\n101 +                     graphic: Graphics {\n102 +                         size,\n103 +                         point,\n104 +                         drv: VBE_DEVICE.clone(),\n105 +                     },\n106 +                     panel: windows.clone(),\n107 +                 })\n108 +             },\n109 +         })\n    |\n\n","warning: returning the result of a `let` binding from a block\n   --> vbe/src/gui/basic/window.rs:135:9\n    |\n134 |         let event = inner.event.pop_front();\n    |         ------------------------------------ unnecessary `let` binding\n135 |         event\n    |         ^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n134 ~         \n135 ~         inner.event.pop_front()\n    |\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=vbe, checker=Clippy\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/rCoreloongArch/vbe\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling az v1.2.1\n   Compiling num-traits v0.2.19\n   Compiling memchr v2.3.4\n    Checking byteorder v1.5.0\n   Compiling lock_api v0.4.12\n   Compiling nom v6.2.2\n    Checking micromath v1.1.1\n    Checking scopeguard v1.2.0\n    Checking spin v0.9.8\n    Checking oorandom v11.1.4\n    Checking rlibc v1.0.0\n    Checking virtio-input-decoder v0.1.4\n    Checking bit_field v0.10.2\n    Checking float-cmp v0.8.0\n    Checking log v0.4.22\n    Checking lazy_static v1.5.0\n    Checking embedded-graphics-core v0.3.3\n    Checking embedded-graphics v0.7.1\n    Checking tinybmp v0.3.3\n    Checking vbe v0.1.0 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/vbe)\nerror: could not compile `vbe` (lib) due to 2 previous errors; 11 warnings emitted\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=vbe, checker=Mirai\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/rCoreloongArch/vbe\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling autocfg v1.4.0\n   Compiling az v1.2.1\n   Compiling memchr v2.3.4\n   Compiling version_check v0.9.5\n    Checking byteorder v1.5.0\n   Compiling nom v6.2.2\n   Compiling num-traits v0.2.19\n   Compiling lock_api v0.4.12\n    Checking micromath v1.1.1\n    Checking scopeguard v1.2.0\n    Checking spin v0.9.8\n    Checking embedded-graphics-core v0.3.3\n    Checking bit_field v0.10.2\n    Checking virtio-input-decoder v0.1.4\n    Checking oorandom v11.1.4\n    Checking log v0.4.22\n    Checking float-cmp v0.8.0\n    Checking lazy_static v1.5.0\n    Checking rlibc v1.0.0\n    Checking embedded-graphics v0.7.1\n    Checking tinybmp v0.3.3\n    Checking vbe v0.1.0 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/vbe)\nerror: could not compile `vbe` (lib)\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-09T07:38:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:38:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"vbe/src/driver/mod.rs","count":1,"kinds":{"Clippy(Error)":["error: mutable borrow from immutable input(s)\n  --> vbe/src/driver/mod.rs:14:35\n   |\n14 |     fn get_frame_buffer(&self) -> &mut [u8];\n   |                                   ^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> vbe/src/driver/mod.rs:14:25\n   |\n14 |     fn get_frame_buffer(&self) -> &mut [u8];\n   |                         ^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"]}},{"file":"vbe/src/gui/basic/image.rs","count":1,"kinds":{"Clippy(Warn)":["warning: casting raw pointers to the same type and constness is unnecessary (`*const u8` -> `*const u8`)\n  --> vbe/src/gui/basic/image.rs:52:23\n   |\n52 |             let ptr = inner.image.as_ptr() as *const u8;\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `inner.image.as_ptr()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n   = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"]}},{"file":"vbe/src/gui/basic/manager.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `Screen`\n  --> vbe/src/gui/basic/manager.rs:32:5\n   |\n32 | /     pub fn new() -> Self {\n33 | |         Self {\n34 | |             inner: unsafe {\n35 | |                 Mutex::new(ScreenInner {\n...  |\n40 | |         }\n41 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n31 + impl Default for Screen {\n32 +     fn default() -> Self {\n33 +         Self::new()\n34 +     }\n35 + }\n   |\n\n"]}},{"file":"vbe/src/gui/basic/panel.rs","count":1,"kinds":{"Clippy(Warn)":["warning: useless conversion to the same type: `core::ops::Range<usize>`\n  --> vbe/src/gui/basic/panel.rs:55:9\n   |\n55 |         (0..len).into_iter().for_each(|i| {\n   |         ^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `(0..len)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n   = note: `#[warn(clippy::useless_conversion)]` on by default\n\n"]}},{"file":"vbe/src/id_allocator.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `RecycleAllocator`\n  --> vbe/src/id_allocator.rs:9:5\n   |\n9  | /     pub fn new() -> Self {\n10 | |         RecycleAllocator {\n11 | |             current: 0,\n12 | |             recycled: Vec::new(),\n13 | |         }\n14 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n8  + impl Default for RecycleAllocator {\n9  +     fn default() -> Self {\n10 +         Self::new()\n11 +     }\n12 + }\n   |\n\n"]}}]},{"user":"kern-crates","repo":"rCoreloongArch","pkg":"easy-fs","count":14,"raw_reports":[{"file":"easy-fs/src/layout.rs","count":10,"kinds":{"Clippy(Warn)":["warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> easy-fs/src/layout.rs:121:25\n    |\n121 |         let mut total = data_blocks as usize;\n    |                         ^^^^^^^^^^^^^^^^^^^^ help: try: `data_blocks`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"],"Mirai":["warning: possible attempt to subtract with overflow\n   --> easy-fs/src/layout.rs:138:9\n    |\n138 |         Self::total_blocks(new_size) - Self::total_blocks(self.size)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible index out of bounds\n   --> easy-fs/src/layout.rs:221:25\n    |\n221 |                         indirect2[a0] = new_blocks.next().unwrap();\n    |                         ^^^^^^^^^^^^^\n\n","warning: called `Option::unwrap()` on a `None` value\n   --> easy-fs/src/layout.rs:224:21\n    |\n224 | /                     get_block_cache(indirect2[a0] as usize, Arc::clone(block_device))\n225 | |                         .lock()\n226 | |                         .modify(0, |indirect1: &mut IndirectBlock| {\n227 | |                             indirect1[b0] = new_blocks.next().unwrap();\n228 | |                         });\n    | |__________________________^\n    |\nnote: related location\n   --> easy-fs/src/block_cache.rs:61:9\n    |\n61  |         f(self.get_mut(offset))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\nnote: related location\n   --> easy-fs/src/layout.rs:227:45\n    |\n227 | ...                   indirect1[b0] = new_blocks.next().unwrap();\n    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible index out of bounds\n   --> easy-fs/src/layout.rs:224:37\n    |\n224 |                     get_block_cache(indirect2[a0] as usize, Arc::clone(block_device))\n    |                                     ^^^^^^^^^^^^^\n\n","warning: possible attempt to add with overflow\n   --> easy-fs/src/layout.rs:230:21\n    |\n230 |                     b0 += 1;\n    |                     ^^^^^^^\n\n","warning: possible attempt to subtract with overflow\n   --> easy-fs/src/layout.rs:331:35\n    |\n331 |             let block_read_size = end_current_block - start;\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to add with overflow\n   --> easy-fs/src/layout.rs:332:43\n    |\n332 |             let dst = &mut buf[read_size..read_size + block_read_size];\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to subtract with overflow\n   --> easy-fs/src/layout.rs:370:36\n    |\n370 |             let block_write_size = end_current_block - start;\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to add with overflow\n   --> easy-fs/src/layout.rs:381:13\n    |\n381 |             write_size += block_write_size;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"easy-fs/src/bitmap.rs","count":2,"kinds":{"Clippy(Warn)":["warning: casting to the same type is unnecessary (`usize` -> `usize`)\n  --> easy-fs/src/bitmap.rs:32:28\n   |\n32 |                 block_id + self.start_block_id as usize,\n   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.start_block_id`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n   = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n","warning: casting to the same type is unnecessary (`usize` -> `usize`)\n  --> easy-fs/src/bitmap.rs:45:68\n   |\n45 |                     Some(block_id * BLOCK_BITS + bits64_pos * 64 + inner_pos as usize)\n   |                                                                    ^^^^^^^^^^^^^^^^^^ help: try: `inner_pos`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"]}},{"file":"easy-fs/src/efs.rs","count":1,"kinds":{"Mirai":["warning: possible attempt to add with overflow\n   --> easy-fs/src/efs.rs:135:9\n    |\n135 |         self.data_bitmap.alloc(&self.block_device).unwrap() as u32 + self.data_area_start_block\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"easy-fs/src/vfs.rs","count":1,"kinds":{"Clippy(Warn)":["warning: casting to the same type is unnecessary (`u32` -> `u32`)\n  --> easy-fs/src/vfs.rs:56:29\n   |\n56 |                 return Some(dirent.inode_number() as u32);\n   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `dirent.inode_number()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"]}}]},{"user":"kern-crates","repo":"rCoreloongArch","pkg":"user_lib","count":9,"raw_reports":[{"file":"user/src/syscall.rs","count":2,"kinds":{"Mirai":["warning: sys_exit called\n  --> user/src/syscall.rs:51:5\n   |\n51 |     panic!(\"sys_exit called\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: sys_exit called\n  --> user/src/syscall.rs:51:5\n   |\n51 |     panic!(\"sys_exit called\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"user/src/thread/mod.rs","count":2,"kinds":{"Mirai":["warning: sys_exit called\n  --> user/src/thread/mod.rs:22:5\n   |\n22 |     sys_exit(exit_code);\n   |     ^^^^^^^^^^^^^^^^^^^\n   |\nnote: related location\n  --> user/src/syscall.rs:51:5\n   |\n51 |     panic!(\"sys_exit called\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: sys_exit called\n  --> user/src/thread/mod.rs:22:5\n   |\n22 |     sys_exit(exit_code);\n   |     ^^^^^^^^^^^^^^^^^^^\n   |\nnote: related location\n  --> user/src/syscall.rs:51:5\n   |\n51 |     panic!(\"sys_exit called\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-1.3.2/src/lib.rs","count":1,"kinds":{"Clippy(Error)":["error: &-masking with zero\n  --> user/src/fs/mod.rs:3:1\n   |\n3  | / bitflags! {\n4  | |     pub struct OpenFlags: u32 {\n5  | |         const RDONLY = 0;\n6  | |         const WRONLY = 1 << 0;\n...  |\n10 | |     }\n11 | | }\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n   = note: `#[deny(clippy::bad_bit_mask)]` on by default\n   = note: this error originates in the macro `__impl_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=user_lib, checker=Clippy\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/rCoreloongArch/user\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking spin v0.7.1\n    Checking bitflags v1.3.2\n   Compiling user_lib v0.1.0 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/user)\n    Checking buddy_system_allocator v0.6.0\nerror: could not compile `user_lib` (lib) due to 2 previous errors\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=user_lib, checker=Lockbud\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/rCoreloongArch/user\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling user_lib v0.1.0 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/user)\nerror: unknown token in expression\n  |\nnote: instantiated into assembly here\n --> <inline asm>:7:1\n  |\n7 |     move $t0,$a0\n  | ^\n\nerror: unknown token in expression\n  |\nnote: instantiated into assembly here\n --> <inline asm>:8:2\n  |\n8 |     move $t1,$a1\n  |  ^\n\nerror: unknown token in expression\n  |\nnote: instantiated into assembly here\n --> <inline asm>:9:3\n  |\n9 |     move $t2,$a2\n  |   ^\n\nerror: unknown token in expression\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:10:4\n   |\n10 |     move $t3,$a3\n   |    ^\n\nerror: unknown token in expression\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:11:5\n   |\n11 |     move $a7, $t0\n   |     ^\n\nerror: unknown token in expression\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:12:6\n   |\n12 |     move $a0, $t1\n   |      ^\n\nerror: unknown token in expression\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:13:7\n   |\n13 |     move $a1, $t2\n   |       ^\n\nerror: unknown token in expression\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:14:8\n   |\n14 |     move $a2, $t3\n   |        ^\n\nerror: invalid operand for instruction\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:15:4\n   |\n15 |     syscall 0\n   |    ^\n\nerror: unknown token in expression\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:16:8\n   |\n16 |     jr $ra\n   |        ^\n\nerror: could not compile `user_lib` (lib) due to 10 previous errors\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=user_lib, checker=Mirai\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/rCoreloongArch/user\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling user_lib v0.1.0 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/user)\n    Checking spin v0.7.1\n    Checking bitflags v1.3.2\n    Checking buddy_system_allocator v0.6.0\n    Finished dev [unoptimized + debuginfo] target(s) in 2.09s\n    Checking user_lib v0.1.0 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/user)\nerror: could not compile `user_lib` (bin \"race_adder_mutex_blocking\") due to 2 previous errors\n"]}},{"file":"unkonwn-but-maybe-important","count":1,"kinds":{"Mirai":["error: language item required, but not found: `eh_personality`\n  |\n  = note: this can occur when a binary crate with `#![no_std]` is compiled for a target where `eh_personality` is defined in the standard library\n  = help: you may be able to compile for a target that doesn't need `eh_personality`, specify a target with `--target` or in `.cargo/config`\n\n"]}}]},{"user":"kern-crates","repo":"rCoreloongArch","pkg":"stack_trace","count":8,"raw_reports":[{"file":"stack_trace/src/parse.rs","count":3,"kinds":{"Clippy(Warn)":["warning: unneeded late initialization\n  --> stack_trace/src/parse.rs:31:25\n   |\n31 |                         let demangled;\n   |                         ^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init\n   = note: `#[warn(clippy::needless_late_init)]` on by default\nhelp: declare `demangled` here\n   |\n33 |                         let demangled = if name.starts_with(\"_ZN\") {\n   |                         +++++++++++++++\nhelp: remove the assignments from the branches\n   |\n34 ~                             format!(\"{:#}\", demangle(&name))\n35 |                         } else {\n36 ~                             format!(\"{}\", name)\n   |\nhelp: add a semicolon after the `if` expression\n   |\n37 |                         };\n   |                          +\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> stack_trace/src/parse.rs:34:66\n   |\n34 | ...                   demangled = format!(\"{:#}\", demangle(&name));\n   |                                                            ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n","warning: useless use of `format!`\n  --> stack_trace/src/parse.rs:36:41\n   |\n36 | ...                   demangled = format!(\"{}\", name);\n   |                                   ^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `name.to_string()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format\n   = note: `#[warn(clippy::useless_format)]` on by default\n\n"]}},{"file":"stack_trace/src/trace.rs","count":2,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `Trace`\n  --> stack_trace/src/trace.rs:17:5\n   |\n17 | /     pub fn new() -> Self {\n18 | |         Trace {\n19 | |             func_info: Vec::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n16 + impl Default for Trace {\n17 +     fn default() -> Self {\n18 +         Self::new()\n19 +     }\n20 + }\n   |\n\n","warning: unsafe function's docs miss `# Safety` section\n  --> stack_trace/src/trace.rs:25:5\n   |\n25 |     pub unsafe fn trace(&self) -> Vec<String> {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=stack_trace, checker=Lockbud\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/rCoreloongArch/stack_trace\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n[2024-10-09T07:38:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:38:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling stack_trace v0.1.0 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/stack_trace)\nerror: invalid instruction mnemonic 'move'\n  --> stack_trace/src/trace.rs:38:15\n   |\n38 |         asm!(\"move {},$sp\",out(reg)t);\n   |               ^\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:2:2\n   |\n2  |     move rax,sp\n   |     ^^^^\n\nerror: could not compile `stack_trace` (lib) due to 1 previous error\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=stack_trace, checker=Mirai\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/rCoreloongArch/stack_trace\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking zero v0.1.3\n    Checking log v0.4.22\n    Checking rustc-demangle v0.1.24\n    Checking bit_field v0.10.2\n    Checking xmas-elf v0.8.0\n    Checking stack_trace v0.1.0 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/stack_trace)\nerror: could not compile `stack_trace` (lib)\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-09T07:38:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:38:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"rCoreloongArch","pkg":"easy-fs-fuse","count":3,"raw_reports":[{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=easy-fs-fuse, checker=Mirai\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/rCoreloongArch/easy-fs-fuse\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling autocfg v1.4.0\n   Compiling proc-macro2 v1.0.87\n   Compiling unicode-ident v1.0.13\n   Compiling libc v0.2.159\n    Checking cfg-if v1.0.0\n    Checking scopeguard v1.2.0\n    Checking byteorder v1.5.0\n    Checking hashbrown v0.12.3\nerror: failed to run custom build command for `libc v0.2.159`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_9/kern-crates/rCoreloongArch/target/debug/build/libc-2b5100b9da3f0ae3/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.159/build.rs:253:9:\n  Failed to get rustc version\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-09T07:38:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lazy.rs:36:23: 36:43 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lazy.rs:39:13: 39:39 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:38:46Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-09T07:38:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:38:46Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"easy-fs-fuse/src/main.rs","count":1,"kinds":{"Clippy(Warn)":["warning: useless conversion to the same type: `std::fs::ReadDir`\n  --> easy-fs-fuse/src/main.rs:60:24\n   |\n60 |       let apps: Vec<_> = read_dir(src_path)\n   |  ________________________^\n61 | |         .unwrap()\n62 | |         .into_iter()\n   | |____________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n   = note: `#[warn(clippy::useless_conversion)]` on by default\nhelp: consider removing `.into_iter()`\n   |\n60 ~     let apps: Vec<_> = read_dir(src_path)\n61 +         .unwrap()\n   |\n\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Mirai","Lockbud(Probably)","Lockbud(Possibly)","Unformatted"]}