{"repo":{"user":"kern-crates","repo":"memory_set"},"data":[{"user":"kern-crates","repo":"memory_set","pkg":"memory_set","count":8,"raw_reports":[{"file":"src/set.rs","count":8,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `MemorySet<F, P, B>`\n  --> src/set.rs:15:5\n   |\n15 | /     pub const fn new() -> Self {\n16 | |         Self {\n17 | |             areas: BTreeMap::new(),\n18 | |         }\n19 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n13 + impl<F: Copy, P, B: MappingBackend<F, P>> Default for MemorySet<F, P, B> {\n14 +     fn default() -> Self {\n15 +         Self::new()\n16 +     }\n17 + }\n   |\n\n","warning: explicit call to `.into_iter()` in function argument accepting `IntoIterator`\n   --> src/set.rs:245:27\n    |\n245 |         self.areas.extend(to_insert.into_iter());\n    |                           ^^^^^^^^^^^^^^^^^^^^^ help: consider removing the `.into_iter()`: `to_insert`\n    |\nnote: this parameter accepts any `IntoIterator`, so you don't need to call `.into_iter()`\n   --> /rustc/4f2f477fded0a47b21ed3f6aeddeafa5db8bf518/library/core/src/iter/traits/collect.rs:450:18\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n","warning: you should consider adding a `Default` implementation for `MemorySet<F, P, B>`\n  --> src/set.rs:15:5\n   |\n15 | /     pub const fn new() -> Self {\n16 | |         Self {\n17 | |             areas: BTreeMap::new(),\n18 | |         }\n19 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n13 + impl<F: Copy, P, B: MappingBackend<F, P>> Default for MemorySet<F, P, B> {\n14 +     fn default() -> Self {\n15 +         Self::new()\n16 +     }\n17 + }\n   |\n\n","warning: explicit call to `.into_iter()` in function argument accepting `IntoIterator`\n   --> src/set.rs:245:27\n    |\n245 |         self.areas.extend(to_insert.into_iter());\n    |                           ^^^^^^^^^^^^^^^^^^^^^ help: consider removing the `.into_iter()`: `to_insert`\n    |\nnote: this parameter accepts any `IntoIterator`, so you don't need to call `.into_iter()`\n   --> /rustc/4f2f477fded0a47b21ed3f6aeddeafa5db8bf518/library/core/src/iter/traits/collect.rs:450:18\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n","warning: you should consider adding a `Default` implementation for `MemorySet<F, P, B>`\n  --> src/set.rs:15:5\n   |\n15 | /     pub const fn new() -> Self {\n16 | |         Self {\n17 | |             areas: BTreeMap::new(),\n18 | |         }\n19 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n13 + impl<F: Copy, P, B: MappingBackend<F, P>> Default for MemorySet<F, P, B> {\n14 +     fn default() -> Self {\n15 +         Self::new()\n16 +     }\n17 + }\n   |\n\n","warning: explicit call to `.into_iter()` in function argument accepting `IntoIterator`\n   --> src/set.rs:245:27\n    |\n245 |         self.areas.extend(to_insert.into_iter());\n    |                           ^^^^^^^^^^^^^^^^^^^^^ help: consider removing the `.into_iter()`: `to_insert`\n    |\nnote: this parameter accepts any `IntoIterator`, so you don't need to call `.into_iter()`\n   --> /rustc/4f2f477fded0a47b21ed3f6aeddeafa5db8bf518/library/core/src/iter/traits/collect.rs:450:18\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n","warning: you should consider adding a `Default` implementation for `MemorySet<F, P, B>`\n  --> src/set.rs:15:5\n   |\n15 | /     pub const fn new() -> Self {\n16 | |         Self {\n17 | |             areas: BTreeMap::new(),\n18 | |         }\n19 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n13 + impl<F: Copy, P, B: MappingBackend<F, P>> Default for MemorySet<F, P, B> {\n14 +     fn default() -> Self {\n15 +         Self::new()\n16 +     }\n17 + }\n   |\n\n","warning: explicit call to `.into_iter()` in function argument accepting `IntoIterator`\n   --> src/set.rs:245:27\n    |\n245 |         self.areas.extend(to_insert.into_iter());\n    |                           ^^^^^^^^^^^^^^^^^^^^^ help: consider removing the `.into_iter()`: `to_insert`\n    |\nnote: this parameter accepts any `IntoIterator`, so you don't need to call `.into_iter()`\n   --> /rustc/4f2f477fded0a47b21ed3f6aeddeafa5db8bf518/library/core/src/iter/traits/collect.rs:450:18\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Audit","Mirai","Rap","Rudra","Lockbud(Probably)","Lockbud(Possibly)","Outdated","Geiger","Unformatted"]}