{"repo":{"user":"kern-crates","repo":"sel4_task"},"data":[{"user":"kern-crates","repo":"sel4_task","pkg":"sel4_task","count":118,"raw_reports":[{"file":"src/scheduler.rs","count":55,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 1 to 1)\n+#[cfg(feature = \"ENABLE_SMP\")]\n+use crate::deps::{doMaskReschedule, kernel_stack_alloc, ksIdleThreadTCB};\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 3 to 5)\n-use sel4_common::{BIT, MASK};\n-use sel4_common::registers::{FaultIP, NextIP, sp, SSTATUS, SSTATUS_SPIE, SSTATUS_SPP};\n-use sel4_common::sel4_config::{CONFIG_KERNEL_STACK_BITS, CONFIG_MAX_NUM_NODES, CONFIG_NUM_DOMAINS, CONFIG_NUM_PRIORITIES, CONFIG_TIME_SLICE, L2_BITMAP_SIZE, NUM_READY_QUEUES, seL4_TCBBits, TCB_OFFSET, wordBits, wordRadix};\n+use sel4_common::registers::{sp, FaultIP, NextIP, SSTATUS, SSTATUS_SPIE, SSTATUS_SPP};\n+use sel4_common::sel4_config::{\n+    seL4_TCBBits, wordBits, wordRadix, CONFIG_KERNEL_STACK_BITS, CONFIG_MAX_NUM_NODES,\n+    CONFIG_NUM_DOMAINS, CONFIG_NUM_PRIORITIES, CONFIG_TIME_SLICE, L2_BITMAP_SIZE, NUM_READY_QUEUES,\n+    TCB_OFFSET,\n+};\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 7 to 8)\n-#[cfg(feature = \"ENABLE_SMP\")]\n-use crate::deps::{doMaskReschedule, ksIdleThreadTCB, kernel_stack_alloc};\n+use sel4_common::{BIT, MASK};\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 10 to 11)\n-#[cfg(feature = \"ENABLE_SMP\")]\n-use sel4_common::utils::cpu_id;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 15 to 15)\n+#[cfg(feature = \"ENABLE_SMP\")]\n+use sel4_common::utils::cpu_id;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 16 to 16)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 29 to 29)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 36 to 36)\n-    ksReadyQueues: [tcb_queue_t {head: 0, tail: 0}; CONFIG_NUM_DOMAINS * CONFIG_NUM_PRIORITIES],\n+    ksReadyQueues: [tcb_queue_t { head: 0, tail: 0 }; CONFIG_NUM_DOMAINS * CONFIG_NUM_PRIORITIES],\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 45 to 45)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 57 to 57)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 77 to 80)\n-pub static mut ksReadyQueues: [tcb_queue_t; NUM_READY_QUEUES] = [tcb_queue_t {\n-    head: 0,\n-    tail: 0,\n-}; NUM_READY_QUEUES];\n+pub static mut ksReadyQueues: [tcb_queue_t; NUM_READY_QUEUES] =\n+    [tcb_queue_t { head: 0, tail: 0 }; NUM_READY_QUEUES];\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 101 to 101)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 105 to 105)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 108 to 108)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 117 to 117)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 120 to 120)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 132 to 132)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 135 to 135)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 144 to 144)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 147 to 147)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 156 to 156)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 159 to 159)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 168 to 168)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 171 to 171)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 177 to 177)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 181 to 181)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 184 to 184)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 190 to 190)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 233 to 233)\n-        let l1index = wordBits - 1 - ksSMP[cpu_id()].ksReadyQueuesL1Bitmap[dom].leading_zeros() as usize;\n+        let l1index =\n+            wordBits - 1 - ksSMP[cpu_id()].ksReadyQueuesL1Bitmap[dom].leading_zeros() as usize;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 235 to 236)\n-        let l2index =\n-            wordBits - 1 - (ksSMP[cpu_id()].ksReadyQueuesL2Bitmap[dom])[l1index_inverted].leading_zeros() as usize;\n+        let l2index = wordBits\n+            - 1\n+            - (ksSMP[cpu_id()].ksReadyQueuesL2Bitmap[dom])[l1index_inverted].leading_zeros()\n+                as usize;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 243 to 243)\n-    #[cfg(feature = \"ENABLE_SMP\")] {\n+    #[cfg(feature = \"ENABLE_SMP\")]\n+    {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 246 to 246)\n-    #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+    #[cfg(not(feature = \"ENABLE_SMP\"))]\n+    {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 256 to 258)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n-            ksSMP[_cpu].ksReadyQueuesL1Bitmap[dom]|= BIT!(l1index);\n-            ksSMP[_cpu].ksReadyQueuesL2Bitmap[dom][l1index_inverted] |= BIT!(prio & MASK!(wordRadix));\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n+            ksSMP[_cpu].ksReadyQueuesL1Bitmap[dom] |= BIT!(l1index);\n+            ksSMP[_cpu].ksReadyQueuesL2Bitmap[dom][l1index_inverted] |=\n+                BIT!(prio & MASK!(wordRadix));\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 260 to 260)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 272 to 273)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n-            ksSMP[_cpu].ksReadyQueuesL2Bitmap[dom][l1index_inverted] &= !BIT!(prio & MASK!(wordRadix));\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n+            ksSMP[_cpu].ksReadyQueuesL2Bitmap[dom][l1index_inverted] &=\n+                !BIT!(prio & MASK!(wordRadix));\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 278 to 278)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 301 to 301)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 319 to 319)\n-            #[cfg(feature = \"ENABLE_SMP\")] {\n+            #[cfg(feature = \"ENABLE_SMP\")]\n+            {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 322 to 322)\n-            #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+            #[cfg(not(feature = \"ENABLE_SMP\"))]\n+            {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 329 to 329)\n-                #[cfg(feature = \"ENABLE_SMP\")] {\n+                #[cfg(feature = \"ENABLE_SMP\")]\n+                {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 332 to 332)\n-                #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+                #[cfg(not(feature = \"ENABLE_SMP\"))]\n+                {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 335 to 335)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 380 to 382)\n-            } else if was_runnable\n-                && candidate.tcbPriority == get_currenct_thread().tcbPriority\n-            {\n+            } else if was_runnable && candidate.tcbPriority == get_currenct_thread().tcbPriority {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 393 to 393)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 397 to 397)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 462 to 462)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 465 to 465)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 479 to 481)\n-        ThreadState::ThreadStateIdleThreadState => return {\n-\n-        },\n+        ThreadState::ThreadStateIdleThreadState => return {},\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 489 to 489)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 496 to 496)\n-    use crate::deps::{ksIdleThreadTCB, kernel_stack_alloc};\n+    use crate::deps::{kernel_stack_alloc, ksIdleThreadTCB};\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 505 to 505)\n-        tcb.set_register(sp, kernel_stack_alloc as usize + BIT!(CONFIG_KERNEL_STACK_BITS));\n+        tcb.set_register(\n+            sp,\n+            kernel_stack_alloc as usize + BIT!(CONFIG_KERNEL_STACK_BITS),\n+        );\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 515 to 515)\n-            let pptr = (ksIdleThreadTCB as usize + i * BIT!(seL4_TCBBits))as *mut usize;\n+            let pptr = (ksIdleThreadTCB as usize + i * BIT!(seL4_TCBBits)) as *mut usize;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 521 to 521)\n-            tcb.set_register(sp, kernel_stack_alloc as usize + (i + 1) * BIT!(CONFIG_KERNEL_STACK_BITS));\n+            tcb.set_register(\n+                sp,\n+                kernel_stack_alloc as usize + (i + 1) * BIT!(CONFIG_KERNEL_STACK_BITS),\n+            );\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 527 to 528)\n-\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 538 to 538)\n+\n"]}},{"file":"src/tcb.rs","count":44,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 4 to 4)\n-use sel4_common::{BIT, MASK};\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 6 to 9)\n-use sel4_common::registers::{fault_messages, FaultIP, msgInfoRegister, msgRegister, n_contextRegisters, n_exceptionMessage, n_msgRegisters, n_syscallMessage, NextIP, SSTATUS};\n-use sel4_common::utils::{pageBitsForSize, convert_to_mut_type_ref};\n-use sel4_cspace::interface::{cte_t, resolve_address_bits, CapTag, cap_t, mdb_node_t, cte_insert};\n-use sel4_vspace::{set_vm_root, pptr_t, VMReadWrite, VMReadOnly};\n+use sel4_common::registers::{\n+    fault_messages, msgInfoRegister, msgRegister, n_contextRegisters, n_exceptionMessage,\n+    n_msgRegisters, n_syscallMessage, FaultIP, NextIP, SSTATUS,\n+};\n+use sel4_common::utils::{convert_to_mut_type_ref, pageBitsForSize};\n+use sel4_common::{BIT, MASK};\n+use sel4_cspace::interface::{cap_t, cte_insert, cte_t, mdb_node_t, resolve_address_bits, CapTag};\n+use sel4_vspace::{pptr_t, set_vm_root, VMReadOnly, VMReadWrite};\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 11 to 12)\n-use sel4_common::sel4_config::*;\n-use sel4_common::structures::{seL4_IPCBuffer, exception_t};\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 14 to 14)\n+use sel4_common::sel4_config::*;\n+use sel4_common::structures::{exception_t, seL4_IPCBuffer};\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 15 to 16)\n-\n-use super::scheduler::{addToBitmap, get_currenct_thread, possible_switch_to, ready_queues_index, removeFromBitmap, rescheduleRequired, schedule_tcb, set_current_thread};\n+use super::scheduler::{\n+    addToBitmap, get_currenct_thread, possible_switch_to, ready_queues_index, removeFromBitmap,\n+    rescheduleRequired, schedule_tcb, set_current_thread,\n+};\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 21 to 21)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 32 to 32)\n-        Self {registers }\n+        Self { registers }\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 88 to 89)\n-            ThreadState::ThreadStateInactive | ThreadState::ThreadStateBlockedOnNotification | ThreadState::ThreadStateBlockedOnReceive\n-            | ThreadState::ThreadStateBlockedOnReply | ThreadState::ThreadStateBlockedOnSend => true,\n+            ThreadState::ThreadStateInactive\n+            | ThreadState::ThreadStateBlockedOnNotification\n+            | ThreadState::ThreadStateBlockedOnReceive\n+            | ThreadState::ThreadStateBlockedOnReply\n+            | ThreadState::ThreadStateBlockedOnSend => true,\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 91 to 91)\n-            _ => false\n+            _ => false,\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 98 to 99)\n-            ThreadState::ThreadStateRunning | ThreadState::ThreadStateRestart   => true,\n-            _                                                                   => false,\n+            ThreadState::ThreadStateRunning | ThreadState::ThreadStateRestart => true,\n+            _ => false,\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 183 to 183)\n-    pub fn get_sched_queue(&mut self, index: usize) ->  &'static mut tcb_queue_t {\n+    pub fn get_sched_queue(&mut self, index: usize) -> &'static mut tcb_queue_t {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 185 to 185)\n-            #[cfg(feature = \"ENABLE_SMP\")] {\n+            #[cfg(feature = \"ENABLE_SMP\")]\n+            {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 189 to 189)\n-            #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+            #[cfg(not(feature = \"ENABLE_SMP\"))]\n+            {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 198 to 198)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 201 to 201)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 213 to 213)\n-                convert_to_mut_type_ref::<tcb_t>(self.tcbSchedPrev).tcbSchedNext = self.tcbSchedNext;\n+                convert_to_mut_type_ref::<tcb_t>(self.tcbSchedPrev).tcbSchedNext =\n+                    self.tcbSchedNext;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 221 to 221)\n-                convert_to_mut_type_ref::<tcb_t>(self.tcbSchedNext).tcbSchedPrev = self.tcbSchedPrev;\n+                convert_to_mut_type_ref::<tcb_t>(self.tcbSchedNext).tcbSchedPrev =\n+                    self.tcbSchedPrev;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 260 to 261)\n-        use super::scheduler::{ksSMP, ksCurDomain};\n-        use sel4_common::utils::{cpu_id, convert_to_type_ref};\n+        use super::scheduler::{ksCurDomain, ksSMP};\n+        use sel4_common::utils::{convert_to_type_ref, cpu_id};\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 264 to 265)\n-                let target_current = convert_to_type_ref::<tcb_t>(ksSMP[self.tcbAffinity].ksCurThread);\n-                if ksSMP[self.tcbAffinity].ksIdleThread == ksSMP[self.tcbAffinity].ksCurThread || self.tcbPriority > target_current.tcbPriority {\n+                let target_current =\n+                    convert_to_type_ref::<tcb_t>(ksSMP[self.tcbAffinity].ksCurThread);\n+                if ksSMP[self.tcbAffinity].ksIdleThread == ksSMP[self.tcbAffinity].ksCurThread\n+                    || self.tcbPriority > target_current.tcbPriority\n+                {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 272 to 272)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 298 to 298)\n-        lookupSlot_raw_ret_t { status: res_ret.status, slot: res_ret.slot }\n+        lookupSlot_raw_ret_t {\n+            status: res_ret.status,\n+            slot: res_ret.slot,\n+        }\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 344 to 345)\n-        cte_insert(&cap_t::new_reply_cap(can_grant as usize, 0, sender.get_ptr()),\n-                   reply_slot, caller_slot);\n+        cte_insert(\n+            &cap_t::new_reply_cap(can_grant as usize, 0, sender.get_ptr()),\n+            reply_slot,\n+            caller_slot,\n+        );\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 369 to 369)\n-            return Some(convert_to_mut_type_ref::<seL4_IPCBuffer>(base_ptr + (w_buffer_ptr & MASK!(page_bits))));\n+            return Some(convert_to_mut_type_ref::<seL4_IPCBuffer>(\n+                base_ptr + (w_buffer_ptr & MASK!(page_bits)),\n+            ));\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 374 to 374)\n-    pub fn lookup_extra_caps(&self, res: &mut [pptr_t; seL4_MsgMaxExtraCaps]) -> Result<(), seL4_Fault_t>{\n+    pub fn lookup_extra_caps(\n+        &self,\n+        res: &mut [pptr_t; seL4_MsgMaxExtraCaps],\n+    ) -> Result<(), seL4_Fault_t> {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 382 to 382)\n-                if unlikely(lu_ret.status != exception_t::EXCEPTION_NONE)  {\n+                if unlikely(lu_ret.status != exception_t::EXCEPTION_NONE) {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 395 to 395)\n-    pub fn lookup_extra_caps_with_buf(&self, res: &mut [pptr_t; seL4_MsgMaxExtraCaps], buf: Option<&seL4_IPCBuffer>) -> Result<(), seL4_Fault_t>{\n+    pub fn lookup_extra_caps_with_buf(\n+        &self,\n+        res: &mut [pptr_t; seL4_MsgMaxExtraCaps],\n+        buf: Option<&seL4_IPCBuffer>,\n+    ) -> Result<(), seL4_Fault_t> {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 403 to 403)\n-                if unlikely(lu_ret.status != exception_t::EXCEPTION_NONE)  {\n+                if unlikely(lu_ret.status != exception_t::EXCEPTION_NONE) {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 416 to 416)\n-    pub fn lookup_mut_ipc_buffer(&mut self, is_receiver: bool) -> Option<&'static mut seL4_IPCBuffer> {\n+    pub fn lookup_mut_ipc_buffer(\n+        &mut self,\n+        is_receiver: bool,\n+    ) -> Option<&'static mut seL4_IPCBuffer> {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 427 to 427)\n-            return Some(convert_to_mut_type_ref::<seL4_IPCBuffer>(base_ptr + (w_buffer_ptr & MASK!(page_bits))));\n+            return Some(convert_to_mut_type_ref::<seL4_IPCBuffer>(\n+                base_ptr + (w_buffer_ptr & MASK!(page_bits)),\n+            ));\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 447 to 447)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 463 to 463)\n-            },\n+            }\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 467 to 467)\n-            },\n+            }\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 478 to 478)\n-            let cptr= buffer.receiveCNode;\n+            let cptr = buffer.receiveCNode;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 485 to 485)\n-            if unlikely(lus_ret.status != exception_t::EXCEPTION_NONE || lus_ret.bitsRemaining != 0) {\n+            if unlikely(lus_ret.status != exception_t::EXCEPTION_NONE || lus_ret.bitsRemaining != 0)\n+            {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 488 to 488)\n-            return Some(convert_to_mut_type_ref::<cte_t>(lus_ret.slot as usize))\n+            return Some(convert_to_mut_type_ref::<cte_t>(lus_ret.slot as usize));\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 490 to 490)\n-        return None\n+        return None;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 500 to 500)\n-        if let (Some(send_buffer), Some(recv_buffer)) = (self.lookup_ipc_buffer(false), receiver.lookup_mut_ipc_buffer(true)) {\n+        if let (Some(send_buffer), Some(recv_buffer)) = (\n+            self.lookup_ipc_buffer(false),\n+            receiver.lookup_mut_ipc_buffer(true),\n+        ) {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 569 to 571)\n-                receiver.set_mr(seL4_CapFault_InRecvPhase, self.tcbFault.cap_fault_get_in_receive_phase());\n-                receiver.set_lookup_fault_mrs(seL4_CapFault_LookupFailureType, &self.tcbLookupFailure)\n-            },\n+                receiver.set_mr(\n+                    seL4_CapFault_InRecvPhase,\n+                    self.tcbFault.cap_fault_get_in_receive_phase(),\n+                );\n+                receiver\n+                    .set_lookup_fault_mrs(seL4_CapFault_LookupFailureType, &self.tcbLookupFailure)\n+            }\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 574 to 575)\n-                receiver.set_mr(n_syscallMessage, self.tcbFault.unknown_syscall_get_syscall_number())\n-            },\n+                receiver.set_mr(\n+                    n_syscallMessage,\n+                    self.tcbFault.unknown_syscall_get_syscall_number(),\n+                )\n+            }\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 578 to 580)\n-                receiver.set_mr(n_exceptionMessage, self.tcbFault.user_exeception_get_number());\n-                receiver.set_mr(n_exceptionMessage + 1, self.tcbFault.user_exeception_get_code())\n-            },\n+                receiver.set_mr(\n+                    n_exceptionMessage,\n+                    self.tcbFault.user_exeception_get_number(),\n+                );\n+                receiver.set_mr(\n+                    n_exceptionMessage + 1,\n+                    self.tcbFault.user_exeception_get_code(),\n+                )\n+            }\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 584 to 584)\n-                receiver.set_mr(seL4_VMFault_PrefetchFault, self.tcbFault.vm_fault_get_instruction_fault());\n+                receiver.set_mr(\n+                    seL4_VMFault_PrefetchFault,\n+                    self.tcbFault.vm_fault_get_instruction_fault(),\n+                );\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 586 to 586)\n-            },\n+            }\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 592 to 592)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 600 to 600)\n+\n"]}},{"file":"src/lib.rs","count":5,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_task/src/lib.rs (original lines from 7 to 11)\n-mod thread_state;\n-mod tcb_queue;\n-pub mod tcb;\n-mod structures;\n-mod scheduler;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/lib.rs (original lines from 13 to 13)\n+mod scheduler;\n+mod structures;\n+pub mod tcb;\n+mod tcb_queue;\n+mod thread_state;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/lib.rs (original lines from 14 to 14)\n-pub use tcb::*;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/lib.rs (original lines from 16 to 17)\n-pub use thread_state::*;\n-pub use tcb_queue::*;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/lib.rs (original lines from 19 to 19)\n+pub use tcb::*;\n+pub use tcb_queue::*;\n+pub use thread_state::*;\n+\n"]}},{"file":"/home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs","count":4,"kinds":{"Clippy(Error)":["error: invalid register `x10`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:18:9\n   |\n18 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","error: invalid register `x11`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:19:9\n   |\n19 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\n","error: invalid register `x12`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:20:9\n   |\n20 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\n","error: invalid register `x17`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:21:9\n   |\n21 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\n"]}},{"file":"src/deps.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_task/src/deps.rs (original lines from 1 to 1)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/deps.rs (original lines from 7 to 7)\n+\n"]}},{"file":"src/tcb_queue.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb_queue.rs (original lines from 5 to 5)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb_queue.rs (original lines from 42 to 42)\n-        return self.head == 0\n+        return self.head == 0;\n"]}},{"file":"src/thread_state.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_task/src/thread_state.rs (original lines from 32 to 34)\n-        unsafe {\n-            core::mem::transmute::<u8, ThreadState>(self.get_ts_type() as u8)\n-        }\n+        unsafe { core::mem::transmute::<u8, ThreadState>(self.get_ts_type() as u8) }\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/thread_state.rs (original lines from 37 to 37)\n+\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=sel4_task, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_task\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling memchr v2.7.4\n   Compiling regex-syntax v0.8.5\n   Compiling lazy_static v1.5.0\n   Compiling semver-parser v0.7.0\n   Compiling autocfg v1.4.0\n   Compiling semver v0.9.0\n   Compiling aho-corasick v1.1.3\n   Compiling rustc_version v0.2.3\n   Compiling bare-metal v0.2.5\n   Compiling lock_api v0.4.12\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n    Checking log v0.4.22\n    Checking serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.9.0\n    Checking serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n    Checking serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\n    Checking spin v0.9.8\nerror: could not compile `serial-impl-sbi` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=sel4_task, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_task\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling memchr v2.7.4\n   Compiling regex-syntax v0.8.5\n   Compiling semver-parser v0.7.0\n   Compiling lazy_static v1.5.0\n   Compiling autocfg v1.4.0\n   Compiling semver v0.9.0\n   Compiling aho-corasick v1.1.3\n   Compiling rustc_version v0.2.3\n   Compiling lock_api v0.4.12\n   Compiling bare-metal v0.2.5\n   Compiling log v0.4.22\n   Compiling bit_field v0.10.2\n[2024-10-12T15:50:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:50:25Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling scopeguard v1.2.0\n   Compiling bitflags v1.3.2\n   Compiling serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n   Compiling tock-registers v0.9.0\n   Compiling serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n   Compiling spin v0.9.8\n   Compiling serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\nerror: invalid register `x10`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:18:9\n   |\n18 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x11`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:19:9\n   |\n19 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x12`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:20:9\n   |\n20 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x17`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:21:9\n   |\n21 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\nerror: could not compile `serial-impl-sbi` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:50:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:50:25Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/structures.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_task/src/structures.rs (original lines from 36 to 36)\n+\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Audit","Mirai","Lockbud(Probably)","Lockbud(Possibly)","Unformatted"]}