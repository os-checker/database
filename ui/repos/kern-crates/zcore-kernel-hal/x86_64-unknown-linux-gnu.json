{
  "repo": {
    "user": "kern-crates",
    "repo": "zcore-kernel-hal"
  },
  "data": [
    {
      "user": "kern-crates",
      "repo": "zcore-kernel-hal",
      "pkg": "kernel-hal",
      "count": 76,
      "raw_reports": [
        {
          "file": "src/common/ipi.rs",
          "features": "",
          "count": 17,
          "kinds": {
            "Mirai": [
              "error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:20:30\n   |\n20 |         IRQueue::new(unsafe {&mut IPI_REASON0} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n20 |         IRQueue::new(unsafe {&raw mut IPI_REASON0} ),\n   |                              ~~~~~~~~\n\n",
              "error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:21:30\n   |\n21 |         IRQueue::new(unsafe {&mut IPI_REASON1} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n21 |         IRQueue::new(unsafe {&raw mut IPI_REASON1} ),\n   |                              ~~~~~~~~\n\n",
              "error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:22:30\n   |\n22 |         IRQueue::new(unsafe {&mut IPI_REASON2} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n22 |         IRQueue::new(unsafe {&raw mut IPI_REASON2} ),\n   |                              ~~~~~~~~\n\n",
              "error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:23:30\n   |\n23 |         IRQueue::new(unsafe {&mut IPI_REASON3} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n23 |         IRQueue::new(unsafe {&raw mut IPI_REASON3} ),\n   |                              ~~~~~~~~\n\n",
              "error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:24:30\n   |\n24 |         IRQueue::new(unsafe {&mut IPI_REASON4} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n24 |         IRQueue::new(unsafe {&raw mut IPI_REASON4} ),\n   |                              ~~~~~~~~\n\n",
              "error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:25:30\n   |\n25 |         IRQueue::new(unsafe {&mut IPI_REASON5} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n25 |         IRQueue::new(unsafe {&raw mut IPI_REASON5} ),\n   |                              ~~~~~~~~\n\n",
              "error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:26:30\n   |\n26 |         IRQueue::new(unsafe {&mut IPI_REASON6} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n26 |         IRQueue::new(unsafe {&raw mut IPI_REASON6} ),\n   |                              ~~~~~~~~\n\n",
              "error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:27:30\n   |\n27 |         IRQueue::new(unsafe {&mut IPI_REASON7} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n27 |         IRQueue::new(unsafe {&raw mut IPI_REASON7} ),\n   |                              ~~~~~~~~\n\n"
            ],
            "Clippy(Error)": [
              "error: empty line after doc comment\n  --> src/common/ipi.rs:53:1\n   |\n53 | / ///\n54 | |\n   | |_^\n55 |   const TYPE_SHIFT: usize = 60;\n   |   ---------------- the comment documents this constant item\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\nnote: the lint level is defined here\n  --> src/lib.rs:9:9\n   |\n9  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(clippy::empty_line_after_doc_comments)]` implied by `#[deny(warnings)]`\n   = help: if the empty line is unintentional, remove it\n\n",
              "error: creating a mutable reference to mutable static\n  --> src/common/ipi.rs:20:30\n   |\n20 |         IRQueue::new(unsafe {&mut IPI_REASON0} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n20 |         IRQueue::new(unsafe {&raw mut IPI_REASON0} ),\n   |                               +++\n\n",
              "error: creating a mutable reference to mutable static\n  --> src/common/ipi.rs:21:30\n   |\n21 |         IRQueue::new(unsafe {&mut IPI_REASON1} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n21 |         IRQueue::new(unsafe {&raw mut IPI_REASON1} ),\n   |                               +++\n\n",
              "error: creating a mutable reference to mutable static\n  --> src/common/ipi.rs:22:30\n   |\n22 |         IRQueue::new(unsafe {&mut IPI_REASON2} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n22 |         IRQueue::new(unsafe {&raw mut IPI_REASON2} ),\n   |                               +++\n\n",
              "error: creating a mutable reference to mutable static\n  --> src/common/ipi.rs:23:30\n   |\n23 |         IRQueue::new(unsafe {&mut IPI_REASON3} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n23 |         IRQueue::new(unsafe {&raw mut IPI_REASON3} ),\n   |                               +++\n\n",
              "error: creating a mutable reference to mutable static\n  --> src/common/ipi.rs:24:30\n   |\n24 |         IRQueue::new(unsafe {&mut IPI_REASON4} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n24 |         IRQueue::new(unsafe {&raw mut IPI_REASON4} ),\n   |                               +++\n\n",
              "error: creating a mutable reference to mutable static\n  --> src/common/ipi.rs:25:30\n   |\n25 |         IRQueue::new(unsafe {&mut IPI_REASON5} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n25 |         IRQueue::new(unsafe {&raw mut IPI_REASON5} ),\n   |                               +++\n\n",
              "error: creating a mutable reference to mutable static\n  --> src/common/ipi.rs:26:30\n   |\n26 |         IRQueue::new(unsafe {&mut IPI_REASON6} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n26 |         IRQueue::new(unsafe {&raw mut IPI_REASON6} ),\n   |                               +++\n\n",
              "error: creating a mutable reference to mutable static\n  --> src/common/ipi.rs:27:30\n   |\n27 |         IRQueue::new(unsafe {&mut IPI_REASON7} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n27 |         IRQueue::new(unsafe {&raw mut IPI_REASON7} ),\n   |                               +++\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs",
          "features": "",
          "count": 10,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"DoubleLock\",\n  \"possibility\": \"Probably\",\n  \"diagnosis\": {\n    \"first_lock_type\": \"StdMutex(Inner)\",\n    \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n    \"second_lock_type\": \"StdMutex(Inner)\",\n    \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:265:21: 265:25 (#0)\",\n    \"callchains\": [\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n        ],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:559:17: 559:71 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:152:18: 152:21 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ]\n    ]\n  },\n  \"explanation\": \"The first lock is not released when acquiring the second lock\"\n}",
              "{\n  \"bug_kind\": \"DoubleLock\",\n  \"possibility\": \"Probably\",\n  \"diagnosis\": {\n    \"first_lock_type\": \"StdMutex(Inner)\",\n    \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n    \"second_lock_type\": \"StdMutex(Inner)\",\n    \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:264:18: 264:22 (#0)\",\n    \"callchains\": [\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n        ],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:559:17: 559:71 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:152:18: 152:21 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ]\n    ]\n  },\n  \"explanation\": \"The first lock is not released when acquiring the second lock\"\n}",
              "{\n  \"bug_kind\": \"DoubleLock\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"first_lock_type\": \"StdMutex(Inner)\",\n    \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n    \"second_lock_type\": \"StdMutex(Inner)\",\n    \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:264:54: 264:59 (#0)\",\n    \"callchains\": [\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n        ],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:559:17: 559:71 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:152:18: 152:21 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ]\n    ]\n  },\n  \"explanation\": \"The first lock is not released when acquiring the second lock\"\n}",
              "{\n  \"bug_kind\": \"DoubleLock\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"first_lock_type\": \"StdMutex(Inner)\",\n    \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n    \"second_lock_type\": \"StdMutex(Inner)\",\n    \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:240:13: 240:22 (#0)\",\n    \"callchains\": [\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n        ],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:559:17: 559:71 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:152:18: 152:21 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ]\n    ]\n  },\n  \"explanation\": \"The first lock is not released when acquiring the second lock\"\n}",
              "{\n  \"bug_kind\": \"DoubleLock\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"first_lock_type\": \"StdMutex(Inner)\",\n    \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n    \"second_lock_type\": \"StdMutex(Inner)\",\n    \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:254:25: 254:51 (#0)\",\n    \"callchains\": [\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n        ],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:559:17: 559:71 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:152:18: 152:21 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ]\n    ]\n  },\n  \"explanation\": \"The first lock is not released when acquiring the second lock\"\n}",
              "{\n  \"bug_kind\": \"DoubleLock\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"first_lock_type\": \"StdMutex(Inner)\",\n    \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n    \"second_lock_type\": \"StdMutex(Inner)\",\n    \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n    \"callchains\": [\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n        ],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:559:17: 559:71 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:152:18: 152:21 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ]\n    ]\n  },\n  \"explanation\": \"The first lock is not released when acquiring the second lock\"\n}",
              "{\n  \"bug_kind\": \"DoubleLock\",\n  \"possibility\": \"Probably\",\n  \"diagnosis\": {\n    \"first_lock_type\": \"StdMutex(Inner)\",\n    \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n    \"second_lock_type\": \"StdMutex(Inner)\",\n    \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:240:13: 240:22 (#0)\",\n    \"callchains\": [\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n        ],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:559:17: 559:71 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:152:18: 152:21 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ]\n    ]\n  },\n  \"explanation\": \"The first lock is not released when acquiring the second lock\"\n}",
              "{\n  \"bug_kind\": \"DoubleLock\",\n  \"possibility\": \"Probably\",\n  \"diagnosis\": {\n    \"first_lock_type\": \"StdMutex(Inner)\",\n    \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n    \"second_lock_type\": \"StdMutex(Inner)\",\n    \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:264:54: 264:59 (#0)\",\n    \"callchains\": [\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n        ],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:559:17: 559:71 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:152:18: 152:21 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ],\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n        ],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n        ],\n        [\n          \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n        ],\n        [],\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n        ]\n      ]\n    ]\n  },\n  \"explanation\": \"The first lock is not released when acquiring the second lock\"\n}",
              "{\n  \"bug_kind\": \"Deadlock before Condvar::wait and notify\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"condvar_wait_type\": \"std::sync::Condvar::wait\",\n    \"condvar_wait_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:264:31: 264:69 (#0)\",\n    \"condvar_notify_type\": \"std::sync::Condvar::notify\",\n    \"condvar_notify_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:288:9: 288:31 (#0)\",\n    \"deadlocks\": [\n      {\n        \"wait_lock_type\": \"StdMutex(Inner)\",\n        \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n        \"notify_lock_type\": \"StdMutex(Inner)\",\n        \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:284:13: 284:22 (#0)\"\n      },\n      {\n        \"wait_lock_type\": \"StdMutex(Inner)\",\n        \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n        \"notify_lock_type\": \"StdMutex(Inner)\",\n        \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:284:13: 284:22 (#0)\"\n      }\n    ]\n  },\n  \"explanation\": \"The same lock before Condvar::wait and notify\"\n}",
              "{\n  \"bug_kind\": \"Deadlock before Condvar::wait and notify\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"condvar_wait_type\": \"std::sync::Condvar::wait\",\n    \"condvar_wait_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:264:31: 264:69 (#0)\",\n    \"condvar_notify_type\": \"std::sync::Condvar::notify\",\n    \"condvar_notify_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:319:13: 319:35 (#0)\",\n    \"deadlocks\": [\n      {\n        \"wait_lock_type\": \"StdMutex(Inner)\",\n        \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n        \"notify_lock_type\": \"StdMutex(Inner)\",\n        \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\"\n      },\n      {\n        \"wait_lock_type\": \"StdMutex(Inner)\",\n        \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n        \"notify_lock_type\": \"StdMutex(Inner)\",\n        \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\"\n      }\n    ]\n  },\n  \"explanation\": \"The same lock before Condvar::wait and notify\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2706:25: 2706:29 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}",
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2719:9: 2752:10 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}",
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2724:21: 2724:24 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}",
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2725:23: 2725:28 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}",
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2719:9: 2752:10 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}",
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2706:25: 2706:29 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}"
            ]
          }
        },
        {
          "file": "src/libos/mem.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Error)": [
              "error: a `Vec` of `Range` that is only one element\n  --> src/libos/mem.rs:35:13\n   |\n35 |             vec![PAGE_SIZE..PMEM_SIZE]\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_range_in_vec_init\n   = note: `#[deny(clippy::single_range_in_vec_init)]` implied by `#[deny(warnings)]`\nhelp: if you wanted a `Vec` that contains the entire range, try\n   |\n35 -             vec![PAGE_SIZE..PMEM_SIZE]\n35 +             (PAGE_SIZE..PMEM_SIZE).collect::<std::vec::Vec<usize>>()\n   |\n\n",
              "error: variables can be used directly in the `format!` string\n  --> src/libos/mem.rs:53:13\n   |\n53 |             trace!(\"pmem_zero: addr={:#x}, len={:#x}\", paddr, len);\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n53 -             trace!(\"pmem_zero: addr={:#x}, len={:#x}\", paddr, len);\n53 +             trace!(\"pmem_zero: addr={paddr:#x}, len={len:#x}\");\n   |\n\n",
              "error: variables can be used directly in the `format!` string\n  --> src/libos/mem.rs:59:13\n   |\n59 |             trace!(\"pmem_copy: {:#x} <- {:#x}, len={:#x}\", dst, src, len);\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n59 -             trace!(\"pmem_copy: {:#x} <- {:#x}, len={:#x}\", dst, src, len);\n59 +             trace!(\"pmem_copy: {dst:#x} <- {src:#x}, len={len:#x}\");\n   |\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}",
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/sys/termios.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/sys/termios.rs:865:50: 865:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/sys/termios.rs:868:9: 868:10 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}",
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/sys/termios.rs:874:50: 874:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/sys/termios.rs:877:9: 877:10 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}",
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/controller.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/controller.rs:210:39: 210:51 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/controller.rs:214:13: 214:14 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}",
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/controller.rs:285:41: 285:55 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/controller.rs:289:13: 289:14 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/video.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/video.rs:858:6: 858:6 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/video.rs:854:13: 854:14 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}",
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/video.rs:850:58: 850:67 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/video.rs:854:13: 854:14 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}"
            ]
          }
        },
        {
          "file": "src/lib.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error: private item shadows public glob re-export\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\n   |\nnote: the name `config` in the type namespace is supposed to be publicly re-exported here\n  --> src/lib.rs:49:5\n   |\n49 |     *,\n   |     ^\nnote: but the private item here shadows it\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\n   = note: `#[deny(hidden_glob_reexports)]` implied by `#[deny(warnings)]`\n\n"
            ],
            "Mirai": [
              "error: private item shadows public glob re-export\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\n   |\nnote: the name `config` in the type namespace is supposed to be publicly re-exported here\n  --> src/lib.rs:49:5\n   |\n49 |     *,\n   |     ^\nnote: but the private item here shadows it\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\nnote: the lint level is defined here\n  --> src/lib.rs:9:9\n   |\n9  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(hidden_glob_reexports)]` implied by `#[deny(warnings)]`\n\n"
            ]
          }
        },
        {
          "file": "src/libos/dummy.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error: variables can be used directly in the `format!` string\n  --> src/libos/dummy.rs:10:9\n   |\n10 |         trace!(\"Allocate frame: {:x?}\", ret);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n10 -         trace!(\"Allocate frame: {:x?}\", ret);\n10 +         trace!(\"Allocate frame: {ret:x?}\");\n   |\n\n",
              "error: variables can be used directly in the `format!` string\n  --> src/libos/dummy.rs:28:9\n   |\n28 |         trace!(\"Deallocate frame: {:x}\", paddr);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n28 -         trace!(\"Deallocate frame: {:x}\", paddr);\n28 +         trace!(\"Deallocate frame: {paddr:x}\");\n   |\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"backends::use_file::open_or_wait\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs:84:15: 84:41 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs:106:5: 106:37 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustix-1.0.7/src/backend/linux_raw/param/auxv.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustix-1.0.7/src/backend/linux_raw/param/auxv.rs:330:42: 330:52 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustix-1.0.7/src/backend/linux_raw/param/auxv.rs:355:1: 355:2 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/hint.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/hint.rs:93:27: 93:41 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/hint.rs:111:1: 111:2 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/joystick.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/joystick.rs:432:39: 432:61 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/joystick.rs:438:5: 438:6 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/keyboard/keycode.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/keyboard/keycode.rs:520:37: 520:52 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/keyboard/keycode.rs:527:17: 527:18 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tempfile-3.20.0/src/file/imp/unix.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"file::imp::platform::persist\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tempfile-3.20.0/src/file/imp/unix.rs:131:17: 131:36 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tempfile-3.20.0/src/file/imp/unix.rs:134:42: 134:68 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kernel-hal, checker=Clippy\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-06-28 11:35:07.010946818 +08:00:00\n   Compiling crossbeam-utils v0.8.21\n    Checking pin-project-lite v0.2.16\n   Compiling autocfg v1.5.0\n    Checking bitflags v1.3.2\n    Checking parking v2.2.1\n    Checking bitflags v2.9.1\n    Checking value-bag v1.11.1\n    Checking futures-core v0.3.31\n    Checking fastrand v2.3.0\n    Checking log v0.4.27\n    Checking cfg-if v1.0.1\n    Checking bit_field v0.10.2\n    Checking futures-io v0.3.31\n   Compiling libc v0.2.174\n   Compiling rustix v1.0.7\n   Compiling lock_api v0.4.13\n    Checking concurrent-queue v2.5.0\n   Compiling rustversion v1.0.21\n    Checking event-listener v5.4.0\n    Checking linux-raw-sys v0.9.4\n    Checking scopeguard v1.2.0\n    Checking event-listener-strategy v0.5.4\n    Checking futures-lite v2.6.0\n   Compiling proc-macro2 v1.0.95\n   Compiling version-compare v0.0.10\n    Checking tracing-core v0.1.34\n   Compiling cfg-if v0.1.10\n   Compiling sdl2-sys v0.34.5\n    Checking tracing v0.1.41\n    Checking spin v0.9.8\n    Checking raw-cpuid v10.7.0\n    Checking async-task v4.7.1\n    Checking slab v0.4.10\n    Checking atomic-waker v1.1.2\n    Checking volatile v0.4.6\n   Compiling unicode-ident v1.0.18\n    Checking x86_64 v0.14.13\n    Checking piper v0.2.4\n    Checking async-channel v2.3.1\n    Checking async-lock v3.4.0\n   Compiling paste v1.0.15\n    Checking once_cell v1.21.3\n   Compiling quote v1.0.40\n    Checking blocking v1.6.1\n    Checking async-executor v1.13.2\n   Compiling memoffset v0.6.5\n    Checking event-listener v2.5.3\n   Compiling sdl2 v0.34.5\n    Checking volatile v0.3.0\n   Compiling getrandom v0.3.3\n    Checking async-channel v1.9.0\n   Compiling syn v2.0.104\n    Checking lazy_static v1.5.0\n    Checking rsdp v2.0.1\n    Checking kv-log-macro v1.0.7\n   Compiling trapframe v0.9.0\n    Checking pin-utils v0.1.0\n    Checking byteorder v1.5.0\n    Checking managed v0.8.0\n    Checking memchr v2.7.5\n    Checking bit v0.1.1\n   Compiling x86 v0.46.0\n    Checking x2apic v0.4.3\n    Checking polling v3.8.0\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking async-io v2.4.1\n    Checking async-global-executor v2.4.1\n    Checking async-std v1.13.1\n    Checking acpi v4.1.1\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking numeric-enum-macro v0.2.0\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking nix v0.23.2\n    Checking tempfile v3.20.0\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n   Compiling git-version-macro v0.3.9\n    Checking git-version v0.3.9\n    Checking kernel-hal v0.1.0 (/home/runner/check/batch_5/kern-crates/zcore-kernel-hal)\nerror: could not compile `kernel-hal` (lib) due to 21 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) geiger",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kernel-hal, checker=Geiger\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2025-06-28 11:36:08.582504509 +08:00:00\n     Removed 0 files\n   Compiling crossbeam-utils v0.8.21\n   Compiling autocfg v1.5.0\n    Checking pin-project-lite v0.2.16\n    Checking bitflags v1.3.2\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/crossbeam-utils-5887ca59ff28d947/build_script_build-5887ca59ff28d947.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/bitflags-e452f082b53802d5.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libbitflags-e452f082b53802d5.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/autocfg-3b49e0afa777d415.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/pin_project_lite-d39827a1100fb9ef.d\",\"emit\":\"dep-info\"}\n    Checking parking v2.2.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libpin_project_lite-d39827a1100fb9ef.rmeta\",\"emit\":\"metadata\"}\n    Checking bitflags v2.9.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/parking-6e0568604af2104d.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/bitflags-e1526976968882b8.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libparking-6e0568604af2104d.rmeta\",\"emit\":\"metadata\"}\n    Checking value-bag v1.11.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/value_bag-7de5729fc23d1510.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libbitflags-e1526976968882b8.rmeta\",\"emit\":\"metadata\"}\n    Checking bit_field v0.10.2\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libautocfg-3b49e0afa777d415.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/crossbeam-utils-5887ca59ff28d947/build_script_build-5887ca59ff28d947\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/bit_field-1cb827c223858202.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libbit_field-1cb827c223858202.rmeta\",\"emit\":\"metadata\"}\n    Checking cfg-if v1.0.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/crossbeam_utils-b9d31bcab51a1d77.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libvalue_bag-7de5729fc23d1510.rmeta\",\"emit\":\"metadata\"}\n    Checking log v0.4.27\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/cfg_if-375191e112da1984.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libcfg_if-375191e112da1984.rmeta\",\"emit\":\"metadata\"}\n    Checking futures-core v0.3.31\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/futures_core-928ec4daade86234.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/log-7232d1f7d43b2502.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libfutures_core-928ec4daade86234.rmeta\",\"emit\":\"metadata\"}\n    Checking fastrand v2.3.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libautocfg-3b49e0afa777d415.rlib\",\"emit\":\"link\"}\n   Compiling lock_api v0.4.13\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/fastrand-df90f19ce057646e.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/lock_api-f541141e107cd5c7/build_script_build-f541141e107cd5c7.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/liblog-7232d1f7d43b2502.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libfastrand-df90f19ce057646e.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/lock_api-f541141e107cd5c7/build_script_build-f541141e107cd5c7\",\"emit\":\"link\"}\n    Checking futures-io v0.3.31\n   Compiling rustix v1.0.7\n   Compiling libc v0.2.174\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/rustix-bcad473b76e2b41b/build_script_build-bcad473b76e2b41b.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/libc-ab035bf7408d088c/build_script_build-ab035bf7408d088c.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/futures_io-f01d07d5f3284987.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libcrossbeam_utils-b9d31bcab51a1d77.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libfutures_io-f01d07d5f3284987.rmeta\",\"emit\":\"metadata\"}\n    Checking concurrent-queue v2.5.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/concurrent_queue-652185bb9cf1c0a0.d\",\"emit\":\"dep-info\"}\n   Compiling rustversion v1.0.21\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/rustversion-0768b5f6fd8db8b7/build_script_build-0768b5f6fd8db8b7.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libconcurrent_queue-652185bb9cf1c0a0.rmeta\",\"emit\":\"metadata\"}\n    Checking event-listener v5.4.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/event_listener-32f022d8f7e5524a.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/rustix-bcad473b76e2b41b/build_script_build-bcad473b76e2b41b\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/libc-ab035bf7408d088c/build_script_build-ab035bf7408d088c\",\"emit\":\"link\"}\n    Checking linux-raw-sys v0.9.4\n    Checking scopeguard v1.2.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/scopeguard-f9f4a2b4ed0dfe04.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libscopeguard-f9f4a2b4ed0dfe04.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/rustversion-0768b5f6fd8db8b7/build_script_build-0768b5f6fd8db8b7\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libevent_listener-32f022d8f7e5524a.rmeta\",\"emit\":\"metadata\"}\n    Checking event-listener-strategy v0.5.4\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/lock_api-4e210db0b18355ba.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/event_listener_strategy-f0388115ce1578bb.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/linux_raw_sys-de315da592388e2e.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libevent_listener_strategy-f0388115ce1578bb.rmeta\",\"emit\":\"metadata\"}\n    Checking futures-lite v2.6.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/liblock_api-4e210db0b18355ba.rmeta\",\"emit\":\"metadata\"}\n    Checking tracing-core v0.1.34\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/tracing_core-38043601bb57e35d.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/futures_lite-bbb4ea15cc0d9e51.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libc-1460b316abd643eb.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libtracing_core-38043601bb57e35d.rmeta\",\"emit\":\"metadata\"}\n   Compiling version-compare v0.0.10\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/version_compare-6f2d83fc390e5625.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libversion_compare-6f2d83fc390e5625.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libversion_compare-6f2d83fc390e5625.rlib\",\"emit\":\"link\"}\n   Compiling cfg-if v0.1.10\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/cfg_if-9e09d1627900e9a1.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libcfg_if-9e09d1627900e9a1.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libcfg_if-9e09d1627900e9a1.rlib\",\"emit\":\"link\"}\n   Compiling proc-macro2 v1.0.95\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/proc-macro2-4b131a9cc84a5cde/build_script_build-4b131a9cc84a5cde.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libfutures_lite-bbb4ea15cc0d9e51.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/proc-macro2-4b131a9cc84a5cde/build_script_build-4b131a9cc84a5cde\",\"emit\":\"link\"}\n   Compiling sdl2-sys v0.34.5\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/sdl2-sys-f0c92363c2b41c30/build_script_build-f0c92363c2b41c30.d\",\"emit\":\"dep-info\"}\n    Checking tracing v0.1.41\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/tracing-3d986ea693db5aab.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/sdl2-sys-f0c92363c2b41c30/build_script_build-f0c92363c2b41c30\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libtracing-3d986ea693db5aab.rmeta\",\"emit\":\"metadata\"}\n    Checking spin v0.9.8\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/rustversion-0cd5cbeb9eaceaca.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/spin-611747a21ad09090.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libspin-611747a21ad09090.rmeta\",\"emit\":\"metadata\"}\n    Checking raw-cpuid v10.7.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/liblinux_raw_sys-de315da592388e2e.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/raw_cpuid-5f4ca47649f2be1c.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/librustversion-0cd5cbeb9eaceaca.so\",\"emit\":\"link\"}\n    Checking volatile v0.4.6\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/volatile-9c3a5d9b8a46e4be.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libvolatile-9c3a5d9b8a46e4be.rmeta\",\"emit\":\"metadata\"}\n    Checking async-task v4.7.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/async_task-ae2c1437f8da87f3.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/liblibc-1460b316abd643eb.rmeta\",\"emit\":\"metadata\"}\n   Compiling unicode-ident v1.0.18\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/rustix-944120480b34814d.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libasync_task-ae2c1437f8da87f3.rmeta\",\"emit\":\"metadata\"}\n    Checking atomic-waker v1.1.2\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/unicode_ident-1d1395cd7a8bd8da.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/atomic_waker-20260b4402dc237a.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libunicode_ident-1d1395cd7a8bd8da.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libatomic_waker-20260b4402dc237a.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libunicode_ident-1d1395cd7a8bd8da.rlib\",\"emit\":\"link\"}\n    Checking slab v0.4.10\n    Checking piper v0.2.4\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/piper-75d4e2ee990617f1.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/slab-28a1f5a9b03e60b4.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libpiper-75d4e2ee990617f1.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libslab-28a1f5a9b03e60b4.rmeta\",\"emit\":\"metadata\"}\n    Checking x86_64 v0.14.13\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/proc_macro2-d52e1b0fd08ab4a5.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libraw_cpuid-5f4ca47649f2be1c.rmeta\",\"emit\":\"metadata\"}\n    Checking async-channel v2.3.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/async_channel-f408da6dacf5a403.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/x86_64-7f481fac0d09e666.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libasync_channel-f408da6dacf5a403.rmeta\",\"emit\":\"metadata\"}\n    Checking async-lock v3.4.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libproc_macro2-d52e1b0fd08ab4a5.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/async_lock-7c8e998dd136771e.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libproc_macro2-d52e1b0fd08ab4a5.rlib\",\"emit\":\"link\"}\n    Checking once_cell v1.21.3\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/once_cell-a196c0519b93602c.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libasync_lock-7c8e998dd136771e.rmeta\",\"emit\":\"metadata\"}\n   Compiling paste v1.0.15\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/paste-9245072c691d01c9/build_script_build-9245072c691d01c9.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libonce_cell-a196c0519b93602c.rmeta\",\"emit\":\"metadata\"}\n   Compiling quote v1.0.40\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/quote-c8eb33032447793c.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/paste-9245072c691d01c9/build_script_build-9245072c691d01c9\",\"emit\":\"link\"}\n    Checking blocking v1.6.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libquote-c8eb33032447793c.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/blocking-76ff21d2ee779469.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libquote-c8eb33032447793c.rlib\",\"emit\":\"link\"}\n    Checking async-executor v1.13.2\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libblocking-76ff21d2ee779469.rmeta\",\"emit\":\"metadata\"}\n   Compiling memoffset v0.6.5\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/async_executor-59a182dcd9486104.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/memoffset-38252621c5d39a22/build_script_build-38252621c5d39a22.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/memoffset-38252621c5d39a22/build_script_build-38252621c5d39a22\",\"emit\":\"link\"}\n   Compiling sdl2 v0.34.5\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libasync_executor-59a182dcd9486104.rmeta\",\"emit\":\"metadata\"}\n    Checking volatile v0.3.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/sdl2-a60e8755fb138fd6/build_script_build-a60e8755fb138fd6.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/volatile-e750ae413730edb8.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libvolatile-e750ae413730edb8.rmeta\",\"emit\":\"metadata\"}\n   Compiling getrandom v0.3.3\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/getrandom-c106067e1fce9a4e/build_script_build-c106067e1fce9a4e.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libx86_64-7f481fac0d09e666.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/sdl2-a60e8755fb138fd6/build_script_build-a60e8755fb138fd6\",\"emit\":\"link\"}\n    Checking event-listener v2.5.3\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/event_listener-da07841f8f10f3de.d\",\"emit\":\"dep-info\"}\n   Compiling syn v2.0.104\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libevent_listener-da07841f8f10f3de.rmeta\",\"emit\":\"metadata\"}\n    Checking async-channel v1.9.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/async_channel-91d644c5a6448f65.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libasync_channel-91d644c5a6448f65.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/getrandom-c106067e1fce9a4e/build_script_build-c106067e1fce9a4e\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/paste-324a265740fab356.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/sdl2_sys-43bf5aaf749eedcd.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/syn-cdf272fdbf95c988.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libpaste-324a265740fab356.so\",\"emit\":\"link\"}\n    Checking lazy_static v1.5.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/lazy_static-6c651f00f6b970b5.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/liblazy_static-6c651f00f6b970b5.rmeta\",\"emit\":\"metadata\"}\n    Checking kv-log-macro v1.0.7\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/kv_log_macro-436ed25bbb7a9490.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libkv_log_macro-436ed25bbb7a9490.rmeta\",\"emit\":\"metadata\"}\n    Checking rsdp v2.0.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/rsdp-f510462b82b7f79e.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/librsdp-f510462b82b7f79e.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libsdl2_sys-43bf5aaf749eedcd.rmeta\",\"emit\":\"metadata\"}\n    Checking bit v0.1.1\n    Checking pin-utils v0.1.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/bit-b1ed57f362979867.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/pin_utils-7f3687f361877058.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libpin_utils-7f3687f361877058.rmeta\",\"emit\":\"metadata\"}\n    Checking byteorder v1.5.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libbit-b1ed57f362979867.rmeta\",\"emit\":\"metadata\"}\n   Compiling x86 v0.46.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/byteorder-c0ce989625e81065.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/x86-3449c304a57fc03a/build_script_build-3449c304a57fc03a.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/x86-3449c304a57fc03a/build_script_build-3449c304a57fc03a\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libbyteorder-c0ce989625e81065.rmeta\",\"emit\":\"metadata\"}\n   Compiling trapframe v0.9.0\n    Checking memchr v2.7.5\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/trapframe-4a89bec6e4c70cda/build_script_build-4a89bec6e4c70cda.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/memchr-9f577a9cb4bf9863.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/build/trapframe-4a89bec6e4c70cda/build_script_build-4a89bec6e4c70cda\",\"emit\":\"link\"}\n    Checking managed v0.8.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/managed-4df74ce53108a461.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libmanaged-4df74ce53108a461.rmeta\",\"emit\":\"metadata\"}\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libmemchr-9f577a9cb4bf9863.rmeta\",\"emit\":\"metadata\"}\n    Checking x2apic v0.4.3\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/x2apic-0ae7439b7adf0ca1.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/smoltcp-f71a59a660dc342b.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/librustix-944120480b34814d.rmeta\",\"emit\":\"metadata\"}\n    Checking polling v3.8.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libx2apic-0ae7439b7adf0ca1.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/polling-f6e6fc67a72fede4.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/sdl2-25098371aa6848aa.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libpolling-f6e6fc67a72fede4.rmeta\",\"emit\":\"metadata\"}\n    Checking async-io v2.4.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/async_io-54dec1d8794f7bf0.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libasync_io-54dec1d8794f7bf0.rmeta\",\"emit\":\"metadata\"}\n    Checking async-global-executor v2.4.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/async_global_executor-fd4fb8ac2d9370f3.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libasync_global_executor-fd4fb8ac2d9370f3.rmeta\",\"emit\":\"metadata\"}\n    Checking async-std v1.13.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/async_std-7496cd64bb993c1d.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libsdl2-25098371aa6848aa.rmeta\",\"emit\":\"metadata\"}\n    Checking acpi v4.1.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/acpi-f7497c26c9860fd9.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libacpi-f7497c26c9860fd9.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/getrandom-2f9051854fd6b0f8.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libgetrandom-2f9051854fd6b0f8.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libsmoltcp-f71a59a660dc342b.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/memoffset-cd7fceb1bd353847.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libmemoffset-cd7fceb1bd353847.rmeta\",\"emit\":\"metadata\"}\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/lock-e055fd3f01a4ad80.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/liblock-e055fd3f01a4ad80.rmeta\",\"emit\":\"metadata\"}\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/isomorphic_drivers-b69b607cfe1d1fea.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/virtio_drivers-26c212263f2cec8f.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libsyn-cdf272fdbf95c988.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libisomorphic_drivers-b69b607cfe1d1fea.rmeta\",\"emit\":\"metadata\"}\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/pci-2bf16e5bad801ca6.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libvirtio_drivers-26c212263f2cec8f.rmeta\",\"emit\":\"metadata\"}\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libasync_std-7496cd64bb993c1d.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/bitmap_allocator-e016312ba735ccde.d\",\"emit\":\"dep-info\"}\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libbitmap_allocator-e016312ba735ccde.rmeta\",\"emit\":\"metadata\"}\n    Checking numeric-enum-macro v0.2.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/device_tree-4cedf408bfc0d65d.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libpci-2bf16e5bad801ca6.rmeta\",\"emit\":\"metadata\"}\n    Checking nix v0.23.2\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/numeric_enum_macro-796a58d6f2689351.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libnumeric_enum_macro-796a58d6f2689351.rmeta\",\"emit\":\"metadata\"}\n    Checking tempfile v3.20.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/tempfile-0f71bd77669489dc.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libdevice_tree-4cedf408bfc0d65d.rmeta\",\"emit\":\"metadata\"}\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/zcore_drivers-6d8fbcde667392e2.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libtempfile-0f71bd77669489dc.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/x86-f8fbabdc509c4922.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/nix-aef7f39275d65d9e.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libzcore_drivers-6d8fbcde667392e2.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/trapframe-9e62aee90a9f950d.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libtrapframe-9e62aee90a9f950d.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libsyn-cdf272fdbf95c988.rlib\",\"emit\":\"link\"}\n   Compiling git-version-macro v0.3.9\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/git_version_macro-9c9cf13112fcddef.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libx86-f8fbabdc509c4922.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libgit_version_macro-9c9cf13112fcddef.so\",\"emit\":\"link\"}\n    Checking git-version v0.3.9\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/git_version-c474b31650d8d193.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libgit_version-c474b31650d8d193.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libnix-aef7f39275d65d9e.rmeta\",\"emit\":\"metadata\"}\n    Checking kernel-hal v0.1.0 (/home/runner/check/batch_5/kern-crates/zcore-kernel-hal)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/kernel_hal-396b71e821e05c47.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"private item shadows public glob re-export\",\"code\":{\"code\":\"hidden_glob_reexports\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"src/lib.rs\",\"byte_start\":466,\"byte_end\":477,\"line_start\":25,\"line_end\":25,\"column_start\":1,\"column_end\":12,\"is_primary\":true,\"text\":[{\"text\":\"mod config;\",\"highlight_start\":1,\"highlight_end\":12}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"the name `config` in the type namespace is supposed to be publicly re-exported here\",\"code\":null,\"level\":\"note\",\"spans\":[{\"file_name\":\"src/lib.rs\",\"byte_start\":956,\"byte_end\":957,\"line_start\":49,\"line_end\":49,\"column_start\":5,\"column_end\":6,\"is_primary\":true,\"text\":[{\"text\":\"    *,\",\"highlight_start\":5,\"highlight_end\":6}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"but the private item here shadows it\",\"code\":null,\"level\":\"note\",\"spans\":[{\"file_name\":\"src/lib.rs\",\"byte_start\":466,\"byte_end\":477,\"line_start\":25,\"line_end\":25,\"column_start\":1,\"column_end\":12,\"is_primary\":true,\"text\":[{\"text\":\"mod config;\",\"highlight_start\":1,\"highlight_end\":12}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"the lint level is defined here\",\"code\":null,\"level\":\"note\",\"spans\":[{\"file_name\":\"src/lib.rs\",\"byte_start\":252,\"byte_end\":260,\"line_start\":9,\"line_end\":9,\"column_start\":9,\"column_end\":17,\"is_primary\":true,\"text\":[{\"text\":\"#![deny(warnings)]\",\"highlight_start\":9,\"highlight_end\":17}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"`#[deny(hidden_glob_reexports)]` implied by `#[deny(warnings)]`\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: private item shadows public glob re-export\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/lib.rs:25:1\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m25\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0mmod config;\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;10mnote\\u001b[0m\\u001b[0m: the name `config` in the type namespace is supposed to be publicly re-exported here\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/lib.rs:49:5\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m49\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m    *,\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m     \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;10m^\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;10mnote\\u001b[0m\\u001b[0m: but the private item here shadows it\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/lib.rs:25:1\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m25\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0mmod config;\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;10m^^^^^^^^^^^\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;10mnote\\u001b[0m\\u001b[0m: the lint level is defined here\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/lib.rs:9:9\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m9\\u001b[0m\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m#![deny(warnings)]\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m         \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;10m^^^^^^^^\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: `#[deny(hidden_glob_reexports)]` implied by `#[deny(warnings)]`\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"creating a mutable reference to mutable static\",\"code\":{\"code\":\"static_mut_refs\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"src/common/ipi.rs\",\"byte_start\":848,\"byte_end\":864,\"line_start\":20,\"line_end\":20,\"column_start\":30,\"column_end\":46,\"is_primary\":true,\"text\":[{\"text\":\"        IRQueue::new(unsafe {&mut IPI_REASON0} ),\",\"highlight_start\":30,\"highlight_end\":46}],\"label\":\"mutable reference to mutable static\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"`#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"use `&raw mut` instead to create a raw pointer\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"src/common/ipi.rs\",\"byte_start\":848,\"byte_end\":853,\"line_start\":20,\"line_end\":20,\"column_start\":30,\"column_end\":35,\"is_primary\":true,\"text\":[{\"text\":\"        IRQueue::new(unsafe {&mut IPI_REASON0} ),\",\"highlight_start\":30,\"highlight_end\":35}],\"label\":null,\"suggested_replacement\":\"&raw mut \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: creating a mutable reference to mutable static\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/common/ipi.rs:20:30\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m20\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m        IRQueue::new(unsafe {&mut IPI_REASON0} ),\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                              \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^^^^^^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mmutable reference to mutable static\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: use `&raw mut` instead to create a raw pointer\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m20\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0m        IRQueue::new(unsafe {&\\u001b[0m\\u001b[0m\\u001b[38;5;10mraw \\u001b[0m\\u001b[0mmut IPI_REASON0} ),\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                               \\u001b[0m\\u001b[0m\\u001b[38;5;10m+++\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"creating a mutable reference to mutable static\",\"code\":{\"code\":\"static_mut_refs\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"src/common/ipi.rs\",\"byte_start\":898,\"byte_end\":914,\"line_start\":21,\"line_end\":21,\"column_start\":30,\"column_end\":46,\"is_primary\":true,\"text\":[{\"text\":\"        IRQueue::new(unsafe {&mut IPI_REASON1} ),\",\"highlight_start\":30,\"highlight_end\":46}],\"label\":\"mutable reference to mutable static\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"use `&raw mut` instead to create a raw pointer\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"src/common/ipi.rs\",\"byte_start\":898,\"byte_end\":903,\"line_start\":21,\"line_end\":21,\"column_start\":30,\"column_end\":35,\"is_primary\":true,\"text\":[{\"text\":\"        IRQueue::new(unsafe {&mut IPI_REASON1} ),\",\"highlight_start\":30,\"highlight_end\":35}],\"label\":null,\"suggested_replacement\":\"&raw mut \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: creating a mutable reference to mutable static\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/common/ipi.rs:21:30\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m21\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m        IRQueue::new(unsafe {&mut IPI_REASON1} ),\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                              \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^^^^^^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mmutable reference to mutable static\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: use `&raw mut` instead to create a raw pointer\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m21\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0m        IRQueue::new(unsafe {&\\u001b[0m\\u001b[0m\\u001b[38;5;10mraw \\u001b[0m\\u001b[0mmut IPI_REASON1} ),\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                               \\u001b[0m\\u001b[0m\\u001b[38;5;10m+++\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"creating a mutable reference to mutable static\",\"code\":{\"code\":\"static_mut_refs\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"src/common/ipi.rs\",\"byte_start\":948,\"byte_end\":964,\"line_start\":22,\"line_end\":22,\"column_start\":30,\"column_end\":46,\"is_primary\":true,\"text\":[{\"text\":\"        IRQueue::new(unsafe {&mut IPI_REASON2} ),\",\"highlight_start\":30,\"highlight_end\":46}],\"label\":\"mutable reference to mutable static\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"use `&raw mut` instead to create a raw pointer\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"src/common/ipi.rs\",\"byte_start\":948,\"byte_end\":953,\"line_start\":22,\"line_end\":22,\"column_start\":30,\"column_end\":35,\"is_primary\":true,\"text\":[{\"text\":\"        IRQueue::new(unsafe {&mut IPI_REASON2} ),\",\"highlight_start\":30,\"highlight_end\":35}],\"label\":null,\"suggested_replacement\":\"&raw mut \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: creating a mutable reference to mutable static\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/common/ipi.rs:22:30\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m22\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m        IRQueue::new(unsafe {&mut IPI_REASON2} ),\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                              \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^^^^^^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mmutable reference to mutable static\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: use `&raw mut` instead to create a raw pointer\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m22\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0m        IRQueue::new(unsafe {&\\u001b[0m\\u001b[0m\\u001b[38;5;10mraw \\u001b[0m\\u001b[0mmut IPI_REASON2} ),\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                               \\u001b[0m\\u001b[0m\\u001b[38;5;10m+++\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"creating a mutable reference to mutable static\",\"code\":{\"code\":\"static_mut_refs\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"src/common/ipi.rs\",\"byte_start\":998,\"byte_end\":1014,\"line_start\":23,\"line_end\":23,\"column_start\":30,\"column_end\":46,\"is_primary\":true,\"text\":[{\"text\":\"        IRQueue::new(unsafe {&mut IPI_REASON3} ),\",\"highlight_start\":30,\"highlight_end\":46}],\"label\":\"mutable reference to mutable static\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"use `&raw mut` instead to create a raw pointer\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"src/common/ipi.rs\",\"byte_start\":998,\"byte_end\":1003,\"line_start\":23,\"line_end\":23,\"column_start\":30,\"column_end\":35,\"is_primary\":true,\"text\":[{\"text\":\"        IRQueue::new(unsafe {&mut IPI_REASON3} ),\",\"highlight_start\":30,\"highlight_end\":35}],\"label\":null,\"suggested_replacement\":\"&raw mut \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: creating a mutable reference to mutable static\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/common/ipi.rs:23:30\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m23\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m        IRQueue::new(unsafe {&mut IPI_REASON3} ),\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                              \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^^^^^^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mmutable reference to mutable static\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: use `&raw mut` instead to create a raw pointer\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m23\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0m        IRQueue::new(unsafe {&\\u001b[0m\\u001b[0m\\u001b[38;5;10mraw \\u001b[0m\\u001b[0mmut IPI_REASON3} ),\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                               \\u001b[0m\\u001b[0m\\u001b[38;5;10m+++\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"creating a mutable reference to mutable static\",\"code\":{\"code\":\"static_mut_refs\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"src/common/ipi.rs\",\"byte_start\":1048,\"byte_end\":1064,\"line_start\":24,\"line_end\":24,\"column_start\":30,\"column_end\":46,\"is_primary\":true,\"text\":[{\"text\":\"        IRQueue::new(unsafe {&mut IPI_REASON4} ),\",\"highlight_start\":30,\"highlight_end\":46}],\"label\":\"mutable reference to mutable static\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"use `&raw mut` instead to create a raw pointer\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"src/common/ipi.rs\",\"byte_start\":1048,\"byte_end\":1053,\"line_start\":24,\"line_end\":24,\"column_start\":30,\"column_end\":35,\"is_primary\":true,\"text\":[{\"text\":\"        IRQueue::new(unsafe {&mut IPI_REASON4} ),\",\"highlight_start\":30,\"highlight_end\":35}],\"label\":null,\"suggested_replacement\":\"&raw mut \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: creating a mutable reference to mutable static\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/common/ipi.rs:24:30\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m24\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m        IRQueue::new(unsafe {&mut IPI_REASON4} ),\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                              \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^^^^^^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mmutable reference to mutable static\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: use `&raw mut` instead to create a raw pointer\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m24\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0m        IRQueue::new(unsafe {&\\u001b[0m\\u001b[0m\\u001b[38;5;10mraw \\u001b[0m\\u001b[0mmut IPI_REASON4} ),\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                               \\u001b[0m\\u001b[0m\\u001b[38;5;10m+++\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"creating a mutable reference to mutable static\",\"code\":{\"code\":\"static_mut_refs\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"src/common/ipi.rs\",\"byte_start\":1098,\"byte_end\":1114,\"line_start\":25,\"line_end\":25,\"column_start\":30,\"column_end\":46,\"is_primary\":true,\"text\":[{\"text\":\"        IRQueue::new(unsafe {&mut IPI_REASON5} ),\",\"highlight_start\":30,\"highlight_end\":46}],\"label\":\"mutable reference to mutable static\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"use `&raw mut` instead to create a raw pointer\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"src/common/ipi.rs\",\"byte_start\":1098,\"byte_end\":1103,\"line_start\":25,\"line_end\":25,\"column_start\":30,\"column_end\":35,\"is_primary\":true,\"text\":[{\"text\":\"        IRQueue::new(unsafe {&mut IPI_REASON5} ),\",\"highlight_start\":30,\"highlight_end\":35}],\"label\":null,\"suggested_replacement\":\"&raw mut \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: creating a mutable reference to mutable static\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/common/ipi.rs:25:30\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m25\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m        IRQueue::new(unsafe {&mut IPI_REASON5} ),\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                              \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^^^^^^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mmutable reference to mutable static\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: use `&raw mut` instead to create a raw pointer\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m25\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0m        IRQueue::new(unsafe {&\\u001b[0m\\u001b[0m\\u001b[38;5;10mraw \\u001b[0m\\u001b[0mmut IPI_REASON5} ),\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                               \\u001b[0m\\u001b[0m\\u001b[38;5;10m+++\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"creating a mutable reference to mutable static\",\"code\":{\"code\":\"static_mut_refs\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"src/common/ipi.rs\",\"byte_start\":1148,\"byte_end\":1164,\"line_start\":26,\"line_end\":26,\"column_start\":30,\"column_end\":46,\"is_primary\":true,\"text\":[{\"text\":\"        IRQueue::new(unsafe {&mut IPI_REASON6} ),\",\"highlight_start\":30,\"highlight_end\":46}],\"label\":\"mutable reference to mutable static\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"use `&raw mut` instead to create a raw pointer\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"src/common/ipi.rs\",\"byte_start\":1148,\"byte_end\":1153,\"line_start\":26,\"line_end\":26,\"column_start\":30,\"column_end\":35,\"is_primary\":true,\"text\":[{\"text\":\"        IRQueue::new(unsafe {&mut IPI_REASON6} ),\",\"highlight_start\":30,\"highlight_end\":35}],\"label\":null,\"suggested_replacement\":\"&raw mut \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: creating a mutable reference to mutable static\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/common/ipi.rs:26:30\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m26\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m        IRQueue::new(unsafe {&mut IPI_REASON6} ),\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                              \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^^^^^^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mmutable reference to mutable static\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: use `&raw mut` instead to create a raw pointer\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m26\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0m        IRQueue::new(unsafe {&\\u001b[0m\\u001b[0m\\u001b[38;5;10mraw \\u001b[0m\\u001b[0mmut IPI_REASON6} ),\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                               \\u001b[0m\\u001b[0m\\u001b[38;5;10m+++\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"creating a mutable reference to mutable static\",\"code\":{\"code\":\"static_mut_refs\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"src/common/ipi.rs\",\"byte_start\":1198,\"byte_end\":1214,\"line_start\":27,\"line_end\":27,\"column_start\":30,\"column_end\":46,\"is_primary\":true,\"text\":[{\"text\":\"        IRQueue::new(unsafe {&mut IPI_REASON7} ),\",\"highlight_start\":30,\"highlight_end\":46}],\"label\":\"mutable reference to mutable static\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"use `&raw mut` instead to create a raw pointer\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"src/common/ipi.rs\",\"byte_start\":1198,\"byte_end\":1203,\"line_start\":27,\"line_end\":27,\"column_start\":30,\"column_end\":35,\"is_primary\":true,\"text\":[{\"text\":\"        IRQueue::new(unsafe {&mut IPI_REASON7} ),\",\"highlight_start\":30,\"highlight_end\":35}],\"label\":null,\"suggested_replacement\":\"&raw mut \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: creating a mutable reference to mutable static\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/common/ipi.rs:27:30\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m27\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m        IRQueue::new(unsafe {&mut IPI_REASON7} ),\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                              \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^^^^^^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mmutable reference to mutable static\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: use `&raw mut` instead to create a raw pointer\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m27\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0m        IRQueue::new(unsafe {&\\u001b[0m\\u001b[0m\\u001b[38;5;10mraw \\u001b[0m\\u001b[0mmut IPI_REASON7} ),\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                               \\u001b[0m\\u001b[0m\\u001b[38;5;10m+++\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"aborting due to 9 previous errors\",\"code\":null,\"level\":\"error\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: aborting due to 9 previous errors\\u001b[0m\\n\\n\"}\nerror: could not compile `kernel-hal` (lib)\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-2025-06-26-x86_64-unknown-linux-gnu/bin/rustc --crate-name kernel_hal --edition=2018 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 --cfg 'feature=\"async-std\"' --cfg 'feature=\"bitmap-allocator\"' --cfg 'feature=\"default\"' --cfg 'feature=\"libos\"' --cfg 'feature=\"nix\"' --cfg 'feature=\"tempfile\"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values(\"allwinner-drivers\", \"async-std\", \"bitmap-allocator\", \"board-c910light\", \"board-qemu\", \"default\", \"fu740-drivers\", \"graphic\", \"libos\", \"link-user-img\", \"loopback\", \"nix\", \"no-pci\", \"tempfile\", \"thead-maee\"))' -C metadata=41700b7f2d88d47f -C extra-filename=-396b71e821e05c47 --out-dir /home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps -L dependency=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps --extern async_std=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libasync_std-7496cd64bb993c1d.rmeta --extern bitflags=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libbitflags-e452f082b53802d5.rmeta --extern bitmap_allocator=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libbitmap_allocator-e016312ba735ccde.rmeta --extern cfg_if=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libcfg_if-375191e112da1984.rmeta --extern git_version=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libgit_version-c474b31650d8d193.rmeta --extern lazy_static=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/liblazy_static-6c651f00f6b970b5.rmeta --extern lock=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/liblock-e055fd3f01a4ad80.rmeta --extern log=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/liblog-7232d1f7d43b2502.rmeta --extern nix=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libnix-aef7f39275d65d9e.rmeta --extern numeric_enum_macro=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libnumeric_enum_macro-796a58d6f2689351.rmeta --extern smoltcp=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libsmoltcp-f71a59a660dc342b.rmeta --extern spin=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libspin-611747a21ad09090.rmeta --extern tempfile=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libtempfile-0f71bd77669489dc.rmeta --extern trapframe=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libtrapframe-9e62aee90a9f950d.rmeta --extern x86=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libx86-f8fbabdc509c4922.rmeta --extern x86_64=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libx86_64-7f481fac0d09e666.rmeta --extern zcore_drivers=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal/target/debug/deps/libzcore_drivers-6d8fbcde667392e2.rmeta` (exit status: 1)\nerror: Cargo(\"1 job failed\")\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kernel-hal, checker=Lockbud\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-06-28 11:35:44.91857829 +08:00:00\n   Compiling crossbeam-utils v0.8.21\n   Compiling pin-project-lite v0.2.16\n   Compiling autocfg v1.5.0\n   Compiling bitflags v1.3.2\n   Compiling parking v2.2.1\n   Compiling bitflags v2.9.1\n   Compiling value-bag v1.11.1\n   Compiling bit_field v0.10.2\n   Compiling cfg-if v1.0.1\n   Compiling log v0.4.27\n   Compiling fastrand v2.3.0\n   Compiling futures-core v0.3.31\n[2025-06-28T03:35:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T03:35:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling lock_api v0.4.13\n   Compiling concurrent-queue v2.5.0\n   Compiling rustix v1.0.7\n   Compiling futures-io v0.3.31\n   Compiling event-listener v5.4.0\n   Compiling libc v0.2.174\n   Compiling rustversion v1.0.21\n   Compiling scopeguard v1.2.0\n   Compiling event-listener-strategy v0.5.4\n   Compiling linux-raw-sys v0.9.4\n   Compiling futures-lite v2.6.0\n   Compiling proc-macro2 v1.0.95\n   Compiling tracing-core v0.1.34\n   Compiling version-compare v0.0.10\n   Compiling cfg-if v0.1.10\n   Compiling tracing v0.1.41\n   Compiling sdl2-sys v0.34.5\n   Compiling spin v0.9.8\n   Compiling raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.18\n   Compiling slab v0.4.10\n   Compiling async-task v4.7.1\n   Compiling volatile v0.4.6\n   Compiling atomic-waker v1.1.2\n   Compiling x86_64 v0.14.13\n   Compiling piper v0.2.4\n   Compiling async-channel v2.3.1\n   Compiling async-lock v3.4.0\n   Compiling once_cell v1.21.3\n[2025-06-28T03:35:49Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-06-28T03:35:49Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling paste v1.0.15\n   Compiling blocking v1.6.1\n   Compiling quote v1.0.40\n[2025-06-28T03:35:49Z WARN  lockbud::callbacks] [\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:265:21: 265:25 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:559:17: 559:71 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:152:18: 152:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:264:18: 264:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:559:17: 559:71 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:152:18: 152:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:264:54: 264:59 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:559:17: 559:71 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:152:18: 152:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:240:13: 240:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:559:17: 559:71 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:152:18: 152:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:254:25: 254:51 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:559:17: 559:71 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:152:18: 152:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:559:17: 559:71 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:152:18: 152:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:240:13: 240:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:559:17: 559:71 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:152:18: 152:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:264:54: 264:59 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:559:17: 559:71 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:152:18: 152:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"CondvarDeadlock\": {\n          \"bug_kind\": \"Deadlock before Condvar::wait and notify\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"condvar_wait_type\": \"std::sync::Condvar::wait\",\n            \"condvar_wait_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:264:31: 264:69 (#0)\",\n            \"condvar_notify_type\": \"std::sync::Condvar::notify\",\n            \"condvar_notify_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:288:9: 288:31 (#0)\",\n            \"deadlocks\": [\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:284:13: 284:22 (#0)\"\n              },\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:284:13: 284:22 (#0)\"\n              }\n            ]\n          },\n          \"explanation\": \"The same lock before Condvar::wait and notify\"\n        }\n      },\n      {\n        \"CondvarDeadlock\": {\n          \"bug_kind\": \"Deadlock before Condvar::wait and notify\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"condvar_wait_type\": \"std::sync::Condvar::wait\",\n            \"condvar_wait_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:264:31: 264:69 (#0)\",\n            \"condvar_notify_type\": \"std::sync::Condvar::notify\",\n            \"condvar_notify_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:319:13: 319:35 (#0)\",\n            \"deadlocks\": [\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\"\n              },\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\"\n              }\n            ]\n          },\n          \"explanation\": \"The same lock before Condvar::wait and notify\"\n        }\n      }\n    ]\n[2025-06-28T03:35:49Z WARN  lockbud::callbacks] crate blocking contains bugs: { probably: 4, possibly: 4 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 2 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling async-executor v1.13.2\n   Compiling memoffset v0.6.5\n   Compiling getrandom v0.3.3\n[2025-06-28T03:35:50Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T03:35:50Z WARN  lockbud::callbacks] crate async_executor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling sdl2 v0.34.5\n   Compiling volatile v0.3.0\n   Compiling event-listener v2.5.3\n   Compiling syn v2.0.104\n   Compiling async-channel v1.9.0\n   Compiling lazy_static v1.5.0\n   Compiling kv-log-macro v1.0.7\n   Compiling rsdp v2.0.1\n   Compiling trapframe v0.9.0\n   Compiling byteorder v1.5.0\n[2025-06-28T03:35:51Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustix-1.0.7/src/backend/linux_raw/param/auxv.rs:330:42: 330:52 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustix-1.0.7/src/backend/linux_raw/param/auxv.rs:355:1: 355:2 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-06-28T03:35:51Z WARN  lockbud::callbacks] crate rustix contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }\n   Compiling pin-utils v0.1.0\n   Compiling x86 v0.46.0\n   Compiling managed v0.8.0\n   Compiling bit v0.1.1\n   Compiling memchr v2.7.5\n   Compiling polling v3.8.0\n   Compiling async-io v2.4.1\n   Compiling smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n[2025-06-28T03:35:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T03:35:52Z WARN  lockbud::callbacks] crate async_io contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling async-global-executor v2.4.1\n   Compiling x2apic v0.4.3\n[2025-06-28T03:35:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T03:35:53Z WARN  lockbud::callbacks] crate async_global_executor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 3 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling async-std v1.13.1\n[2025-06-28T03:35:54Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/joystick.rs:432:39: 432:61 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/joystick.rs:438:5: 438:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/controller.rs:210:39: 210:51 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/controller.rs:214:13: 214:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/controller.rs:285:41: 285:55 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/controller.rs:289:13: 289:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/keyboard/keycode.rs:520:37: 520:52 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/keyboard/keycode.rs:527:17: 527:18 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/hint.rs:93:27: 93:41 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/hint.rs:111:1: 111:2 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/video.rs:858:6: 858:6 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/video.rs:854:13: 854:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/video.rs:850:58: 850:67 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/video.rs:854:13: 854:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-06-28T03:35:54Z WARN  lockbud::callbacks] crate sdl2 contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 7 }\n   Compiling acpi v4.1.1\n   Compiling virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n[2025-06-28T03:35:55Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"backends::use_file::open_or_wait\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs:84:15: 84:41 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs:106:5: 106:37 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T03:35:56Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n   Compiling lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n   Compiling pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n   Compiling numeric-enum-macro v0.2.0\n   Compiling device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n   Compiling tempfile v3.20.0\n   Compiling nix v0.23.2\n   Compiling git-version-macro v0.3.9\n[2025-06-28T03:35:57Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"file::imp::platform::persist\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tempfile-3.20.0/src/file/imp/unix.rs:131:17: 131:36 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tempfile-3.20.0/src/file/imp/unix.rs:134:42: 134:68 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T03:35:57Z WARN  lockbud::callbacks] crate tempfile contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n   Compiling git-version v0.3.9\n[2025-06-28T03:35:59Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/sys/termios.rs:865:50: 865:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/sys/termios.rs:868:9: 868:10 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/sys/termios.rs:874:50: 874:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/sys/termios.rs:877:9: 877:10 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2706:25: 2706:29 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2719:9: 2752:10 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2724:21: 2724:24 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2725:23: 2725:28 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2719:9: 2752:10 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2706:25: 2706:29 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-06-28T03:35:59Z WARN  lockbud::callbacks] crate nix contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 8 }\n   Compiling kernel-hal v0.1.0 (/home/runner/check/batch_5/kern-crates/zcore-kernel-hal)\nerror: private item shadows public glob re-export\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\n   |\nnote: the name `config` in the type namespace is supposed to be publicly re-exported here\n  --> src/lib.rs:49:5\n   |\n49 |     *,\n   |     ^\nnote: but the private item here shadows it\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\nnote: the lint level is defined here\n  --> src/lib.rs:9:9\n   |\n9  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(hidden_glob_reexports)]` implied by `#[deny(warnings)]`\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:20:30\n   |\n20 |         IRQueue::new(unsafe {&mut IPI_REASON0} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n20 |         IRQueue::new(unsafe {&raw mut IPI_REASON0} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:21:30\n   |\n21 |         IRQueue::new(unsafe {&mut IPI_REASON1} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n21 |         IRQueue::new(unsafe {&raw mut IPI_REASON1} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:22:30\n   |\n22 |         IRQueue::new(unsafe {&mut IPI_REASON2} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n22 |         IRQueue::new(unsafe {&raw mut IPI_REASON2} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:23:30\n   |\n23 |         IRQueue::new(unsafe {&mut IPI_REASON3} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n23 |         IRQueue::new(unsafe {&raw mut IPI_REASON3} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:24:30\n   |\n24 |         IRQueue::new(unsafe {&mut IPI_REASON4} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n24 |         IRQueue::new(unsafe {&raw mut IPI_REASON4} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:25:30\n   |\n25 |         IRQueue::new(unsafe {&mut IPI_REASON5} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n25 |         IRQueue::new(unsafe {&raw mut IPI_REASON5} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:26:30\n   |\n26 |         IRQueue::new(unsafe {&mut IPI_REASON6} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n26 |         IRQueue::new(unsafe {&raw mut IPI_REASON6} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:27:30\n   |\n27 |         IRQueue::new(unsafe {&mut IPI_REASON7} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n27 |         IRQueue::new(unsafe {&raw mut IPI_REASON7} ),\n   |                              ~~~~~~~~\n\nerror: could not compile `kernel-hal` (lib) due to 9 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kernel-hal, checker=Mirai\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-06-28 11:35:34.757974756 +08:00:00\n   Compiling crossbeam-utils v0.8.21\n    Checking pin-project-lite v0.2.16\n   Compiling autocfg v1.5.0\n    Checking bitflags v1.3.2\n    Checking bitflags v2.9.1\n    Checking parking v2.2.1\n    Checking value-bag v1.11.1\n    Checking cfg-if v1.0.1\n    Checking futures-core v0.3.31\n    Checking fastrand v2.3.0\n    Checking log v0.4.27\n    Checking bit_field v0.10.2\n   Compiling libc v0.2.174\n    Checking futures-io v0.3.31\n   Compiling lock_api v0.4.13\n   Compiling rustix v1.0.7\n    Checking concurrent-queue v2.5.0\n    Checking scopeguard v1.2.0\n   Compiling rustversion v1.0.21\n    Checking event-listener v5.4.0\n    Checking linux-raw-sys v0.9.4\n    Checking event-listener-strategy v0.5.4\n    Checking futures-lite v2.6.0\n   Compiling proc-macro2 v1.0.95\n   Compiling version-compare v0.0.10\n    Checking tracing-core v0.1.34\n   Compiling cfg-if v0.1.10\n   Compiling sdl2-sys v0.34.5\n    Checking tracing v0.1.41\n    Checking spin v0.9.8\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.18\n    Checking async-task v4.7.1\n    Checking atomic-waker v1.1.2\n    Checking volatile v0.4.6\n    Checking slab v0.4.10\n    Checking x86_64 v0.14.13\n    Checking piper v0.2.4\n    Checking async-channel v2.3.1\n    Checking async-lock v3.4.0\n   Compiling paste v1.0.15\n    Checking once_cell v1.21.3\n   Compiling quote v1.0.40\n    Checking blocking v1.6.1\n    Checking async-executor v1.13.2\n   Compiling memoffset v0.6.5\n    Checking volatile v0.3.0\n   Compiling sdl2 v0.34.5\n    Checking event-listener v2.5.3\n   Compiling getrandom v0.3.3\n    Checking async-channel v1.9.0\n   Compiling syn v2.0.104\n    Checking lazy_static v1.5.0\n    Checking kv-log-macro v1.0.7\n    Checking rsdp v2.0.1\n   Compiling x86 v0.46.0\n    Checking managed v0.8.0\n    Checking pin-utils v0.1.0\n    Checking byteorder v1.5.0\n   Compiling trapframe v0.9.0\n    Checking memchr v2.7.5\n    Checking bit v0.1.1\n    Checking x2apic v0.4.3\n    Checking polling v3.8.0\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking async-io v2.4.1\n    Checking async-global-executor v2.4.1\n    Checking async-std v1.13.1\n    Checking acpi v4.1.1\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking numeric-enum-macro v0.2.0\n    Checking nix v0.23.2\n    Checking tempfile v3.20.0\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n   Compiling git-version-macro v0.3.9\n    Checking git-version v0.3.9\n    Checking kernel-hal v0.1.0 (/home/runner/check/batch_5/kern-crates/zcore-kernel-hal)\nerror: could not compile `kernel-hal` (lib) due to 9 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kernel-hal, checker=Rapx\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-06-28 11:36:00.316324568 +08:00:00\n    Updating crates.io index\n Downloading crates ...\n  Downloaded async-channel v2.3.1\n  Downloaded crossbeam-utils v0.8.21\n  Downloaded event-listener v5.4.0\n  Downloaded blocking v1.6.1\n  Downloaded fastrand v2.3.0\n  Downloaded futures-core v0.3.31\n  Downloaded async-executor v1.13.2\n  Downloaded async-task v4.7.1\n  Downloaded version-compare v0.0.10\n  Downloaded parking v2.2.1\n  Downloaded sdl2 v0.34.5\n  Downloaded tracing v0.1.41\n  Downloaded errno v0.3.13\n  Downloaded slab v0.4.10\n  Downloaded value-bag v1.11.1\n  Downloaded event-listener v2.5.3\n  Downloaded tracing-core v0.1.34\n  Downloaded pin-project-lite v0.2.16\n  Downloaded polling v3.8.0\n  Downloaded once_cell v1.21.3\n  Downloaded memoffset v0.6.5\n  Downloaded kv-log-macro v1.0.7\n  Downloaded getrandom v0.3.3\n  Downloaded sdl2-sys v0.34.5\n  Downloaded async-std v1.13.1\n  Downloaded piper v0.2.4\n  Downloaded futures-io v0.3.31\n  Downloaded cfg-if v0.1.10\n  Downloaded async-lock v3.4.0\n  Downloaded async-io v2.4.1\n  Downloaded futures-lite v2.6.0\n  Downloaded concurrent-queue v2.5.0\n  Downloaded tempfile v3.20.0\n  Downloaded nix v0.23.2\n  Downloaded rustix v1.0.7\n  Downloaded event-listener-strategy v0.5.4\n  Downloaded atomic-waker v1.1.2\n  Downloaded async-global-executor v2.4.1\n  Downloaded async-channel v1.9.0\n  Downloaded linux-raw-sys v0.9.4\n   Compiling crossbeam-utils v0.8.21\n    Checking pin-project-lite v0.2.16\n   Compiling autocfg v1.5.0\n    Checking bitflags v1.3.2\n    Checking bitflags v2.9.1\n    Checking parking v2.2.1\n    Checking value-bag v1.11.1\n    Checking bit_field v0.10.2\n    Checking fastrand v2.3.0\n    Checking log v0.4.27\n    Checking cfg-if v1.0.1\n    Checking futures-core v0.3.31\n    Checking concurrent-queue v2.5.0\n   Compiling lock_api v0.4.13\n    Checking futures-io v0.3.31\n   Compiling libc v0.2.174\n   Compiling rustix v1.0.7\n    Checking event-listener v5.4.0\n    Checking scopeguard v1.2.0\n    Checking event-listener-strategy v0.5.4\n    Checking linux-raw-sys v0.9.4\n   Compiling rustversion v1.0.21\n    Checking futures-lite v2.6.0\n   Compiling proc-macro2 v1.0.95\n   Compiling cfg-if v0.1.10\n   Compiling version-compare v0.0.10\n    Checking tracing-core v0.1.34\n   Compiling sdl2-sys v0.34.5\n    Checking tracing v0.1.41\n    Checking spin v0.9.8\n    Checking raw-cpuid v10.7.0\n    Checking atomic-waker v1.1.2\n    Checking slab v0.4.10\n    Checking volatile v0.4.6\n    Checking async-task v4.7.1\n   Compiling unicode-ident v1.0.18\n    Checking x86_64 v0.14.13\n    Checking piper v0.2.4\n    Checking async-channel v2.3.1\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n    Checking async-lock v3.4.0\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n   Compiling paste v1.0.15\n    Checking once_cell v1.21.3\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n03:36:06|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kernel-hal, checker=SemverChecks\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-06-28 11:35:16.3027249 +08:00:00\n    Building kernel-hal v0.1.0 (current)\n       Built [  16.424s] (current)\n     Parsing kernel-hal v0.1.0 (current)\n      Parsed [   0.018s] (current)\nerror: kernel-hal not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kernel-hal, checker=Udeps\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-linux-gnu \n// timestamp=2025-06-28 11:36:17.96010064 +08:00:00\n   Compiling crossbeam-utils v0.8.21\n   Compiling autocfg v1.5.0\n    Checking pin-project-lite v0.2.16\n    Checking bitflags v1.3.2\n    Checking parking v2.2.1\n    Checking bitflags v2.9.1\n    Checking value-bag v1.11.1\n    Checking futures-core v0.3.31\n    Checking cfg-if v1.0.1\n    Checking bit_field v0.10.2\n    Checking log v0.4.27\n    Checking fastrand v2.3.0\n   Compiling rustix v1.0.7\n    Checking futures-io v0.3.31\n   Compiling lock_api v0.4.13\n   Compiling libc v0.2.174\n    Checking concurrent-queue v2.5.0\n   Compiling rustversion v1.0.21\n    Checking event-listener v5.4.0\n    Checking scopeguard v1.2.0\n    Checking linux-raw-sys v0.9.4\n    Checking event-listener-strategy v0.5.4\n    Checking futures-lite v2.6.0\n   Compiling cfg-if v0.1.10\n   Compiling proc-macro2 v1.0.95\n   Compiling version-compare v0.0.10\n    Checking tracing-core v0.1.34\n   Compiling sdl2-sys v0.34.5\n    Checking tracing v0.1.41\n    Checking spin v0.9.8\n    Checking raw-cpuid v10.7.0\n    Checking atomic-waker v1.1.2\n   Compiling unicode-ident v1.0.18\n    Checking slab v0.4.10\n    Checking async-task v4.7.1\n    Checking volatile v0.4.6\n    Checking x86_64 v0.14.13\n    Checking piper v0.2.4\n    Checking async-channel v2.3.1\n    Checking async-lock v3.4.0\n   Compiling paste v1.0.15\n    Checking once_cell v1.21.3\n    Checking blocking v1.6.1\n   Compiling quote v1.0.40\n    Checking async-executor v1.13.2\n   Compiling memoffset v0.6.5\n    Checking volatile v0.3.0\n   Compiling sdl2 v0.34.5\n   Compiling getrandom v0.3.3\n    Checking event-listener v2.5.3\n   Compiling syn v2.0.104\n    Checking async-channel v1.9.0\n    Checking lazy_static v1.5.0\n    Checking kv-log-macro v1.0.7\n    Checking rsdp v2.0.1\n   Compiling trapframe v0.9.0\n   Compiling x86 v0.46.0\n    Checking byteorder v1.5.0\n    Checking pin-utils v0.1.0\n    Checking bit v0.1.1\n    Checking memchr v2.7.5\n    Checking managed v0.8.0\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking polling v3.8.0\n    Checking x2apic v0.4.3\n    Checking async-io v2.4.1\n    Checking acpi v4.1.1\n    Checking async-global-executor v2.4.1\n    Checking async-std v1.13.1\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking numeric-enum-macro v0.2.0\n    Checking tempfile v3.20.0\n    Checking nix v0.23.2\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n   Compiling git-version-macro v0.3.9\n    Checking git-version v0.3.9\n    Checking kernel-hal v0.1.0 (/home/runner/check/batch_5/kern-crates/zcore-kernel-hal)\nerror: private item shadows public glob re-export\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\n   |\nnote: the name `config` in the type namespace is supposed to be publicly re-exported here\n  --> src/lib.rs:49:5\n   |\n49 |     *,\n   |     ^\nnote: but the private item here shadows it\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\nnote: the lint level is defined here\n  --> src/lib.rs:9:9\n   |\n9  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(hidden_glob_reexports)]` implied by `#[deny(warnings)]`\n\nerror: creating a mutable reference to mutable static\n  --> src/common/ipi.rs:20:30\n   |\n20 |         IRQueue::new(unsafe {&mut IPI_REASON0} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n20 |         IRQueue::new(unsafe {&raw mut IPI_REASON0} ),\n   |                               +++\n\nerror: creating a mutable reference to mutable static\n  --> src/common/ipi.rs:21:30\n   |\n21 |         IRQueue::new(unsafe {&mut IPI_REASON1} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n21 |         IRQueue::new(unsafe {&raw mut IPI_REASON1} ),\n   |                               +++\n\nerror: creating a mutable reference to mutable static\n  --> src/common/ipi.rs:22:30\n   |\n22 |         IRQueue::new(unsafe {&mut IPI_REASON2} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n22 |         IRQueue::new(unsafe {&raw mut IPI_REASON2} ),\n   |                               +++\n\nerror: creating a mutable reference to mutable static\n  --> src/common/ipi.rs:23:30\n   |\n23 |         IRQueue::new(unsafe {&mut IPI_REASON3} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n23 |         IRQueue::new(unsafe {&raw mut IPI_REASON3} ),\n   |                               +++\n\nerror: creating a mutable reference to mutable static\n  --> src/common/ipi.rs:24:30\n   |\n24 |         IRQueue::new(unsafe {&mut IPI_REASON4} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n24 |         IRQueue::new(unsafe {&raw mut IPI_REASON4} ),\n   |                               +++\n\nerror: creating a mutable reference to mutable static\n  --> src/common/ipi.rs:25:30\n   |\n25 |         IRQueue::new(unsafe {&mut IPI_REASON5} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n25 |         IRQueue::new(unsafe {&raw mut IPI_REASON5} ),\n   |                               +++\n\nerror: creating a mutable reference to mutable static\n  --> src/common/ipi.rs:26:30\n   |\n26 |         IRQueue::new(unsafe {&mut IPI_REASON6} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n26 |         IRQueue::new(unsafe {&raw mut IPI_REASON6} ),\n   |                               +++\n\nerror: creating a mutable reference to mutable static\n  --> src/common/ipi.rs:27:30\n   |\n27 |         IRQueue::new(unsafe {&mut IPI_REASON7} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n27 |         IRQueue::new(unsafe {&raw mut IPI_REASON7} ),\n   |                               +++\n\nerror: could not compile `kernel-hal` (lib) due to 9 previous errors\n"
            ]
          }
        },
        {
          "file": "Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    ├── zcore-drivers 0.1.0\n    │   └── kernel-hal 0.1.0\n    └── kernel-hal 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 164\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T03:35:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T03:35:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-06-28T03:35:49Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-06-28T03:35:49Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2025-06-28T03:35:49Z WARN  lockbud::callbacks] [\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:265:21: 265:25 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:559:17: 559:71 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:152:18: 152:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:264:18: 264:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:559:17: 559:71 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:152:18: 152:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:264:54: 264:59 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:559:17: 559:71 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:152:18: 152:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:240:13: 240:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:559:17: 559:71 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:152:18: 152:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:254:25: 254:51 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:559:17: 559:71 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:152:18: 152:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:559:17: 559:71 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:152:18: 152:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:240:13: 240:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:559:17: 559:71 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:152:18: 152:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:264:54: 264:59 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:559:17: 559:71 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:152:18: 152:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:399:18: 399:41 (#0)\"\n                ],\n                [\n                  \"/rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"CondvarDeadlock\": {\n          \"bug_kind\": \"Deadlock before Condvar::wait and notify\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"condvar_wait_type\": \"std::sync::Condvar::wait\",\n            \"condvar_wait_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:264:31: 264:69 (#0)\",\n            \"condvar_notify_type\": \"std::sync::Condvar::notify\",\n            \"condvar_notify_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:288:9: 288:31 (#0)\",\n            \"deadlocks\": [\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:284:13: 284:22 (#0)\"\n              },\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:284:13: 284:22 (#0)\"\n              }\n            ]\n          },\n          \"explanation\": \"The same lock before Condvar::wait and notify\"\n        }\n      },\n      {\n        \"CondvarDeadlock\": {\n          \"bug_kind\": \"Deadlock before Condvar::wait and notify\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"condvar_wait_type\": \"std::sync::Condvar::wait\",\n            \"condvar_wait_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:264:31: 264:69 (#0)\",\n            \"condvar_notify_type\": \"std::sync::Condvar::notify\",\n            \"condvar_notify_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:319:13: 319:35 (#0)\",\n            \"deadlocks\": [\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\"\n              },\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\"\n              }\n            ]\n          },\n          \"explanation\": \"The same lock before Condvar::wait and notify\"\n        }\n      }\n    ]\n[2025-06-28T03:35:49Z WARN  lockbud::callbacks] crate blocking contains bugs: { probably: 4, possibly: 4 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 2 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-06-28T03:35:50Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T03:35:50Z WARN  lockbud::callbacks] crate async_executor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-06-28T03:35:51Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustix-1.0.7/src/backend/linux_raw/param/auxv.rs:330:42: 330:52 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustix-1.0.7/src/backend/linux_raw/param/auxv.rs:355:1: 355:2 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-06-28T03:35:51Z WARN  lockbud::callbacks] crate rustix contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }\n[2025-06-28T03:35:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T03:35:52Z WARN  lockbud::callbacks] crate async_io contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-06-28T03:35:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T03:35:53Z WARN  lockbud::callbacks] crate async_global_executor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 3 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-06-28T03:35:54Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/joystick.rs:432:39: 432:61 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/joystick.rs:438:5: 438:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/controller.rs:210:39: 210:51 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/controller.rs:214:13: 214:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/controller.rs:285:41: 285:55 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/controller.rs:289:13: 289:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/keyboard/keycode.rs:520:37: 520:52 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/keyboard/keycode.rs:527:17: 527:18 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/hint.rs:93:27: 93:41 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/hint.rs:111:1: 111:2 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/video.rs:858:6: 858:6 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/video.rs:854:13: 854:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/video.rs:850:58: 850:67 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdl2-0.34.5/src/sdl2/video.rs:854:13: 854:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-06-28T03:35:54Z WARN  lockbud::callbacks] crate sdl2 contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 7 }\n[2025-06-28T03:35:55Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"backends::use_file::open_or_wait\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs:84:15: 84:41 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs:106:5: 106:37 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T03:35:56Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-06-28T03:35:57Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"file::imp::platform::persist\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tempfile-3.20.0/src/file/imp/unix.rs:131:17: 131:36 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tempfile-3.20.0/src/file/imp/unix.rs:134:42: 134:68 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T03:35:57Z WARN  lockbud::callbacks] crate tempfile contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-06-28T03:35:59Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/sys/termios.rs:865:50: 865:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/sys/termios.rs:868:9: 868:10 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/sys/termios.rs:874:50: 874:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/sys/termios.rs:877:9: 877:10 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2706:25: 2706:29 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2719:9: 2752:10 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2724:21: 2724:24 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2725:23: 2725:28 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2719:9: 2752:10 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2706:25: 2706:29 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-06-28T03:35:59Z WARN  lockbud::callbacks] crate nix contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 8 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=kernel-hal, checker=Udeps\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-28 11:36:27.244030368 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling crossbeam-utils v0.8.21\n   Compiling autocfg v1.5.0\n    Checking pin-project-lite v0.2.16\n    Checking bitflags v1.3.2\n    Checking parking v2.2.1\n    Checking bitflags v2.9.1\n    Checking value-bag v1.11.1\n    Checking futures-core v0.3.31\n    Checking cfg-if v1.0.1\n    Checking bit_field v0.10.2\n    Checking log v0.4.27\n    Checking fastrand v2.3.0\n   Compiling rustix v1.0.7\n    Checking futures-io v0.3.31\n   Compiling lock_api v0.4.13\n   Compiling libc v0.2.174\n    Checking concurrent-queue v2.5.0\n   Compiling rustversion v1.0.21\n    Checking event-listener v5.4.0\n    Checking scopeguard v1.2.0\n    Checking linux-raw-sys v0.9.4\n    Checking event-listener-strategy v0.5.4\n    Checking futures-lite v2.6.0\n   Compiling cfg-if v0.1.10\n   Compiling proc-macro2 v1.0.95\n   Compiling version-compare v0.0.10\n    Checking tracing-core v0.1.34\n   Compiling sdl2-sys v0.34.5\n    Checking tracing v0.1.41\n    Checking spin v0.9.8\n    Checking raw-cpuid v10.7.0\n    Checking atomic-waker v1.1.2\n   Compiling unicode-ident v1.0.18\n    Checking slab v0.4.10\n    Checking async-task v4.7.1\n    Checking volatile v0.4.6\n    Checking x86_64 v0.14.13\n    Checking piper v0.2.4\n    Checking async-channel v2.3.1\n    Checking async-lock v3.4.0\n   Compiling paste v1.0.15\n    Checking once_cell v1.21.3\n    Checking blocking v1.6.1\n   Compiling quote v1.0.40\n    Checking async-executor v1.13.2\n   Compiling memoffset v0.6.5\n    Checking volatile v0.3.0\n   Compiling sdl2 v0.34.5\n   Compiling getrandom v0.3.3\n    Checking event-listener v2.5.3\n   Compiling syn v2.0.104\n    Checking async-channel v1.9.0\n    Checking lazy_static v1.5.0\n    Checking kv-log-macro v1.0.7\n    Checking rsdp v2.0.1\n   Compiling trapframe v0.9.0\n   Compiling x86 v0.46.0\n    Checking byteorder v1.5.0\n    Checking pin-utils v0.1.0\n    Checking bit v0.1.1\n    Checking memchr v2.7.5\n    Checking managed v0.8.0\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking polling v3.8.0\n    Checking x2apic v0.4.3\n    Checking async-io v2.4.1\n    Checking acpi v4.1.1\n    Checking async-global-executor v2.4.1\n    Checking async-std v1.13.1\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking numeric-enum-macro v0.2.0\n    Checking tempfile v3.20.0\n    Checking nix v0.23.2\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n   Compiling git-version-macro v0.3.9\n    Checking git-version v0.3.9\n    Checking kernel-hal v0.1.0 (/home/runner/check/batch_5/kern-crates/zcore-kernel-hal)\nerror: private item shadows public glob re-export\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\n   |\nnote: the name `config` in the type namespace is supposed to be publicly re-exported here\n  --> src/lib.rs:49:5\n   |\n49 |     *,\n   |     ^\nnote: but the private item here shadows it\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\nnote: the lint level is defined here\n  --> src/lib.rs:9:9\n   |\n9  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(hidden_glob_reexports)]` implied by `#[deny(warnings)]`\n\nerror: creating a mutable reference to mutable static\n  --> src/common/ipi.rs:20:30\n   |\n20 |         IRQueue::new(unsafe {&mut IPI_REASON0} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n20 |         IRQueue::new(unsafe {&raw mut IPI_REASON0} ),\n   |                               +++\n\nerror: creating a mutable reference to mutable static\n  --> src/common/ipi.rs:21:30\n   |\n21 |         IRQueue::new(unsafe {&mut IPI_REASON1} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n21 |         IRQueue::new(unsafe {&raw mut IPI_REASON1} ),\n   |                               +++\n\nerror: creating a mutable reference to mutable static\n  --> src/common/ipi.rs:22:30\n   |\n22 |         IRQueue::new(unsafe {&mut IPI_REASON2} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n22 |         IRQueue::new(unsafe {&raw mut IPI_REASON2} ),\n   |                               +++\n\nerror: creating a mutable reference to mutable static\n  --> src/common/ipi.rs:23:30\n   |\n23 |         IRQueue::new(unsafe {&mut IPI_REASON3} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n23 |         IRQueue::new(unsafe {&raw mut IPI_REASON3} ),\n   |                               +++\n\nerror: creating a mutable reference to mutable static\n  --> src/common/ipi.rs:24:30\n   |\n24 |         IRQueue::new(unsafe {&mut IPI_REASON4} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n24 |         IRQueue::new(unsafe {&raw mut IPI_REASON4} ),\n   |                               +++\n\nerror: creating a mutable reference to mutable static\n  --> src/common/ipi.rs:25:30\n   |\n25 |         IRQueue::new(unsafe {&mut IPI_REASON5} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n25 |         IRQueue::new(unsafe {&raw mut IPI_REASON5} ),\n   |                               +++\n\nerror: creating a mutable reference to mutable static\n  --> src/common/ipi.rs:26:30\n   |\n26 |         IRQueue::new(unsafe {&mut IPI_REASON6} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n26 |         IRQueue::new(unsafe {&raw mut IPI_REASON6} ),\n   |                               +++\n\nerror: creating a mutable reference to mutable static\n  --> src/common/ipi.rs:27:30\n   |\n27 |         IRQueue::new(unsafe {&mut IPI_REASON7} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n27 |         IRQueue::new(unsafe {&raw mut IPI_REASON7} ),\n   |                               +++\n\nerror: could not compile `kernel-hal` (lib) due to 9 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=kernel-hal, checker=Outdated\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 11:36:08.487170822 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\nbitflags        1.3.2    ---     2.9.1   Normal  ---\ncortex-a        7.5.0    ---     8.1.1   Normal  cfg(target_arch = \"aarch64\")\nnix             0.23.2   ---     0.30.1  Normal  ---\nraw-cpuid       9.1.1    ---     11.5.0  Normal  cfg(all(target_os = \"none\", target_arch = \"x86_64\"))\nriscv           0.10.1   ---     0.14.0  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsbi-rt          0.0.2    ---     0.0.3   Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nspin            0.9.8    ---     0.10.0  Normal  ---\ntock-registers  0.7.0    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\ntrapframe       0.9.0    ---     0.10.0  Normal  ---\nuefi            0.16.1   ---     0.35.0  Normal  cfg(all(target_os = \"none\", target_arch = \"x86_64\"))\nx2apic          0.4.3    ---     0.5.0   Normal  cfg(all(target_os = \"none\", target_arch = \"x86_64\"))\nx86             0.46.0   ---     0.52.0  Normal  cfg(target_arch = \"x86_64\")\nx86_64          0.14.13  ---     0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=kernel-hal, checker=SemverChecks\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_5/kern-crates/zcore-kernel-hal\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-28 11:35:33.857239258 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building kernel-hal v0.1.0 (current)\n       Built [  16.424s] (current)\n     Parsing kernel-hal v0.1.0 (current)\n      Parsed [   0.018s] (current)\nerror: kernel-hal not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "src/bare/arch/riscv/trap.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_5/kern-crates/zcore-kernel-hal/src/bare/arch/riscv/trap.rs (original lines from 54 to 54)\n-        other => panic!(\"Undefined trap: {:x?} = {:#x}\\n{:#x?}\", other, scause.bits(), tf),\n+        other => panic!(\n+            \"Undefined trap: {:x?} = {:#x}\\n{:#x?}\",\n+            other,\n+            scause.bits(),\n+            tf\n+        ),\n"
            ]
          }
        },
        {
          "file": "src/common/future.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error: usage of a legacy numeric method\n  --> src/common/future.rs:47:44\n   |\n47 |         if self.deadline.as_nanos() < i64::max_value() as u128 {\n   |                                            ^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: `#[deny(clippy::legacy_numeric_constants)]` implied by `#[deny(warnings)]`\nhelp: use the associated constant instead\n   |\n47 -         if self.deadline.as_nanos() < i64::max_value() as u128 {\n47 +         if self.deadline.as_nanos() < i64::MAX as u128 {\n   |\n\n"
            ]
          }
        },
        {
          "file": "src/common/user.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error: mutable borrow from immutable input(s)\n   --> src/common/user.rs:400:42\n    |\n400 |     pub fn as_mut_slice(&self) -> Result<&mut [u8]> {\n    |                                          ^^^^^^^^^\n    |\nnote: immutable borrow here\n   --> src/common/user.rs:400:25\n    |\n400 |     pub fn as_mut_slice(&self) -> Result<&mut [u8]> {\n    |                         ^^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n    = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "src/drivers.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error: variables can be used directly in the `format!` string\n   --> src/drivers.rs:124:9\n    |\n124 |         warn!(\"{:?}\", err);\n    |         ^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n    = note: `#[deny(clippy::uninlined_format_args)]` implied by `#[deny(warnings)]`\nhelp: change this to\n    |\n124 -         warn!(\"{:?}\", err);\n124 +         warn!(\"{err:?}\");\n    |\n\n"
            ]
          }
        },
        {
          "file": "src/libos/mock_mem.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error: variables can be used directly in the `format!` string\n  --> src/libos/mock_mem.rs:50:9\n   |\n50 | /         trace!(\n51 | |             \"mmap file: fd={}, offset={:#x}, len={:#x}, vaddr={:#x}, prot={:?}\",\n52 | |             fd,\n53 | |             offset,\n...  |\n56 | |             prot,\n57 | |         );\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n"
            ]
          }
        },
        {
          "file": "src/libos/net.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error: variables can be used directly in the `format!` string\n  --> src/libos/net.rs:25:5\n   |\n25 |     warn!(\"name : {}\", name);\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n25 -     warn!(\"name : {}\", name);\n25 +     warn!(\"name : {name}\");\n   |\n\n"
            ]
          }
        },
        {
          "file": "src/utils/lazy_init.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error: you should consider adding a `Default` implementation for `LazyInit<T>`\n  --> src/utils/lazy_init.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             inited: AtomicBool::new(false),\n20 | |             data: UnsafeCell::new(MaybeUninit::uninit()),\n21 | |         }\n22 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[deny(clippy::new_without_default)]` implied by `#[deny(warnings)]`\nhelp: try adding this\n   |\n16 + impl<T> Default for LazyInit<T> {\n17 +     fn default() -> Self {\n18 +         Self::new()\n19 +     }\n20 + }\n   |\n\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Atomvchecker",
    "Outdated",
    "Geiger",
    "Unused Deps",
    "Unformatted"
  ]
}