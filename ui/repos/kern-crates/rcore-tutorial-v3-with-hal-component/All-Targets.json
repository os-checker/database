{"repo":{"user":"kern-crates","repo":"rcore-tutorial-v3-with-hal-component"},"data":[{"user":"kern-crates","repo":"rcore-tutorial-v3-with-hal-component","pkg":"os","count":65,"raw_reports":[{"file":"src/main.rs","count":14,"kinds":{"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/main.rs (original lines from 15 to 15)\n-use polyhal::addr::PhysPage;\n","file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/main.rs (original lines from 17 to 17)\n+use polyhal::addr::PhysPage;\n"],"Clippy(Error)":["error[E0432]: unresolved imports `polyhal::get_mem_areas`, `polyhal::PageAlloc`, `polyhal::TrapFrame`, `polyhal::TrapFrameArgs`, `polyhal::TrapType`\n  --> src/main.rs:13:15\n   |\n13 | use polyhal::{get_mem_areas, PageAlloc, TrapFrame, TrapFrameArgs, TrapType};\n   |               ^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^ no `TrapType` in the root\n   |               |              |          |          |\n   |               |              |          |          no `TrapFrameArgs` in the root\n   |               |              |          no `TrapFrame` in the root\n   |               |              |          help: a similar name exists in the module: `trapframe`\n   |               |              no `PageAlloc` in the root\n   |               no `get_mem_areas` in the root\n   |\n   = help: consider importing this trait instead:\n           polyhal::common::PageAlloc\n   = help: consider importing this struct instead:\n           polyhal::trapframe::TrapFrame\n   = help: consider importing this enum instead:\n           polyhal::trapframe::TrapFrameArgs\n\n","error[E0432]: unresolved imports `polyhal::get_mem_areas`, `polyhal::PageAlloc`, `polyhal::TrapFrame`, `polyhal::TrapFrameArgs`, `polyhal::TrapType`\n  --> src/main.rs:13:15\n   |\n13 | use polyhal::{get_mem_areas, PageAlloc, TrapFrame, TrapFrameArgs, TrapType};\n   |               ^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^ no `TrapType` in the root\n   |               |              |          |          |\n   |               |              |          |          no `TrapFrameArgs` in the root\n   |               |              |          no `TrapFrame` in the root\n   |               |              |          help: a similar name exists in the module: `trapframe`\n   |               |              no `PageAlloc` in the root\n   |               no `get_mem_areas` in the root\n   |\n   = help: consider importing this trait instead:\n           polyhal::common::PageAlloc\n   = help: consider importing this struct instead:\n           polyhal::trapframe::TrapFrame\n   = help: consider importing this enum instead:\n           polyhal::trapframe::TrapFrameArgs\n\n","error[E0432]: unresolved imports `polyhal::get_mem_areas`, `polyhal::PageAlloc`, `polyhal::TrapFrame`, `polyhal::TrapFrameArgs`, `polyhal::TrapType`\n  --> src/main.rs:13:15\n   |\n13 | use polyhal::{get_mem_areas, PageAlloc, TrapFrame, TrapFrameArgs, TrapType};\n   |               ^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^ no `TrapType` in the root\n   |               |              |          |          |\n   |               |              |          |          no `TrapFrameArgs` in the root\n   |               |              |          no `TrapFrame` in the root\n   |               |              |          help: a similar name exists in the module: `trapframe`\n   |               |              no `PageAlloc` in the root\n   |               no `get_mem_areas` in the root\n   |\n   = help: consider importing this trait instead:\n           polyhal::common::PageAlloc\n   = help: consider importing this struct instead:\n           polyhal::trapframe::TrapFrame\n   = help: consider importing this enum instead:\n           polyhal::trapframe::TrapFrameArgs\n\n","error[E0432]: unresolved imports `polyhal::get_mem_areas`, `polyhal::PageAlloc`, `polyhal::TrapFrame`, `polyhal::TrapFrameArgs`, `polyhal::TrapType`\n  --> src/main.rs:13:15\n   |\n13 | use polyhal::{get_mem_areas, PageAlloc, TrapFrame, TrapFrameArgs, TrapType};\n   |               ^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^ no `TrapType` in the root\n   |               |              |          |          |\n   |               |              |          |          no `TrapFrameArgs` in the root\n   |               |              |          no `TrapFrame` in the root\n   |               |              |          help: a similar name exists in the module: `trapframe`\n   |               |              no `PageAlloc` in the root\n   |               no `get_mem_areas` in the root\n   |\n   = help: consider importing this trait instead:\n           polyhal::common::PageAlloc\n   = help: consider importing this struct instead:\n           polyhal::trapframe::TrapFrame\n   = help: consider importing this enum instead:\n           polyhal::trapframe::TrapFrameArgs\n\n","error[E0432]: unresolved imports `polyhal::get_mem_areas`, `polyhal::PageAlloc`, `polyhal::TrapFrame`, `polyhal::TrapFrameArgs`, `polyhal::TrapType`\n  --> src/main.rs:13:15\n   |\n13 | use polyhal::{get_mem_areas, PageAlloc, TrapFrame, TrapFrameArgs, TrapType};\n   |               ^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^ no `TrapType` in the root\n   |               |              |          |          |\n   |               |              |          |          no `TrapFrameArgs` in the root\n   |               |              |          no `TrapFrame` in the root\n   |               |              |          help: a similar name exists in the module: `trapframe`\n   |               |              no `PageAlloc` in the root\n   |               no `get_mem_areas` in the root\n   |\n   = help: consider importing this trait instead:\n           polyhal::common::PageAlloc\n   = help: consider importing this struct instead:\n           polyhal::trapframe::TrapFrame\n   = help: consider importing this enum instead:\n           polyhal::trapframe::TrapFrameArgs\n\n","error[E0432]: unresolved import `polyhal::TrapType`\n  --> src/main.rs:17:14\n   |\n17 | use polyhal::TrapType::*;\n   |              ^^^^^^^^ could not find `TrapType` in `polyhal`\n\n","error[E0433]: failed to resolve: could not find `arch_interrupt` in `polyhal`\n   --> src/main.rs:38:12\n    |\n38  | #[polyhal::arch_interrupt]\n    |            ^^^^^^^^^^^^^^ could not find `arch_interrupt` in `polyhal`\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/git/checkouts/polyhal-b7d1defa7146e0b7/a4881a2/src/lib.rs:162:24\n    |\n162 | pub use polyhal_macro::arch_interrupt;\n    |                        ^^^^^^^^^^^^^^\n    = note: the item is gated behind the `trap` feature\n\n","error[E0531]: cannot find tuple struct or tuple variant `StorePageFault` in this scope\n  --> src/main.rs:54:9\n   |\n54 |         StorePageFault(_paddr) | LoadPageFault(_paddr) | InstructionPageFault(_paddr) => {\n   |         ^^^^^^^^^^^^^^ not found in this scope\n\n","error[E0531]: cannot find tuple struct or tuple variant `LoadPageFault` in this scope\n  --> src/main.rs:54:34\n   |\n54 |         StorePageFault(_paddr) | LoadPageFault(_paddr) | InstructionPageFault(_paddr) => {\n   |                                  ^^^^^^^^^^^^^ not found in this scope\n\n","error[E0531]: cannot find tuple struct or tuple variant `InstructionPageFault` in this scope\n  --> src/main.rs:54:58\n   |\n54 |         StorePageFault(_paddr) | LoadPageFault(_paddr) | InstructionPageFault(_paddr) => {\n   |                                                          ^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\n","error[E0531]: cannot find tuple struct or tuple variant `IllegalInstruction` in this scope\n  --> src/main.rs:65:9\n   |\n65 |         IllegalInstruction(_) => {\n   |         ^^^^^^^^^^^^^^^^^^ not found in this scope\n\n","error[E0425]: cannot find function `init` in crate `polyhal`\n  --> src/main.rs:98:14\n   |\n98 |     polyhal::init(&PageAllocImpl);\n   |              ^^^^ not found in `polyhal`\n   |\nhelp: consider importing one of these items\n   |\n6  + use crate::logging::init;\n   |\n6  + use polyhal::common::init;\n   |\nhelp: if you import `init`, refer to it directly\n   |\n98 -     polyhal::init(&PageAllocImpl);\n98 +     init(&PageAllocImpl);\n   |\n\n"]}},{"file":"src/task/task.rs","count":8,"kinds":{"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/task/task.rs (original lines from 11 to 14)\n-use polyhal::pagetable::PageTable;\n-use polyhal::{\n-    read_current_tp, run_user_task, KContext, KContextArgs, TrapFrame, TrapFrameArgs,\n-};\n","file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/task/task.rs (original lines from 17 to 17)\n+use polyhal::pagetable::PageTable;\n+use polyhal::{read_current_tp, run_user_task, KContext, KContextArgs, TrapFrame, TrapFrameArgs};\n"],"Clippy(Error)":["error[E0432]: unresolved imports `polyhal::read_current_tp`, `polyhal::run_user_task`, `polyhal::KContext`, `polyhal::KContextArgs`, `polyhal::TrapFrame`, `polyhal::TrapFrameArgs`\n  --> src/task/task.rs:13:5\n   |\n13 |     read_current_tp, run_user_task, KContext, KContextArgs, TrapFrame, TrapFrameArgs,\n   |     ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^ no `TrapFrameArgs` in the root\n   |     |                |              |         |             |\n   |     |                |              |         |             no `TrapFrame` in the root\n   |     |                |              |         no `KContextArgs` in the root\n   |     |                |              no `KContext` in the root\n   |     |                no `run_user_task` in the root\n   |     no `read_current_tp` in the root\n   |\n   = help: consider importing this struct instead:\n           polyhal::kcontext::KContext\n   = help: consider importing this enum instead:\n           polyhal::kcontext::KContextArgs\n   = help: consider importing one of these items instead:\n           crate::TrapFrame\n           polyhal::trapframe::TrapFrame\n   = help: consider importing one of these items instead:\n           crate::TrapFrameArgs\n           polyhal::trapframe::TrapFrameArgs\nhelp: a similar name exists in the module\n   |\n13 |     read_current_tp, run_user_task, kcontext, KContextArgs, TrapFrame, TrapFrameArgs,\n   |                                     ~~~~~~~~\nhelp: a similar name exists in the module\n   |\n13 |     read_current_tp, run_user_task, KContext, KContextArgs, trapframe, TrapFrameArgs,\n   |                                                             ~~~~~~~~~\n\n","error[E0432]: unresolved imports `polyhal::read_current_tp`, `polyhal::run_user_task`, `polyhal::KContext`, `polyhal::KContextArgs`, `polyhal::TrapFrame`, `polyhal::TrapFrameArgs`\n  --> src/task/task.rs:13:5\n   |\n13 |     read_current_tp, run_user_task, KContext, KContextArgs, TrapFrame, TrapFrameArgs,\n   |     ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^ no `TrapFrameArgs` in the root\n   |     |                |              |         |             |\n   |     |                |              |         |             no `TrapFrame` in the root\n   |     |                |              |         no `KContextArgs` in the root\n   |     |                |              no `KContext` in the root\n   |     |                no `run_user_task` in the root\n   |     no `read_current_tp` in the root\n   |\n   = help: consider importing this struct instead:\n           polyhal::kcontext::KContext\n   = help: consider importing this enum instead:\n           polyhal::kcontext::KContextArgs\n   = help: consider importing one of these items instead:\n           crate::TrapFrame\n           polyhal::trapframe::TrapFrame\n   = help: consider importing one of these items instead:\n           crate::TrapFrameArgs\n           polyhal::trapframe::TrapFrameArgs\nhelp: a similar name exists in the module\n   |\n13 |     read_current_tp, run_user_task, kcontext, KContextArgs, TrapFrame, TrapFrameArgs,\n   |                                     ~~~~~~~~\nhelp: a similar name exists in the module\n   |\n13 |     read_current_tp, run_user_task, KContext, KContextArgs, trapframe, TrapFrameArgs,\n   |                                                             ~~~~~~~~~\n\n","error[E0432]: unresolved imports `polyhal::read_current_tp`, `polyhal::run_user_task`, `polyhal::KContext`, `polyhal::KContextArgs`, `polyhal::TrapFrame`, `polyhal::TrapFrameArgs`\n  --> src/task/task.rs:13:5\n   |\n13 |     read_current_tp, run_user_task, KContext, KContextArgs, TrapFrame, TrapFrameArgs,\n   |     ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^ no `TrapFrameArgs` in the root\n   |     |                |              |         |             |\n   |     |                |              |         |             no `TrapFrame` in the root\n   |     |                |              |         no `KContextArgs` in the root\n   |     |                |              no `KContext` in the root\n   |     |                no `run_user_task` in the root\n   |     no `read_current_tp` in the root\n   |\n   = help: consider importing this struct instead:\n           polyhal::kcontext::KContext\n   = help: consider importing this enum instead:\n           polyhal::kcontext::KContextArgs\n   = help: consider importing one of these items instead:\n           crate::TrapFrame\n           polyhal::trapframe::TrapFrame\n   = help: consider importing one of these items instead:\n           crate::TrapFrameArgs\n           polyhal::trapframe::TrapFrameArgs\nhelp: a similar name exists in the module\n   |\n13 |     read_current_tp, run_user_task, kcontext, KContextArgs, TrapFrame, TrapFrameArgs,\n   |                                     ~~~~~~~~\nhelp: a similar name exists in the module\n   |\n13 |     read_current_tp, run_user_task, KContext, KContextArgs, trapframe, TrapFrameArgs,\n   |                                                             ~~~~~~~~~\n\n","error[E0432]: unresolved imports `polyhal::read_current_tp`, `polyhal::run_user_task`, `polyhal::KContext`, `polyhal::KContextArgs`, `polyhal::TrapFrame`, `polyhal::TrapFrameArgs`\n  --> src/task/task.rs:13:5\n   |\n13 |     read_current_tp, run_user_task, KContext, KContextArgs, TrapFrame, TrapFrameArgs,\n   |     ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^ no `TrapFrameArgs` in the root\n   |     |                |              |         |             |\n   |     |                |              |         |             no `TrapFrame` in the root\n   |     |                |              |         no `KContextArgs` in the root\n   |     |                |              no `KContext` in the root\n   |     |                no `run_user_task` in the root\n   |     no `read_current_tp` in the root\n   |\n   = help: consider importing this struct instead:\n           polyhal::kcontext::KContext\n   = help: consider importing this enum instead:\n           polyhal::kcontext::KContextArgs\n   = help: consider importing one of these items instead:\n           crate::TrapFrame\n           polyhal::trapframe::TrapFrame\n   = help: consider importing one of these items instead:\n           crate::TrapFrameArgs\n           polyhal::trapframe::TrapFrameArgs\nhelp: a similar name exists in the module\n   |\n13 |     read_current_tp, run_user_task, kcontext, KContextArgs, TrapFrame, TrapFrameArgs,\n   |                                     ~~~~~~~~\nhelp: a similar name exists in the module\n   |\n13 |     read_current_tp, run_user_task, KContext, KContextArgs, trapframe, TrapFrameArgs,\n   |                                                             ~~~~~~~~~\n\n","error[E0432]: unresolved imports `polyhal::read_current_tp`, `polyhal::run_user_task`, `polyhal::KContext`, `polyhal::KContextArgs`, `polyhal::TrapFrame`, `polyhal::TrapFrameArgs`\n  --> src/task/task.rs:13:5\n   |\n13 |     read_current_tp, run_user_task, KContext, KContextArgs, TrapFrame, TrapFrameArgs,\n   |     ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^ no `TrapFrameArgs` in the root\n   |     |                |              |         |             |\n   |     |                |              |         |             no `TrapFrame` in the root\n   |     |                |              |         no `KContextArgs` in the root\n   |     |                |              no `KContext` in the root\n   |     |                no `run_user_task` in the root\n   |     no `read_current_tp` in the root\n   |\n   = help: consider importing this struct instead:\n           polyhal::kcontext::KContext\n   = help: consider importing this enum instead:\n           polyhal::kcontext::KContextArgs\n   = help: consider importing one of these items instead:\n           crate::TrapFrame\n           polyhal::trapframe::TrapFrame\n   = help: consider importing one of these items instead:\n           crate::TrapFrameArgs\n           polyhal::trapframe::TrapFrameArgs\nhelp: a similar name exists in the module\n   |\n13 |     read_current_tp, run_user_task, kcontext, KContextArgs, TrapFrame, TrapFrameArgs,\n   |                                     ~~~~~~~~\nhelp: a similar name exists in the module\n   |\n13 |     read_current_tp, run_user_task, KContext, KContextArgs, trapframe, TrapFrameArgs,\n   |                                                             ~~~~~~~~~\n\n","error[E0432]: unresolved imports `polyhal::read_current_tp`, `polyhal::run_user_task`, `polyhal::KContext`, `polyhal::KContextArgs`, `polyhal::TrapFrame`, `polyhal::TrapFrameArgs`\n  --> src/task/task.rs:13:5\n   |\n13 |     read_current_tp, run_user_task, KContext, KContextArgs, TrapFrame, TrapFrameArgs,\n   |     ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^ no `TrapFrameArgs` in the root\n   |     |                |              |         |             |\n   |     |                |              |         |             no `TrapFrame` in the root\n   |     |                |              |         no `KContextArgs` in the root\n   |     |                |              no `KContext` in the root\n   |     |                no `run_user_task` in the root\n   |     no `read_current_tp` in the root\n   |\n   = help: consider importing this struct instead:\n           polyhal::kcontext::KContext\n   = help: consider importing this enum instead:\n           polyhal::kcontext::KContextArgs\n   = help: consider importing one of these items instead:\n           crate::TrapFrame\n           polyhal::trapframe::TrapFrame\n   = help: consider importing one of these items instead:\n           crate::TrapFrameArgs\n           polyhal::trapframe::TrapFrameArgs\nhelp: a similar name exists in the module\n   |\n13 |     read_current_tp, run_user_task, kcontext, KContextArgs, TrapFrame, TrapFrameArgs,\n   |                                     ~~~~~~~~\nhelp: a similar name exists in the module\n   |\n13 |     read_current_tp, run_user_task, KContext, KContextArgs, trapframe, TrapFrameArgs,\n   |                                                             ~~~~~~~~~\n\n"]}},{"file":"src/task/mod.rs","count":5,"kinds":{"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/task/mod.rs (original lines from 11 to 13)\n-use polyhal::shutdown;\n-use polyhal::KContext;\n-use polyhal::TrapFrameArgs;\n","file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/task/mod.rs (original lines from 18 to 18)\n+use polyhal::shutdown;\n+use polyhal::KContext;\n+use polyhal::TrapFrameArgs;\n"],"Clippy(Error)":["error[E0432]: unresolved import `polyhal::shutdown`\n  --> src/task/mod.rs:11:5\n   |\n11 | use polyhal::shutdown;\n   |     ^^^^^^^^^^^^^^^^^ no `shutdown` in the root\n\n","error[E0432]: unresolved import `polyhal::KContext`\n  --> src/task/mod.rs:12:5\n   |\n12 | use polyhal::KContext;\n   |     ^^^^^^^^^^^^^^^^^ no `KContext` in the root\n   |\nhelp: a similar name exists in the module\n   |\n12 | use polyhal::kcontext;\n   |              ~~~~~~~~\nhelp: consider importing this struct instead\n   |\n12 | use polyhal::kcontext::KContext;\n   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","error[E0432]: unresolved import `polyhal::TrapFrameArgs`\n  --> src/task/mod.rs:13:5\n   |\n13 | use polyhal::TrapFrameArgs;\n   |     ^^^^^^^^^^^^^^^^^^^^^^ no `TrapFrameArgs` in the root\n   |\nhelp: consider importing one of these items instead\n   |\n13 | use crate::TrapFrameArgs;\n   |     ~~~~~~~~~~~~~~~~~~~~\n13 | use polyhal::trapframe::TrapFrameArgs;\n   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"]}},{"file":"src/mm/memory_set.rs","count":5,"kinds":{"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/mm/memory_set.rs (original lines from 7 to 8)\n-use polyhal::pagetable::{MappingFlags, MappingSize, PageTable, PageTableWrapper};\n-use polyhal::addr::{PhysPage, VirtAddr, VirtPage};\n","file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/mm/memory_set.rs (original lines from 10 to 10)\n+use polyhal::addr::{PhysPage, VirtAddr, VirtPage};\n+use polyhal::pagetable::{MappingFlags, MappingSize, PageTable, PageTableWrapper};\n","file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/mm/memory_set.rs (original lines from 115 to 115)\n-        //*self = Self::new_bare(); \n+        //*self = Self::new_bare();\n","file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/mm/memory_set.rs (original lines from 156 to 156)\n-            page_table.map_page(vpn, p_tracker.ppn, self.map_perm.into(), MappingSize::Page4KB);\n+            page_table.map_page(\n+                vpn,\n+                p_tracker.ppn,\n+                self.map_perm.into(),\n+                MappingSize::Page4KB,\n+            );\n","file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/mm/memory_set.rs (original lines from 195 to 195)\n-//  Identical, not used now\n+    //  Identical, not used now\n"]}},{"file":"src/task/processor.rs","count":5,"kinds":{"Clippy(Error)":["error[E0432]: unresolved imports `polyhal::kernel_page_table`, `polyhal::KContext`, `polyhal::context_switch_pt`\n --> src/task/processor.rs:6:15\n  |\n6 | use polyhal::{kernel_page_table, KContext, context_switch_pt};\n  |               ^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^^^^^^ no `context_switch_pt` in the root\n  |               |                  |\n  |               |                  no `KContext` in the root\n  |               |                  help: a similar name exists in the module (notice the capitalization): `kcontext`\n  |               no `kernel_page_table` in the root\n  |\n  = help: consider importing this struct instead:\n          polyhal::kcontext::KContext\n\n","error[E0432]: unresolved imports `polyhal::kernel_page_table`, `polyhal::KContext`, `polyhal::context_switch_pt`\n --> src/task/processor.rs:6:15\n  |\n6 | use polyhal::{kernel_page_table, KContext, context_switch_pt};\n  |               ^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^^^^^^ no `context_switch_pt` in the root\n  |               |                  |\n  |               |                  no `KContext` in the root\n  |               |                  help: a similar name exists in the module (notice the capitalization): `kcontext`\n  |               no `kernel_page_table` in the root\n  |\n  = help: consider importing this struct instead:\n          polyhal::kcontext::KContext\n\n","error[E0432]: unresolved imports `polyhal::kernel_page_table`, `polyhal::KContext`, `polyhal::context_switch_pt`\n --> src/task/processor.rs:6:15\n  |\n6 | use polyhal::{kernel_page_table, KContext, context_switch_pt};\n  |               ^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^^^^^^ no `context_switch_pt` in the root\n  |               |                  |\n  |               |                  no `KContext` in the root\n  |               |                  help: a similar name exists in the module (notice the capitalization): `kcontext`\n  |               no `kernel_page_table` in the root\n  |\n  = help: consider importing this struct instead:\n          polyhal::kcontext::KContext\n\n"],"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/task/processor.rs (original lines from 5 to 6)\n-use polyhal::pagetable::PageTable;\n-use polyhal::{kernel_page_table, KContext, context_switch_pt};\n","file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/task/processor.rs (original lines from 9 to 9)\n+use polyhal::pagetable::PageTable;\n+use polyhal::{context_switch_pt, kernel_page_table, KContext};\n"]}},{"file":"src/mm/frame_allocator.rs","count":4,"kinds":{"Clippy(Error)":["error[E0432]: unresolved imports `polyhal::PAGE_SIZE`, `polyhal::VIRT_ADDR_START`\n --> src/mm/frame_allocator.rs:3:15\n  |\n3 | use polyhal::{PAGE_SIZE, VIRT_ADDR_START};\n  |               ^^^^^^^^^  ^^^^^^^^^^^^^^^ no `VIRT_ADDR_START` in the root\n  |               |\n  |               no `PAGE_SIZE` in the root\n\n","error[E0432]: unresolved imports `polyhal::PAGE_SIZE`, `polyhal::VIRT_ADDR_START`\n --> src/mm/frame_allocator.rs:3:15\n  |\n3 | use polyhal::{PAGE_SIZE, VIRT_ADDR_START};\n  |               ^^^^^^^^^  ^^^^^^^^^^^^^^^ no `VIRT_ADDR_START` in the root\n  |               |\n  |               no `PAGE_SIZE` in the root\n\n"],"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/mm/frame_allocator.rs (original lines from 3 to 4)\n-use polyhal::{PAGE_SIZE, VIRT_ADDR_START};\n-use polyhal::addr::{PhysAddr, PhysPage};\n","file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/mm/frame_allocator.rs (original lines from 10 to 10)\n+use polyhal::addr::{PhysAddr, PhysPage};\n+use polyhal::{PAGE_SIZE, VIRT_ADDR_START};\n"]}},{"file":"src/logging.rs","count":3,"kinds":{"Clippy(Error)":["error[E0432]: unresolved import `polyhal::debug`\n --> src/logging.rs:3:14\n  |\n3 | use polyhal::debug::DebugConsole;\n  |              ^^^^^ could not find `debug` in `polyhal`\n\n"],"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/logging.rs (original lines from 3 to 3)\n-use polyhal::debug::DebugConsole;\n","file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/logging.rs (original lines from 5 to 5)\n+use polyhal::debug::DebugConsole;\n"]}},{"file":"src/syscall/mod.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/syscall/mod.rs (original lines from 22 to 22)\n+use crate::task::SignalAction;\n","file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/syscall/mod.rs (original lines from 23 to 23)\n-use process::*;\n","file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/syscall/mod.rs (original lines from 25 to 25)\n-use crate::task::SignalAction;\n+use process::*;\n"]}},{"file":"src/syscall/process.rs","count":3,"kinds":{"Clippy(Error)":["error[E0432]: unresolved import `polyhal::TrapFrameArgs`\n  --> src/syscall/process.rs:11:5\n   |\n11 | use polyhal::TrapFrameArgs;\n   |     ^^^^^^^^^^^^^^^^^^^^^^ no `TrapFrameArgs` in the root\n   |\nhelp: consider importing one of these items instead\n   |\n11 | use crate::TrapFrameArgs;\n   |     ~~~~~~~~~~~~~~~~~~~~\n11 | use polyhal::trapframe::TrapFrameArgs;\n   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"],"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/syscall/process.rs (original lines from 10 to 10)\n+use log::info;\n","file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/syscall/process.rs (original lines from 12 to 12)\n-use log::info;\n"]}},{"file":"src/lang_items.rs","count":3,"kinds":{"Clippy(Error)":["error[E0432]: unresolved import `polyhal::shutdown`\n --> src/lang_items.rs:1:5\n  |\n1 | use polyhal::shutdown;\n  |     ^^^^^^^^^^^^^^^^^ no `shutdown` in the root\n\n"],"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/lang_items.rs (original lines from 1 to 1)\n-use polyhal::shutdown;\n","file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/lang_items.rs (original lines from 4 to 4)\n+use polyhal::shutdown;\n"]}},{"file":"src/mm/page_table.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/mm/page_table.rs (original lines from 4 to 4)\n-use polyhal::pagetable::PageTable;\n","file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/mm/page_table.rs (original lines from 7 to 7)\n+use polyhal::pagetable::PageTable;\n"]}},{"file":"src/drivers/block/virtio_blk.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/drivers/block/virtio_blk.rs (original lines from 7 to 8)\n-use polyhal::addr::{PhysAddr, PhysPage};\n-use polyhal::VIRT_ADDR_START;\n","file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/drivers/block/virtio_blk.rs (original lines from 11 to 11)\n+use polyhal::addr::{PhysAddr, PhysPage};\n+use polyhal::VIRT_ADDR_START;\n"]}},{"file":"unkonwn-but-maybe-important","count":1,"kinds":{"Clippy(Error)":["error: language item required, but not found: `eh_personality`\n  |\n  = note: this can occur when a binary crate with `#![no_std]` is compiled for a target where `eh_personality` is defined in the standard library\n  = help: you may be able to compile for a target that doesn't need `eh_personality`, specify a target with `--target` or in `.cargo/config`\n\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=os, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.12\n   Compiling autocfg v1.3.0\n   Compiling scopeguard v1.2.0\n   Compiling rustversion v1.0.17\n   Compiling bitflags v2.6.0\n   Compiling paste v1.0.15\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling quote v1.0.37\n   Compiling syn v2.0.77\n   Compiling spin v0.9.8\n   Compiling x86 v0.52.0\n   Compiling volatile v0.4.6\n   Compiling bit v0.1.1\n   Compiling spin v0.7.1\n   Compiling x86_64 v0.14.12\n   Compiling log v0.4.22\n   Compiling byteorder v1.5.0\n   Compiling lazy_static v1.5.0\n   Compiling multiboot v0.8.0\n   Compiling raw-cpuid v11.1.0\n   Compiling x2apic v0.4.3\n   Compiling fdt v0.1.5\n   Compiling os v0.1.0 (/home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os)\n   Compiling zero v0.1.3\n   Compiling cfg-if v1.0.0\n   Compiling xmas-elf v0.7.0\n   Compiling easyfs v0.1.0\n   Compiling buddy_system_allocator v0.6.0\n   Compiling zerocopy-derive v0.7.35\n   Compiling polyhal-macro v0.1.3\n   Compiling polyhal v0.1.3 (https://github.com/Byte-OS/polyhal.git#a4881a2f)\n   Compiling zerocopy v0.7.35\n   Compiling virtio-drivers v0.7.1 (https://github.com/rcore-os/virtio-drivers?rev=61ece50#61ece509)\nerror[E0432]: unresolved imports `polyhal::get_mem_areas`, `polyhal::PageAlloc`, `polyhal::TrapFrame`, `polyhal::TrapFrameArgs`, `polyhal::TrapType`\n  --> src/main.rs:13:15\n   |\n13 | use polyhal::{get_mem_areas, PageAlloc, TrapFrame, TrapFrameArgs, TrapType};\n   |               ^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^ no `TrapType` in the root\n   |               |              |          |          |\n   |               |              |          |          no `TrapFrameArgs` in the root\n   |               |              |          no `TrapFrame` in the root\n   |               |              |          help: a similar name exists in the module: `trapframe`\n   |               |              no `PageAlloc` in the root\n   |               no `get_mem_areas` in the root\n   |\n   = help: consider importing this trait instead:\n           polyhal::common::PageAlloc\n   = help: consider importing this struct instead:\n           polyhal::trapframe::TrapFrame\n   = help: consider importing this enum instead:\n           polyhal::trapframe::TrapFrameArgs\n\nerror[E0432]: unresolved import `polyhal::TrapType`\n  --> src/main.rs:17:14\n   |\n17 | use polyhal::TrapType::*;\n   |              ^^^^^^^^ could not find `TrapType` in `polyhal`\n\nerror[E0432]: unresolved import `polyhal::debug`\n --> src/console.rs:3:14\n  |\n3 | use polyhal::debug::DebugConsole;\n  |              ^^^^^ could not find `debug` in `polyhal`\n\nerror[E0432]: unresolved import `polyhal::debug`\n --> src/fs/stdio.rs:1:14\n  |\n1 | use polyhal::debug::DebugConsole;\n  |              ^^^^^ could not find `debug` in `polyhal`\n\nerror[E0432]: unresolved import `polyhal::shutdown`\n --> src/lang_items.rs:1:5\n  |\n1 | use polyhal::shutdown;\n  |     ^^^^^^^^^^^^^^^^^ no `shutdown` in the root\n\nerror[E0432]: unresolved import `polyhal::debug`\n --> src/logging.rs:3:14\n  |\n3 | use polyhal::debug::DebugConsole;\n  |              ^^^^^ could not find `debug` in `polyhal`\n\nerror[E0432]: unresolved imports `polyhal::PAGE_SIZE`, `polyhal::VIRT_ADDR_START`\n --> src/mm/frame_allocator.rs:3:15\n  |\n3 | use polyhal::{PAGE_SIZE, VIRT_ADDR_START};\n  |               ^^^^^^^^^  ^^^^^^^^^^^^^^^ no `VIRT_ADDR_START` in the root\n  |               |\n  |               no `PAGE_SIZE` in the root\n\nerror[E0432]: unresolved import `polyhal::TrapFrameArgs`\n  --> src/syscall/process.rs:11:5\n   |\n11 | use polyhal::TrapFrameArgs;\n   |     ^^^^^^^^^^^^^^^^^^^^^^ no `TrapFrameArgs` in the root\n   |\nhelp: consider importing one of these items instead\n   |\n11 | use crate::TrapFrameArgs;\n   |     ~~~~~~~~~~~~~~~~~~~~\n11 | use polyhal::trapframe::TrapFrameArgs;\n   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0432]: unresolved imports `polyhal::kernel_page_table`, `polyhal::KContext`, `polyhal::context_switch_pt`\n --> src/task/processor.rs:6:15\n  |\n6 | use polyhal::{kernel_page_table, KContext, context_switch_pt};\n  |               ^^^^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^^^^^^ no `context_switch_pt` in the root\n  |               |                  |\n  |               |                  no `KContext` in the root\n  |               |                  help: a similar name exists in the module (notice the capitalization): `kcontext`\n  |               no `kernel_page_table` in the root\n  |\n  = help: consider importing this struct instead:\n          polyhal::kcontext::KContext\n\nerror[E0432]: unresolved imports `polyhal::read_current_tp`, `polyhal::run_user_task`, `polyhal::KContext`, `polyhal::KContextArgs`, `polyhal::TrapFrame`, `polyhal::TrapFrameArgs`\n  --> src/task/task.rs:13:5\n   |\n13 |     read_current_tp, run_user_task, KContext, KContextArgs, TrapFrame, TrapFrameArgs,\n   |     ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^ no `TrapFrameArgs` in the root\n   |     |                |              |         |             |\n   |     |                |              |         |             no `TrapFrame` in the root\n   |     |                |              |         no `KContextArgs` in the root\n   |     |                |              no `KContext` in the root\n   |     |                no `run_user_task` in the root\n   |     no `read_current_tp` in the root\n   |\n   = help: consider importing this struct instead:\n           polyhal::kcontext::KContext\n   = help: consider importing this enum instead:\n           polyhal::kcontext::KContextArgs\n   = help: consider importing one of these items instead:\n           crate::TrapFrame\n           polyhal::trapframe::TrapFrame\n   = help: consider importing one of these items instead:\n           crate::TrapFrameArgs\n           polyhal::trapframe::TrapFrameArgs\nhelp: a similar name exists in the module (notice the capitalization difference)\n   |\n13 |     read_current_tp, run_user_task, kcontext, KContextArgs, TrapFrame, TrapFrameArgs,\n   |                                     ~~~~~~~~\nhelp: a similar name exists in the module\n   |\n13 |     read_current_tp, run_user_task, KContext, KContextArgs, trapframe, TrapFrameArgs,\n   |                                                             ~~~~~~~~~\n\nerror[E0432]: unresolved import `polyhal::shutdown`\n  --> src/task/mod.rs:11:5\n   |\n11 | use polyhal::shutdown;\n   |     ^^^^^^^^^^^^^^^^^ no `shutdown` in the root\n\nerror[E0432]: unresolved import `polyhal::KContext`\n  --> src/task/mod.rs:12:5\n   |\n12 | use polyhal::KContext;\n   |     ^^^^^^^^^^^^^^^^^ no `KContext` in the root\n   |\nhelp: a similar name exists in the module (notice the capitalization difference)\n   |\n12 | use polyhal::kcontext;\n   |              ~~~~~~~~\nhelp: consider importing this struct instead\n   |\n12 | use polyhal::kcontext::KContext;\n   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0432]: unresolved import `polyhal::TrapFrameArgs`\n  --> src/task/mod.rs:13:5\n   |\n13 | use polyhal::TrapFrameArgs;\n   |     ^^^^^^^^^^^^^^^^^^^^^^ no `TrapFrameArgs` in the root\n   |\nhelp: consider importing one of these items instead\n   |\n13 | use crate::TrapFrameArgs;\n   |     ~~~~~~~~~~~~~~~~~~~~\n13 | use polyhal::trapframe::TrapFrameArgs;\n   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: could not find `arch_interrupt` in `polyhal`\n   --> src/main.rs:38:12\n    |\n38  | #[polyhal::arch_interrupt]\n    |            ^^^^^^^^^^^^^^ could not find `arch_interrupt` in `polyhal`\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/git/checkouts/polyhal-b7d1defa7146e0b7/a4881a2/src/lib.rs:162:24\n    |\n162 | pub use polyhal_macro::arch_interrupt;\n    |                        ^^^^^^^^^^^^^^\n    = note: the item is gated behind the `trap` feature\n\nerror[E0531]: cannot find tuple struct or tuple variant `StorePageFault` in this scope\n  --> src/main.rs:54:9\n   |\n54 |         StorePageFault(_paddr) | LoadPageFault(_paddr) | InstructionPageFault(_paddr) => {\n   |         ^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0531]: cannot find tuple struct or tuple variant `LoadPageFault` in this scope\n  --> src/main.rs:54:34\n   |\n54 |         StorePageFault(_paddr) | LoadPageFault(_paddr) | InstructionPageFault(_paddr) => {\n   |                                  ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0531]: cannot find tuple struct or tuple variant `InstructionPageFault` in this scope\n  --> src/main.rs:54:58\n   |\n54 |         StorePageFault(_paddr) | LoadPageFault(_paddr) | InstructionPageFault(_paddr) => {\n   |                                                          ^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0531]: cannot find tuple struct or tuple variant `IllegalInstruction` in this scope\n  --> src/main.rs:65:9\n   |\n65 |         IllegalInstruction(_) => {\n   |         ^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `init` in crate `polyhal`\n  --> src/main.rs:98:14\n   |\n98 |     polyhal::init(&PageAllocImpl);\n   |              ^^^^ not found in `polyhal`\n   |\nhelp: consider importing one of these items\n   |\n6  + use crate::logging::init;\n   |\n6  + use polyhal::common::init;\n   |\nhelp: if you import `init`, refer to it directly\n   |\n98 -     polyhal::init(&PageAllocImpl);\n98 +     init(&PageAllocImpl);\n   |\n\nwarning: unused import: `log::*`\n --> src/task/manager.rs:6:5\n  |\n6 | use log::*;\n  |     ^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nerror: unwinding panics are not supported without std\n  |\n  = help: using nightly cargo, use -Zbuild-std with panic=\"abort\" to avoid unwinding\n  = note: since the core library is usually precompiled with panic=\"unwind\", rebuilding your crate with panic=\"abort\" may not be enough to fix the problem\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0531.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `os` (bin \"os\") generated 1 warning\nerror: could not compile `os` (bin \"os\") due to 20 previous errors; 1 warning emitted\n"]}},{"file":"src/console.rs","count":1,"kinds":{"Clippy(Error)":["error[E0432]: unresolved import `polyhal::debug`\n --> src/console.rs:3:14\n  |\n3 | use polyhal::debug::DebugConsole;\n  |              ^^^^^ could not find `debug` in `polyhal`\n\n"]}},{"file":"src/drivers/block/ram_blk.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/drivers/block/ram_blk.rs (original lines from 62 to 65)\n-        Self {\n-            start,\n-            size,\n-        }\n+        Self { start, size }\n"]}},{"file":"src/fs/stdio.rs","count":1,"kinds":{"Clippy(Error)":["error[E0432]: unresolved import `polyhal::debug`\n --> src/fs/stdio.rs:1:14\n  |\n1 | use polyhal::debug::DebugConsole;\n  |              ^^^^^ could not find `debug` in `polyhal`\n\n"]}},{"file":"src/fs/pipe.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/fs/pipe.rs (original lines from 159 to 159)\n-                    ring_buffer.write_byte( *byte_ref );\n+                    ring_buffer.write_byte(*byte_ref);\n"]}},{"file":"src/task/manager.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused import: `log::*`\n --> src/task/manager.rs:6:5\n  |\n6 | use log::*;\n  |     ^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=os, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://github.com/Byte-OS/polyhal.git`\n    Updating git repository `https://github.com/rcore-os/virtio-drivers`\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.12\n   Compiling autocfg v1.3.0\n   Compiling rustversion v1.0.17\n   Compiling paste v1.0.15\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking bitflags v2.6.0\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.37\n    Checking raw-cpuid v10.7.0\n    Checking spin v0.9.8\n   Compiling syn v2.0.77\n   Compiling x86 v0.52.0\n    Checking volatile v0.4.6\n    Checking bit v0.1.1\n   Compiling zerocopy-derive v0.7.35\n    Checking spin v0.7.1\n    Checking log v0.4.22\n    Checking byteorder v1.5.0\n    Checking multiboot v0.8.0\n   Compiling polyhal-macro v0.1.3\n    Checking x86_64 v0.14.12\n    Checking lazy_static v1.5.0\n    Checking raw-cpuid v11.1.0\n    Checking x2apic v0.4.3\n   Compiling os v0.1.0 (/home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/os)\n    Checking cfg-if v1.0.0\n    Checking fdt v0.1.5\n    Checking zero v0.1.3\n    Checking easyfs v0.1.0\n    Checking polyhal v0.1.3 (https://github.com/Byte-OS/polyhal.git#a4881a2f)\n    Checking xmas-elf v0.7.0\n    Checking buddy_system_allocator v0.6.0\n    Checking zerocopy v0.7.35\n    Checking virtio-drivers v0.7.1 (https://github.com/rcore-os/virtio-drivers?rev=61ece50#61ece509)\nerror: could not compile `os` (bin \"os\") due to 21 previous errors; 1 warning emitted\n"]}}]},{"user":"kern-crates","repo":"rcore-tutorial-v3-with-hal-component","pkg":"user_lib","count":6,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=user_lib, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/user\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\nwarning: `/home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n   Compiling memchr v2.7.4\n   Compiling regex-syntax v0.8.4\n   Compiling semver-parser v0.7.0\n   Compiling lazy_static v1.5.0\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling semver v0.9.0\n   Compiling rustc_version v0.2.3\n   Compiling aho-corasick v1.1.3\n   Compiling bare-metal v0.2.5\n   Compiling spin v0.7.1\n   Compiling log v0.4.22\n   Compiling buddy_system_allocator v0.6.0\n   Compiling regex-automata v0.4.7\n   Compiling regex v1.10.6\n   Compiling riscv-target v0.1.2\n[2024-09-07T08:52:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-07T08:52:48Z WARN  lockbud::callbacks] crate riscv_target contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling riscv v0.6.0 (https://github.com/rcore-os/riscv#11d43cf7)\n   Compiling user_lib v0.1.0 (/home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/user)\nerror: unwinding panics are not supported without std\n  |\n  = help: using nightly cargo, use -Zbuild-std with panic=\"abort\" to avoid unwinding\n  = note: since the core library is usually precompiled with panic=\"unwind\", rebuilding your crate with panic=\"abort\" may not be enough to fix the problem\n\nerror: could not compile `user_lib` (bin \"sleep_simple\") due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `user_lib` (bin \"sig_simple2\") due to 1 previous error\nerror: could not compile `user_lib` (bin \"exit\") due to 1 previous error\nerror: could not compile `user_lib` (bin \"sig_tests\") due to 1 previous error\n"]}},{"file":"src/bin/sig_tests.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/user/src/bin/sig_tests.rs (original lines from 131 to 131)\n-        loop {yield_();}\n+        loop {\n+            yield_();\n+        }\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-09-07T08:52:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-07T08:52:48Z WARN  lockbud::callbacks] crate riscv_target contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-1.3.2/src/lib.rs","count":1,"kinds":{"Clippy(Error)":["error: &-masking with zero\n  --> src/lib.rs:62:1\n   |\n62 | / bitflags! {\n63 | |     pub struct OpenFlags: u32 {\n64 | |         const RDONLY = 0;\n65 | |         const WRONLY = 1 << 0;\n...  |\n69 | |     }\n70 | | }\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n   = note: `#[deny(clippy::bad_bit_mask)]` on by default\n   = note: this error originates in the macro `__impl_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"src/bin/usertests.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/user/src/bin/usertests.rs (original lines from 102 to 102)\n-    \n+\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=user_lib, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/user\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://github.com/rcore-os/riscv`\n   Compiling memchr v2.7.4\n   Compiling semver-parser v0.7.0\n   Compiling regex-syntax v0.8.4\n   Compiling lazy_static v1.5.0\n    Checking log v0.4.22\n   Compiling semver v0.9.0\n    Checking spin v0.7.1\n    Checking bit_field v0.10.2\n   Compiling rustc_version v0.2.3\n    Checking bitflags v1.3.2\n   Compiling aho-corasick v1.1.3\n    Checking buddy_system_allocator v0.6.0\n   Compiling bare-metal v0.2.5\n   Compiling regex-automata v0.4.7\n   Compiling regex v1.10.6\n   Compiling riscv-target v0.1.2\n   Compiling riscv v0.6.0 (https://github.com/rcore-os/riscv#11d43cf7)\n    Checking user_lib v0.1.0 (/home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/user)\nerror: could not compile `user_lib` (lib) due to 2 previous errors\n"]}}]},{"user":"kern-crates","repo":"rcore-tutorial-v3-with-hal-component","pkg":"patch_tool","count":2,"raw_reports":[{"file":"src/patch.rs","count":2,"kinds":{"Clippy(Warn)":["warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/patch.rs:46:22\n   |\n46 |     patch_repo_name: &String,\n   |                      ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n","warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/patch.rs:47:13\n   |\n47 |     commit: &String,\n   |             ^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\nhelp: change this to\n   |\n47 ~     commit: &str,\n48 | ) -> anyhow::Result<()> {\n...\n88 |     git_table.insert(\"git\".to_string(), toml::Value::String(patch_git.clone()));\n89 ~     git_table.insert(\"rev\".to_string(), toml::Value::String(commit.to_owned()));\n   |\n\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Lockbud(Probably)","Lockbud(Possibly)","Unformatted"]}