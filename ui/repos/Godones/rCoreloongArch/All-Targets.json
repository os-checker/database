{"repo":{"user":"Godones","repo":"rCoreloongArch"},"data":[{"user":"Godones","repo":"rCoreloongArch","pkg":"kernel","count":28,"raw_reports":[{"file":"src/trap/mod.rs","count":7,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Godones/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 2 to 2)\n-use crate::config::{TICKS_PER_SEC};\n+use crate::config::TICKS_PER_SEC;\n","file: /home/runner/check/batch_1/Godones/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 8 to 8)\n+use crate::println;\n","file: /home/runner/check/batch_1/Godones/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 11 to 11)\n-use crate::{println};\n","file: /home/runner/check/batch_1/Godones/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 16 to 16)\n-use loongarch64::register::*;\n","file: /home/runner/check/batch_1/Godones/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 19 to 19)\n+use loongarch64::register::*;\n","file: /home/runner/check/batch_1/Godones/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 102 to 102)\n-    ecfg::set_lie(LineBasedInterrupt::TIMER|LineBasedInterrupt::HWI0);\n+    ecfg::set_lie(LineBasedInterrupt::TIMER | LineBasedInterrupt::HWI0);\n","file: /home/runner/check/batch_1/Godones/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 162 to 162)\n-        Trap::Interrupt( Interrupt::Timer) => {\n+        Trap::Interrupt(Interrupt::Timer) => {\n"]}},{"file":"src/loongarch/driver/mod.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Godones/rCoreloongArch/kernel/src/loongarch/driver/mod.rs (original lines from 5 to 5)\n-mod vbe;\n","file: /home/runner/check/batch_1/Godones/rCoreloongArch/kernel/src/loongarch/driver/mod.rs (original lines from 7 to 7)\n+mod vbe;\n","file: /home/runner/check/batch_1/Godones/rCoreloongArch/kernel/src/loongarch/driver/mod.rs (original lines from 19 to 19)\n-\n"]}},{"file":"src/main.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Godones/rCoreloongArch/kernel/src/main.rs (original lines from 34 to 34)\n+use crate::loongarch::{\n+    ahci_init, extioi_init, i8042_init, ls7a_intc_init, rtc_init, rtc_time_read, vbe_test,\n+};\n","file: /home/runner/check/batch_1/Godones/rCoreloongArch/kernel/src/main.rs (original lines from 35 to 35)\n-use crate::loongarch::{ahci_init, extioi_init, i8042_init, ls7a_intc_init, rtc_init, rtc_time_read, vbe_test};\n","file: /home/runner/check/batch_1/Godones/rCoreloongArch/kernel/src/main.rs (original lines from 48 to 52)\n-pub fn main(\n-    argc: usize,\n-    argv: *const *const u8,\n-    boot_params_interface: *const (),\n-) {\n+pub fn main(argc: usize, argv: *const *const u8, boot_params_interface: *const ()) {\n"]}},{"file":"src/trap/context.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Godones/rCoreloongArch/kernel/src/trap/context.rs (original lines from 3 to 3)\n-use loongarch64::register::{CpuMode, prmd};\n+use loongarch64::register::{prmd, CpuMode};\n","file: /home/runner/check/batch_1/Godones/rCoreloongArch/kernel/src/trap/context.rs (original lines from 24 to 24)\n-\n","file: /home/runner/check/batch_1/Godones/rCoreloongArch/kernel/src/trap/context.rs (original lines from 34 to 34)\n-            prmd:prmd::read().raw(),\n+            prmd: prmd::read().raw(),\n"]}},{"file":"src/loongarch/rtc.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Godones/rCoreloongArch/kernel/src/loongarch/rtc.rs (original lines from 1 to 1)\n+use crate::loongarch::driver::rtc::RtcTime;\n","file: /home/runner/check/batch_1/Godones/rCoreloongArch/kernel/src/loongarch/rtc.rs (original lines from 4 to 4)\n-use crate::loongarch::driver::rtc::RtcTime;\n"]}},{"file":"src/syscall/process.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Godones/rCoreloongArch/kernel/src/syscall/process.rs (original lines from 1 to 1)\n+use crate::fs::{open_file, OpenFlags};\n","file: /home/runner/check/batch_1/Godones/rCoreloongArch/kernel/src/syscall/process.rs (original lines from 8 to 8)\n-use crate::fs::{open_file, OpenFlags};\n"]}},{"file":"src/timer.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Godones/rCoreloongArch/kernel/src/timer.rs (original lines from 9 to 9)\n-\n","file: /home/runner/check/batch_1/Godones/rCoreloongArch/kernel/src/timer.rs (original lines from 39 to 39)\n-static TIMERS:Lazy<Mutex<BinaryHeap<TimerCondVar>>> = Lazy::new(||Mutex::new(BinaryHeap::<TimerCondVar>::new()));\n+static TIMERS: Lazy<Mutex<BinaryHeap<TimerCondVar>>> =\n+    Lazy::new(|| Mutex::new(BinaryHeap::<TimerCondVar>::new()));\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=kernel, checker=Lockbud\n// toolchain=nightly-2024-01-19, target=loongarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Godones/rCoreloongArch/kernel\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target loongarch64-unknown-none\nwarning: /home/runner/check/batch_1/Godones/rCoreloongArch/pci/Cargo.toml: no edition set: defaulting to the 2015 edition while the latest is 2021\n   Compiling num-traits v0.2.19\n   Compiling az v1.2.1\n   Compiling memchr v2.3.4\n   Compiling nom v6.2.2\n   Compiling micromath v1.1.1\n[2024-11-22T11:33:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:33:01Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling zero v0.1.3\n   Compiling xmas-elf v0.8.0\n   Compiling spin v0.7.1\n   Compiling float-cmp v0.8.0\n   Compiling rlibc v1.0.0\n   Compiling oorandom v11.1.4\n   Compiling virtio-input-decoder v0.1.4\n   Compiling embedded-graphics-core v0.3.3\n   Compiling rustc-demangle v0.1.24\n   Compiling stack_trace v0.1.0 (/home/runner/check/batch_1/Godones/rCoreloongArch/stack_trace)\n   Compiling embedded-graphics v0.7.1\nwarning: the type `[&mut [net::ethernet::intel::ixgbe::IXGBESendDesc]; 4]` does not permit being left uninitialized\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:500:22\n    |\n500 |             unsafe { MaybeUninit::uninit().assume_init() };\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                      |\n    |                      this code causes undefined behavior when executed\n    |                      help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n    = note: references must be non-null\n    = note: `#[warn(invalid_value)]` on by default\n\nwarning: `isomorphic_drivers` (lib) generated 1 warning\n   Compiling kernel v0.1.0 (/home/runner/check/batch_1/Godones/rCoreloongArch/kernel)\n   Compiling buddy_system_allocator v0.6.0\n   Compiling loongArch64 v0.2.4 (https://github.com/Godones/loongArch64#92d93554)\n   Compiling pci v0.0.1 (/home/runner/check/batch_1/Godones/rCoreloongArch/pci)\n   Compiling tinybmp v0.3.3\n   Compiling vbe v0.1.0 (/home/runner/check/batch_1/Godones/rCoreloongArch/vbe)\nwarning: the feature `const_mut_refs` has been stable since 1.83.0-nightly and no longer requires an attribute to enable\n --> kernel/src/main.rs:5:12\n  |\n5 | #![feature(const_mut_refs)]\n  |            ^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> kernel/src/main.rs:7:12\n  |\n7 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n\nwarning: the feature `panic_info_message` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> kernel/src/main.rs:3:12\n  |\n3 | #![feature(panic_info_message)]\n  |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `unwrap` found for struct `core::panic::PanicMessage` in the current scope\n  --> kernel/src/lang_items.rs:11:28\n   |\n11 |             info.message().unwrap()\n   |                            ^^^^^^\n   |\nhelp: there is a method `unwrapped_as` with a similar name\n   |\n11 |             info.message().unwrapped_as()\n   |                            ~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0599`.\nwarning: `kernel` (bin \"kernel\") generated 3 warnings\nerror: could not compile `kernel` (bin \"kernel\") due to 1 previous error; 3 warnings emitted\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-22T11:33:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:33:01Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=kernel, checker=Outdated\ntoolchain=nightly-2024-01-19, target=loongarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Godones/rCoreloongArch/kernel\ncmd=cargo +nightly-2024-12-24-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName                    Project  Compat  Latest  Kind    Platform\n----                    -------  ------  ------  ----    --------\nbitflags                1.3.2    ---     2.6.0   Normal  ---\nbuddy_system_allocator  0.6.0    ---     0.11.0  Normal  ---\nxmas-elf                0.8.0    ---     0.9.1   Normal  ---\n"]}},{"file":"src/config.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Godones/rCoreloongArch/kernel/src/config.rs (original lines from 12 to 12)\n-// pub const KERNEL_STACK_SIZE: usize = PAGE_SIZE; //内核栈大小\n+                                              // pub const KERNEL_STACK_SIZE: usize = PAGE_SIZE; //内核栈大小\n"]}},{"file":"src/loongarch/driver/rtc.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Godones/rCoreloongArch/kernel/src/loongarch/driver/rtc.rs (original lines from 32 to 32)\n+\n"]}},{"file":"src/print.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Godones/rCoreloongArch/kernel/src/print.rs (original lines from 31 to 31)\n-pub static CONSOLE: Lazy< Mutex<Console>> = Lazy::new(||Mutex::new(Console::new(UART)));\n+pub static CONSOLE: Lazy<Mutex<Console>> = Lazy::new(|| Mutex::new(Console::new(UART)));\n"]}}]},{"user":"Godones","repo":"rCoreloongArch","pkg":"vbe","count":6,"raw_reports":[{"file":"(virtual) geiger","count":1,"kinds":{"Cargo":["// pkg_name=vbe, checker=Geiger\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Godones/rCoreloongArch/vbe\n// cmd=cargo +nightly-2024-12-24-x86_64-unknown-linux-gnu geiger --output-format Ascii\nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#libc@0.2.169 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#libc@0.2.169 \nerror: Cargo(\"failed to parse lock file at: /home/runner/check/batch_1/Godones/rCoreloongArch/Cargo.lock\")\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=vbe, checker=SemverChecks\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Godones/rCoreloongArch/vbe\n// cmd=cargo +nightly-2024-12-24-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n    Building vbe v0.1.0 (current)\n       Built [   2.584s] (current)\n     Parsing vbe v0.1.0 (current)\n      Parsed [   0.008s] (current)\nerror: No available baseline versions for vbe@0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-22T11:33:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:33:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=vbe, checker=Outdated\ntoolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_1/Godones/rCoreloongArch/vbe\ncmd=cargo +nightly-2024-12-24-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName                    Project  Compat  Latest  Kind    Platform\n----                    -------  ------  ------  ----    --------\nembedded-graphics       0.7.1    ---     0.8.1   Normal  ---\nembedded-graphics-core  0.3.3    ---     0.4.0   Normal  ---\ntinybmp                 0.3.3    ---     0.6.0   Normal  ---\n"]}},{"file":"[rap] Not supported to display yet.","count":1,"kinds":{"Rap":["pkg=vbe, checker=Rap\ntoolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_1/Godones/rCoreloongArch/vbe\ncmd=cargo +nightly-2024-10-12 rap -F -M\n\n11:33:46|RAP|WARN|: Double free detected in function paint\n11:33:46|RAP|WARN|: Location: vbe/src/gui/basic/bar.rs:36:9: 36:10 (#0)\n11:33:46|RAP|WARN|: Double free detected in function no symbol available\n11:33:46|RAP|WARN|: Location: vbe/src/gui/basic/panel.rs:60:9: 60:10 (#0)\n11:33:46|RAP|WARN|: Double free detected in function paint\n11:33:46|RAP|WARN|: Location: vbe/src/gui/basic/terminal.rs:77:9: 77:10 (#0)\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=vbe, checker=SemverChecks\ntoolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_1/Godones/rCoreloongArch/vbe\ncmd=cargo +nightly-2024-12-24-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n\n\nstdout:\n\nstderr:\n    Building vbe v0.1.0 (current)\n       Built [   2.584s] (current)\n     Parsing vbe v0.1.0 (current)\n      Parsed [   0.008s] (current)\nerror: No available baseline versions for vbe@0.1.0\n"]}}]},{"user":"Godones","repo":"rCoreloongArch","pkg":"easy-fs-fuse","count":4,"raw_reports":[{"file":"/home/runner/check/batch_1/Godones/rCoreloongArch/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 686 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (75 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── clap 3.2.25\n    └── easy-fs-fuse 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 686,\n    \"last-commit\": \"509528f6775ad69ab114f1e4b37b4359cae5cef4\",\n    \"last-updated\": \"2024-11-10T21:38:56+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 75\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.162\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.162\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) geiger","count":1,"kinds":{"Cargo":["// pkg_name=easy-fs-fuse, checker=Geiger\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Godones/rCoreloongArch/easy-fs-fuse\n// cmd=cargo +nightly-2024-12-24-x86_64-unknown-linux-gnu geiger --output-format Ascii\nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nerror: Cargo(\"failed to parse lock file at: /home/runner/check/batch_1/Godones/rCoreloongArch/Cargo.lock\")\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-22T11:32:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lazy.rs:36:23: 36:43 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lazy.rs:39:13: 39:39 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:32:52Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-22T11:32:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:32:52Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=easy-fs-fuse, checker=Outdated\ntoolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_1/Godones/rCoreloongArch/easy-fs-fuse\ncmd=cargo +nightly-2024-12-24-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nclap  3.2.25   ---     4.5.23  Normal  ---\n"]}}]},{"user":"Godones","repo":"rCoreloongArch","pkg":"isomorphic_drivers","count":4,"raw_reports":[{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=isomorphic_drivers, checker=SemverChecks\n// toolchain=nightly-2024-01-19, target=loongarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Godones/rCoreloongArch/isomorphic_drivers\n// cmd=cargo +nightly-2024-12-24-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none\n    Building isomorphic_drivers v0.1.0 (current)\nerror: running cargo-doc on crate 'isomorphic_drivers' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-24-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target loongarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-24-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"loongarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"ual\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate isomorphic_drivers v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Godones/rCoreloongArch/isomorphic_drivers &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate isomorphic_drivers v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-22T11:33:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:33:01Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=isomorphic_drivers, checker=Outdated\ntoolchain=nightly-2024-01-19, target=loongarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Godones/rCoreloongArch/isomorphic_drivers\ncmd=cargo +nightly-2024-12-24-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  1.3.2    ---     2.6.0   Normal  ---\nvolatile  0.3.0    ---     0.6.1   Normal  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=isomorphic_drivers, checker=SemverChecks\ntoolchain=nightly-2024-01-19, target=loongarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Godones/rCoreloongArch/isomorphic_drivers\ncmd=cargo +nightly-2024-12-24-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building isomorphic_drivers v0.1.0 (current)\nerror: running cargo-doc on crate 'isomorphic_drivers' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-24-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target loongarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-24-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"loongarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"ual\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate isomorphic_drivers v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Godones/rCoreloongArch/isomorphic_drivers &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate isomorphic_drivers v0.1.0\n"]}}]},{"user":"Godones","repo":"rCoreloongArch","pkg":"stack_trace","count":4,"raw_reports":[{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=stack_trace, checker=SemverChecks\n// toolchain=nightly-2024-01-19, target=loongarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Godones/rCoreloongArch/stack_trace\n// cmd=cargo +nightly-2024-12-24-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none\n    Building stack_trace v0.1.0 (current)\nerror: running cargo-doc on crate 'stack_trace' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-24-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target loongarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-24-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"loongarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"ual\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate stack_trace v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Godones/rCoreloongArch/stack_trace &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate stack_trace v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-22T11:33:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:33:01Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=stack_trace, checker=Outdated\ntoolchain=nightly-2024-01-19, target=loongarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Godones/rCoreloongArch/stack_trace\ncmd=cargo +nightly-2024-12-24-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nxmas-elf  0.8.0    ---     0.9.1   Normal  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=stack_trace, checker=SemverChecks\ntoolchain=nightly-2024-01-19, target=loongarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Godones/rCoreloongArch/stack_trace\ncmd=cargo +nightly-2024-12-24-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building stack_trace v0.1.0 (current)\nerror: running cargo-doc on crate 'stack_trace' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-24-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target loongarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-24-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"loongarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"ual\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate stack_trace v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Godones/rCoreloongArch/stack_trace &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate stack_trace v0.1.0\n"]}}]},{"user":"Godones","repo":"rCoreloongArch","pkg":"user_lib","count":4,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=user_lib, checker=Lockbud\n// toolchain=nightly-2024-01-19, target=loongarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Godones/rCoreloongArch/user\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target loongarch64-unknown-none\nwarning: /home/runner/check/batch_1/Godones/rCoreloongArch/pci/Cargo.toml: no edition set: defaulting to the 2015 edition while the latest is 2021\n   Compiling user_lib v0.1.0 (/home/runner/check/batch_1/Godones/rCoreloongArch/user)\nwarning: the feature `panic_info_message` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> user/src/lib.rs:3:12\n  |\n3 | #![feature(panic_info_message)]\n  |            ^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\nerror[E0599]: no method named `unwrap` found for struct `core::panic::PanicMessage` in the current scope\n --> user/src/lang_items.rs:5:36\n  |\n5 |     let err = panic_info.message().unwrap();\n  |                                    ^^^^^^ method not found in `PanicMessage<'_>`\n\nFor more information about this error, try `rustc --explain E0599`.\nwarning: `user_lib` (lib) generated 1 warning\nerror: could not compile `user_lib` (lib) due to 1 previous error; 1 warning emitted\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=user_lib, checker=SemverChecks\n// toolchain=nightly-2024-01-19, target=loongarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Godones/rCoreloongArch/user\n// cmd=cargo +nightly-2024-12-24-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none\n    Building user_lib v0.1.0 (current)\nerror: running cargo-doc on crate 'user_lib' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-24-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target loongarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-24-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"loongarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"ual\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate user_lib v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Godones/rCoreloongArch/user &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate user_lib v0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=user_lib, checker=Outdated\ntoolchain=nightly-2024-01-19, target=loongarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Godones/rCoreloongArch/user\ncmd=cargo +nightly-2024-12-24-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName                    Project  Compat  Latest  Kind    Platform\n----                    -------  ------  ------  ----    --------\nbitflags                1.3.2    ---     2.6.0   Normal  ---\nbuddy_system_allocator  0.6.0    ---     0.11.0  Normal  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=user_lib, checker=SemverChecks\ntoolchain=nightly-2024-01-19, target=loongarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Godones/rCoreloongArch/user\ncmd=cargo +nightly-2024-12-24-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building user_lib v0.1.0 (current)\nerror: running cargo-doc on crate 'user_lib' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-24-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target loongarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-24-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"loongarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"ual\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate user_lib v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Godones/rCoreloongArch/user &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate user_lib v0.1.0\n"]}}]},{"user":"Godones","repo":"rCoreloongArch","pkg":"pci","count":3,"raw_reports":[{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=pci, checker=SemverChecks\n// toolchain=nightly-2024-01-19, target=loongarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Godones/rCoreloongArch/pci\n// cmd=cargo +nightly-2024-12-24-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none\n    Building pci v0.0.1 (current)\nerror: running cargo-doc on crate 'pci' failed with output:\n-----\nwarning: /home/runner/check/batch_1/Godones/rCoreloongArch/pci/Cargo.toml: no edition set: defaulting to the 2015 edition while the latest is 2024\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-24-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target loongarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-24-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"loongarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"ual\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate pci v0.0.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Godones/rCoreloongArch/pci &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate pci v0.0.1\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=pci, checker=Outdated\ntoolchain=nightly-2024-01-19, target=loongarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Godones/rCoreloongArch/pci\ncmd=cargo +nightly-2024-12-24-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  1.3.2    ---     2.6.0   Normal  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=pci, checker=SemverChecks\ntoolchain=nightly-2024-01-19, target=loongarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Godones/rCoreloongArch/pci\ncmd=cargo +nightly-2024-12-24-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building pci v0.0.1 (current)\nerror: running cargo-doc on crate 'pci' failed with output:\n-----\nwarning: /home/runner/check/batch_1/Godones/rCoreloongArch/pci/Cargo.toml: no edition set: defaulting to the 2015 edition while the latest is 2024\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-24-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target loongarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-24-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"loongarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"ual\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate pci v0.0.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Godones/rCoreloongArch/pci &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate pci v0.0.1\n"]}}]},{"user":"Godones","repo":"rCoreloongArch","pkg":"easy-fs","count":2,"raw_reports":[{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=easy-fs, checker=SemverChecks\n// toolchain=nightly-2024-01-19, target=loongarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Godones/rCoreloongArch/easy-fs\n// cmd=cargo +nightly-2024-12-24-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none\n    Building easy-fs v0.1.0 (current)\nerror: running cargo-doc on crate 'easy-fs' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-24-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target loongarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-24-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"loongarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"ual\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate easy-fs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Godones/rCoreloongArch/easy-fs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate easy-fs v0.1.0\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=easy-fs, checker=SemverChecks\ntoolchain=nightly-2024-01-19, target=loongarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Godones/rCoreloongArch/easy-fs\ncmd=cargo +nightly-2024-12-24-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building easy-fs v0.1.0 (current)\nerror: running cargo-doc on crate 'easy-fs' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-24-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target loongarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-24-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"loongarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"ual\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate easy-fs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Godones/rCoreloongArch/easy-fs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate easy-fs v0.1.0\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Semver Violation","Audit","Mirai","Rap","Rudra","Lockbud(Probably)","Lockbud(Possibly)","Outdated","Geiger","Unformatted"]}