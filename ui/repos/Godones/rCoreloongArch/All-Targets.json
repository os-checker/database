{"repo":{"user":"Godones","repo":"rCoreloongArch"},"data":[{"user":"Godones","repo":"rCoreloongArch","pkg":"kernel","count":29,"raw_reports":[{"file":"src/trap/mod.rs","count":7,"kinds":{"Unformatted":["file: /home/runner/check/batch_3/Godones/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 2 to 2)\n-use crate::config::{TICKS_PER_SEC};\n+use crate::config::TICKS_PER_SEC;\n","file: /home/runner/check/batch_3/Godones/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 8 to 8)\n+use crate::println;\n","file: /home/runner/check/batch_3/Godones/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 11 to 11)\n-use crate::{println};\n","file: /home/runner/check/batch_3/Godones/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 16 to 16)\n-use loongarch64::register::*;\n","file: /home/runner/check/batch_3/Godones/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 19 to 19)\n+use loongarch64::register::*;\n","file: /home/runner/check/batch_3/Godones/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 102 to 102)\n-    ecfg::set_lie(LineBasedInterrupt::TIMER|LineBasedInterrupt::HWI0);\n+    ecfg::set_lie(LineBasedInterrupt::TIMER | LineBasedInterrupt::HWI0);\n","file: /home/runner/check/batch_3/Godones/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 162 to 162)\n-        Trap::Interrupt( Interrupt::Timer) => {\n+        Trap::Interrupt(Interrupt::Timer) => {\n"]}},{"file":"src/loongarch/driver/mod.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/batch_3/Godones/rCoreloongArch/kernel/src/loongarch/driver/mod.rs (original lines from 5 to 5)\n-mod vbe;\n","file: /home/runner/check/batch_3/Godones/rCoreloongArch/kernel/src/loongarch/driver/mod.rs (original lines from 7 to 7)\n+mod vbe;\n","file: /home/runner/check/batch_3/Godones/rCoreloongArch/kernel/src/loongarch/driver/mod.rs (original lines from 19 to 19)\n-\n"]}},{"file":"src/main.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/batch_3/Godones/rCoreloongArch/kernel/src/main.rs (original lines from 34 to 34)\n+use crate::loongarch::{\n+    ahci_init, extioi_init, i8042_init, ls7a_intc_init, rtc_init, rtc_time_read, vbe_test,\n+};\n","file: /home/runner/check/batch_3/Godones/rCoreloongArch/kernel/src/main.rs (original lines from 35 to 35)\n-use crate::loongarch::{ahci_init, extioi_init, i8042_init, ls7a_intc_init, rtc_init, rtc_time_read, vbe_test};\n","file: /home/runner/check/batch_3/Godones/rCoreloongArch/kernel/src/main.rs (original lines from 48 to 52)\n-pub fn main(\n-    argc: usize,\n-    argv: *const *const u8,\n-    boot_params_interface: *const (),\n-) {\n+pub fn main(argc: usize, argv: *const *const u8, boot_params_interface: *const ()) {\n"]}},{"file":"src/trap/context.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/batch_3/Godones/rCoreloongArch/kernel/src/trap/context.rs (original lines from 3 to 3)\n-use loongarch64::register::{CpuMode, prmd};\n+use loongarch64::register::{prmd, CpuMode};\n","file: /home/runner/check/batch_3/Godones/rCoreloongArch/kernel/src/trap/context.rs (original lines from 24 to 24)\n-\n","file: /home/runner/check/batch_3/Godones/rCoreloongArch/kernel/src/trap/context.rs (original lines from 34 to 34)\n-            prmd:prmd::read().raw(),\n+            prmd: prmd::read().raw(),\n"]}},{"file":"src/loongarch/rtc.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_3/Godones/rCoreloongArch/kernel/src/loongarch/rtc.rs (original lines from 1 to 1)\n+use crate::loongarch::driver::rtc::RtcTime;\n","file: /home/runner/check/batch_3/Godones/rCoreloongArch/kernel/src/loongarch/rtc.rs (original lines from 4 to 4)\n-use crate::loongarch::driver::rtc::RtcTime;\n"]}},{"file":"src/syscall/process.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_3/Godones/rCoreloongArch/kernel/src/syscall/process.rs (original lines from 1 to 1)\n+use crate::fs::{open_file, OpenFlags};\n","file: /home/runner/check/batch_3/Godones/rCoreloongArch/kernel/src/syscall/process.rs (original lines from 8 to 8)\n-use crate::fs::{open_file, OpenFlags};\n"]}},{"file":"src/timer.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_3/Godones/rCoreloongArch/kernel/src/timer.rs (original lines from 9 to 9)\n-\n","file: /home/runner/check/batch_3/Godones/rCoreloongArch/kernel/src/timer.rs (original lines from 39 to 39)\n-static TIMERS:Lazy<Mutex<BinaryHeap<TimerCondVar>>> = Lazy::new(||Mutex::new(BinaryHeap::<TimerCondVar>::new()));\n+static TIMERS: Lazy<Mutex<BinaryHeap<TimerCondVar>>> =\n+    Lazy::new(|| Mutex::new(BinaryHeap::<TimerCondVar>::new()));\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=kernel, checker=Lockbud\n// toolchain=nightly-2024-01-19, target=loongarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/kernel\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target loongarch64-unknown-none\n// timestamp=2025-01-10 14:04:28.910640512 +08:00:00\nwarning: /home/runner/check/batch_3/Godones/rCoreloongArch/pci/Cargo.toml: no edition set: defaulting to the 2015 edition while the latest is 2024\n Downloading crates ...\n  Downloaded rlibc v1.0.0\n  Downloaded memchr v2.3.4\n  Downloaded oorandom v11.1.4\n  Downloaded float-cmp v0.8.0\n  Downloaded virtio-input-decoder v0.1.4\n  Downloaded az v1.2.1\n  Downloaded tinybmp v0.3.3\n  Downloaded nom v6.2.2\n  Downloaded embedded-graphics-core v0.3.3\n  Downloaded micromath v1.1.1\n  Downloaded embedded-graphics v0.7.1\n   Compiling num-traits v0.2.19\n   Compiling az v1.2.1\n   Compiling memchr v2.3.4\n   Compiling version_check v0.9.5\n   Compiling byteorder v1.5.0\n   Compiling nom v6.2.2\n[2025-01-10T06:04:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-10T06:04:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling micromath v1.1.1\n   Compiling zero v0.1.3\n   Compiling xmas-elf v0.8.0\n   Compiling float-cmp v0.8.0\n   Compiling rlibc v1.0.0\n   Compiling kernel v0.1.0 (/home/runner/check/batch_3/Godones/rCoreloongArch/kernel)\n   Compiling rustc-demangle v0.1.24\n   Compiling oorandom v11.1.4\n   Compiling embedded-graphics-core v0.3.3\n   Compiling virtio-input-decoder v0.1.4\n   Compiling spin v0.7.1\n   Compiling embedded-graphics v0.7.1\n   Compiling buddy_system_allocator v0.6.0\n   Compiling stack_trace v0.1.0 (/home/runner/check/batch_3/Godones/rCoreloongArch/stack_trace)\nwarning: the type `[&mut [net::ethernet::intel::ixgbe::IXGBESendDesc]; 4]` does not permit being left uninitialized\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:500:22\n    |\n500 |             unsafe { MaybeUninit::uninit().assume_init() };\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                      |\n    |                      this code causes undefined behavior when executed\n    |                      help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n    = note: references must be non-null\n    = note: `#[warn(invalid_value)]` on by default\n\nwarning: `isomorphic_drivers` (lib) generated 1 warning\n   Compiling pci v0.0.1 (/home/runner/check/batch_3/Godones/rCoreloongArch/pci)\n   Compiling loongArch64 v0.2.4 (https://github.com/Godones/loongArch64#92d93554)\n   Compiling tinybmp v0.3.3\n   Compiling vbe v0.1.0 (/home/runner/check/batch_3/Godones/rCoreloongArch/vbe)\nwarning: the feature `const_mut_refs` has been stable since 1.83.0 and no longer requires an attribute to enable\n --> kernel/src/main.rs:5:12\n  |\n5 | #![feature(const_mut_refs)]\n  |            ^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> kernel/src/main.rs:7:12\n  |\n7 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n\nwarning: the feature `panic_info_message` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> kernel/src/main.rs:3:12\n  |\n3 | #![feature(panic_info_message)]\n  |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `unwrap` found for struct `core::panic::PanicMessage` in the current scope\n  --> kernel/src/lang_items.rs:11:28\n   |\n11 |             info.message().unwrap()\n   |                            ^^^^^^\n   |\nhelp: there is a method `unwrapped_as` with a similar name\n   |\n11 |             info.message().unwrapped_as()\n   |                            ~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0599`.\nwarning: `kernel` (bin \"kernel\") generated 3 warnings\nerror: could not compile `kernel` (bin \"kernel\") due to 1 previous error; 3 warnings emitted\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=kernel, checker=Rapx\n// toolchain=nightly-2024-01-19, target=loongarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/kernel\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target loongarch64-unknown-none\n// timestamp=2025-01-10 14:04:50.582531034 +08:00:00\nwarning: /home/runner/check/batch_3/Godones/rCoreloongArch/pci/Cargo.toml: no edition set: defaulting to the 2015 edition while the latest is 2021\n   Compiling autocfg v1.4.0\n    Checking scopeguard v1.2.0\n   Compiling az v1.2.1\n   Compiling version_check v0.9.5\n   Compiling memchr v2.3.4\n    Checking bit_field v0.10.2\n   Compiling nom v6.2.2\n    Checking byteorder v1.5.0\n   Compiling lock_api v0.4.12\n   Compiling num-traits v0.2.19\n    Checking log v0.4.22\n    Checking micromath v1.1.1\n    Checking bitflags v1.3.2\n    Checking embedded-graphics-core v0.3.3\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking zero v0.1.3\n    Checking xmas-elf v0.8.0\n    Checking rustc-demangle v0.1.24\n    Checking float-cmp v0.8.0\n    Checking virtio-input-decoder v0.1.4\n    Checking embedded-graphics v0.7.1\n    Checking volatile v0.3.0\n    Checking rlibc v1.0.0\n    Checking spin v0.7.1\n    Checking oorandom v11.1.4\n   Compiling kernel v0.1.0 (/home/runner/check/batch_3/Godones/rCoreloongArch/kernel)\n    Checking buddy_system_allocator v0.6.0\n    Checking isomorphic_drivers v0.1.0 (/home/runner/check/batch_3/Godones/rCoreloongArch/isomorphic_drivers)\n    Checking stack_trace v0.1.0 (/home/runner/check/batch_3/Godones/rCoreloongArch/stack_trace)\n    Checking easy-fs v0.1.0 (/home/runner/check/batch_3/Godones/rCoreloongArch/easy-fs)\n    Checking pci v0.0.1 (/home/runner/check/batch_3/Godones/rCoreloongArch/pci)\nwarning: the type `[&mut [net::ethernet::intel::ixgbe::IXGBESendDesc]; 4]` does not permit being left uninitialized\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:500:22\n    |\n500 |             unsafe { MaybeUninit::uninit().assume_init() };\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                      |\n    |                      this code causes undefined behavior when executed\n    |                      help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n    = note: references must be non-null\n    = note: `#[warn(invalid_value)]` on by default\n\n    Checking tinybmp v0.3.3\n    Checking vbe v0.1.0 (/home/runner/check/batch_3/Godones/rCoreloongArch/vbe)\n06:04:54|RAP|WARN|: Use after free detected in function \"get_block_cache\"\n    Checking loongArch64 v0.2.4 (https://github.com/Godones/loongArch64#92d93554)\nwarning: `isomorphic_drivers` (lib) generated 1 warning\nwarning: the feature `const_mut_refs` has been stable since 1.83.0-nightly and no longer requires an attribute to enable\n --> kernel/src/main.rs:5:12\n  |\n5 | #![feature(const_mut_refs)]\n  |            ^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> kernel/src/main.rs:7:12\n  |\n7 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n\nwarning: the feature `panic_info_message` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> kernel/src/main.rs:3:12\n  |\n3 | #![feature(panic_info_message)]\n  |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `unwrap` found for struct `core::panic::PanicMessage` in the current scope\n  --> kernel/src/lang_items.rs:11:28\n   |\n11 |             info.message().unwrap()\n   |                            ^^^^^^\n   |\nhelp: there is a method `unwrapped_as` with a similar name\n   |\n11 |             info.message().unwrapped_as()\n   |                            ~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0599`.\nwarning: `kernel` (bin \"kernel\") generated 3 warnings\nerror: could not compile `kernel` (bin \"kernel\") due to 1 previous error; 3 warnings emitted\n06:04:59|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=kernel, checker=Outdated\ntoolchain=nightly-2024-01-19, target=loongarch64-unknown-none\npkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/kernel\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-10 14:05:18.309329597 +08:00:00\n\nName                    Project  Compat  Latest  Kind    Platform\n----                    -------  ------  ------  ----    --------\nbitflags                1.3.2    ---     2.7.0   Normal  ---\nbuddy_system_allocator  0.6.0    ---     0.11.0  Normal  ---\nxmas-elf                0.8.0    ---     0.9.1   Normal  ---\n"]}},{"file":"[rap] Not supported to display yet.","count":1,"kinds":{"Rapx":["pkg=kernel, checker=Rapx\ntoolchain=nightly-2024-01-19, target=loongarch64-unknown-none\npkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/kernel\ncmd=cargo +nightly-2024-10-12 rapx -F -M -- --target loongarch64-unknown-none\ntimestamp=2025-01-10 14:04:59.644631378 +08:00:00\n\nwarning: Use after free detected.\n   --> easy-fs/src/block_cache.rs:118:13\n    |\n118 |             self.queue.push_back((block_id, Arc::clone(&block_cache)));\n    |             ----------------------------------------------------------\n    |             |\n    |             Use after free detected.\n    |             Use after free detected.\n    |\nOver visited: DefId(0:119 ~ pci[e677]::{impl#32}::fmt)\nOver visited: DefId(0:279 ~ pci[e677]::{impl#57}::fmt)\nOver visited: DefId(0:439 ~ pci[e677]::{impl#82}::fmt)\nOver visited: DefId(0:369 ~ isomorphic_drivers[9ab4]::net::ethernet::intel::ixgbe::{impl#0}::new)\nOver visited: DefId(0:426 ~ isomorphic_drivers[9ab4]::block::ahci::{impl#13}::fmt)\nOver visited: DefId(0:611 ~ isomorphic_drivers[9ab4]::block::ahci::{impl#38}::fmt)\nOver visited: DefId(0:756 ~ isomorphic_drivers[9ab4]::net::ethernet::intel::e1000::{impl#16}::fmt)\nOver visited: DefId(0:925 ~ isomorphic_drivers[9ab4]::net::ethernet::intel::ixgbe::{impl#16}::fmt)\n"]}},{"file":"src/config.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_3/Godones/rCoreloongArch/kernel/src/config.rs (original lines from 12 to 12)\n-// pub const KERNEL_STACK_SIZE: usize = PAGE_SIZE; //内核栈大小\n+                                              // pub const KERNEL_STACK_SIZE: usize = PAGE_SIZE; //内核栈大小\n"]}},{"file":"src/loongarch/driver/rtc.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_3/Godones/rCoreloongArch/kernel/src/loongarch/driver/rtc.rs (original lines from 32 to 32)\n+\n"]}},{"file":"src/print.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_3/Godones/rCoreloongArch/kernel/src/print.rs (original lines from 31 to 31)\n-pub static CONSOLE: Lazy< Mutex<Console>> = Lazy::new(||Mutex::new(Console::new(UART)));\n+pub static CONSOLE: Lazy<Mutex<Console>> = Lazy::new(|| Mutex::new(Console::new(UART)));\n"]}}]},{"user":"Godones","repo":"rCoreloongArch","pkg":"user_lib","count":5,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=user_lib, checker=Lockbud\n// toolchain=nightly-2024-01-19, target=loongarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/user\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target loongarch64-unknown-none\n// timestamp=2025-01-10 14:04:33.441010655 +08:00:00\nwarning: /home/runner/check/batch_3/Godones/rCoreloongArch/pci/Cargo.toml: no edition set: defaulting to the 2015 edition while the latest is 2024\n   Compiling user_lib v0.1.0 (/home/runner/check/batch_3/Godones/rCoreloongArch/user)\nwarning: the feature `panic_info_message` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> user/src/lib.rs:3:12\n  |\n3 | #![feature(panic_info_message)]\n  |            ^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\nerror[E0599]: no method named `unwrap` found for struct `core::panic::PanicMessage` in the current scope\n --> user/src/lang_items.rs:5:36\n  |\n5 |     let err = panic_info.message().unwrap();\n  |                                    ^^^^^^ method not found in `PanicMessage<'_>`\n\nFor more information about this error, try `rustc --explain E0599`.\nwarning: `user_lib` (lib) generated 1 warning\nerror: could not compile `user_lib` (lib) due to 1 previous error; 1 warning emitted\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=user_lib, checker=Rapx\n// toolchain=nightly-2024-01-19, target=loongarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/user\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target loongarch64-unknown-none\n// timestamp=2025-01-10 14:05:04.488210031 +08:00:00\nwarning: /home/runner/check/batch_3/Godones/rCoreloongArch/pci/Cargo.toml: no edition set: defaulting to the 2015 edition while the latest is 2021\n   Compiling user_lib v0.1.0 (/home/runner/check/batch_3/Godones/rCoreloongArch/user)\n    Checking spin v0.7.1\n    Checking bitflags v1.3.2\n    Checking buddy_system_allocator v0.6.0\nwarning: the feature `panic_info_message` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> user/src/lib.rs:3:12\n  |\n3 | #![feature(panic_info_message)]\n  |            ^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\nerror[E0599]: no method named `unwrap` found for struct `core::panic::PanicMessage` in the current scope\n --> user/src/lang_items.rs:5:36\n  |\n5 |     let err = panic_info.message().unwrap();\n  |                                    ^^^^^^ method not found in `PanicMessage<'_>`\n\nFor more information about this error, try `rustc --explain E0599`.\nwarning: `user_lib` (lib) generated 1 warning\nerror: could not compile `user_lib` (lib) due to 1 previous error; 1 warning emitted\n06:05:05|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=user_lib, checker=SemverChecks\n// toolchain=nightly-2024-01-19, target=loongarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/user\n// cmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none\n// timestamp=2025-01-10 14:04:16.360899987 +08:00:00\n    Building user_lib v0.1.0 (current)\n       Built [   0.393s] (current)\n     Parsing user_lib v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: user_lib not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=user_lib, checker=Outdated\ntoolchain=nightly-2024-01-19, target=loongarch64-unknown-none\npkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/user\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-10 14:05:24.634817157 +08:00:00\n\nName                    Project  Compat  Latest  Kind    Platform\n----                    -------  ------  ------  ----    --------\nbitflags                1.3.2    ---     2.7.0   Normal  ---\nbuddy_system_allocator  0.6.0    ---     0.11.0  Normal  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=user_lib, checker=SemverChecks\ntoolchain=nightly-2024-01-19, target=loongarch64-unknown-none\npkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/user\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none\ntimestamp=2025-01-10 14:04:17.158562715 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building user_lib v0.1.0 (current)\n       Built [   0.393s] (current)\n     Parsing user_lib v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: user_lib not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"]}}]},{"user":"Godones","repo":"rCoreloongArch","pkg":"easy-fs-fuse","count":4,"raw_reports":[{"file":"/home/runner/check/batch_3/Godones/rCoreloongArch/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 724 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (75 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── clap 3.2.25\n    └── easy-fs-fuse 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 724,\n    \"last-commit\": \"63a2f39924f66ca89cf5761f299a8a244fe02543\",\n    \"last-updated\": \"2025-01-03T11:23:54-07:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 75\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) geiger","count":1,"kinds":{"Cargo":["// pkg_name=easy-fs-fuse, checker=Geiger\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/easy-fs-fuse\n// cmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2025-01-10 14:05:26.922392094 +08:00:00\nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nerror: Cargo(\"failed to parse lock file at: /home/runner/check/batch_3/Godones/rCoreloongArch/Cargo.lock\")\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=easy-fs-fuse, checker=Outdated\ntoolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/easy-fs-fuse\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-10 14:05:14.092460979 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nclap  3.2.25   ---     4.5.26  Normal  ---\n"]}},{"file":"[rap] Not supported to display yet.","count":1,"kinds":{"Rapx":["pkg=easy-fs-fuse, checker=Rapx\ntoolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/easy-fs-fuse\ncmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu\ntimestamp=2025-01-10 14:04:44.223352468 +08:00:00\n\nwarning: Use after free detected.\n   --> easy-fs/src/block_cache.rs:118:13\n    |\n118 |             self.queue.push_back((block_id, Arc::clone(&block_cache)));\n    |             ----------------------------------------------------------\n    |             |\n    |             Use after free detected.\n    |             Use after free detected.\n    |\n"]}}]},{"user":"Godones","repo":"rCoreloongArch","pkg":"vbe","count":4,"raw_reports":[{"file":"(virtual) geiger","count":1,"kinds":{"Cargo":["// pkg_name=vbe, checker=Geiger\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/vbe\n// cmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2025-01-10 14:05:27.037180347 +08:00:00\nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#libc@0.2.169 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#libc@0.2.169 \nerror: Cargo(\"failed to parse lock file at: /home/runner/check/batch_3/Godones/rCoreloongArch/Cargo.lock\")\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=vbe, checker=SemverChecks\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/vbe\n// cmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n// timestamp=2025-01-10 14:04:17.160299466 +08:00:00\n    Building vbe v0.1.0 (current)\n       Built [   2.512s] (current)\n     Parsing vbe v0.1.0 (current)\n      Parsed [   0.008s] (current)\nerror: No available baseline versions for vbe@0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=vbe, checker=Outdated\ntoolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/vbe\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-10 14:05:26.857150892 +08:00:00\n\nName                    Project  Compat  Latest  Kind    Platform\n----                    -------  ------  ------  ----    --------\nembedded-graphics       0.7.1    ---     0.8.1   Normal  ---\nembedded-graphics-core  0.3.3    ---     0.4.0   Normal  ---\ntinybmp                 0.3.3    ---     0.6.0   Normal  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=vbe, checker=SemverChecks\ntoolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/vbe\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\ntimestamp=2025-01-10 14:04:20.141617454 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building vbe v0.1.0 (current)\n       Built [   2.512s] (current)\n     Parsing vbe v0.1.0 (current)\n      Parsed [   0.008s] (current)\nerror: No available baseline versions for vbe@0.1.0\n"]}}]},{"user":"Godones","repo":"rCoreloongArch","pkg":"easy-fs","count":3,"raw_reports":[{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=easy-fs, checker=SemverChecks\n// toolchain=nightly-2024-01-19, target=loongarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/easy-fs\n// cmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none\n// timestamp=2025-01-10 14:04:11.514768848 +08:00:00\n    Building easy-fs v0.1.0 (current)\n       Built [   0.767s] (current)\n     Parsing easy-fs v0.1.0 (current)\n      Parsed [   0.002s] (current)\n    Building easy-fs v0.1.0 (baseline)\nerror: running cargo-doc on crate 'easy-fs' failed with output:\n-----\n Documenting easy-fs v0.1.0\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `loongarch64-unknown-none` target may not support the standard library\n  = note: `std` is required by `easy_fs` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:1:5\n  |\n1 | use std::{fs::OpenOptions, io::{Read, Seek, SeekFrom, Write}, path::Path};\n  |     ^^^ can't find crate\n  |\n  = note: the `loongarch64-unknown-none` target may not support the standard library\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:53:3\n   |\n53 | #[derive(Clone, Copy, PartialEq)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `assert_ne` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:48:9\n   |\n48 |         assert_ne!(n, 0);\n   |         ^^^^^^^^^\n   |\nhelp: consider importing this macro\n   |\n1  + use core::assert_ne;\n   |\n\nerror: cannot find macro `assert_ne` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:42:9\n   |\n42 |         assert_ne!(n, 0);\n   |         ^^^^^^^^^\n   |\nhelp: consider importing this macro\n   |\n1  + use core::assert_ne;\n   |\n\nerror[E0463]: can't find crate for `std`\n --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:4:12\n  |\n4 |     file : std::fs::File,\n  |            ^^^ can't find crate\n  |\n  = note: the `loongarch64-unknown-none` target may not support the standard library\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0412]: cannot find type `String` in this scope\n --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:8:25\n  |\n8 |     pub fn open(path : &String, option : Option)->Self {\n  |                         ^^^^^^ not found in this scope\n\nerror[E0412]: cannot find type `String` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:15:27\n   |\n15 |     pub fn exists(path : &String)->bool {\n   |                           ^^^^^^ not found in this scope\n\nerror[E0412]: cannot find type `String` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:19:28\n   |\n19 |     pub fn is_file(path : &String)->bool {\n   |                            ^^^^^^ not found in this scope\n\nerror: requires `legacy_receiver` lang_item\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:25:17\n   |\n25 |     pub fn size(&mut self)->usize {\n   |                 ^^^^^^^^^\n\nerror: requires `legacy_receiver` lang_item\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:32:21\n   |\n32 |     pub fn position(&mut self)->usize {\n   |                     ^^^^^^^^^\n\nerror: requires `legacy_receiver` lang_item\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:36:17\n   |\n36 |     pub fn seek(&mut self, pos : SeekFrom)->usize {\n   |                 ^^^^^^^^^\n\nerror: requires `legacy_receiver` lang_item\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:40:17\n   |\n40 |     pub fn read(&mut self, buf : &mut [u8])->usize {\n   |                 ^^^^^^^^^\n\nerror: requires `legacy_receiver` lang_item\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:46:18\n   |\n46 |     pub fn write(&mut self, buf : &[u8])->usize {\n   |                  ^^^^^^^^^\n\nerror: requires `legacy_receiver` lang_item\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:61:17\n   |\n61 |     pub fn read(&self)->bool {\n   |                 ^^^^^\n\nerror: requires `legacy_receiver` lang_item\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:65:18\n   |\n65 |     pub fn write(&self)->bool {\n   |                  ^^^^^\n\nSome errors have detailed explanations: E0412, E0463.\nFor more information about an error, try `rustc --explain E0412`.\nerror: could not document `easy-fs`\n\n-----\n\nerror: failed to build rustdoc for crate easy-fs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add easy-fs@=0.1.0 &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate easy-fs v0.1.0\n"]}},{"file":"[rap] Not supported to display yet.","count":1,"kinds":{"Rapx":["pkg=easy-fs, checker=Rapx\ntoolchain=nightly-2024-01-19, target=loongarch64-unknown-none\npkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/easy-fs\ncmd=cargo +nightly-2024-10-12 rapx -F -M -- --target loongarch64-unknown-none\ntimestamp=2025-01-10 14:04:38.729750029 +08:00:00\n\nwarning: Use after free detected.\n   --> easy-fs/src/block_cache.rs:118:13\n    |\n118 |             self.queue.push_back((block_id, Arc::clone(&block_cache)));\n    |             ----------------------------------------------------------\n    |             |\n    |             Use after free detected.\n    |             Use after free detected.\n    |\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=easy-fs, checker=SemverChecks\ntoolchain=nightly-2024-01-19, target=loongarch64-unknown-none\npkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/easy-fs\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none\ntimestamp=2025-01-10 14:04:13.067875389 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building easy-fs v0.1.0 (current)\n       Built [   0.767s] (current)\n     Parsing easy-fs v0.1.0 (current)\n      Parsed [   0.002s] (current)\n    Building easy-fs v0.1.0 (baseline)\nerror: running cargo-doc on crate 'easy-fs' failed with output:\n-----\n Documenting easy-fs v0.1.0\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `loongarch64-unknown-none` target may not support the standard library\n  = note: `std` is required by `easy_fs` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:1:5\n  |\n1 | use std::{fs::OpenOptions, io::{Read, Seek, SeekFrom, Write}, path::Path};\n  |     ^^^ can't find crate\n  |\n  = note: the `loongarch64-unknown-none` target may not support the standard library\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:53:3\n   |\n53 | #[derive(Clone, Copy, PartialEq)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `assert_ne` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:48:9\n   |\n48 |         assert_ne!(n, 0);\n   |         ^^^^^^^^^\n   |\nhelp: consider importing this macro\n   |\n1  + use core::assert_ne;\n   |\n\nerror: cannot find macro `assert_ne` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:42:9\n   |\n42 |         assert_ne!(n, 0);\n   |         ^^^^^^^^^\n   |\nhelp: consider importing this macro\n   |\n1  + use core::assert_ne;\n   |\n\nerror[E0463]: can't find crate for `std`\n --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:4:12\n  |\n4 |     file : std::fs::File,\n  |            ^^^ can't find crate\n  |\n  = note: the `loongarch64-unknown-none` target may not support the standard library\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0412]: cannot find type `String` in this scope\n --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:8:25\n  |\n8 |     pub fn open(path : &String, option : Option)->Self {\n  |                         ^^^^^^ not found in this scope\n\nerror[E0412]: cannot find type `String` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:15:27\n   |\n15 |     pub fn exists(path : &String)->bool {\n   |                           ^^^^^^ not found in this scope\n\nerror[E0412]: cannot find type `String` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:19:28\n   |\n19 |     pub fn is_file(path : &String)->bool {\n   |                            ^^^^^^ not found in this scope\n\nerror: requires `legacy_receiver` lang_item\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:25:17\n   |\n25 |     pub fn size(&mut self)->usize {\n   |                 ^^^^^^^^^\n\nerror: requires `legacy_receiver` lang_item\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:32:21\n   |\n32 |     pub fn position(&mut self)->usize {\n   |                     ^^^^^^^^^\n\nerror: requires `legacy_receiver` lang_item\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:36:17\n   |\n36 |     pub fn seek(&mut self, pos : SeekFrom)->usize {\n   |                 ^^^^^^^^^\n\nerror: requires `legacy_receiver` lang_item\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:40:17\n   |\n40 |     pub fn read(&mut self, buf : &mut [u8])->usize {\n   |                 ^^^^^^^^^\n\nerror: requires `legacy_receiver` lang_item\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:46:18\n   |\n46 |     pub fn write(&mut self, buf : &[u8])->usize {\n   |                  ^^^^^^^^^\n\nerror: requires `legacy_receiver` lang_item\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:61:17\n   |\n61 |     pub fn read(&self)->bool {\n   |                 ^^^^^\n\nerror: requires `legacy_receiver` lang_item\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/easy-fs-0.1.0/src/file.rs:65:18\n   |\n65 |     pub fn write(&self)->bool {\n   |                  ^^^^^\n\nSome errors have detailed explanations: E0412, E0463.\nFor more information about an error, try `rustc --explain E0412`.\nerror: could not document `easy-fs`\n\n-----\n\nerror: failed to build rustdoc for crate easy-fs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add easy-fs@=0.1.0 &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate easy-fs v0.1.0\n"]}}]},{"user":"Godones","repo":"rCoreloongArch","pkg":"isomorphic_drivers","count":3,"raw_reports":[{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=isomorphic_drivers, checker=SemverChecks\n// toolchain=nightly-2024-01-19, target=loongarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/isomorphic_drivers\n// cmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none\n// timestamp=2025-01-10 14:04:13.069748154 +08:00:00\n    Building isomorphic_drivers v0.1.0 (current)\n       Built [   0.807s] (current)\n     Parsing isomorphic_drivers v0.1.0 (current)\n      Parsed [   0.005s] (current)\nerror: isomorphic_drivers not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=isomorphic_drivers, checker=Outdated\ntoolchain=nightly-2024-01-19, target=loongarch64-unknown-none\npkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/isomorphic_drivers\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-10 14:05:16.203133437 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  1.3.2    ---     2.7.0   Normal  ---\nvolatile  0.3.0    ---     0.6.1   Normal  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=isomorphic_drivers, checker=SemverChecks\ntoolchain=nightly-2024-01-19, target=loongarch64-unknown-none\npkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/isomorphic_drivers\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none\ntimestamp=2025-01-10 14:04:14.332611538 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building isomorphic_drivers v0.1.0 (current)\n       Built [   0.807s] (current)\n     Parsing isomorphic_drivers v0.1.0 (current)\n      Parsed [   0.005s] (current)\nerror: isomorphic_drivers not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"]}}]},{"user":"Godones","repo":"rCoreloongArch","pkg":"stack_trace","count":3,"raw_reports":[{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=stack_trace, checker=SemverChecks\n// toolchain=nightly-2024-01-19, target=loongarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/stack_trace\n// cmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none\n// timestamp=2025-01-10 14:04:15.481143812 +08:00:00\n    Building stack_trace v0.1.0 (current)\n       Built [   0.466s] (current)\n     Parsing stack_trace v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: stack_trace not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=stack_trace, checker=Outdated\ntoolchain=nightly-2024-01-19, target=loongarch64-unknown-none\npkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/stack_trace\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-10 14:05:22.507997823 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nxmas-elf  0.8.0    ---     0.9.1   Normal  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=stack_trace, checker=SemverChecks\ntoolchain=nightly-2024-01-19, target=loongarch64-unknown-none\npkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/stack_trace\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none\ntimestamp=2025-01-10 14:04:16.358900466 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building stack_trace v0.1.0 (current)\n       Built [   0.466s] (current)\n     Parsing stack_trace v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: stack_trace not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"]}}]},{"user":"Godones","repo":"rCoreloongArch","pkg":"pci","count":2,"raw_reports":[{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=pci, checker=Outdated\ntoolchain=nightly-2024-01-19, target=loongarch64-unknown-none\npkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/pci\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-10 14:05:20.383959453 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  1.3.2    ---     2.7.0   Normal  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=pci, checker=SemverChecks\ntoolchain=nightly-2024-01-19, target=loongarch64-unknown-none\npkg_dir=/home/runner/check/batch_3/Godones/rCoreloongArch/pci\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none\ntimestamp=2025-01-10 14:04:15.480110388 +08:00:00\n\n\nstdout:\n\n--- failure constructible_struct_adds_field: externally-constructible struct adds field ---\n\nDescription:\nA pub struct constructible with a struct literal has a new pub field. Existing struct literals must be updated to include the new field.\n        ref: https://doc.rust-lang.org/reference/expressions/struct-expr.html\n       impl: https://github.com/obi1kenobi/cargo-semver-checks/tree/v0.38.0/src/lints/constructible_struct_adds_field.ron\n\nFailed in:\n  field PCIDevice.command in /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:228\n  field PCIDevice.status in /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:229\n  field PCIDevice.cache_line_size in /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:230\n  field PCIDevice.latency_timer in /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:231\n  field PCIDevice.multifunction in /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:232\n  field PCIDevice.bist_capable in /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:233\n  field PCIDevice.kind in /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:235\n  field PCIDevice.pic_interrupt_line in /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:236\n  field PCIDevice.interrupt_pin in /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:237\n\n--- failure constructible_struct_adds_private_field: struct no longer constructible due to new private field ---\n\nDescription:\nA struct constructible with a struct literal has a new non-public field. It can no longer be constructed using a struct literal outside of its crate.\n        ref: https://doc.rust-lang.org/reference/expressions/struct-expr.html\n       impl: https://github.com/obi1kenobi/cargo-semver-checks/tree/v0.38.0/src/lints/constructible_struct_adds_private_field.ron\n\nFailed in:\n  field Location.base_addr in /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:132\n\n--- failure enum_tuple_variant_field_added: pub enum tuple variant field added ---\n\nDescription:\nAn enum's exhaustive tuple variant has a new field, which has to be included when constructing or matching on this variant.\n        ref: https://doc.rust-lang.org/reference/attributes/type_system.html#the-non_exhaustive-attribute\n       impl: https://github.com/obi1kenobi/cargo-semver-checks/tree/v0.38.0/src/lints/enum_tuple_variant_field_added.ron\n\nFailed in:\n  field 1 of variant BAR::IO in /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:336\n\n--- failure enum_variant_added: enum variant added on exhaustive enum ---\n\nDescription:\nA publicly-visible enum without #[non_exhaustive] has a new variant.\n        ref: https://doc.rust-lang.org/cargo/reference/semver.html#enum-variant-new\n       impl: https://github.com/obi1kenobi/cargo-semver-checks/tree/v0.38.0/src/lints/enum_variant_added.ron\n\nFailed in:\n  variant CSpaceAccessMethod:MemoryMapped in /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:54\n\n--- failure enum_variant_missing: pub enum variant removed or renamed ---\n\nDescription:\nA publicly-visible enum has at least one variant that is no longer available under its prior name. It may have been renamed or removed entirely.\n        ref: https://doc.rust-lang.org/cargo/reference/semver.html#item-remove\n       impl: https://github.com/obi1kenobi/cargo-semver-checks/tree/v0.38.0/src/lints/enum_variant_missing.ron\n\nFailed in:\n  variant CSpaceAccessMethod::IO, previously in file /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pci-0.0.1/src/lib.rs:56\n\n--- failure function_parameter_count_changed: pub fn parameter count changed ---\n\nDescription:\nA publicly-visible function now takes a different number of parameters.\n        ref: https://doc.rust-lang.org/cargo/reference/semver.html#fn-change-arity\n       impl: https://github.com/obi1kenobi/cargo-semver-checks/tree/v0.38.0/src/lints/function_parameter_count_changed.ron\n\nFailed in:\n  pci::scan_bus now takes 3 parameters instead of 2, in /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:587\n\n--- failure function_unsafe_added: pub fn became unsafe ---\n\nDescription:\nA publicly-visible function became `unsafe`, so calling it now requires an `unsafe` block.\n        ref: https://doc.rust-lang.org/book/ch19-01-unsafe-rust.html#calling-an-unsafe-function-or-method\n       impl: https://github.com/obi1kenobi/cargo-semver-checks/tree/v0.38.0/src/lints/function_unsafe_added.ron\n\nFailed in:\n  function pci::scan_bus in file /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:587\n  function pci::probe_function in file /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:450\n\n--- failure inherent_method_unsafe_added: pub method became unsafe ---\n\nDescription:\nA publicly-visible method or associated fn became `unsafe`, so calling it now requires an `unsafe` block.\n        ref: https://doc.rust-lang.org/book/ch19-01-unsafe-rust.html#calling-an-unsafe-function-or-method\n       impl: https://github.com/obi1kenobi/cargo-semver-checks/tree/v0.38.0/src/lints/inherent_method_unsafe_added.ron\n\nFailed in:\n  CSpaceAccessMethod::read8 in /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:60\n  CSpaceAccessMethod::read16 in /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:66\n  CSpaceAccessMethod::read32 in /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:72\n  CSpaceAccessMethod::write8 in /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:86\n  CSpaceAccessMethod::write16 in /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:99\n  CSpaceAccessMethod::write32 in /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:113\n  BAR::decode in /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:340\n\n--- failure trait_method_unsafe_added: pub trait method became unsafe ---\n\nDescription:\nA publicly-visible trait method became `unsafe`, so implementing it now requires an `unsafe` qualifier and calling it now requires an `unsafe` block.\n        ref: https://doc.rust-lang.org/book/ch19-01-unsafe-rust.html#calling-an-unsafe-function-or-method\n       impl: https://github.com/obi1kenobi/cargo-semver-checks/tree/v0.38.0/src/lints/trait_method_unsafe_added.ron\n\nFailed in:\n  trait method <pci::PortOps>::read8 in file /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:41\n  trait method <pci::PortOps>::read16 in file /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:42\n  trait method <pci::PortOps>::read32 in file /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:43\n  trait method <pci::PortOps>::write8 in file /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:44\n  trait method <pci::PortOps>::write16 in file /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:45\n  trait method <pci::PortOps>::write32 in file /home/runner/check/batch_3/Godones/rCoreloongArch/pci/src/lib.rs:46\n\nstderr:\n    Building pci v0.0.1 (current)\n       Built [   0.316s] (current)\n     Parsing pci v0.0.1 (current)\n      Parsed [   0.004s] (current)\n    Building pci v0.0.1 (baseline)\n       Built [   0.232s] (baseline)\n     Parsing pci v0.0.1 (baseline)\n      Parsed [   0.002s] (baseline)\n    Checking pci v0.0.1 -> v0.0.1 (no change)\n     Checked [   0.016s] 120 checks: 111 pass, 9 fail, 0 warn, 0 skip\n\n     Summary semver requires new major version: 9 major and 0 minor checks failed\n    Finished [   1.015s] pci\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Semver Violation","Audit","Mirai","Rapx","Rudra","Lockbud(Probably)","Lockbud(Possibly)","Outdated","Geiger","Unformatted"]}