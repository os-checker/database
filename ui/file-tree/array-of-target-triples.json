[
  {
    "target_triple": "aarch64-unknown-none",
    "data": {
      "kinds_order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Unformatted"
      ],
      "data": [
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "arceos_api",
          "count": 11,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "clippy",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=arceos_api, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/api/arceos_api\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n Downloading crates ...\n  Downloaded arm_gicv2 v0.1.0\n  Downloaded tock-registers v0.8.1\n  Downloaded aarch64-cpu v9.4.0\n  Downloaded arm_pl011 v0.1.0\n  Downloaded dw_apb_uart v0.1.0\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n    Checking memory_addr v0.3.0\n    Checking kernel_guard v0.1.1\n    Checking aarch64-cpu v9.4.0\n    Checking kspin v0.1.0\n    Checking bitflags v2.6.0\n    Checking arm_pl011 v0.1.0\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\n    Checking dw_apb_uart v0.1.0\n    Checking arm_gicv2 v0.1.0\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking handler_table v0.1.1\n    Checking int_ratio v0.1.0\n    Checking lazyinit v0.2.1\n    Checking static_assertions v1.1.0\n   Compiling num-traits v0.2.16\n   Compiling axerrno v0.1.0\n    Checking axio v0.1.0\n    Checking chrono v0.4.38\n    Checking page_table_entry v0.4.0\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\n",
                  "// pkg_name=arceos_api, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/api/arceos_api\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n    Checking memory_addr v0.3.0\n    Checking kernel_guard v0.1.1\n    Checking aarch64-cpu v9.4.0\n    Checking kspin v0.1.0\n    Checking bitflags v2.6.0\n    Checking arm_gicv2 v0.1.0\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\n    Checking dw_apb_uart v0.1.0\n    Checking arm_pl011 v0.1.0\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking int_ratio v0.1.0\n    Checking handler_table v0.1.1\n    Checking lazyinit v0.2.1\n    Checking static_assertions v1.1.0\n   Compiling num-traits v0.2.16\n   Compiling axerrno v0.1.0\n    Checking axio v0.1.0\n    Checking chrono v0.4.38\n    Checking page_table_entry v0.4.0\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\n"
                ]
              }
            },
            {
              "file": "lockbud",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=arceos_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/api/arceos_api\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling tock-registers v0.8.1\n   Compiling cfg-if v1.0.0\n   Compiling log v0.4.21\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling bitflags v2.6.0\n   Compiling kernel_guard v0.1.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling kspin v0.1.0\n   Compiling memory_addr v0.3.0\n   Compiling arm_pl011 v0.1.0\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling dw_apb_uart v0.1.0\n   Compiling arm_gicv2 v0.1.0\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling lazyinit v0.2.1\n   Compiling int_ratio v0.1.0\n   Compiling handler_table v0.1.1\n   Compiling static_assertions v1.1.0\n   Compiling num-traits v0.2.16\n   Compiling axerrno v0.1.0\n   Compiling axio v0.1.0\n   Compiling chrono v0.4.38\n   Compiling page_table_entry v0.4.0\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\n",
                  "// pkg_name=arceos_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/api/arceos_api\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n   Compiling tock-registers v0.8.1\n   Compiling cfg-if v1.0.0\n   Compiling log v0.4.21\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling bitflags v2.6.0\n   Compiling kernel_guard v0.1.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling kspin v0.1.0\n   Compiling memory_addr v0.3.0\n   Compiling arm_gicv2 v0.1.0\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling arm_pl011 v0.1.0\n   Compiling dw_apb_uart v0.1.0\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling static_assertions v1.1.0\n   Compiling int_ratio v0.1.0\n   Compiling handler_table v0.1.1\n   Compiling lazyinit v0.2.1\n   Compiling num-traits v0.2.16\n   Compiling axerrno v0.1.0\n   Compiling axio v0.1.0\n   Compiling chrono v0.4.38\n   Compiling page_table_entry v0.4.0\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axdisplay",
          "count": 11,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "clippy",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axdisplay, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/modules/axdisplay\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking kspin v0.1.0\n    Checking byteorder v1.4.3\n    Checking axdriver_base v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling axdriver v0.1.0 (/ci/arceos/modules/axdriver)\n    Checking axdriver_display v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\n    Checking zerocopy v0.7.35\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n",
                  "// pkg_name=axdisplay, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/modules/axdisplay\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking byteorder v1.4.3\n    Checking axdriver_base v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling axdriver v0.1.0 (/ci/arceos/modules/axdriver)\n    Checking axdriver_display v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\n    Checking zerocopy v0.7.35\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
                ]
              }
            },
            {
              "file": "lockbud",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axdisplay, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/modules/axdisplay\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling byteorder v1.4.3\n   Compiling kspin v0.1.0\n   Compiling axdriver_base v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling axdriver v0.1.0 (/ci/arceos/modules/axdriver)\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling axdriver_display v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling zerocopy v0.7.35\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n",
                  "// pkg_name=axdisplay, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/modules/axdisplay\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling kspin v0.1.0\n   Compiling byteorder v1.4.3\n   Compiling axdriver_base v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling axdriver v0.1.0 (/ci/arceos/modules/axdriver)\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling axdriver_display v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling zerocopy v0.7.35\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axdma",
          "count": 11,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "clippy",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axdma, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/modules/axdma\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n    Checking rlsf v0.2.1\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n    Checking kspin v0.1.0\n    Checking linkme v0.3.27\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking page_table_multiarch v0.4.0\n    Checking allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n    Checking axalloc v0.1.0 (/ci/arceos/modules/axalloc)\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\n",
                  "// pkg_name=axdma, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/modules/axdma\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling axerrno v0.1.0\n    Checking rlsf v0.2.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n    Checking kspin v0.1.0\n    Checking linkme v0.3.27\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking page_table_multiarch v0.4.0\n    Checking allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n    Checking axalloc v0.1.0 (/ci/arceos/modules/axalloc)\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\n"
                ]
              }
            },
            {
              "file": "lockbud",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axdma, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/modules/axdma\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling kernel_guard v0.1.1\n   Compiling rlsf v0.2.1\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling kspin v0.1.0\n   Compiling linkme v0.3.27\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling page_table_multiarch v0.4.0\n   Compiling allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n   Compiling axalloc v0.1.0 (/ci/arceos/modules/axalloc)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\n",
                  "// pkg_name=axdma, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/modules/axdma\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling kernel_guard v0.1.1\n   Compiling axerrno v0.1.0\n   Compiling rlsf v0.2.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling page_table_multiarch v0.4.0\n   Compiling allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n   Compiling axalloc v0.1.0 (/ci/arceos/modules/axalloc)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axdriver",
          "count": 11,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "clippy",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axdriver, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/modules/axdriver\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n    Checking zerocopy v0.7.35\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling axdriver v0.1.0 (/ci/arceos/modules/axdriver)\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n",
                  "// pkg_name=axdriver, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/modules/axdriver\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n    Checking zerocopy v0.7.35\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling axdriver v0.1.0 (/ci/arceos/modules/axdriver)\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
                ]
              }
            },
            {
              "file": "lockbud",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axdriver, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/modules/axdriver\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling zerocopy v0.7.35\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling axdriver v0.1.0 (/ci/arceos/modules/axdriver)\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n",
                  "// pkg_name=axdriver, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/modules/axdriver\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling zerocopy v0.7.35\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling axdriver v0.1.0 (/ci/arceos/modules/axdriver)\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axfeat",
          "count": 11,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "clippy",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axfeat, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/api/axfeat\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling num-traits v0.2.16\n   Compiling percpu v0.1.3\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n",
                  "// pkg_name=axfeat, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/api/axfeat\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling num-traits v0.2.16\n   Compiling percpu v0.1.3\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
                ]
              }
            },
            {
              "file": "lockbud",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axfeat, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/api/axfeat\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling num-traits v0.2.16\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n",
                  "// pkg_name=axfeat, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/api/axfeat\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling num-traits v0.2.16\n   Compiling percpu v0.1.3\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axfs",
          "count": 11,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "clippy",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axfs, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/modules/axfs\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n   Compiling axerrno v0.1.0\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n   Compiling lock_api v0.4.10\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\n    Checking zerocopy v0.7.35\n    Checking axfs_vfs v0.1.1\n   Compiling axdriver v0.1.0 (/ci/arceos/modules/axdriver)\n    Checking axdriver_block v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n    Checking axio v0.1.0\n    Checking spin v0.9.8\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking axfs_devfs v0.1.1\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n",
                  "// pkg_name=axfs, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/modules/axfs\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n   Compiling axerrno v0.1.0\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling lock_api v0.4.10\n    Checking zerocopy v0.7.35\n    Checking axfs_vfs v0.1.1\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling axdriver v0.1.0 (/ci/arceos/modules/axdriver)\n    Checking axdriver_block v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n    Checking axio v0.1.0\n    Checking spin v0.9.8\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking axfs_devfs v0.1.1\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
                ]
              }
            },
            {
              "file": "lockbud",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axfs, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/modules/axfs\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axerrno v0.1.0\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling lock_api v0.4.10\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling zerocopy v0.7.35\n   Compiling axfs_vfs v0.1.1\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n   Compiling spin v0.9.8\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n",
                  "// pkg_name=axfs, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/modules/axfs\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling kernel_guard v0.1.1\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling lock_api v0.4.10\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling zerocopy v0.7.35\n   Compiling axfs_vfs v0.1.1\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n   Compiling spin v0.9.8\n   Compiling axdriver v0.1.0 (/ci/arceos/modules/axdriver)\n   Compiling axdriver_block v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axhal",
          "count": 11,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "clippy",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axhal, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/modules/axhal\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\n",
                  "// pkg_name=axhal, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/modules/axhal\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\n"
                ]
              }
            },
            {
              "file": "lockbud",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axhal, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/modules/axhal\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\n",
                  "// pkg_name=axhal, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/modules/axhal\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axmm",
          "count": 11,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "clippy",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axmm, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/modules/axmm\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n    Checking rlsf v0.2.1\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n    Checking kspin v0.1.0\n    Checking linkme v0.3.27\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n    Checking axalloc v0.1.0 (/ci/arceos/modules/axalloc)\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\n",
                  "// pkg_name=axmm, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/modules/axmm\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n    Checking rlsf v0.2.1\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n    Checking axalloc v0.1.0 (/ci/arceos/modules/axalloc)\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\n"
                ]
              }
            },
            {
              "file": "lockbud",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axmm, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/modules/axmm\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling kernel_guard v0.1.1\n   Compiling axerrno v0.1.0\n   Compiling rlsf v0.2.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n   Compiling axalloc v0.1.0 (/ci/arceos/modules/axalloc)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\n",
                  "// pkg_name=axmm, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/modules/axmm\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling kernel_guard v0.1.1\n   Compiling rlsf v0.2.1\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling kspin v0.1.0\n   Compiling linkme v0.3.27\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n   Compiling axalloc v0.1.0 (/ci/arceos/modules/axalloc)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axnet",
          "count": 11,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "clippy",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axnet, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/modules/axnet\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n   Compiling lock_api v0.4.10\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking zerocopy v0.7.35\n   Compiling axerrno v0.1.0\n   Compiling heapless v0.7.16\n    Checking hash32 v0.2.1\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\n    Checking stable_deref_trait v1.2.0\n    Checking spin v0.9.8\n    Checking axdriver_net v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n",
                  "// pkg_name=axnet, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/modules/axnet\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n   Compiling lock_api v0.4.10\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking zerocopy v0.7.35\n   Compiling axerrno v0.1.0\n   Compiling heapless v0.7.16\n    Checking hash32 v0.2.1\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\n    Checking stable_deref_trait v1.2.0\n   Compiling axdriver v0.1.0 (/ci/arceos/modules/axdriver)\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n    Checking spin v0.9.8\n    Checking axdriver_net v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
                ]
              }
            },
            {
              "file": "lockbud",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axnet, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/modules/axnet\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling kspin v0.1.0\n   Compiling lock_api v0.4.10\n   Compiling zerocopy v0.7.35\n   Compiling axerrno v0.1.0\n   Compiling heapless v0.7.16\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling hash32 v0.2.1\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n   Compiling stable_deref_trait v1.2.0\n   Compiling axdriver v0.1.0 (/ci/arceos/modules/axdriver)\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling spin v0.9.8\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n",
                  "// pkg_name=axnet, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/modules/axnet\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling lock_api v0.4.10\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling zerocopy v0.7.35\n   Compiling axerrno v0.1.0\n   Compiling heapless v0.7.16\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling hash32 v0.2.1\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n   Compiling stable_deref_trait v1.2.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling axdriver v0.1.0 (/ci/arceos/modules/axdriver)\n   Compiling spin v0.9.8\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axruntime",
          "count": 11,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "clippy",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axruntime, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/modules/axruntime\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling num-traits v0.2.16\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n",
                  "// pkg_name=axruntime, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/modules/axruntime\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling num-traits v0.2.16\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
                ]
              }
            },
            {
              "file": "lockbud",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axruntime, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/modules/axruntime\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling num-traits v0.2.16\n   Compiling percpu v0.1.3\n   Compiling kspin v0.1.0\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n",
                  "// pkg_name=axruntime, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/modules/axruntime\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling num-traits v0.2.16\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axstd",
          "count": 11,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "clippy",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axstd, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/ulib/axstd\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking kspin v0.1.0\n   Compiling num-traits v0.2.16\n   Compiling axerrno v0.1.0\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\n    Checking axio v0.1.0\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n",
                  "// pkg_name=axstd, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/ulib/axstd\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling num-traits v0.2.16\n    Checking kspin v0.1.0\n   Compiling axerrno v0.1.0\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\n    Checking axio v0.1.0\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
                ]
              }
            },
            {
              "file": "lockbud",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axstd, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/ulib/axstd\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling kspin v0.1.0\n   Compiling num-traits v0.2.16\n   Compiling axerrno v0.1.0\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling axio v0.1.0\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n",
                  "// pkg_name=axstd, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/ulib/axstd\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling kspin v0.1.0\n   Compiling num-traits v0.2.16\n   Compiling axerrno v0.1.0\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling axio v0.1.0\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axsync",
          "count": 11,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "clippy",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axsync, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/modules/axsync\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\n",
                  "// pkg_name=axsync, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/modules/axsync\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\n"
                ]
              }
            },
            {
              "file": "lockbud",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axsync, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/modules/axsync\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\n",
                  "// pkg_name=axsync, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/modules/axsync\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axtask",
          "count": 11,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "clippy",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axtask, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/modules/axtask\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\n",
                  "// pkg_name=axtask, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/modules/axtask\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\n"
                ]
              }
            },
            {
              "file": "lockbud",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axtask, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/modules/axtask\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\n",
                  "// pkg_name=axtask, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/modules/axtask\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "arceos_posix_api",
          "count": 8,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            },
            {
              "file": "Not supported to display yet.",
              "count": 1,
              "kinds": {
                "Lockbud(Possibly)": [
                  "[2024-09-04T00:43:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-04T00:43:10Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axlibc",
          "count": 8,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            },
            {
              "file": "Not supported to display yet.",
              "count": 1,
              "kinds": {
                "Lockbud(Possibly)": [
                  "[2024-09-04T00:46:50Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-04T00:46:50Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "mingo",
          "count": 4,
          "raw_reports": [
            {
              "file": "src/main.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n",
                  "error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n",
                  "error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"
                ]
              }
            },
            {
              "file": "src/cpu.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `nop`\n  --> src/cpu.rs:16:20\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |                    ^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axalloc",
          "count": 1,
          "raw_reports": [
            {
              "file": "modules/axalloc/src/lib.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: you should consider adding a `Default` implementation for `GlobalAllocator`\n  --> modules/axalloc/src/lib.rs:57:5\n   |\n57 | /     pub const fn new() -> Self {\n58 | |         Self {\n59 | |             balloc: SpinNoIrq::new(DefaultByteAllocator::new()),\n60 | |             palloc: SpinNoIrq::new(BitmapPageAllocator::new()),\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n55 + impl Default for GlobalAllocator {\n56 +     fn default() -> Self {\n57 +         Self::new()\n58 +     }\n59 + }\n   |\n\n"
                ]
              }
            }
          ]
        }
      ]
    }
  },
  {
    "target_triple": "aarch64-unknown-none-softfloat",
    "data": {
      "kinds_order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Unformatted"
      ],
      "data": [
        {
          "user": "kern-crates",
          "repo": "ByteOS",
          "package": "kernel",
          "count": 140,
          "raw_reports": [
            {
              "file": "kernel/src/syscall/consts.rs",
              "count": 55,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: name `EPERM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:21:5\n   |\n21 |     EPERM = 1,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eperm`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOENT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:23:5\n   |\n23 |     ENOENT = 2,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoent`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ESRCH` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:25:5\n   |\n25 |     ESRCH = 3,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Esrch`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EINTR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:27:5\n   |\n27 |     EINTR = 4,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eintr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:29:5\n   |\n29 |     EIO = 5,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Eio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENXIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:31:5\n   |\n31 |     ENXIO = 6,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enxio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOEXEC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:35:5\n   |\n35 |     ENOEXEC = 8,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoexec`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EBADF` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:37:5\n   |\n37 |     EBADF = 9,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebadf`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ECHILD` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:39:5\n   |\n39 |     ECHILD = 10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Echild`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EAGAIN` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:41:5\n   |\n41 |     EAGAIN = 11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eagain`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOMEM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:43:5\n   |\n43 |     ENOMEM = 12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enomem`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EACCES` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:45:5\n   |\n45 |     EACCES = 13,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eacces`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EFAULT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:47:5\n   |\n47 |     EFAULT = 14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efault`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOTBLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:49:5\n   |\n49 |     ENOTBLK = 15,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotblk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EBUSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:51:5\n   |\n51 |     EBUSY = 16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebusy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EEXIST` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:53:5\n   |\n53 |     EEXIST = 17,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eexist`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EXDEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:55:5\n   |\n55 |     EXDEV = 18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Exdev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENODEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:57:5\n   |\n57 |     ENODEV = 19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enodev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOTDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:59:5\n   |\n59 |     ENOTDIR = 20,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EISDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:61:5\n   |\n61 |     EISDIR = 21,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eisdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EINVAL` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:63:5\n   |\n63 |     EINVAL = 22,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Einval`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:65:5\n   |\n65 |     ENFILE = 23,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EMFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:67:5\n   |\n67 |     EMFILE = 24,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOTTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:69:5\n   |\n69 |     ENOTTY = 25,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ETXTBSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:71:5\n   |\n71 |     ETXTBSY = 26,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxtbsy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EFBIG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:73:5\n   |\n73 |     EFBIG = 27,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efbig`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOSPC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:75:5\n   |\n75 |     ENOSPC = 28,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enospc`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ESPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:77:5\n   |\n77 |     ESPIPE = 29,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Espipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EROFS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:79:5\n   |\n79 |     EROFS = 30,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erofs`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EMLINK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:81:5\n   |\n81 |     EMLINK = 31,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emlink`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:83:5\n   |\n83 |     EPIPE = 32,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EDOM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:85:5\n   |\n85 |     EDOM = 33,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Edom`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ERANGE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:87:5\n   |\n87 |     ERANGE = 34,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erange`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EDEADLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:89:5\n   |\n89 |     EDEADLK = 35,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edeadlk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENAMETOOLONG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:91:5\n   |\n91 |     ENAMETOOLONG = 36,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enametoolong`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOLCK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:93:5\n   |\n93 |     ENOLCK = 37,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enolck`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOSYS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:95:5\n   |\n95 |     ENOSYS = 38,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enosys`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOTEMPTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:97:5\n   |\n97 |     ENOTEMPTY = 39,\n   |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotempty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EAFNOSUPPORT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:99:5\n   |\n99 |     EAFNOSUPPORT = 97,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eafnosupport`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOTCONN` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:101:5\n    |\n101 |     ENOTCONN = 107,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotconn`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ETIMEDOUT` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:103:5\n    |\n103 |     ETIMEDOUT = 100,\n    |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etimedout`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ECONNREFUSED` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:105:5\n    |\n105 |     ECONNREFUSED = 111,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Econnrefused`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EALREADY` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:107:5\n    |\n107 |     EALREADY = 114,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ealready`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: casting integer literal to `isize` is unnecessary\n   --> kernel/src/syscall/consts.rs:422:27\n    |\n422 | pub const AT_CWD: usize = -100 as isize as usize;\n    |                           ^^^^^^^^^^^^^ help: try: `-100_isize`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n",
                  "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:509:1\n    |\n509 | impl Into<MappingFlags> for MmapProt {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n    = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<syscall::consts::MmapProt>`\n    |\n509 ~ impl From<MmapProt> for MappingFlags {\n510 ~     fn from(val: MmapProt) -> Self {\n511 |         let mut res = MappingFlags::empty();\n512 ~         if val.contains(MmapProt::PROT_READ) {\n513 |             res |= MappingFlags::R;\n514 |         }\n515 ~         if val.contains(MmapProt::PROT_WRITE) {\n516 |             res |= MappingFlags::W;\n517 |         }\n518 ~         if val.contains(MmapProt::PROT_EXEC) {\n    |\n\n",
                  "warning: name `DUPFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:607:5\n    |\n607 |     DUPFD = 0,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `GETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:609:5\n    |\n609 |     GETFD = 1,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `SETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:611:5\n    |\n611 |     SETFD = 2,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `GETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:613:5\n    |\n613 |     GETFL = 3,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `SETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:615:5\n    |\n615 |     SETFL = 4,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `GETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:617:5\n    |\n617 |     GETLK = 5,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `SETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:619:5\n    |\n619 |     SETLK = 6,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `SETLKW` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:621:5\n    |\n621 |     SETLKW = 7,\n    |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlkw`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `DUPFDCLOEXEC` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:623:5\n    |\n623 |     DUPFDCLOEXEC = 0x406,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfdcloexec`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:872:1\n    |\n872 | impl<T> Into<usize> for UserRef<T> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<syscall::consts::UserRef<T>>`\n    |\n872 ~ impl<T> From<UserRef<T>> for usize {\n873 ~     fn from(val: UserRef<T>) -> Self {\n874 ~         val.addr.addr()\n    |\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/syscall/task.rs",
              "count": 18,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this `else { if .. }` block can be collapsed\n   --> kernel/src/syscall/task.rs:726:24\n    |\n726 |                   } else {\n    |  ________________________^\n727 | |                     if let Some(index) = target_signal.real_time_index() {\n728 | |                         child_tcb.signal_queue[index] += 1;\n729 | |                     }\n730 | |                 }\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\n    = note: `#[warn(clippy::collapsible_else_if)]` on by default\nhelp: collapse nested if block\n    |\n726 ~                 } else if let Some(index) = target_signal.real_time_index() {\n727 +                     child_tcb.signal_queue[index] += 1;\n728 +                 }\n    |\n\n",
                  "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:757:36\n    |\n757 |             sec: stime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n    = note: `#[warn(clippy::inconsistent_digit_grouping)]` on by default\n\n",
                  "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:758:37\n    |\n758 |             usec: stime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n",
                  "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:761:36\n    |\n761 |             sec: utime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n",
                  "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:762:37\n    |\n762 |             usec: utime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/syscall/task.rs:68:45\n   |\n68 |     if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n   |                                             ^^^^^^^ help: change this to: `buffer`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                  "warning: redundant closure\n   --> kernel/src/syscall/task.rs:126:26\n    |\n126 |                     .map(|x| Arc::new(x))\n    |                          ^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Arc::new`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n    = note: `#[warn(clippy::redundant_closure)]` on by default\n\n",
                  "warning: useless conversion to the same type: `alloc::string::String`\n   --> kernel/src/syscall/task.rs:192:16\n    |\n192 |     let path = String::from(path);\n    |                ^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/task.rs:243:59\n    |\n243 |         let elf = if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n    |                                                           ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                  "warning: parameter is only used in recursion\n   --> kernel/src/syscall/task.rs:189:5\n    |\n189 |     envp: Vec<String>,\n    |     ^^^^ help: if this is intentional, prefix it with an underscore: `_envp`\n    |\nnote: parameter used here\n   --> kernel/src/syscall/task.rs:248:79\n    |\n248 |             return exec_with_process(task, String::from(\"busybox\"), new_args, envp).await;\n    |                                                                               ^^^^\n...\n271 |                 return exec_with_process(task, new_args[0].clone(), new_args, envp).await;\n    |                                                                               ^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\n    = note: `#[warn(clippy::only_used_in_recursion)]` on by default\n\n",
                  "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:405:14\n    |\n405 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n    = note: `#[warn(clippy::into_iter_on_ref)]` on by default\n\n",
                  "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:411:14\n    |\n411 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n\n",
                  "warning: use of `.then_some(..).unwrap_or(..)` can be written more clearly with `if .. else ..`\n   --> kernel/src/syscall/task.rs:460:31\n    |\n460 |           let clear_child_tid = flags\n    |  _______________________________^\n461 | |             .contains(CloneFlags::CLONE_CHILD_CLEARTID)\n462 | |             .then_some(ctid)\n463 | |             .unwrap_or(UserRef::from(0));\n    | |________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#obfuscated_if_else\n    = note: `#[warn(clippy::obfuscated_if_else)]` on by default\nhelp: try\n    |\n460 ~         let clear_child_tid = if flags\n461 ~             .contains(CloneFlags::CLONE_CHILD_CLEARTID) { ctid } else { UserRef::from(0) };\n    |\n\n",
                  "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:513:21\n    |\n513 | /                     inner\n514 | |                         .children\n515 | |                         .iter()\n516 | |                         .find(|x| x.task_id == pid as usize)\n517 | |                         .map(|x| x.clone())\n    | |___________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\n    = note: `#[warn(clippy::map_clone)]` on by default\nhelp: consider calling the dedicated `cloned` method\n    |\n513 ~                     inner\n514 +                         .children\n515 +                         .iter()\n516 +                         .find(|x| x.task_id == pid as usize).cloned()\n    |\n\n",
                  "warning: called `.iter().count()` on a `Vec`\n   --> kernel/src/syscall/task.rs:524:17\n    |\n524 |                 self.task.pcb.lock().children.iter().count()\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.task.pcb.lock().children.len()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#iter_count\n    = note: `#[warn(clippy::iter_count)]` on by default\n\n",
                  "warning: called `map_or(None, ..)` on an `Option` value. This can be done more directly by calling `and_then(..)` instead\n   --> kernel/src/syscall/task.rs:554:24\n    |\n554 |             let exit = child_task.clone().map_or(None, |x| x.exit_code());\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using `and_then` instead: `child_task.clone().and_then(|x| x.exit_code())`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_or_none\n    = note: `#[warn(clippy::option_map_or_none)]` on by default\n\n",
                  "warning: unneeded `return` statement\n   --> kernel/src/syscall/task.rs:698:17\n    |\n698 |                 return Err(LinuxError::EPERM);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n698 -                 return Err(LinuxError::EPERM);\n698 +                 Err(LinuxError::EPERM)\n    |\n\n",
                  "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:706:13\n    |\n706 | /             x.threads\n707 | |                 .iter()\n708 | |                 .find(|x| match x.upgrade() {\n709 | |                     Some(thread) => thread.task_id == tid,\n710 | |                     None => false,\n711 | |                 })\n712 | |                 .map(|x| x.clone())\n    | |___________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\nhelp: consider calling the dedicated `cloned` method\n    |\n706 ~             x.threads\n707 +                 .iter()\n708 +                 .find(|x| match x.upgrade() {\n709 +                     Some(thread) => thread.task_id == tid,\n710 +                     None => false,\n711 +                 }).cloned()\n    |\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/initproc.rs",
              "count": 12,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: constants have by default a `'static` lifetime\n   --> kernel/src/tasks/initproc.rs:213:27\n    |\n213 | pub const USER_WORK_DIR: &'static str = \"/\";\n    |                          -^^^^^^^---- help: consider removing `'static`: `&str`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n    = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default\n\n",
                  "warning: useless conversion to the same type: `hashbrown::hash_map::Values<'_, usize, alloc::sync::Weak<dyn executor::AsyncTask>>`\n  --> kernel/src/tasks/initproc.rs:59:5\n   |\n59 |     TASK_MAP.lock().values().into_iter().for_each(|task| {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `TASK_MAP.lock().values()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n",
                  "warning: unneeded `return` statement\n   --> kernel/src/tasks/initproc.rs:118:5\n    |\n118 |     return true;\n    |     ^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n118 -     return true;\n118 +     true\n    |\n\n",
                  "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:122:41\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                         ^^^ help: try using a `char` instead: `' '`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n",
                  "warning: comparison to empty slice\n   --> kernel/src/tasks/initproc.rs:122:57\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                                         ^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!x.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n    = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n",
                  "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:125:47\n    |\n125 |     let filename = match filename.starts_with(\"/\") {\n    |                                               ^^^ help: try using a `char` instead: `'/'`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n",
                  "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:184:19\n    |\n184 |             match c as u8 {\n    |                   ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                  "warning: unnecessary use of `to_string`\n   --> kernel/src/tasks/initproc.rs:187:40\n    |\n187 |                     let sign = command(&String::from_utf8_lossy(&buffer).to_string()).await;\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `String::from_utf8_lossy(&buffer).as_ref()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n    = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n",
                  "warning: length comparison to zero\n   --> kernel/src/tasks/initproc.rs:195:24\n    |\n195 |                     if buffer.len() > 0 {\n    |                        ^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n",
                  "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:204:33\n    |\n204 |                     buffer.push(c as u8);\n    |                                 ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                  "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:205:43\n    |\n205 |                     DebugConsole::putchar(c as u8);\n    |                                           ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                  "warning: called `is_none()` after searching an `Iterator` with `find`\n   --> kernel/src/tasks/initproc.rs:400:8\n    |\n400 |       if TASK_MAP\n    |  ________^\n401 | |         .lock()\n402 | |         .values()\n403 | |         .find(|x| {\n...   |\n407 | |         })\n408 | |         .is_none()\n    | |__________________^\n    |\n    = help: this is more succinctly expressed by calling `any()` with negation\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/syscall/fd.rs",
              "count": 7,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: digits of hex, binary or octal literal not in groups of equal size\n   --> kernel/src/syscall/fd.rs:936:31\n    |\n936 |             stime + timeout * 0x1000_000\n    |                               ^^^^^^^^^^ help: consider: `0x0100_0000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n    = note: `#[warn(clippy::unusual_byte_groupings)]` on by default\n\n",
                  "warning: length comparison to zero\n  --> kernel/src/syscall/fd.rs:26:8\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |        ^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!path.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n",
                  "warning: single-character string constant used as pattern\n  --> kernel/src/syscall/fd.rs:26:43\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |                                           ^^^ help: try using a `char` instead: `'/'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/fd.rs:298:50\n    |\n298 |         dentry_open(dir.dentry.clone().unwrap(), &path, OpenFlags::NONE)\n    |                                                  ^^^^^ help: change this to: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                  "warning: the loop variable `i` is only used to index `ts`\n   --> kernel/src/syscall/fd.rs:529:26\n    |\n529 |                 for i in 0..2 {\n    |                          ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n529 |                 for <item> in ts.iter().take(2) {\n    |                     ~~~~~~    ~~~~~~~~~~~~~~~~~\n\n",
                  "warning: the loop variable `i` is only used to index `poll_fds`\n   --> kernel/src/syscall/fd.rs:667:22\n    |\n667 |             for i in 0..nfds {\n    |                      ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n667 |             for <item> in poll_fds.iter_mut().take(nfds) {\n    |                 ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n",
                  "warning: the method `writeat` doesn't need a mutable reference\n   --> kernel/src/syscall/fd.rs:995:46\n    |\n995 |                 .writeat(*off_out.get_ref(), &mut buffer[..rsize])\n    |                                              ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/async_ops.rs",
              "count": 6,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/async_ops.rs:67:10\n   |\n67 |           .find(|x| x.contains(&task_id))\n   |  __________^\n68 | |         .is_some()\n   | |__________________^ help: use `any()` instead: `any(|x| x.contains(&task_id))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n   = note: `#[warn(clippy::search_is_some)]` on by default\n\n",
                  "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/tasks/async_ops.rs:81:21\n   |\n81 | /                     self.0\n82 | |                         .lock()\n83 | |                         .values_mut()\n84 | |                         .find(|x| x.contains(&self.1))\n85 | |                         .map(|x| x.retain(|x| *x != self.1));\n   | |____________________________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\nhelp: try\n   |\n81 ~                     if let Some(x) = self.0\n82 +                         .lock()\n83 +                         .values_mut()\n84 +                         .find(|x| x.contains(&self.1)) { x.retain(|x| *x != self.1) }\n   |\n\n",
                  "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:121:41\n    |\n121 |             .map(|x| x.drain(..cmp::min(wake_count as usize, que_size)));\n    |                                         ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                  "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:138:28\n    |\n138 |         .map(|x| x.drain(..wake_count as usize).count())\n    |                            ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                  "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:143:28\n    |\n143 |         .map(|x| x.drain(..reque_count as usize).collect());\n    |                            ^^^^^^^^^^^^^^^^^^^^ help: try: `reque_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                  "warning: usage of `contains_key` followed by `insert` on a `BTreeMap`\n   --> kernel/src/tasks/async_ops.rs:146:9\n    |\n146 | /         if !futex_table.contains_key(&uaddr2) {\n147 | |             futex_table.insert(uaddr2, vec![]);\n148 | |         }\n    | |_________^ help: try: `futex_table.entry(uaddr2).or_insert_with(|| vec![]);`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_entry\n    = note: `#[warn(clippy::map_entry)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/filetable.rs",
              "count": 6,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/filetable.rs:78:6\n   |\n78 | impl<'a> FileItem {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n",
                  "warning: manual implementation of an assign operation\n   --> kernel/src/tasks/filetable.rs:210:13\n    |\n210 |             ptr = ptr + current_len;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `ptr += current_len`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n    = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n",
                  "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:333:12\n    |\n333 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n",
                  "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:349:12\n    |\n349 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n",
                  "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:374:12\n    |\n374 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/tasks/filetable.rs:378:47\n    |\n378 |         WaitBlockingWrite(self.inner.clone(), &buffer, offset)\n    |                                               ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/socket.rs",
              "count": 5,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: name `STEAM` contains a capitalized acronym\n  --> kernel/src/socket.rs:15:5\n   |\n15 |     STEAM,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Steam`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `DGRAME` contains a capitalized acronym\n  --> kernel/src/socket.rs:16:5\n   |\n16 |     DGRAME,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dgrame`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `RAW` contains a capitalized acronym\n  --> kernel/src/socket.rs:17:5\n   |\n17 |     RAW,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Raw`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: length comparison to zero\n   --> kernel/src/socket.rs:163:12\n    |\n163 |         if data.len() == 0 {\n    |            ^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `data.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/socket.rs:186:33\n    |\n186 |         match self.inner.sendto(&buffer, None) {\n    |                                 ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/epoll/mod.rs",
              "count": 4,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/epoll/mod.rs:65:17\n   |\n65 | //                 self.data.lock().get_mut(&fd).map(|x| {\n66 | ||                     *x = ev;\n67 | ||                 });\n   | ||__________________^- help: try: `if let Some(x) = self.data.lock().get_mut(&fd) { *x = ev; }`\n   |  |__________________|\n   | \n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\n   = note: `#[warn(clippy::option_map_unit_fn)]` on by default\n\n",
                  "warning: name `ADD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:79:5\n   |\n79 |     ADD = 1,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Add`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n",
                  "warning: name `DEL` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:80:5\n   |\n80 |     DEL = 2,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Del`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `MOD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:81:5\n   |\n81 |     MOD = 3,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Mod`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/memset.rs",
              "count": 4,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/memset.rs:32:6\n   |\n32 | impl<'a> MemSet {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n",
                  "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/memset.rs:38:23\n   |\n38 |         self.0.iter().find(|x| x.overlapping(start, end)).is_some()\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| x.overlapping(start, end))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n",
                  "warning: returning the result of a `let` binding from a block\n   --> kernel/src/tasks/memset.rs:111:9\n    |\n109 | /         let res =\n110 | |             !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end));\n    | |____________________________________________________________________________________________________- unnecessary `let` binding\n111 |           res\n    |           ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n    = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n    |\n109 ~         \n110 ~         !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end))\n    |\n\n",
                  "warning: you seem to be trying to use `match` for an equality check. Consider using `if`\n   --> kernel/src/tasks/memset.rs:213:9\n    |\n213 | /         match &self.mtype {\n214 | |             MemType::ShareFile => {\n215 | |                 let start = self.start;\n216 | |                 let len = self.len;\n...   |\n232 | |             _ => {}\n233 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n    = note: `#[warn(clippy::single_match)]` on by default\nhelp: try\n    |\n213 ~         if self.mtype == MemType::ShareFile {\n214 +             let start = self.start;\n215 +             let len = self.len;\n216 +             let mapfile = self.file.clone().unwrap();\n217 +             for tracker in &self.mtrackers {\n218 +                 if Arc::strong_count(&tracker.tracker) > 1 {\n219 +                     continue;\n220 +                 }\n221 + \n222 +                 let offset = tracker.vpn.to_addr() - start;\n223 +                 let wlen = min(len - offset, PAGE_SIZE);\n224 + \n225 +                 let bytes = &mut tracker.tracker.0.get_buffer()[..wlen];\n226 +                 mapfile\n227 +                     .writeat(offset, bytes)\n228 +                     .expect(\"can't write data to file at drop\");\n229 +             }\n230 +         }\n    |\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/task.rs",
              "count": 4,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this function has too many arguments (8/7)\n   --> kernel/src/tasks/task.rs:142:5\n    |\n142 | /     pub fn map_frames(\n143 | |         &self,\n144 | |         vpn: VirtPage,\n145 | |         mtype: MemType,\n...   |\n150 | |         len: usize,\n151 | |     ) -> Option<PhysPage> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n",
                  "warning: using `clone` on type `TrapFrame` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:320:29\n    |\n320 |         new_tcb_writer.cx = self.tcb.read().cx.clone();\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.tcb.read().cx`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n",
                  "warning: using `clone` on type `TrapFrame` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:360:17\n    |\n360 |             cx: parent_tcb.cx.clone(),\n    |                 ^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `parent_tcb.cx`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n",
                  "warning: using `clone` on type `SigProcMask` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:361:22\n    |\n361 |             sigmask: parent_tcb.sigmask.clone(),\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `parent_tcb.sigmask`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
                ]
              }
            },
            {
              "file": "kernel/build.rs",
              "count": 3,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: comparison to empty slice\n  --> kernel/build.rs:17:12\n   |\n17 |         if module == \"\" {\n   |            ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `module.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n   = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n",
                  "warning: single-character string constant used as pattern\n  --> kernel/build.rs:20:84\n   |\n20 |         module_file_content.push_str(&format!(\"extern crate {};\\n\", module.replace(\"-\", \"_\")))\n   |                                                                                    ^^^ help: try using a `char` instead: `'-'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n",
                  "warning: single-character string constant used as pattern\n  --> kernel/build.rs:29:16\n   |\n29 |         .split(\",\")\n   |                ^^^ help: try using a `char` instead: `','`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/user/signal.rs",
              "count": 3,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: using `clone` on type `SigAction` which implements the `Copy` trait\n  --> kernel/src/user/signal.rs:28:25\n   |\n28 |         let sigaction = self.task.pcb.lock().sigaction[signal.num()].clone();\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.task.pcb.lock().sigaction[signal.num()]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n",
                  "warning: using `clone` on type `TrapFrame` which implements the `Copy` trait\n  --> kernel/src/user/signal.rs:57:24\n   |\n57 |         let store_cx = cx_ref.clone();\n   |                        ^^^^^^^^^^^^^^ help: try dereferencing it: `*cx_ref`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/user/signal.rs:65:22\n   |\n65 |         cx.store_ctx(&cx_ref);\n   |                      ^^^^^^^ help: change this to: `cx_ref`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/user/socket_pair.rs",
              "count": 3,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:42:9\n   |\n42 | /         if events.contains(PollEvent::POLLOUT) {\n43 | |             if self.inner.lock().len() <= 0x50000 {\n44 | |                 res |= PollEvent::POLLOUT;\n45 | |             }\n46 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n   = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n   |\n42 ~         if events.contains(PollEvent::POLLOUT) && self.inner.lock().len() <= 0x50000 {\n43 +             res |= PollEvent::POLLOUT;\n44 +         }\n   |\n\n",
                  "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:47:9\n   |\n47 | /         if events.contains(PollEvent::POLLIN) {\n48 | |             if self.inner.lock().len() > 0 {\n49 | |                 res |= PollEvent::POLLIN;\n50 | |             }\n51 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n   |\n47 ~         if events.contains(PollEvent::POLLIN) && self.inner.lock().len() > 0 {\n48 +             res |= PollEvent::POLLIN;\n49 +         }\n   |\n\n",
                  "warning: useless conversion to the same type: `core::iter::Enumerate<alloc::collections::vec_deque::Drain<'_, u8>>`\n  --> kernel/src/user/socket_pair.rs:26:9\n   |\n26 | /         queue\n27 | |             .drain(..rlen)\n28 | |             .enumerate()\n29 | |             .into_iter()\n   | |________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\nhelp: consider removing `.into_iter()`\n   |\n26 ~         queue\n27 +             .drain(..rlen)\n28 +             .enumerate()\n   |\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/syscall/mod.rs",
              "count": 2,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unneeded sub `cfg` when there is only one condition\n   --> kernel/src/syscall/mod.rs:381:19\n    |\n381 |             #[cfg(any(target_arch = \"x86_64\"))]\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `target_arch = \"x86_64\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_minimal_cfg\n    = note: `#[warn(clippy::non_minimal_cfg)]` on by default\n\n",
                  "warning: useless conversion to the same type: `usize`\n   --> kernel/src/syscall/mod.rs:255:21\n    |\n255 |                     args[5].into(),\n    |                     ^^^^^^^^^^^^^^ help: consider removing `.into()`: `args[5]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/syscall/socket.rs",
              "count": 2,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this loop could be written as a `while let` loop\n   --> kernel/src/syscall/socket.rs:237:9\n    |\n237 | /         loop {\n238 | |             match socket.inner.clone().connect(remote) {\n239 | |                 Err(NetServerError::Blocking) => {}\n240 | |                 _ => break,\n241 | |             }\n242 | |             yield_now().await;\n243 | |         }\n    | |_________^ help: try: `while let Err(NetServerError::Blocking) = socket.inner.clone().connect(remote) { .. }`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#while_let_loop\n    = note: `#[warn(clippy::while_let_loop)]` on by default\n\n",
                  "warning: using `clone` on type `Ipv4Addr` which implements the `Copy` trait\n   --> kernel/src/syscall/socket.rs:488:27\n    |\n488 |                 sa.addr = new_socket.get_remote().unwrap().ip().clone();\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*new_socket.get_remote().unwrap().ip()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n    = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/mod.rs",
              "count": 2,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: manual `RangeInclusive::contains` implementation\n  --> kernel/src/tasks/mod.rs:57:20\n   |\n57 |                 if c >= 0x20 && c <= 0x7e {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^ help: use: `(0x20..=0x7e).contains(&c)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n   = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n",
                  "warning: name `TMS` contains a capitalized acronym\n   --> kernel/src/tasks/mod.rs:125:12\n    |\n125 | pub struct TMS {\n    |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Tms`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/main.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: matching on `Some` with `ok()` is redundant\n  --> kernel/src/main.rs:77:13\n   |\n77 |             if let Some(task) = current_task().downcast_arc::<UserTask>().ok() {\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_result_ok\n   = note: `#[warn(clippy::match_result_ok)]` on by default\nhelp: consider matching on `Ok(task)` and removing the call to `ok` instead\n   |\n77 |             if let Ok(task) = current_task().downcast_arc::<UserTask>() {\n   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/syscall/shm.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this is a decimal constant\n  --> kernel/src/syscall/shm.rs:31:21\n   |\n31 |         if shmflg & 01000 > 0 {\n   |                     ^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_prefixed_literal\n   = note: `#[warn(clippy::zero_prefixed_literal)]` on by default\nhelp: if you mean to use a decimal constant, remove the `0` to avoid confusion\n   |\n31 |         if shmflg & 1000 > 0 {\n   |                     ~~~~\nhelp: if you mean to use an octal constant, use `0o`\n   |\n31 |         if shmflg & 0o1000 > 0 {\n   |                     ~~~~~~\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/elf.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this function has too many arguments (10/7)\n   --> kernel/src/tasks/elf.rs:108:1\n    |\n108 | / pub fn init_task_stack(\n109 | |     user_task: Arc<UserTask>,\n110 | |     args: Vec<String>,\n111 | |     base: usize,\n...   |\n118 | |     tls: usize,\n119 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/shm.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: equality checks against true are unnecessary\n  --> kernel/src/tasks/shm.rs:30:49\n   |\n30 |         if Arc::strong_count(&self.mem) == 1 && *self.mem.deleted.lock() == true {\n   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `*self.mem.deleted.lock()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "arceos_posix_api",
          "count": 8,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            },
            {
              "file": "Not supported to display yet.",
              "count": 1,
              "kinds": {
                "Lockbud(Possibly)": [
                  "[2024-09-04T00:43:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-04T00:43:10Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axlibc",
          "count": 8,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            },
            {
              "file": "Not supported to display yet.",
              "count": 1,
              "kinds": {
                "Lockbud(Possibly)": [
                  "[2024-09-04T00:46:50Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-04T00:46:50Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "arceos_api",
          "count": 7,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axdisplay",
          "count": 7,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axdma",
          "count": 7,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axdriver",
          "count": 7,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axfeat",
          "count": 7,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axfs",
          "count": 7,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axhal",
          "count": 7,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axmm",
          "count": 7,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axnet",
          "count": 7,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axruntime",
          "count": 7,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axstd",
          "count": 7,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axsync",
          "count": 7,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axtask",
          "count": 7,
          "raw_reports": [
            {
              "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
                  "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
                ],
                "Clippy(Warn)": [
                  "warning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
              "count": 2,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n",
                  "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/aarch64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "mingo",
          "count": 4,
          "raw_reports": [
            {
              "file": "src/main.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n",
                  "error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n",
                  "error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"
                ]
              }
            },
            {
              "file": "src/cpu.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `nop`\n  --> src/cpu.rs:16:20\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |                    ^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axalloc",
          "count": 1,
          "raw_reports": [
            {
              "file": "modules/axalloc/src/lib.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: you should consider adding a `Default` implementation for `GlobalAllocator`\n  --> modules/axalloc/src/lib.rs:57:5\n   |\n57 | /     pub const fn new() -> Self {\n58 | |         Self {\n59 | |             balloc: SpinNoIrq::new(DefaultByteAllocator::new()),\n60 | |             palloc: SpinNoIrq::new(BitmapPageAllocator::new()),\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n55 + impl Default for GlobalAllocator {\n56 +     fn default() -> Self {\n57 +         Self::new()\n58 +     }\n59 + }\n   |\n\n"
                ]
              }
            }
          ]
        }
      ]
    }
  },
  {
    "target_triple": "loongarch64-unknown-none",
    "data": {
      "kinds_order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Unformatted"
      ],
      "data": [
        {
          "user": "kern-crates",
          "repo": "ByteOS",
          "package": "kernel",
          "count": 140,
          "raw_reports": [
            {
              "file": "kernel/src/syscall/consts.rs",
              "count": 55,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: name `EPERM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:21:5\n   |\n21 |     EPERM = 1,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eperm`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOENT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:23:5\n   |\n23 |     ENOENT = 2,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoent`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ESRCH` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:25:5\n   |\n25 |     ESRCH = 3,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Esrch`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EINTR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:27:5\n   |\n27 |     EINTR = 4,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eintr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:29:5\n   |\n29 |     EIO = 5,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Eio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENXIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:31:5\n   |\n31 |     ENXIO = 6,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enxio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOEXEC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:35:5\n   |\n35 |     ENOEXEC = 8,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoexec`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EBADF` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:37:5\n   |\n37 |     EBADF = 9,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebadf`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ECHILD` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:39:5\n   |\n39 |     ECHILD = 10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Echild`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EAGAIN` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:41:5\n   |\n41 |     EAGAIN = 11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eagain`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOMEM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:43:5\n   |\n43 |     ENOMEM = 12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enomem`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EACCES` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:45:5\n   |\n45 |     EACCES = 13,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eacces`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EFAULT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:47:5\n   |\n47 |     EFAULT = 14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efault`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOTBLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:49:5\n   |\n49 |     ENOTBLK = 15,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotblk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EBUSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:51:5\n   |\n51 |     EBUSY = 16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebusy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EEXIST` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:53:5\n   |\n53 |     EEXIST = 17,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eexist`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EXDEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:55:5\n   |\n55 |     EXDEV = 18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Exdev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENODEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:57:5\n   |\n57 |     ENODEV = 19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enodev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOTDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:59:5\n   |\n59 |     ENOTDIR = 20,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EISDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:61:5\n   |\n61 |     EISDIR = 21,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eisdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EINVAL` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:63:5\n   |\n63 |     EINVAL = 22,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Einval`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:65:5\n   |\n65 |     ENFILE = 23,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EMFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:67:5\n   |\n67 |     EMFILE = 24,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOTTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:69:5\n   |\n69 |     ENOTTY = 25,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ETXTBSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:71:5\n   |\n71 |     ETXTBSY = 26,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxtbsy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EFBIG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:73:5\n   |\n73 |     EFBIG = 27,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efbig`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOSPC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:75:5\n   |\n75 |     ENOSPC = 28,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enospc`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ESPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:77:5\n   |\n77 |     ESPIPE = 29,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Espipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EROFS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:79:5\n   |\n79 |     EROFS = 30,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erofs`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EMLINK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:81:5\n   |\n81 |     EMLINK = 31,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emlink`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:83:5\n   |\n83 |     EPIPE = 32,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EDOM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:85:5\n   |\n85 |     EDOM = 33,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Edom`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ERANGE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:87:5\n   |\n87 |     ERANGE = 34,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erange`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EDEADLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:89:5\n   |\n89 |     EDEADLK = 35,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edeadlk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENAMETOOLONG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:91:5\n   |\n91 |     ENAMETOOLONG = 36,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enametoolong`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOLCK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:93:5\n   |\n93 |     ENOLCK = 37,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enolck`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOSYS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:95:5\n   |\n95 |     ENOSYS = 38,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enosys`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOTEMPTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:97:5\n   |\n97 |     ENOTEMPTY = 39,\n   |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotempty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EAFNOSUPPORT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:99:5\n   |\n99 |     EAFNOSUPPORT = 97,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eafnosupport`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOTCONN` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:101:5\n    |\n101 |     ENOTCONN = 107,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotconn`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ETIMEDOUT` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:103:5\n    |\n103 |     ETIMEDOUT = 100,\n    |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etimedout`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ECONNREFUSED` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:105:5\n    |\n105 |     ECONNREFUSED = 111,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Econnrefused`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EALREADY` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:107:5\n    |\n107 |     EALREADY = 114,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ealready`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: casting integer literal to `isize` is unnecessary\n   --> kernel/src/syscall/consts.rs:422:27\n    |\n422 | pub const AT_CWD: usize = -100 as isize as usize;\n    |                           ^^^^^^^^^^^^^ help: try: `-100_isize`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n",
                  "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:509:1\n    |\n509 | impl Into<MappingFlags> for MmapProt {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n    = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<syscall::consts::MmapProt>`\n    |\n509 ~ impl From<MmapProt> for MappingFlags {\n510 ~     fn from(val: MmapProt) -> Self {\n511 |         let mut res = MappingFlags::empty();\n512 ~         if val.contains(MmapProt::PROT_READ) {\n513 |             res |= MappingFlags::R;\n514 |         }\n515 ~         if val.contains(MmapProt::PROT_WRITE) {\n516 |             res |= MappingFlags::W;\n517 |         }\n518 ~         if val.contains(MmapProt::PROT_EXEC) {\n    |\n\n",
                  "warning: name `DUPFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:607:5\n    |\n607 |     DUPFD = 0,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `GETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:609:5\n    |\n609 |     GETFD = 1,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `SETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:611:5\n    |\n611 |     SETFD = 2,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `GETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:613:5\n    |\n613 |     GETFL = 3,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `SETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:615:5\n    |\n615 |     SETFL = 4,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `GETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:617:5\n    |\n617 |     GETLK = 5,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `SETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:619:5\n    |\n619 |     SETLK = 6,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `SETLKW` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:621:5\n    |\n621 |     SETLKW = 7,\n    |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlkw`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `DUPFDCLOEXEC` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:623:5\n    |\n623 |     DUPFDCLOEXEC = 0x406,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfdcloexec`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:872:1\n    |\n872 | impl<T> Into<usize> for UserRef<T> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<syscall::consts::UserRef<T>>`\n    |\n872 ~ impl<T> From<UserRef<T>> for usize {\n873 ~     fn from(val: UserRef<T>) -> Self {\n874 ~         val.addr.addr()\n    |\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/syscall/task.rs",
              "count": 18,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this `else { if .. }` block can be collapsed\n   --> kernel/src/syscall/task.rs:726:24\n    |\n726 |                   } else {\n    |  ________________________^\n727 | |                     if let Some(index) = target_signal.real_time_index() {\n728 | |                         child_tcb.signal_queue[index] += 1;\n729 | |                     }\n730 | |                 }\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\n    = note: `#[warn(clippy::collapsible_else_if)]` on by default\nhelp: collapse nested if block\n    |\n726 ~                 } else if let Some(index) = target_signal.real_time_index() {\n727 +                     child_tcb.signal_queue[index] += 1;\n728 +                 }\n    |\n\n",
                  "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:757:36\n    |\n757 |             sec: stime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n    = note: `#[warn(clippy::inconsistent_digit_grouping)]` on by default\n\n",
                  "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:758:37\n    |\n758 |             usec: stime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n",
                  "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:761:36\n    |\n761 |             sec: utime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n",
                  "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:762:37\n    |\n762 |             usec: utime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/syscall/task.rs:68:45\n   |\n68 |     if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n   |                                             ^^^^^^^ help: change this to: `buffer`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                  "warning: redundant closure\n   --> kernel/src/syscall/task.rs:126:26\n    |\n126 |                     .map(|x| Arc::new(x))\n    |                          ^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Arc::new`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n    = note: `#[warn(clippy::redundant_closure)]` on by default\n\n",
                  "warning: useless conversion to the same type: `alloc::string::String`\n   --> kernel/src/syscall/task.rs:192:16\n    |\n192 |     let path = String::from(path);\n    |                ^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/task.rs:243:59\n    |\n243 |         let elf = if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n    |                                                           ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                  "warning: parameter is only used in recursion\n   --> kernel/src/syscall/task.rs:189:5\n    |\n189 |     envp: Vec<String>,\n    |     ^^^^ help: if this is intentional, prefix it with an underscore: `_envp`\n    |\nnote: parameter used here\n   --> kernel/src/syscall/task.rs:248:79\n    |\n248 |             return exec_with_process(task, String::from(\"busybox\"), new_args, envp).await;\n    |                                                                               ^^^^\n...\n271 |                 return exec_with_process(task, new_args[0].clone(), new_args, envp).await;\n    |                                                                               ^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\n    = note: `#[warn(clippy::only_used_in_recursion)]` on by default\n\n",
                  "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:405:14\n    |\n405 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n    = note: `#[warn(clippy::into_iter_on_ref)]` on by default\n\n",
                  "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:411:14\n    |\n411 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n\n",
                  "warning: use of `.then_some(..).unwrap_or(..)` can be written more clearly with `if .. else ..`\n   --> kernel/src/syscall/task.rs:460:31\n    |\n460 |           let clear_child_tid = flags\n    |  _______________________________^\n461 | |             .contains(CloneFlags::CLONE_CHILD_CLEARTID)\n462 | |             .then_some(ctid)\n463 | |             .unwrap_or(UserRef::from(0));\n    | |________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#obfuscated_if_else\n    = note: `#[warn(clippy::obfuscated_if_else)]` on by default\nhelp: try\n    |\n460 ~         let clear_child_tid = if flags\n461 ~             .contains(CloneFlags::CLONE_CHILD_CLEARTID) { ctid } else { UserRef::from(0) };\n    |\n\n",
                  "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:513:21\n    |\n513 | /                     inner\n514 | |                         .children\n515 | |                         .iter()\n516 | |                         .find(|x| x.task_id == pid as usize)\n517 | |                         .map(|x| x.clone())\n    | |___________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\n    = note: `#[warn(clippy::map_clone)]` on by default\nhelp: consider calling the dedicated `cloned` method\n    |\n513 ~                     inner\n514 +                         .children\n515 +                         .iter()\n516 +                         .find(|x| x.task_id == pid as usize).cloned()\n    |\n\n",
                  "warning: called `.iter().count()` on a `Vec`\n   --> kernel/src/syscall/task.rs:524:17\n    |\n524 |                 self.task.pcb.lock().children.iter().count()\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.task.pcb.lock().children.len()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#iter_count\n    = note: `#[warn(clippy::iter_count)]` on by default\n\n",
                  "warning: called `map_or(None, ..)` on an `Option` value. This can be done more directly by calling `and_then(..)` instead\n   --> kernel/src/syscall/task.rs:554:24\n    |\n554 |             let exit = child_task.clone().map_or(None, |x| x.exit_code());\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using `and_then` instead: `child_task.clone().and_then(|x| x.exit_code())`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_or_none\n    = note: `#[warn(clippy::option_map_or_none)]` on by default\n\n",
                  "warning: unneeded `return` statement\n   --> kernel/src/syscall/task.rs:698:17\n    |\n698 |                 return Err(LinuxError::EPERM);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n698 -                 return Err(LinuxError::EPERM);\n698 +                 Err(LinuxError::EPERM)\n    |\n\n",
                  "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:706:13\n    |\n706 | /             x.threads\n707 | |                 .iter()\n708 | |                 .find(|x| match x.upgrade() {\n709 | |                     Some(thread) => thread.task_id == tid,\n710 | |                     None => false,\n711 | |                 })\n712 | |                 .map(|x| x.clone())\n    | |___________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\nhelp: consider calling the dedicated `cloned` method\n    |\n706 ~             x.threads\n707 +                 .iter()\n708 +                 .find(|x| match x.upgrade() {\n709 +                     Some(thread) => thread.task_id == tid,\n710 +                     None => false,\n711 +                 }).cloned()\n    |\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/initproc.rs",
              "count": 12,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: constants have by default a `'static` lifetime\n   --> kernel/src/tasks/initproc.rs:213:27\n    |\n213 | pub const USER_WORK_DIR: &'static str = \"/\";\n    |                          -^^^^^^^---- help: consider removing `'static`: `&str`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n    = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default\n\n",
                  "warning: useless conversion to the same type: `hashbrown::hash_map::Values<'_, usize, alloc::sync::Weak<dyn executor::AsyncTask>>`\n  --> kernel/src/tasks/initproc.rs:59:5\n   |\n59 |     TASK_MAP.lock().values().into_iter().for_each(|task| {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `TASK_MAP.lock().values()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n",
                  "warning: unneeded `return` statement\n   --> kernel/src/tasks/initproc.rs:118:5\n    |\n118 |     return true;\n    |     ^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n118 -     return true;\n118 +     true\n    |\n\n",
                  "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:122:41\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                         ^^^ help: try using a `char` instead: `' '`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n",
                  "warning: comparison to empty slice\n   --> kernel/src/tasks/initproc.rs:122:57\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                                         ^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!x.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n    = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n",
                  "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:125:47\n    |\n125 |     let filename = match filename.starts_with(\"/\") {\n    |                                               ^^^ help: try using a `char` instead: `'/'`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n",
                  "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:184:19\n    |\n184 |             match c as u8 {\n    |                   ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                  "warning: unnecessary use of `to_string`\n   --> kernel/src/tasks/initproc.rs:187:40\n    |\n187 |                     let sign = command(&String::from_utf8_lossy(&buffer).to_string()).await;\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `String::from_utf8_lossy(&buffer).as_ref()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n    = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n",
                  "warning: length comparison to zero\n   --> kernel/src/tasks/initproc.rs:195:24\n    |\n195 |                     if buffer.len() > 0 {\n    |                        ^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n",
                  "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:204:33\n    |\n204 |                     buffer.push(c as u8);\n    |                                 ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                  "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:205:43\n    |\n205 |                     DebugConsole::putchar(c as u8);\n    |                                           ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                  "warning: called `is_none()` after searching an `Iterator` with `find`\n   --> kernel/src/tasks/initproc.rs:400:8\n    |\n400 |       if TASK_MAP\n    |  ________^\n401 | |         .lock()\n402 | |         .values()\n403 | |         .find(|x| {\n...   |\n407 | |         })\n408 | |         .is_none()\n    | |__________________^\n    |\n    = help: this is more succinctly expressed by calling `any()` with negation\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/syscall/fd.rs",
              "count": 7,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: digits of hex, binary or octal literal not in groups of equal size\n   --> kernel/src/syscall/fd.rs:936:31\n    |\n936 |             stime + timeout * 0x1000_000\n    |                               ^^^^^^^^^^ help: consider: `0x0100_0000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n    = note: `#[warn(clippy::unusual_byte_groupings)]` on by default\n\n",
                  "warning: length comparison to zero\n  --> kernel/src/syscall/fd.rs:26:8\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |        ^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!path.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n",
                  "warning: single-character string constant used as pattern\n  --> kernel/src/syscall/fd.rs:26:43\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |                                           ^^^ help: try using a `char` instead: `'/'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/fd.rs:298:50\n    |\n298 |         dentry_open(dir.dentry.clone().unwrap(), &path, OpenFlags::NONE)\n    |                                                  ^^^^^ help: change this to: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                  "warning: the loop variable `i` is only used to index `ts`\n   --> kernel/src/syscall/fd.rs:529:26\n    |\n529 |                 for i in 0..2 {\n    |                          ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n529 |                 for <item> in ts.iter().take(2) {\n    |                     ~~~~~~    ~~~~~~~~~~~~~~~~~\n\n",
                  "warning: the loop variable `i` is only used to index `poll_fds`\n   --> kernel/src/syscall/fd.rs:667:22\n    |\n667 |             for i in 0..nfds {\n    |                      ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n667 |             for <item> in poll_fds.iter_mut().take(nfds) {\n    |                 ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n",
                  "warning: the method `writeat` doesn't need a mutable reference\n   --> kernel/src/syscall/fd.rs:995:46\n    |\n995 |                 .writeat(*off_out.get_ref(), &mut buffer[..rsize])\n    |                                              ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/async_ops.rs",
              "count": 6,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/async_ops.rs:67:10\n   |\n67 |           .find(|x| x.contains(&task_id))\n   |  __________^\n68 | |         .is_some()\n   | |__________________^ help: use `any()` instead: `any(|x| x.contains(&task_id))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n   = note: `#[warn(clippy::search_is_some)]` on by default\n\n",
                  "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/tasks/async_ops.rs:81:21\n   |\n81 | /                     self.0\n82 | |                         .lock()\n83 | |                         .values_mut()\n84 | |                         .find(|x| x.contains(&self.1))\n85 | |                         .map(|x| x.retain(|x| *x != self.1));\n   | |____________________________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\nhelp: try\n   |\n81 ~                     if let Some(x) = self.0\n82 +                         .lock()\n83 +                         .values_mut()\n84 +                         .find(|x| x.contains(&self.1)) { x.retain(|x| *x != self.1) }\n   |\n\n",
                  "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:121:41\n    |\n121 |             .map(|x| x.drain(..cmp::min(wake_count as usize, que_size)));\n    |                                         ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                  "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:138:28\n    |\n138 |         .map(|x| x.drain(..wake_count as usize).count())\n    |                            ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                  "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:143:28\n    |\n143 |         .map(|x| x.drain(..reque_count as usize).collect());\n    |                            ^^^^^^^^^^^^^^^^^^^^ help: try: `reque_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                  "warning: usage of `contains_key` followed by `insert` on a `BTreeMap`\n   --> kernel/src/tasks/async_ops.rs:146:9\n    |\n146 | /         if !futex_table.contains_key(&uaddr2) {\n147 | |             futex_table.insert(uaddr2, vec![]);\n148 | |         }\n    | |_________^ help: try: `futex_table.entry(uaddr2).or_insert_with(|| vec![]);`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_entry\n    = note: `#[warn(clippy::map_entry)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/filetable.rs",
              "count": 6,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/filetable.rs:78:6\n   |\n78 | impl<'a> FileItem {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n",
                  "warning: manual implementation of an assign operation\n   --> kernel/src/tasks/filetable.rs:210:13\n    |\n210 |             ptr = ptr + current_len;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `ptr += current_len`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n    = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n",
                  "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:333:12\n    |\n333 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n",
                  "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:349:12\n    |\n349 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n",
                  "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:374:12\n    |\n374 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/tasks/filetable.rs:378:47\n    |\n378 |         WaitBlockingWrite(self.inner.clone(), &buffer, offset)\n    |                                               ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/socket.rs",
              "count": 5,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: name `STEAM` contains a capitalized acronym\n  --> kernel/src/socket.rs:15:5\n   |\n15 |     STEAM,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Steam`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `DGRAME` contains a capitalized acronym\n  --> kernel/src/socket.rs:16:5\n   |\n16 |     DGRAME,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dgrame`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `RAW` contains a capitalized acronym\n  --> kernel/src/socket.rs:17:5\n   |\n17 |     RAW,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Raw`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: length comparison to zero\n   --> kernel/src/socket.rs:163:12\n    |\n163 |         if data.len() == 0 {\n    |            ^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `data.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/socket.rs:186:33\n    |\n186 |         match self.inner.sendto(&buffer, None) {\n    |                                 ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/epoll/mod.rs",
              "count": 4,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/epoll/mod.rs:65:17\n   |\n65 | //                 self.data.lock().get_mut(&fd).map(|x| {\n66 | ||                     *x = ev;\n67 | ||                 });\n   | ||__________________^- help: try: `if let Some(x) = self.data.lock().get_mut(&fd) { *x = ev; }`\n   |  |__________________|\n   | \n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\n   = note: `#[warn(clippy::option_map_unit_fn)]` on by default\n\n",
                  "warning: name `ADD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:79:5\n   |\n79 |     ADD = 1,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Add`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n",
                  "warning: name `DEL` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:80:5\n   |\n80 |     DEL = 2,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Del`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `MOD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:81:5\n   |\n81 |     MOD = 3,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Mod`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/memset.rs",
              "count": 4,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/memset.rs:32:6\n   |\n32 | impl<'a> MemSet {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n",
                  "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/memset.rs:38:23\n   |\n38 |         self.0.iter().find(|x| x.overlapping(start, end)).is_some()\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| x.overlapping(start, end))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n",
                  "warning: returning the result of a `let` binding from a block\n   --> kernel/src/tasks/memset.rs:111:9\n    |\n109 | /         let res =\n110 | |             !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end));\n    | |____________________________________________________________________________________________________- unnecessary `let` binding\n111 |           res\n    |           ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n    = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n    |\n109 ~         \n110 ~         !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end))\n    |\n\n",
                  "warning: you seem to be trying to use `match` for an equality check. Consider using `if`\n   --> kernel/src/tasks/memset.rs:213:9\n    |\n213 | /         match &self.mtype {\n214 | |             MemType::ShareFile => {\n215 | |                 let start = self.start;\n216 | |                 let len = self.len;\n...   |\n232 | |             _ => {}\n233 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n    = note: `#[warn(clippy::single_match)]` on by default\nhelp: try\n    |\n213 ~         if self.mtype == MemType::ShareFile {\n214 +             let start = self.start;\n215 +             let len = self.len;\n216 +             let mapfile = self.file.clone().unwrap();\n217 +             for tracker in &self.mtrackers {\n218 +                 if Arc::strong_count(&tracker.tracker) > 1 {\n219 +                     continue;\n220 +                 }\n221 + \n222 +                 let offset = tracker.vpn.to_addr() - start;\n223 +                 let wlen = min(len - offset, PAGE_SIZE);\n224 + \n225 +                 let bytes = &mut tracker.tracker.0.get_buffer()[..wlen];\n226 +                 mapfile\n227 +                     .writeat(offset, bytes)\n228 +                     .expect(\"can't write data to file at drop\");\n229 +             }\n230 +         }\n    |\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/task.rs",
              "count": 4,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this function has too many arguments (8/7)\n   --> kernel/src/tasks/task.rs:142:5\n    |\n142 | /     pub fn map_frames(\n143 | |         &self,\n144 | |         vpn: VirtPage,\n145 | |         mtype: MemType,\n...   |\n150 | |         len: usize,\n151 | |     ) -> Option<PhysPage> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n",
                  "warning: using `clone` on type `TrapFrame` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:320:29\n    |\n320 |         new_tcb_writer.cx = self.tcb.read().cx.clone();\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.tcb.read().cx`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n",
                  "warning: using `clone` on type `TrapFrame` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:360:17\n    |\n360 |             cx: parent_tcb.cx.clone(),\n    |                 ^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `parent_tcb.cx`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n",
                  "warning: using `clone` on type `SigProcMask` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:361:22\n    |\n361 |             sigmask: parent_tcb.sigmask.clone(),\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `parent_tcb.sigmask`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
                ]
              }
            },
            {
              "file": "kernel/build.rs",
              "count": 3,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: comparison to empty slice\n  --> kernel/build.rs:17:12\n   |\n17 |         if module == \"\" {\n   |            ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `module.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n   = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n",
                  "warning: single-character string constant used as pattern\n  --> kernel/build.rs:20:84\n   |\n20 |         module_file_content.push_str(&format!(\"extern crate {};\\n\", module.replace(\"-\", \"_\")))\n   |                                                                                    ^^^ help: try using a `char` instead: `'-'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n",
                  "warning: single-character string constant used as pattern\n  --> kernel/build.rs:29:16\n   |\n29 |         .split(\",\")\n   |                ^^^ help: try using a `char` instead: `','`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/user/signal.rs",
              "count": 3,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: using `clone` on type `SigAction` which implements the `Copy` trait\n  --> kernel/src/user/signal.rs:28:25\n   |\n28 |         let sigaction = self.task.pcb.lock().sigaction[signal.num()].clone();\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.task.pcb.lock().sigaction[signal.num()]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n",
                  "warning: using `clone` on type `TrapFrame` which implements the `Copy` trait\n  --> kernel/src/user/signal.rs:57:24\n   |\n57 |         let store_cx = cx_ref.clone();\n   |                        ^^^^^^^^^^^^^^ help: try dereferencing it: `*cx_ref`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/user/signal.rs:65:22\n   |\n65 |         cx.store_ctx(&cx_ref);\n   |                      ^^^^^^^ help: change this to: `cx_ref`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/user/socket_pair.rs",
              "count": 3,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:42:9\n   |\n42 | /         if events.contains(PollEvent::POLLOUT) {\n43 | |             if self.inner.lock().len() <= 0x50000 {\n44 | |                 res |= PollEvent::POLLOUT;\n45 | |             }\n46 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n   = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n   |\n42 ~         if events.contains(PollEvent::POLLOUT) && self.inner.lock().len() <= 0x50000 {\n43 +             res |= PollEvent::POLLOUT;\n44 +         }\n   |\n\n",
                  "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:47:9\n   |\n47 | /         if events.contains(PollEvent::POLLIN) {\n48 | |             if self.inner.lock().len() > 0 {\n49 | |                 res |= PollEvent::POLLIN;\n50 | |             }\n51 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n   |\n47 ~         if events.contains(PollEvent::POLLIN) && self.inner.lock().len() > 0 {\n48 +             res |= PollEvent::POLLIN;\n49 +         }\n   |\n\n",
                  "warning: useless conversion to the same type: `core::iter::Enumerate<alloc::collections::vec_deque::Drain<'_, u8>>`\n  --> kernel/src/user/socket_pair.rs:26:9\n   |\n26 | /         queue\n27 | |             .drain(..rlen)\n28 | |             .enumerate()\n29 | |             .into_iter()\n   | |________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\nhelp: consider removing `.into_iter()`\n   |\n26 ~         queue\n27 +             .drain(..rlen)\n28 +             .enumerate()\n   |\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/syscall/mod.rs",
              "count": 2,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unneeded sub `cfg` when there is only one condition\n   --> kernel/src/syscall/mod.rs:381:19\n    |\n381 |             #[cfg(any(target_arch = \"x86_64\"))]\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `target_arch = \"x86_64\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_minimal_cfg\n    = note: `#[warn(clippy::non_minimal_cfg)]` on by default\n\n",
                  "warning: useless conversion to the same type: `usize`\n   --> kernel/src/syscall/mod.rs:255:21\n    |\n255 |                     args[5].into(),\n    |                     ^^^^^^^^^^^^^^ help: consider removing `.into()`: `args[5]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/syscall/socket.rs",
              "count": 2,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this loop could be written as a `while let` loop\n   --> kernel/src/syscall/socket.rs:237:9\n    |\n237 | /         loop {\n238 | |             match socket.inner.clone().connect(remote) {\n239 | |                 Err(NetServerError::Blocking) => {}\n240 | |                 _ => break,\n241 | |             }\n242 | |             yield_now().await;\n243 | |         }\n    | |_________^ help: try: `while let Err(NetServerError::Blocking) = socket.inner.clone().connect(remote) { .. }`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#while_let_loop\n    = note: `#[warn(clippy::while_let_loop)]` on by default\n\n",
                  "warning: using `clone` on type `Ipv4Addr` which implements the `Copy` trait\n   --> kernel/src/syscall/socket.rs:488:27\n    |\n488 |                 sa.addr = new_socket.get_remote().unwrap().ip().clone();\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*new_socket.get_remote().unwrap().ip()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n    = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/mod.rs",
              "count": 2,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: manual `RangeInclusive::contains` implementation\n  --> kernel/src/tasks/mod.rs:57:20\n   |\n57 |                 if c >= 0x20 && c <= 0x7e {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^ help: use: `(0x20..=0x7e).contains(&c)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n   = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n",
                  "warning: name `TMS` contains a capitalized acronym\n   --> kernel/src/tasks/mod.rs:125:12\n    |\n125 | pub struct TMS {\n    |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Tms`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/main.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: matching on `Some` with `ok()` is redundant\n  --> kernel/src/main.rs:77:13\n   |\n77 |             if let Some(task) = current_task().downcast_arc::<UserTask>().ok() {\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_result_ok\n   = note: `#[warn(clippy::match_result_ok)]` on by default\nhelp: consider matching on `Ok(task)` and removing the call to `ok` instead\n   |\n77 |             if let Ok(task) = current_task().downcast_arc::<UserTask>() {\n   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/syscall/shm.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this is a decimal constant\n  --> kernel/src/syscall/shm.rs:31:21\n   |\n31 |         if shmflg & 01000 > 0 {\n   |                     ^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_prefixed_literal\n   = note: `#[warn(clippy::zero_prefixed_literal)]` on by default\nhelp: if you mean to use a decimal constant, remove the `0` to avoid confusion\n   |\n31 |         if shmflg & 1000 > 0 {\n   |                     ~~~~\nhelp: if you mean to use an octal constant, use `0o`\n   |\n31 |         if shmflg & 0o1000 > 0 {\n   |                     ~~~~~~\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/elf.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this function has too many arguments (10/7)\n   --> kernel/src/tasks/elf.rs:108:1\n    |\n108 | / pub fn init_task_stack(\n109 | |     user_task: Arc<UserTask>,\n110 | |     args: Vec<String>,\n111 | |     base: usize,\n...   |\n118 | |     tls: usize,\n119 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/shm.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: equality checks against true are unnecessary\n  --> kernel/src/tasks/shm.rs:30:49\n   |\n30 |         if Arc::strong_count(&self.mem) == 1 && *self.mem.deleted.lock() == true {\n   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `*self.mem.deleted.lock()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
                ]
              }
            }
          ]
        }
      ]
    }
  },
  {
    "target_triple": "riscv64gc-unknown-none-elf",
    "data": {
      "kinds_order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Unformatted"
      ],
      "data": [
        {
          "user": "kern-crates",
          "repo": "ByteOS",
          "package": "kernel",
          "count": 137,
          "raw_reports": [
            {
              "file": "kernel/src/syscall/consts.rs",
              "count": 55,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: name `EPERM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:21:5\n   |\n21 |     EPERM = 1,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eperm`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOENT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:23:5\n   |\n23 |     ENOENT = 2,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoent`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ESRCH` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:25:5\n   |\n25 |     ESRCH = 3,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Esrch`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EINTR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:27:5\n   |\n27 |     EINTR = 4,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eintr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:29:5\n   |\n29 |     EIO = 5,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Eio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENXIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:31:5\n   |\n31 |     ENXIO = 6,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enxio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOEXEC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:35:5\n   |\n35 |     ENOEXEC = 8,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoexec`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EBADF` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:37:5\n   |\n37 |     EBADF = 9,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebadf`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ECHILD` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:39:5\n   |\n39 |     ECHILD = 10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Echild`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EAGAIN` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:41:5\n   |\n41 |     EAGAIN = 11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eagain`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOMEM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:43:5\n   |\n43 |     ENOMEM = 12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enomem`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EACCES` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:45:5\n   |\n45 |     EACCES = 13,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eacces`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EFAULT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:47:5\n   |\n47 |     EFAULT = 14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efault`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOTBLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:49:5\n   |\n49 |     ENOTBLK = 15,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotblk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EBUSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:51:5\n   |\n51 |     EBUSY = 16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebusy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EEXIST` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:53:5\n   |\n53 |     EEXIST = 17,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eexist`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EXDEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:55:5\n   |\n55 |     EXDEV = 18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Exdev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENODEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:57:5\n   |\n57 |     ENODEV = 19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enodev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOTDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:59:5\n   |\n59 |     ENOTDIR = 20,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EISDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:61:5\n   |\n61 |     EISDIR = 21,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eisdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EINVAL` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:63:5\n   |\n63 |     EINVAL = 22,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Einval`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:65:5\n   |\n65 |     ENFILE = 23,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EMFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:67:5\n   |\n67 |     EMFILE = 24,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOTTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:69:5\n   |\n69 |     ENOTTY = 25,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ETXTBSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:71:5\n   |\n71 |     ETXTBSY = 26,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxtbsy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EFBIG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:73:5\n   |\n73 |     EFBIG = 27,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efbig`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOSPC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:75:5\n   |\n75 |     ENOSPC = 28,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enospc`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ESPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:77:5\n   |\n77 |     ESPIPE = 29,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Espipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EROFS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:79:5\n   |\n79 |     EROFS = 30,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erofs`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EMLINK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:81:5\n   |\n81 |     EMLINK = 31,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emlink`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:83:5\n   |\n83 |     EPIPE = 32,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EDOM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:85:5\n   |\n85 |     EDOM = 33,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Edom`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ERANGE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:87:5\n   |\n87 |     ERANGE = 34,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erange`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EDEADLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:89:5\n   |\n89 |     EDEADLK = 35,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edeadlk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENAMETOOLONG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:91:5\n   |\n91 |     ENAMETOOLONG = 36,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enametoolong`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOLCK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:93:5\n   |\n93 |     ENOLCK = 37,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enolck`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOSYS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:95:5\n   |\n95 |     ENOSYS = 38,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enosys`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOTEMPTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:97:5\n   |\n97 |     ENOTEMPTY = 39,\n   |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotempty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EAFNOSUPPORT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:99:5\n   |\n99 |     EAFNOSUPPORT = 97,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eafnosupport`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOTCONN` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:101:5\n    |\n101 |     ENOTCONN = 107,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotconn`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ETIMEDOUT` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:103:5\n    |\n103 |     ETIMEDOUT = 100,\n    |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etimedout`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ECONNREFUSED` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:105:5\n    |\n105 |     ECONNREFUSED = 111,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Econnrefused`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EALREADY` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:107:5\n    |\n107 |     EALREADY = 114,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ealready`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: casting integer literal to `isize` is unnecessary\n   --> kernel/src/syscall/consts.rs:422:27\n    |\n422 | pub const AT_CWD: usize = -100 as isize as usize;\n    |                           ^^^^^^^^^^^^^ help: try: `-100_isize`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n",
                  "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:509:1\n    |\n509 | impl Into<MappingFlags> for MmapProt {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n    = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<syscall::consts::MmapProt>`\n    |\n509 ~ impl From<MmapProt> for MappingFlags {\n510 ~     fn from(val: MmapProt) -> Self {\n511 |         let mut res = MappingFlags::empty();\n512 ~         if val.contains(MmapProt::PROT_READ) {\n513 |             res |= MappingFlags::R;\n514 |         }\n515 ~         if val.contains(MmapProt::PROT_WRITE) {\n516 |             res |= MappingFlags::W;\n517 |         }\n518 ~         if val.contains(MmapProt::PROT_EXEC) {\n    |\n\n",
                  "warning: name `DUPFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:607:5\n    |\n607 |     DUPFD = 0,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `GETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:609:5\n    |\n609 |     GETFD = 1,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `SETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:611:5\n    |\n611 |     SETFD = 2,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `GETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:613:5\n    |\n613 |     GETFL = 3,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `SETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:615:5\n    |\n615 |     SETFL = 4,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `GETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:617:5\n    |\n617 |     GETLK = 5,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `SETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:619:5\n    |\n619 |     SETLK = 6,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `SETLKW` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:621:5\n    |\n621 |     SETLKW = 7,\n    |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlkw`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `DUPFDCLOEXEC` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:623:5\n    |\n623 |     DUPFDCLOEXEC = 0x406,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfdcloexec`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:872:1\n    |\n872 | impl<T> Into<usize> for UserRef<T> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<syscall::consts::UserRef<T>>`\n    |\n872 ~ impl<T> From<UserRef<T>> for usize {\n873 ~     fn from(val: UserRef<T>) -> Self {\n874 ~         val.addr.addr()\n    |\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/syscall/task.rs",
              "count": 18,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this `else { if .. }` block can be collapsed\n   --> kernel/src/syscall/task.rs:726:24\n    |\n726 |                   } else {\n    |  ________________________^\n727 | |                     if let Some(index) = target_signal.real_time_index() {\n728 | |                         child_tcb.signal_queue[index] += 1;\n729 | |                     }\n730 | |                 }\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\n    = note: `#[warn(clippy::collapsible_else_if)]` on by default\nhelp: collapse nested if block\n    |\n726 ~                 } else if let Some(index) = target_signal.real_time_index() {\n727 +                     child_tcb.signal_queue[index] += 1;\n728 +                 }\n    |\n\n",
                  "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:757:36\n    |\n757 |             sec: stime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n    = note: `#[warn(clippy::inconsistent_digit_grouping)]` on by default\n\n",
                  "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:758:37\n    |\n758 |             usec: stime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n",
                  "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:761:36\n    |\n761 |             sec: utime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n",
                  "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:762:37\n    |\n762 |             usec: utime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/syscall/task.rs:68:45\n   |\n68 |     if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n   |                                             ^^^^^^^ help: change this to: `buffer`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                  "warning: redundant closure\n   --> kernel/src/syscall/task.rs:126:26\n    |\n126 |                     .map(|x| Arc::new(x))\n    |                          ^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Arc::new`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n    = note: `#[warn(clippy::redundant_closure)]` on by default\n\n",
                  "warning: useless conversion to the same type: `alloc::string::String`\n   --> kernel/src/syscall/task.rs:192:16\n    |\n192 |     let path = String::from(path);\n    |                ^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/task.rs:243:59\n    |\n243 |         let elf = if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n    |                                                           ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                  "warning: parameter is only used in recursion\n   --> kernel/src/syscall/task.rs:189:5\n    |\n189 |     envp: Vec<String>,\n    |     ^^^^ help: if this is intentional, prefix it with an underscore: `_envp`\n    |\nnote: parameter used here\n   --> kernel/src/syscall/task.rs:248:79\n    |\n248 |             return exec_with_process(task, String::from(\"busybox\"), new_args, envp).await;\n    |                                                                               ^^^^\n...\n271 |                 return exec_with_process(task, new_args[0].clone(), new_args, envp).await;\n    |                                                                               ^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\n    = note: `#[warn(clippy::only_used_in_recursion)]` on by default\n\n",
                  "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:405:14\n    |\n405 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n    = note: `#[warn(clippy::into_iter_on_ref)]` on by default\n\n",
                  "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:411:14\n    |\n411 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n\n",
                  "warning: use of `.then_some(..).unwrap_or(..)` can be written more clearly with `if .. else ..`\n   --> kernel/src/syscall/task.rs:460:31\n    |\n460 |           let clear_child_tid = flags\n    |  _______________________________^\n461 | |             .contains(CloneFlags::CLONE_CHILD_CLEARTID)\n462 | |             .then_some(ctid)\n463 | |             .unwrap_or(UserRef::from(0));\n    | |________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#obfuscated_if_else\n    = note: `#[warn(clippy::obfuscated_if_else)]` on by default\nhelp: try\n    |\n460 ~         let clear_child_tid = if flags\n461 ~             .contains(CloneFlags::CLONE_CHILD_CLEARTID) { ctid } else { UserRef::from(0) };\n    |\n\n",
                  "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:513:21\n    |\n513 | /                     inner\n514 | |                         .children\n515 | |                         .iter()\n516 | |                         .find(|x| x.task_id == pid as usize)\n517 | |                         .map(|x| x.clone())\n    | |___________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\n    = note: `#[warn(clippy::map_clone)]` on by default\nhelp: consider calling the dedicated `cloned` method\n    |\n513 ~                     inner\n514 +                         .children\n515 +                         .iter()\n516 +                         .find(|x| x.task_id == pid as usize).cloned()\n    |\n\n",
                  "warning: called `.iter().count()` on a `Vec`\n   --> kernel/src/syscall/task.rs:524:17\n    |\n524 |                 self.task.pcb.lock().children.iter().count()\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.task.pcb.lock().children.len()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#iter_count\n    = note: `#[warn(clippy::iter_count)]` on by default\n\n",
                  "warning: called `map_or(None, ..)` on an `Option` value. This can be done more directly by calling `and_then(..)` instead\n   --> kernel/src/syscall/task.rs:554:24\n    |\n554 |             let exit = child_task.clone().map_or(None, |x| x.exit_code());\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using `and_then` instead: `child_task.clone().and_then(|x| x.exit_code())`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_or_none\n    = note: `#[warn(clippy::option_map_or_none)]` on by default\n\n",
                  "warning: unneeded `return` statement\n   --> kernel/src/syscall/task.rs:698:17\n    |\n698 |                 return Err(LinuxError::EPERM);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n698 -                 return Err(LinuxError::EPERM);\n698 +                 Err(LinuxError::EPERM)\n    |\n\n",
                  "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:706:13\n    |\n706 | /             x.threads\n707 | |                 .iter()\n708 | |                 .find(|x| match x.upgrade() {\n709 | |                     Some(thread) => thread.task_id == tid,\n710 | |                     None => false,\n711 | |                 })\n712 | |                 .map(|x| x.clone())\n    | |___________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\nhelp: consider calling the dedicated `cloned` method\n    |\n706 ~             x.threads\n707 +                 .iter()\n708 +                 .find(|x| match x.upgrade() {\n709 +                     Some(thread) => thread.task_id == tid,\n710 +                     None => false,\n711 +                 }).cloned()\n    |\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/initproc.rs",
              "count": 12,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: constants have by default a `'static` lifetime\n   --> kernel/src/tasks/initproc.rs:213:27\n    |\n213 | pub const USER_WORK_DIR: &'static str = \"/\";\n    |                          -^^^^^^^---- help: consider removing `'static`: `&str`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n    = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default\n\n",
                  "warning: useless conversion to the same type: `hashbrown::hash_map::Values<'_, usize, alloc::sync::Weak<dyn executor::AsyncTask>>`\n  --> kernel/src/tasks/initproc.rs:59:5\n   |\n59 |     TASK_MAP.lock().values().into_iter().for_each(|task| {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `TASK_MAP.lock().values()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n",
                  "warning: unneeded `return` statement\n   --> kernel/src/tasks/initproc.rs:118:5\n    |\n118 |     return true;\n    |     ^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n118 -     return true;\n118 +     true\n    |\n\n",
                  "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:122:41\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                         ^^^ help: try using a `char` instead: `' '`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n",
                  "warning: comparison to empty slice\n   --> kernel/src/tasks/initproc.rs:122:57\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                                         ^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!x.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n    = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n",
                  "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:125:47\n    |\n125 |     let filename = match filename.starts_with(\"/\") {\n    |                                               ^^^ help: try using a `char` instead: `'/'`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n",
                  "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:184:19\n    |\n184 |             match c as u8 {\n    |                   ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                  "warning: unnecessary use of `to_string`\n   --> kernel/src/tasks/initproc.rs:187:40\n    |\n187 |                     let sign = command(&String::from_utf8_lossy(&buffer).to_string()).await;\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `String::from_utf8_lossy(&buffer).as_ref()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n    = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n",
                  "warning: length comparison to zero\n   --> kernel/src/tasks/initproc.rs:195:24\n    |\n195 |                     if buffer.len() > 0 {\n    |                        ^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n",
                  "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:204:33\n    |\n204 |                     buffer.push(c as u8);\n    |                                 ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                  "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:205:43\n    |\n205 |                     DebugConsole::putchar(c as u8);\n    |                                           ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                  "warning: called `is_none()` after searching an `Iterator` with `find`\n   --> kernel/src/tasks/initproc.rs:400:8\n    |\n400 |       if TASK_MAP\n    |  ________^\n401 | |         .lock()\n402 | |         .values()\n403 | |         .find(|x| {\n...   |\n407 | |         })\n408 | |         .is_none()\n    | |__________________^\n    |\n    = help: this is more succinctly expressed by calling `any()` with negation\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/syscall/fd.rs",
              "count": 7,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: digits of hex, binary or octal literal not in groups of equal size\n   --> kernel/src/syscall/fd.rs:936:31\n    |\n936 |             stime + timeout * 0x1000_000\n    |                               ^^^^^^^^^^ help: consider: `0x0100_0000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n    = note: `#[warn(clippy::unusual_byte_groupings)]` on by default\n\n",
                  "warning: length comparison to zero\n  --> kernel/src/syscall/fd.rs:26:8\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |        ^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!path.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n",
                  "warning: single-character string constant used as pattern\n  --> kernel/src/syscall/fd.rs:26:43\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |                                           ^^^ help: try using a `char` instead: `'/'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/fd.rs:298:50\n    |\n298 |         dentry_open(dir.dentry.clone().unwrap(), &path, OpenFlags::NONE)\n    |                                                  ^^^^^ help: change this to: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                  "warning: the loop variable `i` is only used to index `ts`\n   --> kernel/src/syscall/fd.rs:529:26\n    |\n529 |                 for i in 0..2 {\n    |                          ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n529 |                 for <item> in ts.iter().take(2) {\n    |                     ~~~~~~    ~~~~~~~~~~~~~~~~~\n\n",
                  "warning: the loop variable `i` is only used to index `poll_fds`\n   --> kernel/src/syscall/fd.rs:667:22\n    |\n667 |             for i in 0..nfds {\n    |                      ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n667 |             for <item> in poll_fds.iter_mut().take(nfds) {\n    |                 ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n",
                  "warning: the method `writeat` doesn't need a mutable reference\n   --> kernel/src/syscall/fd.rs:995:46\n    |\n995 |                 .writeat(*off_out.get_ref(), &mut buffer[..rsize])\n    |                                              ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/async_ops.rs",
              "count": 6,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/async_ops.rs:67:10\n   |\n67 |           .find(|x| x.contains(&task_id))\n   |  __________^\n68 | |         .is_some()\n   | |__________________^ help: use `any()` instead: `any(|x| x.contains(&task_id))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n   = note: `#[warn(clippy::search_is_some)]` on by default\n\n",
                  "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/tasks/async_ops.rs:81:21\n   |\n81 | /                     self.0\n82 | |                         .lock()\n83 | |                         .values_mut()\n84 | |                         .find(|x| x.contains(&self.1))\n85 | |                         .map(|x| x.retain(|x| *x != self.1));\n   | |____________________________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\nhelp: try\n   |\n81 ~                     if let Some(x) = self.0\n82 +                         .lock()\n83 +                         .values_mut()\n84 +                         .find(|x| x.contains(&self.1)) { x.retain(|x| *x != self.1) }\n   |\n\n",
                  "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:121:41\n    |\n121 |             .map(|x| x.drain(..cmp::min(wake_count as usize, que_size)));\n    |                                         ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                  "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:138:28\n    |\n138 |         .map(|x| x.drain(..wake_count as usize).count())\n    |                            ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                  "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:143:28\n    |\n143 |         .map(|x| x.drain(..reque_count as usize).collect());\n    |                            ^^^^^^^^^^^^^^^^^^^^ help: try: `reque_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                  "warning: usage of `contains_key` followed by `insert` on a `BTreeMap`\n   --> kernel/src/tasks/async_ops.rs:146:9\n    |\n146 | /         if !futex_table.contains_key(&uaddr2) {\n147 | |             futex_table.insert(uaddr2, vec![]);\n148 | |         }\n    | |_________^ help: try: `futex_table.entry(uaddr2).or_insert_with(|| vec![]);`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_entry\n    = note: `#[warn(clippy::map_entry)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/filetable.rs",
              "count": 6,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/filetable.rs:78:6\n   |\n78 | impl<'a> FileItem {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n",
                  "warning: manual implementation of an assign operation\n   --> kernel/src/tasks/filetable.rs:210:13\n    |\n210 |             ptr = ptr + current_len;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `ptr += current_len`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n    = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n",
                  "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:333:12\n    |\n333 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n",
                  "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:349:12\n    |\n349 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n",
                  "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:374:12\n    |\n374 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/tasks/filetable.rs:378:47\n    |\n378 |         WaitBlockingWrite(self.inner.clone(), &buffer, offset)\n    |                                               ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/socket.rs",
              "count": 5,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: name `STEAM` contains a capitalized acronym\n  --> kernel/src/socket.rs:15:5\n   |\n15 |     STEAM,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Steam`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `DGRAME` contains a capitalized acronym\n  --> kernel/src/socket.rs:16:5\n   |\n16 |     DGRAME,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dgrame`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `RAW` contains a capitalized acronym\n  --> kernel/src/socket.rs:17:5\n   |\n17 |     RAW,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Raw`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: length comparison to zero\n   --> kernel/src/socket.rs:163:12\n    |\n163 |         if data.len() == 0 {\n    |            ^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `data.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/socket.rs:186:33\n    |\n186 |         match self.inner.sendto(&buffer, None) {\n    |                                 ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/epoll/mod.rs",
              "count": 4,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/epoll/mod.rs:65:17\n   |\n65 | //                 self.data.lock().get_mut(&fd).map(|x| {\n66 | ||                     *x = ev;\n67 | ||                 });\n   | ||__________________^- help: try: `if let Some(x) = self.data.lock().get_mut(&fd) { *x = ev; }`\n   |  |__________________|\n   | \n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\n   = note: `#[warn(clippy::option_map_unit_fn)]` on by default\n\n",
                  "warning: name `ADD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:79:5\n   |\n79 |     ADD = 1,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Add`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n",
                  "warning: name `DEL` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:80:5\n   |\n80 |     DEL = 2,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Del`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `MOD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:81:5\n   |\n81 |     MOD = 3,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Mod`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/memset.rs",
              "count": 4,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/memset.rs:32:6\n   |\n32 | impl<'a> MemSet {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n",
                  "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/memset.rs:38:23\n   |\n38 |         self.0.iter().find(|x| x.overlapping(start, end)).is_some()\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| x.overlapping(start, end))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n",
                  "warning: returning the result of a `let` binding from a block\n   --> kernel/src/tasks/memset.rs:111:9\n    |\n109 | /         let res =\n110 | |             !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end));\n    | |____________________________________________________________________________________________________- unnecessary `let` binding\n111 |           res\n    |           ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n    = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n    |\n109 ~         \n110 ~         !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end))\n    |\n\n",
                  "warning: you seem to be trying to use `match` for an equality check. Consider using `if`\n   --> kernel/src/tasks/memset.rs:213:9\n    |\n213 | /         match &self.mtype {\n214 | |             MemType::ShareFile => {\n215 | |                 let start = self.start;\n216 | |                 let len = self.len;\n...   |\n232 | |             _ => {}\n233 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n    = note: `#[warn(clippy::single_match)]` on by default\nhelp: try\n    |\n213 ~         if self.mtype == MemType::ShareFile {\n214 +             let start = self.start;\n215 +             let len = self.len;\n216 +             let mapfile = self.file.clone().unwrap();\n217 +             for tracker in &self.mtrackers {\n218 +                 if Arc::strong_count(&tracker.tracker) > 1 {\n219 +                     continue;\n220 +                 }\n221 + \n222 +                 let offset = tracker.vpn.to_addr() - start;\n223 +                 let wlen = min(len - offset, PAGE_SIZE);\n224 + \n225 +                 let bytes = &mut tracker.tracker.0.get_buffer()[..wlen];\n226 +                 mapfile\n227 +                     .writeat(offset, bytes)\n228 +                     .expect(\"can't write data to file at drop\");\n229 +             }\n230 +         }\n    |\n\n"
                ]
              }
            },
            {
              "file": "kernel/build.rs",
              "count": 3,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: comparison to empty slice\n  --> kernel/build.rs:17:12\n   |\n17 |         if module == \"\" {\n   |            ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `module.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n   = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n",
                  "warning: single-character string constant used as pattern\n  --> kernel/build.rs:20:84\n   |\n20 |         module_file_content.push_str(&format!(\"extern crate {};\\n\", module.replace(\"-\", \"_\")))\n   |                                                                                    ^^^ help: try using a `char` instead: `'-'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n",
                  "warning: single-character string constant used as pattern\n  --> kernel/build.rs:29:16\n   |\n29 |         .split(\",\")\n   |                ^^^ help: try using a `char` instead: `','`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/user/socket_pair.rs",
              "count": 3,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:42:9\n   |\n42 | /         if events.contains(PollEvent::POLLOUT) {\n43 | |             if self.inner.lock().len() <= 0x50000 {\n44 | |                 res |= PollEvent::POLLOUT;\n45 | |             }\n46 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n   = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n   |\n42 ~         if events.contains(PollEvent::POLLOUT) && self.inner.lock().len() <= 0x50000 {\n43 +             res |= PollEvent::POLLOUT;\n44 +         }\n   |\n\n",
                  "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:47:9\n   |\n47 | /         if events.contains(PollEvent::POLLIN) {\n48 | |             if self.inner.lock().len() > 0 {\n49 | |                 res |= PollEvent::POLLIN;\n50 | |             }\n51 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n   |\n47 ~         if events.contains(PollEvent::POLLIN) && self.inner.lock().len() > 0 {\n48 +             res |= PollEvent::POLLIN;\n49 +         }\n   |\n\n",
                  "warning: useless conversion to the same type: `core::iter::Enumerate<alloc::collections::vec_deque::Drain<'_, u8>>`\n  --> kernel/src/user/socket_pair.rs:26:9\n   |\n26 | /         queue\n27 | |             .drain(..rlen)\n28 | |             .enumerate()\n29 | |             .into_iter()\n   | |________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\nhelp: consider removing `.into_iter()`\n   |\n26 ~         queue\n27 +             .drain(..rlen)\n28 +             .enumerate()\n   |\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/syscall/mod.rs",
              "count": 2,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unneeded sub `cfg` when there is only one condition\n   --> kernel/src/syscall/mod.rs:381:19\n    |\n381 |             #[cfg(any(target_arch = \"x86_64\"))]\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `target_arch = \"x86_64\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_minimal_cfg\n    = note: `#[warn(clippy::non_minimal_cfg)]` on by default\n\n",
                  "warning: useless conversion to the same type: `usize`\n   --> kernel/src/syscall/mod.rs:255:21\n    |\n255 |                     args[5].into(),\n    |                     ^^^^^^^^^^^^^^ help: consider removing `.into()`: `args[5]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/syscall/socket.rs",
              "count": 2,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this loop could be written as a `while let` loop\n   --> kernel/src/syscall/socket.rs:237:9\n    |\n237 | /         loop {\n238 | |             match socket.inner.clone().connect(remote) {\n239 | |                 Err(NetServerError::Blocking) => {}\n240 | |                 _ => break,\n241 | |             }\n242 | |             yield_now().await;\n243 | |         }\n    | |_________^ help: try: `while let Err(NetServerError::Blocking) = socket.inner.clone().connect(remote) { .. }`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#while_let_loop\n    = note: `#[warn(clippy::while_let_loop)]` on by default\n\n",
                  "warning: using `clone` on type `Ipv4Addr` which implements the `Copy` trait\n   --> kernel/src/syscall/socket.rs:488:27\n    |\n488 |                 sa.addr = new_socket.get_remote().unwrap().ip().clone();\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*new_socket.get_remote().unwrap().ip()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n    = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/mod.rs",
              "count": 2,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: manual `RangeInclusive::contains` implementation\n  --> kernel/src/tasks/mod.rs:57:20\n   |\n57 |                 if c >= 0x20 && c <= 0x7e {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^ help: use: `(0x20..=0x7e).contains(&c)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n   = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n",
                  "warning: name `TMS` contains a capitalized acronym\n   --> kernel/src/tasks/mod.rs:125:12\n    |\n125 | pub struct TMS {\n    |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Tms`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/task.rs",
              "count": 2,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this function has too many arguments (8/7)\n   --> kernel/src/tasks/task.rs:142:5\n    |\n142 | /     pub fn map_frames(\n143 | |         &self,\n144 | |         vpn: VirtPage,\n145 | |         mtype: MemType,\n...   |\n150 | |         len: usize,\n151 | |     ) -> Option<PhysPage> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n",
                  "warning: using `clone` on type `SigProcMask` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:361:22\n    |\n361 |             sigmask: parent_tcb.sigmask.clone(),\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `parent_tcb.sigmask`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/user/signal.rs",
              "count": 2,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: using `clone` on type `SigAction` which implements the `Copy` trait\n  --> kernel/src/user/signal.rs:28:25\n   |\n28 |         let sigaction = self.task.pcb.lock().sigaction[signal.num()].clone();\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.task.pcb.lock().sigaction[signal.num()]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/user/signal.rs:65:22\n   |\n65 |         cx.store_ctx(&cx_ref);\n   |                      ^^^^^^^ help: change this to: `cx_ref`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/main.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: matching on `Some` with `ok()` is redundant\n  --> kernel/src/main.rs:77:13\n   |\n77 |             if let Some(task) = current_task().downcast_arc::<UserTask>().ok() {\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_result_ok\n   = note: `#[warn(clippy::match_result_ok)]` on by default\nhelp: consider matching on `Ok(task)` and removing the call to `ok` instead\n   |\n77 |             if let Ok(task) = current_task().downcast_arc::<UserTask>() {\n   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/syscall/shm.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this is a decimal constant\n  --> kernel/src/syscall/shm.rs:31:21\n   |\n31 |         if shmflg & 01000 > 0 {\n   |                     ^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_prefixed_literal\n   = note: `#[warn(clippy::zero_prefixed_literal)]` on by default\nhelp: if you mean to use a decimal constant, remove the `0` to avoid confusion\n   |\n31 |         if shmflg & 1000 > 0 {\n   |                     ~~~~\nhelp: if you mean to use an octal constant, use `0o`\n   |\n31 |         if shmflg & 0o1000 > 0 {\n   |                     ~~~~~~\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/elf.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this function has too many arguments (10/7)\n   --> kernel/src/tasks/elf.rs:108:1\n    |\n108 | / pub fn init_task_stack(\n109 | |     user_task: Arc<UserTask>,\n110 | |     args: Vec<String>,\n111 | |     base: usize,\n...   |\n118 | |     tls: usize,\n119 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/shm.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: equality checks against true are unnecessary\n  --> kernel/src/tasks/shm.rs:30:49\n   |\n30 |         if Arc::strong_count(&self.mem) == 1 && *self.mem.deleted.lock() == true {\n   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `*self.mem.deleted.lock()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "shilei-massclouds",
          "repo": "axdtb",
          "package": "axdtb",
          "count": 26,
          "raw_reports": [
            {
              "file": "src/lib.rs",
              "count": 14,
              "kinds": {
                "Unformatted": [
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 3 to 3)\n-use core::str;\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 5 to 5)\n+use core::str;\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 12 to 12)\n-const MAGIC_NUMBER     : u32 = 0xd00dfeed;\n+const MAGIC_NUMBER: u32 = 0xd00dfeed;\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 14 to 16)\n-const OF_DT_BEGIN_NODE : u32 = 0x00000001;\n-const OF_DT_END_NODE   : u32 = 0x00000002;\n-const OF_DT_PROP       : u32 = 0x00000003;\n+const OF_DT_BEGIN_NODE: u32 = 0x00000001;\n+const OF_DT_END_NODE: u32 = 0x00000002;\n+const OF_DT_PROP: u32 = 0x00000003;\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 38 to 40)\n-        let buf = unsafe {\n-            core::slice::from_raw_parts(ptr as *const u8, 24)\n-        };\n+        let buf = unsafe { core::slice::from_raw_parts(ptr as *const u8, 24) };\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 43 to 43)\n-            return Err(DeviceTreeError::BadMagicNumber)\n+            return Err(DeviceTreeError::BadMagicNumber);\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 53 to 55)\n-        Ok(\n-            Self {ptr, totalsize, off_struct, off_strings}\n-        )\n+        Ok(Self {\n+            ptr,\n+            totalsize,\n+            off_struct,\n+            off_strings,\n+        })\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 61 to 61)\n-        &self, mut pos: usize,\n+        &self,\n+        mut pos: usize,\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 64 to 64)\n-        cb: &mut dyn FnMut(String, usize, usize, Vec<(String, Vec<u8>)>)\n+        cb: &mut dyn FnMut(String, usize, usize, Vec<(String, Vec<u8>)>),\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 66 to 68)\n-        let buf = unsafe {\n-            core::slice::from_raw_parts(self.ptr as *const u8, self.totalsize)\n-        };\n+        let buf = unsafe { core::slice::from_raw_parts(self.ptr as *const u8, self.totalsize) };\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 72 to 72)\n-            return Err(DeviceTreeError::ParseError(pos))\n+            return Err(DeviceTreeError::ParseError(pos));\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 82 to 83)\n-            let val_size = buf.read_be_u32(pos+4)? as usize;\n-            let name_offset = buf.read_be_u32(pos+8)? as usize;\n+            let val_size = buf.read_be_u32(pos + 4)? as usize;\n+            let name_offset = buf.read_be_u32(pos + 8)? as usize;\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 115 to 115)\n-            return Err(DeviceTreeError::ParseError(pos))\n+            return Err(DeviceTreeError::ParseError(pos));\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 131 to 131)\n-where F: FnMut(String, usize, usize, Vec<(String, Vec<u8>)>)\n+where\n+    F: FnMut(String, usize, usize, Vec<(String, Vec<u8>)>),\n"
                ]
              }
            },
            {
              "file": "src/util.rs",
              "count": 6,
              "kinds": {
                "Unformatted": [
                  "file: /ci/axdtb/axdtb/src/util.rs (original lines from 1 to 1)\n-use crate::{DeviceTreeResult, DeviceTreeError};\n+use crate::{DeviceTreeError, DeviceTreeResult};\n",
                  "file: /ci/axdtb/axdtb/src/util.rs (original lines from 13 to 14)\n-        if ! (pos+4 <= self.len()) {\n-            return Err(DeviceTreeError::SliceReadError)\n+        if !(pos + 4 <= self.len()) {\n+            return Err(DeviceTreeError::SliceReadError);\n",
                  "file: /ci/axdtb/axdtb/src/util.rs (original lines from 17 to 22)\n-        Ok(\n-            (self[pos] as u32) << 24\n-            | (self[pos+1] as u32) << 16\n-            | (self[pos+2] as u32) << 8\n-            | (self[pos+3] as u32)\n-        )\n+        Ok((self[pos] as u32) << 24\n+            | (self[pos + 1] as u32) << 16\n+            | (self[pos + 2] as u32) << 8\n+            | (self[pos + 3] as u32))\n",
                  "file: /ci/axdtb/axdtb/src/util.rs (original lines from 26 to 26)\n-        let lo: u64 = self.read_be_u32(pos+4)?.into();\n+        let lo: u64 = self.read_be_u32(pos + 4)?.into();\n",
                  "file: /ci/axdtb/axdtb/src/util.rs (original lines from 33 to 33)\n-                return Ok(&self[pos..cur])\n+                return Ok(&self[pos..cur]);\n",
                  "file: /ci/axdtb/axdtb/src/util.rs (original lines from 40 to 41)\n-        if ! (end < self.len()) {\n-            return Err(DeviceTreeError::SliceReadError)\n+        if !(end < self.len()) {\n+            return Err(DeviceTreeError::SliceReadError);\n"
                ]
              }
            },
            {
              "file": "tests/test_dtb.rs",
              "count": 6,
              "kinds": {
                "Unformatted": [
                  "file: /ci/axdtb/axdtb/tests/test_dtb.rs (original lines from 1 to 2)\n-use std::str;\n-use std::io::Read;\n",
                  "file: /ci/axdtb/axdtb/tests/test_dtb.rs (original lines from 4 to 4)\n+use std::io::Read;\n+use std::str;\n",
                  "file: /ci/axdtb/axdtb/tests/test_dtb.rs (original lines from 11 to 18)\n-    let mut cb = |name: String, addr_cells: usize, size_cells: usize, props: Vec<(String, Vec<u8>)>| {\n-        match name.as_str() {\n-            \"\" => {\n-                assert_eq!(addr_cells, 2);\n-                assert_eq!(size_cells, 2);\n-                for prop in &props {\n-                    if prop.0.as_str() == \"compatible\" {\n-                        assert_eq!(str::from_utf8(&(prop.1)), Ok(\"riscv-virtio\\0\"));\n+    let mut cb =\n+        |name: String, addr_cells: usize, size_cells: usize, props: Vec<(String, Vec<u8>)>| {\n+            match name.as_str() {\n+                \"\" => {\n+                    assert_eq!(addr_cells, 2);\n+                    assert_eq!(size_cells, 2);\n+                    for prop in &props {\n+                        if prop.0.as_str() == \"compatible\" {\n+                            assert_eq!(str::from_utf8(&(prop.1)), Ok(\"riscv-virtio\\0\"));\n+                        }\n",
                  "file: /ci/axdtb/axdtb/tests/test_dtb.rs (original lines from 21 to 27)\n-            },\n-            \"soc\" => {\n-                assert_eq!(addr_cells, 2);\n-                assert_eq!(size_cells, 2);\n-                for prop in &props {\n-                    if prop.0.as_str() == \"compatible\" {\n-                        assert_eq!(str::from_utf8(&(prop.1)), Ok(\"simple-bus\\0\"));\n+                \"soc\" => {\n+                    assert_eq!(addr_cells, 2);\n+                    assert_eq!(size_cells, 2);\n+                    for prop in &props {\n+                        if prop.0.as_str() == \"compatible\" {\n+                            assert_eq!(str::from_utf8(&(prop.1)), Ok(\"simple-bus\\0\"));\n+                        }\n",
                  "file: /ci/axdtb/axdtb/tests/test_dtb.rs (original lines from 30 to 40)\n-            },\n-            \"virtio_mmio@10001000\" => {\n-                assert_eq!(addr_cells, 2);\n-                assert_eq!(size_cells, 2);\n-                for prop in &props {\n-                    if prop.0.as_str() == \"compatible\" {\n-                        assert_eq!(str::from_utf8(&(prop.1)), Ok(\"virtio,mmio\\0\"));\n-                    } else if prop.0.as_str() == \"reg\" {\n-                        let reg = &(prop.1);\n-                        assert_eq!(reg.as_slice().read_be_u64(0).unwrap(), 0x10001000);\n-                        assert_eq!(reg.as_slice().read_be_u64(8).unwrap(), 0x1000);\n+                \"virtio_mmio@10001000\" => {\n+                    assert_eq!(addr_cells, 2);\n+                    assert_eq!(size_cells, 2);\n+                    for prop in &props {\n+                        if prop.0.as_str() == \"compatible\" {\n+                            assert_eq!(str::from_utf8(&(prop.1)), Ok(\"virtio,mmio\\0\"));\n+                        } else if prop.0.as_str() == \"reg\" {\n+                            let reg = &(prop.1);\n+                            assert_eq!(reg.as_slice().read_be_u64(0).unwrap(), 0x10001000);\n+                            assert_eq!(reg.as_slice().read_be_u64(8).unwrap(), 0x1000);\n+                        }\n",
                  "file: /ci/axdtb/axdtb/tests/test_dtb.rs (original lines from 43 to 46)\n-            },\n-            _ => {}\n-        }\n-    };\n+                _ => {}\n+            }\n+        };\n"
                ]
              }
            }
          ]
        },
        {
          "user": "elliott10",
          "repo": "e1000-driver",
          "package": "e1000-driver",
          "count": 25,
          "raw_reports": [
            {
              "file": "examples/src/boot/sbi.rs",
              "count": 11,
              "kinds": {
                "Unformatted": [
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 3 to 4)\n-pub fn console_putchar(ch: usize){\n-\tsbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n+pub fn console_putchar(ch: usize) {\n+    sbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 8 to 8)\n-\treturn sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n+    return sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 11 to 23)\n-pub fn console_putchar_u8(ch: u8){\n-\tlet ret: isize;\n-\t//let arg0: char = ch as char;\n-\tlet arg0: u8 = ch;\n-\tlet arg1: usize = 0;\n-\tlet arg2: usize = 0;\n-\tlet which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n-\tunsafe{\n-\t\tasm!(\"ecall\",\n-\t\t     lateout(\"x10\") ret,\n-\t\t     in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-             );\n-\t}\n+pub fn console_putchar_u8(ch: u8) {\n+    let ret: isize;\n+    //let arg0: char = ch as char;\n+    let arg0: u8 = ch;\n+    let arg1: usize = 0;\n+    let arg2: usize = 0;\n+    let which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n+    unsafe {\n+        asm!(\"ecall\",\n+        lateout(\"x10\") ret,\n+        in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 26 to 28)\n-fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize{\n-\tlet ret: isize;\n-\tunsafe{\n+fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize {\n+    let ret: isize;\n+    unsafe {\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 30 to 34)\n-             lateout(\"x10\") ret,\n-             in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-            );\n-\t}\n-\tret\n+         lateout(\"x10\") ret,\n+         in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n+    ret\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 37 to 39)\n-pub fn set_timer(stime_value: u64){\n-\t#[cfg(target_pointer_width = \"32\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n+pub fn set_timer(stime_value: u64) {\n+    #[cfg(target_pointer_width = \"32\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 41 to 42)\n-\t#[cfg(target_pointer_width = \"64\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n+    #[cfg(target_pointer_width = \"64\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 44 to 45)\n-pub fn clear_ipi(){\n-\tsbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n+pub fn clear_ipi() {\n+    sbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 48 to 49)\n-pub fn send_ipi(sipi_value: usize){\n-\tsbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n+pub fn send_ipi(sipi_value: usize) {\n+    sbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 52 to 53)\n-pub fn set_s_insn(entry: usize){\n-\tsbi_call(SBI_SET_SINSN, entry, 0, 0);\n+pub fn set_s_insn(entry: usize) {\n+    sbi_call(SBI_SET_SINSN, entry, 0, 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 56 to 57)\n-pub fn shutdown(){\n-\tsbi_call(SBI_SHUTDOWN, 0, 0, 0);\n+pub fn shutdown() {\n+    sbi_call(SBI_SHUTDOWN, 0, 0, 0);\n"
                ]
              }
            },
            {
              "file": "src/lib.rs",
              "count": 4,
              "kinds": {
                "Unformatted": [
                  "file: /ci/e1000-driver/src/lib.rs (original lines from 9 to 9)\n-mod utils;\n",
                  "file: /ci/e1000-driver/src/lib.rs (original lines from 12 to 12)\n+mod utils;\n",
                  "file: /ci/e1000-driver/src/lib.rs (original lines from 17 to 17)\n-\n",
                  "file: /ci/e1000-driver/src/lib.rs (original lines from 23 to 25)\n-    fn it_works() {\n-\n-    }\n+    fn it_works() {}\n"
                ]
              }
            },
            {
              "file": "examples/src/boot/lang_items.rs",
              "count": 3,
              "kinds": {
                "Unformatted": [
                  "file: /ci/e1000-driver/examples/src/boot/lang_items.rs (original lines from 4 to 7)\n-fn panic(info: &PanicInfo) -> !{\n-\tprintln!(\"{}\", info);\n-\tcrate::boot::sbi::shutdown();\n-\tunreachable!()\n+fn panic(info: &PanicInfo) -> ! {\n+    println!(\"{}\", info);\n+    crate::boot::sbi::shutdown();\n+    unreachable!()\n",
                  "file: /ci/e1000-driver/examples/src/boot/lang_items.rs (original lines from 11 to 12)\n-pub extern \"C\" fn abort() -> !{\n-\tpanic!(\"abort!\");\n+pub extern \"C\" fn abort() -> ! {\n+    panic!(\"abort!\");\n",
                  "file: /ci/e1000-driver/examples/src/boot/lang_items.rs (original lines from 14 to 14)\n-\n"
                ]
              }
            },
            {
              "file": "src/pci.rs",
              "count": 3,
              "kinds": {
                "Unformatted": [
                  "file: /ci/e1000-driver/src/pci.rs (original lines from 3 to 3)\n-use volatile::Volatile;\n",
                  "file: /ci/e1000-driver/src/pci.rs (original lines from 5 to 5)\n+use volatile::Volatile;\n",
                  "file: /ci/e1000-driver/src/pci.rs (original lines from 22 to 22)\n-        let deve_id = unsafe{ (*pci_base).read() };\n+        let deve_id = unsafe { (*pci_base).read() };\n"
                ]
              }
            },
            {
              "file": "examples/src/pci_impl.rs",
              "count": 2,
              "kinds": {
                "Unformatted": [
                  "file: /ci/e1000-driver/examples/src/pci_impl.rs (original lines from 2 to 2)\n-use pci::{PortOps, CSpaceAccessMethod};\n+use pci::{CSpaceAccessMethod, PortOps};\n",
                  "file: /ci/e1000-driver/examples/src/pci_impl.rs (original lines from 9 to 9)\n-pub const PCI_COMMAND_INTX_DISABLE:u16 = 0x400;\n+pub const PCI_COMMAND_INTX_DISABLE: u16 = 0x400;\n"
                ]
              }
            },
            {
              "file": "examples/src/boot/mod.rs",
              "count": 1,
              "kinds": {
                "Unformatted": [
                  "file: /ci/e1000-driver/examples/src/boot/mod.rs (original lines from 17 to 17)\n-\n"
                ]
              }
            },
            {
              "file": "examples/src/e1000.rs",
              "count": 1,
              "kinds": {
                "Unformatted": [
                  "file: /ci/e1000-driver/examples/src/e1000.rs (original lines from 126 to 126)\n+\n"
                ]
              }
            }
          ]
        },
        {
          "user": "elliott10",
          "repo": "e1000-driver",
          "package": "e1000-driver-test",
          "count": 18,
          "raw_reports": [
            {
              "file": "src/boot/sbi.rs",
              "count": 11,
              "kinds": {
                "Unformatted": [
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 3 to 4)\n-pub fn console_putchar(ch: usize){\n-\tsbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n+pub fn console_putchar(ch: usize) {\n+    sbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 8 to 8)\n-\treturn sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n+    return sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 11 to 23)\n-pub fn console_putchar_u8(ch: u8){\n-\tlet ret: isize;\n-\t//let arg0: char = ch as char;\n-\tlet arg0: u8 = ch;\n-\tlet arg1: usize = 0;\n-\tlet arg2: usize = 0;\n-\tlet which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n-\tunsafe{\n-\t\tasm!(\"ecall\",\n-\t\t     lateout(\"x10\") ret,\n-\t\t     in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-             );\n-\t}\n+pub fn console_putchar_u8(ch: u8) {\n+    let ret: isize;\n+    //let arg0: char = ch as char;\n+    let arg0: u8 = ch;\n+    let arg1: usize = 0;\n+    let arg2: usize = 0;\n+    let which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n+    unsafe {\n+        asm!(\"ecall\",\n+        lateout(\"x10\") ret,\n+        in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 26 to 28)\n-fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize{\n-\tlet ret: isize;\n-\tunsafe{\n+fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize {\n+    let ret: isize;\n+    unsafe {\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 30 to 34)\n-             lateout(\"x10\") ret,\n-             in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-            );\n-\t}\n-\tret\n+         lateout(\"x10\") ret,\n+         in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n+    ret\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 37 to 39)\n-pub fn set_timer(stime_value: u64){\n-\t#[cfg(target_pointer_width = \"32\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n+pub fn set_timer(stime_value: u64) {\n+    #[cfg(target_pointer_width = \"32\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 41 to 42)\n-\t#[cfg(target_pointer_width = \"64\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n+    #[cfg(target_pointer_width = \"64\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 44 to 45)\n-pub fn clear_ipi(){\n-\tsbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n+pub fn clear_ipi() {\n+    sbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 48 to 49)\n-pub fn send_ipi(sipi_value: usize){\n-\tsbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n+pub fn send_ipi(sipi_value: usize) {\n+    sbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 52 to 53)\n-pub fn set_s_insn(entry: usize){\n-\tsbi_call(SBI_SET_SINSN, entry, 0, 0);\n+pub fn set_s_insn(entry: usize) {\n+    sbi_call(SBI_SET_SINSN, entry, 0, 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 56 to 57)\n-pub fn shutdown(){\n-\tsbi_call(SBI_SHUTDOWN, 0, 0, 0);\n+pub fn shutdown() {\n+    sbi_call(SBI_SHUTDOWN, 0, 0, 0);\n"
                ]
              }
            },
            {
              "file": "src/boot/lang_items.rs",
              "count": 3,
              "kinds": {
                "Unformatted": [
                  "file: /ci/e1000-driver/examples/src/boot/lang_items.rs (original lines from 4 to 7)\n-fn panic(info: &PanicInfo) -> !{\n-\tprintln!(\"{}\", info);\n-\tcrate::boot::sbi::shutdown();\n-\tunreachable!()\n+fn panic(info: &PanicInfo) -> ! {\n+    println!(\"{}\", info);\n+    crate::boot::sbi::shutdown();\n+    unreachable!()\n",
                  "file: /ci/e1000-driver/examples/src/boot/lang_items.rs (original lines from 11 to 12)\n-pub extern \"C\" fn abort() -> !{\n-\tpanic!(\"abort!\");\n+pub extern \"C\" fn abort() -> ! {\n+    panic!(\"abort!\");\n",
                  "file: /ci/e1000-driver/examples/src/boot/lang_items.rs (original lines from 14 to 14)\n-\n"
                ]
              }
            },
            {
              "file": "src/pci_impl.rs",
              "count": 2,
              "kinds": {
                "Unformatted": [
                  "file: /ci/e1000-driver/examples/src/pci_impl.rs (original lines from 2 to 2)\n-use pci::{PortOps, CSpaceAccessMethod};\n+use pci::{CSpaceAccessMethod, PortOps};\n",
                  "file: /ci/e1000-driver/examples/src/pci_impl.rs (original lines from 9 to 9)\n-pub const PCI_COMMAND_INTX_DISABLE:u16 = 0x400;\n+pub const PCI_COMMAND_INTX_DISABLE: u16 = 0x400;\n"
                ]
              }
            },
            {
              "file": "src/boot/mod.rs",
              "count": 1,
              "kinds": {
                "Unformatted": [
                  "file: /ci/e1000-driver/examples/src/boot/mod.rs (original lines from 17 to 17)\n-\n"
                ]
              }
            },
            {
              "file": "src/e1000.rs",
              "count": 1,
              "kinds": {
                "Unformatted": [
                  "file: /ci/e1000-driver/examples/src/e1000.rs (original lines from 126 to 126)\n+\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "mingo",
          "count": 5,
          "raw_reports": [
            {
              "file": "src/main.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n",
                  "error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n",
                  "error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"
                ]
              }
            },
            {
              "file": "src/cpu.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\n"
                ]
              }
            },
            {
              "file": "src/panic_wait.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "shilei-massclouds",
          "repo": "axdtb",
          "package": "rt_axdtb",
          "count": 5,
          "raw_reports": [
            {
              "file": "src/main.rs",
              "count": 5,
              "kinds": {
                "Unformatted": [
                  "file: /ci/axdtb/rt_axdtb/src/main.rs (original lines from 27 to 41)\n-    let mut cb = |name: String,\n-                  _addr_cells: usize,\n-                  _size_cells: usize,\n-                  props: Vec<(String, Vec<u8>)>| {\n-        match name.as_str() {\n-            \"chosen\" => {\n-                for prop in props {\n-                    match prop.0.as_str() {\n-                        \"bootargs\" => {\n-                            if let Ok(cmd) = core::str::from_utf8(&prop.1) {\n-                                let cmd = cmd.trim_end_matches(char::from(0));\n-                                assert!(cmd.len() > 0);\n-                                assert!(cmd.starts_with(\"init=\"));\n-                                let cmd = cmd.strip_prefix(\"init=\").unwrap();\n-                                assert!(cmd == \"/sbin/init\" || cmd == \"/btp/sbin/hello\");\n+    let mut cb =\n+        |name: String, _addr_cells: usize, _size_cells: usize, props: Vec<(String, Vec<u8>)>| {\n+            match name.as_str() {\n+                \"chosen\" => {\n+                    for prop in props {\n+                        match prop.0.as_str() {\n+                            \"bootargs\" => {\n+                                if let Ok(cmd) = core::str::from_utf8(&prop.1) {\n+                                    let cmd = cmd.trim_end_matches(char::from(0));\n+                                    assert!(cmd.len() > 0);\n+                                    assert!(cmd.starts_with(\"init=\"));\n+                                    let cmd = cmd.strip_prefix(\"init=\").unwrap();\n+                                    assert!(cmd == \"/sbin/init\" || cmd == \"/btp/sbin/hello\");\n+                                }\n",
                  "file: /ci/axdtb/rt_axdtb/src/main.rs (original lines from 43 to 43)\n+                            _ => (),\n",
                  "file: /ci/axdtb/rt_axdtb/src/main.rs (original lines from 44 to 44)\n-                        _ => (),\n",
                  "file: /ci/axdtb/rt_axdtb/src/main.rs (original lines from 47 to 50)\n-            },\n-            _ => (),\n-        }\n-    };\n+                _ => (),\n+            }\n+        };\n",
                  "file: /ci/axdtb/rt_axdtb/src/main.rs (original lines from 56 to 57)\n-fn test_dtb(_dtb_pa: usize) {\n-}\n+fn test_dtb(_dtb_pa: usize) {}\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axfs",
          "count": 3,
          "raw_reports": [
            {
              "file": "modules/axfs/src/api/file.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/api/file.rs:27:5\n   |\n27 | /     pub const fn new() -> Self {\n28 | |         OpenOptions(fops::OpenOptions::new())\n29 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl Default for OpenOptions {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
                ]
              }
            },
            {
              "file": "modules/axfs/src/fops.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/fops.rs:54:5\n   |\n54 | /     pub const fn new() -> Self {\n55 | |         Self {\n56 | |             // generic\n57 | |             read: false,\n...  |\n66 | |         }\n67 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n52 + impl Default for OpenOptions {\n53 +     fn default() -> Self {\n54 +         Self::new()\n55 +     }\n56 + }\n   |\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/riscv/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/riscv/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "arceos_posix_api",
          "count": 2,
          "raw_reports": [
            {
              "file": "modules/axhal/src/arch/riscv/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/riscv/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "Not supported to display yet.",
              "count": 1,
              "kinds": {
                "Lockbud(Possibly)": [
                  "[2024-09-04T00:43:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-04T00:43:10Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axnet",
          "count": 2,
          "raw_reports": [
            {
              "file": "modules/axhal/src/arch/riscv/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/riscv/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axnet/src/smoltcp_impl/tcp.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: you should consider adding a `Default` implementation for `TcpSocket`\n  --> modules/axnet/src/smoltcp_impl/tcp.rs:50:5\n   |\n50 | /     pub const fn new() -> Self {\n51 | |         Self {\n52 | |             state: AtomicU8::new(STATE_CLOSED),\n53 | |             handle: UnsafeCell::new(None),\n...  |\n57 | |         }\n58 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n48 + impl Default for TcpSocket {\n49 +     fn default() -> Self {\n50 +         Self::new()\n51 +     }\n52 + }\n   |\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "kern-crates",
          "repo": "sel4_cspace",
          "package": "sel4_cspace",
          "count": 2,
          "raw_reports": [
            {
              "file": "src/lib.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: the feature `asm_const` has been stable since 1.82.0-nightly and no longer requires an attribute to enable\n --> src/lib.rs:4:12\n  |\n4 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "Not supported to display yet.",
              "count": 1,
              "kinds": {
                "Lockbud(Possibly)": [
                  "[2024-09-04T00:41:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-04T00:41:21Z WARN  lockbud::callbacks] crate riscv_target contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "arceos_api",
          "count": 1,
          "raw_reports": [
            {
              "file": "modules/axhal/src/arch/riscv/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/riscv/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axalloc",
          "count": 1,
          "raw_reports": [
            {
              "file": "modules/axalloc/src/lib.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: you should consider adding a `Default` implementation for `GlobalAllocator`\n  --> modules/axalloc/src/lib.rs:57:5\n   |\n57 | /     pub const fn new() -> Self {\n58 | |         Self {\n59 | |             balloc: SpinNoIrq::new(DefaultByteAllocator::new()),\n60 | |             palloc: SpinNoIrq::new(BitmapPageAllocator::new()),\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n55 + impl Default for GlobalAllocator {\n56 +     fn default() -> Self {\n57 +         Self::new()\n58 +     }\n59 + }\n   |\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axdisplay",
          "count": 1,
          "raw_reports": [
            {
              "file": "modules/axhal/src/arch/riscv/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/riscv/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axdma",
          "count": 1,
          "raw_reports": [
            {
              "file": "modules/axhal/src/arch/riscv/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/riscv/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axdriver",
          "count": 1,
          "raw_reports": [
            {
              "file": "modules/axhal/src/arch/riscv/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/riscv/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axfeat",
          "count": 1,
          "raw_reports": [
            {
              "file": "modules/axhal/src/arch/riscv/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/riscv/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axhal",
          "count": 1,
          "raw_reports": [
            {
              "file": "modules/axhal/src/arch/riscv/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/riscv/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axlibc",
          "count": 1,
          "raw_reports": [
            {
              "file": "Not supported to display yet.",
              "count": 1,
              "kinds": {
                "Lockbud(Possibly)": [
                  "[2024-09-04T00:46:50Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-04T00:46:50Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axmm",
          "count": 1,
          "raw_reports": [
            {
              "file": "modules/axhal/src/arch/riscv/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/riscv/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axruntime",
          "count": 1,
          "raw_reports": [
            {
              "file": "modules/axhal/src/arch/riscv/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/riscv/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axstd",
          "count": 1,
          "raw_reports": [
            {
              "file": "modules/axhal/src/arch/riscv/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/riscv/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axsync",
          "count": 1,
          "raw_reports": [
            {
              "file": "modules/axhal/src/arch/riscv/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/riscv/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axtask",
          "count": 1,
          "raw_reports": [
            {
              "file": "modules/axhal/src/arch/riscv/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/riscv/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        }
      ]
    }
  },
  {
    "target_triple": "riscv64imac-unknown-none-elf",
    "data": {
      "kinds_order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Unformatted"
      ],
      "data": [
        {
          "user": "kern-crates",
          "repo": "ByteOS",
          "package": "kernel",
          "count": 137,
          "raw_reports": [
            {
              "file": "kernel/src/syscall/consts.rs",
              "count": 55,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: name `EPERM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:21:5\n   |\n21 |     EPERM = 1,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eperm`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOENT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:23:5\n   |\n23 |     ENOENT = 2,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoent`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ESRCH` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:25:5\n   |\n25 |     ESRCH = 3,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Esrch`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EINTR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:27:5\n   |\n27 |     EINTR = 4,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eintr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:29:5\n   |\n29 |     EIO = 5,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Eio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENXIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:31:5\n   |\n31 |     ENXIO = 6,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enxio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOEXEC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:35:5\n   |\n35 |     ENOEXEC = 8,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoexec`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EBADF` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:37:5\n   |\n37 |     EBADF = 9,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebadf`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ECHILD` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:39:5\n   |\n39 |     ECHILD = 10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Echild`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EAGAIN` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:41:5\n   |\n41 |     EAGAIN = 11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eagain`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOMEM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:43:5\n   |\n43 |     ENOMEM = 12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enomem`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EACCES` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:45:5\n   |\n45 |     EACCES = 13,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eacces`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EFAULT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:47:5\n   |\n47 |     EFAULT = 14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efault`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOTBLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:49:5\n   |\n49 |     ENOTBLK = 15,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotblk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EBUSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:51:5\n   |\n51 |     EBUSY = 16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebusy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EEXIST` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:53:5\n   |\n53 |     EEXIST = 17,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eexist`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EXDEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:55:5\n   |\n55 |     EXDEV = 18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Exdev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENODEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:57:5\n   |\n57 |     ENODEV = 19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enodev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOTDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:59:5\n   |\n59 |     ENOTDIR = 20,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EISDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:61:5\n   |\n61 |     EISDIR = 21,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eisdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EINVAL` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:63:5\n   |\n63 |     EINVAL = 22,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Einval`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:65:5\n   |\n65 |     ENFILE = 23,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EMFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:67:5\n   |\n67 |     EMFILE = 24,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOTTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:69:5\n   |\n69 |     ENOTTY = 25,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ETXTBSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:71:5\n   |\n71 |     ETXTBSY = 26,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxtbsy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EFBIG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:73:5\n   |\n73 |     EFBIG = 27,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efbig`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOSPC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:75:5\n   |\n75 |     ENOSPC = 28,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enospc`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ESPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:77:5\n   |\n77 |     ESPIPE = 29,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Espipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EROFS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:79:5\n   |\n79 |     EROFS = 30,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erofs`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EMLINK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:81:5\n   |\n81 |     EMLINK = 31,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emlink`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:83:5\n   |\n83 |     EPIPE = 32,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EDOM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:85:5\n   |\n85 |     EDOM = 33,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Edom`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ERANGE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:87:5\n   |\n87 |     ERANGE = 34,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erange`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EDEADLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:89:5\n   |\n89 |     EDEADLK = 35,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edeadlk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENAMETOOLONG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:91:5\n   |\n91 |     ENAMETOOLONG = 36,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enametoolong`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOLCK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:93:5\n   |\n93 |     ENOLCK = 37,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enolck`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOSYS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:95:5\n   |\n95 |     ENOSYS = 38,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enosys`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOTEMPTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:97:5\n   |\n97 |     ENOTEMPTY = 39,\n   |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotempty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EAFNOSUPPORT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:99:5\n   |\n99 |     EAFNOSUPPORT = 97,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eafnosupport`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ENOTCONN` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:101:5\n    |\n101 |     ENOTCONN = 107,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotconn`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ETIMEDOUT` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:103:5\n    |\n103 |     ETIMEDOUT = 100,\n    |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etimedout`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `ECONNREFUSED` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:105:5\n    |\n105 |     ECONNREFUSED = 111,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Econnrefused`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `EALREADY` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:107:5\n    |\n107 |     EALREADY = 114,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ealready`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: casting integer literal to `isize` is unnecessary\n   --> kernel/src/syscall/consts.rs:422:27\n    |\n422 | pub const AT_CWD: usize = -100 as isize as usize;\n    |                           ^^^^^^^^^^^^^ help: try: `-100_isize`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n",
                  "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:509:1\n    |\n509 | impl Into<MappingFlags> for MmapProt {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n    = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<syscall::consts::MmapProt>`\n    |\n509 ~ impl From<MmapProt> for MappingFlags {\n510 ~     fn from(val: MmapProt) -> Self {\n511 |         let mut res = MappingFlags::empty();\n512 ~         if val.contains(MmapProt::PROT_READ) {\n513 |             res |= MappingFlags::R;\n514 |         }\n515 ~         if val.contains(MmapProt::PROT_WRITE) {\n516 |             res |= MappingFlags::W;\n517 |         }\n518 ~         if val.contains(MmapProt::PROT_EXEC) {\n    |\n\n",
                  "warning: name `DUPFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:607:5\n    |\n607 |     DUPFD = 0,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `GETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:609:5\n    |\n609 |     GETFD = 1,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `SETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:611:5\n    |\n611 |     SETFD = 2,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `GETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:613:5\n    |\n613 |     GETFL = 3,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `SETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:615:5\n    |\n615 |     SETFL = 4,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `GETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:617:5\n    |\n617 |     GETLK = 5,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `SETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:619:5\n    |\n619 |     SETLK = 6,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `SETLKW` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:621:5\n    |\n621 |     SETLKW = 7,\n    |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlkw`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `DUPFDCLOEXEC` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:623:5\n    |\n623 |     DUPFDCLOEXEC = 0x406,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfdcloexec`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:872:1\n    |\n872 | impl<T> Into<usize> for UserRef<T> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<syscall::consts::UserRef<T>>`\n    |\n872 ~ impl<T> From<UserRef<T>> for usize {\n873 ~     fn from(val: UserRef<T>) -> Self {\n874 ~         val.addr.addr()\n    |\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/syscall/task.rs",
              "count": 18,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this `else { if .. }` block can be collapsed\n   --> kernel/src/syscall/task.rs:726:24\n    |\n726 |                   } else {\n    |  ________________________^\n727 | |                     if let Some(index) = target_signal.real_time_index() {\n728 | |                         child_tcb.signal_queue[index] += 1;\n729 | |                     }\n730 | |                 }\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\n    = note: `#[warn(clippy::collapsible_else_if)]` on by default\nhelp: collapse nested if block\n    |\n726 ~                 } else if let Some(index) = target_signal.real_time_index() {\n727 +                     child_tcb.signal_queue[index] += 1;\n728 +                 }\n    |\n\n",
                  "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:757:36\n    |\n757 |             sec: stime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n    = note: `#[warn(clippy::inconsistent_digit_grouping)]` on by default\n\n",
                  "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:758:37\n    |\n758 |             usec: stime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n",
                  "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:761:36\n    |\n761 |             sec: utime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n",
                  "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:762:37\n    |\n762 |             usec: utime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/syscall/task.rs:68:45\n   |\n68 |     if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n   |                                             ^^^^^^^ help: change this to: `buffer`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                  "warning: redundant closure\n   --> kernel/src/syscall/task.rs:126:26\n    |\n126 |                     .map(|x| Arc::new(x))\n    |                          ^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Arc::new`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n    = note: `#[warn(clippy::redundant_closure)]` on by default\n\n",
                  "warning: useless conversion to the same type: `alloc::string::String`\n   --> kernel/src/syscall/task.rs:192:16\n    |\n192 |     let path = String::from(path);\n    |                ^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/task.rs:243:59\n    |\n243 |         let elf = if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n    |                                                           ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                  "warning: parameter is only used in recursion\n   --> kernel/src/syscall/task.rs:189:5\n    |\n189 |     envp: Vec<String>,\n    |     ^^^^ help: if this is intentional, prefix it with an underscore: `_envp`\n    |\nnote: parameter used here\n   --> kernel/src/syscall/task.rs:248:79\n    |\n248 |             return exec_with_process(task, String::from(\"busybox\"), new_args, envp).await;\n    |                                                                               ^^^^\n...\n271 |                 return exec_with_process(task, new_args[0].clone(), new_args, envp).await;\n    |                                                                               ^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\n    = note: `#[warn(clippy::only_used_in_recursion)]` on by default\n\n",
                  "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:405:14\n    |\n405 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n    = note: `#[warn(clippy::into_iter_on_ref)]` on by default\n\n",
                  "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:411:14\n    |\n411 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n\n",
                  "warning: use of `.then_some(..).unwrap_or(..)` can be written more clearly with `if .. else ..`\n   --> kernel/src/syscall/task.rs:460:31\n    |\n460 |           let clear_child_tid = flags\n    |  _______________________________^\n461 | |             .contains(CloneFlags::CLONE_CHILD_CLEARTID)\n462 | |             .then_some(ctid)\n463 | |             .unwrap_or(UserRef::from(0));\n    | |________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#obfuscated_if_else\n    = note: `#[warn(clippy::obfuscated_if_else)]` on by default\nhelp: try\n    |\n460 ~         let clear_child_tid = if flags\n461 ~             .contains(CloneFlags::CLONE_CHILD_CLEARTID) { ctid } else { UserRef::from(0) };\n    |\n\n",
                  "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:513:21\n    |\n513 | /                     inner\n514 | |                         .children\n515 | |                         .iter()\n516 | |                         .find(|x| x.task_id == pid as usize)\n517 | |                         .map(|x| x.clone())\n    | |___________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\n    = note: `#[warn(clippy::map_clone)]` on by default\nhelp: consider calling the dedicated `cloned` method\n    |\n513 ~                     inner\n514 +                         .children\n515 +                         .iter()\n516 +                         .find(|x| x.task_id == pid as usize).cloned()\n    |\n\n",
                  "warning: called `.iter().count()` on a `Vec`\n   --> kernel/src/syscall/task.rs:524:17\n    |\n524 |                 self.task.pcb.lock().children.iter().count()\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.task.pcb.lock().children.len()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#iter_count\n    = note: `#[warn(clippy::iter_count)]` on by default\n\n",
                  "warning: called `map_or(None, ..)` on an `Option` value. This can be done more directly by calling `and_then(..)` instead\n   --> kernel/src/syscall/task.rs:554:24\n    |\n554 |             let exit = child_task.clone().map_or(None, |x| x.exit_code());\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using `and_then` instead: `child_task.clone().and_then(|x| x.exit_code())`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_or_none\n    = note: `#[warn(clippy::option_map_or_none)]` on by default\n\n",
                  "warning: unneeded `return` statement\n   --> kernel/src/syscall/task.rs:698:17\n    |\n698 |                 return Err(LinuxError::EPERM);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n698 -                 return Err(LinuxError::EPERM);\n698 +                 Err(LinuxError::EPERM)\n    |\n\n",
                  "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:706:13\n    |\n706 | /             x.threads\n707 | |                 .iter()\n708 | |                 .find(|x| match x.upgrade() {\n709 | |                     Some(thread) => thread.task_id == tid,\n710 | |                     None => false,\n711 | |                 })\n712 | |                 .map(|x| x.clone())\n    | |___________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\nhelp: consider calling the dedicated `cloned` method\n    |\n706 ~             x.threads\n707 +                 .iter()\n708 +                 .find(|x| match x.upgrade() {\n709 +                     Some(thread) => thread.task_id == tid,\n710 +                     None => false,\n711 +                 }).cloned()\n    |\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/initproc.rs",
              "count": 12,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: constants have by default a `'static` lifetime\n   --> kernel/src/tasks/initproc.rs:213:27\n    |\n213 | pub const USER_WORK_DIR: &'static str = \"/\";\n    |                          -^^^^^^^---- help: consider removing `'static`: `&str`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n    = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default\n\n",
                  "warning: useless conversion to the same type: `hashbrown::hash_map::Values<'_, usize, alloc::sync::Weak<dyn executor::AsyncTask>>`\n  --> kernel/src/tasks/initproc.rs:59:5\n   |\n59 |     TASK_MAP.lock().values().into_iter().for_each(|task| {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `TASK_MAP.lock().values()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n",
                  "warning: unneeded `return` statement\n   --> kernel/src/tasks/initproc.rs:118:5\n    |\n118 |     return true;\n    |     ^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n118 -     return true;\n118 +     true\n    |\n\n",
                  "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:122:41\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                         ^^^ help: try using a `char` instead: `' '`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n",
                  "warning: comparison to empty slice\n   --> kernel/src/tasks/initproc.rs:122:57\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                                         ^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!x.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n    = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n",
                  "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:125:47\n    |\n125 |     let filename = match filename.starts_with(\"/\") {\n    |                                               ^^^ help: try using a `char` instead: `'/'`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n",
                  "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:184:19\n    |\n184 |             match c as u8 {\n    |                   ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                  "warning: unnecessary use of `to_string`\n   --> kernel/src/tasks/initproc.rs:187:40\n    |\n187 |                     let sign = command(&String::from_utf8_lossy(&buffer).to_string()).await;\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `String::from_utf8_lossy(&buffer).as_ref()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n    = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n",
                  "warning: length comparison to zero\n   --> kernel/src/tasks/initproc.rs:195:24\n    |\n195 |                     if buffer.len() > 0 {\n    |                        ^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n",
                  "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:204:33\n    |\n204 |                     buffer.push(c as u8);\n    |                                 ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                  "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:205:43\n    |\n205 |                     DebugConsole::putchar(c as u8);\n    |                                           ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                  "warning: called `is_none()` after searching an `Iterator` with `find`\n   --> kernel/src/tasks/initproc.rs:400:8\n    |\n400 |       if TASK_MAP\n    |  ________^\n401 | |         .lock()\n402 | |         .values()\n403 | |         .find(|x| {\n...   |\n407 | |         })\n408 | |         .is_none()\n    | |__________________^\n    |\n    = help: this is more succinctly expressed by calling `any()` with negation\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/syscall/fd.rs",
              "count": 7,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: digits of hex, binary or octal literal not in groups of equal size\n   --> kernel/src/syscall/fd.rs:936:31\n    |\n936 |             stime + timeout * 0x1000_000\n    |                               ^^^^^^^^^^ help: consider: `0x0100_0000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n    = note: `#[warn(clippy::unusual_byte_groupings)]` on by default\n\n",
                  "warning: length comparison to zero\n  --> kernel/src/syscall/fd.rs:26:8\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |        ^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!path.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n",
                  "warning: single-character string constant used as pattern\n  --> kernel/src/syscall/fd.rs:26:43\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |                                           ^^^ help: try using a `char` instead: `'/'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/fd.rs:298:50\n    |\n298 |         dentry_open(dir.dentry.clone().unwrap(), &path, OpenFlags::NONE)\n    |                                                  ^^^^^ help: change this to: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                  "warning: the loop variable `i` is only used to index `ts`\n   --> kernel/src/syscall/fd.rs:529:26\n    |\n529 |                 for i in 0..2 {\n    |                          ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n529 |                 for <item> in ts.iter().take(2) {\n    |                     ~~~~~~    ~~~~~~~~~~~~~~~~~\n\n",
                  "warning: the loop variable `i` is only used to index `poll_fds`\n   --> kernel/src/syscall/fd.rs:667:22\n    |\n667 |             for i in 0..nfds {\n    |                      ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n667 |             for <item> in poll_fds.iter_mut().take(nfds) {\n    |                 ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n",
                  "warning: the method `writeat` doesn't need a mutable reference\n   --> kernel/src/syscall/fd.rs:995:46\n    |\n995 |                 .writeat(*off_out.get_ref(), &mut buffer[..rsize])\n    |                                              ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/async_ops.rs",
              "count": 6,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/async_ops.rs:67:10\n   |\n67 |           .find(|x| x.contains(&task_id))\n   |  __________^\n68 | |         .is_some()\n   | |__________________^ help: use `any()` instead: `any(|x| x.contains(&task_id))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n   = note: `#[warn(clippy::search_is_some)]` on by default\n\n",
                  "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/tasks/async_ops.rs:81:21\n   |\n81 | /                     self.0\n82 | |                         .lock()\n83 | |                         .values_mut()\n84 | |                         .find(|x| x.contains(&self.1))\n85 | |                         .map(|x| x.retain(|x| *x != self.1));\n   | |____________________________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\nhelp: try\n   |\n81 ~                     if let Some(x) = self.0\n82 +                         .lock()\n83 +                         .values_mut()\n84 +                         .find(|x| x.contains(&self.1)) { x.retain(|x| *x != self.1) }\n   |\n\n",
                  "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:121:41\n    |\n121 |             .map(|x| x.drain(..cmp::min(wake_count as usize, que_size)));\n    |                                         ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                  "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:138:28\n    |\n138 |         .map(|x| x.drain(..wake_count as usize).count())\n    |                            ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                  "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:143:28\n    |\n143 |         .map(|x| x.drain(..reque_count as usize).collect());\n    |                            ^^^^^^^^^^^^^^^^^^^^ help: try: `reque_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                  "warning: usage of `contains_key` followed by `insert` on a `BTreeMap`\n   --> kernel/src/tasks/async_ops.rs:146:9\n    |\n146 | /         if !futex_table.contains_key(&uaddr2) {\n147 | |             futex_table.insert(uaddr2, vec![]);\n148 | |         }\n    | |_________^ help: try: `futex_table.entry(uaddr2).or_insert_with(|| vec![]);`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_entry\n    = note: `#[warn(clippy::map_entry)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/filetable.rs",
              "count": 6,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/filetable.rs:78:6\n   |\n78 | impl<'a> FileItem {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n",
                  "warning: manual implementation of an assign operation\n   --> kernel/src/tasks/filetable.rs:210:13\n    |\n210 |             ptr = ptr + current_len;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `ptr += current_len`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n    = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n",
                  "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:333:12\n    |\n333 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n",
                  "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:349:12\n    |\n349 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n",
                  "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:374:12\n    |\n374 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/tasks/filetable.rs:378:47\n    |\n378 |         WaitBlockingWrite(self.inner.clone(), &buffer, offset)\n    |                                               ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/socket.rs",
              "count": 5,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: name `STEAM` contains a capitalized acronym\n  --> kernel/src/socket.rs:15:5\n   |\n15 |     STEAM,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Steam`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `DGRAME` contains a capitalized acronym\n  --> kernel/src/socket.rs:16:5\n   |\n16 |     DGRAME,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dgrame`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `RAW` contains a capitalized acronym\n  --> kernel/src/socket.rs:17:5\n   |\n17 |     RAW,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Raw`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: length comparison to zero\n   --> kernel/src/socket.rs:163:12\n    |\n163 |         if data.len() == 0 {\n    |            ^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `data.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/socket.rs:186:33\n    |\n186 |         match self.inner.sendto(&buffer, None) {\n    |                                 ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/epoll/mod.rs",
              "count": 4,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/epoll/mod.rs:65:17\n   |\n65 | //                 self.data.lock().get_mut(&fd).map(|x| {\n66 | ||                     *x = ev;\n67 | ||                 });\n   | ||__________________^- help: try: `if let Some(x) = self.data.lock().get_mut(&fd) { *x = ev; }`\n   |  |__________________|\n   | \n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\n   = note: `#[warn(clippy::option_map_unit_fn)]` on by default\n\n",
                  "warning: name `ADD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:79:5\n   |\n79 |     ADD = 1,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Add`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n",
                  "warning: name `DEL` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:80:5\n   |\n80 |     DEL = 2,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Del`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
                  "warning: name `MOD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:81:5\n   |\n81 |     MOD = 3,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Mod`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/memset.rs",
              "count": 4,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/memset.rs:32:6\n   |\n32 | impl<'a> MemSet {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n",
                  "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/memset.rs:38:23\n   |\n38 |         self.0.iter().find(|x| x.overlapping(start, end)).is_some()\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| x.overlapping(start, end))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n",
                  "warning: returning the result of a `let` binding from a block\n   --> kernel/src/tasks/memset.rs:111:9\n    |\n109 | /         let res =\n110 | |             !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end));\n    | |____________________________________________________________________________________________________- unnecessary `let` binding\n111 |           res\n    |           ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n    = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n    |\n109 ~         \n110 ~         !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end))\n    |\n\n",
                  "warning: you seem to be trying to use `match` for an equality check. Consider using `if`\n   --> kernel/src/tasks/memset.rs:213:9\n    |\n213 | /         match &self.mtype {\n214 | |             MemType::ShareFile => {\n215 | |                 let start = self.start;\n216 | |                 let len = self.len;\n...   |\n232 | |             _ => {}\n233 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n    = note: `#[warn(clippy::single_match)]` on by default\nhelp: try\n    |\n213 ~         if self.mtype == MemType::ShareFile {\n214 +             let start = self.start;\n215 +             let len = self.len;\n216 +             let mapfile = self.file.clone().unwrap();\n217 +             for tracker in &self.mtrackers {\n218 +                 if Arc::strong_count(&tracker.tracker) > 1 {\n219 +                     continue;\n220 +                 }\n221 + \n222 +                 let offset = tracker.vpn.to_addr() - start;\n223 +                 let wlen = min(len - offset, PAGE_SIZE);\n224 + \n225 +                 let bytes = &mut tracker.tracker.0.get_buffer()[..wlen];\n226 +                 mapfile\n227 +                     .writeat(offset, bytes)\n228 +                     .expect(\"can't write data to file at drop\");\n229 +             }\n230 +         }\n    |\n\n"
                ]
              }
            },
            {
              "file": "kernel/build.rs",
              "count": 3,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: comparison to empty slice\n  --> kernel/build.rs:17:12\n   |\n17 |         if module == \"\" {\n   |            ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `module.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n   = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n",
                  "warning: single-character string constant used as pattern\n  --> kernel/build.rs:20:84\n   |\n20 |         module_file_content.push_str(&format!(\"extern crate {};\\n\", module.replace(\"-\", \"_\")))\n   |                                                                                    ^^^ help: try using a `char` instead: `'-'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n",
                  "warning: single-character string constant used as pattern\n  --> kernel/build.rs:29:16\n   |\n29 |         .split(\",\")\n   |                ^^^ help: try using a `char` instead: `','`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/user/socket_pair.rs",
              "count": 3,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:42:9\n   |\n42 | /         if events.contains(PollEvent::POLLOUT) {\n43 | |             if self.inner.lock().len() <= 0x50000 {\n44 | |                 res |= PollEvent::POLLOUT;\n45 | |             }\n46 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n   = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n   |\n42 ~         if events.contains(PollEvent::POLLOUT) && self.inner.lock().len() <= 0x50000 {\n43 +             res |= PollEvent::POLLOUT;\n44 +         }\n   |\n\n",
                  "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:47:9\n   |\n47 | /         if events.contains(PollEvent::POLLIN) {\n48 | |             if self.inner.lock().len() > 0 {\n49 | |                 res |= PollEvent::POLLIN;\n50 | |             }\n51 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n   |\n47 ~         if events.contains(PollEvent::POLLIN) && self.inner.lock().len() > 0 {\n48 +             res |= PollEvent::POLLIN;\n49 +         }\n   |\n\n",
                  "warning: useless conversion to the same type: `core::iter::Enumerate<alloc::collections::vec_deque::Drain<'_, u8>>`\n  --> kernel/src/user/socket_pair.rs:26:9\n   |\n26 | /         queue\n27 | |             .drain(..rlen)\n28 | |             .enumerate()\n29 | |             .into_iter()\n   | |________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\nhelp: consider removing `.into_iter()`\n   |\n26 ~         queue\n27 +             .drain(..rlen)\n28 +             .enumerate()\n   |\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/syscall/mod.rs",
              "count": 2,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unneeded sub `cfg` when there is only one condition\n   --> kernel/src/syscall/mod.rs:381:19\n    |\n381 |             #[cfg(any(target_arch = \"x86_64\"))]\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `target_arch = \"x86_64\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_minimal_cfg\n    = note: `#[warn(clippy::non_minimal_cfg)]` on by default\n\n",
                  "warning: useless conversion to the same type: `usize`\n   --> kernel/src/syscall/mod.rs:255:21\n    |\n255 |                     args[5].into(),\n    |                     ^^^^^^^^^^^^^^ help: consider removing `.into()`: `args[5]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/syscall/socket.rs",
              "count": 2,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this loop could be written as a `while let` loop\n   --> kernel/src/syscall/socket.rs:237:9\n    |\n237 | /         loop {\n238 | |             match socket.inner.clone().connect(remote) {\n239 | |                 Err(NetServerError::Blocking) => {}\n240 | |                 _ => break,\n241 | |             }\n242 | |             yield_now().await;\n243 | |         }\n    | |_________^ help: try: `while let Err(NetServerError::Blocking) = socket.inner.clone().connect(remote) { .. }`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#while_let_loop\n    = note: `#[warn(clippy::while_let_loop)]` on by default\n\n",
                  "warning: using `clone` on type `Ipv4Addr` which implements the `Copy` trait\n   --> kernel/src/syscall/socket.rs:488:27\n    |\n488 |                 sa.addr = new_socket.get_remote().unwrap().ip().clone();\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*new_socket.get_remote().unwrap().ip()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n    = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/mod.rs",
              "count": 2,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: manual `RangeInclusive::contains` implementation\n  --> kernel/src/tasks/mod.rs:57:20\n   |\n57 |                 if c >= 0x20 && c <= 0x7e {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^ help: use: `(0x20..=0x7e).contains(&c)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n   = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n",
                  "warning: name `TMS` contains a capitalized acronym\n   --> kernel/src/tasks/mod.rs:125:12\n    |\n125 | pub struct TMS {\n    |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Tms`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/task.rs",
              "count": 2,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this function has too many arguments (8/7)\n   --> kernel/src/tasks/task.rs:142:5\n    |\n142 | /     pub fn map_frames(\n143 | |         &self,\n144 | |         vpn: VirtPage,\n145 | |         mtype: MemType,\n...   |\n150 | |         len: usize,\n151 | |     ) -> Option<PhysPage> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n",
                  "warning: using `clone` on type `SigProcMask` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:361:22\n    |\n361 |             sigmask: parent_tcb.sigmask.clone(),\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `parent_tcb.sigmask`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/user/signal.rs",
              "count": 2,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: using `clone` on type `SigAction` which implements the `Copy` trait\n  --> kernel/src/user/signal.rs:28:25\n   |\n28 |         let sigaction = self.task.pcb.lock().sigaction[signal.num()].clone();\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.task.pcb.lock().sigaction[signal.num()]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/user/signal.rs:65:22\n   |\n65 |         cx.store_ctx(&cx_ref);\n   |                      ^^^^^^^ help: change this to: `cx_ref`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/main.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: matching on `Some` with `ok()` is redundant\n  --> kernel/src/main.rs:77:13\n   |\n77 |             if let Some(task) = current_task().downcast_arc::<UserTask>().ok() {\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_result_ok\n   = note: `#[warn(clippy::match_result_ok)]` on by default\nhelp: consider matching on `Ok(task)` and removing the call to `ok` instead\n   |\n77 |             if let Ok(task) = current_task().downcast_arc::<UserTask>() {\n   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/syscall/shm.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this is a decimal constant\n  --> kernel/src/syscall/shm.rs:31:21\n   |\n31 |         if shmflg & 01000 > 0 {\n   |                     ^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_prefixed_literal\n   = note: `#[warn(clippy::zero_prefixed_literal)]` on by default\nhelp: if you mean to use a decimal constant, remove the `0` to avoid confusion\n   |\n31 |         if shmflg & 1000 > 0 {\n   |                     ~~~~\nhelp: if you mean to use an octal constant, use `0o`\n   |\n31 |         if shmflg & 0o1000 > 0 {\n   |                     ~~~~~~\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/elf.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this function has too many arguments (10/7)\n   --> kernel/src/tasks/elf.rs:108:1\n    |\n108 | / pub fn init_task_stack(\n109 | |     user_task: Arc<UserTask>,\n110 | |     args: Vec<String>,\n111 | |     base: usize,\n...   |\n118 | |     tls: usize,\n119 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/shm.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: equality checks against true are unnecessary\n  --> kernel/src/tasks/shm.rs:30:49\n   |\n30 |         if Arc::strong_count(&self.mem) == 1 && *self.mem.deleted.lock() == true {\n   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `*self.mem.deleted.lock()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "elliott10",
          "repo": "e1000-driver",
          "package": "e1000-driver-test",
          "count": 19,
          "raw_reports": [
            {
              "file": "src/boot/sbi.rs",
              "count": 11,
              "kinds": {
                "Unformatted": [
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 3 to 4)\n-pub fn console_putchar(ch: usize){\n-\tsbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n+pub fn console_putchar(ch: usize) {\n+    sbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 8 to 8)\n-\treturn sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n+    return sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 11 to 23)\n-pub fn console_putchar_u8(ch: u8){\n-\tlet ret: isize;\n-\t//let arg0: char = ch as char;\n-\tlet arg0: u8 = ch;\n-\tlet arg1: usize = 0;\n-\tlet arg2: usize = 0;\n-\tlet which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n-\tunsafe{\n-\t\tasm!(\"ecall\",\n-\t\t     lateout(\"x10\") ret,\n-\t\t     in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-             );\n-\t}\n+pub fn console_putchar_u8(ch: u8) {\n+    let ret: isize;\n+    //let arg0: char = ch as char;\n+    let arg0: u8 = ch;\n+    let arg1: usize = 0;\n+    let arg2: usize = 0;\n+    let which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n+    unsafe {\n+        asm!(\"ecall\",\n+        lateout(\"x10\") ret,\n+        in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 26 to 28)\n-fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize{\n-\tlet ret: isize;\n-\tunsafe{\n+fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize {\n+    let ret: isize;\n+    unsafe {\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 30 to 34)\n-             lateout(\"x10\") ret,\n-             in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-            );\n-\t}\n-\tret\n+         lateout(\"x10\") ret,\n+         in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n+    ret\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 37 to 39)\n-pub fn set_timer(stime_value: u64){\n-\t#[cfg(target_pointer_width = \"32\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n+pub fn set_timer(stime_value: u64) {\n+    #[cfg(target_pointer_width = \"32\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 41 to 42)\n-\t#[cfg(target_pointer_width = \"64\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n+    #[cfg(target_pointer_width = \"64\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 44 to 45)\n-pub fn clear_ipi(){\n-\tsbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n+pub fn clear_ipi() {\n+    sbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 48 to 49)\n-pub fn send_ipi(sipi_value: usize){\n-\tsbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n+pub fn send_ipi(sipi_value: usize) {\n+    sbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 52 to 53)\n-pub fn set_s_insn(entry: usize){\n-\tsbi_call(SBI_SET_SINSN, entry, 0, 0);\n+pub fn set_s_insn(entry: usize) {\n+    sbi_call(SBI_SET_SINSN, entry, 0, 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 56 to 57)\n-pub fn shutdown(){\n-\tsbi_call(SBI_SHUTDOWN, 0, 0, 0);\n+pub fn shutdown() {\n+    sbi_call(SBI_SHUTDOWN, 0, 0, 0);\n"
                ]
              }
            },
            {
              "file": "src/boot/lang_items.rs",
              "count": 3,
              "kinds": {
                "Unformatted": [
                  "file: /ci/e1000-driver/examples/src/boot/lang_items.rs (original lines from 4 to 7)\n-fn panic(info: &PanicInfo) -> !{\n-\tprintln!(\"{}\", info);\n-\tcrate::boot::sbi::shutdown();\n-\tunreachable!()\n+fn panic(info: &PanicInfo) -> ! {\n+    println!(\"{}\", info);\n+    crate::boot::sbi::shutdown();\n+    unreachable!()\n",
                  "file: /ci/e1000-driver/examples/src/boot/lang_items.rs (original lines from 11 to 12)\n-pub extern \"C\" fn abort() -> !{\n-\tpanic!(\"abort!\");\n+pub extern \"C\" fn abort() -> ! {\n+    panic!(\"abort!\");\n",
                  "file: /ci/e1000-driver/examples/src/boot/lang_items.rs (original lines from 14 to 14)\n-\n"
                ]
              }
            },
            {
              "file": "src/pci_impl.rs",
              "count": 2,
              "kinds": {
                "Unformatted": [
                  "file: /ci/e1000-driver/examples/src/pci_impl.rs (original lines from 2 to 2)\n-use pci::{PortOps, CSpaceAccessMethod};\n+use pci::{CSpaceAccessMethod, PortOps};\n",
                  "file: /ci/e1000-driver/examples/src/pci_impl.rs (original lines from 9 to 9)\n-pub const PCI_COMMAND_INTX_DISABLE:u16 = 0x400;\n+pub const PCI_COMMAND_INTX_DISABLE: u16 = 0x400;\n"
                ]
              }
            },
            {
              "file": "src/boot/mod.rs",
              "count": 1,
              "kinds": {
                "Unformatted": [
                  "file: /ci/e1000-driver/examples/src/boot/mod.rs (original lines from 17 to 17)\n-\n"
                ]
              }
            },
            {
              "file": "src/e1000.rs",
              "count": 1,
              "kinds": {
                "Unformatted": [
                  "file: /ci/e1000-driver/examples/src/e1000.rs (original lines from 126 to 126)\n+\n"
                ]
              }
            },
            {
              "file": "lockbud",
              "count": 1,
              "kinds": {
                "Cargo": [
                  "// pkg_name=e1000-driver-test, checker=Lockbud\n// toolchain=nightly-2023-02-23, target=riscv64imac-unknown-none-elf\n// pkg_dir=/ci/e1000-driver/examples\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64imac-unknown-none-elf\nwarning: `/ci/e1000-driver/examples/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/ci/e1000-driver/examples/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\n    Updating crates.io index\n    Updating git repository `https://github.com/rcore-os/device_tree-rs`\n    Updating git repository `https://github.com/elliott10/pci-rs.git`\n    Blocking waiting for file lock on package cache\n     Locking 19 packages to latest compatible versions\n      Adding bitflags v1.3.2 (latest: v2.6.0)\n      Adding buddy_system_allocator v0.6.0 (latest: v0.10.0)\n      Adding embedded-hal v0.2.7 (latest: v1.0.0)\n      Adding nb v0.1.3 (latest: v1.1.0)\n      Adding riscv v0.8.0 (latest: v0.11.1)\n      Adding spin v0.7.1 (latest: v0.9.8)\n      Adding volatile v0.3.0 (latest: v0.6.1)\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n Downloading crates ...\n  Downloaded embedded-hal v0.2.7\n  Downloaded nb v0.1.3\n  Downloaded void v1.0.2\n  Downloaded nb v1.1.0\n  Downloaded bare-metal v1.0.0\n  Downloaded buddy_system_allocator v0.6.0\n  Downloaded riscv v0.8.0\n  Downloaded spin v0.7.1\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling log v0.4.22\n   Compiling riscv v0.8.0\n   Compiling nb v0.1.3\n   Compiling spin v0.7.1\n   Compiling embedded-hal v0.2.7\n   Compiling bitflags v1.3.2\n   Compiling volatile v0.3.0\n   Compiling bare-metal v1.0.0\n   Compiling bit_field v0.10.2\n   Compiling spin v0.9.8\n   Compiling e1000-driver v0.2.0 (/ci/e1000-driver)\n   Compiling buddy_system_allocator v0.6.0\n   Compiling lazy_static v1.5.0\n   Compiling pci v0.1.0 (https://github.com/elliott10/pci-rs.git?rev=583a15bf#583a15bf)\nwarning: constant `alloc_tx_ring_pages` should have an upper case name\n  --> /ci/e1000-driver/src/e1000/e1000.rs:14:7\n   |\n14 | const alloc_tx_ring_pages: usize =\n   |       ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper case: `ALLOC_TX_RING_PAGES`\n   |\n   = note: `#[warn(non_upper_case_globals)]` on by default\n\nwarning: constant `alloc_rx_ring_pages` should have an upper case name\n  --> /ci/e1000-driver/src/e1000/e1000.rs:16:7\n   |\n16 | const alloc_rx_ring_pages: usize =\n   |       ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper case: `ALLOC_RX_RING_PAGES`\n\nwarning: constant `alloc_tx_buffer_pages` should have an upper case name\n  --> /ci/e1000-driver/src/e1000/e1000.rs:19:7\n   |\n19 | const alloc_tx_buffer_pages: usize = ((TX_RING_SIZE * MBUF_SIZE) + (PAGE_SIZE - 1)) / PAGE_SIZE;\n   |       ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper case: `ALLOC_TX_BUFFER_PAGES`\n\nwarning: constant `alloc_rx_buffer_pages` should have an upper case name\n  --> /ci/e1000-driver/src/e1000/e1000.rs:20:7\n   |\n20 | const alloc_rx_buffer_pages: usize = ((RX_RING_SIZE * MBUF_SIZE) + (PAGE_SIZE - 1)) / PAGE_SIZE;\n   |       ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper case: `ALLOC_RX_BUFFER_PAGES`\n\nwarning: `e1000-driver` (lib) generated 4 warnings\n   Compiling device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55fb#2f2e55fb)\n   Compiling cfg-if v1.0.0\n   Compiling e1000-driver-test v0.2.0 (/ci/e1000-driver/examples)\nwarning: unused import: `vec`\n --> src/e1000.rs:1:25\n  |\n1 | use alloc::{boxed::Box, vec};\n  |                         ^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused imports: `boxed::Box`, `vec`\n  --> src/main.rs:17:13\n   |\n17 | use alloc::{boxed::Box, format, vec, vec::Vec};\n   |             ^^^^^^^^^^          ^^^\n\nwarning: value assigned to `ret` is never read\n  --> src/boot/sbi.rs:20:23\n   |\n20 |              lateout(\"x10\") ret,\n   |                             ^^^\n   |\n   = help: maybe it is overwritten before being read?\n   = note: `#[warn(unused_assignments)]` on by default\n\nwarning: value assigned to `cycle` is never read\n   --> src/e1000.rs:101:13\n    |\n101 |     let mut cycle: u64 = 0;\n    |             ^^^^^\n    |\n    = help: maybe it is overwritten before being read?\n\nwarning: variable does not need to be mutable\n   --> src/main.rs:151:21\n    |\n151 |                 let mut e1000_device =\n    |                     ----^^^^^^^^^^^^\n    |                     |\n    |                     help: remove this `mut`\n    |\n    = note: `#[warn(unused_mut)]` on by default\n\nwarning: unused `core::result::Result` that must be used\n  --> src/main.rs:31:5\n   |\n31 |     logger::init(\"DEBUG\");\n   |     ^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: this `Result` may be an `Err` variant, which should be handled\n   = note: `#[warn(unused_must_use)]` on by default\nhelp: use `let _ = ...` to ignore the resulting value\n   |\n31 |     let _ = logger::init(\"DEBUG\");\n   |     +++++++\n\nerror: linking with `rust-lld` failed: exit status: 1\n  |\n  = note: LC_ALL=\"C\" PATH=\"/root/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin:/root/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\" VSLANG=\"1033\" \"rust-lld\" \"-flavor\" \"gnu\" \"/tmp/rustcr8aeDi/symbols.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.05x4kd61sqdpg8yh3188pwxu0.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.09x4l507p3q6ykkku4zl41dkk.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.1ell1i0l8kzvhn4oxrd6p52pm.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.1ouc1kba80s6ysu44g3fjddvv.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.1py0521ev74fi1vj54htydkj6.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.1t4aw53qeewrqba8z5juvyffp.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.2pcjsln20n8xdomxkymrsmufu.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.2srohokpiho9oyhk1e9o0nd3z.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.2zx2ayeqnllirfj6qaudlh8qu.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.33i2rllg7w8p220ndgjwa9wys.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.34r2c1fqgg0r3nzbwdetyhglu.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.3zle3at3wwk3ct3doz87wnb6t.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.48sf4sc5s9zcs7o7qycbxecoy.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.4emydbqggtf8fg0cln3099qci.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.4tthx5nqkl2qp1kbxv76xs5qy.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.6okhgqfn47fesjpy5q1w9dn4h.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.78eeu12koqwqpmqqniho66ag8.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.7bta9r6wpgf5xj5u8vvjfwo3d.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.7hzc84bxizyjj9s8mgi3y8912.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.80gkvghi396vzj9xrki55k8jf.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.82uc0ih9j3nlb6rjsshdqdnww.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.86x9bmqo4svwp0716kdbgmm2b.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.8fm8rw2cw5anvzi2qu5rvak0y.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.8jvqafvf2p3idhsmzj5itx825.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.8uymbu2uizcni3inwf68ygilp.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.9g6ghbvjaw6ozsnzk55kztlsa.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.9hn11htm4u4831ht6fpnjqui9.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.9lrv5gvenhtsk7uxrq92fgl1u.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.bbfn65lpguprwn2zdagat7he3.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.bbtqbna772sb9cye7bo3dgftf.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.bgad61ds328nay4tz8xqetmom.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.bkx2rt0nkw3c6y90hzm4t1fx9.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.cic7y43rjgtxgdka5jf2wrgzk.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.d0jdupkwsy6m8y2ugfz8esiwx.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.d10jk7k6812rqpvjudo88911d.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.d4tcl1ba57zbijmuia09aml6k.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.dnt0rtsc9cowiej5fx2xs5xru.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.e312jpb63emgfahvh2ktz6x6e.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.e6mcluyl70wrpk6tbt2jq0svp.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.e8ifocahzm7mm4m1nauo12def.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.e99b829bhjwrc5jj91dcn1ymh.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.ekr8huc0j6keyvlxurc3jsbcp.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.el27odq6n6obgs6bek7e46khn.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.eu91v2xmxyl5ly8cgy7fqxixa.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.euzffqvwddb2m4ck7wcm9jqfj.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.exyxwsg5tkjsh1yxswsi9sx37.rcgu.o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.ehx53mq93ith62hf6121luwqq.rcgu.o\" \"--as-needed\" \"-L\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps\" \"-L\" \"/ci/e1000-driver/examples/target/debug/deps\" \"-L\" \"/root/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/riscv64imac-unknown-none-elf/lib\" \"-Bstatic\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/libe1000_driver-8c0c8a2bc3ccc028.rlib\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/libvolatile-a822266027e8ae3b.rlib\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/libcfg_if-dfe8e9d3ebb4e29e.rlib\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/libbuddy_system_allocator-494745daa74a2818.rlib\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/libspin-dc425b8b373add74.rlib\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/libpci-e6781ed97c847f46.rlib\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/libbitflags-93677d6db1bc4288.rlib\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/liblog-f2956d8a6b25dda3.rlib\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/liblazy_static-10f84fe0711ca173.rlib\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/libspin-8617c0c16672ad65.rlib\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/libdevice_tree-efbd7f644812a768.rlib\" \"/root/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/riscv64imac-unknown-none-elf/lib/liballoc-fa0aa15e8a57a9a2.rlib\" \"/root/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/riscv64imac-unknown-none-elf/lib/librustc_std_workspace_core-ee495ab958ee9151.rlib\" \"/root/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/riscv64imac-unknown-none-elf/lib/libcore-11e6a2c34a93b553.rlib\" \"/root/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/riscv64imac-unknown-none-elf/lib/libcompiler_builtins-b9e192a8d71bed31.rlib\" \"-Bdynamic\" \"-z\" \"noexecstack\" \"-L\" \"/root/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/riscv64imac-unknown-none-elf/lib\" \"-o\" \"/ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d\" \"--gc-sections\"\n  = note: rust-lld: error: undefined symbol: sbss\n          >>> referenced by 78eeu12koqwqpmqqniho66ag8\n          >>>               /ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.78eeu12koqwqpmqqniho66ag8.rcgu.o:(.text.entry+0x8)\n          \n          rust-lld: error: undefined symbol: ebss\n          >>> referenced by 78eeu12koqwqpmqqniho66ag8\n          >>>               /ci/e1000-driver/examples/target/riscv64imac-unknown-none-elf/debug/deps/e1000_driver_test-6502256a655e0b3d.78eeu12koqwqpmqqniho66ag8.rcgu.o:(.text.entry+0x10)\n          \n\nwarning: `e1000-driver-test` (bin \"e1000-driver-test\") generated 6 warnings\nerror: could not compile `e1000-driver-test` (bin \"e1000-driver-test\") due to 1 previous error; 6 warnings emitted\n"
                ]
              }
            }
          ]
        }
      ]
    }
  },
  {
    "target_triple": "x86_64-unknown-linux-gnu",
    "data": {
      "kinds_order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Unformatted"
      ],
      "data": [
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "deptool",
          "count": 45,
          "raw_reports": [
            {
              "file": "src/cmd_parser.rs",
              "count": 17,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/cmd_parser.rs:82:22\n   |\n82 |     check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n   |                      ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/cmd_parser.rs:82:50\n   |\n82 |     check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n   |                                                  ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
                ],
                "Unformatted": [
                  "file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 1 to 2)\n-use std::{fs, path::Path};\n-use clap::{Arg, ArgAction, Command};\n",
                  "file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 4 to 4)\n+use clap::{Arg, ArgAction, Command};\n+use std::{fs, path::Path};\n",
                  "file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 10 to 10)\n-\n",
                  "file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 18 to 18)\n-            Arg::new(\"no-default\").short('d').long(\"no-default\").action(ArgAction::SetFalse)\n+            Arg::new(\"no-default\")\n+                .short('d')\n+                .long(\"no-default\")\n+                .action(ArgAction::SetFalse),\n",
                  "file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 21 to 21)\n-            Arg::new(\"features\").short('f').long(\"name\").action(ArgAction::Append)\n+            Arg::new(\"features\")\n+                .short('f')\n+                .long(\"name\")\n+                .action(ArgAction::Append),\n",
                  "file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 24 to 24)\n-            Arg::new(\"format\").short('o').long(\"format\").default_value(\"mermaid\")\n+            Arg::new(\"format\")\n+                .short('o')\n+                .long(\"format\")\n+                .default_value(\"mermaid\"),\n",
                  "file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 26 to 26)\n+        .arg(Arg::new(\"target\").short('t').long(\"target\").required(true))\n",
                  "file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 27 to 27)\n-            Arg::new(\"target\").short('t').long(\"target\").required(true)\n+            Arg::new(\"save-path\")\n+                .short('s')\n+                .long(\"save-path\")\n+                .default_value(\"out.txt\"),\n",
                  "file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 29 to 31)\n-        .arg(\n-            Arg::new(\"save-path\").short('s').long(\"save-path\").default_value(\"out.txt\")\n-        )\n",
                  "file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 35 to 35)\n-    let features = matches.get_many::<String>(\"features\").unwrap_or_default()\n+    let features = matches\n+        .get_many::<String>(\"features\")\n+        .unwrap_or_default()\n",
                  "file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 40 to 40)\n-        _ => GraphFormat::Mermaid\n+        _ => GraphFormat::Mermaid,\n",
                  "file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 59 to 59)\n-fn gen_config(is_default: bool, features: Vec::<String>, format: GraphFormat, loc: String, output_loc: String) -> Config {\n+fn gen_config(\n+    is_default: bool,\n+    features: Vec<String>,\n+    format: GraphFormat,\n+    loc: String,\n+    output_loc: String,\n+) -> Config {\n",
                  "file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 65 to 65)\n-    crates.into_iter().map(|p| p.unwrap().file_name()).any(|n| n.to_str().unwrap() == name)\n+    crates\n+        .into_iter()\n+        .map(|p| p.unwrap().file_name())\n+        .any(|n| n.to_str().unwrap() == name)\n",
                  "file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 70 to 70)\n-    crates.into_iter().map(|p| p.unwrap().file_name()).any(|n| n.to_str().unwrap() == name)\n+    crates\n+        .into_iter()\n+        .map(|p| p.unwrap().file_name())\n+        .any(|n| n.to_str().unwrap() == name)\n",
                  "file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 82 to 82)\n-    check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n+    check_crate_name(&name)\n+        || check_module_name(&name)\n+        || check_app_name(name)\n+        || check_lib_name(name)\n"
                ]
              }
            },
            {
              "file": "src/lib.rs",
              "count": 17,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/lib.rs:37:39\n   |\n37 |     let cmd_ct = build_cargo_tree_cmd(&cfg);\n   |                                       ^^^^ help: change this to: `cfg`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                  "warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/lib.rs:55:21\n   |\n55 | fn parse_deps(deps: &String) -> Vec<(i32, String)> {\n   |                     ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n"
                ],
                "Unformatted": [
                  "file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 1 to 1)\n-mod cmd_parser;\n",
                  "file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 3 to 3)\n-mod mermaid_generator;\n+mod cmd_parser;\n",
                  "file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 5 to 5)\n+mod mermaid_generator;\n",
                  "file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 6 to 6)\n-use std::process::Command;\n",
                  "file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 9 to 9)\n+use std::process::Command;\n",
                  "file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 11 to 11)\n-pub use cmd_parser::{parse_cmd, build_loc};\n+pub use cmd_parser::{build_loc, parse_cmd};\n",
                  "file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 17 to 18)\n-   Mermaid,\n-   D2,\n+    Mermaid,\n+    D2,\n",
                  "file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 25 to 25)\n-    pub features: Vec::<String>,\n+    pub features: Vec<String>,\n",
                  "file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 27 to 27)\n-    output_loc: String\n+    output_loc: String,\n",
                  "file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 31 to 32)\n-    pub fn build(no_default: bool, features: Vec::<String>, format: GraphFormat, loc: String, output_loc: String) -> Config {\n-        Config { no_default, format, features, loc, output_loc }\n+    pub fn build(\n+        no_default: bool,\n+        features: Vec<String>,\n+        format: GraphFormat,\n+        loc: String,\n+        output_loc: String,\n+    ) -> Config {\n+        Config {\n+            no_default,\n+            format,\n+            features,\n+            loc,\n+            output_loc,\n+        }\n",
                  "file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 41 to 43)\n-                .args(cmds)\n-                .output()\n-                .expect(\"failed to execute process\")\n+            .args(cmds)\n+            .output()\n+            .expect(\"failed to execute process\")\n",
                  "file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 46 to 48)\n-                .args(cmds)\n-                .output()\n-                .expect(\"failed to execute process\")\n+            .args(cmds)\n+            .output()\n+            .expect(\"failed to execute process\")\n",
                  "file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 56 to 56)\n-    let mut rst = vec!();\n+    let mut rst = vec![];\n",
                  "file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 83 to 83)\n-        _ => generate_mermaid(config)\n+        _ => generate_mermaid(config),\n",
                  "file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 97 to 98)\n-        Ok(()) => {},\n-        Err(error) => println!(\"Error during writing file {}, {}\", config.output_loc, error)\n+        Ok(()) => {}\n+        Err(error) => println!(\"Error during writing file {}, {}\", config.output_loc, error),\n"
                ]
              }
            },
            {
              "file": "src/d2_generator.rs",
              "count": 4,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n --> src/d2_generator.rs:8:34\n  |\n8 |     let deps_parsed = parse_deps(&deps);\n  |                                  ^^^^^ help: change this to: `deps`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/d2_generator.rs:18:29\n   |\n18 |         if !is_arceos_crate(&name) {\n   |                             ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/d2_generator.rs:34:32\n   |\n34 |             parsed_crates.push(&name);\n   |                                ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
                ],
                "Unformatted": [
                  "file: /ci/arceos/tools/deptool/src/d2_generator.rs (original lines from 3 to 3)\n-use crate::{parse_deps, cmd_parser::is_arceos_crate};\n+use crate::{cmd_parser::is_arceos_crate, parse_deps};\n"
                ]
              }
            },
            {
              "file": "src/mermaid_generator.rs",
              "count": 4,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n --> src/mermaid_generator.rs:6:34\n  |\n6 |     let deps_parsed = parse_deps(&deps);\n  |                                  ^^^^^ help: change this to: `deps`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/mermaid_generator.rs:16:29\n   |\n16 |         if !is_arceos_crate(&name) {\n   |                             ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                  "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/mermaid_generator.rs:32:32\n   |\n32 |             parsed_crates.push(&name);\n   |                                ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
                ],
                "Unformatted": [
                  "file: /ci/arceos/tools/deptool/src/mermaid_generator.rs (original lines from 3 to 3)\n-use crate::{parse_deps, cmd_parser::is_arceos_crate};\n+use crate::{cmd_parser::is_arceos_crate, parse_deps};\n"
                ]
              }
            },
            {
              "file": "src/cmd_builder.rs",
              "count": 2,
              "kinds": {
                "Unformatted": [
                  "file: /ci/arceos/tools/deptool/src/cmd_builder.rs (original lines from 6 to 6)\n-        false => \"--no-default-features\"\n+        false => \"--no-default-features\",\n",
                  "file: /ci/arceos/tools/deptool/src/cmd_builder.rs (original lines from 11 to 11)\n-        _ => \"-F \".to_string() + cfg.features.join(\" \").as_str()\n+        _ => \"-F \".to_string() + cfg.features.join(\" \").as_str(),\n"
                ]
              }
            },
            {
              "file": "src/main.rs",
              "count": 1,
              "kinds": {
                "Unformatted": [
                  "file: /ci/arceos/tools/deptool/src/main.rs (original lines from 1 to 1)\n-use deptool::{run, parse_cmd};\n+use deptool::{parse_cmd, run};\n"
                ]
              }
            }
          ]
        },
        {
          "user": "shilei-massclouds",
          "repo": "axdtb",
          "package": "axdtb",
          "count": 30,
          "raw_reports": [
            {
              "file": "src/lib.rs",
              "count": 14,
              "kinds": {
                "Unformatted": [
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 3 to 3)\n-use core::str;\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 5 to 5)\n+use core::str;\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 12 to 12)\n-const MAGIC_NUMBER     : u32 = 0xd00dfeed;\n+const MAGIC_NUMBER: u32 = 0xd00dfeed;\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 14 to 16)\n-const OF_DT_BEGIN_NODE : u32 = 0x00000001;\n-const OF_DT_END_NODE   : u32 = 0x00000002;\n-const OF_DT_PROP       : u32 = 0x00000003;\n+const OF_DT_BEGIN_NODE: u32 = 0x00000001;\n+const OF_DT_END_NODE: u32 = 0x00000002;\n+const OF_DT_PROP: u32 = 0x00000003;\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 38 to 40)\n-        let buf = unsafe {\n-            core::slice::from_raw_parts(ptr as *const u8, 24)\n-        };\n+        let buf = unsafe { core::slice::from_raw_parts(ptr as *const u8, 24) };\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 43 to 43)\n-            return Err(DeviceTreeError::BadMagicNumber)\n+            return Err(DeviceTreeError::BadMagicNumber);\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 53 to 55)\n-        Ok(\n-            Self {ptr, totalsize, off_struct, off_strings}\n-        )\n+        Ok(Self {\n+            ptr,\n+            totalsize,\n+            off_struct,\n+            off_strings,\n+        })\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 61 to 61)\n-        &self, mut pos: usize,\n+        &self,\n+        mut pos: usize,\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 64 to 64)\n-        cb: &mut dyn FnMut(String, usize, usize, Vec<(String, Vec<u8>)>)\n+        cb: &mut dyn FnMut(String, usize, usize, Vec<(String, Vec<u8>)>),\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 66 to 68)\n-        let buf = unsafe {\n-            core::slice::from_raw_parts(self.ptr as *const u8, self.totalsize)\n-        };\n+        let buf = unsafe { core::slice::from_raw_parts(self.ptr as *const u8, self.totalsize) };\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 72 to 72)\n-            return Err(DeviceTreeError::ParseError(pos))\n+            return Err(DeviceTreeError::ParseError(pos));\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 82 to 83)\n-            let val_size = buf.read_be_u32(pos+4)? as usize;\n-            let name_offset = buf.read_be_u32(pos+8)? as usize;\n+            let val_size = buf.read_be_u32(pos + 4)? as usize;\n+            let name_offset = buf.read_be_u32(pos + 8)? as usize;\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 115 to 115)\n-            return Err(DeviceTreeError::ParseError(pos))\n+            return Err(DeviceTreeError::ParseError(pos));\n",
                  "file: /ci/axdtb/axdtb/src/lib.rs (original lines from 131 to 131)\n-where F: FnMut(String, usize, usize, Vec<(String, Vec<u8>)>)\n+where\n+    F: FnMut(String, usize, usize, Vec<(String, Vec<u8>)>),\n"
                ]
              }
            },
            {
              "file": "src/util.rs",
              "count": 6,
              "kinds": {
                "Unformatted": [
                  "file: /ci/axdtb/axdtb/src/util.rs (original lines from 1 to 1)\n-use crate::{DeviceTreeResult, DeviceTreeError};\n+use crate::{DeviceTreeError, DeviceTreeResult};\n",
                  "file: /ci/axdtb/axdtb/src/util.rs (original lines from 13 to 14)\n-        if ! (pos+4 <= self.len()) {\n-            return Err(DeviceTreeError::SliceReadError)\n+        if !(pos + 4 <= self.len()) {\n+            return Err(DeviceTreeError::SliceReadError);\n",
                  "file: /ci/axdtb/axdtb/src/util.rs (original lines from 17 to 22)\n-        Ok(\n-            (self[pos] as u32) << 24\n-            | (self[pos+1] as u32) << 16\n-            | (self[pos+2] as u32) << 8\n-            | (self[pos+3] as u32)\n-        )\n+        Ok((self[pos] as u32) << 24\n+            | (self[pos + 1] as u32) << 16\n+            | (self[pos + 2] as u32) << 8\n+            | (self[pos + 3] as u32))\n",
                  "file: /ci/axdtb/axdtb/src/util.rs (original lines from 26 to 26)\n-        let lo: u64 = self.read_be_u32(pos+4)?.into();\n+        let lo: u64 = self.read_be_u32(pos + 4)?.into();\n",
                  "file: /ci/axdtb/axdtb/src/util.rs (original lines from 33 to 33)\n-                return Ok(&self[pos..cur])\n+                return Ok(&self[pos..cur]);\n",
                  "file: /ci/axdtb/axdtb/src/util.rs (original lines from 40 to 41)\n-        if ! (end < self.len()) {\n-            return Err(DeviceTreeError::SliceReadError)\n+        if !(end < self.len()) {\n+            return Err(DeviceTreeError::SliceReadError);\n"
                ]
              }
            },
            {
              "file": "tests/test_dtb.rs",
              "count": 6,
              "kinds": {
                "Unformatted": [
                  "file: /ci/axdtb/axdtb/tests/test_dtb.rs (original lines from 1 to 2)\n-use std::str;\n-use std::io::Read;\n",
                  "file: /ci/axdtb/axdtb/tests/test_dtb.rs (original lines from 4 to 4)\n+use std::io::Read;\n+use std::str;\n",
                  "file: /ci/axdtb/axdtb/tests/test_dtb.rs (original lines from 11 to 18)\n-    let mut cb = |name: String, addr_cells: usize, size_cells: usize, props: Vec<(String, Vec<u8>)>| {\n-        match name.as_str() {\n-            \"\" => {\n-                assert_eq!(addr_cells, 2);\n-                assert_eq!(size_cells, 2);\n-                for prop in &props {\n-                    if prop.0.as_str() == \"compatible\" {\n-                        assert_eq!(str::from_utf8(&(prop.1)), Ok(\"riscv-virtio\\0\"));\n+    let mut cb =\n+        |name: String, addr_cells: usize, size_cells: usize, props: Vec<(String, Vec<u8>)>| {\n+            match name.as_str() {\n+                \"\" => {\n+                    assert_eq!(addr_cells, 2);\n+                    assert_eq!(size_cells, 2);\n+                    for prop in &props {\n+                        if prop.0.as_str() == \"compatible\" {\n+                            assert_eq!(str::from_utf8(&(prop.1)), Ok(\"riscv-virtio\\0\"));\n+                        }\n",
                  "file: /ci/axdtb/axdtb/tests/test_dtb.rs (original lines from 21 to 27)\n-            },\n-            \"soc\" => {\n-                assert_eq!(addr_cells, 2);\n-                assert_eq!(size_cells, 2);\n-                for prop in &props {\n-                    if prop.0.as_str() == \"compatible\" {\n-                        assert_eq!(str::from_utf8(&(prop.1)), Ok(\"simple-bus\\0\"));\n+                \"soc\" => {\n+                    assert_eq!(addr_cells, 2);\n+                    assert_eq!(size_cells, 2);\n+                    for prop in &props {\n+                        if prop.0.as_str() == \"compatible\" {\n+                            assert_eq!(str::from_utf8(&(prop.1)), Ok(\"simple-bus\\0\"));\n+                        }\n",
                  "file: /ci/axdtb/axdtb/tests/test_dtb.rs (original lines from 30 to 40)\n-            },\n-            \"virtio_mmio@10001000\" => {\n-                assert_eq!(addr_cells, 2);\n-                assert_eq!(size_cells, 2);\n-                for prop in &props {\n-                    if prop.0.as_str() == \"compatible\" {\n-                        assert_eq!(str::from_utf8(&(prop.1)), Ok(\"virtio,mmio\\0\"));\n-                    } else if prop.0.as_str() == \"reg\" {\n-                        let reg = &(prop.1);\n-                        assert_eq!(reg.as_slice().read_be_u64(0).unwrap(), 0x10001000);\n-                        assert_eq!(reg.as_slice().read_be_u64(8).unwrap(), 0x1000);\n+                \"virtio_mmio@10001000\" => {\n+                    assert_eq!(addr_cells, 2);\n+                    assert_eq!(size_cells, 2);\n+                    for prop in &props {\n+                        if prop.0.as_str() == \"compatible\" {\n+                            assert_eq!(str::from_utf8(&(prop.1)), Ok(\"virtio,mmio\\0\"));\n+                        } else if prop.0.as_str() == \"reg\" {\n+                            let reg = &(prop.1);\n+                            assert_eq!(reg.as_slice().read_be_u64(0).unwrap(), 0x10001000);\n+                            assert_eq!(reg.as_slice().read_be_u64(8).unwrap(), 0x1000);\n+                        }\n",
                  "file: /ci/axdtb/axdtb/tests/test_dtb.rs (original lines from 43 to 46)\n-            },\n-            _ => {}\n-        }\n-    };\n+                _ => {}\n+            }\n+        };\n"
                ]
              }
            },
            {
              "file": "clippy",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axdtb, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/ci/axdtb/axdtb\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Blocking waiting for file lock on package cache\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axtype.git`\nerror: failed to get `axtype` as a dependency of package `axdtb v0.1.0 (/ci/axdtb/axdtb)`\n\nCaused by:\n  failed to load source for dependency `axtype`\n\nCaused by:\n  Unable to update ssh://git@github.com/shilei-massclouds/axtype.git\n\nCaused by:\n  failed to clone into: /root/.cargo/git/db/axtype-5d4f3cfbafdc70ef\n\nCaused by:\n  failed to authenticate when downloading repository\n\n  * attempted ssh-agent authentication, but no usernames succeeded: `git`\n\n  if the git CLI succeeds then `net.git-fetch-with-cli` may help here\n  https://doc.rust-lang.org/cargo/reference/config.html#netgit-fetch-with-cli\n\nCaused by:\n  no authentication methods succeeded\n",
                  "// pkg_name=axdtb, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=riscv64gc-unknown-none-elf\n// pkg_dir=/ci/axdtb/axdtb\n// cmd=cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json\n    Blocking waiting for file lock on package cache\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axtype.git`\nerror: failed to get `axtype` as a dependency of package `axdtb v0.1.0 (/ci/axdtb/axdtb)`\n\nCaused by:\n  failed to load source for dependency `axtype`\n\nCaused by:\n  Unable to update ssh://git@github.com/shilei-massclouds/axtype.git\n\nCaused by:\n  failed to fetch into: /root/.cargo/git/db/axtype-5d4f3cfbafdc70ef\n\nCaused by:\n  failed to authenticate when downloading repository\n\n  * attempted ssh-agent authentication, but no usernames succeeded: `git`\n\n  if the git CLI succeeds then `net.git-fetch-with-cli` may help here\n  https://doc.rust-lang.org/cargo/reference/config.html#netgit-fetch-with-cli\n\nCaused by:\n  no authentication methods succeeded\n"
                ]
              }
            },
            {
              "file": "lockbud",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axdtb, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/ci/axdtb/axdtb\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n    Blocking waiting for file lock on package cache\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axtype.git`\nerror: failed to get `axtype` as a dependency of package `axdtb v0.1.0 (/ci/axdtb/axdtb)`\n\nCaused by:\n  failed to load source for dependency `axtype`\n\nCaused by:\n  Unable to update ssh://git@github.com/shilei-massclouds/axtype.git\n\nCaused by:\n  failed to fetch into: /root/.cargo/git/db/axtype-5d4f3cfbafdc70ef\n\nCaused by:\n  failed to authenticate when downloading repository\n\n  * attempted ssh-agent authentication, but no usernames succeeded: `git`\n\n  if the git CLI succeeds then `net.git-fetch-with-cli` may help here\n  https://doc.rust-lang.org/cargo/reference/config.html#netgit-fetch-with-cli\n\nCaused by:\n  no authentication methods succeeded\n",
                  "// pkg_name=axdtb, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=riscv64gc-unknown-none-elf\n// pkg_dir=/ci/axdtb/axdtb\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axtype.git`\nerror: failed to get `axtype` as a dependency of package `axdtb v0.1.0 (/ci/axdtb/axdtb)`\n\nCaused by:\n  failed to load source for dependency `axtype`\n\nCaused by:\n  Unable to update ssh://git@github.com/shilei-massclouds/axtype.git\n\nCaused by:\n  failed to fetch into: /root/.cargo/git/db/axtype-5d4f3cfbafdc70ef\n\nCaused by:\n  failed to authenticate when downloading repository\n\n  * attempted ssh-agent authentication, but no usernames succeeded: `git`\n\n  if the git CLI succeeds then `net.git-fetch-with-cli` may help here\n  https://doc.rust-lang.org/cargo/reference/config.html#netgit-fetch-with-cli\n\nCaused by:\n  no authentication methods succeeded\n"
                ]
              }
            }
          ]
        },
        {
          "user": "elliott10",
          "repo": "e1000-driver",
          "package": "e1000-driver",
          "count": 25,
          "raw_reports": [
            {
              "file": "examples/src/boot/sbi.rs",
              "count": 11,
              "kinds": {
                "Unformatted": [
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 3 to 4)\n-pub fn console_putchar(ch: usize){\n-\tsbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n+pub fn console_putchar(ch: usize) {\n+    sbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 8 to 8)\n-\treturn sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n+    return sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 11 to 23)\n-pub fn console_putchar_u8(ch: u8){\n-\tlet ret: isize;\n-\t//let arg0: char = ch as char;\n-\tlet arg0: u8 = ch;\n-\tlet arg1: usize = 0;\n-\tlet arg2: usize = 0;\n-\tlet which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n-\tunsafe{\n-\t\tasm!(\"ecall\",\n-\t\t     lateout(\"x10\") ret,\n-\t\t     in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-             );\n-\t}\n+pub fn console_putchar_u8(ch: u8) {\n+    let ret: isize;\n+    //let arg0: char = ch as char;\n+    let arg0: u8 = ch;\n+    let arg1: usize = 0;\n+    let arg2: usize = 0;\n+    let which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n+    unsafe {\n+        asm!(\"ecall\",\n+        lateout(\"x10\") ret,\n+        in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 26 to 28)\n-fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize{\n-\tlet ret: isize;\n-\tunsafe{\n+fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize {\n+    let ret: isize;\n+    unsafe {\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 30 to 34)\n-             lateout(\"x10\") ret,\n-             in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-            );\n-\t}\n-\tret\n+         lateout(\"x10\") ret,\n+         in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n+    ret\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 37 to 39)\n-pub fn set_timer(stime_value: u64){\n-\t#[cfg(target_pointer_width = \"32\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n+pub fn set_timer(stime_value: u64) {\n+    #[cfg(target_pointer_width = \"32\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 41 to 42)\n-\t#[cfg(target_pointer_width = \"64\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n+    #[cfg(target_pointer_width = \"64\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 44 to 45)\n-pub fn clear_ipi(){\n-\tsbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n+pub fn clear_ipi() {\n+    sbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 48 to 49)\n-pub fn send_ipi(sipi_value: usize){\n-\tsbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n+pub fn send_ipi(sipi_value: usize) {\n+    sbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 52 to 53)\n-pub fn set_s_insn(entry: usize){\n-\tsbi_call(SBI_SET_SINSN, entry, 0, 0);\n+pub fn set_s_insn(entry: usize) {\n+    sbi_call(SBI_SET_SINSN, entry, 0, 0);\n",
                  "file: /ci/e1000-driver/examples/src/boot/sbi.rs (original lines from 56 to 57)\n-pub fn shutdown(){\n-\tsbi_call(SBI_SHUTDOWN, 0, 0, 0);\n+pub fn shutdown() {\n+    sbi_call(SBI_SHUTDOWN, 0, 0, 0);\n"
                ]
              }
            },
            {
              "file": "src/lib.rs",
              "count": 4,
              "kinds": {
                "Unformatted": [
                  "file: /ci/e1000-driver/src/lib.rs (original lines from 9 to 9)\n-mod utils;\n",
                  "file: /ci/e1000-driver/src/lib.rs (original lines from 12 to 12)\n+mod utils;\n",
                  "file: /ci/e1000-driver/src/lib.rs (original lines from 17 to 17)\n-\n",
                  "file: /ci/e1000-driver/src/lib.rs (original lines from 23 to 25)\n-    fn it_works() {\n-\n-    }\n+    fn it_works() {}\n"
                ]
              }
            },
            {
              "file": "examples/src/boot/lang_items.rs",
              "count": 3,
              "kinds": {
                "Unformatted": [
                  "file: /ci/e1000-driver/examples/src/boot/lang_items.rs (original lines from 4 to 7)\n-fn panic(info: &PanicInfo) -> !{\n-\tprintln!(\"{}\", info);\n-\tcrate::boot::sbi::shutdown();\n-\tunreachable!()\n+fn panic(info: &PanicInfo) -> ! {\n+    println!(\"{}\", info);\n+    crate::boot::sbi::shutdown();\n+    unreachable!()\n",
                  "file: /ci/e1000-driver/examples/src/boot/lang_items.rs (original lines from 11 to 12)\n-pub extern \"C\" fn abort() -> !{\n-\tpanic!(\"abort!\");\n+pub extern \"C\" fn abort() -> ! {\n+    panic!(\"abort!\");\n",
                  "file: /ci/e1000-driver/examples/src/boot/lang_items.rs (original lines from 14 to 14)\n-\n"
                ]
              }
            },
            {
              "file": "src/pci.rs",
              "count": 3,
              "kinds": {
                "Unformatted": [
                  "file: /ci/e1000-driver/src/pci.rs (original lines from 3 to 3)\n-use volatile::Volatile;\n",
                  "file: /ci/e1000-driver/src/pci.rs (original lines from 5 to 5)\n+use volatile::Volatile;\n",
                  "file: /ci/e1000-driver/src/pci.rs (original lines from 22 to 22)\n-        let deve_id = unsafe{ (*pci_base).read() };\n+        let deve_id = unsafe { (*pci_base).read() };\n"
                ]
              }
            },
            {
              "file": "examples/src/pci_impl.rs",
              "count": 2,
              "kinds": {
                "Unformatted": [
                  "file: /ci/e1000-driver/examples/src/pci_impl.rs (original lines from 2 to 2)\n-use pci::{PortOps, CSpaceAccessMethod};\n+use pci::{CSpaceAccessMethod, PortOps};\n",
                  "file: /ci/e1000-driver/examples/src/pci_impl.rs (original lines from 9 to 9)\n-pub const PCI_COMMAND_INTX_DISABLE:u16 = 0x400;\n+pub const PCI_COMMAND_INTX_DISABLE: u16 = 0x400;\n"
                ]
              }
            },
            {
              "file": "examples/src/boot/mod.rs",
              "count": 1,
              "kinds": {
                "Unformatted": [
                  "file: /ci/e1000-driver/examples/src/boot/mod.rs (original lines from 17 to 17)\n-\n"
                ]
              }
            },
            {
              "file": "examples/src/e1000.rs",
              "count": 1,
              "kinds": {
                "Unformatted": [
                  "file: /ci/e1000-driver/examples/src/e1000.rs (original lines from 126 to 126)\n+\n"
                ]
              }
            }
          ]
        },
        {
          "user": "shilei-massclouds",
          "repo": "axdtb",
          "package": "rt_axdtb",
          "count": 9,
          "raw_reports": [
            {
              "file": "src/main.rs",
              "count": 5,
              "kinds": {
                "Unformatted": [
                  "file: /ci/axdtb/rt_axdtb/src/main.rs (original lines from 27 to 41)\n-    let mut cb = |name: String,\n-                  _addr_cells: usize,\n-                  _size_cells: usize,\n-                  props: Vec<(String, Vec<u8>)>| {\n-        match name.as_str() {\n-            \"chosen\" => {\n-                for prop in props {\n-                    match prop.0.as_str() {\n-                        \"bootargs\" => {\n-                            if let Ok(cmd) = core::str::from_utf8(&prop.1) {\n-                                let cmd = cmd.trim_end_matches(char::from(0));\n-                                assert!(cmd.len() > 0);\n-                                assert!(cmd.starts_with(\"init=\"));\n-                                let cmd = cmd.strip_prefix(\"init=\").unwrap();\n-                                assert!(cmd == \"/sbin/init\" || cmd == \"/btp/sbin/hello\");\n+    let mut cb =\n+        |name: String, _addr_cells: usize, _size_cells: usize, props: Vec<(String, Vec<u8>)>| {\n+            match name.as_str() {\n+                \"chosen\" => {\n+                    for prop in props {\n+                        match prop.0.as_str() {\n+                            \"bootargs\" => {\n+                                if let Ok(cmd) = core::str::from_utf8(&prop.1) {\n+                                    let cmd = cmd.trim_end_matches(char::from(0));\n+                                    assert!(cmd.len() > 0);\n+                                    assert!(cmd.starts_with(\"init=\"));\n+                                    let cmd = cmd.strip_prefix(\"init=\").unwrap();\n+                                    assert!(cmd == \"/sbin/init\" || cmd == \"/btp/sbin/hello\");\n+                                }\n",
                  "file: /ci/axdtb/rt_axdtb/src/main.rs (original lines from 43 to 43)\n+                            _ => (),\n",
                  "file: /ci/axdtb/rt_axdtb/src/main.rs (original lines from 44 to 44)\n-                        _ => (),\n",
                  "file: /ci/axdtb/rt_axdtb/src/main.rs (original lines from 47 to 50)\n-            },\n-            _ => (),\n-        }\n-    };\n+                _ => (),\n+            }\n+        };\n",
                  "file: /ci/axdtb/rt_axdtb/src/main.rs (original lines from 56 to 57)\n-fn test_dtb(_dtb_pa: usize) {\n-}\n+fn test_dtb(_dtb_pa: usize) {}\n"
                ]
              }
            },
            {
              "file": "clippy",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=rt_axdtb, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/ci/axdtb/rt_axdtb\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `ssh://git@github.com/shilei-massclouds/arch_boot`\nerror: failed to get `arch_boot` as a dependency of package `rt_axdtb v0.1.0 (/ci/axdtb/rt_axdtb)`\n\nCaused by:\n  failed to load source for dependency `arch_boot`\n\nCaused by:\n  Unable to update ssh://git@github.com/shilei-massclouds/arch_boot\n\nCaused by:\n  failed to clone into: /root/.cargo/git/db/arch_boot-1cecf4eba2e647a6\n\nCaused by:\n  failed to authenticate when downloading repository\n\n  * attempted ssh-agent authentication, but no usernames succeeded: `git`\n\n  if the git CLI succeeds then `net.git-fetch-with-cli` may help here\n  https://doc.rust-lang.org/cargo/reference/config.html#netgit-fetch-with-cli\n\nCaused by:\n  no authentication methods succeeded\n",
                  "// pkg_name=rt_axdtb, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=riscv64gc-unknown-none-elf\n// pkg_dir=/ci/axdtb/rt_axdtb\n// cmd=cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json\n    Updating git repository `ssh://git@github.com/shilei-massclouds/arch_boot`\nerror: failed to get `arch_boot` as a dependency of package `rt_axdtb v0.1.0 (/ci/axdtb/rt_axdtb)`\n\nCaused by:\n  failed to load source for dependency `arch_boot`\n\nCaused by:\n  Unable to update ssh://git@github.com/shilei-massclouds/arch_boot\n\nCaused by:\n  failed to fetch into: /root/.cargo/git/db/arch_boot-1cecf4eba2e647a6\n\nCaused by:\n  failed to authenticate when downloading repository\n\n  * attempted ssh-agent authentication, but no usernames succeeded: `git`\n\n  if the git CLI succeeds then `net.git-fetch-with-cli` may help here\n  https://doc.rust-lang.org/cargo/reference/config.html#netgit-fetch-with-cli\n\nCaused by:\n  no authentication methods succeeded\n"
                ]
              }
            },
            {
              "file": "lockbud",
              "count": 2,
              "kinds": {
                "Cargo": [
                  "// pkg_name=rt_axdtb, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/ci/axdtb/rt_axdtb\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n    Updating git repository `ssh://git@github.com/shilei-massclouds/arch_boot`\nerror: failed to get `arch_boot` as a dependency of package `rt_axdtb v0.1.0 (/ci/axdtb/rt_axdtb)`\n\nCaused by:\n  failed to load source for dependency `arch_boot`\n\nCaused by:\n  Unable to update ssh://git@github.com/shilei-massclouds/arch_boot\n\nCaused by:\n  failed to fetch into: /root/.cargo/git/db/arch_boot-1cecf4eba2e647a6\n\nCaused by:\n  failed to authenticate when downloading repository\n\n  * attempted ssh-agent authentication, but no usernames succeeded: `git`\n\n  if the git CLI succeeds then `net.git-fetch-with-cli` may help here\n  https://doc.rust-lang.org/cargo/reference/config.html#netgit-fetch-with-cli\n\nCaused by:\n  no authentication methods succeeded\n",
                  "// pkg_name=rt_axdtb, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=riscv64gc-unknown-none-elf\n// pkg_dir=/ci/axdtb/rt_axdtb\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf\n    Updating git repository `ssh://git@github.com/shilei-massclouds/arch_boot`\nerror: failed to get `arch_boot` as a dependency of package `rt_axdtb v0.1.0 (/ci/axdtb/rt_axdtb)`\n\nCaused by:\n  failed to load source for dependency `arch_boot`\n\nCaused by:\n  Unable to update ssh://git@github.com/shilei-massclouds/arch_boot\n\nCaused by:\n  failed to fetch into: /root/.cargo/git/db/arch_boot-1cecf4eba2e647a6\n\nCaused by:\n  failed to authenticate when downloading repository\n\n  * attempted ssh-agent authentication, but no usernames succeeded: `git`\n\n  if the git CLI succeeds then `net.git-fetch-with-cli` may help here\n  https://doc.rust-lang.org/cargo/reference/config.html#netgit-fetch-with-cli\n\nCaused by:\n  no authentication methods succeeded\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "bwbench-client",
          "count": 2,
          "raw_reports": [
            {
              "file": "src/device.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error: the loop variable `i` is used to index `mac_addr`\n  --> src/device.rs:80:22\n   |\n80 |             for i in 0..6 {\n   |                      ^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nnote: the lint level is defined here\n  --> src/main.rs:3:9\n   |\n3  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(clippy::needless_range_loop)]` implied by `#[deny(warnings)]`\nhelp: consider using an iterator and enumerate()\n   |\n80 |             for (i, <item>) in mac_addr.iter_mut().enumerate() {\n   |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
                ]
              }
            },
            {
              "file": "clippy",
              "count": 1,
              "kinds": {
                "Cargo": [
                  "// pkg_name=bwbench-client, checker=Clippy\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/ci/arceos/tools/bwbench_client\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n     Locking 36 packages to latest compatible versions\n      Adding windows-core v0.52.0 (latest: v0.58.0)\n Downloading crates ...\n  Downloaded num-traits v0.2.19\n   Compiling autocfg v1.3.0\n   Compiling libc v0.2.158\n    Checking iana-time-zone v0.1.60\n   Compiling num-traits v0.2.19\n    Checking chrono v0.4.38\n    Checking bwbench-client v0.1.0 (/ci/arceos/tools/bwbench_client)\nerror: could not compile `bwbench-client` (bin \"bwbench-client\") due to 2 previous errors\n"
                ]
              }
            }
          ]
        }
      ]
    }
  },
  {
    "target_triple": "x86_64-unknown-none",
    "data": {
      "kinds_order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Unformatted"
      ],
      "data": [
        {
          "user": "kern-crates",
          "repo": "ByteOS",
          "package": "kernel",
          "count": 22,
          "raw_reports": [
            {
              "file": "kernel/src/syscall/task.rs",
              "count": 5,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this `else { if .. }` block can be collapsed\n   --> kernel/src/syscall/task.rs:726:24\n    |\n726 |                   } else {\n    |  ________________________^\n727 | |                     if let Some(index) = target_signal.real_time_index() {\n728 | |                         child_tcb.signal_queue[index] += 1;\n729 | |                     }\n730 | |                 }\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\n    = note: `#[warn(clippy::collapsible_else_if)]` on by default\nhelp: collapse nested if block\n    |\n726 ~                 } else if let Some(index) = target_signal.real_time_index() {\n727 +                     child_tcb.signal_queue[index] += 1;\n728 +                 }\n    |\n\n",
                  "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:757:36\n    |\n757 |             sec: stime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n    = note: `#[warn(clippy::inconsistent_digit_grouping)]` on by default\n\n",
                  "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:758:37\n    |\n758 |             usec: stime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n",
                  "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:761:36\n    |\n761 |             sec: utime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n",
                  "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:762:37\n    |\n762 |             usec: utime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
                ]
              }
            },
            {
              "file": "lockbud",
              "count": 5,
              "kinds": {
                "Cargo": [
                  "// pkg_name=kernel, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=riscv64imac-unknown-none-elf\n// pkg_dir=/ci/ByteOS/kernel\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64imac-unknown-none-elf\n   Compiling proc-macro2 v1.0.78\n   Compiling unicode-ident v1.0.8\n   Compiling autocfg v1.1.0\n   Compiling cfg-if v1.0.0\n   Compiling log v0.4.17\n   Compiling scopeguard v1.1.0\n   Compiling bitflags v2.4.2\n   Compiling static_assertions v1.1.0\n   Compiling percpu v0.1.0 (https://github.com/Byte-OS/percpu.git#a71e60e3)\n   Compiling riscv v0.11.1\n   Compiling lock_api v0.4.9\n   Compiling sbi-spec v0.0.4\n   Compiling embedded-hal v1.0.0\n   Compiling critical-section v1.1.2\n   Compiling sbi-rt v0.0.2\n   Compiling quote v1.0.35\n   Compiling syn v2.0.48\n   Compiling spin v0.9.8\n   Compiling fdt v0.1.5\n   Compiling sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n   Compiling bit_field v0.10.2\n   Compiling byteorder v1.4.3\n   Compiling timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling downcast-rs v1.2.0\n   Compiling serde v1.0.188\n   Compiling version_check v0.9.4\n   Compiling vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling num-traits v0.2.16\n   Compiling ahash v0.8.3\n   Compiling futures-core v0.3.28\n   Compiling once_cell v1.19.0\nerror[E0635]: unknown feature `stdsimd`\n  --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ahash-0.8.3/src/lib.rs:99:42\n   |\n99 | #![cfg_attr(feature = \"stdsimd\", feature(stdsimd))]\n   |                                          ^^^^^^^\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `ahash` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n",
                  "// pkg_name=kernel, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=riscv64gc-unknown-none-elf\n// pkg_dir=/ci/ByteOS/kernel\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n   Compiling cfg-if v1.0.0\n   Compiling log v0.4.17\n   Compiling lock_api v0.4.9\n   Compiling scopeguard v1.1.0\n   Compiling bitflags v2.4.2\n   Compiling static_assertions v1.1.0\n   Compiling sbi-spec v0.0.4\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.0 (https://github.com/Byte-OS/percpu.git#a71e60e3)\n   Compiling percpu_macros v0.1.0 (https://github.com/Byte-OS/percpu.git#a71e60e3)\n   Compiling embedded-hal v1.0.0\n   Compiling spin v0.9.8\n   Compiling critical-section v1.1.2\n   Compiling sbi-rt v0.0.2\n   Compiling polyhal-macro v0.1.0 (https://github.com/Byte-OS/polyhal.git#78137eed)\n   Compiling sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n   Compiling fdt v0.1.5\n   Compiling bit_field v0.10.2\n   Compiling zerocopy-derive v0.7.32\n   Compiling byteorder v1.4.3\n   Compiling linkme-impl v0.3.22\n   Compiling polyhal v0.1.0 (https://github.com/Byte-OS/polyhal.git#78137eed)\n   Compiling timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling downcast-rs v1.2.0\n   Compiling vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling frame_allocator v0.1.0 (https://github.com/Byte-OS/bit_frame_allocator.git#e401675a)\n   Compiling num-traits v0.2.16\n   Compiling ahash v0.8.3\n   Compiling num_enum_derive v0.6.1\n   Compiling zerocopy v0.7.32\n   Compiling linkme v0.3.22\n   Compiling once_cell v1.19.0\n   Compiling futures-core v0.3.28\nerror[E0635]: unknown feature `stdsimd`\n  --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ahash-0.8.3/src/lib.rs:99:42\n   |\n99 | #![cfg_attr(feature = \"stdsimd\", feature(stdsimd))]\n   |                                          ^^^^^^^\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `ahash` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n",
                  "// pkg_name=kernel, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=x86_64-unknown-none\n// pkg_dir=/ci/ByteOS/kernel\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none\n    Blocking waiting for file lock on package cache\n   Compiling cfg-if v1.0.0\n   Compiling lock_api v0.4.9\n   Compiling scopeguard v1.1.0\n   Compiling log v0.4.17\n   Compiling bitflags v1.3.2\n   Compiling bitflags v2.4.2\n   Compiling bit_field v0.10.2\n   Compiling rustversion v1.0.12\n   Compiling paste v1.0.14\n   Compiling raw-cpuid v10.7.0\n   Compiling spin v0.9.8\n   Compiling x86 v0.52.0\n   Compiling volatile v0.4.6\n   Compiling percpu v0.1.0 (https://github.com/Byte-OS/percpu.git#a71e60e3)\n   Compiling bit v0.1.1\n   Compiling irq_safety v0.1.1 (https://github.com/theseus-os/irq_safety.git#11bfab9f)\n   Compiling sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n   Compiling raw-cpuid v11.0.1\n   Compiling x86_64 v0.14.10\n   Compiling multiboot v0.8.0\n   Compiling fdt v0.1.5\n   Compiling x2apic v0.4.3\n   Compiling byteorder v1.4.3\n   Compiling linkme v0.3.22\n   Compiling zerocopy v0.7.32\n   Compiling polyhal v0.1.0 (https://github.com/Byte-OS/polyhal.git#78137eed)\n   Compiling timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling downcast-rs v1.2.0\n   Compiling vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling num-traits v0.2.16\n   Compiling virtio-drivers v0.7.1 (https://github.com/rcore-os/virtio-drivers?rev=61ece50#61ece509)\n   Compiling frame_allocator v0.1.0 (https://github.com/Byte-OS/bit_frame_allocator.git#e401675a)\n   Compiling ahash v0.8.3\n   Compiling once_cell v1.19.0\n   Compiling futures-core v0.3.28\n   Compiling hal v0.1.0 (https://github.com/Byte-OS/hal.git#6f40272c)\n   Compiling num_enum v0.6.1\nerror[E0635]: unknown feature `stdsimd`\n  --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ahash-0.8.3/src/lib.rs:99:42\n   |\n99 | #![cfg_attr(feature = \"stdsimd\", feature(stdsimd))]\n   |                                          ^^^^^^^\n\n   Compiling toml v0.5.11\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `ahash` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n",
                  "// pkg_name=kernel, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/ByteOS/kernel\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling cfg-if v1.0.0\n   Compiling lock_api v0.4.9\n   Compiling scopeguard v1.1.0\n   Compiling log v0.4.17\n   Compiling bitflags v2.4.2\n   Compiling tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Byte-OS/percpu.git#a71e60e3)\n   Compiling arm_pl011 v0.1.0 (https://github.com/Byte-OS/arm_pl011.git#8a66e24c)\n   Compiling arm_gic v0.1.0 (https://github.com/Byte-OS/arm_gic#7a0693eb)\n   Compiling aarch64-cpu v9.4.0\n   Compiling spin v0.9.8\n   Compiling fdt v0.1.5\n   Compiling bit_field v0.10.2\n   Compiling sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n   Compiling irq_safety v0.1.1 (https://github.com/theseus-os/irq_safety.git#11bfab9f)\n   Compiling byteorder v1.4.3\n   Compiling linkme v0.3.22\n   Compiling zerocopy v0.7.32\n   Compiling timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling downcast-rs v1.2.0\n   Compiling vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling num-traits v0.2.16\n   Compiling virtio-drivers v0.7.1 (https://github.com/rcore-os/virtio-drivers?rev=61ece50#61ece509)\n   Compiling ahash v0.8.3\n   Compiling once_cell v1.19.0\n   Compiling futures-core v0.3.28\nerror[E0635]: unknown feature `stdsimd`\n  --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ahash-0.8.3/src/lib.rs:99:42\n   |\n99 | #![cfg_attr(feature = \"stdsimd\", feature(stdsimd))]\n   |                                          ^^^^^^^\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `ahash` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n",
                  "// pkg_name=kernel, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=loongarch64-unknown-none\n// pkg_dir=/ci/ByteOS/kernel\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target loongarch64-unknown-none\n   Compiling cfg-if v1.0.0\n   Compiling lock_api v0.4.9\n   Compiling scopeguard v1.1.0\n   Compiling log v0.4.17\n   Compiling bitflags v2.4.2\n   Compiling bit_field v0.10.2\n   Compiling bitflags v1.3.2\n   Compiling percpu v0.1.0 (https://github.com/Byte-OS/percpu.git#a71e60e3)\n   Compiling loongArch64 v0.2.2\n   Compiling fdt v0.1.5\n   Compiling byteorder v1.4.3\n   Compiling spin v0.9.8\n   Compiling sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n   Compiling polyhal v0.1.0 (https://github.com/Byte-OS/polyhal.git#78137eed)\n   Compiling zerocopy v0.7.32\n   Compiling linkme v0.3.22\n   Compiling timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling downcast-rs v1.2.0\n   Compiling vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling frame_allocator v0.1.0 (https://github.com/Byte-OS/bit_frame_allocator.git#e401675a)\n   Compiling virtio-drivers v0.7.1 (https://github.com/rcore-os/virtio-drivers?rev=61ece50#61ece509)\n   Compiling num-traits v0.2.16\n   Compiling ahash v0.8.3\n   Compiling once_cell v1.19.0\nerror[E0635]: unknown feature `stdsimd`\n  --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ahash-0.8.3/src/lib.rs:99:42\n   |\n99 | #![cfg_attr(feature = \"stdsimd\", feature(stdsimd))]\n   |                                          ^^^^^^^\n\n   Compiling futures-core v0.3.28\n   Compiling num_enum v0.6.1\n   Compiling hal v0.1.0 (https://github.com/Byte-OS/hal.git#6f40272c)\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `ahash` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
                ]
              }
            },
            {
              "file": "kernel/build.rs",
              "count": 3,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: comparison to empty slice\n  --> kernel/build.rs:17:12\n   |\n17 |         if module == \"\" {\n   |            ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `module.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n   = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n",
                  "warning: single-character string constant used as pattern\n  --> kernel/build.rs:20:84\n   |\n20 |         module_file_content.push_str(&format!(\"extern crate {};\\n\", module.replace(\"-\", \"_\")))\n   |                                                                                    ^^^ help: try using a `char` instead: `'-'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n",
                  "warning: single-character string constant used as pattern\n  --> kernel/build.rs:29:16\n   |\n29 |         .split(\",\")\n   |                ^^^ help: try using a `char` instead: `','`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/syscall/fd.rs",
              "count": 2,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: digits of hex, binary or octal literal not in groups of equal size\n   --> kernel/src/syscall/fd.rs:699:57\n    |\n699 |         let etime = current_nsec() + timeout as usize * 0x1000_000;\n    |                                                         ^^^^^^^^^^ help: consider: `0x0100_0000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n    = note: `#[warn(clippy::unusual_byte_groupings)]` on by default\n\n",
                  "warning: digits of hex, binary or octal literal not in groups of equal size\n   --> kernel/src/syscall/fd.rs:936:31\n    |\n936 |             stime + timeout * 0x1000_000\n    |                               ^^^^^^^^^^ help: consider: `0x0100_0000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/user/socket_pair.rs",
              "count": 2,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:42:9\n   |\n42 | /         if events.contains(PollEvent::POLLOUT) {\n43 | |             if self.inner.lock().len() <= 0x50000 {\n44 | |                 res |= PollEvent::POLLOUT;\n45 | |             }\n46 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n   = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n   |\n42 ~         if events.contains(PollEvent::POLLOUT) && self.inner.lock().len() <= 0x50000 {\n43 +             res |= PollEvent::POLLOUT;\n44 +         }\n   |\n\n",
                  "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:47:9\n   |\n47 | /         if events.contains(PollEvent::POLLIN) {\n48 | |             if self.inner.lock().len() > 0 {\n49 | |                 res |= PollEvent::POLLIN;\n50 | |             }\n51 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n   |\n47 ~         if events.contains(PollEvent::POLLIN) && self.inner.lock().len() > 0 {\n48 +             res |= PollEvent::POLLIN;\n49 +         }\n   |\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/user/signal.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0432]: unresolved import `polyhal::SIG_RETURN_ADDR`\n --> kernel/src/user/signal.rs:5:30\n  |\n5 | use polyhal::{TrapFrameArgs, SIG_RETURN_ADDR};\n  |                              ^^^^^^^^^^^^^^^ no `SIG_RETURN_ADDR` in the root\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/syscall/mod.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unneeded sub `cfg` when there is only one condition\n   --> kernel/src/syscall/mod.rs:381:19\n    |\n381 |             #[cfg(any(target_arch = \"x86_64\"))]\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `target_arch = \"x86_64\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_minimal_cfg\n    = note: `#[warn(clippy::non_minimal_cfg)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/syscall/shm.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: this is a decimal constant\n  --> kernel/src/syscall/shm.rs:31:21\n   |\n31 |         if shmflg & 01000 > 0 {\n   |                     ^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_prefixed_literal\n   = note: `#[warn(clippy::zero_prefixed_literal)]` on by default\nhelp: if you mean to use a decimal constant, remove the `0` to avoid confusion\n   |\n31 |         if shmflg & 1000 > 0 {\n   |                     ~~~~\nhelp: if you mean to use an octal constant, use `0o`\n   |\n31 |         if shmflg & 0o1000 > 0 {\n   |                     ~~~~~~\n\n"
                ]
              }
            },
            {
              "file": "kernel/src/tasks/initproc.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: constants have by default a `'static` lifetime\n   --> kernel/src/tasks/initproc.rs:213:27\n    |\n213 | pub const USER_WORK_DIR: &'static str = \"/\";\n    |                          -^^^^^^^---- help: consider removing `'static`: `&str`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n    = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "clippy",
              "count": 1,
              "kinds": {
                "Cargo": [
                  "// pkg_name=kernel, checker=Clippy\n// toolchain=nightly-2023-12-01, target=x86_64-unknown-none\n// pkg_dir=/ci/ByteOS/kernel\n// cmd=cargo clippy --target x86_64-unknown-none --no-deps --message-format=json\n    Checking cfg-if v1.0.0\n    Checking scopeguard v1.1.0\n   Compiling lock_api v0.4.9\n   Compiling log v0.4.17\n    Checking bitflags v2.4.2\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling rustversion v1.0.12\n   Compiling paste v1.0.14\n    Checking raw-cpuid v10.7.0\n    Checking spin v0.9.8\n   Compiling x86 v0.52.0\n    Checking volatile v0.4.6\n   Compiling percpu v0.1.0 (https://github.com/Byte-OS/percpu.git#a71e60e3)\n    Checking bit v0.1.1\n    Checking irq_safety v0.1.1 (https://github.com/theseus-os/irq_safety.git#11bfab9f)\n    Checking sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n    Checking raw-cpuid v11.0.1\n    Checking multiboot v0.8.0\n    Checking x86_64 v0.14.10\n    Checking fdt v0.1.5\n    Checking byteorder v1.4.3\n    Checking linkme v0.3.22\n    Checking zerocopy v0.7.32\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n    Checking downcast-rs v1.2.0\n   Compiling num-traits v0.2.16\n    Checking vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling ahash v0.8.3\n    Checking x2apic v0.4.3\n    Checking once_cell v1.19.0\n    Checking virtio-drivers v0.7.1 (https://github.com/rcore-os/virtio-drivers?rev=61ece50#61ece509)\n    Checking polyhal v0.1.0 (https://github.com/Byte-OS/polyhal.git#78137eed)\n   Compiling futures-core v0.3.28\n    Checking num_enum v0.6.1\n    Checking allocator-api2 v0.2.16\n   Compiling kramdisk v0.1.0 (https://github.com/Byte-OS/kramdisk.git#9eb2394b)\n    Checking hashbrown v0.14.0\n    Checking frame_allocator v0.1.0 (https://github.com/Byte-OS/bit_frame_allocator.git#e401675a)\n    Checking hal v0.1.0 (https://github.com/Byte-OS/hal.git#6f40272c)\n    Checking ramfs v0.1.0 (https://github.com/Byte-OS/ramfs.git#57167265)\n   Compiling allocator v0.1.0 (https://github.com/Byte-OS/allocator.git?rev=c6ce949146d5feab1d406502b19b035f5d392c35#c6ce9491)\n    Checking procfs v0.1.0 (https://github.com/Byte-OS/procfs.git#0477d4ee)\n    Checking buddy_system_allocator v0.9.0\n    Checking fatfs v0.4.0 (https://github.com/byte-os/rust-fatfs.git#3b45ddc5)\n    Checking zero v0.1.3\n    Checking pin-project-lite v0.2.9\n    Checking ns16550a v0.2.0\n    Checking xmas-elf v0.9.0\n    Checking futures-lite v1.13.0\n    Checking devices v0.1.0 (https://github.com/Byte-OS/devices.git#28ba385a)\n    Checking logging v0.1.0 (https://github.com/Byte-OS/logging.git#3e749346)\n    Checking kgoldfish-rtc v0.1.0 (https://github.com/Byte-OS/driver-kgoldfish-rtc.git#66e0234f)\n    Checking devfs v0.1.0 (https://github.com/Byte-OS/devfs.git#c5e510df)\n    Checking general-plic v0.1.0 (https://github.com/Byte-OS/driver-general-plic.git#d6196a18)\n    Checking kvirtio v0.1.0 (https://github.com/Byte-OS/driver-kvirtio.git#5917abe9)\n    Checking fs v0.1.0 (https://github.com/Byte-OS/fs.git#6d968ea7)\n    Checking ns16550a v0.1.0 (https://github.com/Byte-OS/driver-ns16550a.git#059e0f27)\n    Checking executor v0.1.0 (https://github.com/Byte-OS/executor.git#d1dd77ff)\n   Compiling kernel v0.1.0 (/ci/ByteOS/kernel)\n    Checking signal v0.1.0 (https://github.com/Byte-OS/signal.git#a03290b1)\n    Checking lose-net-stack v0.1.0 (https://github.com/byte-os/lose-net-stack?rev=bb99460#bb99460f)\nerror: could not compile `kernel` (bin \"kernel\") due to 2 previous errors; 12 warnings emitted\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "mingo",
          "count": 13,
          "raw_reports": [
            {
              "file": "clippy",
              "count": 4,
              "kinds": {
                "Cargo": [
                  "// pkg_name=mingo, checker=Clippy\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/ci/arceos/tools/raspi4/chainloader\n// cmd=cargo clippy --target x86_64-unknown-none --no-deps --message-format=json\n   Compiling mingo v0.6.0 (/ci/arceos/tools/raspi4/chainloader)\nerror: could not compile `mingo` (bin \"kernel\") due to 6 previous errors\n",
                  "// pkg_name=mingo, checker=Clippy\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/ci/arceos/tools/raspi4/chainloader\n// cmd=cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json\n   Compiling mingo v0.6.0 (/ci/arceos/tools/raspi4/chainloader)\nerror: could not compile `mingo` (bin \"kernel\") due to 6 previous errors\n",
                  "// pkg_name=mingo, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/tools/raspi4/chainloader\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n Downloading crates ...\n  Downloaded aarch64-cpu v9.0.0\n    Checking tock-registers v0.8.1\n   Compiling mingo v0.6.0 (/ci/arceos/tools/raspi4/chainloader)\n    Checking aarch64-cpu v9.0.0\nerror: could not compile `mingo` (bin \"kernel\") due to 4 previous errors; 1 warning emitted\n",
                  "// pkg_name=mingo, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/tools/raspi4/chainloader\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking tock-registers v0.8.1\n   Compiling mingo v0.6.0 (/ci/arceos/tools/raspi4/chainloader)\n    Checking aarch64-cpu v9.0.0\nerror: could not compile `mingo` (bin \"kernel\") due to 4 previous errors; 1 warning emitted\n"
                ]
              }
            },
            {
              "file": "lockbud",
              "count": 4,
              "kinds": {
                "Cargo": [
                  "// pkg_name=mingo, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/ci/arceos/tools/raspi4/chainloader\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none\n   Compiling mingo v0.6.0 (/ci/arceos/tools/raspi4/chainloader)\nerror: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\nerror[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\nerror[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\nerror[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `mingo` (bin \"kernel\") due to 5 previous errors\n",
                  "// pkg_name=mingo, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/ci/arceos/tools/raspi4/chainloader\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf\n   Compiling mingo v0.6.0 (/ci/arceos/tools/raspi4/chainloader)\nerror: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\nerror[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\nerror[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\nerror[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `mingo` (bin \"kernel\") due to 5 previous errors\n",
                  "// pkg_name=mingo, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/tools/raspi4/chainloader\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling tock-registers v0.8.1\n   Compiling mingo v0.6.0 (/ci/arceos/tools/raspi4/chainloader)\n   Compiling aarch64-cpu v9.0.0\nerror[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\nerror[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\nerror[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\nwarning: unused import: `nop`\n  --> src/cpu.rs:16:20\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |                    ^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nSome errors have detailed explanations: E0425, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `mingo` (bin \"kernel\") generated 1 warning\nerror: could not compile `mingo` (bin \"kernel\") due to 3 previous errors; 1 warning emitted\n",
                  "// pkg_name=mingo, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/tools/raspi4/chainloader\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling tock-registers v0.8.1\n   Compiling mingo v0.6.0 (/ci/arceos/tools/raspi4/chainloader)\n   Compiling aarch64-cpu v9.0.0\nerror[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\nerror[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\nerror[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\nwarning: unused import: `nop`\n  --> src/cpu.rs:16:20\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |                    ^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nSome errors have detailed explanations: E0425, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `mingo` (bin \"kernel\") generated 1 warning\nerror: could not compile `mingo` (bin \"kernel\") due to 3 previous errors; 1 warning emitted\n"
                ]
              }
            },
            {
              "file": "src/main.rs",
              "count": 3,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n",
                  "error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n",
                  "error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"
                ]
              }
            },
            {
              "file": "src/cpu.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\n"
                ]
              }
            },
            {
              "file": "src/panic_wait.rs",
              "count": 1,
              "kinds": {
                "Clippy(Error)": [
                  "error: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "arceos_posix_api",
          "count": 10,
          "raw_reports": [
            {
              "file": "clippy",
              "count": 4,
              "kinds": {
                "Cargo": [
                  "// pkg_name=arceos_posix_api, checker=Clippy\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/ci/arceos/api/arceos_posix_api\n// cmd=cargo clippy --target x86_64-unknown-none --no-deps --message-format=json\n Downloading crates ...\n  Downloaded nom v7.1.3\n  Downloaded shlex v1.1.0\n  Downloaded bindgen v0.69.4\n  Downloaded libloading v0.7.4\n  Downloaded regex v1.9.3\n  Downloaded regex-syntax v0.7.4\n  Downloaded lazycell v1.3.0\n  Downloaded which v4.4.0\n  Downloaded rustc-hash v1.1.0\n  Downloaded regex-automata v0.3.6\n  Downloaded prettyplease v0.2.12\n  Downloaded minimal-lexical v0.2.1\n  Downloaded libc v0.2.147\n  Downloaded itertools v0.10.5\n  Downloaded cexpr v0.6.0\n  Downloaded clang-sys v1.6.1\n  Downloaded bitmaps v3.2.1\n  Downloaded aho-corasick v1.0.4\n  Downloaded glob v0.3.1\n  Downloaded either v1.9.0\n  Downloaded flatten_objects v0.1.0\n    Blocking waiting for file lock on package cache\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling rustversion v1.0.14\n   Compiling syn v2.0.70\n   Compiling toml_edit v0.22.20\n   Compiling autocfg v1.1.0\n   Compiling paste v1.0.15\n   Compiling x86 v0.52.0\n   Compiling memchr v2.5.0\n   Compiling percpu v0.1.3\n   Compiling glob v0.3.1\n   Compiling libc v0.2.147\n   Compiling clang-sys v1.6.1\n    Checking x86_64 v0.14.12\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling prettyplease v0.2.12\n    Checking x2apic v0.4.3\n    Checking page_table_entry v0.4.0\n   Compiling num-traits v0.2.16\n   Compiling either v1.9.0\n   Compiling regex-syntax v0.7.4\n   Compiling minimal-lexical v0.2.1\n   Compiling cfg-if v1.0.0\n   Compiling libloading v0.7.4\n   Compiling nom v7.1.3\n   Compiling lock_api v0.4.10\n   Compiling regex-automata v0.3.6\n   Compiling crate_interface v0.1.3\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n   Compiling percpu_macros v0.1.2\n   Compiling linkme-impl v0.3.27\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling bindgen v0.69.4\n   Compiling regex v1.9.3\n   Compiling cexpr v0.6.0\n    Checking linkme v0.3.27\n   Compiling which v4.4.0\n   Compiling itertools v0.10.5\n   Compiling bitflags v2.6.0\n   Compiling shlex v1.1.0\n   Compiling lazycell v1.3.0\n   Compiling log v0.4.21\n   Compiling lazy_static v1.5.0\n    Checking scopeguard v1.2.0\n   Compiling rustc-hash v1.1.0\n   Compiling axerrno v0.1.0\n    Checking chrono v0.4.38\n    Checking spin v0.9.8\n    Checking axruntime v0.1.0 (/ci/arceos/modules/axruntime)\n    Checking axtask v0.1.0 (/ci/arceos/modules/axtask)\n    Checking bitmaps v3.2.1\n    Checking axsync v0.1.0 (/ci/arceos/modules/axsync)\n    Checking axfeat v0.1.0 (/ci/arceos/api/axfeat)\n    Checking axio v0.1.0\n    Checking flatten_objects v0.1.0\n   Compiling arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)\nerror: failed to run custom build command for `arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)`\n\nCaused by:\n  process didn't exit successfully: `/ci/arceos/target/debug/build/arceos_posix_api-efa045adf7140c76/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=ctypes.h\n\n  --- stderr\n  thread 'main' panicked at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:622:31:\n  Unable to find libclang: \"couldn't find any valid shared libraries matching: ['libclang.so', 'libclang-*.so', 'libclang.so.*', 'libclang-*.so.*'], set the `LIBCLANG_PATH` environment variable to a path where one of these files can be found (invalid: [])\"\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
                  "// pkg_name=arceos_posix_api, checker=Clippy\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/ci/arceos/api/arceos_posix_api\n// cmd=cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling num-traits v0.2.16\n   Compiling lock_api v0.4.10\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0\n    Checking bitmaps v3.2.1\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n   Compiling arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)\nerror: failed to run custom build command for `arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)`\n\nCaused by:\n  process didn't exit successfully: `/ci/arceos/target/debug/build/arceos_posix_api-efa045adf7140c76/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=ctypes.h\n\n  --- stderr\n  thread 'main' panicked at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:622:31:\n  Unable to find libclang: \"couldn't find any valid shared libraries matching: ['libclang.so', 'libclang-*.so', 'libclang.so.*', 'libclang-*.so.*'], set the `LIBCLANG_PATH` environment variable to a path where one of these files can be found (invalid: [])\"\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n",
                  "// pkg_name=arceos_posix_api, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/api/arceos_posix_api\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking kspin v0.1.0\n   Compiling num-traits v0.2.16\n   Compiling lock_api v0.4.10\n    Checking scopeguard v1.2.0\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling axerrno v0.1.0\n    Checking bitmaps v3.2.1\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n",
                  "// pkg_name=arceos_posix_api, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/api/arceos_posix_api\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking kspin v0.1.0\n   Compiling num-traits v0.2.16\n   Compiling lock_api v0.4.10\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\n    Checking bitmaps v3.2.1\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking axio v0.1.0\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
                ]
              }
            },
            {
              "file": "lockbud",
              "count": 4,
              "kinds": {
                "Cargo": [
                  "// pkg_name=arceos_posix_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/ci/arceos/api/arceos_posix_api\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling rustversion v1.0.14\n   Compiling syn v2.0.70\n   Compiling autocfg v1.1.0\n   Compiling toml_edit v0.22.20\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n   Compiling glob v0.3.1\n   Compiling percpu v0.1.3\n   Compiling memchr v2.5.0\n   Compiling libc v0.2.147\n   Compiling clang-sys v1.6.1\n   Compiling x86_64 v0.14.12\n   Compiling x86_64 v0.15.1\n   Compiling prettyplease v0.2.12\n   Compiling x2apic v0.4.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling page_table_entry v0.4.0\n   Compiling num-traits v0.2.16\n   Compiling cfg-if v1.0.0\n   Compiling regex-syntax v0.7.4\n   Compiling minimal-lexical v0.2.1\n   Compiling either v1.9.0\n   Compiling nom v7.1.3\n   Compiling libloading v0.7.4\n   Compiling lock_api v0.4.10\n   Compiling bindgen v0.69.4\n   Compiling regex-automata v0.3.6\n   Compiling crate_interface v0.1.3\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling percpu_macros v0.1.2\n   Compiling linkme-impl v0.3.27\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling cexpr v0.6.0\n   Compiling linkme v0.3.27\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n   Compiling regex v1.9.3\nwarning: `axhal` (lib) generated 1 warning (run `cargo fix --lib -p axhal` to apply 1 suggestion)\n   Compiling which v4.4.0\n   Compiling itertools v0.10.5\n   Compiling scopeguard v1.2.0\n   Compiling bitflags v2.6.0\n   Compiling lazy_static v1.5.0\n   Compiling lazycell v1.3.0\n   Compiling shlex v1.1.0\n   Compiling axerrno v0.1.0\n   Compiling rustc-hash v1.1.0\n   Compiling log v0.4.21\n   Compiling chrono v0.4.38\n   Compiling spin v0.9.8\n   Compiling axtask v0.1.0 (/ci/arceos/modules/axtask)\n   Compiling bitmaps v3.2.1\n   Compiling axsync v0.1.0 (/ci/arceos/modules/axsync)\n   Compiling axio v0.1.0\n   Compiling axruntime v0.1.0 (/ci/arceos/modules/axruntime)\n   Compiling axfeat v0.1.0 (/ci/arceos/api/axfeat)\n   Compiling flatten_objects v0.1.0\n[2024-09-04T00:43:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-04T00:43:10Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)\nerror: failed to run custom build command for `arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)`\n\nCaused by:\n  process didn't exit successfully: `/ci/arceos/target/debug/build/arceos_posix_api-96ae6b51e318bb60/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=ctypes.h\n\n  --- stderr\n  thread 'main' panicked at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:622:31:\n  Unable to find libclang: \"couldn't find any valid shared libraries matching: ['libclang.so', 'libclang-*.so', 'libclang.so.*', 'libclang-*.so.*'], set the `LIBCLANG_PATH` environment variable to a path where one of these files can be found (invalid: [])\"\n  stack backtrace:\n     0:     0x55748c7a3565 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55748c7a3565 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55748c7a3565 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55748c7a3565 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55748c7ccb3b - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55748c7ccb3b - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55748c7a042f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55748c7a333e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55748c7a333e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55748c7a46a9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55748c7a43ed - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55748c7a4bb3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55748c7a4a94 - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:664:13\n    13:     0x55748c7a3a29 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55748c7a47c7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55748c7cad73 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55748c7cb336 - core::result::unwrap_failed::hcaf97cbd304b2b7c\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/result.rs:1658:5\n    17:     0x55748c25bc6d - core::result::Result<T,E>::expect::h4ef6e7994668b0e0\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/result.rs:1038:23\n    18:     0x55748c2ab4bd - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::__static_ref_initialize::h8cc7b0a8f37675aa\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:622:13\n    19:     0x55748c2ab4bd - core::ops::function::FnOnce::call_once::hb3a11ab2445e7ada\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    20:     0x55748c33ebfc - lazy_static::lazy::Lazy<T>::get::{{closure}}::ha68e7643d45ac958\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/inline_lazy.rs:31:41\n    21:     0x55748c229c29 - std::sync::once::Once::call_once::{{closure}}::h88ab0ad9e4fd6e4d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sync/once.rs:149:41\n    22:     0x55748c1b294a - std::sys::sync::once::futex::Once::call::h2d2fdc19c924df82\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys/sync/once/futex.rs:124:21\n    23:     0x55748c229a4f - std::sync::once::Once::call_once::ha6e5bbfa8aa1f7b0\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sync/once.rs:149:9\n    24:     0x55748c1eb7bf - lazy_static::lazy::Lazy<T>::get::hb3319b01434506c0\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/inline_lazy.rs:30:9\n    25:     0x55748c1eb7bf - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::__stability::hbbfe3dcf239420a0\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/lib.rs:135:21\n    26:     0x55748c1eb7bf - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::h2fb19f01a734af8f\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/lib.rs:137:17\n    27:     0x55748c1e37cb - bindgen::ensure_libclang_is_loaded::hf62ce639a78e7402\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:630:33\n    28:     0x55748c1e47e5 - bindgen::Bindings::generate::hda06f541b8d42657\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:752:9\n    29:     0x55748c1e2f07 - bindgen::Builder::generate::h14539ed5aff19324\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:349:9\n    30:     0x55748c187e4c - build_script_build::main::gen_c_to_rust_bindings::he374de2bdb37e2ec\n                                 at /ci/arceos/api/arceos_posix_api/build.rs:98:9\n    31:     0x55748c18714e - build_script_build::main::hd464686fbfefe8d2\n                                 at /ci/arceos/api/arceos_posix_api/build.rs:106:5\n    32:     0x55748c188a3b - core::ops::function::FnOnce::call_once::h61865ea78467f494\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    33:     0x55748c18863e - std::sys_common::backtrace::__rust_begin_short_backtrace::h59e469e358f046f5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    34:     0x55748c187061 - std::rt::lang_start::{{closure}}::h4a7f80e12cd8fdab\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    35:     0x55748c79be7d - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    36:     0x55748c79be7d - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    37:     0x55748c79be7d - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    38:     0x55748c79be7d - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    39:     0x55748c79be7d - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    40:     0x55748c79be7d - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    41:     0x55748c79be7d - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    42:     0x55748c79be7d - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    43:     0x55748c79be7d - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    44:     0x55748c18703a - std::rt::lang_start::h5d7302b947a1e3b5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    45:     0x55748c1880ae - main\n    46:     0x7f684d36b24a - <unknown>\n    47:     0x7f684d36b305 - __libc_start_main\n    48:     0x55748c184a21 - _start\n    49:                0x0 - <unknown>\n",
                  "// pkg_name=arceos_posix_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/ci/arceos/api/arceos_posix_api\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf\n   Compiling riscv v0.11.1\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling num-traits v0.2.16\n   Compiling lock_api v0.4.10\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling scopeguard v1.2.0\n[2024-09-04T00:43:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-04T00:43:10Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axerrno v0.1.0\n   Compiling bitmaps v3.2.1\n   Compiling spin v0.9.8\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/riscv/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n   Compiling lazy_static v1.5.0\n   Compiling arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)\nerror: failed to run custom build command for `arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)`\n\nCaused by:\n  process didn't exit successfully: `/ci/arceos/target/debug/build/arceos_posix_api-96ae6b51e318bb60/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=ctypes.h\n\n  --- stderr\n  thread 'main' panicked at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:622:31:\n  Unable to find libclang: \"couldn't find any valid shared libraries matching: ['libclang.so', 'libclang-*.so', 'libclang.so.*', 'libclang-*.so.*'], set the `LIBCLANG_PATH` environment variable to a path where one of these files can be found (invalid: [])\"\n  stack backtrace:\n     0:     0x558ffbe69565 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x558ffbe69565 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x558ffbe69565 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x558ffbe69565 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x558ffbe92b3b - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x558ffbe92b3b - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x558ffbe6642f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x558ffbe6933e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x558ffbe6933e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x558ffbe6a6a9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x558ffbe6a3ed - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x558ffbe6abb3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x558ffbe6aa94 - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:664:13\n    13:     0x558ffbe69a29 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x558ffbe6a7c7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x558ffbe90d73 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x558ffbe91336 - core::result::unwrap_failed::hcaf97cbd304b2b7c\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/result.rs:1658:5\n    17:     0x558ffb921c6d - core::result::Result<T,E>::expect::h4ef6e7994668b0e0\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/result.rs:1038:23\n    18:     0x558ffb9714bd - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::__static_ref_initialize::h8cc7b0a8f37675aa\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:622:13\n    19:     0x558ffb9714bd - core::ops::function::FnOnce::call_once::hb3a11ab2445e7ada\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    20:     0x558ffba04bfc - lazy_static::lazy::Lazy<T>::get::{{closure}}::ha68e7643d45ac958\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/inline_lazy.rs:31:41\n    21:     0x558ffb8efc29 - std::sync::once::Once::call_once::{{closure}}::h88ab0ad9e4fd6e4d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sync/once.rs:149:41\n    22:     0x558ffb87894a - std::sys::sync::once::futex::Once::call::h2d2fdc19c924df82\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys/sync/once/futex.rs:124:21\n    23:     0x558ffb8efa4f - std::sync::once::Once::call_once::ha6e5bbfa8aa1f7b0\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sync/once.rs:149:9\n    24:     0x558ffb8b17bf - lazy_static::lazy::Lazy<T>::get::hb3319b01434506c0\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/inline_lazy.rs:30:9\n    25:     0x558ffb8b17bf - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::__stability::hbbfe3dcf239420a0\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/lib.rs:135:21\n    26:     0x558ffb8b17bf - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::h2fb19f01a734af8f\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/lib.rs:137:17\n    27:     0x558ffb8a97cb - bindgen::ensure_libclang_is_loaded::hf62ce639a78e7402\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:630:33\n    28:     0x558ffb8aa7e5 - bindgen::Bindings::generate::hda06f541b8d42657\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:752:9\n    29:     0x558ffb8a8f07 - bindgen::Builder::generate::h14539ed5aff19324\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:349:9\n    30:     0x558ffb84de4c - build_script_build::main::gen_c_to_rust_bindings::he374de2bdb37e2ec\n                                 at /ci/arceos/api/arceos_posix_api/build.rs:98:9\n    31:     0x558ffb84d14e - build_script_build::main::hd464686fbfefe8d2\n                                 at /ci/arceos/api/arceos_posix_api/build.rs:106:5\n    32:     0x558ffb84ea3b - core::ops::function::FnOnce::call_once::h61865ea78467f494\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    33:     0x558ffb84e63e - std::sys_common::backtrace::__rust_begin_short_backtrace::h59e469e358f046f5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    34:     0x558ffb84d061 - std::rt::lang_start::{{closure}}::h4a7f80e12cd8fdab\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    35:     0x558ffbe61e7d - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    36:     0x558ffbe61e7d - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    37:     0x558ffbe61e7d - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    38:     0x558ffbe61e7d - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    39:     0x558ffbe61e7d - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    40:     0x558ffbe61e7d - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    41:     0x558ffbe61e7d - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    42:     0x558ffbe61e7d - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    43:     0x558ffbe61e7d - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    44:     0x558ffb84d03a - std::rt::lang_start::h5d7302b947a1e3b5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    45:     0x558ffb84e0ae - main\n    46:     0x7f98362b824a - <unknown>\n    47:     0x7f98362b8305 - __libc_start_main\n    48:     0x558ffb84aa21 - _start\n    49:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\nwarning: `axhal` (lib) generated 1 warning (run `cargo fix --lib -p axhal` to apply 1 suggestion)\n",
                  "// pkg_name=arceos_posix_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/api/arceos_posix_api\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling kspin v0.1.0\n   Compiling num-traits v0.2.16\n   Compiling lock_api v0.4.10\n   Compiling scopeguard v1.2.0\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\n[2024-09-04T00:43:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-04T00:43:10Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axerrno v0.1.0\n   Compiling bitmaps v3.2.1\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n   Compiling spin v0.9.8\n   Compiling lazy_static v1.5.0\nFor more information about this error, try `rustc --explain E0425`.\n   Compiling arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\nerror: failed to run custom build command for `arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)`\n\nCaused by:\n  process didn't exit successfully: `/ci/arceos/target/debug/build/arceos_posix_api-96ae6b51e318bb60/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=ctypes.h\n\n  --- stderr\n  thread 'main' panicked at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:622:31:\n  Unable to find libclang: \"couldn't find any valid shared libraries matching: ['libclang.so', 'libclang-*.so', 'libclang.so.*', 'libclang-*.so.*'], set the `LIBCLANG_PATH` environment variable to a path where one of these files can be found (invalid: [])\"\n  stack backtrace:\n     0:     0x55f43816b565 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55f43816b565 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55f43816b565 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55f43816b565 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55f438194b3b - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55f438194b3b - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55f43816842f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55f43816b33e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55f43816b33e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55f43816c6a9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55f43816c3ed - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55f43816cbb3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55f43816ca94 - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:664:13\n    13:     0x55f43816ba29 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55f43816c7c7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55f438192d73 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55f438193336 - core::result::unwrap_failed::hcaf97cbd304b2b7c\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/result.rs:1658:5\n    17:     0x55f437c23c6d - core::result::Result<T,E>::expect::h4ef6e7994668b0e0\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/result.rs:1038:23\n    18:     0x55f437c734bd - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::__static_ref_initialize::h8cc7b0a8f37675aa\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:622:13\n    19:     0x55f437c734bd - core::ops::function::FnOnce::call_once::hb3a11ab2445e7ada\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    20:     0x55f437d06bfc - lazy_static::lazy::Lazy<T>::get::{{closure}}::ha68e7643d45ac958\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/inline_lazy.rs:31:41\n    21:     0x55f437bf1c29 - std::sync::once::Once::call_once::{{closure}}::h88ab0ad9e4fd6e4d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sync/once.rs:149:41\n    22:     0x55f437b7a94a - std::sys::sync::once::futex::Once::call::h2d2fdc19c924df82\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys/sync/once/futex.rs:124:21\n    23:     0x55f437bf1a4f - std::sync::once::Once::call_once::ha6e5bbfa8aa1f7b0\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sync/once.rs:149:9\n    24:     0x55f437bb37bf - lazy_static::lazy::Lazy<T>::get::hb3319b01434506c0\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/inline_lazy.rs:30:9\n    25:     0x55f437bb37bf - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::__stability::hbbfe3dcf239420a0\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/lib.rs:135:21\n    26:     0x55f437bb37bf - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::h2fb19f01a734af8f\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/lib.rs:137:17\n    27:     0x55f437bab7cb - bindgen::ensure_libclang_is_loaded::hf62ce639a78e7402\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:630:33\n    28:     0x55f437bac7e5 - bindgen::Bindings::generate::hda06f541b8d42657\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:752:9\n    29:     0x55f437baaf07 - bindgen::Builder::generate::h14539ed5aff19324\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:349:9\n    30:     0x55f437b4fe4c - build_script_build::main::gen_c_to_rust_bindings::he374de2bdb37e2ec\n                                 at /ci/arceos/api/arceos_posix_api/build.rs:98:9\n    31:     0x55f437b4f14e - build_script_build::main::hd464686fbfefe8d2\n                                 at /ci/arceos/api/arceos_posix_api/build.rs:106:5\n    32:     0x55f437b50a3b - core::ops::function::FnOnce::call_once::h61865ea78467f494\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    33:     0x55f437b5063e - std::sys_common::backtrace::__rust_begin_short_backtrace::h59e469e358f046f5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    34:     0x55f437b4f061 - std::rt::lang_start::{{closure}}::h4a7f80e12cd8fdab\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    35:     0x55f438163e7d - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    36:     0x55f438163e7d - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    37:     0x55f438163e7d - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    38:     0x55f438163e7d - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    39:     0x55f438163e7d - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    40:     0x55f438163e7d - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    41:     0x55f438163e7d - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    42:     0x55f438163e7d - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    43:     0x55f438163e7d - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    44:     0x55f437b4f03a - std::rt::lang_start::h5d7302b947a1e3b5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    45:     0x55f437b500ae - main\n    46:     0x7f0db4a6824a - <unknown>\n    47:     0x7f0db4a68305 - __libc_start_main\n    48:     0x55f437b4ca21 - _start\n    49:                0x0 - <unknown>\n",
                  "// pkg_name=arceos_posix_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/api/arceos_posix_api\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling kspin v0.1.0\n   Compiling num-traits v0.2.16\n   Compiling lock_api v0.4.10\n   Compiling scopeguard v1.2.0\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\n[2024-09-04T00:43:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-04T00:43:10Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axerrno v0.1.0\n   Compiling bitmaps v3.2.1\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n   Compiling spin v0.9.8\n   Compiling lazy_static v1.5.0\nFor more information about this error, try `rustc --explain E0425`.\n   Compiling arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\nerror: failed to run custom build command for `arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)`\n\nCaused by:\n  process didn't exit successfully: `/ci/arceos/target/debug/build/arceos_posix_api-96ae6b51e318bb60/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=ctypes.h\n\n  --- stderr\n  thread 'main' panicked at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:622:31:\n  Unable to find libclang: \"couldn't find any valid shared libraries matching: ['libclang.so', 'libclang-*.so', 'libclang.so.*', 'libclang-*.so.*'], set the `LIBCLANG_PATH` environment variable to a path where one of these files can be found (invalid: [])\"\n  stack backtrace:\n     0:     0x55762b054565 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55762b054565 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55762b054565 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55762b054565 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55762b07db3b - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55762b07db3b - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55762b05142f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55762b05433e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55762b05433e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55762b0556a9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55762b0553ed - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55762b055bb3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55762b055a94 - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:664:13\n    13:     0x55762b054a29 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55762b0557c7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55762b07bd73 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55762b07c336 - core::result::unwrap_failed::hcaf97cbd304b2b7c\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/result.rs:1658:5\n    17:     0x55762ab0cc6d - core::result::Result<T,E>::expect::h4ef6e7994668b0e0\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/result.rs:1038:23\n    18:     0x55762ab5c4bd - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::__static_ref_initialize::h8cc7b0a8f37675aa\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:622:13\n    19:     0x55762ab5c4bd - core::ops::function::FnOnce::call_once::hb3a11ab2445e7ada\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    20:     0x55762abefbfc - lazy_static::lazy::Lazy<T>::get::{{closure}}::ha68e7643d45ac958\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/inline_lazy.rs:31:41\n    21:     0x55762aadac29 - std::sync::once::Once::call_once::{{closure}}::h88ab0ad9e4fd6e4d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sync/once.rs:149:41\n    22:     0x55762aa6394a - std::sys::sync::once::futex::Once::call::h2d2fdc19c924df82\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys/sync/once/futex.rs:124:21\n    23:     0x55762aadaa4f - std::sync::once::Once::call_once::ha6e5bbfa8aa1f7b0\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sync/once.rs:149:9\n    24:     0x55762aa9c7bf - lazy_static::lazy::Lazy<T>::get::hb3319b01434506c0\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/inline_lazy.rs:30:9\n    25:     0x55762aa9c7bf - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::__stability::hbbfe3dcf239420a0\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/lib.rs:135:21\n    26:     0x55762aa9c7bf - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::h2fb19f01a734af8f\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/lib.rs:137:17\n    27:     0x55762aa947cb - bindgen::ensure_libclang_is_loaded::hf62ce639a78e7402\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:630:33\n    28:     0x55762aa957e5 - bindgen::Bindings::generate::hda06f541b8d42657\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:752:9\n    29:     0x55762aa93f07 - bindgen::Builder::generate::h14539ed5aff19324\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:349:9\n    30:     0x55762aa38e4c - build_script_build::main::gen_c_to_rust_bindings::he374de2bdb37e2ec\n                                 at /ci/arceos/api/arceos_posix_api/build.rs:98:9\n    31:     0x55762aa3814e - build_script_build::main::hd464686fbfefe8d2\n                                 at /ci/arceos/api/arceos_posix_api/build.rs:106:5\n    32:     0x55762aa39a3b - core::ops::function::FnOnce::call_once::h61865ea78467f494\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    33:     0x55762aa3963e - std::sys_common::backtrace::__rust_begin_short_backtrace::h59e469e358f046f5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    34:     0x55762aa38061 - std::rt::lang_start::{{closure}}::h4a7f80e12cd8fdab\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    35:     0x55762b04ce7d - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    36:     0x55762b04ce7d - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    37:     0x55762b04ce7d - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    38:     0x55762b04ce7d - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    39:     0x55762b04ce7d - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    40:     0x55762b04ce7d - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    41:     0x55762b04ce7d - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    42:     0x55762b04ce7d - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    43:     0x55762b04ce7d - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    44:     0x55762aa3803a - std::rt::lang_start::h5d7302b947a1e3b5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    45:     0x55762aa390ae - main\n    46:     0x7fd07453124a - <unknown>\n    47:     0x7fd074531305 - __libc_start_main\n    48:     0x55762aa35a21 - _start\n    49:                0x0 - <unknown>\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/x86_64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "Not supported to display yet.",
              "count": 1,
              "kinds": {
                "Lockbud(Possibly)": [
                  "[2024-09-04T00:43:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-04T00:43:10Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axlibc",
          "count": 10,
          "raw_reports": [
            {
              "file": "clippy",
              "count": 4,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axlibc, checker=Clippy\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/ci/arceos/ulib/axlibc\n// cmd=cargo clippy --target x86_64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling rustversion v1.0.14\n   Compiling toml_edit v0.22.20\n   Compiling autocfg v1.1.0\n   Compiling memchr v2.5.0\n   Compiling glob v0.3.1\n   Compiling libc v0.2.147\n   Compiling paste v1.0.15\n   Compiling clang-sys v1.6.1\n   Compiling prettyplease v0.2.12\n   Compiling x86 v0.52.0\n   Compiling percpu v0.1.3\n   Compiling either v1.9.0\n   Compiling minimal-lexical v0.2.1\n   Compiling cfg-if v1.0.0\n   Compiling regex-syntax v0.7.4\n   Compiling nom v7.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling regex-automata v0.3.6\n   Compiling libloading v0.7.4\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\n   Compiling bindgen v0.69.4\n    Checking linkme v0.3.27\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling regex v1.9.3\n    Checking page_table_entry v0.4.0\n   Compiling cexpr v0.6.0\n   Compiling itertools v0.10.5\n    Checking x2apic v0.4.3\n   Compiling which v4.4.0\n   Compiling num-traits v0.2.16\n   Compiling lazycell v1.3.0\n   Compiling shlex v1.1.0\n   Compiling rustc-hash v1.1.0\n   Compiling lazy_static v1.5.0\n   Compiling bitflags v2.6.0\n   Compiling log v0.4.21\n   Compiling lock_api v0.4.10\n   Compiling axerrno v0.1.0\n    Checking chrono v0.4.38\n    Checking spin v0.9.8\n    Checking axruntime v0.1.0 (/ci/arceos/modules/axruntime)\n    Checking axtask v0.1.0 (/ci/arceos/modules/axtask)\n    Checking axio v0.1.0\n    Checking axsync v0.1.0 (/ci/arceos/modules/axsync)\n    Checking axfeat v0.1.0 (/ci/arceos/api/axfeat)\n   Compiling arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)\n   Compiling axlibc v0.1.0 (/ci/arceos/ulib/axlibc)\nerror: failed to run custom build command for `axlibc v0.1.0 (/ci/arceos/ulib/axlibc)`\n\nCaused by:\n  process didn't exit successfully: `/ci/arceos/target/debug/build/axlibc-c6ff73d04fd73108/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=ctypes.h\n\n  --- stderr\n  thread 'main' panicked at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:622:31:\n  Unable to find libclang: \"couldn't find any valid shared libraries matching: ['libclang.so', 'libclang-*.so', 'libclang.so.*', 'libclang-*.so.*'], set the `LIBCLANG_PATH` environment variable to a path where one of these files can be found (invalid: [])\"\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\nerror: failed to run custom build command for `arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)`\n\nCaused by:\n  process didn't exit successfully: `/ci/arceos/target/debug/build/arceos_posix_api-efa045adf7140c76/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=ctypes.h\n\n  --- stderr\n  thread 'main' panicked at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:622:31:\n  Unable to find libclang: \"couldn't find any valid shared libraries matching: ['libclang.so', 'libclang-*.so', 'libclang.so.*', 'libclang-*.so.*'], set the `LIBCLANG_PATH` environment variable to a path where one of these files can be found (invalid: [])\"\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
                  "// pkg_name=axlibc, checker=Clippy\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/ci/arceos/ulib/axlibc\n// cmd=cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling num-traits v0.2.16\n   Compiling lock_api v0.4.10\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling axerrno v0.1.0\n    Checking flatten_objects v0.1.0\n   Compiling arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)\n    Checking spin v0.9.8\nerror: failed to run custom build command for `arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)`\n\nCaused by:\n  process didn't exit successfully: `/ci/arceos/target/debug/build/arceos_posix_api-efa045adf7140c76/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=ctypes.h\n\n  --- stderr\n  thread 'main' panicked at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:622:31:\n  Unable to find libclang: \"couldn't find any valid shared libraries matching: ['libclang.so', 'libclang-*.so', 'libclang.so.*', 'libclang-*.so.*'], set the `LIBCLANG_PATH` environment variable to a path where one of these files can be found (invalid: [])\"\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n",
                  "// pkg_name=axlibc, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/ulib/axlibc\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking kspin v0.1.0\n   Compiling num-traits v0.2.16\n   Compiling lock_api v0.4.10\n   Compiling axerrno v0.1.0\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\n    Checking flatten_objects v0.1.0\n   Compiling arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)\nerror: failed to run custom build command for `arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)`\n\nCaused by:\n  process didn't exit successfully: `/ci/arceos/target/debug/build/arceos_posix_api-efa045adf7140c76/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=ctypes.h\n\n  --- stderr\n  thread 'main' panicked at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:622:31:\n  Unable to find libclang: \"couldn't find any valid shared libraries matching: ['libclang.so', 'libclang-*.so', 'libclang.so.*', 'libclang-*.so.*'], set the `LIBCLANG_PATH` environment variable to a path where one of these files can be found (invalid: [])\"\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\n",
                  "// pkg_name=axlibc, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/ulib/axlibc\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n    Checking kspin v0.1.0\n   Compiling num-traits v0.2.16\n   Compiling lock_api v0.4.10\n   Compiling axerrno v0.1.0\n    Checking axlog v0.1.0 (/ci/arceos/modules/axlog)\n    Checking flatten_objects v0.1.0\n   Compiling arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)\nerror: failed to run custom build command for `arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)`\n\nCaused by:\n  process didn't exit successfully: `/ci/arceos/target/debug/build/arceos_posix_api-efa045adf7140c76/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=ctypes.h\n\n  --- stderr\n  thread 'main' panicked at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:622:31:\n  Unable to find libclang: \"couldn't find any valid shared libraries matching: ['libclang.so', 'libclang-*.so', 'libclang.so.*', 'libclang-*.so.*'], set the `LIBCLANG_PATH` environment variable to a path where one of these files can be found (invalid: [])\"\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `axhal` (lib) due to 6 previous errors; 2 warnings emitted\n"
                ]
              }
            },
            {
              "file": "lockbud",
              "count": 4,
              "kinds": {
                "Cargo": [
                  "// pkg_name=axlibc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/ci/arceos/ulib/axlibc\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.0\n   Compiling serde v1.0.204\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling autocfg v1.1.0\n   Compiling syn v2.0.70\n   Compiling rustversion v1.0.14\n   Compiling toml_edit v0.22.20\n   Compiling memchr v2.5.0\n   Compiling libc v0.2.147\n   Compiling glob v0.3.1\n   Compiling paste v1.0.15\n   Compiling x86 v0.52.0\n   Compiling clang-sys v1.6.1\n   Compiling prettyplease v0.2.12\n   Compiling minimal-lexical v0.2.1\n   Compiling regex-syntax v0.7.4\n   Compiling percpu v0.1.3\n   Compiling cfg-if v1.0.0\n   Compiling either v1.9.0\n   Compiling libloading v0.7.4\n   Compiling nom v7.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling regex-automata v0.3.6\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling x86_64 v0.14.12\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling linkme-impl v0.3.27\n   Compiling x86_64 v0.15.1\n   Compiling bindgen v0.69.4\n   Compiling x2apic v0.4.3\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling regex v1.9.3\n   Compiling linkme v0.3.27\n   Compiling cexpr v0.6.0\n   Compiling page_table_entry v0.4.0\n   Compiling which v4.4.0\n   Compiling itertools v0.10.5\n   Compiling num-traits v0.2.16\n   Compiling shlex v1.1.0\n   Compiling log v0.4.21\n   Compiling bitflags v2.6.0\n   Compiling lazy_static v1.5.0\n   Compiling rustc-hash v1.1.0\n   Compiling lazycell v1.3.0\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n   Compiling lock_api v0.4.10\nwarning: `axhal` (lib) generated 1 warning (run `cargo fix --lib -p axhal` to apply 1 suggestion)\n   Compiling axerrno v0.1.0\n   Compiling spin v0.9.8\n   Compiling axtask v0.1.0 (/ci/arceos/modules/axtask)\n   Compiling axsync v0.1.0 (/ci/arceos/modules/axsync)\n   Compiling axio v0.1.0\n   Compiling chrono v0.4.38\n   Compiling axruntime v0.1.0 (/ci/arceos/modules/axruntime)\n   Compiling axfeat v0.1.0 (/ci/arceos/api/axfeat)\n[2024-09-04T00:46:50Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-04T00:46:50Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)\n   Compiling axlibc v0.1.0 (/ci/arceos/ulib/axlibc)\nerror: failed to run custom build command for `arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)`\n\nCaused by:\n  process didn't exit successfully: `/ci/arceos/target/debug/build/arceos_posix_api-96ae6b51e318bb60/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=ctypes.h\n\n  --- stderr\n  thread 'main' panicked at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:622:31:\n  Unable to find libclang: \"couldn't find any valid shared libraries matching: ['libclang.so', 'libclang-*.so', 'libclang.so.*', 'libclang-*.so.*'], set the `LIBCLANG_PATH` environment variable to a path where one of these files can be found (invalid: [])\"\n  stack backtrace:\n     0:     0x5557d0bb0565 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x5557d0bb0565 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x5557d0bb0565 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x5557d0bb0565 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x5557d0bd9b3b - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x5557d0bd9b3b - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x5557d0bad42f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x5557d0bb033e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x5557d0bb033e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x5557d0bb16a9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x5557d0bb13ed - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x5557d0bb1bb3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x5557d0bb1a94 - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:664:13\n    13:     0x5557d0bb0a29 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x5557d0bb17c7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x5557d0bd7d73 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x5557d0bd8336 - core::result::unwrap_failed::hcaf97cbd304b2b7c\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/result.rs:1658:5\n    17:     0x5557d0668c6d - core::result::Result<T,E>::expect::h4ef6e7994668b0e0\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/result.rs:1038:23\n    18:     0x5557d06b84bd - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::__static_ref_initialize::h8cc7b0a8f37675aa\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:622:13\n    19:     0x5557d06b84bd - core::ops::function::FnOnce::call_once::hb3a11ab2445e7ada\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    20:     0x5557d074bbfc - lazy_static::lazy::Lazy<T>::get::{{closure}}::ha68e7643d45ac958\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/inline_lazy.rs:31:41\n    21:     0x5557d0636c29 - std::sync::once::Once::call_once::{{closure}}::h88ab0ad9e4fd6e4d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sync/once.rs:149:41\n    22:     0x5557d05bf94a - std::sys::sync::once::futex::Once::call::h2d2fdc19c924df82\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys/sync/once/futex.rs:124:21\n    23:     0x5557d0636a4f - std::sync::once::Once::call_once::ha6e5bbfa8aa1f7b0\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sync/once.rs:149:9\n    24:     0x5557d05f87bf - lazy_static::lazy::Lazy<T>::get::hb3319b01434506c0\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/inline_lazy.rs:30:9\n    25:     0x5557d05f87bf - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::__stability::hbbfe3dcf239420a0\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/lib.rs:135:21\n    26:     0x5557d05f87bf - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::h2fb19f01a734af8f\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/lib.rs:137:17\n    27:     0x5557d05f07cb - bindgen::ensure_libclang_is_loaded::hf62ce639a78e7402\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:630:33\n    28:     0x5557d05f17e5 - bindgen::Bindings::generate::hda06f541b8d42657\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:752:9\n    29:     0x5557d05eff07 - bindgen::Builder::generate::h14539ed5aff19324\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:349:9\n    30:     0x5557d0594e4c - build_script_build::main::gen_c_to_rust_bindings::he374de2bdb37e2ec\n                                 at /ci/arceos/api/arceos_posix_api/build.rs:98:9\n    31:     0x5557d059414e - build_script_build::main::hd464686fbfefe8d2\n                                 at /ci/arceos/api/arceos_posix_api/build.rs:106:5\n    32:     0x5557d0595a3b - core::ops::function::FnOnce::call_once::h61865ea78467f494\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    33:     0x5557d059563e - std::sys_common::backtrace::__rust_begin_short_backtrace::h59e469e358f046f5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    34:     0x5557d0594061 - std::rt::lang_start::{{closure}}::h4a7f80e12cd8fdab\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    35:     0x5557d0ba8e7d - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    36:     0x5557d0ba8e7d - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    37:     0x5557d0ba8e7d - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    38:     0x5557d0ba8e7d - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    39:     0x5557d0ba8e7d - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    40:     0x5557d0ba8e7d - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    41:     0x5557d0ba8e7d - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    42:     0x5557d0ba8e7d - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    43:     0x5557d0ba8e7d - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    44:     0x5557d059403a - std::rt::lang_start::h5d7302b947a1e3b5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    45:     0x5557d05950ae - main\n    46:     0x7f1ff945324a - <unknown>\n    47:     0x7f1ff9453305 - __libc_start_main\n    48:     0x5557d0591a21 - _start\n    49:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\nerror: failed to run custom build command for `axlibc v0.1.0 (/ci/arceos/ulib/axlibc)`\n\nCaused by:\n  process didn't exit successfully: `/ci/arceos/target/debug/build/axlibc-dbd5b825feb4d2b2/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=ctypes.h\n\n  --- stderr\n  thread 'main' panicked at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:622:31:\n  Unable to find libclang: \"couldn't find any valid shared libraries matching: ['libclang.so', 'libclang-*.so', 'libclang.so.*', 'libclang-*.so.*'], set the `LIBCLANG_PATH` environment variable to a path where one of these files can be found (invalid: [])\"\n  stack backtrace:\n     0:     0x55bf1f887355 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55bf1f887355 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55bf1f887355 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55bf1f887355 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55bf1f8b092b - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55bf1f8b092b - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55bf1f88421f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55bf1f88712e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55bf1f88712e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55bf1f888499 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55bf1f8881dd - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55bf1f8889a3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55bf1f888884 - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:664:13\n    13:     0x55bf1f887819 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55bf1f8885b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55bf1f8aeb63 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55bf1f8af126 - core::result::unwrap_failed::hcaf97cbd304b2b7c\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/result.rs:1658:5\n    17:     0x55bf1f3407cd - core::result::Result<T,E>::expect::h4ef6e7994668b0e0\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/result.rs:1038:23\n    18:     0x55bf1f39001d - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::__static_ref_initialize::h8cc7b0a8f37675aa\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:622:13\n    19:     0x55bf1f39001d - core::ops::function::FnOnce::call_once::hb3a11ab2445e7ada\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    20:     0x55bf1f42321c - lazy_static::lazy::Lazy<T>::get::{{closure}}::ha68e7643d45ac958\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/inline_lazy.rs:31:41\n    21:     0x55bf1f30e789 - std::sync::once::Once::call_once::{{closure}}::h88ab0ad9e4fd6e4d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sync/once.rs:149:41\n    22:     0x55bf1f2976ea - std::sys::sync::once::futex::Once::call::h2d2fdc19c924df82\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys/sync/once/futex.rs:124:21\n    23:     0x55bf1f30e5af - std::sync::once::Once::call_once::ha6e5bbfa8aa1f7b0\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sync/once.rs:149:9\n    24:     0x55bf1f2d031f - lazy_static::lazy::Lazy<T>::get::hb3319b01434506c0\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/inline_lazy.rs:30:9\n    25:     0x55bf1f2d031f - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::__stability::hbbfe3dcf239420a0\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/lib.rs:135:21\n    26:     0x55bf1f2d031f - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::h2fb19f01a734af8f\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/lib.rs:137:17\n    27:     0x55bf1f2c83fb - bindgen::ensure_libclang_is_loaded::hf62ce639a78e7402\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:630:33\n    28:     0x55bf1f2c9415 - bindgen::Bindings::generate::hda06f541b8d42657\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:752:9\n    29:     0x55bf1f2c7b37 - bindgen::Builder::generate::h14539ed5aff19324\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:349:9\n    30:     0x55bf1f26d1a2 - build_script_build::main::gen_c_to_rust_bindings::h53f12436dc51c77f\n                                 at /ci/arceos/ulib/axlibc/build.rs:16:9\n    31:     0x55bf1f26ce0e - build_script_build::main::h010a4074cd99a3d8\n                                 at /ci/arceos/ulib/axlibc/build.rs:23:5\n    32:     0x55bf1f26b4eb - core::ops::function::FnOnce::call_once::h434bb47d603ac044\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    33:     0x55bf1f26ca1e - std::sys_common::backtrace::__rust_begin_short_backtrace::h7b9d326c6f95b48f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    34:     0x55bf1f26e261 - std::rt::lang_start::{{closure}}::he108d0b2c0779b34\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    35:     0x55bf1f87fc6d - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    36:     0x55bf1f87fc6d - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    37:     0x55bf1f87fc6d - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    38:     0x55bf1f87fc6d - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    39:     0x55bf1f87fc6d - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    40:     0x55bf1f87fc6d - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    41:     0x55bf1f87fc6d - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    42:     0x55bf1f87fc6d - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    43:     0x55bf1f87fc6d - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    44:     0x55bf1f26e23a - std::rt::lang_start::hec1ec07760c7723d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    45:     0x55bf1f26d2ce - main\n    46:     0x7f2fb4e1724a - <unknown>\n    47:     0x7f2fb4e17305 - __libc_start_main\n    48:     0x55bf1f26acf1 - _start\n    49:                0x0 - <unknown>\n",
                  "// pkg_name=axlibc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/ci/arceos/ulib/axlibc\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf\n   Compiling kernel_guard v0.1.1\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n[2024-09-04T00:46:50Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-04T00:46:50Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling num-traits v0.2.16\n   Compiling lock_api v0.4.10\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling axerrno v0.1.0\n   Compiling flatten_objects v0.1.0\n   Compiling arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)\n   Compiling spin v0.9.8\nerror: failed to run custom build command for `arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)`\n\nCaused by:\n  process didn't exit successfully: `/ci/arceos/target/debug/build/arceos_posix_api-96ae6b51e318bb60/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=ctypes.h\n\n  --- stderr\n  thread 'main' panicked at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:622:31:\n  Unable to find libclang: \"couldn't find any valid shared libraries matching: ['libclang.so', 'libclang-*.so', 'libclang.so.*', 'libclang-*.so.*'], set the `LIBCLANG_PATH` environment variable to a path where one of these files can be found (invalid: [])\"\n  stack backtrace:\n     0:     0x5631be0f6565 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x5631be0f6565 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x5631be0f6565 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x5631be0f6565 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x5631be11fb3b - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x5631be11fb3b - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x5631be0f342f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x5631be0f633e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x5631be0f633e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x5631be0f76a9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x5631be0f73ed - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x5631be0f7bb3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x5631be0f7a94 - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:664:13\n    13:     0x5631be0f6a29 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x5631be0f77c7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x5631be11dd73 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x5631be11e336 - core::result::unwrap_failed::hcaf97cbd304b2b7c\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/result.rs:1658:5\n    17:     0x5631bdbaec6d - core::result::Result<T,E>::expect::h4ef6e7994668b0e0\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/result.rs:1038:23\n    18:     0x5631bdbfe4bd - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::__static_ref_initialize::h8cc7b0a8f37675aa\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:622:13\n    19:     0x5631bdbfe4bd - core::ops::function::FnOnce::call_once::hb3a11ab2445e7ada\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    20:     0x5631bdc91bfc - lazy_static::lazy::Lazy<T>::get::{{closure}}::ha68e7643d45ac958\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/inline_lazy.rs:31:41\n    21:     0x5631bdb7cc29 - std::sync::once::Once::call_once::{{closure}}::h88ab0ad9e4fd6e4d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sync/once.rs:149:41\n    22:     0x5631bdb0594a - std::sys::sync::once::futex::Once::call::h2d2fdc19c924df82\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys/sync/once/futex.rs:124:21\n    23:     0x5631bdb7ca4f - std::sync::once::Once::call_once::ha6e5bbfa8aa1f7b0\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sync/once.rs:149:9\n    24:     0x5631bdb3e7bf - lazy_static::lazy::Lazy<T>::get::hb3319b01434506c0\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/inline_lazy.rs:30:9\n    25:     0x5631bdb3e7bf - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::__stability::hbbfe3dcf239420a0\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/lib.rs:135:21\n    26:     0x5631bdb3e7bf - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::h2fb19f01a734af8f\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/lib.rs:137:17\n    27:     0x5631bdb367cb - bindgen::ensure_libclang_is_loaded::hf62ce639a78e7402\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:630:33\n    28:     0x5631bdb377e5 - bindgen::Bindings::generate::hda06f541b8d42657\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:752:9\n    29:     0x5631bdb35f07 - bindgen::Builder::generate::h14539ed5aff19324\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:349:9\n    30:     0x5631bdadae4c - build_script_build::main::gen_c_to_rust_bindings::he374de2bdb37e2ec\n                                 at /ci/arceos/api/arceos_posix_api/build.rs:98:9\n    31:     0x5631bdada14e - build_script_build::main::hd464686fbfefe8d2\n                                 at /ci/arceos/api/arceos_posix_api/build.rs:106:5\n    32:     0x5631bdadba3b - core::ops::function::FnOnce::call_once::h61865ea78467f494\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    33:     0x5631bdadb63e - std::sys_common::backtrace::__rust_begin_short_backtrace::h59e469e358f046f5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    34:     0x5631bdada061 - std::rt::lang_start::{{closure}}::h4a7f80e12cd8fdab\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    35:     0x5631be0eee7d - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    36:     0x5631be0eee7d - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    37:     0x5631be0eee7d - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    38:     0x5631be0eee7d - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    39:     0x5631be0eee7d - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    40:     0x5631be0eee7d - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    41:     0x5631be0eee7d - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    42:     0x5631be0eee7d - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    43:     0x5631be0eee7d - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    44:     0x5631bdada03a - std::rt::lang_start::h5d7302b947a1e3b5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    45:     0x5631bdadb0ae - main\n    46:     0x7f9f5f10e24a - <unknown>\n    47:     0x7f9f5f10e305 - __libc_start_main\n    48:     0x5631bdad7a21 - _start\n    49:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n",
                  "// pkg_name=axlibc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/ci/arceos/ulib/axlibc\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling kspin v0.1.0\n[2024-09-04T00:46:50Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-04T00:46:50Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling num-traits v0.2.16\n   Compiling lock_api v0.4.10\n   Compiling axerrno v0.1.0\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling flatten_objects v0.1.0\n   Compiling arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n   Compiling spin v0.9.8\nerror: failed to run custom build command for `arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)`\n\nCaused by:\n  process didn't exit successfully: `/ci/arceos/target/debug/build/arceos_posix_api-96ae6b51e318bb60/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=ctypes.h\n\n  --- stderr\n  thread 'main' panicked at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:622:31:\n  Unable to find libclang: \"couldn't find any valid shared libraries matching: ['libclang.so', 'libclang-*.so', 'libclang.so.*', 'libclang-*.so.*'], set the `LIBCLANG_PATH` environment variable to a path where one of these files can be found (invalid: [])\"\n  stack backtrace:\n     0:     0x5644c23f5565 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x5644c23f5565 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x5644c23f5565 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x5644c23f5565 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x5644c241eb3b - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x5644c241eb3b - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x5644c23f242f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x5644c23f533e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x5644c23f533e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x5644c23f66a9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x5644c23f63ed - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x5644c23f6bb3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x5644c23f6a94 - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:664:13\n    13:     0x5644c23f5a29 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x5644c23f67c7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x5644c241cd73 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x5644c241d336 - core::result::unwrap_failed::hcaf97cbd304b2b7c\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/result.rs:1658:5\n    17:     0x5644c1eadc6d - core::result::Result<T,E>::expect::h4ef6e7994668b0e0\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/result.rs:1038:23\n    18:     0x5644c1efd4bd - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::__static_ref_initialize::h8cc7b0a8f37675aa\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:622:13\n    19:     0x5644c1efd4bd - core::ops::function::FnOnce::call_once::hb3a11ab2445e7ada\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    20:     0x5644c1f90bfc - lazy_static::lazy::Lazy<T>::get::{{closure}}::ha68e7643d45ac958\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/inline_lazy.rs:31:41\n    21:     0x5644c1e7bc29 - std::sync::once::Once::call_once::{{closure}}::h88ab0ad9e4fd6e4d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sync/once.rs:149:41\n    22:     0x5644c1e0494a - std::sys::sync::once::futex::Once::call::h2d2fdc19c924df82\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys/sync/once/futex.rs:124:21\n    23:     0x5644c1e7ba4f - std::sync::once::Once::call_once::ha6e5bbfa8aa1f7b0\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sync/once.rs:149:9\n    24:     0x5644c1e3d7bf - lazy_static::lazy::Lazy<T>::get::hb3319b01434506c0\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/inline_lazy.rs:30:9\n    25:     0x5644c1e3d7bf - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::__stability::hbbfe3dcf239420a0\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/lib.rs:135:21\n    26:     0x5644c1e3d7bf - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::h2fb19f01a734af8f\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/lib.rs:137:17\n    27:     0x5644c1e357cb - bindgen::ensure_libclang_is_loaded::hf62ce639a78e7402\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:630:33\n    28:     0x5644c1e367e5 - bindgen::Bindings::generate::hda06f541b8d42657\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:752:9\n    29:     0x5644c1e34f07 - bindgen::Builder::generate::h14539ed5aff19324\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:349:9\n    30:     0x5644c1dd9e4c - build_script_build::main::gen_c_to_rust_bindings::he374de2bdb37e2ec\n                                 at /ci/arceos/api/arceos_posix_api/build.rs:98:9\n    31:     0x5644c1dd914e - build_script_build::main::hd464686fbfefe8d2\n                                 at /ci/arceos/api/arceos_posix_api/build.rs:106:5\n    32:     0x5644c1ddaa3b - core::ops::function::FnOnce::call_once::h61865ea78467f494\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    33:     0x5644c1dda63e - std::sys_common::backtrace::__rust_begin_short_backtrace::h59e469e358f046f5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    34:     0x5644c1dd9061 - std::rt::lang_start::{{closure}}::h4a7f80e12cd8fdab\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    35:     0x5644c23ede7d - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    36:     0x5644c23ede7d - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    37:     0x5644c23ede7d - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    38:     0x5644c23ede7d - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    39:     0x5644c23ede7d - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    40:     0x5644c23ede7d - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    41:     0x5644c23ede7d - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    42:     0x5644c23ede7d - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    43:     0x5644c23ede7d - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    44:     0x5644c1dd903a - std::rt::lang_start::h5d7302b947a1e3b5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    45:     0x5644c1dda0ae - main\n    46:     0x7fbe51b7124a - <unknown>\n    47:     0x7fbe51b71305 - __libc_start_main\n    48:     0x5644c1dd6a21 - _start\n    49:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\n",
                  "// pkg_name=axlibc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/ci/arceos/ulib/axlibc\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/ci/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/ci/arceos/modules/axhal)\n   Compiling kspin v0.1.0\n[2024-09-04T00:46:50Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-04T00:46:50Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling num-traits v0.2.16\n   Compiling lock_api v0.4.10\n   Compiling axerrno v0.1.0\n   Compiling axlog v0.1.0 (/ci/arceos/modules/axlog)\n   Compiling flatten_objects v0.1.0\n   Compiling arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:101:27\n    |\n101 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:140:38\n    |\n140 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nwarning: unused import: `PhysAddr`\n --> modules/axhal/src/platform/aarch64_common/boot.rs:3:23\n  |\n3 | use memory_addr::{pa, PhysAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/aarch64/trap.rs:4:23\n  |\n4 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n\n   Compiling spin v0.9.8\nerror: failed to run custom build command for `arceos_posix_api v0.1.0 (/ci/arceos/api/arceos_posix_api)`\n\nCaused by:\n  process didn't exit successfully: `/ci/arceos/target/debug/build/arceos_posix_api-96ae6b51e318bb60/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=ctypes.h\n\n  --- stderr\n  thread 'main' panicked at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:622:31:\n  Unable to find libclang: \"couldn't find any valid shared libraries matching: ['libclang.so', 'libclang-*.so', 'libclang.so.*', 'libclang-*.so.*'], set the `LIBCLANG_PATH` environment variable to a path where one of these files can be found (invalid: [])\"\n  stack backtrace:\n     0:     0x55a1c7745565 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55a1c7745565 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55a1c7745565 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55a1c7745565 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55a1c776eb3b - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55a1c776eb3b - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55a1c774242f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55a1c774533e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55a1c774533e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55a1c77466a9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55a1c77463ed - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55a1c7746bb3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55a1c7746a94 - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:664:13\n    13:     0x55a1c7745a29 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55a1c77467c7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55a1c776cd73 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55a1c776d336 - core::result::unwrap_failed::hcaf97cbd304b2b7c\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/result.rs:1658:5\n    17:     0x55a1c71fdc6d - core::result::Result<T,E>::expect::h4ef6e7994668b0e0\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/result.rs:1038:23\n    18:     0x55a1c724d4bd - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::__static_ref_initialize::h8cc7b0a8f37675aa\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:622:13\n    19:     0x55a1c724d4bd - core::ops::function::FnOnce::call_once::hb3a11ab2445e7ada\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    20:     0x55a1c72e0bfc - lazy_static::lazy::Lazy<T>::get::{{closure}}::ha68e7643d45ac958\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/inline_lazy.rs:31:41\n    21:     0x55a1c71cbc29 - std::sync::once::Once::call_once::{{closure}}::h88ab0ad9e4fd6e4d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sync/once.rs:149:41\n    22:     0x55a1c715494a - std::sys::sync::once::futex::Once::call::h2d2fdc19c924df82\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys/sync/once/futex.rs:124:21\n    23:     0x55a1c71cba4f - std::sync::once::Once::call_once::ha6e5bbfa8aa1f7b0\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sync/once.rs:149:9\n    24:     0x55a1c718d7bf - lazy_static::lazy::Lazy<T>::get::hb3319b01434506c0\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/inline_lazy.rs:30:9\n    25:     0x55a1c718d7bf - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::__stability::hbbfe3dcf239420a0\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/lib.rs:135:21\n    26:     0x55a1c718d7bf - <bindgen::ensure_libclang_is_loaded::LIBCLANG as core::ops::deref::Deref>::deref::h2fb19f01a734af8f\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/lib.rs:137:17\n    27:     0x55a1c71857cb - bindgen::ensure_libclang_is_loaded::hf62ce639a78e7402\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:630:33\n    28:     0x55a1c71867e5 - bindgen::Bindings::generate::hda06f541b8d42657\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:752:9\n    29:     0x55a1c7184f07 - bindgen::Builder::generate::h14539ed5aff19324\n                                 at /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bindgen-0.69.4/lib.rs:349:9\n    30:     0x55a1c7129e4c - build_script_build::main::gen_c_to_rust_bindings::he374de2bdb37e2ec\n                                 at /ci/arceos/api/arceos_posix_api/build.rs:98:9\n    31:     0x55a1c712914e - build_script_build::main::hd464686fbfefe8d2\n                                 at /ci/arceos/api/arceos_posix_api/build.rs:106:5\n    32:     0x55a1c712aa3b - core::ops::function::FnOnce::call_once::h61865ea78467f494\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    33:     0x55a1c712a63e - std::sys_common::backtrace::__rust_begin_short_backtrace::h59e469e358f046f5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    34:     0x55a1c7129061 - std::rt::lang_start::{{closure}}::h4a7f80e12cd8fdab\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    35:     0x55a1c773de7d - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    36:     0x55a1c773de7d - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    37:     0x55a1c773de7d - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    38:     0x55a1c773de7d - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    39:     0x55a1c773de7d - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    40:     0x55a1c773de7d - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    41:     0x55a1c773de7d - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    42:     0x55a1c773de7d - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    43:     0x55a1c773de7d - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    44:     0x55a1c712903a - std::rt::lang_start::h5d7302b947a1e3b5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    45:     0x55a1c712a0ae - main\n    46:     0x7fb2f4cfb24a - <unknown>\n    47:     0x7fb2f4cfb305 - __libc_start_main\n    48:     0x55a1c7126a21 - _start\n    49:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\nFor more information about this error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 2 warnings\nerror: could not compile `axhal` (lib) due to 5 previous errors; 2 warnings emitted\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/x86_64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "Not supported to display yet.",
              "count": 1,
              "kinds": {
                "Lockbud(Possibly)": [
                  "[2024-09-04T00:46:50Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-04T00:46:50Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axfs",
          "count": 3,
          "raw_reports": [
            {
              "file": "modules/axfs/src/api/file.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/api/file.rs:27:5\n   |\n27 | /     pub const fn new() -> Self {\n28 | |         OpenOptions(fops::OpenOptions::new())\n29 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl Default for OpenOptions {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
                ]
              }
            },
            {
              "file": "modules/axfs/src/fops.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/fops.rs:54:5\n   |\n54 | /     pub const fn new() -> Self {\n55 | |         Self {\n56 | |             // generic\n57 | |             read: false,\n...  |\n66 | |         }\n67 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n52 + impl Default for OpenOptions {\n53 +     fn default() -> Self {\n54 +         Self::new()\n55 +     }\n56 + }\n   |\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/x86_64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axhal",
          "count": 2,
          "raw_reports": [
            {
              "file": "modules/axhal/src/arch/x86_64/context.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: you should consider adding a `Default` implementation for `TaskContext`\n   --> modules/axhal/src/arch/x86_64/context.rs:148:5\n    |\n148 | /     pub const fn new() -> Self {\n149 | |         Self {\n150 | |             kstack_top: va!(0),\n151 | |             rsp: 0,\n...   |\n155 | |         }\n156 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n146 + impl Default for TaskContext {\n147 +     fn default() -> Self {\n148 +         Self::new()\n149 +     }\n150 + }\n    |\n\n"
                ]
              }
            },
            {
              "file": "modules/axhal/src/arch/x86_64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axnet",
          "count": 2,
          "raw_reports": [
            {
              "file": "modules/axhal/src/arch/x86_64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            },
            {
              "file": "modules/axnet/src/smoltcp_impl/tcp.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: you should consider adding a `Default` implementation for `TcpSocket`\n  --> modules/axnet/src/smoltcp_impl/tcp.rs:50:5\n   |\n50 | /     pub const fn new() -> Self {\n51 | |         Self {\n52 | |             state: AtomicU8::new(STATE_CLOSED),\n53 | |             handle: UnsafeCell::new(None),\n...  |\n57 | |         }\n58 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n48 + impl Default for TcpSocket {\n49 +     fn default() -> Self {\n50 +         Self::new()\n51 +     }\n52 + }\n   |\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "arceos_api",
          "count": 1,
          "raw_reports": [
            {
              "file": "modules/axhal/src/arch/x86_64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axalloc",
          "count": 1,
          "raw_reports": [
            {
              "file": "modules/axalloc/src/lib.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: you should consider adding a `Default` implementation for `GlobalAllocator`\n  --> modules/axalloc/src/lib.rs:57:5\n   |\n57 | /     pub const fn new() -> Self {\n58 | |         Self {\n59 | |             balloc: SpinNoIrq::new(DefaultByteAllocator::new()),\n60 | |             palloc: SpinNoIrq::new(BitmapPageAllocator::new()),\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n55 + impl Default for GlobalAllocator {\n56 +     fn default() -> Self {\n57 +         Self::new()\n58 +     }\n59 + }\n   |\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axdisplay",
          "count": 1,
          "raw_reports": [
            {
              "file": "modules/axhal/src/arch/x86_64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axdma",
          "count": 1,
          "raw_reports": [
            {
              "file": "modules/axhal/src/arch/x86_64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axdriver",
          "count": 1,
          "raw_reports": [
            {
              "file": "modules/axhal/src/arch/x86_64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axfeat",
          "count": 1,
          "raw_reports": [
            {
              "file": "modules/axhal/src/arch/x86_64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axmm",
          "count": 1,
          "raw_reports": [
            {
              "file": "modules/axhal/src/arch/x86_64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axruntime",
          "count": 1,
          "raw_reports": [
            {
              "file": "modules/axhal/src/arch/x86_64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axstd",
          "count": 1,
          "raw_reports": [
            {
              "file": "modules/axhal/src/arch/x86_64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axsync",
          "count": 1,
          "raw_reports": [
            {
              "file": "modules/axhal/src/arch/x86_64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        },
        {
          "user": "arceos-org",
          "repo": "arceos",
          "package": "axtask",
          "count": 1,
          "raw_reports": [
            {
              "file": "modules/axhal/src/arch/x86_64/trap.rs",
              "count": 1,
              "kinds": {
                "Clippy(Warn)": [
                  "warning: unused import: `VirtAddr`\n --> modules/axhal/src/arch/x86_64/trap.rs:1:23\n  |\n1 | use memory_addr::{va, VirtAddr};\n  |                       ^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
                ]
              }
            }
          ]
        }
      ]
    }
  }
]
