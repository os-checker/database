{"data":[{"user":"Byte-OS","repo":"polyhal","pkg":"polyhal","count":14,"raw_reports":[{"file":"src/components/pagetable/aarch64.rs","count":4,"kinds":{"Clippy(Warn)":["warning: operator precedence can trip the unwary\n   --> src/components/pagetable/aarch64.rs:206:10\n    |\n206 |         (self.0 >> 9 * n) & 0x1ff\n    |          ^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `self.0 >> (9 * n)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n    = note: `#[warn(clippy::precedence)]` on by default\n\n","warning: casting to the same type is unnecessary (`usize` -> `usize`)\n  --> src/components/pagetable/aarch64.rs:17:32\n   |\n17 |         self.0 = (ppn << 10) | flags.bits() as usize;\n   |                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `flags.bits()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n   = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n","warning: casting to the same type is unnecessary (`usize` -> `usize`)\n  --> src/components/pagetable/aarch64.rs:42:30\n   |\n42 |         Self(ppn.to_addr() | flags.bits() as usize)\n   |                              ^^^^^^^^^^^^^^^^^^^^^ help: try: `flags.bits()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/components/pagetable/aarch64.rs:67:1\n   |\n67 | impl Into<MappingFlags> for PTEFlags {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<components::pagetable::aarch64::PTEFlags>`\n   |\n67 ~ impl From<PTEFlags> for MappingFlags {\n68 ~     fn from(val: PTEFlags) -> Self {\n69 ~         if val.is_empty() {\n70 |             return MappingFlags::empty();\n ...\n73 | \n74 ~         if !val.contains(PTEFlags::AP_RO) {\n75 |             flags |= MappingFlags::W;\n76 |         }\n77 ~         if !val.contains(PTEFlags::UXN) || !val.contains(PTEFlags::PXN) {\n78 |             flags |= MappingFlags::X;\n79 |         }\n80 ~         if val.contains(PTEFlags::AP_EL0) {\n81 |             flags |= MappingFlags::U;\n82 |         }\n83 ~         if val.contains(PTEFlags::AF) {\n84 |             flags |= MappingFlags::A;\n85 |         }\n86 ~         if !val.contains(PTEFlags::NG) {\n   |\n\n"]}},{"file":"src/components/pagetable/mod.rs","count":3,"kinds":{"Clippy(Warn)":["warning: name `PTE` contains a capitalized acronym\n  --> src/components/pagetable/mod.rs:18:19\n   |\n18 | pub(crate) struct PTE(pub usize);\n   |                   ^^^ help: consider making the acronym lowercase, except the initial letter: `Pte`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n","warning: `assert!(true)` will be optimized out by the compiler\n  --> src/components/pagetable/mod.rs:52:9\n   |\n52 |         assert!(Self::PAGE_LEVEL >= 3, \"Just level >= 3 supported currently\");\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: remove it\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n   = note: `#[warn(clippy::assertions_on_constants)]` on by default\n\n","warning: `assert!(true)` will be optimized out by the compiler\n   --> src/components/pagetable/mod.rs:105:9\n    |\n105 |         assert!(Self::PAGE_LEVEL >= 3, \"Just level >= 3 supported currently\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove it\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n\n"]}},{"file":"src/components/kcontext/aarch64.rs","count":2,"kinds":{"Clippy(Warn)":["warning: unsafe function's docs miss `# Safety` section\n   --> src/components/kcontext/aarch64.rs:127:1\n    |\n127 | pub unsafe extern \"C\" fn context_switch(from: *mut KContext, to: *const KContext) {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n","warning: unsafe function's docs miss `# Safety` section\n   --> src/components/kcontext/aarch64.rs:143:1\n    |\n143 | / pub unsafe extern \"C\" fn context_switch_pt(\n144 | |     from: *mut KContext,\n145 | |     to: *const KContext,\n146 | |     pt_token: PageTable,\n147 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:31:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:31:59Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/components/arch/aarch64/psci.rs","count":1,"kinds":{"Clippy(Warn)":["warning: empty `loop {}` wastes CPU cycles\n   --> src/components/arch/aarch64/psci.rs:98:5\n    |\n98  | /     loop {\n99  | |         // crate::arch::halt();\n100 | |     }\n    | |_____^\n    |\n    = help: you should either use `panic!()` or add a call pausing or sleeping the thread to the loop body\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_loop\n    = note: `#[warn(clippy::empty_loop)]` on by default\n\n"]}},{"file":"src/components/boot/mod.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Byte-OS/polyhal/src/components/boot/mod.rs (original lines from 43 to 43)\n-/// \n+///\n"]}},{"file":"src/components/common.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Byte-OS/polyhal/src/components/common.rs (original lines from 73 to 74)\n-/// \n-/// Display information when booting \n+///\n+/// Display information when booting\n"]}},{"file":"src/utils/mutex_no_irq.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unsafe function's docs miss `# Safety` section\n  --> src/utils/mutex_no_irq.rs:59:5\n   |\n59 |     pub unsafe fn force_unlock(&self) {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axnet","count":10,"raw_reports":[{"file":"modules/axhal/src/platform/aarch64_common/boot.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n","error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/arceos-org/arceos/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 663 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (190 crate dependencies)\nCrate:     shlex\nVersion:   1.1.0\nTitle:     Multiple issues involving quote API\nDate:      2024-01-21\nID:        RUSTSEC-2024-0006\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0006\nSolution:  Upgrade to >=1.3.0\nDependency tree:\nshlex 1.1.0\n└── bindgen 0.69.4\n    ├── axlibc 0.1.0\n    └── arceos_posix_api 0.1.0\n        └── axlibc 0.1.0\n\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.6\n    └── defmt 0.3.5\n        └── smoltcp 0.10.0\n            ├── ixgbe-driver 0.1.0\n            │   └── axdriver_net 0.1.0\n            │       ├── axnet 0.1.0\n            │       │   ├── axruntime 0.1.0\n            │       │   │   ├── axfeat 0.1.0\n            │       │   │   │   ├── axstd 0.1.0\n            │       │   │   │   │   ├── arceos-shell 0.1.0\n            │       │   │   │   │   ├── arceos-httpserver 0.1.0\n            │       │   │   │   │   ├── arceos-httpclient 0.1.0\n            │       │   │   │   │   └── arceos-helloworld 0.1.0\n            │       │   │   │   ├── axlibc 0.1.0\n            │       │   │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   │   │   └── axlibc 0.1.0\n            │       │   │   │   └── arceos_api 0.1.0\n            │       │   │   │       └── axstd 0.1.0\n            │       │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   └── arceos_api 0.1.0\n            │       │   ├── axfeat 0.1.0\n            │       │   ├── arceos_posix_api 0.1.0\n            │       │   └── arceos_api 0.1.0\n            │       ├── axdriver_virtio 0.1.0\n            │       │   └── axdriver 0.1.0\n            │       │       ├── axruntime 0.1.0\n            │       │       ├── axnet 0.1.0\n            │       │       ├── axfs 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   ├── arceos_posix_api 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       ├── axfeat 0.1.0\n            │       │       ├── axdisplay 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       └── arceos_api 0.1.0\n            │       └── axdriver 0.1.0\n            └── axnet 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   0.1.11\nWarning:   yanked\nDependency tree:\natomic-polyfill 0.1.11\n└── heapless 0.7.16\n    └── smoltcp 0.10.0\n        ├── ixgbe-driver 0.1.0\n        │   └── axdriver_net 0.1.0\n        │       ├── axnet 0.1.0\n        │       │   ├── axruntime 0.1.0\n        │       │   │   ├── axfeat 0.1.0\n        │       │   │   │   ├── axstd 0.1.0\n        │       │   │   │   │   ├── arceos-shell 0.1.0\n        │       │   │   │   │   ├── arceos-httpserver 0.1.0\n        │       │   │   │   │   ├── arceos-httpclient 0.1.0\n        │       │   │   │   │   └── arceos-helloworld 0.1.0\n        │       │   │   │   ├── axlibc 0.1.0\n        │       │   │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   │   └── axlibc 0.1.0\n        │       │   │   │   └── arceos_api 0.1.0\n        │       │   │   │       └── axstd 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axdriver_virtio 0.1.0\n        │       │   └── axdriver 0.1.0\n        │       │       ├── axruntime 0.1.0\n        │       │       ├── axnet 0.1.0\n        │       │       ├── axfs 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   ├── arceos_posix_api 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       ├── axfeat 0.1.0\n        │       │       ├── axdisplay 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       └── arceos_api 0.1.0\n        │       └── axdriver 0.1.0\n        └── axnet 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 663,\n    \"last-commit\": \"acb7ce45817b13dd34cb32540ff18be4e1f3ba09\",\n    \"last-updated\": \"2024-10-09T00:13:59+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 190\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0006\",\n          \"package\": \"shlex\",\n          \"title\": \"Multiple issues involving quote API\",\n          \"description\": \"## Issue 1: Failure to quote characters\\n\\nAffected versions of this crate allowed the bytes `{` and `\\\\xa0` to appear\\nunquoted and unescaped in command arguments.\\n\\nIf the output of `quote` or `join` is passed to a shell, then what should be a\\nsingle command argument could be interpreted as multiple arguments.\\n\\nThis does not *directly* allow arbitrary command execution (you can't inject a\\ncommand substitution or similar).  But depending on the command you're running,\\nbeing able to inject multiple arguments where only one is expected could lead\\nto undesired consequences, potentially including arbitrary command execution.\\n\\nThe flaw was corrected in version 1.2.1 by escaping additional characters.\\nUpdating to 1.3.0 is recommended, but 1.2.1 offers a more minimal fix if\\ndesired.\\n\\nWorkaround: Check for the bytes `{` and `\\\\xa0` in `quote`/`join` input or\\noutput.\\n\\n(Note: `{` is problematic because it is used for glob expansion.  `\\\\xa0` is\\nproblematic because it's treated as a word separator in [specific\\nenvironments][solved-xa0].)\\n\\n## Issue 2: Dangerous API w.r.t. nul bytes\\n\\nVersion 1.3.0 deprecates the `quote` and `join` APIs in favor of `try_quote`\\nand `try_join`, which behave the same except that they have `Result` return\\ntype, returning `Err` if the input contains nul bytes.\\n\\nStrings containing nul bytes generally cannot be used in Unix command arguments\\nor environment variables, and most shells cannot handle nul bytes even\\ninternally.  If you try to pass one anyway, then the results might be\\nsecurity-sensitive in uncommon scenarios.  [More details here.][nul-bytes]\\n\\nDue to the low severity, the behavior of the original `quote` and `join` APIs\\nhas not changed; they continue to allow nuls.\\n\\nWorkaround: Manually check for nul bytes in `quote`/`join` input or output.\\n\\n## Issue 3: Lack of documentation for interactive shell risks\\n\\nThe `quote` family of functions does not and cannot escape control characters.\\nWith non-interactive shells this is perfectly safe, as control characters have\\nno special effect.  But if you writing directly to the standard input of an\\ninteractive shell (or through a pty), then control characters [can cause\\nmisbehavior including arbitrary command injection.][control-characters]\\n\\nThis is essentially unfixable, and has not been patched.  But as of version\\n1.3.0, documentation has been added.\\n\\nFuture versions of `shlex` may add API variants that avoid the issue at the\\ncost of reduced portability.\\n\\n[solved-xa0]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#solved-xa0\\n[nul-bytes]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#nul-bytes\\n[control-characters]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#control-characters-interactive-contexts-only\",\n          \"date\": \"2024-01-21\",\n          \"aliases\": [\n            \"GHSA-r7qv-8r2h-pg27\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"code-execution\",\n            \"file-disclosure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/comex/rust-shlex/security/advisories/GHSA-r7qv-8r2h-pg27\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=1.3.0\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"shlex::bytes::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::bytes::quote\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::quote\": [\n              \"<1.2.1\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"shlex\",\n          \"version\": \"1.1.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"43b2853a4d09f215c24cc5489c992ce46052d359b5109343cbafbf26bc62f8a3\",\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.36\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"0.1.11\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e3ff7eb3f316534d83a8a2c3d1674ace8a5a71198eba31e2e2b597833f699b28\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.1.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axnet, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axnet\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.0\n   Compiling serde v1.0.204\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling semver v1.0.18\n   Compiling percpu v0.1.3\n   Compiling toml_edit v0.22.20\n   Compiling autocfg v1.1.0\n   Compiling lock_api v0.4.10\n   Compiling rustc_version v0.4.0\n   Compiling heapless v0.7.16\n   Compiling axerrno v0.1.0\n    Checking spin v0.9.8\n    Checking hash32 v0.2.1\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver)\n    Checking stable_deref_trait v1.2.0\n    Checking axdriver_net v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking axio v0.1.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling zerocopy-derive v0.7.35\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axnet, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axnet\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling lock_api v0.4.10\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling zerocopy v0.7.35\n   Compiling axerrno v0.1.0\n   Compiling heapless v0.7.16\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling hash32 v0.2.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n   Compiling spin v0.9.8\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/platform/aarch64_common/pl011.rs","count":1,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"src/smoltcp_impl/mod.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/arceos-org/arceos/modules/axnet/src/smoltcp_impl/mod.rs (original lines from 191 to 192)\n-    type RxToken<'a> = AxNetRxToken<'a> where Self: 'a;\n-    type TxToken<'a> = AxNetTxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = AxNetRxToken<'a>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = AxNetTxToken<'a>\n+    where\n+        Self: 'a;\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"arceos_api","count":9,"raw_reports":[{"file":"modules/axhal/src/platform/aarch64_common/boot.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n","error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/arceos-org/arceos/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 663 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (190 crate dependencies)\nCrate:     shlex\nVersion:   1.1.0\nTitle:     Multiple issues involving quote API\nDate:      2024-01-21\nID:        RUSTSEC-2024-0006\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0006\nSolution:  Upgrade to >=1.3.0\nDependency tree:\nshlex 1.1.0\n└── bindgen 0.69.4\n    ├── axlibc 0.1.0\n    └── arceos_posix_api 0.1.0\n        └── axlibc 0.1.0\n\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.6\n    └── defmt 0.3.5\n        └── smoltcp 0.10.0\n            ├── ixgbe-driver 0.1.0\n            │   └── axdriver_net 0.1.0\n            │       ├── axnet 0.1.0\n            │       │   ├── axruntime 0.1.0\n            │       │   │   ├── axfeat 0.1.0\n            │       │   │   │   ├── axstd 0.1.0\n            │       │   │   │   │   ├── arceos-shell 0.1.0\n            │       │   │   │   │   ├── arceos-httpserver 0.1.0\n            │       │   │   │   │   ├── arceos-httpclient 0.1.0\n            │       │   │   │   │   └── arceos-helloworld 0.1.0\n            │       │   │   │   ├── axlibc 0.1.0\n            │       │   │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   │   │   └── axlibc 0.1.0\n            │       │   │   │   └── arceos_api 0.1.0\n            │       │   │   │       └── axstd 0.1.0\n            │       │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   └── arceos_api 0.1.0\n            │       │   ├── axfeat 0.1.0\n            │       │   ├── arceos_posix_api 0.1.0\n            │       │   └── arceos_api 0.1.0\n            │       ├── axdriver_virtio 0.1.0\n            │       │   └── axdriver 0.1.0\n            │       │       ├── axruntime 0.1.0\n            │       │       ├── axnet 0.1.0\n            │       │       ├── axfs 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   ├── arceos_posix_api 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       ├── axfeat 0.1.0\n            │       │       ├── axdisplay 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       └── arceos_api 0.1.0\n            │       └── axdriver 0.1.0\n            └── axnet 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   0.1.11\nWarning:   yanked\nDependency tree:\natomic-polyfill 0.1.11\n└── heapless 0.7.16\n    └── smoltcp 0.10.0\n        ├── ixgbe-driver 0.1.0\n        │   └── axdriver_net 0.1.0\n        │       ├── axnet 0.1.0\n        │       │   ├── axruntime 0.1.0\n        │       │   │   ├── axfeat 0.1.0\n        │       │   │   │   ├── axstd 0.1.0\n        │       │   │   │   │   ├── arceos-shell 0.1.0\n        │       │   │   │   │   ├── arceos-httpserver 0.1.0\n        │       │   │   │   │   ├── arceos-httpclient 0.1.0\n        │       │   │   │   │   └── arceos-helloworld 0.1.0\n        │       │   │   │   ├── axlibc 0.1.0\n        │       │   │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   │   └── axlibc 0.1.0\n        │       │   │   │   └── arceos_api 0.1.0\n        │       │   │   │       └── axstd 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axdriver_virtio 0.1.0\n        │       │   └── axdriver 0.1.0\n        │       │       ├── axruntime 0.1.0\n        │       │       ├── axnet 0.1.0\n        │       │       ├── axfs 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   ├── arceos_posix_api 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       ├── axfeat 0.1.0\n        │       │       ├── axdisplay 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       └── arceos_api 0.1.0\n        │       └── axdriver 0.1.0\n        └── axnet 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 663,\n    \"last-commit\": \"acb7ce45817b13dd34cb32540ff18be4e1f3ba09\",\n    \"last-updated\": \"2024-10-09T00:13:59+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 190\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0006\",\n          \"package\": \"shlex\",\n          \"title\": \"Multiple issues involving quote API\",\n          \"description\": \"## Issue 1: Failure to quote characters\\n\\nAffected versions of this crate allowed the bytes `{` and `\\\\xa0` to appear\\nunquoted and unescaped in command arguments.\\n\\nIf the output of `quote` or `join` is passed to a shell, then what should be a\\nsingle command argument could be interpreted as multiple arguments.\\n\\nThis does not *directly* allow arbitrary command execution (you can't inject a\\ncommand substitution or similar).  But depending on the command you're running,\\nbeing able to inject multiple arguments where only one is expected could lead\\nto undesired consequences, potentially including arbitrary command execution.\\n\\nThe flaw was corrected in version 1.2.1 by escaping additional characters.\\nUpdating to 1.3.0 is recommended, but 1.2.1 offers a more minimal fix if\\ndesired.\\n\\nWorkaround: Check for the bytes `{` and `\\\\xa0` in `quote`/`join` input or\\noutput.\\n\\n(Note: `{` is problematic because it is used for glob expansion.  `\\\\xa0` is\\nproblematic because it's treated as a word separator in [specific\\nenvironments][solved-xa0].)\\n\\n## Issue 2: Dangerous API w.r.t. nul bytes\\n\\nVersion 1.3.0 deprecates the `quote` and `join` APIs in favor of `try_quote`\\nand `try_join`, which behave the same except that they have `Result` return\\ntype, returning `Err` if the input contains nul bytes.\\n\\nStrings containing nul bytes generally cannot be used in Unix command arguments\\nor environment variables, and most shells cannot handle nul bytes even\\ninternally.  If you try to pass one anyway, then the results might be\\nsecurity-sensitive in uncommon scenarios.  [More details here.][nul-bytes]\\n\\nDue to the low severity, the behavior of the original `quote` and `join` APIs\\nhas not changed; they continue to allow nuls.\\n\\nWorkaround: Manually check for nul bytes in `quote`/`join` input or output.\\n\\n## Issue 3: Lack of documentation for interactive shell risks\\n\\nThe `quote` family of functions does not and cannot escape control characters.\\nWith non-interactive shells this is perfectly safe, as control characters have\\nno special effect.  But if you writing directly to the standard input of an\\ninteractive shell (or through a pty), then control characters [can cause\\nmisbehavior including arbitrary command injection.][control-characters]\\n\\nThis is essentially unfixable, and has not been patched.  But as of version\\n1.3.0, documentation has been added.\\n\\nFuture versions of `shlex` may add API variants that avoid the issue at the\\ncost of reduced portability.\\n\\n[solved-xa0]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#solved-xa0\\n[nul-bytes]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#nul-bytes\\n[control-characters]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#control-characters-interactive-contexts-only\",\n          \"date\": \"2024-01-21\",\n          \"aliases\": [\n            \"GHSA-r7qv-8r2h-pg27\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"code-execution\",\n            \"file-disclosure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/comex/rust-shlex/security/advisories/GHSA-r7qv-8r2h-pg27\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=1.3.0\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"shlex::bytes::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::bytes::quote\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::quote\": [\n              \"<1.2.1\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"shlex\",\n          \"version\": \"1.1.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"43b2853a4d09f215c24cc5489c992ce46052d359b5109343cbafbf26bc62f8a3\",\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.36\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"0.1.11\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e3ff7eb3f316534d83a8a2c3d1674ace8a5a71198eba31e2e2b597833f699b28\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.1.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=arceos_api, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/api/arceos_api\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\n   Compiling percpu v0.1.3\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.20\n   Compiling autocfg v1.1.0\n    Checking bitflags v2.6.0\n    Checking memory_addr v0.3.1\n   Compiling num-traits v0.2.16\n    Checking page_table_entry v0.4.0\n    Checking dw_apb_uart v0.1.0\n    Checking arm_gicv2 v0.1.0\n    Checking arm_pl011 v0.1.0\n    Checking static_assertions v1.1.0\n    Checking lazyinit v0.2.1\n    Checking int_ratio v0.1.0\n    Checking handler_table v0.1.1\n   Compiling axerrno v0.1.0\n    Checking axio v0.1.0\n    Checking chrono v0.4.38\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=arceos_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/api/arceos_api\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling tock-registers v0.8.1\n   Compiling cfg-if v1.0.0\n   Compiling log v0.4.21\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling bitflags v2.6.0\n   Compiling kernel_guard v0.1.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling kspin v0.1.0\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling memory_addr v0.3.1\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling arm_pl011 v0.1.0\n   Compiling arm_gicv2 v0.1.0\n   Compiling dw_apb_uart v0.1.0\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling lazyinit v0.2.1\n   Compiling int_ratio v0.1.0\n   Compiling static_assertions v1.1.0\n   Compiling handler_table v0.1.1\n   Compiling num-traits v0.2.16\n   Compiling axerrno v0.1.0\n   Compiling axio v0.1.0\n   Compiling chrono v0.4.38\n   Compiling page_table_entry v0.4.0\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/platform/aarch64_common/pl011.rs","count":1,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"arceos_posix_api","count":9,"raw_reports":[{"file":"modules/axhal/src/platform/aarch64_common/boot.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n","error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/arceos-org/arceos/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 663 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (190 crate dependencies)\nCrate:     shlex\nVersion:   1.1.0\nTitle:     Multiple issues involving quote API\nDate:      2024-01-21\nID:        RUSTSEC-2024-0006\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0006\nSolution:  Upgrade to >=1.3.0\nDependency tree:\nshlex 1.1.0\n└── bindgen 0.69.4\n    ├── axlibc 0.1.0\n    └── arceos_posix_api 0.1.0\n        └── axlibc 0.1.0\n\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.6\n    └── defmt 0.3.5\n        └── smoltcp 0.10.0\n            ├── ixgbe-driver 0.1.0\n            │   └── axdriver_net 0.1.0\n            │       ├── axnet 0.1.0\n            │       │   ├── axruntime 0.1.0\n            │       │   │   ├── axfeat 0.1.0\n            │       │   │   │   ├── axstd 0.1.0\n            │       │   │   │   │   ├── arceos-shell 0.1.0\n            │       │   │   │   │   ├── arceos-httpserver 0.1.0\n            │       │   │   │   │   ├── arceos-httpclient 0.1.0\n            │       │   │   │   │   └── arceos-helloworld 0.1.0\n            │       │   │   │   ├── axlibc 0.1.0\n            │       │   │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   │   │   └── axlibc 0.1.0\n            │       │   │   │   └── arceos_api 0.1.0\n            │       │   │   │       └── axstd 0.1.0\n            │       │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   └── arceos_api 0.1.0\n            │       │   ├── axfeat 0.1.0\n            │       │   ├── arceos_posix_api 0.1.0\n            │       │   └── arceos_api 0.1.0\n            │       ├── axdriver_virtio 0.1.0\n            │       │   └── axdriver 0.1.0\n            │       │       ├── axruntime 0.1.0\n            │       │       ├── axnet 0.1.0\n            │       │       ├── axfs 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   ├── arceos_posix_api 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       ├── axfeat 0.1.0\n            │       │       ├── axdisplay 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       └── arceos_api 0.1.0\n            │       └── axdriver 0.1.0\n            └── axnet 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   0.1.11\nWarning:   yanked\nDependency tree:\natomic-polyfill 0.1.11\n└── heapless 0.7.16\n    └── smoltcp 0.10.0\n        ├── ixgbe-driver 0.1.0\n        │   └── axdriver_net 0.1.0\n        │       ├── axnet 0.1.0\n        │       │   ├── axruntime 0.1.0\n        │       │   │   ├── axfeat 0.1.0\n        │       │   │   │   ├── axstd 0.1.0\n        │       │   │   │   │   ├── arceos-shell 0.1.0\n        │       │   │   │   │   ├── arceos-httpserver 0.1.0\n        │       │   │   │   │   ├── arceos-httpclient 0.1.0\n        │       │   │   │   │   └── arceos-helloworld 0.1.0\n        │       │   │   │   ├── axlibc 0.1.0\n        │       │   │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   │   └── axlibc 0.1.0\n        │       │   │   │   └── arceos_api 0.1.0\n        │       │   │   │       └── axstd 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axdriver_virtio 0.1.0\n        │       │   └── axdriver 0.1.0\n        │       │       ├── axruntime 0.1.0\n        │       │       ├── axnet 0.1.0\n        │       │       ├── axfs 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   ├── arceos_posix_api 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       ├── axfeat 0.1.0\n        │       │       ├── axdisplay 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       └── arceos_api 0.1.0\n        │       └── axdriver 0.1.0\n        └── axnet 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 663,\n    \"last-commit\": \"acb7ce45817b13dd34cb32540ff18be4e1f3ba09\",\n    \"last-updated\": \"2024-10-09T00:13:59+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 190\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0006\",\n          \"package\": \"shlex\",\n          \"title\": \"Multiple issues involving quote API\",\n          \"description\": \"## Issue 1: Failure to quote characters\\n\\nAffected versions of this crate allowed the bytes `{` and `\\\\xa0` to appear\\nunquoted and unescaped in command arguments.\\n\\nIf the output of `quote` or `join` is passed to a shell, then what should be a\\nsingle command argument could be interpreted as multiple arguments.\\n\\nThis does not *directly* allow arbitrary command execution (you can't inject a\\ncommand substitution or similar).  But depending on the command you're running,\\nbeing able to inject multiple arguments where only one is expected could lead\\nto undesired consequences, potentially including arbitrary command execution.\\n\\nThe flaw was corrected in version 1.2.1 by escaping additional characters.\\nUpdating to 1.3.0 is recommended, but 1.2.1 offers a more minimal fix if\\ndesired.\\n\\nWorkaround: Check for the bytes `{` and `\\\\xa0` in `quote`/`join` input or\\noutput.\\n\\n(Note: `{` is problematic because it is used for glob expansion.  `\\\\xa0` is\\nproblematic because it's treated as a word separator in [specific\\nenvironments][solved-xa0].)\\n\\n## Issue 2: Dangerous API w.r.t. nul bytes\\n\\nVersion 1.3.0 deprecates the `quote` and `join` APIs in favor of `try_quote`\\nand `try_join`, which behave the same except that they have `Result` return\\ntype, returning `Err` if the input contains nul bytes.\\n\\nStrings containing nul bytes generally cannot be used in Unix command arguments\\nor environment variables, and most shells cannot handle nul bytes even\\ninternally.  If you try to pass one anyway, then the results might be\\nsecurity-sensitive in uncommon scenarios.  [More details here.][nul-bytes]\\n\\nDue to the low severity, the behavior of the original `quote` and `join` APIs\\nhas not changed; they continue to allow nuls.\\n\\nWorkaround: Manually check for nul bytes in `quote`/`join` input or output.\\n\\n## Issue 3: Lack of documentation for interactive shell risks\\n\\nThe `quote` family of functions does not and cannot escape control characters.\\nWith non-interactive shells this is perfectly safe, as control characters have\\nno special effect.  But if you writing directly to the standard input of an\\ninteractive shell (or through a pty), then control characters [can cause\\nmisbehavior including arbitrary command injection.][control-characters]\\n\\nThis is essentially unfixable, and has not been patched.  But as of version\\n1.3.0, documentation has been added.\\n\\nFuture versions of `shlex` may add API variants that avoid the issue at the\\ncost of reduced portability.\\n\\n[solved-xa0]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#solved-xa0\\n[nul-bytes]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#nul-bytes\\n[control-characters]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#control-characters-interactive-contexts-only\",\n          \"date\": \"2024-01-21\",\n          \"aliases\": [\n            \"GHSA-r7qv-8r2h-pg27\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"code-execution\",\n            \"file-disclosure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/comex/rust-shlex/security/advisories/GHSA-r7qv-8r2h-pg27\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=1.3.0\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"shlex::bytes::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::bytes::quote\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::quote\": [\n              \"<1.2.1\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"shlex\",\n          \"version\": \"1.1.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"43b2853a4d09f215c24cc5489c992ce46052d359b5109343cbafbf26bc62f8a3\",\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.36\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"0.1.11\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e3ff7eb3f316534d83a8a2c3d1674ace8a5a71198eba31e2e2b597833f699b28\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.1.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=arceos_posix_api, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/api/arceos_posix_api\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling num-traits v0.2.16\n   Compiling lock_api v0.4.10\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking bitmaps v3.2.1\n    Checking spin v0.9.8\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=arceos_posix_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/api/arceos_posix_api\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling kspin v0.1.0\n   Compiling num-traits v0.2.16\n   Compiling lock_api v0.4.10\n[2024-10-12T15:38:19Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:38:19Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling scopeguard v1.2.0\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling axerrno v0.1.0\n[2024-10-12T15:38:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:38:24Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bitmaps v3.2.1\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n   Compiling spin v0.9.8\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-12T15:38:19Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:38:19Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-12T15:38:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:38:24Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/platform/aarch64_common/pl011.rs","count":1,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axdisplay","count":9,"raw_reports":[{"file":"modules/axhal/src/platform/aarch64_common/boot.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n","error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/arceos-org/arceos/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 663 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (190 crate dependencies)\nCrate:     shlex\nVersion:   1.1.0\nTitle:     Multiple issues involving quote API\nDate:      2024-01-21\nID:        RUSTSEC-2024-0006\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0006\nSolution:  Upgrade to >=1.3.0\nDependency tree:\nshlex 1.1.0\n└── bindgen 0.69.4\n    ├── axlibc 0.1.0\n    └── arceos_posix_api 0.1.0\n        └── axlibc 0.1.0\n\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.6\n    └── defmt 0.3.5\n        └── smoltcp 0.10.0\n            ├── ixgbe-driver 0.1.0\n            │   └── axdriver_net 0.1.0\n            │       ├── axnet 0.1.0\n            │       │   ├── axruntime 0.1.0\n            │       │   │   ├── axfeat 0.1.0\n            │       │   │   │   ├── axstd 0.1.0\n            │       │   │   │   │   ├── arceos-shell 0.1.0\n            │       │   │   │   │   ├── arceos-httpserver 0.1.0\n            │       │   │   │   │   ├── arceos-httpclient 0.1.0\n            │       │   │   │   │   └── arceos-helloworld 0.1.0\n            │       │   │   │   ├── axlibc 0.1.0\n            │       │   │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   │   │   └── axlibc 0.1.0\n            │       │   │   │   └── arceos_api 0.1.0\n            │       │   │   │       └── axstd 0.1.0\n            │       │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   └── arceos_api 0.1.0\n            │       │   ├── axfeat 0.1.0\n            │       │   ├── arceos_posix_api 0.1.0\n            │       │   └── arceos_api 0.1.0\n            │       ├── axdriver_virtio 0.1.0\n            │       │   └── axdriver 0.1.0\n            │       │       ├── axruntime 0.1.0\n            │       │       ├── axnet 0.1.0\n            │       │       ├── axfs 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   ├── arceos_posix_api 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       ├── axfeat 0.1.0\n            │       │       ├── axdisplay 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       └── arceos_api 0.1.0\n            │       └── axdriver 0.1.0\n            └── axnet 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   0.1.11\nWarning:   yanked\nDependency tree:\natomic-polyfill 0.1.11\n└── heapless 0.7.16\n    └── smoltcp 0.10.0\n        ├── ixgbe-driver 0.1.0\n        │   └── axdriver_net 0.1.0\n        │       ├── axnet 0.1.0\n        │       │   ├── axruntime 0.1.0\n        │       │   │   ├── axfeat 0.1.0\n        │       │   │   │   ├── axstd 0.1.0\n        │       │   │   │   │   ├── arceos-shell 0.1.0\n        │       │   │   │   │   ├── arceos-httpserver 0.1.0\n        │       │   │   │   │   ├── arceos-httpclient 0.1.0\n        │       │   │   │   │   └── arceos-helloworld 0.1.0\n        │       │   │   │   ├── axlibc 0.1.0\n        │       │   │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   │   └── axlibc 0.1.0\n        │       │   │   │   └── arceos_api 0.1.0\n        │       │   │   │       └── axstd 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axdriver_virtio 0.1.0\n        │       │   └── axdriver 0.1.0\n        │       │       ├── axruntime 0.1.0\n        │       │       ├── axnet 0.1.0\n        │       │       ├── axfs 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   ├── arceos_posix_api 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       ├── axfeat 0.1.0\n        │       │       ├── axdisplay 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       └── arceos_api 0.1.0\n        │       └── axdriver 0.1.0\n        └── axnet 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 663,\n    \"last-commit\": \"acb7ce45817b13dd34cb32540ff18be4e1f3ba09\",\n    \"last-updated\": \"2024-10-09T00:13:59+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 190\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0006\",\n          \"package\": \"shlex\",\n          \"title\": \"Multiple issues involving quote API\",\n          \"description\": \"## Issue 1: Failure to quote characters\\n\\nAffected versions of this crate allowed the bytes `{` and `\\\\xa0` to appear\\nunquoted and unescaped in command arguments.\\n\\nIf the output of `quote` or `join` is passed to a shell, then what should be a\\nsingle command argument could be interpreted as multiple arguments.\\n\\nThis does not *directly* allow arbitrary command execution (you can't inject a\\ncommand substitution or similar).  But depending on the command you're running,\\nbeing able to inject multiple arguments where only one is expected could lead\\nto undesired consequences, potentially including arbitrary command execution.\\n\\nThe flaw was corrected in version 1.2.1 by escaping additional characters.\\nUpdating to 1.3.0 is recommended, but 1.2.1 offers a more minimal fix if\\ndesired.\\n\\nWorkaround: Check for the bytes `{` and `\\\\xa0` in `quote`/`join` input or\\noutput.\\n\\n(Note: `{` is problematic because it is used for glob expansion.  `\\\\xa0` is\\nproblematic because it's treated as a word separator in [specific\\nenvironments][solved-xa0].)\\n\\n## Issue 2: Dangerous API w.r.t. nul bytes\\n\\nVersion 1.3.0 deprecates the `quote` and `join` APIs in favor of `try_quote`\\nand `try_join`, which behave the same except that they have `Result` return\\ntype, returning `Err` if the input contains nul bytes.\\n\\nStrings containing nul bytes generally cannot be used in Unix command arguments\\nor environment variables, and most shells cannot handle nul bytes even\\ninternally.  If you try to pass one anyway, then the results might be\\nsecurity-sensitive in uncommon scenarios.  [More details here.][nul-bytes]\\n\\nDue to the low severity, the behavior of the original `quote` and `join` APIs\\nhas not changed; they continue to allow nuls.\\n\\nWorkaround: Manually check for nul bytes in `quote`/`join` input or output.\\n\\n## Issue 3: Lack of documentation for interactive shell risks\\n\\nThe `quote` family of functions does not and cannot escape control characters.\\nWith non-interactive shells this is perfectly safe, as control characters have\\nno special effect.  But if you writing directly to the standard input of an\\ninteractive shell (or through a pty), then control characters [can cause\\nmisbehavior including arbitrary command injection.][control-characters]\\n\\nThis is essentially unfixable, and has not been patched.  But as of version\\n1.3.0, documentation has been added.\\n\\nFuture versions of `shlex` may add API variants that avoid the issue at the\\ncost of reduced portability.\\n\\n[solved-xa0]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#solved-xa0\\n[nul-bytes]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#nul-bytes\\n[control-characters]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#control-characters-interactive-contexts-only\",\n          \"date\": \"2024-01-21\",\n          \"aliases\": [\n            \"GHSA-r7qv-8r2h-pg27\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"code-execution\",\n            \"file-disclosure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/comex/rust-shlex/security/advisories/GHSA-r7qv-8r2h-pg27\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=1.3.0\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"shlex::bytes::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::bytes::quote\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::quote\": [\n              \"<1.2.1\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"shlex\",\n          \"version\": \"1.1.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"43b2853a4d09f215c24cc5489c992ce46052d359b5109343cbafbf26bc62f8a3\",\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.36\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"0.1.11\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e3ff7eb3f316534d83a8a2c3d1674ace8a5a71198eba31e2e2b597833f699b28\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.1.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axdisplay, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axdisplay\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling serde v1.0.204\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling percpu v0.1.3\n    Checking byteorder v1.4.3\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver)\n   Compiling toml_edit v0.22.20\n    Checking axdriver_base v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n    Checking axdriver_display v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n   Compiling linkme-impl v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling zerocopy-derive v0.7.35\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axdisplay, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axdisplay\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling kspin v0.1.0\n   Compiling byteorder v1.4.3\n   Compiling axdriver_base v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver)\n   Compiling axdriver_display v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling zerocopy v0.7.35\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/platform/aarch64_common/pl011.rs","count":1,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axdriver","count":9,"raw_reports":[{"file":"modules/axhal/src/platform/aarch64_common/boot.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n","error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/arceos-org/arceos/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 663 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (190 crate dependencies)\nCrate:     shlex\nVersion:   1.1.0\nTitle:     Multiple issues involving quote API\nDate:      2024-01-21\nID:        RUSTSEC-2024-0006\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0006\nSolution:  Upgrade to >=1.3.0\nDependency tree:\nshlex 1.1.0\n└── bindgen 0.69.4\n    ├── axlibc 0.1.0\n    └── arceos_posix_api 0.1.0\n        └── axlibc 0.1.0\n\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.6\n    └── defmt 0.3.5\n        └── smoltcp 0.10.0\n            ├── ixgbe-driver 0.1.0\n            │   └── axdriver_net 0.1.0\n            │       ├── axnet 0.1.0\n            │       │   ├── axruntime 0.1.0\n            │       │   │   ├── axfeat 0.1.0\n            │       │   │   │   ├── axstd 0.1.0\n            │       │   │   │   │   ├── arceos-shell 0.1.0\n            │       │   │   │   │   ├── arceos-httpserver 0.1.0\n            │       │   │   │   │   ├── arceos-httpclient 0.1.0\n            │       │   │   │   │   └── arceos-helloworld 0.1.0\n            │       │   │   │   ├── axlibc 0.1.0\n            │       │   │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   │   │   └── axlibc 0.1.0\n            │       │   │   │   └── arceos_api 0.1.0\n            │       │   │   │       └── axstd 0.1.0\n            │       │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   └── arceos_api 0.1.0\n            │       │   ├── axfeat 0.1.0\n            │       │   ├── arceos_posix_api 0.1.0\n            │       │   └── arceos_api 0.1.0\n            │       ├── axdriver_virtio 0.1.0\n            │       │   └── axdriver 0.1.0\n            │       │       ├── axruntime 0.1.0\n            │       │       ├── axnet 0.1.0\n            │       │       ├── axfs 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   ├── arceos_posix_api 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       ├── axfeat 0.1.0\n            │       │       ├── axdisplay 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       └── arceos_api 0.1.0\n            │       └── axdriver 0.1.0\n            └── axnet 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   0.1.11\nWarning:   yanked\nDependency tree:\natomic-polyfill 0.1.11\n└── heapless 0.7.16\n    └── smoltcp 0.10.0\n        ├── ixgbe-driver 0.1.0\n        │   └── axdriver_net 0.1.0\n        │       ├── axnet 0.1.0\n        │       │   ├── axruntime 0.1.0\n        │       │   │   ├── axfeat 0.1.0\n        │       │   │   │   ├── axstd 0.1.0\n        │       │   │   │   │   ├── arceos-shell 0.1.0\n        │       │   │   │   │   ├── arceos-httpserver 0.1.0\n        │       │   │   │   │   ├── arceos-httpclient 0.1.0\n        │       │   │   │   │   └── arceos-helloworld 0.1.0\n        │       │   │   │   ├── axlibc 0.1.0\n        │       │   │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   │   └── axlibc 0.1.0\n        │       │   │   │   └── arceos_api 0.1.0\n        │       │   │   │       └── axstd 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axdriver_virtio 0.1.0\n        │       │   └── axdriver 0.1.0\n        │       │       ├── axruntime 0.1.0\n        │       │       ├── axnet 0.1.0\n        │       │       ├── axfs 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   ├── arceos_posix_api 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       ├── axfeat 0.1.0\n        │       │       ├── axdisplay 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       └── arceos_api 0.1.0\n        │       └── axdriver 0.1.0\n        └── axnet 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 663,\n    \"last-commit\": \"acb7ce45817b13dd34cb32540ff18be4e1f3ba09\",\n    \"last-updated\": \"2024-10-09T00:13:59+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 190\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0006\",\n          \"package\": \"shlex\",\n          \"title\": \"Multiple issues involving quote API\",\n          \"description\": \"## Issue 1: Failure to quote characters\\n\\nAffected versions of this crate allowed the bytes `{` and `\\\\xa0` to appear\\nunquoted and unescaped in command arguments.\\n\\nIf the output of `quote` or `join` is passed to a shell, then what should be a\\nsingle command argument could be interpreted as multiple arguments.\\n\\nThis does not *directly* allow arbitrary command execution (you can't inject a\\ncommand substitution or similar).  But depending on the command you're running,\\nbeing able to inject multiple arguments where only one is expected could lead\\nto undesired consequences, potentially including arbitrary command execution.\\n\\nThe flaw was corrected in version 1.2.1 by escaping additional characters.\\nUpdating to 1.3.0 is recommended, but 1.2.1 offers a more minimal fix if\\ndesired.\\n\\nWorkaround: Check for the bytes `{` and `\\\\xa0` in `quote`/`join` input or\\noutput.\\n\\n(Note: `{` is problematic because it is used for glob expansion.  `\\\\xa0` is\\nproblematic because it's treated as a word separator in [specific\\nenvironments][solved-xa0].)\\n\\n## Issue 2: Dangerous API w.r.t. nul bytes\\n\\nVersion 1.3.0 deprecates the `quote` and `join` APIs in favor of `try_quote`\\nand `try_join`, which behave the same except that they have `Result` return\\ntype, returning `Err` if the input contains nul bytes.\\n\\nStrings containing nul bytes generally cannot be used in Unix command arguments\\nor environment variables, and most shells cannot handle nul bytes even\\ninternally.  If you try to pass one anyway, then the results might be\\nsecurity-sensitive in uncommon scenarios.  [More details here.][nul-bytes]\\n\\nDue to the low severity, the behavior of the original `quote` and `join` APIs\\nhas not changed; they continue to allow nuls.\\n\\nWorkaround: Manually check for nul bytes in `quote`/`join` input or output.\\n\\n## Issue 3: Lack of documentation for interactive shell risks\\n\\nThe `quote` family of functions does not and cannot escape control characters.\\nWith non-interactive shells this is perfectly safe, as control characters have\\nno special effect.  But if you writing directly to the standard input of an\\ninteractive shell (or through a pty), then control characters [can cause\\nmisbehavior including arbitrary command injection.][control-characters]\\n\\nThis is essentially unfixable, and has not been patched.  But as of version\\n1.3.0, documentation has been added.\\n\\nFuture versions of `shlex` may add API variants that avoid the issue at the\\ncost of reduced portability.\\n\\n[solved-xa0]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#solved-xa0\\n[nul-bytes]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#nul-bytes\\n[control-characters]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#control-characters-interactive-contexts-only\",\n          \"date\": \"2024-01-21\",\n          \"aliases\": [\n            \"GHSA-r7qv-8r2h-pg27\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"code-execution\",\n            \"file-disclosure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/comex/rust-shlex/security/advisories/GHSA-r7qv-8r2h-pg27\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=1.3.0\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"shlex::bytes::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::bytes::quote\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::quote\": [\n              \"<1.2.1\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"shlex\",\n          \"version\": \"1.1.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"43b2853a4d09f215c24cc5489c992ce46052d359b5109343cbafbf26bc62f8a3\",\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.36\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"0.1.11\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e3ff7eb3f316534d83a8a2c3d1674ace8a5a71198eba31e2e2b597833f699b28\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.1.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axdriver, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n    Checking zerocopy v0.7.35\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver)\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axdriver, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling percpu v0.1.3\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver)\n   Compiling toml_edit v0.22.20\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling crate_interface v0.1.3\n   Compiling zerocopy-derive v0.7.35\n   Compiling percpu_macros v0.1.2\n   Compiling linkme-impl v0.3.27\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling linkme v0.3.27\n   Compiling zerocopy v0.7.35\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/platform/aarch64_common/pl011.rs","count":1,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axfeat","count":9,"raw_reports":[{"file":"modules/axhal/src/platform/aarch64_common/boot.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n","error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/arceos-org/arceos/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 663 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (190 crate dependencies)\nCrate:     shlex\nVersion:   1.1.0\nTitle:     Multiple issues involving quote API\nDate:      2024-01-21\nID:        RUSTSEC-2024-0006\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0006\nSolution:  Upgrade to >=1.3.0\nDependency tree:\nshlex 1.1.0\n└── bindgen 0.69.4\n    ├── axlibc 0.1.0\n    └── arceos_posix_api 0.1.0\n        └── axlibc 0.1.0\n\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.6\n    └── defmt 0.3.5\n        └── smoltcp 0.10.0\n            ├── ixgbe-driver 0.1.0\n            │   └── axdriver_net 0.1.0\n            │       ├── axnet 0.1.0\n            │       │   ├── axruntime 0.1.0\n            │       │   │   ├── axfeat 0.1.0\n            │       │   │   │   ├── axstd 0.1.0\n            │       │   │   │   │   ├── arceos-shell 0.1.0\n            │       │   │   │   │   ├── arceos-httpserver 0.1.0\n            │       │   │   │   │   ├── arceos-httpclient 0.1.0\n            │       │   │   │   │   └── arceos-helloworld 0.1.0\n            │       │   │   │   ├── axlibc 0.1.0\n            │       │   │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   │   │   └── axlibc 0.1.0\n            │       │   │   │   └── arceos_api 0.1.0\n            │       │   │   │       └── axstd 0.1.0\n            │       │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   └── arceos_api 0.1.0\n            │       │   ├── axfeat 0.1.0\n            │       │   ├── arceos_posix_api 0.1.0\n            │       │   └── arceos_api 0.1.0\n            │       ├── axdriver_virtio 0.1.0\n            │       │   └── axdriver 0.1.0\n            │       │       ├── axruntime 0.1.0\n            │       │       ├── axnet 0.1.0\n            │       │       ├── axfs 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   ├── arceos_posix_api 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       ├── axfeat 0.1.0\n            │       │       ├── axdisplay 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       └── arceos_api 0.1.0\n            │       └── axdriver 0.1.0\n            └── axnet 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   0.1.11\nWarning:   yanked\nDependency tree:\natomic-polyfill 0.1.11\n└── heapless 0.7.16\n    └── smoltcp 0.10.0\n        ├── ixgbe-driver 0.1.0\n        │   └── axdriver_net 0.1.0\n        │       ├── axnet 0.1.0\n        │       │   ├── axruntime 0.1.0\n        │       │   │   ├── axfeat 0.1.0\n        │       │   │   │   ├── axstd 0.1.0\n        │       │   │   │   │   ├── arceos-shell 0.1.0\n        │       │   │   │   │   ├── arceos-httpserver 0.1.0\n        │       │   │   │   │   ├── arceos-httpclient 0.1.0\n        │       │   │   │   │   └── arceos-helloworld 0.1.0\n        │       │   │   │   ├── axlibc 0.1.0\n        │       │   │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   │   └── axlibc 0.1.0\n        │       │   │   │   └── arceos_api 0.1.0\n        │       │   │   │       └── axstd 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axdriver_virtio 0.1.0\n        │       │   └── axdriver 0.1.0\n        │       │       ├── axruntime 0.1.0\n        │       │       ├── axnet 0.1.0\n        │       │       ├── axfs 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   ├── arceos_posix_api 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       ├── axfeat 0.1.0\n        │       │       ├── axdisplay 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       └── arceos_api 0.1.0\n        │       └── axdriver 0.1.0\n        └── axnet 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 663,\n    \"last-commit\": \"acb7ce45817b13dd34cb32540ff18be4e1f3ba09\",\n    \"last-updated\": \"2024-10-09T00:13:59+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 190\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0006\",\n          \"package\": \"shlex\",\n          \"title\": \"Multiple issues involving quote API\",\n          \"description\": \"## Issue 1: Failure to quote characters\\n\\nAffected versions of this crate allowed the bytes `{` and `\\\\xa0` to appear\\nunquoted and unescaped in command arguments.\\n\\nIf the output of `quote` or `join` is passed to a shell, then what should be a\\nsingle command argument could be interpreted as multiple arguments.\\n\\nThis does not *directly* allow arbitrary command execution (you can't inject a\\ncommand substitution or similar).  But depending on the command you're running,\\nbeing able to inject multiple arguments where only one is expected could lead\\nto undesired consequences, potentially including arbitrary command execution.\\n\\nThe flaw was corrected in version 1.2.1 by escaping additional characters.\\nUpdating to 1.3.0 is recommended, but 1.2.1 offers a more minimal fix if\\ndesired.\\n\\nWorkaround: Check for the bytes `{` and `\\\\xa0` in `quote`/`join` input or\\noutput.\\n\\n(Note: `{` is problematic because it is used for glob expansion.  `\\\\xa0` is\\nproblematic because it's treated as a word separator in [specific\\nenvironments][solved-xa0].)\\n\\n## Issue 2: Dangerous API w.r.t. nul bytes\\n\\nVersion 1.3.0 deprecates the `quote` and `join` APIs in favor of `try_quote`\\nand `try_join`, which behave the same except that they have `Result` return\\ntype, returning `Err` if the input contains nul bytes.\\n\\nStrings containing nul bytes generally cannot be used in Unix command arguments\\nor environment variables, and most shells cannot handle nul bytes even\\ninternally.  If you try to pass one anyway, then the results might be\\nsecurity-sensitive in uncommon scenarios.  [More details here.][nul-bytes]\\n\\nDue to the low severity, the behavior of the original `quote` and `join` APIs\\nhas not changed; they continue to allow nuls.\\n\\nWorkaround: Manually check for nul bytes in `quote`/`join` input or output.\\n\\n## Issue 3: Lack of documentation for interactive shell risks\\n\\nThe `quote` family of functions does not and cannot escape control characters.\\nWith non-interactive shells this is perfectly safe, as control characters have\\nno special effect.  But if you writing directly to the standard input of an\\ninteractive shell (or through a pty), then control characters [can cause\\nmisbehavior including arbitrary command injection.][control-characters]\\n\\nThis is essentially unfixable, and has not been patched.  But as of version\\n1.3.0, documentation has been added.\\n\\nFuture versions of `shlex` may add API variants that avoid the issue at the\\ncost of reduced portability.\\n\\n[solved-xa0]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#solved-xa0\\n[nul-bytes]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#nul-bytes\\n[control-characters]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#control-characters-interactive-contexts-only\",\n          \"date\": \"2024-01-21\",\n          \"aliases\": [\n            \"GHSA-r7qv-8r2h-pg27\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"code-execution\",\n            \"file-disclosure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/comex/rust-shlex/security/advisories/GHSA-r7qv-8r2h-pg27\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=1.3.0\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"shlex::bytes::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::bytes::quote\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::quote\": [\n              \"<1.2.1\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"shlex\",\n          \"version\": \"1.1.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"43b2853a4d09f215c24cc5489c992ce46052d359b5109343cbafbf26bc62f8a3\",\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.36\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"0.1.11\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e3ff7eb3f316534d83a8a2c3d1674ace8a5a71198eba31e2e2b597833f699b28\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.1.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axfeat, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/api/axfeat\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling num-traits v0.2.16\n   Compiling percpu v0.1.3\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axfeat, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/api/axfeat\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling serde v1.0.204\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling autocfg v1.1.0\n   Compiling syn v2.0.70\n   Compiling num-traits v0.2.16\n   Compiling percpu v0.1.3\n   Compiling toml_edit v0.22.20\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling chrono v0.4.38\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n   Compiling linkme-impl v0.3.27\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling linkme v0.3.27\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/platform/aarch64_common/pl011.rs","count":1,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axfs","count":9,"raw_reports":[{"file":"modules/axhal/src/platform/aarch64_common/boot.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n","error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/arceos-org/arceos/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 663 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (190 crate dependencies)\nCrate:     shlex\nVersion:   1.1.0\nTitle:     Multiple issues involving quote API\nDate:      2024-01-21\nID:        RUSTSEC-2024-0006\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0006\nSolution:  Upgrade to >=1.3.0\nDependency tree:\nshlex 1.1.0\n└── bindgen 0.69.4\n    ├── axlibc 0.1.0\n    └── arceos_posix_api 0.1.0\n        └── axlibc 0.1.0\n\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.6\n    └── defmt 0.3.5\n        └── smoltcp 0.10.0\n            ├── ixgbe-driver 0.1.0\n            │   └── axdriver_net 0.1.0\n            │       ├── axnet 0.1.0\n            │       │   ├── axruntime 0.1.0\n            │       │   │   ├── axfeat 0.1.0\n            │       │   │   │   ├── axstd 0.1.0\n            │       │   │   │   │   ├── arceos-shell 0.1.0\n            │       │   │   │   │   ├── arceos-httpserver 0.1.0\n            │       │   │   │   │   ├── arceos-httpclient 0.1.0\n            │       │   │   │   │   └── arceos-helloworld 0.1.0\n            │       │   │   │   ├── axlibc 0.1.0\n            │       │   │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   │   │   └── axlibc 0.1.0\n            │       │   │   │   └── arceos_api 0.1.0\n            │       │   │   │       └── axstd 0.1.0\n            │       │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   └── arceos_api 0.1.0\n            │       │   ├── axfeat 0.1.0\n            │       │   ├── arceos_posix_api 0.1.0\n            │       │   └── arceos_api 0.1.0\n            │       ├── axdriver_virtio 0.1.0\n            │       │   └── axdriver 0.1.0\n            │       │       ├── axruntime 0.1.0\n            │       │       ├── axnet 0.1.0\n            │       │       ├── axfs 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   ├── arceos_posix_api 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       ├── axfeat 0.1.0\n            │       │       ├── axdisplay 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       └── arceos_api 0.1.0\n            │       └── axdriver 0.1.0\n            └── axnet 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   0.1.11\nWarning:   yanked\nDependency tree:\natomic-polyfill 0.1.11\n└── heapless 0.7.16\n    └── smoltcp 0.10.0\n        ├── ixgbe-driver 0.1.0\n        │   └── axdriver_net 0.1.0\n        │       ├── axnet 0.1.0\n        │       │   ├── axruntime 0.1.0\n        │       │   │   ├── axfeat 0.1.0\n        │       │   │   │   ├── axstd 0.1.0\n        │       │   │   │   │   ├── arceos-shell 0.1.0\n        │       │   │   │   │   ├── arceos-httpserver 0.1.0\n        │       │   │   │   │   ├── arceos-httpclient 0.1.0\n        │       │   │   │   │   └── arceos-helloworld 0.1.0\n        │       │   │   │   ├── axlibc 0.1.0\n        │       │   │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   │   └── axlibc 0.1.0\n        │       │   │   │   └── arceos_api 0.1.0\n        │       │   │   │       └── axstd 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axdriver_virtio 0.1.0\n        │       │   └── axdriver 0.1.0\n        │       │       ├── axruntime 0.1.0\n        │       │       ├── axnet 0.1.0\n        │       │       ├── axfs 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   ├── arceos_posix_api 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       ├── axfeat 0.1.0\n        │       │       ├── axdisplay 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       └── arceos_api 0.1.0\n        │       └── axdriver 0.1.0\n        └── axnet 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 663,\n    \"last-commit\": \"acb7ce45817b13dd34cb32540ff18be4e1f3ba09\",\n    \"last-updated\": \"2024-10-09T00:13:59+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 190\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0006\",\n          \"package\": \"shlex\",\n          \"title\": \"Multiple issues involving quote API\",\n          \"description\": \"## Issue 1: Failure to quote characters\\n\\nAffected versions of this crate allowed the bytes `{` and `\\\\xa0` to appear\\nunquoted and unescaped in command arguments.\\n\\nIf the output of `quote` or `join` is passed to a shell, then what should be a\\nsingle command argument could be interpreted as multiple arguments.\\n\\nThis does not *directly* allow arbitrary command execution (you can't inject a\\ncommand substitution or similar).  But depending on the command you're running,\\nbeing able to inject multiple arguments where only one is expected could lead\\nto undesired consequences, potentially including arbitrary command execution.\\n\\nThe flaw was corrected in version 1.2.1 by escaping additional characters.\\nUpdating to 1.3.0 is recommended, but 1.2.1 offers a more minimal fix if\\ndesired.\\n\\nWorkaround: Check for the bytes `{` and `\\\\xa0` in `quote`/`join` input or\\noutput.\\n\\n(Note: `{` is problematic because it is used for glob expansion.  `\\\\xa0` is\\nproblematic because it's treated as a word separator in [specific\\nenvironments][solved-xa0].)\\n\\n## Issue 2: Dangerous API w.r.t. nul bytes\\n\\nVersion 1.3.0 deprecates the `quote` and `join` APIs in favor of `try_quote`\\nand `try_join`, which behave the same except that they have `Result` return\\ntype, returning `Err` if the input contains nul bytes.\\n\\nStrings containing nul bytes generally cannot be used in Unix command arguments\\nor environment variables, and most shells cannot handle nul bytes even\\ninternally.  If you try to pass one anyway, then the results might be\\nsecurity-sensitive in uncommon scenarios.  [More details here.][nul-bytes]\\n\\nDue to the low severity, the behavior of the original `quote` and `join` APIs\\nhas not changed; they continue to allow nuls.\\n\\nWorkaround: Manually check for nul bytes in `quote`/`join` input or output.\\n\\n## Issue 3: Lack of documentation for interactive shell risks\\n\\nThe `quote` family of functions does not and cannot escape control characters.\\nWith non-interactive shells this is perfectly safe, as control characters have\\nno special effect.  But if you writing directly to the standard input of an\\ninteractive shell (or through a pty), then control characters [can cause\\nmisbehavior including arbitrary command injection.][control-characters]\\n\\nThis is essentially unfixable, and has not been patched.  But as of version\\n1.3.0, documentation has been added.\\n\\nFuture versions of `shlex` may add API variants that avoid the issue at the\\ncost of reduced portability.\\n\\n[solved-xa0]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#solved-xa0\\n[nul-bytes]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#nul-bytes\\n[control-characters]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#control-characters-interactive-contexts-only\",\n          \"date\": \"2024-01-21\",\n          \"aliases\": [\n            \"GHSA-r7qv-8r2h-pg27\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"code-execution\",\n            \"file-disclosure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/comex/rust-shlex/security/advisories/GHSA-r7qv-8r2h-pg27\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=1.3.0\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"shlex::bytes::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::bytes::quote\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::quote\": [\n              \"<1.2.1\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"shlex\",\n          \"version\": \"1.1.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"43b2853a4d09f215c24cc5489c992ce46052d359b5109343cbafbf26bc62f8a3\",\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.36\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"0.1.11\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e3ff7eb3f316534d83a8a2c3d1674ace8a5a71198eba31e2e2b597833f699b28\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.1.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axfs, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axfs\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n   Compiling axerrno v0.1.0\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n   Compiling lock_api v0.4.10\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking zerocopy v0.7.35\n    Checking axfs_vfs v0.1.1\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking axdriver_block v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver)\n    Checking axio v0.1.0\n    Checking spin v0.9.8\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axfs, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axfs\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling axerrno v0.1.0\n   Compiling kspin v0.1.0\n   Compiling linkme v0.3.27\n   Compiling lock_api v0.4.10\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling zerocopy v0.7.35\n   Compiling axfs_vfs v0.1.1\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n   Compiling spin v0.9.8\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/platform/aarch64_common/pl011.rs","count":1,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axlibc","count":9,"raw_reports":[{"file":"modules/axhal/src/platform/aarch64_common/boot.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n","error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/arceos-org/arceos/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 663 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (190 crate dependencies)\nCrate:     shlex\nVersion:   1.1.0\nTitle:     Multiple issues involving quote API\nDate:      2024-01-21\nID:        RUSTSEC-2024-0006\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0006\nSolution:  Upgrade to >=1.3.0\nDependency tree:\nshlex 1.1.0\n└── bindgen 0.69.4\n    ├── axlibc 0.1.0\n    └── arceos_posix_api 0.1.0\n        └── axlibc 0.1.0\n\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.6\n    └── defmt 0.3.5\n        └── smoltcp 0.10.0\n            ├── ixgbe-driver 0.1.0\n            │   └── axdriver_net 0.1.0\n            │       ├── axnet 0.1.0\n            │       │   ├── axruntime 0.1.0\n            │       │   │   ├── axfeat 0.1.0\n            │       │   │   │   ├── axstd 0.1.0\n            │       │   │   │   │   ├── arceos-shell 0.1.0\n            │       │   │   │   │   ├── arceos-httpserver 0.1.0\n            │       │   │   │   │   ├── arceos-httpclient 0.1.0\n            │       │   │   │   │   └── arceos-helloworld 0.1.0\n            │       │   │   │   ├── axlibc 0.1.0\n            │       │   │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   │   │   └── axlibc 0.1.0\n            │       │   │   │   └── arceos_api 0.1.0\n            │       │   │   │       └── axstd 0.1.0\n            │       │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   └── arceos_api 0.1.0\n            │       │   ├── axfeat 0.1.0\n            │       │   ├── arceos_posix_api 0.1.0\n            │       │   └── arceos_api 0.1.0\n            │       ├── axdriver_virtio 0.1.0\n            │       │   └── axdriver 0.1.0\n            │       │       ├── axruntime 0.1.0\n            │       │       ├── axnet 0.1.0\n            │       │       ├── axfs 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   ├── arceos_posix_api 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       ├── axfeat 0.1.0\n            │       │       ├── axdisplay 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       └── arceos_api 0.1.0\n            │       └── axdriver 0.1.0\n            └── axnet 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   0.1.11\nWarning:   yanked\nDependency tree:\natomic-polyfill 0.1.11\n└── heapless 0.7.16\n    └── smoltcp 0.10.0\n        ├── ixgbe-driver 0.1.0\n        │   └── axdriver_net 0.1.0\n        │       ├── axnet 0.1.0\n        │       │   ├── axruntime 0.1.0\n        │       │   │   ├── axfeat 0.1.0\n        │       │   │   │   ├── axstd 0.1.0\n        │       │   │   │   │   ├── arceos-shell 0.1.0\n        │       │   │   │   │   ├── arceos-httpserver 0.1.0\n        │       │   │   │   │   ├── arceos-httpclient 0.1.0\n        │       │   │   │   │   └── arceos-helloworld 0.1.0\n        │       │   │   │   ├── axlibc 0.1.0\n        │       │   │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   │   └── axlibc 0.1.0\n        │       │   │   │   └── arceos_api 0.1.0\n        │       │   │   │       └── axstd 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axdriver_virtio 0.1.0\n        │       │   └── axdriver 0.1.0\n        │       │       ├── axruntime 0.1.0\n        │       │       ├── axnet 0.1.0\n        │       │       ├── axfs 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   ├── arceos_posix_api 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       ├── axfeat 0.1.0\n        │       │       ├── axdisplay 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       └── arceos_api 0.1.0\n        │       └── axdriver 0.1.0\n        └── axnet 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 663,\n    \"last-commit\": \"acb7ce45817b13dd34cb32540ff18be4e1f3ba09\",\n    \"last-updated\": \"2024-10-09T00:13:59+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 190\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0006\",\n          \"package\": \"shlex\",\n          \"title\": \"Multiple issues involving quote API\",\n          \"description\": \"## Issue 1: Failure to quote characters\\n\\nAffected versions of this crate allowed the bytes `{` and `\\\\xa0` to appear\\nunquoted and unescaped in command arguments.\\n\\nIf the output of `quote` or `join` is passed to a shell, then what should be a\\nsingle command argument could be interpreted as multiple arguments.\\n\\nThis does not *directly* allow arbitrary command execution (you can't inject a\\ncommand substitution or similar).  But depending on the command you're running,\\nbeing able to inject multiple arguments where only one is expected could lead\\nto undesired consequences, potentially including arbitrary command execution.\\n\\nThe flaw was corrected in version 1.2.1 by escaping additional characters.\\nUpdating to 1.3.0 is recommended, but 1.2.1 offers a more minimal fix if\\ndesired.\\n\\nWorkaround: Check for the bytes `{` and `\\\\xa0` in `quote`/`join` input or\\noutput.\\n\\n(Note: `{` is problematic because it is used for glob expansion.  `\\\\xa0` is\\nproblematic because it's treated as a word separator in [specific\\nenvironments][solved-xa0].)\\n\\n## Issue 2: Dangerous API w.r.t. nul bytes\\n\\nVersion 1.3.0 deprecates the `quote` and `join` APIs in favor of `try_quote`\\nand `try_join`, which behave the same except that they have `Result` return\\ntype, returning `Err` if the input contains nul bytes.\\n\\nStrings containing nul bytes generally cannot be used in Unix command arguments\\nor environment variables, and most shells cannot handle nul bytes even\\ninternally.  If you try to pass one anyway, then the results might be\\nsecurity-sensitive in uncommon scenarios.  [More details here.][nul-bytes]\\n\\nDue to the low severity, the behavior of the original `quote` and `join` APIs\\nhas not changed; they continue to allow nuls.\\n\\nWorkaround: Manually check for nul bytes in `quote`/`join` input or output.\\n\\n## Issue 3: Lack of documentation for interactive shell risks\\n\\nThe `quote` family of functions does not and cannot escape control characters.\\nWith non-interactive shells this is perfectly safe, as control characters have\\nno special effect.  But if you writing directly to the standard input of an\\ninteractive shell (or through a pty), then control characters [can cause\\nmisbehavior including arbitrary command injection.][control-characters]\\n\\nThis is essentially unfixable, and has not been patched.  But as of version\\n1.3.0, documentation has been added.\\n\\nFuture versions of `shlex` may add API variants that avoid the issue at the\\ncost of reduced portability.\\n\\n[solved-xa0]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#solved-xa0\\n[nul-bytes]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#nul-bytes\\n[control-characters]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#control-characters-interactive-contexts-only\",\n          \"date\": \"2024-01-21\",\n          \"aliases\": [\n            \"GHSA-r7qv-8r2h-pg27\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"code-execution\",\n            \"file-disclosure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/comex/rust-shlex/security/advisories/GHSA-r7qv-8r2h-pg27\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=1.3.0\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"shlex::bytes::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::bytes::quote\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::quote\": [\n              \"<1.2.1\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"shlex\",\n          \"version\": \"1.1.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"43b2853a4d09f215c24cc5489c992ce46052d359b5109343cbafbf26bc62f8a3\",\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.36\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"0.1.11\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e3ff7eb3f316534d83a8a2c3d1674ace8a5a71198eba31e2e2b597833f699b28\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.1.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axlibc, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/ulib/axlibc\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling autocfg v1.1.0\n   Compiling toml_edit v0.22.20\n   Compiling libc v0.2.147\n   Compiling memchr v2.5.0\n   Compiling glob v0.3.1\n   Compiling clang-sys v1.6.1\n   Compiling prettyplease v0.2.12\n   Compiling percpu v0.1.3\n   Compiling minimal-lexical v0.2.1\n   Compiling regex-syntax v0.7.4\n   Compiling either v1.9.0\n   Compiling cfg-if v1.0.0\n   Compiling libloading v0.7.4\n   Compiling nom v7.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling regex-automata v0.3.6\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling bindgen v0.69.4\n   Compiling cexpr v0.6.0\n   Compiling regex v1.9.3\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n   Compiling linkme-impl v0.3.27\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling which v4.4.0\n   Compiling itertools v0.10.5\n    Checking linkme v0.3.27\n   Compiling num-traits v0.2.16\n   Compiling log v0.4.21\n   Compiling rustc-hash v1.1.0\n   Compiling shlex v1.1.0\n   Compiling lazycell v1.3.0\n   Compiling bitflags v2.6.0\n   Compiling lazy_static v1.5.0\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axlibc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/ulib/axlibc\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling serde v1.0.204\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling autocfg v1.1.0\n   Compiling syn v2.0.70\n   Compiling libc v0.2.147\n   Compiling toml_edit v0.22.20\n   Compiling memchr v2.5.0\n   Compiling glob v0.3.1\n   Compiling clang-sys v1.6.1\n   Compiling prettyplease v0.2.12\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling percpu v0.1.3\n   Compiling either v1.9.0\n   Compiling minimal-lexical v0.2.1\n   Compiling cfg-if v1.0.0\n   Compiling regex-syntax v0.7.4\n   Compiling libloading v0.7.4\n   Compiling nom v7.1.3\n   Compiling regex-automata v0.3.6\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling bindgen v0.69.4\n   Compiling cexpr v0.6.0\n   Compiling regex v1.9.3\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling linkme-impl v0.3.27\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling which v4.4.0\n   Compiling itertools v0.10.5\n   Compiling num-traits v0.2.16\n   Compiling lazy_static v1.5.0\n   Compiling bitflags v2.6.0\n   Compiling rustc-hash v1.1.0\n   Compiling log v0.4.21\n[2024-10-12T15:42:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:42:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling shlex v1.1.0\n   Compiling linkme v0.3.27\n   Compiling lazycell v1.3.0\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n   Compiling lock_api v0.4.10\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-12T15:42:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:42:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/platform/aarch64_common/pl011.rs","count":1,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axruntime","count":9,"raw_reports":[{"file":"modules/axhal/src/platform/aarch64_common/boot.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n","error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/arceos-org/arceos/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 663 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (190 crate dependencies)\nCrate:     shlex\nVersion:   1.1.0\nTitle:     Multiple issues involving quote API\nDate:      2024-01-21\nID:        RUSTSEC-2024-0006\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0006\nSolution:  Upgrade to >=1.3.0\nDependency tree:\nshlex 1.1.0\n└── bindgen 0.69.4\n    ├── axlibc 0.1.0\n    └── arceos_posix_api 0.1.0\n        └── axlibc 0.1.0\n\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.6\n    └── defmt 0.3.5\n        └── smoltcp 0.10.0\n            ├── ixgbe-driver 0.1.0\n            │   └── axdriver_net 0.1.0\n            │       ├── axnet 0.1.0\n            │       │   ├── axruntime 0.1.0\n            │       │   │   ├── axfeat 0.1.0\n            │       │   │   │   ├── axstd 0.1.0\n            │       │   │   │   │   ├── arceos-shell 0.1.0\n            │       │   │   │   │   ├── arceos-httpserver 0.1.0\n            │       │   │   │   │   ├── arceos-httpclient 0.1.0\n            │       │   │   │   │   └── arceos-helloworld 0.1.0\n            │       │   │   │   ├── axlibc 0.1.0\n            │       │   │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   │   │   └── axlibc 0.1.0\n            │       │   │   │   └── arceos_api 0.1.0\n            │       │   │   │       └── axstd 0.1.0\n            │       │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   └── arceos_api 0.1.0\n            │       │   ├── axfeat 0.1.0\n            │       │   ├── arceos_posix_api 0.1.0\n            │       │   └── arceos_api 0.1.0\n            │       ├── axdriver_virtio 0.1.0\n            │       │   └── axdriver 0.1.0\n            │       │       ├── axruntime 0.1.0\n            │       │       ├── axnet 0.1.0\n            │       │       ├── axfs 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   ├── arceos_posix_api 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       ├── axfeat 0.1.0\n            │       │       ├── axdisplay 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       └── arceos_api 0.1.0\n            │       └── axdriver 0.1.0\n            └── axnet 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   0.1.11\nWarning:   yanked\nDependency tree:\natomic-polyfill 0.1.11\n└── heapless 0.7.16\n    └── smoltcp 0.10.0\n        ├── ixgbe-driver 0.1.0\n        │   └── axdriver_net 0.1.0\n        │       ├── axnet 0.1.0\n        │       │   ├── axruntime 0.1.0\n        │       │   │   ├── axfeat 0.1.0\n        │       │   │   │   ├── axstd 0.1.0\n        │       │   │   │   │   ├── arceos-shell 0.1.0\n        │       │   │   │   │   ├── arceos-httpserver 0.1.0\n        │       │   │   │   │   ├── arceos-httpclient 0.1.0\n        │       │   │   │   │   └── arceos-helloworld 0.1.0\n        │       │   │   │   ├── axlibc 0.1.0\n        │       │   │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   │   └── axlibc 0.1.0\n        │       │   │   │   └── arceos_api 0.1.0\n        │       │   │   │       └── axstd 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axdriver_virtio 0.1.0\n        │       │   └── axdriver 0.1.0\n        │       │       ├── axruntime 0.1.0\n        │       │       ├── axnet 0.1.0\n        │       │       ├── axfs 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   ├── arceos_posix_api 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       ├── axfeat 0.1.0\n        │       │       ├── axdisplay 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       └── arceos_api 0.1.0\n        │       └── axdriver 0.1.0\n        └── axnet 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 663,\n    \"last-commit\": \"acb7ce45817b13dd34cb32540ff18be4e1f3ba09\",\n    \"last-updated\": \"2024-10-09T00:13:59+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 190\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0006\",\n          \"package\": \"shlex\",\n          \"title\": \"Multiple issues involving quote API\",\n          \"description\": \"## Issue 1: Failure to quote characters\\n\\nAffected versions of this crate allowed the bytes `{` and `\\\\xa0` to appear\\nunquoted and unescaped in command arguments.\\n\\nIf the output of `quote` or `join` is passed to a shell, then what should be a\\nsingle command argument could be interpreted as multiple arguments.\\n\\nThis does not *directly* allow arbitrary command execution (you can't inject a\\ncommand substitution or similar).  But depending on the command you're running,\\nbeing able to inject multiple arguments where only one is expected could lead\\nto undesired consequences, potentially including arbitrary command execution.\\n\\nThe flaw was corrected in version 1.2.1 by escaping additional characters.\\nUpdating to 1.3.0 is recommended, but 1.2.1 offers a more minimal fix if\\ndesired.\\n\\nWorkaround: Check for the bytes `{` and `\\\\xa0` in `quote`/`join` input or\\noutput.\\n\\n(Note: `{` is problematic because it is used for glob expansion.  `\\\\xa0` is\\nproblematic because it's treated as a word separator in [specific\\nenvironments][solved-xa0].)\\n\\n## Issue 2: Dangerous API w.r.t. nul bytes\\n\\nVersion 1.3.0 deprecates the `quote` and `join` APIs in favor of `try_quote`\\nand `try_join`, which behave the same except that they have `Result` return\\ntype, returning `Err` if the input contains nul bytes.\\n\\nStrings containing nul bytes generally cannot be used in Unix command arguments\\nor environment variables, and most shells cannot handle nul bytes even\\ninternally.  If you try to pass one anyway, then the results might be\\nsecurity-sensitive in uncommon scenarios.  [More details here.][nul-bytes]\\n\\nDue to the low severity, the behavior of the original `quote` and `join` APIs\\nhas not changed; they continue to allow nuls.\\n\\nWorkaround: Manually check for nul bytes in `quote`/`join` input or output.\\n\\n## Issue 3: Lack of documentation for interactive shell risks\\n\\nThe `quote` family of functions does not and cannot escape control characters.\\nWith non-interactive shells this is perfectly safe, as control characters have\\nno special effect.  But if you writing directly to the standard input of an\\ninteractive shell (or through a pty), then control characters [can cause\\nmisbehavior including arbitrary command injection.][control-characters]\\n\\nThis is essentially unfixable, and has not been patched.  But as of version\\n1.3.0, documentation has been added.\\n\\nFuture versions of `shlex` may add API variants that avoid the issue at the\\ncost of reduced portability.\\n\\n[solved-xa0]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#solved-xa0\\n[nul-bytes]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#nul-bytes\\n[control-characters]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#control-characters-interactive-contexts-only\",\n          \"date\": \"2024-01-21\",\n          \"aliases\": [\n            \"GHSA-r7qv-8r2h-pg27\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"code-execution\",\n            \"file-disclosure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/comex/rust-shlex/security/advisories/GHSA-r7qv-8r2h-pg27\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=1.3.0\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"shlex::bytes::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::bytes::quote\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::quote\": [\n              \"<1.2.1\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"shlex\",\n          \"version\": \"1.1.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"43b2853a4d09f215c24cc5489c992ce46052d359b5109343cbafbf26bc62f8a3\",\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.36\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"0.1.11\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e3ff7eb3f316534d83a8a2c3d1674ace8a5a71198eba31e2e2b597833f699b28\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.1.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axruntime, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axruntime\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling autocfg v1.1.0\n   Compiling toml_edit v0.22.20\n   Compiling num-traits v0.2.16\n   Compiling percpu v0.1.3\n    Checking chrono v0.4.38\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n   Compiling linkme-impl v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axruntime, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axruntime\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling autocfg v1.1.0\n   Compiling syn v2.0.70\n   Compiling num-traits v0.2.16\n   Compiling percpu v0.1.3\n   Compiling toml_edit v0.22.20\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling chrono v0.4.38\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling linkme-impl v0.3.27\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling linkme v0.3.27\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/platform/aarch64_common/pl011.rs","count":1,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axstd","count":9,"raw_reports":[{"file":"modules/axhal/src/platform/aarch64_common/boot.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n","error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/arceos-org/arceos/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 663 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (190 crate dependencies)\nCrate:     shlex\nVersion:   1.1.0\nTitle:     Multiple issues involving quote API\nDate:      2024-01-21\nID:        RUSTSEC-2024-0006\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0006\nSolution:  Upgrade to >=1.3.0\nDependency tree:\nshlex 1.1.0\n└── bindgen 0.69.4\n    ├── axlibc 0.1.0\n    └── arceos_posix_api 0.1.0\n        └── axlibc 0.1.0\n\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.6\n    └── defmt 0.3.5\n        └── smoltcp 0.10.0\n            ├── ixgbe-driver 0.1.0\n            │   └── axdriver_net 0.1.0\n            │       ├── axnet 0.1.0\n            │       │   ├── axruntime 0.1.0\n            │       │   │   ├── axfeat 0.1.0\n            │       │   │   │   ├── axstd 0.1.0\n            │       │   │   │   │   ├── arceos-shell 0.1.0\n            │       │   │   │   │   ├── arceos-httpserver 0.1.0\n            │       │   │   │   │   ├── arceos-httpclient 0.1.0\n            │       │   │   │   │   └── arceos-helloworld 0.1.0\n            │       │   │   │   ├── axlibc 0.1.0\n            │       │   │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   │   │   └── axlibc 0.1.0\n            │       │   │   │   └── arceos_api 0.1.0\n            │       │   │   │       └── axstd 0.1.0\n            │       │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   └── arceos_api 0.1.0\n            │       │   ├── axfeat 0.1.0\n            │       │   ├── arceos_posix_api 0.1.0\n            │       │   └── arceos_api 0.1.0\n            │       ├── axdriver_virtio 0.1.0\n            │       │   └── axdriver 0.1.0\n            │       │       ├── axruntime 0.1.0\n            │       │       ├── axnet 0.1.0\n            │       │       ├── axfs 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   ├── arceos_posix_api 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       ├── axfeat 0.1.0\n            │       │       ├── axdisplay 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       └── arceos_api 0.1.0\n            │       └── axdriver 0.1.0\n            └── axnet 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   0.1.11\nWarning:   yanked\nDependency tree:\natomic-polyfill 0.1.11\n└── heapless 0.7.16\n    └── smoltcp 0.10.0\n        ├── ixgbe-driver 0.1.0\n        │   └── axdriver_net 0.1.0\n        │       ├── axnet 0.1.0\n        │       │   ├── axruntime 0.1.0\n        │       │   │   ├── axfeat 0.1.0\n        │       │   │   │   ├── axstd 0.1.0\n        │       │   │   │   │   ├── arceos-shell 0.1.0\n        │       │   │   │   │   ├── arceos-httpserver 0.1.0\n        │       │   │   │   │   ├── arceos-httpclient 0.1.0\n        │       │   │   │   │   └── arceos-helloworld 0.1.0\n        │       │   │   │   ├── axlibc 0.1.0\n        │       │   │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   │   └── axlibc 0.1.0\n        │       │   │   │   └── arceos_api 0.1.0\n        │       │   │   │       └── axstd 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axdriver_virtio 0.1.0\n        │       │   └── axdriver 0.1.0\n        │       │       ├── axruntime 0.1.0\n        │       │       ├── axnet 0.1.0\n        │       │       ├── axfs 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   ├── arceos_posix_api 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       ├── axfeat 0.1.0\n        │       │       ├── axdisplay 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       └── arceos_api 0.1.0\n        │       └── axdriver 0.1.0\n        └── axnet 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 663,\n    \"last-commit\": \"acb7ce45817b13dd34cb32540ff18be4e1f3ba09\",\n    \"last-updated\": \"2024-10-09T00:13:59+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 190\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0006\",\n          \"package\": \"shlex\",\n          \"title\": \"Multiple issues involving quote API\",\n          \"description\": \"## Issue 1: Failure to quote characters\\n\\nAffected versions of this crate allowed the bytes `{` and `\\\\xa0` to appear\\nunquoted and unescaped in command arguments.\\n\\nIf the output of `quote` or `join` is passed to a shell, then what should be a\\nsingle command argument could be interpreted as multiple arguments.\\n\\nThis does not *directly* allow arbitrary command execution (you can't inject a\\ncommand substitution or similar).  But depending on the command you're running,\\nbeing able to inject multiple arguments where only one is expected could lead\\nto undesired consequences, potentially including arbitrary command execution.\\n\\nThe flaw was corrected in version 1.2.1 by escaping additional characters.\\nUpdating to 1.3.0 is recommended, but 1.2.1 offers a more minimal fix if\\ndesired.\\n\\nWorkaround: Check for the bytes `{` and `\\\\xa0` in `quote`/`join` input or\\noutput.\\n\\n(Note: `{` is problematic because it is used for glob expansion.  `\\\\xa0` is\\nproblematic because it's treated as a word separator in [specific\\nenvironments][solved-xa0].)\\n\\n## Issue 2: Dangerous API w.r.t. nul bytes\\n\\nVersion 1.3.0 deprecates the `quote` and `join` APIs in favor of `try_quote`\\nand `try_join`, which behave the same except that they have `Result` return\\ntype, returning `Err` if the input contains nul bytes.\\n\\nStrings containing nul bytes generally cannot be used in Unix command arguments\\nor environment variables, and most shells cannot handle nul bytes even\\ninternally.  If you try to pass one anyway, then the results might be\\nsecurity-sensitive in uncommon scenarios.  [More details here.][nul-bytes]\\n\\nDue to the low severity, the behavior of the original `quote` and `join` APIs\\nhas not changed; they continue to allow nuls.\\n\\nWorkaround: Manually check for nul bytes in `quote`/`join` input or output.\\n\\n## Issue 3: Lack of documentation for interactive shell risks\\n\\nThe `quote` family of functions does not and cannot escape control characters.\\nWith non-interactive shells this is perfectly safe, as control characters have\\nno special effect.  But if you writing directly to the standard input of an\\ninteractive shell (or through a pty), then control characters [can cause\\nmisbehavior including arbitrary command injection.][control-characters]\\n\\nThis is essentially unfixable, and has not been patched.  But as of version\\n1.3.0, documentation has been added.\\n\\nFuture versions of `shlex` may add API variants that avoid the issue at the\\ncost of reduced portability.\\n\\n[solved-xa0]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#solved-xa0\\n[nul-bytes]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#nul-bytes\\n[control-characters]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#control-characters-interactive-contexts-only\",\n          \"date\": \"2024-01-21\",\n          \"aliases\": [\n            \"GHSA-r7qv-8r2h-pg27\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"code-execution\",\n            \"file-disclosure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/comex/rust-shlex/security/advisories/GHSA-r7qv-8r2h-pg27\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=1.3.0\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"shlex::bytes::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::bytes::quote\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::quote\": [\n              \"<1.2.1\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"shlex\",\n          \"version\": \"1.1.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"43b2853a4d09f215c24cc5489c992ce46052d359b5109343cbafbf26bc62f8a3\",\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.36\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"0.1.11\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e3ff7eb3f316534d83a8a2c3d1674ace8a5a71198eba31e2e2b597833f699b28\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.1.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axstd, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/ulib/axstd\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling percpu v0.1.3\n   Compiling autocfg v1.1.0\n   Compiling toml_edit v0.22.20\n   Compiling num-traits v0.2.16\n   Compiling axerrno v0.1.0\n    Checking chrono v0.4.38\n    Checking axio v0.1.0\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axstd, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/ulib/axstd\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling num-traits v0.2.16\n   Compiling axerrno v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling axio v0.1.0\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/platform/aarch64_common/pl011.rs","count":1,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axdma","count":8,"raw_reports":[{"file":"modules/axhal/src/platform/aarch64_common/boot.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n","error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axdma, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axdma\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling syn v1.0.109\n   Compiling toml_edit v0.22.20\n   Compiling unicode-width v0.1.10\n   Compiling base64 v0.13.1\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n    Checking page_table_multiarch v0.4.0\n   Compiling svgbobdoc v0.3.0\n    Checking rlsf v0.2.1\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n    Checking allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n   Compiling percpu_macros v0.1.2\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axalloc)\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axdma, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axdma\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.1\n   Compiling rlsf v0.2.1\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling page_table_multiarch v0.4.0\n   Compiling allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n   Compiling axalloc v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axalloc)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/platform/aarch64_common/pl011.rs","count":1,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axhal","count":8,"raw_reports":[{"file":"modules/axhal/src/platform/aarch64_common/boot.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n","error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axhal, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axhal\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling serde v1.0.204\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling percpu v0.1.3\n   Compiling toml_edit v0.22.20\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axhal, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axhal\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling percpu v0.1.3\n   Compiling syn v2.0.70\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling toml_edit v0.22.20\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n   Compiling linkme-impl v0.3.27\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling linkme v0.3.27\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/platform/aarch64_common/pl011.rs","count":1,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axmm","count":8,"raw_reports":[{"file":"modules/axhal/src/platform/aarch64_common/boot.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n","error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axmm, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axmm\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling syn v1.0.109\n   Compiling toml_edit v0.22.20\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.10\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n   Compiling svgbobdoc v0.3.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n    Checking rlsf v0.2.1\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n    Checking allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n   Compiling percpu_macros v0.1.2\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axalloc)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axmm, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axmm\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.1\n   Compiling rlsf v0.2.1\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n   Compiling axalloc v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axalloc)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/platform/aarch64_common/pl011.rs","count":1,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axsync","count":8,"raw_reports":[{"file":"modules/axhal/src/platform/aarch64_common/boot.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n","error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axsync, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axsync\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling serde v1.0.204\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling percpu v0.1.3\n   Compiling toml_edit v0.22.20\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n   Compiling linkme-impl v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axsync, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axsync\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling serde v1.0.204\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling percpu v0.1.3\n   Compiling syn v2.0.70\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling toml_edit v0.22.20\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n   Compiling linkme-impl v0.3.27\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling linkme v0.3.27\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/platform/aarch64_common/pl011.rs","count":1,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axtask","count":8,"raw_reports":[{"file":"modules/axhal/src/platform/aarch64_common/boot.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n","error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axtask, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axtask\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling percpu v0.1.3\n   Compiling toml_edit v0.22.20\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axtask, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axtask\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling percpu v0.1.3\n   Compiling syn v2.0.70\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling toml_edit v0.22.20\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling linkme v0.3.27\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/platform/aarch64_common/pl011.rs","count":1,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"]}}]},{"user":"Byte-OS","repo":"polyhal","pkg":"example","count":6,"raw_reports":[{"file":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/macros.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unreachable statement\n   --> src/main.rs:123:5\n    |\n117 | /     loop {\n118 | |         if let Some(c) = DebugConsole::getchar() {\n119 | |             DebugConsole::putchar(c);\n120 | |         }\n121 | |     }\n    | |_____- any code following this expression is unreachable\n122 |\n123 |       log::info!(\"Run END. Shutdown successfully.\");\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: `#[warn(unreachable_code)]` on by default\n    = note: this warning originates in the macro `$crate::log` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=example, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/polyhal/example\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling scopeguard v1.2.0\n   Compiling tock-registers v0.8.1\n   Compiling lock_api v0.4.11\n   Compiling byteorder v1.5.0\n   Compiling bitflags v2.6.0\n   Compiling log v0.4.22\n   Compiling zerocopy v0.7.35\n   Compiling aarch64-cpu v9.4.0\n[2024-10-12T15:31:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:31:40Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling spin v0.9.8\n   Compiling arm_pl011 v0.1.0\n   Compiling arm_gicv2 v0.1.0\n   Compiling fdt v0.1.5\n   Compiling cfg-if v1.0.0\n   Compiling buddy_system_allocator v0.9.1\n   Compiling virtio-drivers v0.7.5\n   Compiling polyhal v0.1.3 (/home/runner/check/batch_1/Byte-OS/polyhal)\nwarning: unexpected `cfg` condition name: `c906`\n   --> /home/runner/check/batch_1/Byte-OS/polyhal/src/addr.rs:219:15\n    |\n219 |         #[cfg(c906)]\n    |               ^^^^\n    |\n    = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, `windows`\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: `#[warn(unexpected_cfgs)]` on by default\n\nwarning: unexpected `cfg` condition name: `board`\n   --> /home/runner/check/batch_1/Byte-OS/polyhal/src/addr.rs:224:15\n    |\n224 |         #[cfg(board = \"2k1000\")]\n    |               ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(board, values(\"2k1000\"))'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(board, values(\\\"2k1000\\\"))\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `board`\n   --> /home/runner/check/batch_1/Byte-OS/polyhal/src/addr.rs:240:15\n    |\n240 |         #[cfg(board = \"2k1000\")]\n    |               ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(board, values(\"2k1000\"))'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(board, values(\\\"2k1000\\\"))\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `c906`\n   --> /home/runner/check/batch_1/Byte-OS/polyhal/src/addr.rs:244:15\n    |\n244 |         #[cfg(c906)]\n    |               ^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: the feature `offset_of` has been stable since 1.77.0 and no longer requires an attribute to enable\n --> /home/runner/check/batch_1/Byte-OS/polyhal/src/lib.rs:8:12\n  |\n8 | #![feature(offset_of)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\nwarning: field `0` is never read\n  --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/percpu/mod.rs:15:19\n   |\n15 | struct PerCPUDATA([u8; PAGE_SIZE]);\n   |        ---------- ^^^^^^^^^^^^^^^\n   |        |\n   |        field in this struct\n   |\n   = note: `#[warn(dead_code)]` on by default\nhelp: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field\n   |\n15 | struct PerCPUDATA(());\n   |                   ~~\n\nwarning: `polyhal` (lib) generated 6 warnings\n   Compiling example v0.1.0 (/home/runner/check/batch_1/Byte-OS/polyhal/example)\nwarning: unreachable statement\n   --> src/main.rs:123:5\n    |\n117 | /     loop {\n118 | |         if let Some(c) = DebugConsole::getchar() {\n119 | |             DebugConsole::putchar(c);\n120 | |         }\n121 | |     }\n    | |_____- any code following this expression is unreachable\n122 |\n123 |       log::info!(\"Run END. Shutdown successfully.\");\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: `#[warn(unreachable_code)]` on by default\n    = note: this warning originates in the macro `$crate::log` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: linking with `rust-lld` failed: exit status: 1\n  |\n  = note: LC_ALL=\"C\" PATH=\"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin:/snap/bin:/home/runner/.local/bin:/opt/pipx_bin:/home/runner/.cargo/bin:/home/runner/.config/composer/vendor/bin:/usr/local/.ghcup/bin:/home/runner/.dotnet/tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin\" VSLANG=\"1033\" \"rust-lld\" \"-flavor\" \"gnu\" \"--fix-cortex-a53-843419\" \"/tmp/rustcBOlOkc/symbols.o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/example-d907036488dfe776.example.fc76498f651afcb6-cgu.0.rcgu.o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/example-d907036488dfe776.example.fc76498f651afcb6-cgu.1.rcgu.o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/example-d907036488dfe776.example.fc76498f651afcb6-cgu.2.rcgu.o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/example-d907036488dfe776.akb5dy9rebmqq3j0xs823ur96.rcgu.o\" \"--as-needed\" \"-L\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps\" \"-L\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/debug/deps\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-none/lib\" \"-Bstatic\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libvirtio_drivers-7205d20d3c85167f.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libzerocopy-00f6727730b34584.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libbyteorder-6251f93bd70992ab.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libpolyhal-bdfcbb516c1c83c9.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libarm_gicv2-9c3e5d2b8b907842.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libarm_pl011-c5b8dedabc130c76.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libaarch64_cpu-ad3948c631827945.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libtock_registers-871317267119ad1e.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libcfg_if-51d5ccf19a0009d3.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libbitflags-a5ce44a6c55cc69a.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libfdt-80c4b13ca541a733.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/liblog-fdc3a78364d41b4d.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libbuddy_system_allocator-1b5fa0b34d369ebb.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-none/lib/liballoc-dfa46a1477c2b5e1.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libspin-892e798bcf4d11e9.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/liblock_api-b34245d8f1f66b77.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libscopeguard-890219094bd4fd6e.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-none/lib/librustc_std_workspace_core-97b04805942f7790.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-none/lib/libcore-9af6731f468db4d1.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-none/lib/libcompiler_builtins-ba9ccc0c4e3e7a25.rlib\" \"-Bdynamic\" \"--eh-frame-hdr\" \"-z\" \"noexecstack\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-none/lib\" \"-o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/example-d907036488dfe776\" \"--gc-sections\"\n  = note: rust-lld: error: undefined symbol: _sbss\n          >>> referenced by mod.rs:31 (src/components/boot/mod.rs:31)\n          >>>               polyhal-bdfcbb516c1c83c9.polyhal.21a99f55058bbda5-cgu.2.rcgu.o:(polyhal::components::boot::clear_bss::h87753ff3f9dda8b0) in archive /home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libpolyhal-bdfcbb516c1c83c9.rlib\n          >>> referenced by mod.rs:31 (src/components/boot/mod.rs:31)\n          >>>               polyhal-bdfcbb516c1c83c9.polyhal.21a99f55058bbda5-cgu.2.rcgu.o:(polyhal::components::boot::clear_bss::h87753ff3f9dda8b0) in archive /home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libpolyhal-bdfcbb516c1c83c9.rlib\n          >>> referenced by mod.rs:31 (src/components/boot/mod.rs:31)\n          >>>               polyhal-bdfcbb516c1c83c9.polyhal.21a99f55058bbda5-cgu.2.rcgu.o:(polyhal::components::boot::clear_bss::h87753ff3f9dda8b0) in archive /home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libpolyhal-bdfcbb516c1c83c9.rlib\n          >>> referenced 1 more times\n          \n          rust-lld: error: undefined symbol: _ebss\n          >>> referenced by mod.rs:31 (src/components/boot/mod.rs:31)\n          >>>               polyhal-bdfcbb516c1c83c9.polyhal.21a99f55058bbda5-cgu.2.rcgu.o:(polyhal::components::boot::clear_bss::h87753ff3f9dda8b0) in archive /home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libpolyhal-bdfcbb516c1c83c9.rlib\n          >>> referenced by mod.rs:31 (src/components/boot/mod.rs:31)\n          >>>               polyhal-bdfcbb516c1c83c9.polyhal.21a99f55058bbda5-cgu.2.rcgu.o:(polyhal::components::boot::clear_bss::h87753ff3f9dda8b0) in archive /home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libpolyhal-bdfcbb516c1c83c9.rlib\n          >>> referenced by mod.rs:31 (src/components/boot/mod.rs:31)\n          >>>               polyhal-bdfcbb516c1c83c9.polyhal.21a99f55058bbda5-cgu.2.rcgu.o:(polyhal::components::boot::clear_bss::h87753ff3f9dda8b0) in archive /home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libpolyhal-bdfcbb516c1c83c9.rlib\n          >>> referenced 1 more times\n          \n\nwarning: `example` (bin \"example\") generated 1 warning\nerror: could not compile `example` (bin \"example\") due to 1 previous error; 1 warning emitted\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:31:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:31:40Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/frame.rs","count":1,"kinds":{"Clippy(Warn)":["warning: redundant closure\n --> src/frame.rs:6:15\n  |\n6 |     Lazy::new(|| LockedFrameAllocator::new());\n  |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `LockedFrameAllocator::new`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n  = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"]}},{"file":"src/main.rs","count":1,"kinds":{"Clippy(Warn)":["warning: empty `loop {}` wastes CPU cycles\n  --> src/main.rs:70:9\n   |\n70 |         loop {}\n   |         ^^^^^^^\n   |\n   = help: you should either use `panic!()` or add a call pausing or sleeping the thread to the loop body\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_loop\n   = note: `#[warn(clippy::empty_loop)]` on by default\n\n"]}},{"file":"src/pci.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unneeded `return` statement\n  --> src/pci.rs:14:94\n   |\n14 |               enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n   |  ______________________________________________________________________________________________^\n15 | |             return;\n   | |__________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n   = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n   |\n14 -             enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n15 -             return;\n14 +             enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n   |\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"mingo","count":6,"raw_reports":[{"file":"src/main.rs","count":3,"kinds":{"Clippy(Error)":["error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n","error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n","error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=mingo, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking tock-registers v0.8.1\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader)\n    Checking aarch64-cpu v9.0.0\nerror: could not compile `mingo` (bin \"kernel\") due to 4 previous errors; 1 warning emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=mingo, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling tock-registers v0.8.1\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader)\n   Compiling aarch64-cpu v9.0.0\nerror[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\nerror[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\nerror[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\nwarning: unused import: `nop`\n  --> src/cpu.rs:16:20\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |                    ^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nSome errors have detailed explanations: E0425, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `mingo` (bin \"kernel\") generated 1 warning\nerror: could not compile `mingo` (bin \"kernel\") due to 3 previous errors; 1 warning emitted\n"]}},{"file":"src/cpu.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused import: `nop`\n  --> src/cpu.rs:16:20\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |                    ^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n"]}}]},{"user":"kern-crates","repo":"linux_syscall_api","pkg":"linux_syscall_api","count":4,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/7296a14/src/arch/aarch64.rs","count":1,"kinds":{"Clippy(Error)":["error[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/7296a14/src/arch/aarch64.rs:78:5\n    |\n78  | /     asm!(\n79  | |         \"\n80  | |         // save old context (callee-saved registers)\n81  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n103 | |         options(noreturn),\n104 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=linux_syscall_api, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_7/kern-crates/linux_syscall_api\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking log v0.4.19\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.5.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#12d36f6c)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking aarch64-cpu v9.4.0\n   Compiling lock_api v0.4.12\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bit_field v0.10.2\n    Checking spin v0.5.2\n    Checking const-default v1.0.0\n    Checking lazy_static v1.4.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking rlsf v0.2.1\n    Checking spin v0.9.8\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#4ae66642)\n    Checking byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#939e6eb9)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#a19854cc)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#dca9e983)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#6923b09d)\n    Checking fdt v0.1.5\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#bb7589fe)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#4adca0d0)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#e17045e7)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#8c5083c1)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#44088f39)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#0aee1e3b)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#e3381d7b)\n    Checking either v1.11.0\n   Compiling zerocopy-derive v0.7.34\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#4cdcdd9b)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#3238ef86)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#261bd624)\n    Checking bitflags v1.3.2\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#1142d117)\n    Checking nb v1.1.0\n   Compiling axdriver v0.1.0 (https://github.com/Starry-OS/axdriver.git#a21caaac)\n    Checking rand_core v0.6.4\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#0ba32228)\n    Checking rand v0.8.5\n    Checking nb v0.1.3\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#3a6861cf)\n    Checking zero v0.1.3\n    Checking void v1.0.2\n   Compiling riscv v0.10.1\n    Checking embedded-hal v0.2.7\n    Checking xmas-elf v0.9.1\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#00c26de4)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=a3a834e#a3a834ef)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#4f70d39a)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#d00386a2)\n    Checking critical-section v1.1.2\n    Checking zerocopy v0.7.34\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#7296a141)\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 663 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (125 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.8\n    └── defmt 0.3.7\n        └── smoltcp 0.11.0\n            └── axnet 0.1.0\n                └── linux_syscall_api 0.1.0\n\nCrate:     defmt\nVersion:   0.3.7\nWarning:   yanked\nDependency tree:\ndefmt 0.3.7\n└── smoltcp 0.11.0\n    └── axnet 0.1.0\n        └── linux_syscall_api 0.1.0\n\nCrate:     defmt-macros\nVersion:   0.3.8\nWarning:   yanked\nDependency tree:\ndefmt-macros 0.3.8\n└── defmt 0.3.7\n    └── smoltcp 0.11.0\n        └── axnet 0.1.0\n            └── linux_syscall_api 0.1.0\n\nCrate:     libc\nVersion:   0.2.154\nWarning:   yanked\nDependency tree:\nlibc 0.2.154\n└── rlsf 0.2.1\n    └── allocator 0.1.0\n        └── axalloc 0.1.0\n            ├── axruntime 0.1.0\n            │   ├── linux_syscall_api 0.1.0\n            │   └── axfeat 0.1.0\n            │       └── linux_syscall_api 0.1.0\n            ├── axprocess 0.1.0\n            │   ├── linux_syscall_api 0.1.0\n            │   ├── axruntime 0.1.0\n            │   ├── axnet 0.1.0\n            │   │   └── linux_syscall_api 0.1.0\n            │   └── axfeat 0.1.0\n            ├── axmem 0.1.0\n            │   ├── linux_syscall_api 0.1.0\n            │   ├── axruntime 0.1.0\n            │   └── axprocess 0.1.0\n            ├── axhal 0.1.0\n            │   ├── linux_syscall_api 0.1.0\n            │   ├── axtask 0.1.0\n            │   │   ├── linux_syscall_api 0.1.0\n            │   │   ├── axsync 0.1.0\n            │   │   │   ├── linux_syscall_api 0.1.0\n            │   │   │   ├── axprocess 0.1.0\n            │   │   │   ├── axnet 0.1.0\n            │   │   │   ├── axfs 0.1.0\n            │   │   │   │   ├── linux_syscall_api 0.1.0\n            │   │   │   │   ├── axruntime 0.1.0\n            │   │   │   │   ├── axprocess 0.1.0\n            │   │   │   │   ├── axmem 0.1.0\n            │   │   │   │   └── axfeat 0.1.0\n            │   │   │   └── axfeat 0.1.0\n            │   │   ├── axruntime 0.1.0\n            │   │   ├── axprocess 0.1.0\n            │   │   ├── axnet 0.1.0\n            │   │   └── axfeat 0.1.0\n            │   ├── axsignal 0.1.0\n            │   │   ├── linux_syscall_api 0.1.0\n            │   │   ├── axtask 0.1.0\n            │   │   └── axprocess 0.1.0\n            │   ├── axruntime 0.1.0\n            │   ├── axprocess 0.1.0\n            │   ├── axnet 0.1.0\n            │   ├── axmem 0.1.0\n            │   ├── axfeat 0.1.0\n            │   └── axdriver 0.1.0\n            │       ├── axruntime 0.1.0\n            │       ├── axnet 0.1.0\n            │       ├── axfs 0.1.0\n            │       └── axfeat 0.1.0\n            ├── axfeat 0.1.0\n            └── axdriver 0.1.0\n\nwarning: 4 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 663,\n    \"last-commit\": \"acb7ce45817b13dd34cb32540ff18be4e1f3ba09\",\n    \"last-updated\": \"2024-10-09T00:13:59+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 125\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.82\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.36\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"defmt\",\n          \"version\": \"0.3.7\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"a22725573c1874522d6b853e12cb6c3c08cea5ff79fdc69be544087ac7080439\",\n          \"dependencies\": [\n            {\n              \"name\": \"bitflags\",\n              \"version\": \"1.3.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"defmt-macros\",\n              \"version\": \"0.3.8\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      },\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"defmt-macros\",\n          \"version\": \"0.3.8\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"00b2cc6a76c0932c749dfe6f8191040c880830aa80c07143cd1d0adb5717abd6\",\n          \"dependencies\": [\n            {\n              \"name\": \"defmt-parser\",\n              \"version\": \"0.3.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro-error\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.82\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.36\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"2.0.63\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      },\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"libc\",\n          \"version\": \"0.2.154\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"ae743338b92ff9146ce83992f766a31066a91a8c84a45e0e9f21e7cf6de6d346\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T14:53:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.19/src/lib.rs:1407:11: 1407:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.19/src/lib.rs:1410:13: 1410:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T14:53:01Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-12T14:53:08Z WARN  lockbud::callbacks] [\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n            \"first_lock_span\": \"/home/runner/.cargo/git/checkouts/axnet-13731b5ff12d66e4/2aa071b/src/smoltcp_impl/udp.rs:189:13: 189:31 (#0)\",\n            \"second_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n            \"second_lock_span\": \"/home/runner/.cargo/git/checkouts/axnet-13731b5ff12d66e4/2aa071b/src/smoltcp_impl/udp.rs:105:13: 105:32 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/git/checkouts/axnet-13731b5ff12d66e4/2aa071b/src/smoltcp_impl/udp.rs:192:13: 192:64 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      }\n    ]\n[2024-10-12T14:53:08Z WARN  lockbud::callbacks] crate axnet contains bugs: { probably: 0, possibly: 1 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-12T14:53:09Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at src/syscall_fs/imp/ctl.rs:216:18: 216:90 (#0) after dropped at src/syscall_fs/imp/ctl.rs:219:5: 219:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-12T14:53:09Z WARN  lockbud::callbacks] crate linux_syscall_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axalloc","count":2,"raw_reports":[{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axalloc/src/lib.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `GlobalAllocator`\n  --> modules/axalloc/src/lib.rs:57:5\n   |\n57 | /     pub const fn new() -> Self {\n58 | |         Self {\n59 | |             balloc: SpinNoIrq::new(DefaultByteAllocator::new()),\n60 | |             palloc: SpinNoIrq::new(BitmapPageAllocator::new()),\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n55 + impl Default for GlobalAllocator {\n56 +     fn default() -> Self {\n57 +         Self::new()\n58 +     }\n59 + }\n   |\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axlog","count":1,"raw_reports":[{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Audit","Mirai","Lockbud(Probably)","Lockbud(Possibly)","Unformatted"]}