{
  "data": [
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "sparreal-kernel",
      "count": 23,
      "raw_reports": [
        {
          "file": "crates/sparreal-kernel/src/platform/mod.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Clippy(Error)": [
              "error[E0412]: cannot find type `BootRegion` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:113:26\n    |\n113 | pub fn regsions() -> Vec<BootRegion> {\n    |                          ^^^^^^^^^^ not found in this scope\n    |\nhelp: you might be missing a type parameter\n    |\n113 | pub fn regsions<BootRegion>() -> Vec<BootRegion> {\n    |                ++++++++++++\n\n",
              "error[E0412]: cannot find type `ArrayVec` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:142:26\n    |\n142 | pub fn phys_memorys() -> ArrayVec<Range<PhysAddr>, 12> {\n    |                          ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this struct\n    |\n1   + use arrayvec::ArrayVec;\n    |\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:117:14\n    |\n117 |     ret.push(BootRegion::new(\n    |              ^^^^^^^^^^ use of undeclared type `BootRegion`\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:122:9\n    |\n122 |         RegionKind::Other,\n    |         ^^^^^^^^^^ use of undeclared type `RegionKind`\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:130:18\n    |\n130 |         ret.push(BootRegion::new(\n    |                  ^^^^^^^^^^ use of undeclared type `BootRegion`\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:135:13\n    |\n135 |             RegionKind::Other,\n    |             ^^^^^^^^^^ use of undeclared type `RegionKind`\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/globals/percpu.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved imports `crate::platform_if::MMUImpl`, `crate::platform_if::RegionKind`\n  --> crates/sparreal-kernel/src/globals/percpu.rs:15:19\n   |\n15 |     platform_if::{MMUImpl, RegionKind},\n   |                   ^^^^^^^  ^^^^^^^^^^ no `RegionKind` in `platform_if`\n   |                   |\n   |                   no `MMUImpl` in `platform_if`\n\n",
              "error[E0432]: unresolved imports `crate::platform_if::MMUImpl`, `crate::platform_if::RegionKind`\n  --> crates/sparreal-kernel/src/globals/percpu.rs:15:19\n   |\n15 |     platform_if::{MMUImpl, RegionKind},\n   |                   ^^^^^^^  ^^^^^^^^^^ no `RegionKind` in `platform_if`\n   |                   |\n   |                   no `MMUImpl` in `platform_if`\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/mem/mod.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `mmu`\n  --> crates/sparreal-kernel/src/mem/mod.rs:11:5\n   |\n11 | use mmu::RegionKind;\n   |     ^^^ use of unresolved module or unlinked crate `mmu`\n   |\n   = help: if you wanted to use a crate named `mmu`, use `cargo add mmu` to add it to your `Cargo.toml`\n\n",
              "error[E0599]: no method named `as_usize` found for struct `mem::addr::Phys` in the current scope\n   --> crates/sparreal-kernel/src/mem/mod.rs:137:38\n    |\n137 |         NonNull::new_unchecked(paddr.as_usize() as *mut u8)\n    |                                      ^^^^^^^^ method not found in `Phys<u8>`\n    |\n   ::: crates/sparreal-kernel/src/mem/addr.rs:69:9\n    |\n69  |         pub struct $name<T>($t, core::marker::PhantomData<T>);\n    |         ------------------------------------------------------ method `as_usize` not found for this struct\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/mem/region.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `crate::platform_if::MMUImpl`\n --> crates/sparreal-kernel/src/mem/region.rs:4:26\n  |\n4 | use crate::platform_if::{MMUImpl, PlatformImpl};\n  |                          ^^^^^^^ no `MMUImpl` in `platform_if`\n\n",
              "error[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/region.rs:6:13\n   |\n6  | use super::{mmu::BootRegion, once::OnceStatic};\n   |             ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/platform/fdt.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved imports `crate::platform_if::RegionKind`, `crate::platform_if::is_mmu_enabled`\n  --> crates/sparreal-kernel/src/platform/fdt.rs:10:26\n   |\n10 | use crate::platform_if::{RegionKind, is_mmu_enabled};\n   |                          ^^^^^^^^^^  ^^^^^^^^^^^^^^ no `is_mmu_enabled` in `platform_if`\n   |                          |\n   |                          no `RegionKind` in `platform_if`\n\n",
              "error[E0432]: unresolved imports `crate::platform_if::RegionKind`, `crate::platform_if::is_mmu_enabled`\n  --> crates/sparreal-kernel/src/platform/fdt.rs:10:26\n   |\n10 | use crate::platform_if::{RegionKind, is_mmu_enabled};\n   |                          ^^^^^^^^^^  ^^^^^^^^^^^^^^ no `is_mmu_enabled` in `platform_if`\n   |                          |\n   |                          no `RegionKind` in `platform_if`\n\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-kernel, checker=Clippy\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel\n// cmd=cargo clippy --target aarch64-unknown-none  --no-deps\n// timestamp=2025-04-02 4:28:25.753500643 +08:00:00\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\nerror: could not compile `sparreal-kernel` (lib) due to 14 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-kernel, checker=Lockbud\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-04-02 4:30:03.999501175 +08:00:00\n[2025-04-01T20:29:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-04-01T20:29:47Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\nerror[E0432]: unresolved imports `crate::platform_if::MMUImpl`, `crate::platform_if::RegionKind`\n  --> crates/sparreal-kernel/src/globals/percpu.rs:15:19\n   |\n15 |     platform_if::{MMUImpl, RegionKind},\n   |                   ^^^^^^^  ^^^^^^^^^^ no `RegionKind` in `platform_if`\n   |                   |\n   |                   no `MMUImpl` in `platform_if`\n\nerror[E0432]: unresolved import `mmu`\n  --> crates/sparreal-kernel/src/mem/mod.rs:11:5\n   |\n11 | use mmu::RegionKind;\n   |     ^^^ use of unresolved module or unlinked crate `mmu`\n   |\n   = help: if you wanted to use a crate named `mmu`, use `cargo add mmu` to add it to your `Cargo.toml`\n\nerror[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/cache.rs:7:33\n   |\n7  | use super::{PhysAddr, VirtAddr, mmu::RegionKind};\n   |                                 ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::platform_if::MMUImpl`\n --> crates/sparreal-kernel/src/mem/region.rs:4:26\n  |\n4 | use crate::platform_if::{MMUImpl, PlatformImpl};\n  |                          ^^^^^^^ no `MMUImpl` in `platform_if`\n\nerror[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/region.rs:6:13\n   |\n6  | use super::{mmu::BootRegion, once::OnceStatic};\n   |             ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::platform_if::RegionKind`, `crate::platform_if::is_mmu_enabled`\n  --> crates/sparreal-kernel/src/platform/fdt.rs:10:26\n   |\n10 | use crate::platform_if::{RegionKind, is_mmu_enabled};\n   |                          ^^^^^^^^^^  ^^^^^^^^^^^^^^ no `is_mmu_enabled` in `platform_if`\n   |                          |\n   |                          no `RegionKind` in `platform_if`\n\nerror[E0412]: cannot find type `BootRegion` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:113:26\n    |\n113 | pub fn regsions() -> Vec<BootRegion> {\n    |                          ^^^^^^^^^^ not found in this scope\n    |\nhelp: you might be missing a type parameter\n    |\n113 | pub fn regsions<BootRegion>() -> Vec<BootRegion> {\n    |                ++++++++++++\n\nerror[E0412]: cannot find type `ArrayVec` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:142:26\n    |\n142 | pub fn phys_memorys() -> ArrayVec<Range<PhysAddr>, 12> {\n    |                          ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this struct\n    |\n1   + use arrayvec::ArrayVec;\n    |\n\nerror[E0425]: cannot find function `set_mmu_enabled` in this scope\n  --> crates/sparreal-kernel/src/boot/mod.rs:29:5\n   |\n29 |     set_mmu_enabled();\n   |     ^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0599]: no method named `as_usize` found for struct `mem::addr::Phys` in the current scope\n   --> crates/sparreal-kernel/src/mem/mod.rs:137:38\n    |\n137 |         NonNull::new_unchecked(paddr.as_usize() as *mut u8)\n    |                                      ^^^^^^^^ method not found in `Phys<u8>`\n    |\n   ::: crates/sparreal-kernel/src/mem/addr.rs:69:9\n    |\n69  |         pub struct $name<T>($t, core::marker::PhantomData<T>);\n    |         ------------------------------------------------------ method `as_usize` not found for this struct\n\nerror[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:117:14\n    |\n117 |     ret.push(BootRegion::new(\n    |              ^^^^^^^^^^ use of undeclared type `BootRegion`\n\nerror[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:122:9\n    |\n122 |         RegionKind::Other,\n    |         ^^^^^^^^^^ use of undeclared type `RegionKind`\n\nerror[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:130:18\n    |\n130 |         ret.push(BootRegion::new(\n    |                  ^^^^^^^^^^ use of undeclared type `BootRegion`\n\nerror[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:135:13\n    |\n135 |             RegionKind::Other,\n    |             ^^^^^^^^^^ use of undeclared type `RegionKind`\n\nSome errors have detailed explanations: E0412, E0425, E0432, E0433, E0599.\nFor more information about an error, try `rustc --explain E0412`.\nerror: could not compile `sparreal-kernel` (lib) due to 14 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-kernel, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-04-02 4:28:49.086087139 +08:00:00\n    Building sparreal-kernel v0.9.1 (current)\nerror: running cargo-doc on crate 'sparreal-kernel' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate sparreal-kernel v0.9.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel --features mmu &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sparreal-kernel v0.9.1\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=sparreal-kernel, checker=Outdated\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-04-02 4:30:24.83753894 +08:00:00\n\nName    Project  Compat  Latest  Kind    Platform\n----    -------  ------  ------  ----    --------\nrdrive  0.3.3    ---     0.4.0   Normal  ---\nspin    0.9.8    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=sparreal-kernel, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-04-02 4:28:49.836738767 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building sparreal-kernel v0.9.1 (current)\nerror: running cargo-doc on crate 'sparreal-kernel' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate sparreal-kernel v0.9.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel --features mmu &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sparreal-kernel v0.9.1\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/boot/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error[E0425]: cannot find function `set_mmu_enabled` in this scope\n  --> crates/sparreal-kernel/src/boot/mod.rs:29:5\n   |\n29 |     set_mmu_enabled();\n   |     ^^^^^^^^^^^^^^^ not found in this scope\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/mem/cache.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/cache.rs:7:33\n   |\n7  | use super::{PhysAddr, VirtAddr, mmu::RegionKind};\n   |                                 ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "src/globals/percpu.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel/src/globals/percpu.rs (original lines from 82 to 89)\n-        (*PER_CPU.get()).insert(\n-            cpu,\n-            PerCPU {\n-                irq_chips: Default::default(),\n-                timer: Default::default(),\n-                stack: stack_bottom..stack_bottom + kstack_size(),\n-            },\n-        );\n+        (*PER_CPU.get()).insert(cpu, PerCPU {\n+            irq_chips: Default::default(),\n+            timer: Default::default(),\n+            stack: stack_bottom..stack_bottom + kstack_size(),\n+        });\n"
            ]
          }
        },
        {
          "file": "src/irq/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel/src/irq/mod.rs (original lines from 63 to 70)\n-        globals.irq_chips.0.insert(\n-            id,\n-            Chip {\n-                device,\n-                mutex: Mutex::new(()),\n-                handlers: UnsafeCell::new(Default::default()),\n-            },\n-        );\n+        globals.irq_chips.0.insert(id, Chip {\n+            device,\n+            mutex: Mutex::new(()),\n+            handlers: UnsafeCell::new(Default::default()),\n+        });\n"
            ]
          }
        }
      ]
    },
    {
      "user": "oscomp",
      "repo": "starry-next",
      "pkg": "starry-core",
      "count": 16,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Error)": [
              "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:106:27\n    |\n106 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
              "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:175:42\n    |\n175 |             entry = sym crate::platform::rust_entry,\n    |                                          ^^^^^^^^^^ not found in `crate::platform`\n\n",
              "error[E0425]: cannot find value `rust_entry_secondary` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:207:42\n    |\n207 |             entry = sym crate::platform::rust_entry_secondary,\n    |                                          ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/gic.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\n",
              "error[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\n",
              "error[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/pl011.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0425]: cannot find value `UART_PADDR` in module `axconfig::devices`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/pl011.rs:9:52\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::devices::UART_PADDR);\n  |                                                    ^^^^^^^^^^ not found in `axconfig::devices`\n\n",
              "error[E0425]: cannot find value `UART_IRQ_NUM` in module `crate::platform::irq`\n  --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/pl011.rs:61:50\n   |\n61 |     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n   |                                                  ^^^^^^^^^^^^ not found in `crate::platform::irq`\n   |\nhelp: consider importing this constant\n   |\n3  + use crate::platform::aarch64_common::gic::UART_IRQ_NUM;\n   |\nhelp: if you import `UART_IRQ_NUM`, refer to it directly\n   |\n61 -     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n61 +     crate::irq::set_enable(UART_IRQ_NUM, true);\n   |\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/psci.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `axconfig::devices::PSCI_METHOD`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/psci.rs:5:5\n  |\n5 | use axconfig::devices::PSCI_METHOD;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `PSCI_METHOD` in `devices`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_6/oscomp/starry-next/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── starry-core 0.1.0\n│   ├── starry-api 0.1.0\n│   │   └── starry 0.1.0\n│   └── starry 0.1.0\n└── kernel-elf-parser 0.3.2\n    └── starry-core 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   └── axhal 0.1.0\n│       ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   └── starry 0.1.0\n│       ├── starry-api 0.1.0\n│       ├── starry 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   ├── starry 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   │   ├── axfeat 0.1.0\n│       │   │   │   │   │   ├── starry 0.1.0\n│       │   │   │   │   │   └── arceos_posix_api 0.1.0\n│       │   │   │   │   │       ├── starry-core 0.1.0\n│       │   │   │   │   │       └── starry-api 0.1.0\n│       │   │   │   │   └── arceos_posix_api 0.1.0\n│       │   │   │   ├── axfeat 0.1.0\n│       │   │   │   └── arceos_posix_api 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   │   ├── starry-core 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   ├── axfeat 0.1.0\n│       │   │   │   └── arceos_posix_api 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── arceos_posix_api 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmm 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   └── axruntime 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   └── axfeat 0.1.0\n│       └── arceos_posix_api 0.1.0\n├── riscv 0.12.1\n│   ├── page_table_multiarch 0.5.3\n│   │   ├── axmm 0.1.0\n│   │   └── axhal 0.1.0\n│   └── axhal 0.1.0\n└── macro_rules_attribute 0.2.0\n    └── starry-api 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 750,\n    \"last-commit\": \"f1688a2f9a55b7e9a6226d053fd43099f1849f5f\",\n    \"last-updated\": \"2025-04-05T16:51:10+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 187\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=starry-core, checker=Audit\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\n// cmd=cargo audit\n// timestamp=2025-04-07 4:28:45.04312862 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 750 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (187 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 1 allowed warning found\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=starry-core, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\n// cmd=cargo clippy --target aarch64-unknown-none  --no-deps\n// timestamp=2025-04-07 4:27:14.77996112 +08:00:00\n    Checking axhal v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\nerror: could not compile `axhal` (lib) due to 7 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=starry-core, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-04-07 4:29:46.651900322 +08:00:00\n[2025-04-06T20:28:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-04-06T20:28:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling axfs_devfs v0.1.1\n   Compiling axfs_ramfs v0.1.1\nerror[E0432]: unresolved import `axconfig::devices::PSCI_METHOD`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/psci.rs:5:5\n  |\n5 | use axconfig::devices::PSCI_METHOD;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `PSCI_METHOD` in `devices`\n\nerror[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:106:27\n    |\n106 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:175:42\n    |\n175 |             entry = sym crate::platform::rust_entry,\n    |                                          ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `rust_entry_secondary` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:207:42\n    |\n207 |             entry = sym crate::platform::rust_entry_secondary,\n    |                                          ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `UART_PADDR` in module `axconfig::devices`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/pl011.rs:9:52\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::devices::UART_PADDR);\n  |                                                    ^^^^^^^^^^ not found in `axconfig::devices`\n\nerror[E0425]: cannot find value `UART_IRQ_NUM` in module `crate::platform::irq`\n  --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/pl011.rs:61:50\n   |\n61 |     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n   |                                                  ^^^^^^^^^^^^ not found in `crate::platform::irq`\n   |\nhelp: consider importing this constant\n   |\n3  + use crate::platform::aarch64_common::gic::UART_IRQ_NUM;\n   |\nhelp: if you import `UART_IRQ_NUM`, refer to it directly\n   |\n61 -     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n61 +     crate::irq::set_enable(UART_IRQ_NUM, true);\n   |\n\nSome errors have detailed explanations: E0425, E0432.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 7 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=starry-core, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-04-07 4:28:19.937410578 +08:00:00\n    Building starry-core v0.1.0 (current)\nerror: running cargo-doc on crate 'starry-core' failed with output:\n-----\n    Checking log v0.4.21\n    Checking bitflags v2.9.0\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking tock-registers v0.9.0\n   Compiling lock_api v0.4.12\n    Checking kernel_guard v0.1.2\n    Checking aarch64-cpu v10.0.0\n    Checking tock-registers v0.8.1\n    Checking byteorder v1.5.0\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking scopeguard v1.2.0\n    Checking bitmap-allocator v0.2.0\n    Checking rlsf v0.2.1\n    Checking kspin v0.1.0\n   Compiling percpu v0.2.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking lazyinit v0.2.1\n    Checking spin v0.9.8\n    Checking linkme v0.3.32\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking arm_pl011 v0.1.0\n    Checking dw_apb_uart v0.1.0\n    Checking arm_gicv2 v0.1.0\n    Checking static_assertions v1.1.0\n    Checking handler_table v0.1.2\n    Checking int_ratio v0.1.1\n    Checking zerocopy v0.7.35\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking bitmaps v3.2.1\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking timer_list v0.1.0\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n   Compiling heapless v0.7.17\n    Checking hash32 v0.2.1\n    Checking axfs_vfs v0.1.1\n    Checking virtio-drivers v0.7.4\n    Checking stable_deref_trait v1.2.0\n    Checking cpumask v0.1.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling num-traits v0.2.19\n    Checking axio v0.1.1\n    Checking bitflags v1.3.2\n    Checking managed v0.8.0\n    Checking axfs_devfs v0.1.1\n    Checking axdriver_virtio v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_pci v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axfs_ramfs v0.1.1\n    Checking axns v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking cap_access v0.1.0\n    Checking page_table_entry v0.5.3\n    Checking memory_set v0.3.2\n    Checking ctor_bare v0.2.1\n    Checking chrono v0.4.40\n    Checking page_table_multiarch v0.5.3\nerror[E0432]: unresolved import `axconfig::devices::PSCI_METHOD`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/psci.rs:5:5\n  |\n5 | use axconfig::devices::PSCI_METHOD;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `PSCI_METHOD` in `devices`\n\nerror[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:106:27\n    |\n106 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:175:42\n    |\n175 |             entry = sym crate::platform::rust_entry,\n    |                                          ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `rust_entry_secondary` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:207:42\n    |\n207 |             entry = sym crate::platform::rust_entry_secondary,\n    |                                          ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `UART_PADDR` in module `axconfig::devices`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/pl011.rs:9:52\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::devices::UART_PADDR);\n  |                                                    ^^^^^^^^^^ not found in `axconfig::devices`\n\nerror[E0425]: cannot find value `UART_IRQ_NUM` in module `crate::platform::irq`\n  --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/pl011.rs:61:50\n   |\n61 |     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n   |                                                  ^^^^^^^^^^^^ not found in `crate::platform::irq`\n   |\nhelp: consider importing this constant\n   |\n3  + use crate::platform::aarch64_common::gic::UART_IRQ_NUM;\n   |\nhelp: if you import `UART_IRQ_NUM`, refer to it directly\n   |\n61 -     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n61 +     crate::irq::set_enable(UART_IRQ_NUM, true);\n   |\n\n   Compiling arceos_posix_api v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\nSome errors have detailed explanations: E0425, E0432.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 7 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate starry-core v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/core &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate starry-core v0.1.0\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=starry-core, checker=Outdated\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-04-07 4:30:51.767491942 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nspin      0.9.8    ---     0.10.0  Normal  ---\nxmas-elf  0.9.1    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=starry-core, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-04-07 4:28:24.61339621 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building starry-core v0.1.0 (current)\nerror: running cargo-doc on crate 'starry-core' failed with output:\n-----\n    Checking log v0.4.21\n    Checking bitflags v2.9.0\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking tock-registers v0.9.0\n   Compiling lock_api v0.4.12\n    Checking kernel_guard v0.1.2\n    Checking aarch64-cpu v10.0.0\n    Checking tock-registers v0.8.1\n    Checking byteorder v1.5.0\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking scopeguard v1.2.0\n    Checking bitmap-allocator v0.2.0\n    Checking rlsf v0.2.1\n    Checking kspin v0.1.0\n   Compiling percpu v0.2.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking lazyinit v0.2.1\n    Checking spin v0.9.8\n    Checking linkme v0.3.32\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking arm_pl011 v0.1.0\n    Checking dw_apb_uart v0.1.0\n    Checking arm_gicv2 v0.1.0\n    Checking static_assertions v1.1.0\n    Checking handler_table v0.1.2\n    Checking int_ratio v0.1.1\n    Checking zerocopy v0.7.35\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking bitmaps v3.2.1\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking timer_list v0.1.0\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n   Compiling heapless v0.7.17\n    Checking hash32 v0.2.1\n    Checking axfs_vfs v0.1.1\n    Checking virtio-drivers v0.7.4\n    Checking stable_deref_trait v1.2.0\n    Checking cpumask v0.1.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling num-traits v0.2.19\n    Checking axio v0.1.1\n    Checking bitflags v1.3.2\n    Checking managed v0.8.0\n    Checking axfs_devfs v0.1.1\n    Checking axdriver_virtio v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_pci v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axfs_ramfs v0.1.1\n    Checking axns v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking cap_access v0.1.0\n    Checking page_table_entry v0.5.3\n    Checking memory_set v0.3.2\n    Checking ctor_bare v0.2.1\n    Checking chrono v0.4.40\n    Checking page_table_multiarch v0.5.3\nerror[E0432]: unresolved import `axconfig::devices::PSCI_METHOD`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/psci.rs:5:5\n  |\n5 | use axconfig::devices::PSCI_METHOD;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `PSCI_METHOD` in `devices`\n\nerror[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:106:27\n    |\n106 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:175:42\n    |\n175 |             entry = sym crate::platform::rust_entry,\n    |                                          ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `rust_entry_secondary` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:207:42\n    |\n207 |             entry = sym crate::platform::rust_entry_secondary,\n    |                                          ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `UART_PADDR` in module `axconfig::devices`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/pl011.rs:9:52\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::devices::UART_PADDR);\n  |                                                    ^^^^^^^^^^ not found in `axconfig::devices`\n\nerror[E0425]: cannot find value `UART_IRQ_NUM` in module `crate::platform::irq`\n  --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/pl011.rs:61:50\n   |\n61 |     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n   |                                                  ^^^^^^^^^^^^ not found in `crate::platform::irq`\n   |\nhelp: consider importing this constant\n   |\n3  + use crate::platform::aarch64_common::gic::UART_IRQ_NUM;\n   |\nhelp: if you import `UART_IRQ_NUM`, refer to it directly\n   |\n61 -     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n61 +     crate::irq::set_enable(UART_IRQ_NUM, true);\n   |\n\n   Compiling arceos_posix_api v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\nSome errors have detailed explanations: E0425, E0432.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 7 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate starry-core v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/core &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate starry-core v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "oscomp",
      "repo": "starry-next",
      "pkg": "starry-api",
      "count": 15,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Error)": [
              "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:106:27\n    |\n106 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
              "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:175:42\n    |\n175 |             entry = sym crate::platform::rust_entry,\n    |                                          ^^^^^^^^^^ not found in `crate::platform`\n\n",
              "error[E0425]: cannot find value `rust_entry_secondary` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:207:42\n    |\n207 |             entry = sym crate::platform::rust_entry_secondary,\n    |                                          ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/gic.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\n",
              "error[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\n",
              "error[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/pl011.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0425]: cannot find value `UART_PADDR` in module `axconfig::devices`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/pl011.rs:9:52\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::devices::UART_PADDR);\n  |                                                    ^^^^^^^^^^ not found in `axconfig::devices`\n\n",
              "error[E0425]: cannot find value `UART_IRQ_NUM` in module `crate::platform::irq`\n  --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/pl011.rs:61:50\n   |\n61 |     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n   |                                                  ^^^^^^^^^^^^ not found in `crate::platform::irq`\n   |\nhelp: consider importing this constant\n   |\n3  + use crate::platform::aarch64_common::gic::UART_IRQ_NUM;\n   |\nhelp: if you import `UART_IRQ_NUM`, refer to it directly\n   |\n61 -     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n61 +     crate::irq::set_enable(UART_IRQ_NUM, true);\n   |\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/psci.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `axconfig::devices::PSCI_METHOD`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/psci.rs:5:5\n  |\n5 | use axconfig::devices::PSCI_METHOD;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `PSCI_METHOD` in `devices`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_6/oscomp/starry-next/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── starry-core 0.1.0\n│   ├── starry-api 0.1.0\n│   │   └── starry 0.1.0\n│   └── starry 0.1.0\n└── kernel-elf-parser 0.3.2\n    └── starry-core 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   └── axhal 0.1.0\n│       ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   └── starry 0.1.0\n│       ├── starry-api 0.1.0\n│       ├── starry 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   ├── starry 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   │   ├── axfeat 0.1.0\n│       │   │   │   │   │   ├── starry 0.1.0\n│       │   │   │   │   │   └── arceos_posix_api 0.1.0\n│       │   │   │   │   │       ├── starry-core 0.1.0\n│       │   │   │   │   │       └── starry-api 0.1.0\n│       │   │   │   │   └── arceos_posix_api 0.1.0\n│       │   │   │   ├── axfeat 0.1.0\n│       │   │   │   └── arceos_posix_api 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   │   ├── starry-core 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   ├── axfeat 0.1.0\n│       │   │   │   └── arceos_posix_api 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── arceos_posix_api 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmm 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   └── axruntime 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   └── axfeat 0.1.0\n│       └── arceos_posix_api 0.1.0\n├── riscv 0.12.1\n│   ├── page_table_multiarch 0.5.3\n│   │   ├── axmm 0.1.0\n│   │   └── axhal 0.1.0\n│   └── axhal 0.1.0\n└── macro_rules_attribute 0.2.0\n    └── starry-api 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 750,\n    \"last-commit\": \"f1688a2f9a55b7e9a6226d053fd43099f1849f5f\",\n    \"last-updated\": \"2025-04-05T16:51:10+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 187\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=starry-api, checker=Audit\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\n// cmd=cargo audit\n// timestamp=2025-04-07 4:28:42.104979895 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 750 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (187 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 1 allowed warning found\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=starry-api, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\n// cmd=cargo clippy --target aarch64-unknown-none  --no-deps\n// timestamp=2025-04-07 4:27:11.962916513 +08:00:00\n    Checking axhal v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking flatten_objects v0.2.3\n    Checking lazy_static v1.5.0\n    Checking kernel-elf-parser v0.3.2\n    Checking numeric-enum-macro v0.2.0\n    Checking macro_rules_attribute v0.2.0\n    Checking num_enum v0.7.3\nerror: could not compile `axhal` (lib) due to 7 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=starry-api, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-04-07 4:29:43.001522073 +08:00:00\n[2025-04-06T20:28:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-04-06T20:28:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n   Compiling axdriver_virtio v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axdriver_pci v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling stable_deref_trait v1.2.0\n   Compiling heapless v0.7.17\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling num-traits v0.2.19\nerror[E0432]: unresolved import `axconfig::devices::PSCI_METHOD`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/psci.rs:5:5\n  |\n5 | use axconfig::devices::PSCI_METHOD;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `PSCI_METHOD` in `devices`\n\nerror[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:106:27\n    |\n106 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:175:42\n    |\n175 |             entry = sym crate::platform::rust_entry,\n    |                                          ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `rust_entry_secondary` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:207:42\n    |\n207 |             entry = sym crate::platform::rust_entry_secondary,\n    |                                          ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `UART_PADDR` in module `axconfig::devices`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/pl011.rs:9:52\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::devices::UART_PADDR);\n  |                                                    ^^^^^^^^^^ not found in `axconfig::devices`\n\nerror[E0425]: cannot find value `UART_IRQ_NUM` in module `crate::platform::irq`\n  --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/pl011.rs:61:50\n   |\n61 |     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n   |                                                  ^^^^^^^^^^^^ not found in `crate::platform::irq`\n   |\nhelp: consider importing this constant\n   |\n3  + use crate::platform::aarch64_common::gic::UART_IRQ_NUM;\n   |\nhelp: if you import `UART_IRQ_NUM`, refer to it directly\n   |\n61 -     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n61 +     crate::irq::set_enable(UART_IRQ_NUM, true);\n   |\n\n   Compiling axio v0.1.1\n   Compiling bitflags v1.3.2\n   Compiling managed v0.8.0\nSome errors have detailed explanations: E0425, E0432.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 7 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=starry-api, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-04-07 4:27:40.582119887 +08:00:00\n    Building starry-api v0.1.0 (current)\nerror: running cargo-doc on crate 'starry-api' failed with output:\n-----\n    Checking log v0.4.21\n    Checking bitflags v2.9.0\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking tock-registers v0.9.0\n   Compiling lock_api v0.4.12\n    Checking kernel_guard v0.1.2\n    Checking aarch64-cpu v10.0.0\n    Checking bit_field v0.10.2\n    Checking byteorder v1.5.0\n    Checking tock-registers v0.8.1\n    Checking scopeguard v1.2.0\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.2.0\n    Checking rlsf v0.2.1\n    Checking kspin v0.1.0\n   Compiling percpu v0.2.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking lazyinit v0.2.1\n    Checking spin v0.9.8\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking linkme v0.3.32\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking dw_apb_uart v0.1.0\n    Checking arm_pl011 v0.1.0\n    Checking arm_gicv2 v0.1.0\n    Checking static_assertions v1.1.0\n    Checking int_ratio v0.1.1\n    Checking handler_table v0.1.2\n    Checking zerocopy v0.7.35\n    Checking bitmaps v3.2.1\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking timer_list v0.1.0\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n   Compiling heapless v0.7.17\n    Checking hash32 v0.2.1\n    Checking axfs_vfs v0.1.1\n    Checking cpumask v0.1.0\n    Checking virtio-drivers v0.7.4\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling num-traits v0.2.19\n    Checking axio v0.1.1\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking axfs_devfs v0.1.1\n    Checking axdriver_pci v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_virtio v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axfs_ramfs v0.1.1\n    Checking axns v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking cap_access v0.1.0\n    Checking memory_set v0.3.2\n    Checking page_table_entry v0.5.3\n    Checking ctor_bare v0.2.1\n    Checking chrono v0.4.40\n    Checking page_table_multiarch v0.5.3\nerror[E0432]: unresolved import `axconfig::devices::PSCI_METHOD`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/psci.rs:5:5\n  |\n5 | use axconfig::devices::PSCI_METHOD;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `PSCI_METHOD` in `devices`\n\nerror[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:106:27\n    |\n106 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:175:42\n    |\n175 |             entry = sym crate::platform::rust_entry,\n    |                                          ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `rust_entry_secondary` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:207:42\n    |\n207 |             entry = sym crate::platform::rust_entry_secondary,\n    |                                          ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `UART_PADDR` in module `axconfig::devices`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/pl011.rs:9:52\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::devices::UART_PADDR);\n  |                                                    ^^^^^^^^^^ not found in `axconfig::devices`\n\nerror[E0425]: cannot find value `UART_IRQ_NUM` in module `crate::platform::irq`\n  --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/pl011.rs:61:50\n   |\n61 |     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n   |                                                  ^^^^^^^^^^^^ not found in `crate::platform::irq`\n   |\nhelp: consider importing this constant\n   |\n3  + use crate::platform::aarch64_common::gic::UART_IRQ_NUM;\n   |\nhelp: if you import `UART_IRQ_NUM`, refer to it directly\n   |\n61 -     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n61 +     crate::irq::set_enable(UART_IRQ_NUM, true);\n   |\n\n   Compiling arceos_posix_api v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking zero v0.1.3\nSome errors have detailed explanations: E0425, E0432.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 7 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate starry-api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/api &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate starry-api v0.1.0\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=starry-api, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-04-07 4:27:45.339299035 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building starry-api v0.1.0 (current)\nerror: running cargo-doc on crate 'starry-api' failed with output:\n-----\n    Checking log v0.4.21\n    Checking bitflags v2.9.0\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking tock-registers v0.9.0\n   Compiling lock_api v0.4.12\n    Checking kernel_guard v0.1.2\n    Checking aarch64-cpu v10.0.0\n    Checking bit_field v0.10.2\n    Checking byteorder v1.5.0\n    Checking tock-registers v0.8.1\n    Checking scopeguard v1.2.0\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.2.0\n    Checking rlsf v0.2.1\n    Checking kspin v0.1.0\n   Compiling percpu v0.2.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking lazyinit v0.2.1\n    Checking spin v0.9.8\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking linkme v0.3.32\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking dw_apb_uart v0.1.0\n    Checking arm_pl011 v0.1.0\n    Checking arm_gicv2 v0.1.0\n    Checking static_assertions v1.1.0\n    Checking int_ratio v0.1.1\n    Checking handler_table v0.1.2\n    Checking zerocopy v0.7.35\n    Checking bitmaps v3.2.1\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking timer_list v0.1.0\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n   Compiling heapless v0.7.17\n    Checking hash32 v0.2.1\n    Checking axfs_vfs v0.1.1\n    Checking cpumask v0.1.0\n    Checking virtio-drivers v0.7.4\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling num-traits v0.2.19\n    Checking axio v0.1.1\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking axfs_devfs v0.1.1\n    Checking axdriver_pci v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_virtio v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axfs_ramfs v0.1.1\n    Checking axns v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking cap_access v0.1.0\n    Checking memory_set v0.3.2\n    Checking page_table_entry v0.5.3\n    Checking ctor_bare v0.2.1\n    Checking chrono v0.4.40\n    Checking page_table_multiarch v0.5.3\nerror[E0432]: unresolved import `axconfig::devices::PSCI_METHOD`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/psci.rs:5:5\n  |\n5 | use axconfig::devices::PSCI_METHOD;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `PSCI_METHOD` in `devices`\n\nerror[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:106:27\n    |\n106 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:175:42\n    |\n175 |             entry = sym crate::platform::rust_entry,\n    |                                          ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `rust_entry_secondary` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:207:42\n    |\n207 |             entry = sym crate::platform::rust_entry_secondary,\n    |                                          ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `UART_PADDR` in module `axconfig::devices`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/pl011.rs:9:52\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::devices::UART_PADDR);\n  |                                                    ^^^^^^^^^^ not found in `axconfig::devices`\n\nerror[E0425]: cannot find value `UART_IRQ_NUM` in module `crate::platform::irq`\n  --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/pl011.rs:61:50\n   |\n61 |     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n   |                                                  ^^^^^^^^^^^^ not found in `crate::platform::irq`\n   |\nhelp: consider importing this constant\n   |\n3  + use crate::platform::aarch64_common::gic::UART_IRQ_NUM;\n   |\nhelp: if you import `UART_IRQ_NUM`, refer to it directly\n   |\n61 -     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n61 +     crate::irq::set_enable(UART_IRQ_NUM, true);\n   |\n\n   Compiling arceos_posix_api v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking zero v0.1.3\nSome errors have detailed explanations: E0425, E0432.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 7 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate starry-api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/api &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate starry-api v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "oscomp",
      "repo": "starry-next",
      "pkg": "starry",
      "count": 13,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Error)": [
              "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:106:27\n    |\n106 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
              "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:175:42\n    |\n175 |             entry = sym crate::platform::rust_entry,\n    |                                          ^^^^^^^^^^ not found in `crate::platform`\n\n",
              "error[E0425]: cannot find value `rust_entry_secondary` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:207:42\n    |\n207 |             entry = sym crate::platform::rust_entry_secondary,\n    |                                          ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/gic.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\n",
              "error[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\n",
              "error[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/pl011.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0425]: cannot find value `UART_PADDR` in module `axconfig::devices`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/pl011.rs:9:52\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::devices::UART_PADDR);\n  |                                                    ^^^^^^^^^^ not found in `axconfig::devices`\n\n",
              "error[E0425]: cannot find value `UART_IRQ_NUM` in module `crate::platform::irq`\n  --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/pl011.rs:61:50\n   |\n61 |     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n   |                                                  ^^^^^^^^^^^^ not found in `crate::platform::irq`\n   |\nhelp: consider importing this constant\n   |\n3  + use crate::platform::aarch64_common::gic::UART_IRQ_NUM;\n   |\nhelp: if you import `UART_IRQ_NUM`, refer to it directly\n   |\n61 -     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n61 +     crate::irq::set_enable(UART_IRQ_NUM, true);\n   |\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/psci.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `axconfig::devices::PSCI_METHOD`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/psci.rs:5:5\n  |\n5 | use axconfig::devices::PSCI_METHOD;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `PSCI_METHOD` in `devices`\n\n"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=starry, checker=Audit\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next\n// cmd=cargo audit\n// timestamp=2025-04-07 4:28:38.938668925 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 750 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (187 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 1 allowed warning found\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=starry, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next\n// cmd=cargo clippy --target aarch64-unknown-none  --no-deps\n// timestamp=2025-04-07 4:26:56.758629086 +08:00:00\n    Checking log v0.4.21\n    Checking bitflags v2.9.0\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking tock-registers v0.9.0\n   Compiling lock_api v0.4.12\n    Checking kernel_guard v0.1.2\n    Checking aarch64-cpu v10.0.0\n    Checking scopeguard v1.2.0\n    Checking const-default v1.0.0\n    Checking bit_field v0.10.2\n    Checking tock-registers v0.8.1\n    Checking byteorder v1.5.0\n    Checking rlsf v0.2.1\n    Checking bitmap-allocator v0.2.0\n    Checking kspin v0.1.0\n   Compiling percpu v0.2.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking lazyinit v0.2.1\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking spin v0.9.8\n    Checking linkme v0.3.32\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking arm_pl011 v0.1.0\n    Checking dw_apb_uart v0.1.0\n    Checking arm_gicv2 v0.1.0\n    Checking static_assertions v1.1.0\n    Checking handler_table v0.1.2\n    Checking int_ratio v0.1.1\n    Checking zerocopy v0.7.35\n    Checking bitmaps v3.2.1\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking timer_list v0.1.0\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n   Compiling heapless v0.7.17\n    Checking hash32 v0.2.1\n    Checking axfs_vfs v0.1.1\n    Checking cpumask v0.1.0\n    Checking virtio-drivers v0.7.4\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling num-traits v0.2.19\n    Checking axio v0.1.1\n    Checking bitflags v1.3.2\n    Checking managed v0.8.0\n    Checking axfs_ramfs v0.1.1\n    Checking axdriver_virtio v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_pci v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axfs_devfs v0.1.1\n    Checking axns v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n    Checking cap_access v0.1.0\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking memory_set v0.3.2\n    Checking ctor_bare v0.2.1\n    Checking chrono v0.4.40\n    Checking page_table_entry v0.5.3 (https://github.com/Mivik/page_table_multiarch.git?rev=19ededd#19ededdb)\n    Checking page_table_multiarch v0.5.3 (https://github.com/Mivik/page_table_multiarch.git?rev=19ededd#19ededdb)\n    Checking zero v0.1.3\n    Checking xmas-elf v0.9.1\n   Compiling arceos_posix_api v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\nerror: could not compile `axhal` (lib) due to 7 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=starry, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-04-07 4:28:45.477604852 +08:00:00\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling log v0.4.21\n   Compiling bitflags v2.9.0\n   Compiling utf8parse v0.2.2\n[2025-04-06T20:28:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-04-06T20:28:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling anstyle-parse v0.2.6\n   Compiling anstyle v1.0.10\n   Compiling cfg-if v1.0.0\n   Compiling anstyle-query v1.1.2\n   Compiling autocfg v1.4.0\n   Compiling colorchoice v1.0.3\n   Compiling is_terminal_polyfill v1.70.1\n   Compiling heck v0.5.0\n   Compiling anstream v0.6.18\n   Compiling hashbrown v0.15.2\n   Compiling clap_lex v0.7.4\n   Compiling quote v1.0.40\n   Compiling axerrno v0.1.0\n   Compiling syn v2.0.100\n   Compiling equivalent v1.0.2\n   Compiling strsim v0.11.1\n   Compiling indexmap v2.8.0\n   Compiling toml_datetime v0.6.8\n   Compiling clap_builder v4.5.32\n   Compiling winnow v0.7.4\n   Compiling syn v1.0.109\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n   Compiling memory_addr v0.3.2\n   Compiling toml_edit v0.22.24\n   Compiling lock_api v0.4.12\n   Compiling unicode-width v0.1.14\n   Compiling tock-registers v0.9.0\n   Compiling base64 v0.13.1\n   Compiling aarch64-cpu v10.0.0\n   Compiling svgbobdoc v0.3.0\n   Compiling linkme-impl v0.3.32\n   Compiling const-default v1.0.0\n   Compiling scopeguard v1.2.0\n   Compiling bit_field v0.10.2\n   Compiling byteorder v1.5.0\n   Compiling tock-registers v0.8.1\n   Compiling bitmap-allocator v0.2.0\n   Compiling rlsf v0.2.1\n   Compiling percpu v0.2.0\n   Compiling allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n   Compiling spin v0.9.8\n   Compiling semver v1.0.26\n   Compiling lazyinit v0.2.1\n   Compiling arm_pl011 v0.1.0\n   Compiling dw_apb_uart v0.1.0\n   Compiling arm_gicv2 v0.1.0\n   Compiling int_ratio v0.1.1\n   Compiling handler_table v0.1.2\n   Compiling static_assertions v1.1.0\n   Compiling clap_derive v4.5.32\n   Compiling crate_interface v0.1.4\n   Compiling kernel_guard v0.1.2\n   Compiling kspin v0.1.0\n   Compiling percpu_macros v0.2.0\n   Compiling page_table_entry v0.5.3 (https://github.com/Mivik/page_table_multiarch.git?rev=19ededd#19ededdb)\n   Compiling page_table_multiarch v0.5.3 (https://github.com/Mivik/page_table_multiarch.git?rev=19ededd#19ededdb)\n   Compiling linkme v0.3.32\n   Compiling axalloc v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n   Compiling axlog v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n   Compiling zerocopy-derive v0.7.35\n   Compiling bitmaps v3.2.1\n   Compiling axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling rustc_version v0.4.1\n   Compiling linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n   Compiling glob v0.3.2\n   Compiling scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n   Compiling heapless v0.7.17\n   Compiling cpumask v0.1.0\n   Compiling zerocopy v0.7.35\n   Compiling clap v4.5.32\n   Compiling axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axconfig-gen v0.1.0\n   Compiling axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling clang-sys v1.8.1\n   Compiling prettyplease v0.2.31\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n   Compiling rustix v0.38.44\n   Compiling libc v0.2.171\n   Compiling virtio-drivers v0.7.4\n   Compiling timer_list v0.1.0\n   Compiling hash32 v0.2.1\n   Compiling axfs_vfs v0.1.1\n   Compiling num-traits v0.2.19\n   Compiling axconfig-gen-macros v0.1.0\n   Compiling regex-syntax v0.8.5\n   Compiling linux-raw-sys v0.4.15\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#26484166)\n   Compiling memchr v2.7.4\nerror[E0432]: unresolved import `axconfig::devices::PSCI_METHOD`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/psci.rs:5:5\n  |\n5 | use axconfig::devices::PSCI_METHOD;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `PSCI_METHOD` in `devices`\n\nerror[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:106:27\n    |\n106 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:175:42\n    |\n175 |             entry = sym crate::platform::rust_entry,\n    |                                          ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `rust_entry_secondary` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/boot.rs:207:42\n    |\n207 |             entry = sym crate::platform::rust_entry_secondary,\n    |                                          ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `UART_PADDR` in module `axconfig::devices`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/pl011.rs:9:52\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::devices::UART_PADDR);\n  |                                                    ^^^^^^^^^^ not found in `axconfig::devices`\n\nerror[E0425]: cannot find value `UART_IRQ_NUM` in module `crate::platform::irq`\n  --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/2648416/modules/axhal/src/platform/aarch64_common/pl011.rs:61:50\n   |\n61 |     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n   |                                                  ^^^^^^^^^^^^ not found in `crate::platform::irq`\n   |\nhelp: consider importing this constant\n   |\n3  + use crate::platform::aarch64_common::gic::UART_IRQ_NUM;\n   |\nhelp: if you import `UART_IRQ_NUM`, refer to it directly\n   |\n61 -     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n61 +     crate::irq::set_enable(UART_IRQ_NUM, true);\n   |\n\nSome errors have detailed explanations: E0425, E0432.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 7 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── starry-core 0.1.0\n│   ├── starry-api 0.1.0\n│   │   └── starry 0.1.0\n│   └── starry 0.1.0\n└── kernel-elf-parser 0.3.2\n    └── starry-core 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   └── axhal 0.1.0\n│       ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   └── starry 0.1.0\n│       ├── starry-api 0.1.0\n│       ├── starry 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   ├── starry 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   │   ├── axfeat 0.1.0\n│       │   │   │   │   │   ├── starry 0.1.0\n│       │   │   │   │   │   └── arceos_posix_api 0.1.0\n│       │   │   │   │   │       ├── starry-core 0.1.0\n│       │   │   │   │   │       └── starry-api 0.1.0\n│       │   │   │   │   └── arceos_posix_api 0.1.0\n│       │   │   │   ├── axfeat 0.1.0\n│       │   │   │   └── arceos_posix_api 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   │   ├── starry-core 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   ├── axfeat 0.1.0\n│       │   │   │   └── arceos_posix_api 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── arceos_posix_api 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmm 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   └── axruntime 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   └── axfeat 0.1.0\n│       └── arceos_posix_api 0.1.0\n├── riscv 0.12.1\n│   ├── page_table_multiarch 0.5.3\n│   │   ├── axmm 0.1.0\n│   │   └── axhal 0.1.0\n│   └── axhal 0.1.0\n└── macro_rules_attribute 0.2.0\n    └── starry-api 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 750,\n    \"last-commit\": \"f1688a2f9a55b7e9a6226d053fd43099f1849f5f\",\n    \"last-updated\": \"2025-04-05T16:51:10+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 187\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        }
      ]
    },
    {
      "user": "oscomp",
      "repo": "starry-next",
      "pkg": "user_lib",
      "count": 8,
      "raw_reports": [
        {
          "file": "src/arch/mod.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/mod.rs (original lines from 3 to 6)\n-#[cfg(target_arch = \"x86_64\")]\n-mod x86_64;\n-#[cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))]\n-mod riscv;\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/mod.rs (original lines from 9 to 9)\n+#[cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))]\n+mod riscv;\n+#[cfg(target_arch = \"x86_64\")]\n+mod x86_64;\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/mod.rs (original lines from 12 to 15)\n-#[cfg(target_arch = \"x86_64\")]\n-pub use x86_64::*;\n-#[cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))]\n-pub use riscv::*;\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/mod.rs (original lines from 18 to 18)\n+#[cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))]\n+pub use riscv::*;\n+#[cfg(target_arch = \"x86_64\")]\n+pub use x86_64::*;\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=user_lib, checker=SemverChecks\n// toolchain=nightly-2025-01-18, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-04-07 4:28:36.774296801 +08:00:00\n    Building user_lib v0.1.0 (current)\n       Built [   0.244s] (current)\n     Parsing user_lib v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: user_lib not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=user_lib, checker=SemverChecks\ntoolchain=nightly-2025-01-18, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-04-07 4:28:37.322065651 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building user_lib v0.1.0 (current)\n       Built [   0.244s] (current)\n     Parsing user_lib v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: user_lib not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "src/bin/usertests.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: deref which would be done by auto-deref\n  --> src/bin/usertests.rs:31:21\n   |\n31 |             if exec(*test) == -1 {\n   |                     ^^^^^ help: try: `test`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref\n   = note: `#[warn(clippy::explicit_auto_deref)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "src/time.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/time.rs (original lines from 53 to 57)\n-    if nanosleep(&tv) != 0 {\n-        tv.sec as _\n-    } else {\n-        0\n-    }\n+    if nanosleep(&tv) != 0 { tv.sec as _ } else { 0 }\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "page-table-arm",
      "count": 3,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=page-table-arm, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/page-table-arm\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-04-02 4:28:40.14991485 +08:00:00\n    Building page-table-arm v0.1.1 (current)\nerror: running cargo-doc on crate 'page-table-arm' failed with output:\n-----\n    Checking tock-registers v0.9.0\n    Checking bitflags v2.9.0\n    Checking log v0.4.27\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate page-table-arm v0.1.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/page-table-arm &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate page-table-arm v0.1.1\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=page-table-arm, checker=Outdated\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/page-table-arm\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-04-02 4:30:21.643420862 +08:00:00\n\nName        Project  Compat  Latest  Kind         Platform\n----        -------  ------  ------  ----         --------\nenv_logger  0.11.7   0.11.8  0.11.8  Development  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=page-table-arm, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/page-table-arm\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-04-02 4:28:40.583400266 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building page-table-arm v0.1.1 (current)\nerror: running cargo-doc on crate 'page-table-arm' failed with output:\n-----\n    Checking tock-registers v0.9.0\n    Checking bitflags v2.9.0\n    Checking log v0.4.27\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate page-table-arm v0.1.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/page-table-arm &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate page-table-arm v0.1.1\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "sparreal-rt",
      "count": 3,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-rt, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-04-02 4:29:02.834051138 +08:00:00\n    Building sparreal-rt v0.9.1 (current)\nerror: running cargo-doc on crate 'sparreal-rt' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n    Checking rdif-base v0.1.4\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `rdif-base` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate sparreal-rt v0.9.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt --features default,early-print,vm &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sparreal-rt v0.9.1\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=sparreal-rt, checker=Outdated\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-04-02 4:30:28.765552771 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\npage-table-arm  0.1.0    0.1.1   0.1.1   Normal  cfg(target_arch = \"aarch64\")\nsmccc           0.1.1    ---     0.2.0   Normal  cfg(target_arch = \"aarch64\")\nspin            0.9.8    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=sparreal-rt, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-04-02 4:29:03.686682326 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building sparreal-rt v0.9.1 (current)\nerror: running cargo-doc on crate 'sparreal-rt' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n    Checking rdif-base v0.1.4\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `rdif-base` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate sparreal-rt v0.9.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt --features default,early-print,vm &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sparreal-rt v0.9.1\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "bare-test",
      "count": 2,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=bare-test, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-04-02 4:28:32.700852794 +08:00:00\n    Building bare-test v0.4.1 (current)\nerror: running cargo-doc on crate 'bare-test' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n    Checking rdif-base v0.1.4\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `rdif-base` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate bare-test v0.4.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test --features default,rt,sparreal-rt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate bare-test v0.4.1\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=bare-test, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-04-02 4:28:33.798486256 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building bare-test v0.4.1 (current)\nerror: running cargo-doc on crate 'bare-test' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n    Checking rdif-base v0.1.4\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `rdif-base` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate bare-test v0.4.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test --features default,rt,sparreal-rt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate bare-test v0.4.1\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "simple_test",
      "count": 2,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=simple_test, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-04-02 4:28:44.422139806 +08:00:00\n    Building simple_test v0.9.1 (current)\nerror: running cargo-doc on crate 'simple_test' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling quote v1.0.40\n   Compiling syn v2.0.100\n   Compiling bare-test-macros v0.2.0 (/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test-macros)\n   Compiling simple_test v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test)\n Documenting simple_test v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not document `simple_test`\n\n-----\n\nerror: failed to build rustdoc for crate simple_test v0.9.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate simple_test v0.9.1\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=simple_test, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-04-02 4:28:48.31404203 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building simple_test v0.9.1 (current)\nerror: running cargo-doc on crate 'simple_test' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling quote v1.0.40\n   Compiling syn v2.0.100\n   Compiling bare-test-macros v0.2.0 (/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test-macros)\n   Compiling simple_test v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test)\n Documenting simple_test v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not document `simple_test`\n\n-----\n\nerror: failed to build rustdoc for crate simple_test v0.9.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate simple_test v0.9.1\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "fdt-parser",
      "pkg": "fdt-parser",
      "count": 1,
      "raw_reports": [
        {
          "file": "[rap] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Rapx": [
              "pkg=fdt-parser, checker=Rapx\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/fdt-parser/fdt-parser\ncmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \ntimestamp=2025-04-06 4:27:05.707923443 +08:00:00\n\nwarning: Dangling pointer detected.\n  --> fdt-parser/src/fdt.rs:55:1\n   |\n55 | / pub fn memory_reservation_block(&self) -> impl Iterator<Item = MemoryRegion> + '_ {\n56 | |         let mut reader = self.reader(self.header.off_mem_rsvmap.get() as _);\n...  |\n66 | |         })\n67 | |     }\n   | |_____- Dangling pointer detected.\n   |\nOver visited: DefId(0:174 ~ fdt_parser[63d2]::fdt::{impl#1}::get_meta_parent)\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "sparreal-macros",
      "count": 1,
      "raw_reports": [
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=sparreal-macros, checker=Outdated\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-macros\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-04-02 4:30:26.435753519 +08:00:00\n\nName     Project  Compat   Latest   Kind    Platform\n----     -------  ------   ------   ----    --------\ndarling  0.20.10  0.20.11  0.20.11  Normal  ---\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "xtask",
      "count": 1,
      "raw_reports": [
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=xtask, checker=Outdated\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/xtask\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-04-02 4:30:29.548083363 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nclap  4.5.32   4.5.35  4.5.35  Normal  cfg(not(target_os = \"none\"))\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}