{
  "data": [
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "sparreal-kernel",
      "count": 25,
      "raw_reports": [
        {
          "file": "crates/sparreal-kernel/src/platform/mod.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Clippy(Error)": [
              "error[E0412]: cannot find type `BootRegion` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:113:26\n    |\n113 | pub fn regsions() -> Vec<BootRegion> {\n    |                          ^^^^^^^^^^ not found in this scope\n    |\nhelp: you might be missing a type parameter\n    |\n113 | pub fn regsions<BootRegion>() -> Vec<BootRegion> {\n    |                ++++++++++++\n\n",
              "error[E0412]: cannot find type `ArrayVec` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:142:26\n    |\n142 | pub fn phys_memorys() -> ArrayVec<Range<PhysAddr>, 12> {\n    |                          ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this struct\n    |\n1   + use arrayvec::ArrayVec;\n    |\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:117:14\n    |\n117 |     ret.push(BootRegion::new(\n    |              ^^^^^^^^^^ use of undeclared type `BootRegion`\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:122:9\n    |\n122 |         RegionKind::Other,\n    |         ^^^^^^^^^^ use of undeclared type `RegionKind`\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:130:18\n    |\n130 |         ret.push(BootRegion::new(\n    |                  ^^^^^^^^^^ use of undeclared type `BootRegion`\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:135:13\n    |\n135 |             RegionKind::Other,\n    |             ^^^^^^^^^^ use of undeclared type `RegionKind`\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/boot/mod.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error: `#[repr(align(...))]` is not supported on function items\n  --> crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n   |\nhelp: use `#[align(...)]` instead\n  --> crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n\n",
              "error[E0425]: cannot find function `set_mmu_enabled` in this scope\n  --> crates/sparreal-kernel/src/boot/mod.rs:29:5\n   |\n29 |     set_mmu_enabled();\n   |     ^^^^^^^^^^^^^^^ not found in this scope\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/globals/percpu.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved imports `crate::platform_if::MMUImpl`, `crate::platform_if::RegionKind`\n  --> crates/sparreal-kernel/src/globals/percpu.rs:15:19\n   |\n15 |     platform_if::{MMUImpl, RegionKind},\n   |                   ^^^^^^^  ^^^^^^^^^^ no `RegionKind` in `platform_if`\n   |                   |\n   |                   no `MMUImpl` in `platform_if`\n\n",
              "error[E0432]: unresolved imports `crate::platform_if::MMUImpl`, `crate::platform_if::RegionKind`\n  --> crates/sparreal-kernel/src/globals/percpu.rs:15:19\n   |\n15 |     platform_if::{MMUImpl, RegionKind},\n   |                   ^^^^^^^  ^^^^^^^^^^ no `RegionKind` in `platform_if`\n   |                   |\n   |                   no `MMUImpl` in `platform_if`\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/mem/mod.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `mmu`\n  --> crates/sparreal-kernel/src/mem/mod.rs:11:5\n   |\n11 | use mmu::RegionKind;\n   |     ^^^ use of unresolved module or unlinked crate `mmu`\n   |\n   = help: if you wanted to use a crate named `mmu`, use `cargo add mmu` to add it to your `Cargo.toml`\n\n",
              "error[E0599]: no method named `as_usize` found for struct `mem::addr::Phys` in the current scope\n   --> crates/sparreal-kernel/src/mem/mod.rs:137:38\n    |\n137 |         NonNull::new_unchecked(paddr.as_usize() as *mut u8)\n    |                                      ^^^^^^^^ method not found in `mem::addr::Phys<u8>`\n    |\n   ::: crates/sparreal-kernel/src/mem/addr.rs:69:9\n    |\n69  |         pub struct $name<T>($t, core::marker::PhantomData<T>);\n    |         ------------------------------------------------------ method `as_usize` not found for this struct\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/mem/region.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `crate::platform_if::MMUImpl`\n --> crates/sparreal-kernel/src/mem/region.rs:4:26\n  |\n4 | use crate::platform_if::{MMUImpl, PlatformImpl};\n  |                          ^^^^^^^ no `MMUImpl` in `platform_if`\n\n",
              "error[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/region.rs:6:13\n   |\n6  | use super::{mmu::BootRegion, once::OnceStatic};\n   |             ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/platform/fdt.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved imports `crate::platform_if::RegionKind`, `crate::platform_if::is_mmu_enabled`\n  --> crates/sparreal-kernel/src/platform/fdt.rs:10:26\n   |\n10 | use crate::platform_if::{RegionKind, is_mmu_enabled};\n   |                          ^^^^^^^^^^  ^^^^^^^^^^^^^^ no `is_mmu_enabled` in `platform_if`\n   |                          |\n   |                          no `RegionKind` in `platform_if`\n\n",
              "error[E0432]: unresolved imports `crate::platform_if::RegionKind`, `crate::platform_if::is_mmu_enabled`\n  --> crates/sparreal-kernel/src/platform/fdt.rs:10:26\n   |\n10 | use crate::platform_if::{RegionKind, is_mmu_enabled};\n   |                          ^^^^^^^^^^  ^^^^^^^^^^^^^^ no `is_mmu_enabled` in `platform_if`\n   |                          |\n   |                          no `RegionKind` in `platform_if`\n\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-kernel, checker=Clippy\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel\n// cmd=cargo clippy --target aarch64-unknown-none  --no-deps\n// timestamp=2025-06-28 11:59:41.68752279 +08:00:00\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-macros)\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel)\nerror: could not compile `sparreal-kernel` (lib) due to 15 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-kernel, checker=Lockbud\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-06-28 12:01:37.58366639 +08:00:00\n[2025-06-28T04:01:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:01:21Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling sparreal-kernel v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel)\nerror[E0432]: unresolved imports `crate::platform_if::MMUImpl`, `crate::platform_if::RegionKind`\n  --> crates/sparreal-kernel/src/globals/percpu.rs:15:19\n   |\n15 |     platform_if::{MMUImpl, RegionKind},\n   |                   ^^^^^^^  ^^^^^^^^^^ no `RegionKind` in `platform_if`\n   |                   |\n   |                   no `MMUImpl` in `platform_if`\n\nerror[E0432]: unresolved import `mmu`\n  --> crates/sparreal-kernel/src/mem/mod.rs:11:5\n   |\n11 | use mmu::RegionKind;\n   |     ^^^ use of unresolved module or unlinked crate `mmu`\n   |\n   = help: if you wanted to use a crate named `mmu`, use `cargo add mmu` to add it to your `Cargo.toml`\n\nerror[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/cache.rs:7:33\n   |\n7  | use super::{PhysAddr, VirtAddr, mmu::RegionKind};\n   |                                 ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::platform_if::MMUImpl`\n --> crates/sparreal-kernel/src/mem/region.rs:4:26\n  |\n4 | use crate::platform_if::{MMUImpl, PlatformImpl};\n  |                          ^^^^^^^ no `MMUImpl` in `platform_if`\n\nerror[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/region.rs:6:13\n   |\n6  | use super::{mmu::BootRegion, once::OnceStatic};\n   |             ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::platform_if::RegionKind`, `crate::platform_if::is_mmu_enabled`\n  --> crates/sparreal-kernel/src/platform/fdt.rs:10:26\n   |\n10 | use crate::platform_if::{RegionKind, is_mmu_enabled};\n   |                          ^^^^^^^^^^  ^^^^^^^^^^^^^^ no `is_mmu_enabled` in `platform_if`\n   |                          |\n   |                          no `RegionKind` in `platform_if`\n\nerror[E0412]: cannot find type `BootRegion` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:113:26\n    |\n113 | pub fn regsions() -> Vec<BootRegion> {\n    |                          ^^^^^^^^^^ not found in this scope\n    |\nhelp: you might be missing a type parameter\n    |\n113 | pub fn regsions<BootRegion>() -> Vec<BootRegion> {\n    |                ++++++++++++\n\nerror[E0412]: cannot find type `ArrayVec` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:142:26\n    |\n142 | pub fn phys_memorys() -> ArrayVec<Range<PhysAddr>, 12> {\n    |                          ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this struct\n    |\n1   + use arrayvec::ArrayVec;\n    |\n\nerror[E0425]: cannot find function `set_mmu_enabled` in this scope\n  --> crates/sparreal-kernel/src/boot/mod.rs:29:5\n   |\n29 |     set_mmu_enabled();\n   |     ^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0599]: no method named `as_usize` found for struct `mem::addr::Phys` in the current scope\n   --> crates/sparreal-kernel/src/mem/mod.rs:137:38\n    |\n137 |         NonNull::new_unchecked(paddr.as_usize() as *mut u8)\n    |                                      ^^^^^^^^ method not found in `Phys<u8>`\n    |\n   ::: crates/sparreal-kernel/src/mem/addr.rs:69:9\n    |\n69  |         pub struct $name<T>($t, core::marker::PhantomData<T>);\n    |         ------------------------------------------------------ method `as_usize` not found for this struct\n\nerror[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:117:14\n    |\n117 |     ret.push(BootRegion::new(\n    |              ^^^^^^^^^^ use of undeclared type `BootRegion`\n\nerror[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:122:9\n    |\n122 |         RegionKind::Other,\n    |         ^^^^^^^^^^ use of undeclared type `RegionKind`\n\nerror[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:130:18\n    |\n130 |         ret.push(BootRegion::new(\n    |                  ^^^^^^^^^^ use of undeclared type `BootRegion`\n\nerror[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:135:13\n    |\n135 |             RegionKind::Other,\n    |             ^^^^^^^^^^ use of undeclared type `RegionKind`\n\nSome errors have detailed explanations: E0412, E0425, E0432, E0433, E0599.\nFor more information about an error, try `rustc --explain E0412`.\nerror: could not compile `sparreal-kernel` (lib) due to 14 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-kernel, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-06-28 12:00:19.658943728 +08:00:00\n    Building sparreal-kernel v0.9.1 (current)\nerror: running cargo-doc on crate 'sparreal-kernel' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\n   Compiling thiserror v2.0.12\n   Compiling strsim v0.11.1\n   Compiling ident_case v1.0.1\n    Checking rdif-base v0.1.4\n   Compiling fnv v1.0.7\n   Compiling rust_decimal v1.37.2\n   Compiling anyhow v1.0.98\n   Compiling lock_api v0.4.13\n   Compiling quote v1.0.40\n   Compiling num-traits v0.2.19\n    Checking spin v0.9.8\n   Compiling syn v2.0.104\n    Checking arrayvec v0.7.6\n    Checking log v0.4.27\n    Checking bytemuck v1.23.1\n    Checking rdif-timer v0.1.3\n    Checking rdif-power v0.1.0\n    Checking rdif-intc v0.2.0\n    Checking rgb v0.8.50\n    Checking bitflags v2.9.1\n    Checking fdt-parser v0.4.17\n    Checking utf8-width v0.1.7\n    Checking ansi_rgb v0.2.0\n    Checking lazy_static v1.5.0\n    Checking buddy_system_allocator v0.11.0\n    Checking dma-api v0.3.0\n    Checking memory_addr v0.3.2\n    Checking pasts v0.14.3\n    Checking byte-unit v5.1.6\n   Compiling darling_core v0.20.11\n   Compiling abi-singleton v0.3.0\n   Compiling rdrive-macro-utils v0.2.1\n   Compiling thiserror-impl v2.0.12\n   Compiling darling_macro v0.20.11\n   Compiling darling v0.20.11\n    Checking rdrive v0.3.3\n    Checking page-table-generic v0.5.3\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-macros)\n Documenting sparreal-kernel v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel)\nerror: `#[repr(align(...))]` is not supported on function items\n  --> /home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n   |\nhelp: use `#[align(...)]` instead\n  --> /home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n\nerror: could not document `sparreal-kernel`\n\n-----\n\nerror: failed to build rustdoc for crate sparreal-kernel v0.9.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel --features mmu &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sparreal-kernel v0.9.1\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-kernel, checker=Udeps\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \n// timestamp=2025-06-28 12:04:00.881057856 +08:00:00\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-macros)\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel)\nerror[E0432]: unresolved imports `crate::platform_if::MMUImpl`, `crate::platform_if::RegionKind`\n  --> crates/sparreal-kernel/src/globals/percpu.rs:15:19\n   |\n15 |     platform_if::{MMUImpl, RegionKind},\n   |                   ^^^^^^^  ^^^^^^^^^^ no `RegionKind` in `platform_if`\n   |                   |\n   |                   no `MMUImpl` in `platform_if`\n\nerror[E0432]: unresolved import `mmu`\n  --> crates/sparreal-kernel/src/mem/mod.rs:11:5\n   |\n11 | use mmu::RegionKind;\n   |     ^^^ use of unresolved module or unlinked crate `mmu`\n   |\n   = help: if you wanted to use a crate named `mmu`, use `cargo add mmu` to add it to your `Cargo.toml`\n\nerror[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/cache.rs:7:33\n   |\n7  | use super::{PhysAddr, VirtAddr, mmu::RegionKind};\n   |                                 ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::platform_if::MMUImpl`\n --> crates/sparreal-kernel/src/mem/region.rs:4:26\n  |\n4 | use crate::platform_if::{MMUImpl, PlatformImpl};\n  |                          ^^^^^^^ no `MMUImpl` in `platform_if`\n\nerror[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/region.rs:6:13\n   |\n6  | use super::{mmu::BootRegion, once::OnceStatic};\n   |             ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::platform_if::RegionKind`, `crate::platform_if::is_mmu_enabled`\n  --> crates/sparreal-kernel/src/platform/fdt.rs:10:26\n   |\n10 | use crate::platform_if::{RegionKind, is_mmu_enabled};\n   |                          ^^^^^^^^^^  ^^^^^^^^^^^^^^ no `is_mmu_enabled` in `platform_if`\n   |                          |\n   |                          no `RegionKind` in `platform_if`\n\nerror[E0412]: cannot find type `BootRegion` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:113:26\n    |\n113 | pub fn regsions() -> Vec<BootRegion> {\n    |                          ^^^^^^^^^^ not found in this scope\n    |\nhelp: you might be missing a type parameter\n    |\n113 | pub fn regsions<BootRegion>() -> Vec<BootRegion> {\n    |                ++++++++++++\n\nerror[E0412]: cannot find type `ArrayVec` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:142:26\n    |\n142 | pub fn phys_memorys() -> ArrayVec<Range<PhysAddr>, 12> {\n    |                          ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this struct\n    |\n1   + use arrayvec::ArrayVec;\n    |\n\nerror: `#[repr(align(...))]` is not supported on function items\n  --> crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n   |\nhelp: use `#[align(...)]` instead\n  --> crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n\nerror[E0425]: cannot find function `set_mmu_enabled` in this scope\n  --> crates/sparreal-kernel/src/boot/mod.rs:29:5\n   |\n29 |     set_mmu_enabled();\n   |     ^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0599]: no method named `as_usize` found for struct `Phys` in the current scope\n   --> crates/sparreal-kernel/src/mem/mod.rs:137:38\n    |\n137 |         NonNull::new_unchecked(paddr.as_usize() as *mut u8)\n    |                                      ^^^^^^^^ method not found in `Phys<u8>`\n    |\n   ::: crates/sparreal-kernel/src/mem/addr.rs:69:9\n    |\n69  |         pub struct $name<T>($t, core::marker::PhantomData<T>);\n    |         ------------------------------------------------------ method `as_usize` not found for this struct\n\nerror[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:117:14\n    |\n117 |     ret.push(BootRegion::new(\n    |              ^^^^^^^^^^ use of undeclared type `BootRegion`\n\nerror[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:122:9\n    |\n122 |         RegionKind::Other,\n    |         ^^^^^^^^^^ use of undeclared type `RegionKind`\n\nerror[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:130:18\n    |\n130 |         ret.push(BootRegion::new(\n    |                  ^^^^^^^^^^ use of undeclared type `BootRegion`\n\nerror[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:135:13\n    |\n135 |             RegionKind::Other,\n    |             ^^^^^^^^^^ use of undeclared type `RegionKind`\n\nSome errors have detailed explanations: E0412, E0425, E0432, E0433, E0599.\nFor more information about an error, try `rustc --explain E0412`.\nerror: could not compile `sparreal-kernel` (lib) due to 15 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:01:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:01:21Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=sparreal-kernel, checker=Udeps\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \ntimestamp=2025-06-28 12:04:01.435431919 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-macros)\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel)\nerror[E0432]: unresolved imports `crate::platform_if::MMUImpl`, `crate::platform_if::RegionKind`\n  --> crates/sparreal-kernel/src/globals/percpu.rs:15:19\n   |\n15 |     platform_if::{MMUImpl, RegionKind},\n   |                   ^^^^^^^  ^^^^^^^^^^ no `RegionKind` in `platform_if`\n   |                   |\n   |                   no `MMUImpl` in `platform_if`\n\nerror[E0432]: unresolved import `mmu`\n  --> crates/sparreal-kernel/src/mem/mod.rs:11:5\n   |\n11 | use mmu::RegionKind;\n   |     ^^^ use of unresolved module or unlinked crate `mmu`\n   |\n   = help: if you wanted to use a crate named `mmu`, use `cargo add mmu` to add it to your `Cargo.toml`\n\nerror[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/cache.rs:7:33\n   |\n7  | use super::{PhysAddr, VirtAddr, mmu::RegionKind};\n   |                                 ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::platform_if::MMUImpl`\n --> crates/sparreal-kernel/src/mem/region.rs:4:26\n  |\n4 | use crate::platform_if::{MMUImpl, PlatformImpl};\n  |                          ^^^^^^^ no `MMUImpl` in `platform_if`\n\nerror[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/region.rs:6:13\n   |\n6  | use super::{mmu::BootRegion, once::OnceStatic};\n   |             ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::platform_if::RegionKind`, `crate::platform_if::is_mmu_enabled`\n  --> crates/sparreal-kernel/src/platform/fdt.rs:10:26\n   |\n10 | use crate::platform_if::{RegionKind, is_mmu_enabled};\n   |                          ^^^^^^^^^^  ^^^^^^^^^^^^^^ no `is_mmu_enabled` in `platform_if`\n   |                          |\n   |                          no `RegionKind` in `platform_if`\n\nerror[E0412]: cannot find type `BootRegion` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:113:26\n    |\n113 | pub fn regsions() -> Vec<BootRegion> {\n    |                          ^^^^^^^^^^ not found in this scope\n    |\nhelp: you might be missing a type parameter\n    |\n113 | pub fn regsions<BootRegion>() -> Vec<BootRegion> {\n    |                ++++++++++++\n\nerror[E0412]: cannot find type `ArrayVec` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:142:26\n    |\n142 | pub fn phys_memorys() -> ArrayVec<Range<PhysAddr>, 12> {\n    |                          ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this struct\n    |\n1   + use arrayvec::ArrayVec;\n    |\n\nerror: `#[repr(align(...))]` is not supported on function items\n  --> crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n   |\nhelp: use `#[align(...)]` instead\n  --> crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n\nerror[E0425]: cannot find function `set_mmu_enabled` in this scope\n  --> crates/sparreal-kernel/src/boot/mod.rs:29:5\n   |\n29 |     set_mmu_enabled();\n   |     ^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0599]: no method named `as_usize` found for struct `Phys` in the current scope\n   --> crates/sparreal-kernel/src/mem/mod.rs:137:38\n    |\n137 |         NonNull::new_unchecked(paddr.as_usize() as *mut u8)\n    |                                      ^^^^^^^^ method not found in `Phys<u8>`\n    |\n   ::: crates/sparreal-kernel/src/mem/addr.rs:69:9\n    |\n69  |         pub struct $name<T>($t, core::marker::PhantomData<T>);\n    |         ------------------------------------------------------ method `as_usize` not found for this struct\n\nerror[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:117:14\n    |\n117 |     ret.push(BootRegion::new(\n    |              ^^^^^^^^^^ use of undeclared type `BootRegion`\n\nerror[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:122:9\n    |\n122 |         RegionKind::Other,\n    |         ^^^^^^^^^^ use of undeclared type `RegionKind`\n\nerror[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:130:18\n    |\n130 |         ret.push(BootRegion::new(\n    |                  ^^^^^^^^^^ use of undeclared type `BootRegion`\n\nerror[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:135:13\n    |\n135 |             RegionKind::Other,\n    |             ^^^^^^^^^^ use of undeclared type `RegionKind`\n\nSome errors have detailed explanations: E0412, E0425, E0432, E0433, E0599.\nFor more information about an error, try `rustc --explain E0412`.\nerror: could not compile `sparreal-kernel` (lib) due to 15 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=sparreal-kernel, checker=Outdated\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:02:02.169452682 +08:00:00\n\nName                Project  Compat  Latest  Kind    Platform\n----                -------  ------  ------  ----    --------\nanyhow              1.0.97   1.0.98  1.0.98  Normal  ---\nfdt-parser          0.4.10   0.4.17  0.4.17  Normal  ---\nlock_api            0.4.12   0.4.13  0.4.13  Normal  ---\nmemory_addr         0.3.2    ---     0.4.0   Normal  ---\npage-table-generic  0.5.3    ---     0.6.0   Normal  ---\nrdrive              0.3.3    ---     0.15.3  Normal  ---\nspin                0.9.8    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=sparreal-kernel, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-06-28 12:00:25.820904566 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building sparreal-kernel v0.9.1 (current)\nerror: running cargo-doc on crate 'sparreal-kernel' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\n   Compiling thiserror v2.0.12\n   Compiling strsim v0.11.1\n   Compiling ident_case v1.0.1\n    Checking rdif-base v0.1.4\n   Compiling fnv v1.0.7\n   Compiling rust_decimal v1.37.2\n   Compiling anyhow v1.0.98\n   Compiling lock_api v0.4.13\n   Compiling quote v1.0.40\n   Compiling num-traits v0.2.19\n    Checking spin v0.9.8\n   Compiling syn v2.0.104\n    Checking arrayvec v0.7.6\n    Checking log v0.4.27\n    Checking bytemuck v1.23.1\n    Checking rdif-timer v0.1.3\n    Checking rdif-power v0.1.0\n    Checking rdif-intc v0.2.0\n    Checking rgb v0.8.50\n    Checking bitflags v2.9.1\n    Checking fdt-parser v0.4.17\n    Checking utf8-width v0.1.7\n    Checking ansi_rgb v0.2.0\n    Checking lazy_static v1.5.0\n    Checking buddy_system_allocator v0.11.0\n    Checking dma-api v0.3.0\n    Checking memory_addr v0.3.2\n    Checking pasts v0.14.3\n    Checking byte-unit v5.1.6\n   Compiling darling_core v0.20.11\n   Compiling abi-singleton v0.3.0\n   Compiling rdrive-macro-utils v0.2.1\n   Compiling thiserror-impl v2.0.12\n   Compiling darling_macro v0.20.11\n   Compiling darling v0.20.11\n    Checking rdrive v0.3.3\n    Checking page-table-generic v0.5.3\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-macros)\n Documenting sparreal-kernel v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel)\nerror: `#[repr(align(...))]` is not supported on function items\n  --> /home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n   |\nhelp: use `#[align(...)]` instead\n  --> /home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n\nerror: could not document `sparreal-kernel`\n\n-----\n\nerror: failed to build rustdoc for crate sparreal-kernel v0.9.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel --features mmu &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sparreal-kernel v0.9.1\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/mem/cache.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/cache.rs:7:33\n   |\n7  | use super::{PhysAddr, VirtAddr, mmu::RegionKind};\n   |                                 ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "sparreal-rt",
      "count": 12,
      "raw_reports": [
        {
          "file": "crates/sparreal-rt/build.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Warn)": [
              "warning: variables can be used directly in the `format!` string\n  --> crates/sparreal-rt/build.rs:64:13\n   |\n64 |             format!(\"{:?}\", self)\n   |             ^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n   = note: `#[warn(clippy::uninlined_format_args)]` on by default\nhelp: change this to\n   |\n64 -             format!(\"{:?}\", self)\n64 +             format!(\"{self:?}\")\n   |\n\n",
              "warning: variables can be used directly in the `format!` string\n  --> crates/sparreal-rt/build.rs:69:64\n   |\n69 |         let ld_content = ld_content.replace(\"%KERNEL_VADDR%\", &format!(\"{:#x}\", ENTRY_VADDR));\n   |                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n69 -         let ld_content = ld_content.replace(\"%KERNEL_VADDR%\", &format!(\"{:#x}\", ENTRY_VADDR));\n69 +         let ld_content = ld_content.replace(\"%KERNEL_VADDR%\", &format!(\"{ENTRY_VADDR:#x}\"));\n   |\n\n",
              "warning: variables can be used directly in the `format!` string\n  --> crates/sparreal-rt/build.rs:72:49\n   |\n72 |             ld_content.replace(\"%STACK_SIZE%\", &format!(\"{:#x}\", DEFAULT_KERNEL_STACK_SIZE));\n   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n72 -             ld_content.replace(\"%STACK_SIZE%\", &format!(\"{:#x}\", DEFAULT_KERNEL_STACK_SIZE));\n72 +             ld_content.replace(\"%STACK_SIZE%\", &format!(\"{DEFAULT_KERNEL_STACK_SIZE:#x}\"));\n   |\n\n",
              "warning: variables can be used directly in the `format!` string\n  --> crates/sparreal-rt/build.rs:78:25\n   |\n78 |       let const_content = format!(\n   |  _________________________^\n79 | |         r#\"pub const KERNEL_STACK_SIZE: usize = {:#x};\n80 | |             \"#,\n81 | |         DEFAULT_KERNEL_STACK_SIZE\n82 | |     );\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-rt, checker=Clippy\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-rt\n// cmd=cargo clippy --target aarch64-unknown-none  --no-deps\n// timestamp=2025-06-28 11:59:43.91302662 +08:00:00\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-macros)\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-rt)\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel)\nerror: could not compile `sparreal-kernel` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-rt, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-rt\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-06-28 12:00:31.961818115 +08:00:00\n    Building sparreal-rt v0.9.1 (current)\nerror: running cargo-doc on crate 'sparreal-rt' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking rdif-base v0.1.4\n    Checking scopeguard v1.2.0\n    Checking bitflags v2.9.1\n   Compiling fnv v1.0.7\n    Checking log v0.4.27\n   Compiling thiserror v2.0.12\n   Compiling ident_case v1.0.1\n   Compiling strsim v0.11.1\n   Compiling rust_decimal v1.37.2\n   Compiling lock_api v0.4.13\n   Compiling quote v1.0.40\n   Compiling num-traits v0.2.19\n   Compiling syn v2.0.104\n    Checking spin v0.9.8\n    Checking rdif-intc v0.2.0\n    Checking arrayvec v0.7.6\n   Compiling anyhow v1.0.98\n    Checking fdt-parser v0.4.17\n    Checking bytemuck v1.23.1\n    Checking tock-registers v0.9.0\n    Checking rgb v0.8.50\n    Checking aarch64-cpu v10.0.0\n    Checking rdif-timer v0.1.3\n    Checking rdif-power v0.1.0\n    Checking utf8-width v0.1.7\n    Checking embedded-hal v1.0.0\n   Compiling once_cell v1.21.3\n    Checking nb v1.1.0\n    Checking embedded-hal-nb v1.0.0\n    Checking byte-unit v5.1.6\n    Checking ansi_rgb v0.2.0\n    Checking buddy_system_allocator v0.11.0\n    Checking lazy_static v1.5.0\n    Checking cfg-if v1.0.1\n    Checking pasts v0.14.3\n    Checking dma-api v0.3.0\n    Checking memory_addr v0.3.2\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-rt)\n    Checking any-uart v0.2.11\n    Checking smccc v0.1.1\n    Checking numeric-enum-macro v0.2.0\n   Compiling darling_core v0.20.11\n   Compiling rdrive-macro-utils v0.2.1\n   Compiling abi-singleton v0.3.0\n    Checking page-table-arm v0.1.1\n   Compiling thiserror-impl v2.0.12\n   Compiling enum_dispatch v0.3.13\n    Checking arm-gic-driver v0.7.1\n   Compiling darling_macro v0.20.11\n   Compiling darling v0.20.11\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-macros)\n    Checking rdrive v0.3.3\n    Checking page-table-generic v0.5.3\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel)\nerror: `#[repr(align(...))]` is not supported on function items\n  --> /home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n   |\nhelp: use `#[align(...)]` instead\n  --> /home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n\nerror: could not compile `sparreal-kernel` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate sparreal-rt v0.9.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-rt --features default,early-print,vm &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sparreal-rt v0.9.1\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-rt, checker=Udeps\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-rt\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \n// timestamp=2025-06-28 12:04:02.409077818 +08:00:00\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-macros)\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-rt)\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel)\nerror: `#[repr(align(...))]` is not supported on function items\n  --> crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n   |\nhelp: use `#[align(...)]` instead\n  --> crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n\nerror: could not compile `sparreal-kernel` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:01:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:01:21Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-06-28T04:01:23Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.1/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.1/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.1/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.1/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-06-28T04:01:23Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2025-06-28T04:01:30Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"arch::debug::setup_by_fdt\",\n            \"atomic_reader\": \"crates/sparreal-rt/src/arch/aarch64/debug/mod.rs:41:15: 41:45 (#0)\",\n            \"atomic_writer\": \"crates/sparreal-rt/src/arch/aarch64/debug/mod.rs:43:9: 43:51 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:01:30Z WARN  lockbud::callbacks] crate sparreal_rt contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=sparreal-rt, checker=Udeps\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-rt\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \ntimestamp=2025-06-28 12:04:02.986139151 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-macros)\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-rt)\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel)\nerror: `#[repr(align(...))]` is not supported on function items\n  --> crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n   |\nhelp: use `#[align(...)]` instead\n  --> crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n\nerror: could not compile `sparreal-kernel` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=sparreal-rt, checker=Outdated\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-rt\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:02:06.096392573 +08:00:00\n\nName                Project  Compat  Latest  Kind    Platform\n----                -------  ------  ------  ----    --------\nany-uart            0.2.1    0.2.11  0.2.11  Normal  cfg(target_arch = \"aarch64\")\narm-gic-driver      0.7.0    0.7.1   0.14.0  Normal  cfg(target_arch = \"aarch64\")\nfdt-parser          0.4.10   0.4.17  0.4.17  Normal  ---\nmemory_addr         0.3.2    ---     0.4.0   Normal  ---\npage-table-arm      0.1.0    0.1.1   0.1.1   Normal  cfg(target_arch = \"aarch64\")\npage-table-generic  0.5.3    ---     0.6.0   Normal  ---\nsmccc               0.1.1    ---     0.2.2   Normal  cfg(target_arch = \"aarch64\")\nspin                0.9.8    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=sparreal-rt, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-rt\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-06-28 12:00:38.888134999 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building sparreal-rt v0.9.1 (current)\nerror: running cargo-doc on crate 'sparreal-rt' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking rdif-base v0.1.4\n    Checking scopeguard v1.2.0\n    Checking bitflags v2.9.1\n   Compiling fnv v1.0.7\n    Checking log v0.4.27\n   Compiling thiserror v2.0.12\n   Compiling ident_case v1.0.1\n   Compiling strsim v0.11.1\n   Compiling rust_decimal v1.37.2\n   Compiling lock_api v0.4.13\n   Compiling quote v1.0.40\n   Compiling num-traits v0.2.19\n   Compiling syn v2.0.104\n    Checking spin v0.9.8\n    Checking rdif-intc v0.2.0\n    Checking arrayvec v0.7.6\n   Compiling anyhow v1.0.98\n    Checking fdt-parser v0.4.17\n    Checking bytemuck v1.23.1\n    Checking tock-registers v0.9.0\n    Checking rgb v0.8.50\n    Checking aarch64-cpu v10.0.0\n    Checking rdif-timer v0.1.3\n    Checking rdif-power v0.1.0\n    Checking utf8-width v0.1.7\n    Checking embedded-hal v1.0.0\n   Compiling once_cell v1.21.3\n    Checking nb v1.1.0\n    Checking embedded-hal-nb v1.0.0\n    Checking byte-unit v5.1.6\n    Checking ansi_rgb v0.2.0\n    Checking buddy_system_allocator v0.11.0\n    Checking lazy_static v1.5.0\n    Checking cfg-if v1.0.1\n    Checking pasts v0.14.3\n    Checking dma-api v0.3.0\n    Checking memory_addr v0.3.2\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-rt)\n    Checking any-uart v0.2.11\n    Checking smccc v0.1.1\n    Checking numeric-enum-macro v0.2.0\n   Compiling darling_core v0.20.11\n   Compiling rdrive-macro-utils v0.2.1\n   Compiling abi-singleton v0.3.0\n    Checking page-table-arm v0.1.1\n   Compiling thiserror-impl v2.0.12\n   Compiling enum_dispatch v0.3.13\n    Checking arm-gic-driver v0.7.1\n   Compiling darling_macro v0.20.11\n   Compiling darling v0.20.11\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-macros)\n    Checking rdrive v0.3.3\n    Checking page-table-generic v0.5.3\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel)\nerror: `#[repr(align(...))]` is not supported on function items\n  --> /home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n   |\nhelp: use `#[align(...)]` instead\n  --> /home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n\nerror: could not compile `sparreal-kernel` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate sparreal-rt v0.9.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-rt --features default,early-print,vm &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sparreal-rt v0.9.1\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/boot/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error: `#[repr(align(...))]` is not supported on function items\n  --> crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n   |\nhelp: use `#[align(...)]` instead\n  --> crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "bare-test",
      "count": 7,
      "raw_reports": [
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=bare-test, checker=Clippy\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/crates/bare-test\n// cmd=cargo clippy --target aarch64-unknown-none  --no-deps\n// timestamp=2025-06-28 11:59:25.970018789 +08:00:00\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n    Checking scopeguard v1.2.0\n    Checking rdif-base v0.1.4\n    Checking bitflags v2.9.0\n   Compiling fnv v1.0.7\n   Compiling thiserror v2.0.12\n    Checking log v0.4.27\n   Compiling strsim v0.11.1\n   Compiling ident_case v1.0.1\n   Compiling rust_decimal v1.37.1\n   Compiling lock_api v0.4.12\n   Compiling num-traits v0.2.19\n   Compiling quote v1.0.40\n   Compiling syn v2.0.100\n    Checking spin v0.9.8\n    Checking rdif-intc v0.2.0\n    Checking fdt-parser v0.4.10\n    Checking bytemuck v1.22.0\n    Checking arrayvec v0.7.6\n    Checking tock-registers v0.9.0\n   Compiling anyhow v1.0.97\n    Checking aarch64-cpu v10.0.0\n    Checking rgb v0.8.50\n    Checking rdif-timer v0.1.3\n    Checking rdif-power v0.1.0\n    Checking utf8-width v0.1.7\n    Checking embedded-hal v1.0.0\n   Compiling once_cell v1.21.1\n    Checking nb v1.1.0\n    Checking embedded-hal-nb v1.0.0\n    Checking ansi_rgb v0.2.0\n    Checking byte-unit v5.1.6\n    Checking buddy_system_allocator v0.11.0\n    Checking lazy_static v1.5.0\n    Checking memory_addr v0.3.2\n    Checking pasts v0.14.3\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-rt)\n    Checking dma-api v0.3.0\n    Checking any-uart v0.2.1\n    Checking smccc v0.1.1\n   Compiling bare-test v0.4.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/bare-test)\n    Checking numeric-enum-macro v0.2.0\n    Checking page-table-arm v0.1.0\n   Compiling darling_core v0.20.10\n   Compiling rdrive-macro-utils v0.2.1\n   Compiling abi-singleton v0.3.0\n   Compiling thiserror-impl v2.0.12\n   Compiling enum_dispatch v0.3.13\n   Compiling bare-test-macros v0.2.0 (/home/runner/check/batch_7/qclic/sparreal-os/crates/bare-test-macros)\n    Checking arm-gic-driver v0.7.0\n   Compiling darling_macro v0.20.10\n    Checking page-table-generic v0.5.3\n    Checking rdrive v0.3.3\n   Compiling darling v0.20.10\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-macros)\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel)\nerror: could not compile `sparreal-kernel` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=bare-test, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/crates/bare-test\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-06-28 11:59:49.869152749 +08:00:00\n    Building bare-test v0.4.1 (current)\nerror: running cargo-doc on crate 'bare-test' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\n    Checking rdif-base v0.1.4\n   Compiling fnv v1.0.7\n    Checking bitflags v2.9.1\n   Compiling strsim v0.11.1\n   Compiling thiserror v2.0.12\n    Checking log v0.4.27\n   Compiling ident_case v1.0.1\n   Compiling lock_api v0.4.13\n   Compiling num-traits v0.2.19\n   Compiling rust_decimal v1.37.2\n   Compiling quote v1.0.40\n    Checking spin v0.9.8\n   Compiling syn v2.0.104\n    Checking rdif-intc v0.2.0\n    Checking bytemuck v1.23.1\n    Checking fdt-parser v0.4.17\n    Checking tock-registers v0.9.0\n   Compiling anyhow v1.0.98\n    Checking arrayvec v0.7.6\n    Checking aarch64-cpu v10.0.0\n    Checking rgb v0.8.50\n    Checking rdif-timer v0.1.3\n    Checking rdif-power v0.1.0\n    Checking embedded-hal v1.0.0\n    Checking nb v1.1.0\n    Checking utf8-width v0.1.7\n   Compiling once_cell v1.21.3\n    Checking embedded-hal-nb v1.0.0\n    Checking byte-unit v5.1.6\n    Checking ansi_rgb v0.2.0\n    Checking buddy_system_allocator v0.11.0\n    Checking lazy_static v1.5.0\n    Checking dma-api v0.3.0\n    Checking pasts v0.14.3\n    Checking cfg-if v1.0.1\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-rt)\n    Checking memory_addr v0.3.2\n    Checking any-uart v0.2.11\n    Checking numeric-enum-macro v0.2.0\n   Compiling bare-test v0.4.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/bare-test)\n    Checking smccc v0.1.1\n   Compiling darling_core v0.20.11\n   Compiling abi-singleton v0.3.0\n   Compiling rdrive-macro-utils v0.2.1\n    Checking page-table-arm v0.1.1\n   Compiling thiserror-impl v2.0.12\n   Compiling enum_dispatch v0.3.13\n   Compiling bare-test-macros v0.2.0 (/home/runner/check/batch_7/qclic/sparreal-os/crates/bare-test-macros)\n    Checking arm-gic-driver v0.7.1\n   Compiling darling_macro v0.20.11\n    Checking page-table-generic v0.5.3\n    Checking rdrive v0.3.3\n   Compiling darling v0.20.11\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-macros)\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel)\nerror: `#[repr(align(...))]` is not supported on function items\n  --> /home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n   |\nhelp: use `#[align(...)]` instead\n  --> /home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n\nerror: could not compile `sparreal-kernel` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate bare-test v0.4.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_7/qclic/sparreal-os/crates/bare-test --features default,rt,sparreal-rt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate bare-test v0.4.1\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=bare-test, checker=Udeps\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/crates/bare-test\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \n// timestamp=2025-06-28 12:03:45.522295857 +08:00:00\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n   Compiling thiserror v2.0.12\n   Compiling fnv v1.0.7\n   Compiling ident_case v1.0.1\n   Compiling strsim v0.11.1\n   Compiling rust_decimal v1.37.1\n   Compiling lock_api v0.4.12\n   Compiling num-traits v0.2.19\n   Compiling anyhow v1.0.97\n   Compiling quote v1.0.40\n   Compiling syn v2.0.100\n    Checking spin v0.9.8\n   Compiling once_cell v1.21.1\n    Checking buddy_system_allocator v0.11.0\n    Checking lazy_static v1.5.0\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-rt)\n   Compiling bare-test v0.4.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/bare-test)\n    Checking byte-unit v5.1.6\n   Compiling darling_core v0.20.10\n   Compiling abi-singleton v0.3.0\n   Compiling rdrive-macro-utils v0.2.1\n   Compiling thiserror-impl v2.0.12\n   Compiling enum_dispatch v0.3.13\n   Compiling bare-test-macros v0.2.0 (/home/runner/check/batch_7/qclic/sparreal-os/crates/bare-test-macros)\n    Checking arm-gic-driver v0.7.0\n   Compiling darling_macro v0.20.10\n    Checking page-table-generic v0.5.3\n    Checking rdrive v0.3.3\n   Compiling darling v0.20.10\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-macros)\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel)\nerror: `#[repr(align(...))]` is not supported on function items\n  --> crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n   |\nhelp: use `#[align(...)]` instead\n  --> crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n\nerror: could not compile `sparreal-kernel` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:01:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:01:21Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-06-28T04:01:23Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.1/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.1/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.1/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.1/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-06-28T04:01:23Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2025-06-28T04:01:30Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"arch::debug::setup_by_fdt\",\n            \"atomic_reader\": \"crates/sparreal-rt/src/arch/aarch64/debug/mod.rs:41:15: 41:45 (#0)\",\n            \"atomic_writer\": \"crates/sparreal-rt/src/arch/aarch64/debug/mod.rs:43:9: 43:51 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:01:30Z WARN  lockbud::callbacks] crate sparreal_rt contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=bare-test, checker=Udeps\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/crates/bare-test\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \ntimestamp=2025-06-28 12:03:51.723628138 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n   Compiling thiserror v2.0.12\n   Compiling fnv v1.0.7\n   Compiling ident_case v1.0.1\n   Compiling strsim v0.11.1\n   Compiling rust_decimal v1.37.1\n   Compiling lock_api v0.4.12\n   Compiling num-traits v0.2.19\n   Compiling anyhow v1.0.97\n   Compiling quote v1.0.40\n   Compiling syn v2.0.100\n    Checking spin v0.9.8\n   Compiling once_cell v1.21.1\n    Checking buddy_system_allocator v0.11.0\n    Checking lazy_static v1.5.0\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-rt)\n   Compiling bare-test v0.4.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/bare-test)\n    Checking byte-unit v5.1.6\n   Compiling darling_core v0.20.10\n   Compiling abi-singleton v0.3.0\n   Compiling rdrive-macro-utils v0.2.1\n   Compiling thiserror-impl v2.0.12\n   Compiling enum_dispatch v0.3.13\n   Compiling bare-test-macros v0.2.0 (/home/runner/check/batch_7/qclic/sparreal-os/crates/bare-test-macros)\n    Checking arm-gic-driver v0.7.0\n   Compiling darling_macro v0.20.10\n    Checking page-table-generic v0.5.3\n    Checking rdrive v0.3.3\n   Compiling darling v0.20.10\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-macros)\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel)\nerror: `#[repr(align(...))]` is not supported on function items\n  --> crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n   |\nhelp: use `#[align(...)]` instead\n  --> crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n\nerror: could not compile `sparreal-kernel` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=bare-test, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/crates/bare-test\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-06-28 11:59:57.211695135 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building bare-test v0.4.1 (current)\nerror: running cargo-doc on crate 'bare-test' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n    Checking scopeguard v1.2.0\n    Checking rdif-base v0.1.4\n   Compiling fnv v1.0.7\n    Checking bitflags v2.9.1\n   Compiling strsim v0.11.1\n   Compiling thiserror v2.0.12\n    Checking log v0.4.27\n   Compiling ident_case v1.0.1\n   Compiling lock_api v0.4.13\n   Compiling num-traits v0.2.19\n   Compiling rust_decimal v1.37.2\n   Compiling quote v1.0.40\n    Checking spin v0.9.8\n   Compiling syn v2.0.104\n    Checking rdif-intc v0.2.0\n    Checking bytemuck v1.23.1\n    Checking fdt-parser v0.4.17\n    Checking tock-registers v0.9.0\n   Compiling anyhow v1.0.98\n    Checking arrayvec v0.7.6\n    Checking aarch64-cpu v10.0.0\n    Checking rgb v0.8.50\n    Checking rdif-timer v0.1.3\n    Checking rdif-power v0.1.0\n    Checking embedded-hal v1.0.0\n    Checking nb v1.1.0\n    Checking utf8-width v0.1.7\n   Compiling once_cell v1.21.3\n    Checking embedded-hal-nb v1.0.0\n    Checking byte-unit v5.1.6\n    Checking ansi_rgb v0.2.0\n    Checking buddy_system_allocator v0.11.0\n    Checking lazy_static v1.5.0\n    Checking dma-api v0.3.0\n    Checking pasts v0.14.3\n    Checking cfg-if v1.0.1\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-rt)\n    Checking memory_addr v0.3.2\n    Checking any-uart v0.2.11\n    Checking numeric-enum-macro v0.2.0\n   Compiling bare-test v0.4.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/bare-test)\n    Checking smccc v0.1.1\n   Compiling darling_core v0.20.11\n   Compiling abi-singleton v0.3.0\n   Compiling rdrive-macro-utils v0.2.1\n    Checking page-table-arm v0.1.1\n   Compiling thiserror-impl v2.0.12\n   Compiling enum_dispatch v0.3.13\n   Compiling bare-test-macros v0.2.0 (/home/runner/check/batch_7/qclic/sparreal-os/crates/bare-test-macros)\n    Checking arm-gic-driver v0.7.1\n   Compiling darling_macro v0.20.11\n    Checking page-table-generic v0.5.3\n    Checking rdrive v0.3.3\n   Compiling darling v0.20.11\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-macros)\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel)\nerror: `#[repr(align(...))]` is not supported on function items\n  --> /home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n   |\nhelp: use `#[align(...)]` instead\n  --> /home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n\nerror: could not compile `sparreal-kernel` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate bare-test v0.4.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_7/qclic/sparreal-os/crates/bare-test --features default,rt,sparreal-rt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate bare-test v0.4.1\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/boot/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error: `#[repr(align(...))]` is not supported on function items\n  --> crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n   |\nhelp: use `#[align(...)]` instead\n  --> crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "fdt-parser",
      "pkg": "fdt-parser",
      "count": 7,
      "raw_reports": [
        {
          "file": "fdt-parser/src/define.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Warn)": [
              "warning: struct `RawReg` is never constructed\n  --> fdt-parser/src/define.rs:87:12\n   |\n87 | pub struct RawReg<'a> {\n   |            ^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> fdt-parser/src/define.rs:235:25\n    |\n235 |             f.write_fmt(format_args!(\"{:#x}>\", s))\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n    = note: `#[warn(clippy::uninlined_format_args)]` on by default\nhelp: change this to\n    |\n235 -             f.write_fmt(format_args!(\"{:#x}>\", s))\n235 +             f.write_fmt(format_args!(\"{s:#x}>\"))\n    |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> fdt-parser/src/define.rs:265:25\n    |\n265 |             f.write_fmt(format_args!(\"{:#x} \", addr))?;\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n265 -             f.write_fmt(format_args!(\"{:#x} \", addr))?;\n265 +             f.write_fmt(format_args!(\"{addr:#x} \"))?;\n    |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> fdt-parser/src/define.rs:269:25\n    |\n269 |             f.write_fmt(format_args!(\"{:#x} \", addr))?;\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n269 -             f.write_fmt(format_args!(\"{:#x} \", addr))?;\n269 +             f.write_fmt(format_args!(\"{addr:#x} \"))?;\n    |\n\n"
            ]
          }
        },
        {
          "file": "fdt-parser/src/pci.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Warn)": [
              "warning: lifetime flowing from input to output with different syntax can be confusing\n  --> fdt-parser/src/pci.rs:25:19\n   |\n25 |     pub fn ranges(&self) -> FdtResult<impl Iterator<Item = PciRange> + 'a> {\n   |                   ^^^^^     ---------------------------------------------- the lifetime gets resolved as `'_`\n   |                   |\n   |                   this lifetime flows to the output\n   |\n   = note: `#[warn(mismatched_lifetime_syntaxes)]` on by default\nhelp: one option is to remove the lifetime for references and use the anonymous lifetime for paths\n   |\n25 |     pub fn ranges(&self) -> FdtResult<'_, impl Iterator<Item = PciRange> + 'a> {\n   |                                       +++\n\n",
              "warning: lifetime flowing from input to output with different syntax can be confusing\n  --> fdt-parser/src/pci.rs:37:9\n   |\n37 |         &self,\n   |         ^^^^^ this lifetime flows to the output\n...\n42 |     ) -> FdtResult<PciChildIrq<'a>> {\n   |          -------------------------- the lifetime gets resolved as `'_`\n   |\nhelp: one option is to remove the lifetime for references and use the anonymous lifetime for paths\n   |\n42 |     ) -> FdtResult<'_, PciChildIrq<'a>> {\n   |                    +++\n\n",
              "warning: lifetime flowing from input to output with different syntax can be confusing\n   --> fdt-parser/src/pci.rs:101:27\n    |\n101 |     fn interrupt_map_mask(&self) -> FdtResult<[u32; 4]> {\n    |                           ^^^^^     ------------------- the lifetime gets resolved as `'_`\n    |                           |\n    |                           this lifetime flows to the output\n    |\nhelp: one option is to remove the lifetime for references and use the anonymous lifetime for paths\n    |\n101 |     fn interrupt_map_mask(&self) -> FdtResult<'_, [u32; 4]> {\n    |                                               +++\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "helloworld",
      "count": 5,
      "raw_reports": [
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=helloworld, checker=Clippy\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/apps/helloworld\n// cmd=cargo clippy --target aarch64-unknown-none  --no-deps\n// timestamp=2025-06-28 11:59:36.272222735 +08:00:00\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-macros)\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-rt)\n   Compiling helloworld v0.1.0 (/home/runner/check/batch_7/qclic/sparreal-os/apps/helloworld)\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel)\nerror: could not compile `sparreal-kernel` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=helloworld, checker=Udeps\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/apps/helloworld\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \n// timestamp=2025-06-28 12:03:55.080654238 +08:00:00\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-macros)\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-rt)\n   Compiling helloworld v0.1.0 (/home/runner/check/batch_7/qclic/sparreal-os/apps/helloworld)\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel)\nerror: `#[repr(align(...))]` is not supported on function items\n  --> crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n   |\nhelp: use `#[align(...)]` instead\n  --> crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n\nerror: could not compile `sparreal-kernel` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:01:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:01:21Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-06-28T04:01:23Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.1/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.1/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.1/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.1/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-06-28T04:01:23Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2025-06-28T04:01:30Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"arch::debug::setup_by_fdt\",\n            \"atomic_reader\": \"crates/sparreal-rt/src/arch/aarch64/debug/mod.rs:41:15: 41:45 (#0)\",\n            \"atomic_writer\": \"crates/sparreal-rt/src/arch/aarch64/debug/mod.rs:43:9: 43:51 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:01:30Z WARN  lockbud::callbacks] crate sparreal_rt contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=helloworld, checker=Udeps\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/apps/helloworld\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \ntimestamp=2025-06-28 12:03:55.677074058 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-macros)\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-rt)\n   Compiling helloworld v0.1.0 (/home/runner/check/batch_7/qclic/sparreal-os/apps/helloworld)\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-kernel)\nerror: `#[repr(align(...))]` is not supported on function items\n  --> crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n   |\nhelp: use `#[align(...)]` instead\n  --> crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n\nerror: could not compile `sparreal-kernel` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/boot/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error: `#[repr(align(...))]` is not supported on function items\n  --> crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n   |\nhelp: use `#[align(...)]` instead\n  --> crates/sparreal-kernel/src/boot/mod.rs:26:8\n   |\n26 | #[repr(align(0x10))]\n   |        ^^^^^^^^^^^\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "page-table-arm",
      "count": 3,
      "raw_reports": [
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:01:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:01:21Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=page-table-arm, checker=Udeps\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/crates/page-table-arm\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \ntimestamp=2025-06-28 12:03:57.921761854 +08:00:00\n\n\nstdout:\nunused dependencies:\n`page-table-arm v0.1.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/page-table-arm)`\n└─── dependencies\n     └─── \"log\"\nNote: These dependencies might be used by other targets.\n      To find dependencies that are not used by any target, enable `--all-targets`.\nNote: They might be false-positive.\n      For example, `cargo-udeps` cannot detect usage of crates that are only used in doc-tests.\n      To ignore some dependencies, write `package.metadata.cargo-udeps.ignore` in Cargo.toml.\n\nstderr:\n    Checking tock-registers v0.9.0\n    Checking aarch64-cpu v10.0.0\n    Checking page-table-arm v0.1.1 (/home/runner/check/batch_7/qclic/sparreal-os/crates/page-table-arm)\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 1.63s\ninfo: Loading depinfo from \"/home/runner/check/batch_7/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/page_table_arm-74b23de17aa337b6.d\"\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=page-table-arm, checker=Outdated\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/crates/page-table-arm\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:01:58.334940878 +08:00:00\n\nName        Project  Compat  Latest  Kind         Platform\n----        -------  ------  ------  ----         --------\nbitflags    2.9.0    2.9.1   2.9.1   Normal       ---\nenv_logger  0.11.7   0.11.8  0.11.8  Development  ---\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "simple_test",
      "count": 2,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=simple_test, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/apps/simple_test\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-06-28 12:00:11.733642053 +08:00:00\n    Building simple_test v0.9.1 (current)\n       Built [   3.546s] (current)\n     Parsing simple_test v0.9.1 (current)\n      Parsed [   0.001s] (current)\nerror: simple_test not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=simple_test, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/apps/simple_test\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-06-28 12:00:15.831717659 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building simple_test v0.9.1 (current)\n       Built [   3.546s] (current)\n     Parsing simple_test v0.9.1 (current)\n      Parsed [   0.001s] (current)\nerror: simple_test not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "sparreal-macros",
      "count": 2,
      "raw_reports": [
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=sparreal-macros, checker=Outdated\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/crates/sparreal-macros\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:02:04.093260094 +08:00:00\n\nName                Project  Compat   Latest   Kind    Platform\n----                -------  ------   ------   ----    --------\ndarling             0.20.10  0.20.11  0.20.11  Normal  ---\nproc-macro2         1.0.94   1.0.95   1.0.95   Normal  ---\nrdrive-macro-utils  0.2.1    ---      0.3.3    Normal  ---\nsyn                 2.0.100  2.0.104  2.0.104  Normal  ---\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-macros/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: this `if` statement can be collapsed\n   --> crates/sparreal-macros/src/lib.rs:126:5\n    |\n126 | /     if let Type::Path(p) = ty {\n127 | |         if p.qself.is_none() && p.path.leading_colon.is_none() && p.path.segments.len() == 1 {\n128 | |             let segment = p.path.segments.first().unwrap();\n129 | |             if segment.ident == name && segment.arguments == PathArguments::None {\n...   |\n133 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n126 ~     if let Type::Path(p) = ty\n127 ~         && p.qself.is_none() && p.path.leading_colon.is_none() && p.path.segments.len() == 1 {\n128 |             let segment = p.path.segments.first().unwrap();\n...\n131 |             }\n132 ~         }\n    |\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "bare-test-macros",
      "count": 1,
      "raw_reports": [
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=bare-test-macros, checker=Outdated\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/crates/bare-test-macros\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:01:53.677385589 +08:00:00\n\nName         Project  Compat   Latest   Kind    Platform\n----         -------  ------   ------   ----    --------\nproc-macro2  1.0.94   1.0.95   1.0.95   Normal  ---\nsyn          2.0.100  2.0.104  2.0.104  Normal  ---\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "xtask",
      "count": 1,
      "raw_reports": [
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=xtask, checker=Outdated\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_7/qclic/sparreal-os/xtask\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:02:07.982835618 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nclap  4.5.32   4.5.40  4.5.40  Normal  cfg(not(target_os = \"none\"))\ntoml  0.8.20   0.8.23  0.8.23  Normal  cfg(not(target_os = \"none\"))\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Atomvchecker",
    "Outdated",
    "Geiger",
    "Unused Deps",
    "Unformatted"
  ]
}