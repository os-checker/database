{"data":[{"user":"Byte-OS","repo":"polyhal","pkg":"polyhal","count":26,"raw_reports":[{"file":"src/components/arch/x86_64/idt.rs","count":5,"kinds":{"Clippy(Warn)":["warning: unused imports: `Entry`, `HandlerFunc`\n --> src/components/arch/x86_64/idt.rs:2:31\n  |\n2 | use x86_64::structures::idt::{Entry, HandlerFunc, InterruptDescriptorTable};\n  |                               ^^^^^  ^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused imports: `Entry`, `HandlerFunc`\n --> src/components/arch/x86_64/idt.rs:2:31\n  |\n2 | use x86_64::structures::idt::{Entry, HandlerFunc, InterruptDescriptorTable};\n  |                               ^^^^^  ^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n","warning: variable does not need to be mutable\n  --> src/components/arch/x86_64/idt.rs:22:13\n   |\n22 |         let mut idt = Self(InterruptDescriptorTable::new());\n   |             ----^^^\n   |             |\n   |             help: remove this `mut`\n   |\n   = note: `#[warn(unused_mut)]` on by default\n\n","warning: constant `NUM_INT` is never used\n --> src/components/arch/x86_64/idt.rs:4:7\n  |\n4 | const NUM_INT: usize = 256;\n  |       ^^^^^^^\n  |\n  = note: `#[warn(dead_code)]` on by default\n\n","warning: returning the result of a `let` binding from a block\n  --> src/components/arch/x86_64/idt.rs:35:9\n   |\n22 |         let mut idt = Self(InterruptDescriptorTable::new());\n   |         ---------------------------------------------------- unnecessary `let` binding\n...\n35 |         idt\n   |         ^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n   = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n   |\n22 ~         \n23 | \n ...\n34 |         }\n35 ~         Self(InterruptDescriptorTable::new())\n   |\n\n"]}},{"file":"src/components/boot/x86_64.rs","count":3,"kinds":{"Clippy(Warn)":["warning: transmute from an integer to a pointer\n  --> src/components/boot/x86_64.rs:65:19\n   |\n65 |         let ptr = mem::transmute(addr | VIRT_ADDR_START as u64);\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(addr | VIRT_ADDR_START as u64) as *const u8`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute\n   = note: `#[warn(clippy::useless_transmute)]` on by default\n\n","warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n   --> src/components/boot/x86_64.rs:145:5\n    |\n145 | //     CpuId::new().get_feature_info().map(|features| {\n146 | ||         // Add OSXSave flag to cr4 register if supported\n147 | ||         if features.has_xsave() {\n148 | ||             unsafe {\n...   ||\n156 | ||         }\n157 | ||     });\n    | ||______^- help: try: `if let Some(features) = CpuId::new().get_feature_info() { ... }`\n    |  |______|\n    | \n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\n    = note: `#[warn(clippy::option_map_unit_fn)]` on by default\n\n","warning: `filter` for `Some` followed by `unwrap`\n   --> src/components/boot/x86_64.rs:186:10\n    |\n186 |           .filter(Option::is_some)\n    |  __________^\n187 | |         .map(Option::unwrap)\n    | |____________________________^ help: consider using `flatten` instead: `flatten()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_filter_map\n    = note: `#[warn(clippy::option_filter_map)]` on by default\n\n"]}},{"file":"src/components/pagetable/mod.rs","count":3,"kinds":{"Clippy(Warn)":["warning: name `PTE` contains a capitalized acronym\n  --> src/components/pagetable/mod.rs:18:19\n   |\n18 | pub(crate) struct PTE(pub usize);\n   |                   ^^^ help: consider making the acronym lowercase, except the initial letter: `Pte`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n","warning: `assert!(true)` will be optimized out by the compiler\n  --> src/components/pagetable/mod.rs:52:9\n   |\n52 |         assert!(Self::PAGE_LEVEL >= 3, \"Just level >= 3 supported currently\");\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: remove it\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n   = note: `#[warn(clippy::assertions_on_constants)]` on by default\n\n","warning: `assert!(true)` will be optimized out by the compiler\n   --> src/components/pagetable/mod.rs:105:9\n    |\n105 |         assert!(Self::PAGE_LEVEL >= 3, \"Just level >= 3 supported currently\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove it\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n\n"]}},{"file":"src/components/pagetable/x86_64.rs","count":3,"kinds":{"Clippy(Warn)":["warning: operator precedence can trip the unwary\n   --> src/components/pagetable/x86_64.rs:179:10\n    |\n179 |         (self.0 >> 9 * n) & 0x1ff\n    |          ^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `self.0 >> (9 * n)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n    = note: `#[warn(clippy::precedence)]` on by default\n\n","warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/components/pagetable/x86_64.rs:64:1\n   |\n64 | impl Into<MappingFlags> for PTEFlags {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<components::pagetable::x86_64::PTEFlags>`\n   |\n64 ~ impl From<PTEFlags> for MappingFlags {\n65 ~     fn from(val: PTEFlags) -> Self {\n66 |         let mut res = MappingFlags::empty();\n67 ~         if val.contains(PTEFlags::RW) {\n68 |             res |= MappingFlags::W\n69 |         };\n70 ~         if val.contains(PTEFlags::US) {\n71 |             res |= MappingFlags::U\n72 |         };\n73 ~         if val.contains(PTEFlags::A) {\n74 |             res |= MappingFlags::A;\n75 |         }\n76 ~         if val.contains(PTEFlags::D) {\n77 |             res |= MappingFlags::D;\n78 |         }\n79 ~         if !val.contains(PTEFlags::XD) {\n   |\n\n","warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/components/pagetable/x86_64.rs:136:58\n    |\n136 |         pml4[0x1ff] = PTE((_boot_mapping_pdpt as usize - VIRT_ADDR_START as usize) | 0x3);\n    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `VIRT_ADDR_START`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"]}},{"file":"src/components/common.rs","count":2,"kinds":{"Clippy(Warn)":["warning: function `parse_dtb_info` is never used\n  --> src/components/common.rs:77:15\n   |\n77 | pub(crate) fn parse_dtb_info() {\n   |               ^^^^^^^^^^^^^^\n\n"],"Unformatted":["file: /home/runner/check/batch_1/Byte-OS/polyhal/src/components/common.rs (original lines from 73 to 74)\n-/// \n-/// Display information when booting \n+///\n+/// Display information when booting\n"]}},{"file":"src/components/kcontext/x86_64.rs","count":2,"kinds":{"Clippy(Warn)":["warning: unsafe function's docs miss `# Safety` section\n   --> src/components/kcontext/x86_64.rs:149:1\n    |\n149 | pub unsafe extern \"C\" fn context_switch(from: *mut KContext, to: *const KContext) {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n","warning: unsafe function's docs miss `# Safety` section\n   --> src/components/kcontext/x86_64.rs:170:1\n    |\n170 | / pub unsafe extern \"C\" fn context_switch_pt(\n171 | |     from: *mut KContext,\n172 | |     to: *const KContext,\n173 | |     pt_token: PageTable,\n174 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"]}},{"file":"src/components/trapframe/x86_64.rs","count":2,"kinds":{"Clippy(Warn)":["warning: methods `save` and `restore` are never used\n  --> src/components/trapframe/x86_64.rs:28:19\n   |\n26 | impl FxsaveArea {\n   | --------------- methods in this implementation\n27 |     #[inline]\n28 |     pub(crate) fn save(&mut self) {\n   |                   ^^^^\n...\n33 |     pub(crate) fn restore(&self) {\n   |                   ^^^^^^^\n\n","warning: methods `save` and `restore` are never used\n  --> src/components/trapframe/x86_64.rs:28:19\n   |\n26 | impl FxsaveArea {\n   | --------------- methods in this implementation\n27 |     #[inline]\n28 |     pub(crate) fn save(&mut self) {\n   |                   ^^^^\n...\n33 |     pub(crate) fn restore(&self) {\n   |                   ^^^^^^^\n\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:32:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:32:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/components/arch/x86_64/gdt.rs","count":1,"kinds":{"Clippy(Warn)":["warning: redundant closure\n   --> src/components/arch/x86_64/gdt.rs:102:23\n    |\n102 |         tss.call_once(|| TaskStateSegment::new());\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `TaskStateSegment::new`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n    = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"]}},{"file":"src/components/boot/mod.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Byte-OS/polyhal/src/components/boot/mod.rs (original lines from 43 to 43)\n-/// \n+///\n"]}},{"file":"src/components/instruction/x86_64/shutdown.rs","count":1,"kinds":{"Clippy(Warn)":["warning: empty `loop {}` wastes CPU cycles\n --> src/components/instruction/x86_64/shutdown.rs:6:5\n  |\n6 |     loop {}\n  |     ^^^^^^^\n  |\n  = help: you should either use `panic!()` or add a call pausing or sleeping the thread to the loop body\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_loop\n  = note: `#[warn(clippy::empty_loop)]` on by default\n\n"]}},{"file":"src/components/timer/x86_64.rs","count":1,"kinds":{"Clippy(Warn)":["warning: digits grouped inconsistently by underscores\n --> src/components/timer/x86_64.rs:6:34\n  |\n6 | static mut CPU_FREQ_MHZ: usize = 4000_000_000;\n  |                                  ^^^^^^^^^^^^ help: consider: `4_000_000_000`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n  = note: `#[warn(clippy::inconsistent_digit_grouping)]` on by default\n\n"]}},{"file":"src/utils/mutex_no_irq.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unsafe function's docs miss `# Safety` section\n  --> src/utils/mutex_no_irq.rs:59:5\n   |\n59 |     pub unsafe fn force_unlock(&self) {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"]}}]},{"user":"kern-crates","repo":"ByteOS","pkg":"kernel","count":20,"raw_reports":[{"file":"kernel/src/syscall/task.rs","count":5,"kinds":{"Clippy(Warn)":["warning: this `else { if .. }` block can be collapsed\n   --> kernel/src/syscall/task.rs:726:24\n    |\n726 |                   } else {\n    |  ________________________^\n727 | |                     if let Some(index) = target_signal.real_time_index() {\n728 | |                         child_tcb.signal_queue[index] += 1;\n729 | |                     }\n730 | |                 }\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\n    = note: `#[warn(clippy::collapsible_else_if)]` on by default\nhelp: collapse nested if block\n    |\n726 ~                 } else if let Some(index) = target_signal.real_time_index() {\n727 +                     child_tcb.signal_queue[index] += 1;\n728 +                 }\n    |\n\n","warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:757:36\n    |\n757 |             sec: stime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n    = note: `#[warn(clippy::inconsistent_digit_grouping)]` on by default\n\n","warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:758:37\n    |\n758 |             usec: stime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n","warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:761:36\n    |\n761 |             sec: utime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n","warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:762:37\n    |\n762 |             usec: utime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"]}},{"file":"kernel/build.rs","count":3,"kinds":{"Clippy(Warn)":["warning: comparison to empty slice\n  --> kernel/build.rs:17:12\n   |\n17 |         if module == \"\" {\n   |            ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `module.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n   = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n","warning: single-character string constant used as pattern\n  --> kernel/build.rs:20:84\n   |\n20 |         module_file_content.push_str(&format!(\"extern crate {};\\n\", module.replace(\"-\", \"_\")))\n   |                                                                                    ^^^ help: try using a `char` instead: `'-'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n","warning: single-character string constant used as pattern\n  --> kernel/build.rs:29:16\n   |\n29 |         .split(\",\")\n   |                ^^^ help: try using a `char` instead: `','`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"]}},{"file":"kernel/src/syscall/fd.rs","count":2,"kinds":{"Clippy(Warn)":["warning: digits of hex, binary or octal literal not in groups of equal size\n   --> kernel/src/syscall/fd.rs:699:57\n    |\n699 |         let etime = current_nsec() + timeout as usize * 0x1000_000;\n    |                                                         ^^^^^^^^^^ help: consider: `0x0100_0000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n    = note: `#[warn(clippy::unusual_byte_groupings)]` on by default\n\n","warning: digits of hex, binary or octal literal not in groups of equal size\n   --> kernel/src/syscall/fd.rs:936:31\n    |\n936 |             stime + timeout * 0x1000_000\n    |                               ^^^^^^^^^^ help: consider: `0x0100_0000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n\n"]}},{"file":"kernel/src/user/socket_pair.rs","count":2,"kinds":{"Clippy(Warn)":["warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:42:9\n   |\n42 | /         if events.contains(PollEvent::POLLOUT) {\n43 | |             if self.inner.lock().len() <= 0x50000 {\n44 | |                 res |= PollEvent::POLLOUT;\n45 | |             }\n46 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n   = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n   |\n42 ~         if events.contains(PollEvent::POLLOUT) && self.inner.lock().len() <= 0x50000 {\n43 +             res |= PollEvent::POLLOUT;\n44 +         }\n   |\n\n","warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:47:9\n   |\n47 | /         if events.contains(PollEvent::POLLIN) {\n48 | |             if self.inner.lock().len() > 0 {\n49 | |                 res |= PollEvent::POLLIN;\n50 | |             }\n51 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n   |\n47 ~         if events.contains(PollEvent::POLLIN) && self.inner.lock().len() > 0 {\n48 +             res |= PollEvent::POLLIN;\n49 +         }\n   |\n\n"]}},{"file":"/home/runner/check/batch_2/kern-crates/ByteOS/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 663 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (96 crate dependencies)\nCrate:     ahash\nVersion:   0.8.3\nWarning:   yanked\nDependency tree:\nahash 0.8.3\n└── hashbrown 0.14.0\n    ├── kernel 0.1.0\n    └── executor 0.1.0\n        └── kernel 0.1.0\n\nwarning: 1 allowed warning found\n\n{\n  \"database\": {\n    \"advisory-count\": 663,\n    \"last-commit\": \"acb7ce45817b13dd34cb32540ff18be4e1f3ba09\",\n    \"last-updated\": \"2024-10-09T00:13:59+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 96\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"ahash\",\n          \"version\": \"0.8.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"2c99f64d1e06488f620f932677e24bc6e2897582980441ae90a671415bd7ec2f\",\n          \"dependencies\": [\n            {\n              \"name\": \"cfg-if\",\n              \"version\": \"1.0.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"once_cell\",\n              \"version\": \"1.19.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=kernel, checker=Clippy\n// toolchain=nightly-2023-12-01, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_2/kern-crates/ByteOS/kernel\n// cmd=cargo clippy --target x86_64-unknown-none --no-deps --message-format=json\n    Checking cfg-if v1.0.0\n    Checking scopeguard v1.1.0\n   Compiling lock_api v0.4.9\n   Compiling log v0.4.17\n    Checking bitflags v1.3.2\n    Checking bitflags v2.4.2\n    Checking bit_field v0.10.2\n   Compiling paste v1.0.14\n   Compiling rustversion v1.0.12\n    Checking raw-cpuid v10.7.0\n    Checking spin v0.9.8\n   Compiling x86 v0.52.0\n    Checking volatile v0.4.6\n   Compiling percpu v0.1.0 (https://github.com/Byte-OS/percpu.git#a71e60e3)\n    Checking bit v0.1.1\n    Checking sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n    Checking irq_safety v0.1.1 (https://github.com/theseus-os/irq_safety.git#11bfab9f)\n    Checking raw-cpuid v11.0.1\n    Checking multiboot v0.8.0\n    Checking fdt v0.1.5\n    Checking byteorder v1.4.3\n    Checking x86_64 v0.14.10\n    Checking zerocopy v0.7.32\n    Checking linkme v0.3.22\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n    Checking downcast-rs v1.2.0\n    Checking vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling num-traits v0.2.16\n   Compiling ahash v0.8.3\n    Checking once_cell v1.19.0\n    Checking virtio-drivers v0.7.1 (https://github.com/rcore-os/virtio-drivers?rev=61ece50#61ece509)\n   Compiling futures-core v0.3.28\n    Checking num_enum v0.6.1\n    Checking allocator-api2 v0.2.16\n    Checking x2apic v0.4.3\n    Checking polyhal v0.1.0 (https://github.com/Byte-OS/polyhal.git#78137eed)\n   Compiling kramdisk v0.1.0 (https://github.com/Byte-OS/kramdisk.git#9eb2394b)\n    Checking hashbrown v0.14.0\n   Compiling allocator v0.1.0 (https://github.com/Byte-OS/allocator.git?rev=c6ce949146d5feab1d406502b19b035f5d392c35#c6ce9491)\n    Checking procfs v0.1.0 (https://github.com/Byte-OS/procfs.git#0477d4ee)\n    Checking frame_allocator v0.1.0 (https://github.com/Byte-OS/bit_frame_allocator.git#e401675a)\n    Checking buddy_system_allocator v0.9.0\n    Checking hal v0.1.0 (https://github.com/Byte-OS/hal.git#6f40272c)\n    Checking ramfs v0.1.0 (https://github.com/Byte-OS/ramfs.git#57167265)\n    Checking fatfs v0.4.0 (https://github.com/byte-os/rust-fatfs.git#3b45ddc5)\n    Checking zero v0.1.3\n    Checking ns16550a v0.2.0\n    Checking pin-project-lite v0.2.9\n    Checking xmas-elf v0.9.0\n    Checking futures-lite v1.13.0\n    Checking devices v0.1.0 (https://github.com/Byte-OS/devices.git#28ba385a)\n    Checking logging v0.1.0 (https://github.com/Byte-OS/logging.git#3e749346)\n    Checking devfs v0.1.0 (https://github.com/Byte-OS/devfs.git#c5e510df)\n    Checking ns16550a v0.1.0 (https://github.com/Byte-OS/driver-ns16550a.git#059e0f27)\n    Checking kgoldfish-rtc v0.1.0 (https://github.com/Byte-OS/driver-kgoldfish-rtc.git#66e0234f)\n    Checking general-plic v0.1.0 (https://github.com/Byte-OS/driver-general-plic.git#d6196a18)\n    Checking kvirtio v0.1.0 (https://github.com/Byte-OS/driver-kvirtio.git#5917abe9)\n    Checking executor v0.1.0 (https://github.com/Byte-OS/executor.git#d1dd77ff)\n   Compiling kernel v0.1.0 (/home/runner/check/batch_2/kern-crates/ByteOS/kernel)\n    Checking lose-net-stack v0.1.0 (https://github.com/byte-os/lose-net-stack?rev=bb99460#bb99460f)\n    Checking signal v0.1.0 (https://github.com/Byte-OS/signal.git#a03290b1)\n    Checking fs v0.1.0 (https://github.com/Byte-OS/fs.git#6d968ea7)\nerror: could not compile `kernel` (bin \"kernel\") due to 2 previous errors; 12 warnings emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=kernel, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_2/kern-crates/ByteOS/kernel\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none\n   Compiling cfg-if v1.0.0\n   Compiling scopeguard v1.1.0\n   Compiling lock_api v0.4.9\n   Compiling log v0.4.17\n   Compiling bitflags v1.3.2\n   Compiling bitflags v2.4.2\n   Compiling bit_field v0.10.2\n[2024-10-12T15:56:49Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1522:11: 1522:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1525:13: 1525:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:56:49Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling rustversion v1.0.12\n   Compiling paste v1.0.14\n   Compiling raw-cpuid v10.7.0\n   Compiling spin v0.9.8\n   Compiling x86 v0.52.0\n   Compiling volatile v0.4.6\n   Compiling percpu v0.1.0 (https://github.com/Byte-OS/percpu.git#a71e60e3)\n   Compiling bit v0.1.1\n   Compiling sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n   Compiling irq_safety v0.1.1 (https://github.com/theseus-os/irq_safety.git#11bfab9f)\n   Compiling raw-cpuid v11.0.1\n   Compiling multiboot v0.8.0\n   Compiling x86_64 v0.14.10\n   Compiling fdt v0.1.5\n   Compiling x2apic v0.4.3\n   Compiling byteorder v1.4.3\n   Compiling linkme v0.3.22\n   Compiling polyhal v0.1.0 (https://github.com/Byte-OS/polyhal.git#78137eed)\n   Compiling zerocopy v0.7.32\n   Compiling timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling downcast-rs v1.2.0\n   Compiling vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling num-traits v0.2.16\n   Compiling frame_allocator v0.1.0 (https://github.com/Byte-OS/bit_frame_allocator.git#e401675a)\n   Compiling virtio-drivers v0.7.1 (https://github.com/rcore-os/virtio-drivers?rev=61ece50#61ece509)\n   Compiling ahash v0.8.3\n   Compiling once_cell v1.19.0\n   Compiling futures-core v0.3.28\n   Compiling num_enum v0.6.1\nerror[E0635]: unknown feature `stdsimd`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ahash-0.8.3/src/lib.rs:99:42\n   |\n99 | #![cfg_attr(feature = \"stdsimd\", feature(stdsimd))]\n   |                                          ^^^^^^^\n\n   Compiling hal v0.1.0 (https://github.com/Byte-OS/hal.git#6f40272c)\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `ahash` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:56:49Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1522:11: 1522:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1525:13: 1525:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:56:49Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"kernel/src/syscall/mod.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unneeded sub `cfg` when there is only one condition\n   --> kernel/src/syscall/mod.rs:381:19\n    |\n381 |             #[cfg(any(target_arch = \"x86_64\"))]\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `target_arch = \"x86_64\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_minimal_cfg\n    = note: `#[warn(clippy::non_minimal_cfg)]` on by default\n\n"]}},{"file":"kernel/src/syscall/shm.rs","count":1,"kinds":{"Clippy(Warn)":["warning: this is a decimal constant\n  --> kernel/src/syscall/shm.rs:31:21\n   |\n31 |         if shmflg & 01000 > 0 {\n   |                     ^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_prefixed_literal\n   = note: `#[warn(clippy::zero_prefixed_literal)]` on by default\nhelp: if you mean to use a decimal constant, remove the `0` to avoid confusion\n   |\n31 |         if shmflg & 1000 > 0 {\n   |                     ~~~~\nhelp: if you mean to use an octal constant, use `0o`\n   |\n31 |         if shmflg & 0o1000 > 0 {\n   |                     ~~~~~~\n\n"]}},{"file":"kernel/src/tasks/initproc.rs","count":1,"kinds":{"Clippy(Warn)":["warning: constants have by default a `'static` lifetime\n   --> kernel/src/tasks/initproc.rs:213:27\n    |\n213 | pub const USER_WORK_DIR: &'static str = \"/\";\n    |                          -^^^^^^^---- help: consider removing `'static`: `&str`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n    = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default\n\n"]}},{"file":"kernel/src/user/signal.rs","count":1,"kinds":{"Clippy(Error)":["error[E0432]: unresolved import `polyhal::SIG_RETURN_ADDR`\n --> kernel/src/user/signal.rs:5:30\n  |\n5 | use polyhal::{TrapFrameArgs, SIG_RETURN_ADDR};\n  |                              ^^^^^^^^^^^^^^^ no `SIG_RETURN_ADDR` in the root\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"mingo","count":7,"raw_reports":[{"file":"src/main.rs","count":3,"kinds":{"Clippy(Error)":["error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n","error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n","error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=mingo, checker=Clippy\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader\n// cmd=cargo clippy --target x86_64-unknown-none --no-deps --message-format=json\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader)\nerror: could not compile `mingo` (bin \"kernel\") due to 6 previous errors\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=mingo, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader)\nerror: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\nerror[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\nerror[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\nerror[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `mingo` (bin \"kernel\") due to 5 previous errors\n"]}},{"file":"src/cpu.rs","count":1,"kinds":{"Clippy(Error)":["error[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\n"]}},{"file":"src/panic_wait.rs","count":1,"kinds":{"Clippy(Error)":["error: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}}]},{"user":"shilei-massclouds","repo":"axdtb","pkg":"rt_axdtb","count":7,"raw_reports":[{"file":"src/main.rs","count":5,"kinds":{"Unformatted":["file: /home/runner/check/batch_13/shilei-massclouds/axdtb/rt_axdtb/src/main.rs (original lines from 27 to 41)\n-    let mut cb = |name: String,\n-                  _addr_cells: usize,\n-                  _size_cells: usize,\n-                  props: Vec<(String, Vec<u8>)>| {\n-        match name.as_str() {\n-            \"chosen\" => {\n-                for prop in props {\n-                    match prop.0.as_str() {\n-                        \"bootargs\" => {\n-                            if let Ok(cmd) = core::str::from_utf8(&prop.1) {\n-                                let cmd = cmd.trim_end_matches(char::from(0));\n-                                assert!(cmd.len() > 0);\n-                                assert!(cmd.starts_with(\"init=\"));\n-                                let cmd = cmd.strip_prefix(\"init=\").unwrap();\n-                                assert!(cmd == \"/sbin/init\" || cmd == \"/btp/sbin/hello\");\n+    let mut cb =\n+        |name: String, _addr_cells: usize, _size_cells: usize, props: Vec<(String, Vec<u8>)>| {\n+            match name.as_str() {\n+                \"chosen\" => {\n+                    for prop in props {\n+                        match prop.0.as_str() {\n+                            \"bootargs\" => {\n+                                if let Ok(cmd) = core::str::from_utf8(&prop.1) {\n+                                    let cmd = cmd.trim_end_matches(char::from(0));\n+                                    assert!(cmd.len() > 0);\n+                                    assert!(cmd.starts_with(\"init=\"));\n+                                    let cmd = cmd.strip_prefix(\"init=\").unwrap();\n+                                    assert!(cmd == \"/sbin/init\" || cmd == \"/btp/sbin/hello\");\n+                                }\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/rt_axdtb/src/main.rs (original lines from 43 to 43)\n+                            _ => (),\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/rt_axdtb/src/main.rs (original lines from 44 to 44)\n-                        _ => (),\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/rt_axdtb/src/main.rs (original lines from 47 to 50)\n-            },\n-            _ => (),\n-        }\n-    };\n+                _ => (),\n+            }\n+        };\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/rt_axdtb/src/main.rs (original lines from 56 to 57)\n-fn test_dtb(_dtb_pa: usize) {\n-}\n+fn test_dtb(_dtb_pa: usize) {}\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=rt_axdtb, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_13/shilei-massclouds/axdtb/rt_axdtb\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none\n   Compiling bit_field v0.10.2\n   Compiling cfg-if v1.0.0\n   Compiling rustversion v1.0.17\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n   Compiling bitflags v2.6.0\n   Compiling bitflags v1.3.2\n   Compiling volatile v0.4.6\n   Compiling raw-cpuid v10.7.0\n   Compiling paste v1.0.15\n   Compiling log v0.4.22\n[2024-10-12T15:03:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:03:52Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling x86 v0.52.0\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#4de587b7)\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling bit v0.1.1\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#52d4fca1)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling raw-cpuid v11.2.0\n   Compiling const-default v1.0.0\n   Compiling x86_64 v0.14.12\n   Compiling rlsf v0.2.1\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal#83ec99c0)\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling static_assertions v1.1.0\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling arch_boot v0.1.0 (ssh://git@github.com/shilei-massclouds/arch_boot#8663e839)\n   Compiling allocator v0.1.0 (ssh://git@github.com/shilei-massclouds/allocator#d93ad046)\n   Compiling axtype v0.1.0 (ssh://git@github.com/shilei-massclouds/axtype#e48d1d9f)\n   Compiling x2apic v0.4.3\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:6:20\n  |\n6 | pub use platform::{getchar, putchar};\n  |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n  |                    |\n  |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:10:15\n   |\n10 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:16:19\n   |\n16 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n16 -         platform::putchar(*c);\n16 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:23:36\n   |\n23 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n23 -         if let Some(c) = platform::getchar() {\n23 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:03:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:03:52Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"Byte-OS","repo":"polyhal","pkg":"example","count":5,"raw_reports":[{"file":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/macros.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unreachable statement\n   --> src/main.rs:123:5\n    |\n117 | /     loop {\n118 | |         if let Some(c) = DebugConsole::getchar() {\n119 | |             DebugConsole::putchar(c);\n120 | |         }\n121 | |     }\n    | |_____- any code following this expression is unreachable\n122 |\n123 |       log::info!(\"Run END. Shutdown successfully.\");\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: `#[warn(unreachable_code)]` on by default\n    = note: this warning originates in the macro `$crate::log` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"/home/runner/check/batch_1/Byte-OS/polyhal/src/components/common.rs","count":1,"kinds":{"Clippy(Warn)":["warning: function `parse_dtb_info` is never used\n  --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/common.rs:77:15\n   |\n77 | pub(crate) fn parse_dtb_info() {\n   |               ^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:31:36Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:31:36Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/frame.rs","count":1,"kinds":{"Clippy(Warn)":["warning: redundant closure\n --> src/frame.rs:6:15\n  |\n6 |     Lazy::new(|| LockedFrameAllocator::new());\n  |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `LockedFrameAllocator::new`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n  = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"]}},{"file":"src/main.rs","count":1,"kinds":{"Clippy(Warn)":["warning: empty `loop {}` wastes CPU cycles\n  --> src/main.rs:70:9\n   |\n70 |         loop {}\n   |         ^^^^^^^\n   |\n   = help: you should either use `panic!()` or add a call pausing or sleeping the thread to the loop body\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_loop\n   = note: `#[warn(clippy::empty_loop)]` on by default\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axfs","count":4,"raw_reports":[{"file":"/home/runner/check/batch_1/arceos-org/arceos/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 663 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (190 crate dependencies)\nCrate:     shlex\nVersion:   1.1.0\nTitle:     Multiple issues involving quote API\nDate:      2024-01-21\nID:        RUSTSEC-2024-0006\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0006\nSolution:  Upgrade to >=1.3.0\nDependency tree:\nshlex 1.1.0\n└── bindgen 0.69.4\n    ├── axlibc 0.1.0\n    └── arceos_posix_api 0.1.0\n        └── axlibc 0.1.0\n\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.6\n    └── defmt 0.3.5\n        └── smoltcp 0.10.0\n            ├── ixgbe-driver 0.1.0\n            │   └── axdriver_net 0.1.0\n            │       ├── axnet 0.1.0\n            │       │   ├── axruntime 0.1.0\n            │       │   │   ├── axfeat 0.1.0\n            │       │   │   │   ├── axstd 0.1.0\n            │       │   │   │   │   ├── arceos-shell 0.1.0\n            │       │   │   │   │   ├── arceos-httpserver 0.1.0\n            │       │   │   │   │   ├── arceos-httpclient 0.1.0\n            │       │   │   │   │   └── arceos-helloworld 0.1.0\n            │       │   │   │   ├── axlibc 0.1.0\n            │       │   │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   │   │   └── axlibc 0.1.0\n            │       │   │   │   └── arceos_api 0.1.0\n            │       │   │   │       └── axstd 0.1.0\n            │       │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   └── arceos_api 0.1.0\n            │       │   ├── axfeat 0.1.0\n            │       │   ├── arceos_posix_api 0.1.0\n            │       │   └── arceos_api 0.1.0\n            │       ├── axdriver_virtio 0.1.0\n            │       │   └── axdriver 0.1.0\n            │       │       ├── axruntime 0.1.0\n            │       │       ├── axnet 0.1.0\n            │       │       ├── axfs 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   ├── arceos_posix_api 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       ├── axfeat 0.1.0\n            │       │       ├── axdisplay 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       └── arceos_api 0.1.0\n            │       └── axdriver 0.1.0\n            └── axnet 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   0.1.11\nWarning:   yanked\nDependency tree:\natomic-polyfill 0.1.11\n└── heapless 0.7.16\n    └── smoltcp 0.10.0\n        ├── ixgbe-driver 0.1.0\n        │   └── axdriver_net 0.1.0\n        │       ├── axnet 0.1.0\n        │       │   ├── axruntime 0.1.0\n        │       │   │   ├── axfeat 0.1.0\n        │       │   │   │   ├── axstd 0.1.0\n        │       │   │   │   │   ├── arceos-shell 0.1.0\n        │       │   │   │   │   ├── arceos-httpserver 0.1.0\n        │       │   │   │   │   ├── arceos-httpclient 0.1.0\n        │       │   │   │   │   └── arceos-helloworld 0.1.0\n        │       │   │   │   ├── axlibc 0.1.0\n        │       │   │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   │   └── axlibc 0.1.0\n        │       │   │   │   └── arceos_api 0.1.0\n        │       │   │   │       └── axstd 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axdriver_virtio 0.1.0\n        │       │   └── axdriver 0.1.0\n        │       │       ├── axruntime 0.1.0\n        │       │       ├── axnet 0.1.0\n        │       │       ├── axfs 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   ├── arceos_posix_api 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       ├── axfeat 0.1.0\n        │       │       ├── axdisplay 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       └── arceos_api 0.1.0\n        │       └── axdriver 0.1.0\n        └── axnet 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 663,\n    \"last-commit\": \"acb7ce45817b13dd34cb32540ff18be4e1f3ba09\",\n    \"last-updated\": \"2024-10-09T00:13:59+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 190\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0006\",\n          \"package\": \"shlex\",\n          \"title\": \"Multiple issues involving quote API\",\n          \"description\": \"## Issue 1: Failure to quote characters\\n\\nAffected versions of this crate allowed the bytes `{` and `\\\\xa0` to appear\\nunquoted and unescaped in command arguments.\\n\\nIf the output of `quote` or `join` is passed to a shell, then what should be a\\nsingle command argument could be interpreted as multiple arguments.\\n\\nThis does not *directly* allow arbitrary command execution (you can't inject a\\ncommand substitution or similar).  But depending on the command you're running,\\nbeing able to inject multiple arguments where only one is expected could lead\\nto undesired consequences, potentially including arbitrary command execution.\\n\\nThe flaw was corrected in version 1.2.1 by escaping additional characters.\\nUpdating to 1.3.0 is recommended, but 1.2.1 offers a more minimal fix if\\ndesired.\\n\\nWorkaround: Check for the bytes `{` and `\\\\xa0` in `quote`/`join` input or\\noutput.\\n\\n(Note: `{` is problematic because it is used for glob expansion.  `\\\\xa0` is\\nproblematic because it's treated as a word separator in [specific\\nenvironments][solved-xa0].)\\n\\n## Issue 2: Dangerous API w.r.t. nul bytes\\n\\nVersion 1.3.0 deprecates the `quote` and `join` APIs in favor of `try_quote`\\nand `try_join`, which behave the same except that they have `Result` return\\ntype, returning `Err` if the input contains nul bytes.\\n\\nStrings containing nul bytes generally cannot be used in Unix command arguments\\nor environment variables, and most shells cannot handle nul bytes even\\ninternally.  If you try to pass one anyway, then the results might be\\nsecurity-sensitive in uncommon scenarios.  [More details here.][nul-bytes]\\n\\nDue to the low severity, the behavior of the original `quote` and `join` APIs\\nhas not changed; they continue to allow nuls.\\n\\nWorkaround: Manually check for nul bytes in `quote`/`join` input or output.\\n\\n## Issue 3: Lack of documentation for interactive shell risks\\n\\nThe `quote` family of functions does not and cannot escape control characters.\\nWith non-interactive shells this is perfectly safe, as control characters have\\nno special effect.  But if you writing directly to the standard input of an\\ninteractive shell (or through a pty), then control characters [can cause\\nmisbehavior including arbitrary command injection.][control-characters]\\n\\nThis is essentially unfixable, and has not been patched.  But as of version\\n1.3.0, documentation has been added.\\n\\nFuture versions of `shlex` may add API variants that avoid the issue at the\\ncost of reduced portability.\\n\\n[solved-xa0]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#solved-xa0\\n[nul-bytes]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#nul-bytes\\n[control-characters]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#control-characters-interactive-contexts-only\",\n          \"date\": \"2024-01-21\",\n          \"aliases\": [\n            \"GHSA-r7qv-8r2h-pg27\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"code-execution\",\n            \"file-disclosure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/comex/rust-shlex/security/advisories/GHSA-r7qv-8r2h-pg27\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=1.3.0\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"shlex::bytes::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::bytes::quote\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::quote\": [\n              \"<1.2.1\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"shlex\",\n          \"version\": \"1.1.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"43b2853a4d09f215c24cc5489c992ce46052d359b5109343cbafbf26bc62f8a3\",\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.36\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"0.1.11\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e3ff7eb3f316534d83a8a2c3d1674ace8a5a71198eba31e2e2b597833f699b28\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.1.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axfs/src/api/file.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/api/file.rs:27:5\n   |\n27 | /     pub const fn new() -> Self {\n28 | |         OpenOptions(fops::OpenOptions::new())\n29 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl Default for OpenOptions {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"]}},{"file":"modules/axfs/src/fops.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/fops.rs:54:5\n   |\n54 | /     pub const fn new() -> Self {\n55 | |         Self {\n56 | |             // generic\n57 | |             read: false,\n...  |\n66 | |         }\n67 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n52 + impl Default for OpenOptions {\n53 +     fn default() -> Self {\n54 +         Self::new()\n55 +     }\n56 + }\n   |\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axnet","count":4,"raw_reports":[{"file":"/home/runner/check/batch_1/arceos-org/arceos/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 663 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (190 crate dependencies)\nCrate:     shlex\nVersion:   1.1.0\nTitle:     Multiple issues involving quote API\nDate:      2024-01-21\nID:        RUSTSEC-2024-0006\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0006\nSolution:  Upgrade to >=1.3.0\nDependency tree:\nshlex 1.1.0\n└── bindgen 0.69.4\n    ├── axlibc 0.1.0\n    └── arceos_posix_api 0.1.0\n        └── axlibc 0.1.0\n\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.6\n    └── defmt 0.3.5\n        └── smoltcp 0.10.0\n            ├── ixgbe-driver 0.1.0\n            │   └── axdriver_net 0.1.0\n            │       ├── axnet 0.1.0\n            │       │   ├── axruntime 0.1.0\n            │       │   │   ├── axfeat 0.1.0\n            │       │   │   │   ├── axstd 0.1.0\n            │       │   │   │   │   ├── arceos-shell 0.1.0\n            │       │   │   │   │   ├── arceos-httpserver 0.1.0\n            │       │   │   │   │   ├── arceos-httpclient 0.1.0\n            │       │   │   │   │   └── arceos-helloworld 0.1.0\n            │       │   │   │   ├── axlibc 0.1.0\n            │       │   │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   │   │   └── axlibc 0.1.0\n            │       │   │   │   └── arceos_api 0.1.0\n            │       │   │   │       └── axstd 0.1.0\n            │       │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   └── arceos_api 0.1.0\n            │       │   ├── axfeat 0.1.0\n            │       │   ├── arceos_posix_api 0.1.0\n            │       │   └── arceos_api 0.1.0\n            │       ├── axdriver_virtio 0.1.0\n            │       │   └── axdriver 0.1.0\n            │       │       ├── axruntime 0.1.0\n            │       │       ├── axnet 0.1.0\n            │       │       ├── axfs 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   ├── arceos_posix_api 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       ├── axfeat 0.1.0\n            │       │       ├── axdisplay 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       └── arceos_api 0.1.0\n            │       └── axdriver 0.1.0\n            └── axnet 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   0.1.11\nWarning:   yanked\nDependency tree:\natomic-polyfill 0.1.11\n└── heapless 0.7.16\n    └── smoltcp 0.10.0\n        ├── ixgbe-driver 0.1.0\n        │   └── axdriver_net 0.1.0\n        │       ├── axnet 0.1.0\n        │       │   ├── axruntime 0.1.0\n        │       │   │   ├── axfeat 0.1.0\n        │       │   │   │   ├── axstd 0.1.0\n        │       │   │   │   │   ├── arceos-shell 0.1.0\n        │       │   │   │   │   ├── arceos-httpserver 0.1.0\n        │       │   │   │   │   ├── arceos-httpclient 0.1.0\n        │       │   │   │   │   └── arceos-helloworld 0.1.0\n        │       │   │   │   ├── axlibc 0.1.0\n        │       │   │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   │   └── axlibc 0.1.0\n        │       │   │   │   └── arceos_api 0.1.0\n        │       │   │   │       └── axstd 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axdriver_virtio 0.1.0\n        │       │   └── axdriver 0.1.0\n        │       │       ├── axruntime 0.1.0\n        │       │       ├── axnet 0.1.0\n        │       │       ├── axfs 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   ├── arceos_posix_api 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       ├── axfeat 0.1.0\n        │       │       ├── axdisplay 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       └── arceos_api 0.1.0\n        │       └── axdriver 0.1.0\n        └── axnet 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 663,\n    \"last-commit\": \"acb7ce45817b13dd34cb32540ff18be4e1f3ba09\",\n    \"last-updated\": \"2024-10-09T00:13:59+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 190\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0006\",\n          \"package\": \"shlex\",\n          \"title\": \"Multiple issues involving quote API\",\n          \"description\": \"## Issue 1: Failure to quote characters\\n\\nAffected versions of this crate allowed the bytes `{` and `\\\\xa0` to appear\\nunquoted and unescaped in command arguments.\\n\\nIf the output of `quote` or `join` is passed to a shell, then what should be a\\nsingle command argument could be interpreted as multiple arguments.\\n\\nThis does not *directly* allow arbitrary command execution (you can't inject a\\ncommand substitution or similar).  But depending on the command you're running,\\nbeing able to inject multiple arguments where only one is expected could lead\\nto undesired consequences, potentially including arbitrary command execution.\\n\\nThe flaw was corrected in version 1.2.1 by escaping additional characters.\\nUpdating to 1.3.0 is recommended, but 1.2.1 offers a more minimal fix if\\ndesired.\\n\\nWorkaround: Check for the bytes `{` and `\\\\xa0` in `quote`/`join` input or\\noutput.\\n\\n(Note: `{` is problematic because it is used for glob expansion.  `\\\\xa0` is\\nproblematic because it's treated as a word separator in [specific\\nenvironments][solved-xa0].)\\n\\n## Issue 2: Dangerous API w.r.t. nul bytes\\n\\nVersion 1.3.0 deprecates the `quote` and `join` APIs in favor of `try_quote`\\nand `try_join`, which behave the same except that they have `Result` return\\ntype, returning `Err` if the input contains nul bytes.\\n\\nStrings containing nul bytes generally cannot be used in Unix command arguments\\nor environment variables, and most shells cannot handle nul bytes even\\ninternally.  If you try to pass one anyway, then the results might be\\nsecurity-sensitive in uncommon scenarios.  [More details here.][nul-bytes]\\n\\nDue to the low severity, the behavior of the original `quote` and `join` APIs\\nhas not changed; they continue to allow nuls.\\n\\nWorkaround: Manually check for nul bytes in `quote`/`join` input or output.\\n\\n## Issue 3: Lack of documentation for interactive shell risks\\n\\nThe `quote` family of functions does not and cannot escape control characters.\\nWith non-interactive shells this is perfectly safe, as control characters have\\nno special effect.  But if you writing directly to the standard input of an\\ninteractive shell (or through a pty), then control characters [can cause\\nmisbehavior including arbitrary command injection.][control-characters]\\n\\nThis is essentially unfixable, and has not been patched.  But as of version\\n1.3.0, documentation has been added.\\n\\nFuture versions of `shlex` may add API variants that avoid the issue at the\\ncost of reduced portability.\\n\\n[solved-xa0]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#solved-xa0\\n[nul-bytes]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#nul-bytes\\n[control-characters]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#control-characters-interactive-contexts-only\",\n          \"date\": \"2024-01-21\",\n          \"aliases\": [\n            \"GHSA-r7qv-8r2h-pg27\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"code-execution\",\n            \"file-disclosure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/comex/rust-shlex/security/advisories/GHSA-r7qv-8r2h-pg27\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=1.3.0\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"shlex::bytes::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::bytes::quote\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::quote\": [\n              \"<1.2.1\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"shlex\",\n          \"version\": \"1.1.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"43b2853a4d09f215c24cc5489c992ce46052d359b5109343cbafbf26bc62f8a3\",\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.36\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"0.1.11\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e3ff7eb3f316534d83a8a2c3d1674ace8a5a71198eba31e2e2b597833f699b28\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.1.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axnet/src/smoltcp_impl/tcp.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `TcpSocket`\n  --> modules/axnet/src/smoltcp_impl/tcp.rs:50:5\n   |\n50 | /     pub const fn new() -> Self {\n51 | |         Self {\n52 | |             state: AtomicU8::new(STATE_CLOSED),\n53 | |             handle: UnsafeCell::new(None),\n...  |\n57 | |         }\n58 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n48 + impl Default for TcpSocket {\n49 +     fn default() -> Self {\n50 +         Self::new()\n51 +     }\n52 + }\n   |\n\n"]}},{"file":"src/smoltcp_impl/mod.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/arceos-org/arceos/modules/axnet/src/smoltcp_impl/mod.rs (original lines from 191 to 192)\n-    type RxToken<'a> = AxNetRxToken<'a> where Self: 'a;\n-    type TxToken<'a> = AxNetTxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = AxNetRxToken<'a>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = AxNetTxToken<'a>\n+    where\n+        Self: 'a;\n"]}}]},{"user":"kern-crates","repo":"linux_syscall_api","pkg":"linux_syscall_api","count":4,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/7296a14/src/arch/x86_64.rs","count":1,"kinds":{"Clippy(Error)":["error[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/7296a14/src/arch/x86_64.rs:150:5\n    |\n150 | /     asm!(\n151 | |         \"\n152 | |         push    rbp\n153 | |         push    rbx\n...   |\n168 | |         options(noreturn),\n169 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=linux_syscall_api, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_7/kern-crates/linux_syscall_api\n// cmd=cargo clippy --target x86_64-unknown-none --no-deps --message-format=json\n    Checking log v0.4.19\n    Checking bit_field v0.10.2\n    Checking bitflags v2.5.0\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#12d36f6c)\n    Checking raw-cpuid v10.7.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling x86 v0.52.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#a19854cc)\n   Compiling lock_api v0.4.12\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking x86_64 v0.14.12\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.12\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling svgbobdoc v0.3.0\n    Checking spin v0.9.8\n    Checking spin v0.5.2\n   Compiling paste v1.0.15\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.4.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#4ae66642)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#939e6eb9)\n    Checking byteorder v1.5.0\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#6923b09d)\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#bb7589fe)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#7296a141)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 663 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (125 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.8\n    └── defmt 0.3.7\n        └── smoltcp 0.11.0\n            └── axnet 0.1.0\n                └── linux_syscall_api 0.1.0\n\nCrate:     defmt\nVersion:   0.3.7\nWarning:   yanked\nDependency tree:\ndefmt 0.3.7\n└── smoltcp 0.11.0\n    └── axnet 0.1.0\n        └── linux_syscall_api 0.1.0\n\nCrate:     defmt-macros\nVersion:   0.3.8\nWarning:   yanked\nDependency tree:\ndefmt-macros 0.3.8\n└── defmt 0.3.7\n    └── smoltcp 0.11.0\n        └── axnet 0.1.0\n            └── linux_syscall_api 0.1.0\n\nCrate:     libc\nVersion:   0.2.154\nWarning:   yanked\nDependency tree:\nlibc 0.2.154\n└── rlsf 0.2.1\n    └── allocator 0.1.0\n        └── axalloc 0.1.0\n            ├── axruntime 0.1.0\n            │   ├── linux_syscall_api 0.1.0\n            │   └── axfeat 0.1.0\n            │       └── linux_syscall_api 0.1.0\n            ├── axprocess 0.1.0\n            │   ├── linux_syscall_api 0.1.0\n            │   ├── axruntime 0.1.0\n            │   ├── axnet 0.1.0\n            │   │   └── linux_syscall_api 0.1.0\n            │   └── axfeat 0.1.0\n            ├── axmem 0.1.0\n            │   ├── linux_syscall_api 0.1.0\n            │   ├── axruntime 0.1.0\n            │   └── axprocess 0.1.0\n            ├── axhal 0.1.0\n            │   ├── linux_syscall_api 0.1.0\n            │   ├── axtask 0.1.0\n            │   │   ├── linux_syscall_api 0.1.0\n            │   │   ├── axsync 0.1.0\n            │   │   │   ├── linux_syscall_api 0.1.0\n            │   │   │   ├── axprocess 0.1.0\n            │   │   │   ├── axnet 0.1.0\n            │   │   │   ├── axfs 0.1.0\n            │   │   │   │   ├── linux_syscall_api 0.1.0\n            │   │   │   │   ├── axruntime 0.1.0\n            │   │   │   │   ├── axprocess 0.1.0\n            │   │   │   │   ├── axmem 0.1.0\n            │   │   │   │   └── axfeat 0.1.0\n            │   │   │   └── axfeat 0.1.0\n            │   │   ├── axruntime 0.1.0\n            │   │   ├── axprocess 0.1.0\n            │   │   ├── axnet 0.1.0\n            │   │   └── axfeat 0.1.0\n            │   ├── axsignal 0.1.0\n            │   │   ├── linux_syscall_api 0.1.0\n            │   │   ├── axtask 0.1.0\n            │   │   └── axprocess 0.1.0\n            │   ├── axruntime 0.1.0\n            │   ├── axprocess 0.1.0\n            │   ├── axnet 0.1.0\n            │   ├── axmem 0.1.0\n            │   ├── axfeat 0.1.0\n            │   └── axdriver 0.1.0\n            │       ├── axruntime 0.1.0\n            │       ├── axnet 0.1.0\n            │       ├── axfs 0.1.0\n            │       └── axfeat 0.1.0\n            ├── axfeat 0.1.0\n            └── axdriver 0.1.0\n\nwarning: 4 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 663,\n    \"last-commit\": \"acb7ce45817b13dd34cb32540ff18be4e1f3ba09\",\n    \"last-updated\": \"2024-10-09T00:13:59+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 125\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.82\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.36\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"defmt\",\n          \"version\": \"0.3.7\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"a22725573c1874522d6b853e12cb6c3c08cea5ff79fdc69be544087ac7080439\",\n          \"dependencies\": [\n            {\n              \"name\": \"bitflags\",\n              \"version\": \"1.3.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"defmt-macros\",\n              \"version\": \"0.3.8\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      },\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"defmt-macros\",\n          \"version\": \"0.3.8\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"00b2cc6a76c0932c749dfe6f8191040c880830aa80c07143cd1d0adb5717abd6\",\n          \"dependencies\": [\n            {\n              \"name\": \"defmt-parser\",\n              \"version\": \"0.3.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro-error\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.82\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.36\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"2.0.63\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      },\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"libc\",\n          \"version\": \"0.2.154\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"ae743338b92ff9146ce83992f766a31066a91a8c84a45e0e9f21e7cf6de6d346\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T14:52:41Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.19/src/lib.rs:1407:11: 1407:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.19/src/lib.rs:1410:13: 1410:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T14:52:41Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-12T14:52:51Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at src/syscall_fs/imp/ctl.rs:216:18: 216:90 (#0) after dropped at src/syscall_fs/imp/ctl.rs:219:5: 219:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-12T14:52:51Z WARN  lockbud::callbacks] crate linux_syscall_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"arceos_api","count":2,"raw_reports":[{"file":"/home/runner/check/batch_1/arceos-org/arceos/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 663 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (190 crate dependencies)\nCrate:     shlex\nVersion:   1.1.0\nTitle:     Multiple issues involving quote API\nDate:      2024-01-21\nID:        RUSTSEC-2024-0006\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0006\nSolution:  Upgrade to >=1.3.0\nDependency tree:\nshlex 1.1.0\n└── bindgen 0.69.4\n    ├── axlibc 0.1.0\n    └── arceos_posix_api 0.1.0\n        └── axlibc 0.1.0\n\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.6\n    └── defmt 0.3.5\n        └── smoltcp 0.10.0\n            ├── ixgbe-driver 0.1.0\n            │   └── axdriver_net 0.1.0\n            │       ├── axnet 0.1.0\n            │       │   ├── axruntime 0.1.0\n            │       │   │   ├── axfeat 0.1.0\n            │       │   │   │   ├── axstd 0.1.0\n            │       │   │   │   │   ├── arceos-shell 0.1.0\n            │       │   │   │   │   ├── arceos-httpserver 0.1.0\n            │       │   │   │   │   ├── arceos-httpclient 0.1.0\n            │       │   │   │   │   └── arceos-helloworld 0.1.0\n            │       │   │   │   ├── axlibc 0.1.0\n            │       │   │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   │   │   └── axlibc 0.1.0\n            │       │   │   │   └── arceos_api 0.1.0\n            │       │   │   │       └── axstd 0.1.0\n            │       │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   └── arceos_api 0.1.0\n            │       │   ├── axfeat 0.1.0\n            │       │   ├── arceos_posix_api 0.1.0\n            │       │   └── arceos_api 0.1.0\n            │       ├── axdriver_virtio 0.1.0\n            │       │   └── axdriver 0.1.0\n            │       │       ├── axruntime 0.1.0\n            │       │       ├── axnet 0.1.0\n            │       │       ├── axfs 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   ├── arceos_posix_api 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       ├── axfeat 0.1.0\n            │       │       ├── axdisplay 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       └── arceos_api 0.1.0\n            │       └── axdriver 0.1.0\n            └── axnet 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   0.1.11\nWarning:   yanked\nDependency tree:\natomic-polyfill 0.1.11\n└── heapless 0.7.16\n    └── smoltcp 0.10.0\n        ├── ixgbe-driver 0.1.0\n        │   └── axdriver_net 0.1.0\n        │       ├── axnet 0.1.0\n        │       │   ├── axruntime 0.1.0\n        │       │   │   ├── axfeat 0.1.0\n        │       │   │   │   ├── axstd 0.1.0\n        │       │   │   │   │   ├── arceos-shell 0.1.0\n        │       │   │   │   │   ├── arceos-httpserver 0.1.0\n        │       │   │   │   │   ├── arceos-httpclient 0.1.0\n        │       │   │   │   │   └── arceos-helloworld 0.1.0\n        │       │   │   │   ├── axlibc 0.1.0\n        │       │   │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   │   └── axlibc 0.1.0\n        │       │   │   │   └── arceos_api 0.1.0\n        │       │   │   │       └── axstd 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axdriver_virtio 0.1.0\n        │       │   └── axdriver 0.1.0\n        │       │       ├── axruntime 0.1.0\n        │       │       ├── axnet 0.1.0\n        │       │       ├── axfs 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   ├── arceos_posix_api 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       ├── axfeat 0.1.0\n        │       │       ├── axdisplay 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       └── arceos_api 0.1.0\n        │       └── axdriver 0.1.0\n        └── axnet 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 663,\n    \"last-commit\": \"acb7ce45817b13dd34cb32540ff18be4e1f3ba09\",\n    \"last-updated\": \"2024-10-09T00:13:59+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 190\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0006\",\n          \"package\": \"shlex\",\n          \"title\": \"Multiple issues involving quote API\",\n          \"description\": \"## Issue 1: Failure to quote characters\\n\\nAffected versions of this crate allowed the bytes `{` and `\\\\xa0` to appear\\nunquoted and unescaped in command arguments.\\n\\nIf the output of `quote` or `join` is passed to a shell, then what should be a\\nsingle command argument could be interpreted as multiple arguments.\\n\\nThis does not *directly* allow arbitrary command execution (you can't inject a\\ncommand substitution or similar).  But depending on the command you're running,\\nbeing able to inject multiple arguments where only one is expected could lead\\nto undesired consequences, potentially including arbitrary command execution.\\n\\nThe flaw was corrected in version 1.2.1 by escaping additional characters.\\nUpdating to 1.3.0 is recommended, but 1.2.1 offers a more minimal fix if\\ndesired.\\n\\nWorkaround: Check for the bytes `{` and `\\\\xa0` in `quote`/`join` input or\\noutput.\\n\\n(Note: `{` is problematic because it is used for glob expansion.  `\\\\xa0` is\\nproblematic because it's treated as a word separator in [specific\\nenvironments][solved-xa0].)\\n\\n## Issue 2: Dangerous API w.r.t. nul bytes\\n\\nVersion 1.3.0 deprecates the `quote` and `join` APIs in favor of `try_quote`\\nand `try_join`, which behave the same except that they have `Result` return\\ntype, returning `Err` if the input contains nul bytes.\\n\\nStrings containing nul bytes generally cannot be used in Unix command arguments\\nor environment variables, and most shells cannot handle nul bytes even\\ninternally.  If you try to pass one anyway, then the results might be\\nsecurity-sensitive in uncommon scenarios.  [More details here.][nul-bytes]\\n\\nDue to the low severity, the behavior of the original `quote` and `join` APIs\\nhas not changed; they continue to allow nuls.\\n\\nWorkaround: Manually check for nul bytes in `quote`/`join` input or output.\\n\\n## Issue 3: Lack of documentation for interactive shell risks\\n\\nThe `quote` family of functions does not and cannot escape control characters.\\nWith non-interactive shells this is perfectly safe, as control characters have\\nno special effect.  But if you writing directly to the standard input of an\\ninteractive shell (or through a pty), then control characters [can cause\\nmisbehavior including arbitrary command injection.][control-characters]\\n\\nThis is essentially unfixable, and has not been patched.  But as of version\\n1.3.0, documentation has been added.\\n\\nFuture versions of `shlex` may add API variants that avoid the issue at the\\ncost of reduced portability.\\n\\n[solved-xa0]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#solved-xa0\\n[nul-bytes]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#nul-bytes\\n[control-characters]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#control-characters-interactive-contexts-only\",\n          \"date\": \"2024-01-21\",\n          \"aliases\": [\n            \"GHSA-r7qv-8r2h-pg27\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"code-execution\",\n            \"file-disclosure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/comex/rust-shlex/security/advisories/GHSA-r7qv-8r2h-pg27\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=1.3.0\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"shlex::bytes::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::bytes::quote\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::quote\": [\n              \"<1.2.1\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"shlex\",\n          \"version\": \"1.1.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"43b2853a4d09f215c24cc5489c992ce46052d359b5109343cbafbf26bc62f8a3\",\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.36\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"0.1.11\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e3ff7eb3f316534d83a8a2c3d1674ace8a5a71198eba31e2e2b597833f699b28\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.1.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"arceos_posix_api","count":2,"raw_reports":[{"file":"/home/runner/check/batch_1/arceos-org/arceos/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 663 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (190 crate dependencies)\nCrate:     shlex\nVersion:   1.1.0\nTitle:     Multiple issues involving quote API\nDate:      2024-01-21\nID:        RUSTSEC-2024-0006\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0006\nSolution:  Upgrade to >=1.3.0\nDependency tree:\nshlex 1.1.0\n└── bindgen 0.69.4\n    ├── axlibc 0.1.0\n    └── arceos_posix_api 0.1.0\n        └── axlibc 0.1.0\n\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.6\n    └── defmt 0.3.5\n        └── smoltcp 0.10.0\n            ├── ixgbe-driver 0.1.0\n            │   └── axdriver_net 0.1.0\n            │       ├── axnet 0.1.0\n            │       │   ├── axruntime 0.1.0\n            │       │   │   ├── axfeat 0.1.0\n            │       │   │   │   ├── axstd 0.1.0\n            │       │   │   │   │   ├── arceos-shell 0.1.0\n            │       │   │   │   │   ├── arceos-httpserver 0.1.0\n            │       │   │   │   │   ├── arceos-httpclient 0.1.0\n            │       │   │   │   │   └── arceos-helloworld 0.1.0\n            │       │   │   │   ├── axlibc 0.1.0\n            │       │   │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   │   │   └── axlibc 0.1.0\n            │       │   │   │   └── arceos_api 0.1.0\n            │       │   │   │       └── axstd 0.1.0\n            │       │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   └── arceos_api 0.1.0\n            │       │   ├── axfeat 0.1.0\n            │       │   ├── arceos_posix_api 0.1.0\n            │       │   └── arceos_api 0.1.0\n            │       ├── axdriver_virtio 0.1.0\n            │       │   └── axdriver 0.1.0\n            │       │       ├── axruntime 0.1.0\n            │       │       ├── axnet 0.1.0\n            │       │       ├── axfs 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   ├── arceos_posix_api 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       ├── axfeat 0.1.0\n            │       │       ├── axdisplay 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       └── arceos_api 0.1.0\n            │       └── axdriver 0.1.0\n            └── axnet 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   0.1.11\nWarning:   yanked\nDependency tree:\natomic-polyfill 0.1.11\n└── heapless 0.7.16\n    └── smoltcp 0.10.0\n        ├── ixgbe-driver 0.1.0\n        │   └── axdriver_net 0.1.0\n        │       ├── axnet 0.1.0\n        │       │   ├── axruntime 0.1.0\n        │       │   │   ├── axfeat 0.1.0\n        │       │   │   │   ├── axstd 0.1.0\n        │       │   │   │   │   ├── arceos-shell 0.1.0\n        │       │   │   │   │   ├── arceos-httpserver 0.1.0\n        │       │   │   │   │   ├── arceos-httpclient 0.1.0\n        │       │   │   │   │   └── arceos-helloworld 0.1.0\n        │       │   │   │   ├── axlibc 0.1.0\n        │       │   │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   │   └── axlibc 0.1.0\n        │       │   │   │   └── arceos_api 0.1.0\n        │       │   │   │       └── axstd 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axdriver_virtio 0.1.0\n        │       │   └── axdriver 0.1.0\n        │       │       ├── axruntime 0.1.0\n        │       │       ├── axnet 0.1.0\n        │       │       ├── axfs 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   ├── arceos_posix_api 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       ├── axfeat 0.1.0\n        │       │       ├── axdisplay 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       └── arceos_api 0.1.0\n        │       └── axdriver 0.1.0\n        └── axnet 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 663,\n    \"last-commit\": \"acb7ce45817b13dd34cb32540ff18be4e1f3ba09\",\n    \"last-updated\": \"2024-10-09T00:13:59+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 190\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0006\",\n          \"package\": \"shlex\",\n          \"title\": \"Multiple issues involving quote API\",\n          \"description\": \"## Issue 1: Failure to quote characters\\n\\nAffected versions of this crate allowed the bytes `{` and `\\\\xa0` to appear\\nunquoted and unescaped in command arguments.\\n\\nIf the output of `quote` or `join` is passed to a shell, then what should be a\\nsingle command argument could be interpreted as multiple arguments.\\n\\nThis does not *directly* allow arbitrary command execution (you can't inject a\\ncommand substitution or similar).  But depending on the command you're running,\\nbeing able to inject multiple arguments where only one is expected could lead\\nto undesired consequences, potentially including arbitrary command execution.\\n\\nThe flaw was corrected in version 1.2.1 by escaping additional characters.\\nUpdating to 1.3.0 is recommended, but 1.2.1 offers a more minimal fix if\\ndesired.\\n\\nWorkaround: Check for the bytes `{` and `\\\\xa0` in `quote`/`join` input or\\noutput.\\n\\n(Note: `{` is problematic because it is used for glob expansion.  `\\\\xa0` is\\nproblematic because it's treated as a word separator in [specific\\nenvironments][solved-xa0].)\\n\\n## Issue 2: Dangerous API w.r.t. nul bytes\\n\\nVersion 1.3.0 deprecates the `quote` and `join` APIs in favor of `try_quote`\\nand `try_join`, which behave the same except that they have `Result` return\\ntype, returning `Err` if the input contains nul bytes.\\n\\nStrings containing nul bytes generally cannot be used in Unix command arguments\\nor environment variables, and most shells cannot handle nul bytes even\\ninternally.  If you try to pass one anyway, then the results might be\\nsecurity-sensitive in uncommon scenarios.  [More details here.][nul-bytes]\\n\\nDue to the low severity, the behavior of the original `quote` and `join` APIs\\nhas not changed; they continue to allow nuls.\\n\\nWorkaround: Manually check for nul bytes in `quote`/`join` input or output.\\n\\n## Issue 3: Lack of documentation for interactive shell risks\\n\\nThe `quote` family of functions does not and cannot escape control characters.\\nWith non-interactive shells this is perfectly safe, as control characters have\\nno special effect.  But if you writing directly to the standard input of an\\ninteractive shell (or through a pty), then control characters [can cause\\nmisbehavior including arbitrary command injection.][control-characters]\\n\\nThis is essentially unfixable, and has not been patched.  But as of version\\n1.3.0, documentation has been added.\\n\\nFuture versions of `shlex` may add API variants that avoid the issue at the\\ncost of reduced portability.\\n\\n[solved-xa0]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#solved-xa0\\n[nul-bytes]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#nul-bytes\\n[control-characters]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#control-characters-interactive-contexts-only\",\n          \"date\": \"2024-01-21\",\n          \"aliases\": [\n            \"GHSA-r7qv-8r2h-pg27\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"code-execution\",\n            \"file-disclosure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/comex/rust-shlex/security/advisories/GHSA-r7qv-8r2h-pg27\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=1.3.0\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"shlex::bytes::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::bytes::quote\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::quote\": [\n              \"<1.2.1\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"shlex\",\n          \"version\": \"1.1.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"43b2853a4d09f215c24cc5489c992ce46052d359b5109343cbafbf26bc62f8a3\",\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.36\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"0.1.11\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e3ff7eb3f316534d83a8a2c3d1674ace8a5a71198eba31e2e2b597833f699b28\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.1.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-12T15:38:19Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:38:19Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-12T15:38:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:38:24Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axalloc","count":2,"raw_reports":[{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axalloc/src/lib.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `GlobalAllocator`\n  --> modules/axalloc/src/lib.rs:57:5\n   |\n57 | /     pub const fn new() -> Self {\n58 | |         Self {\n59 | |             balloc: SpinNoIrq::new(DefaultByteAllocator::new()),\n60 | |             palloc: SpinNoIrq::new(BitmapPageAllocator::new()),\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n55 + impl Default for GlobalAllocator {\n56 +     fn default() -> Self {\n57 +         Self::new()\n58 +     }\n59 + }\n   |\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axdisplay","count":2,"raw_reports":[{"file":"/home/runner/check/batch_1/arceos-org/arceos/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 663 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (190 crate dependencies)\nCrate:     shlex\nVersion:   1.1.0\nTitle:     Multiple issues involving quote API\nDate:      2024-01-21\nID:        RUSTSEC-2024-0006\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0006\nSolution:  Upgrade to >=1.3.0\nDependency tree:\nshlex 1.1.0\n└── bindgen 0.69.4\n    ├── axlibc 0.1.0\n    └── arceos_posix_api 0.1.0\n        └── axlibc 0.1.0\n\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.6\n    └── defmt 0.3.5\n        └── smoltcp 0.10.0\n            ├── ixgbe-driver 0.1.0\n            │   └── axdriver_net 0.1.0\n            │       ├── axnet 0.1.0\n            │       │   ├── axruntime 0.1.0\n            │       │   │   ├── axfeat 0.1.0\n            │       │   │   │   ├── axstd 0.1.0\n            │       │   │   │   │   ├── arceos-shell 0.1.0\n            │       │   │   │   │   ├── arceos-httpserver 0.1.0\n            │       │   │   │   │   ├── arceos-httpclient 0.1.0\n            │       │   │   │   │   └── arceos-helloworld 0.1.0\n            │       │   │   │   ├── axlibc 0.1.0\n            │       │   │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   │   │   └── axlibc 0.1.0\n            │       │   │   │   └── arceos_api 0.1.0\n            │       │   │   │       └── axstd 0.1.0\n            │       │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   └── arceos_api 0.1.0\n            │       │   ├── axfeat 0.1.0\n            │       │   ├── arceos_posix_api 0.1.0\n            │       │   └── arceos_api 0.1.0\n            │       ├── axdriver_virtio 0.1.0\n            │       │   └── axdriver 0.1.0\n            │       │       ├── axruntime 0.1.0\n            │       │       ├── axnet 0.1.0\n            │       │       ├── axfs 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   ├── arceos_posix_api 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       ├── axfeat 0.1.0\n            │       │       ├── axdisplay 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       └── arceos_api 0.1.0\n            │       └── axdriver 0.1.0\n            └── axnet 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   0.1.11\nWarning:   yanked\nDependency tree:\natomic-polyfill 0.1.11\n└── heapless 0.7.16\n    └── smoltcp 0.10.0\n        ├── ixgbe-driver 0.1.0\n        │   └── axdriver_net 0.1.0\n        │       ├── axnet 0.1.0\n        │       │   ├── axruntime 0.1.0\n        │       │   │   ├── axfeat 0.1.0\n        │       │   │   │   ├── axstd 0.1.0\n        │       │   │   │   │   ├── arceos-shell 0.1.0\n        │       │   │   │   │   ├── arceos-httpserver 0.1.0\n        │       │   │   │   │   ├── arceos-httpclient 0.1.0\n        │       │   │   │   │   └── arceos-helloworld 0.1.0\n        │       │   │   │   ├── axlibc 0.1.0\n        │       │   │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   │   └── axlibc 0.1.0\n        │       │   │   │   └── arceos_api 0.1.0\n        │       │   │   │       └── axstd 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axdriver_virtio 0.1.0\n        │       │   └── axdriver 0.1.0\n        │       │       ├── axruntime 0.1.0\n        │       │       ├── axnet 0.1.0\n        │       │       ├── axfs 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   ├── arceos_posix_api 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       ├── axfeat 0.1.0\n        │       │       ├── axdisplay 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       └── arceos_api 0.1.0\n        │       └── axdriver 0.1.0\n        └── axnet 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 663,\n    \"last-commit\": \"acb7ce45817b13dd34cb32540ff18be4e1f3ba09\",\n    \"last-updated\": \"2024-10-09T00:13:59+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 190\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0006\",\n          \"package\": \"shlex\",\n          \"title\": \"Multiple issues involving quote API\",\n          \"description\": \"## Issue 1: Failure to quote characters\\n\\nAffected versions of this crate allowed the bytes `{` and `\\\\xa0` to appear\\nunquoted and unescaped in command arguments.\\n\\nIf the output of `quote` or `join` is passed to a shell, then what should be a\\nsingle command argument could be interpreted as multiple arguments.\\n\\nThis does not *directly* allow arbitrary command execution (you can't inject a\\ncommand substitution or similar).  But depending on the command you're running,\\nbeing able to inject multiple arguments where only one is expected could lead\\nto undesired consequences, potentially including arbitrary command execution.\\n\\nThe flaw was corrected in version 1.2.1 by escaping additional characters.\\nUpdating to 1.3.0 is recommended, but 1.2.1 offers a more minimal fix if\\ndesired.\\n\\nWorkaround: Check for the bytes `{` and `\\\\xa0` in `quote`/`join` input or\\noutput.\\n\\n(Note: `{` is problematic because it is used for glob expansion.  `\\\\xa0` is\\nproblematic because it's treated as a word separator in [specific\\nenvironments][solved-xa0].)\\n\\n## Issue 2: Dangerous API w.r.t. nul bytes\\n\\nVersion 1.3.0 deprecates the `quote` and `join` APIs in favor of `try_quote`\\nand `try_join`, which behave the same except that they have `Result` return\\ntype, returning `Err` if the input contains nul bytes.\\n\\nStrings containing nul bytes generally cannot be used in Unix command arguments\\nor environment variables, and most shells cannot handle nul bytes even\\ninternally.  If you try to pass one anyway, then the results might be\\nsecurity-sensitive in uncommon scenarios.  [More details here.][nul-bytes]\\n\\nDue to the low severity, the behavior of the original `quote` and `join` APIs\\nhas not changed; they continue to allow nuls.\\n\\nWorkaround: Manually check for nul bytes in `quote`/`join` input or output.\\n\\n## Issue 3: Lack of documentation for interactive shell risks\\n\\nThe `quote` family of functions does not and cannot escape control characters.\\nWith non-interactive shells this is perfectly safe, as control characters have\\nno special effect.  But if you writing directly to the standard input of an\\ninteractive shell (or through a pty), then control characters [can cause\\nmisbehavior including arbitrary command injection.][control-characters]\\n\\nThis is essentially unfixable, and has not been patched.  But as of version\\n1.3.0, documentation has been added.\\n\\nFuture versions of `shlex` may add API variants that avoid the issue at the\\ncost of reduced portability.\\n\\n[solved-xa0]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#solved-xa0\\n[nul-bytes]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#nul-bytes\\n[control-characters]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#control-characters-interactive-contexts-only\",\n          \"date\": \"2024-01-21\",\n          \"aliases\": [\n            \"GHSA-r7qv-8r2h-pg27\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"code-execution\",\n            \"file-disclosure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/comex/rust-shlex/security/advisories/GHSA-r7qv-8r2h-pg27\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=1.3.0\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"shlex::bytes::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::bytes::quote\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::quote\": [\n              \"<1.2.1\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"shlex\",\n          \"version\": \"1.1.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"43b2853a4d09f215c24cc5489c992ce46052d359b5109343cbafbf26bc62f8a3\",\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.36\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"0.1.11\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e3ff7eb3f316534d83a8a2c3d1674ace8a5a71198eba31e2e2b597833f699b28\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.1.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axdriver","count":2,"raw_reports":[{"file":"/home/runner/check/batch_1/arceos-org/arceos/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 663 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (190 crate dependencies)\nCrate:     shlex\nVersion:   1.1.0\nTitle:     Multiple issues involving quote API\nDate:      2024-01-21\nID:        RUSTSEC-2024-0006\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0006\nSolution:  Upgrade to >=1.3.0\nDependency tree:\nshlex 1.1.0\n└── bindgen 0.69.4\n    ├── axlibc 0.1.0\n    └── arceos_posix_api 0.1.0\n        └── axlibc 0.1.0\n\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.6\n    └── defmt 0.3.5\n        └── smoltcp 0.10.0\n            ├── ixgbe-driver 0.1.0\n            │   └── axdriver_net 0.1.0\n            │       ├── axnet 0.1.0\n            │       │   ├── axruntime 0.1.0\n            │       │   │   ├── axfeat 0.1.0\n            │       │   │   │   ├── axstd 0.1.0\n            │       │   │   │   │   ├── arceos-shell 0.1.0\n            │       │   │   │   │   ├── arceos-httpserver 0.1.0\n            │       │   │   │   │   ├── arceos-httpclient 0.1.0\n            │       │   │   │   │   └── arceos-helloworld 0.1.0\n            │       │   │   │   ├── axlibc 0.1.0\n            │       │   │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   │   │   └── axlibc 0.1.0\n            │       │   │   │   └── arceos_api 0.1.0\n            │       │   │   │       └── axstd 0.1.0\n            │       │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   └── arceos_api 0.1.0\n            │       │   ├── axfeat 0.1.0\n            │       │   ├── arceos_posix_api 0.1.0\n            │       │   └── arceos_api 0.1.0\n            │       ├── axdriver_virtio 0.1.0\n            │       │   └── axdriver 0.1.0\n            │       │       ├── axruntime 0.1.0\n            │       │       ├── axnet 0.1.0\n            │       │       ├── axfs 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   ├── arceos_posix_api 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       ├── axfeat 0.1.0\n            │       │       ├── axdisplay 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       └── arceos_api 0.1.0\n            │       └── axdriver 0.1.0\n            └── axnet 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   0.1.11\nWarning:   yanked\nDependency tree:\natomic-polyfill 0.1.11\n└── heapless 0.7.16\n    └── smoltcp 0.10.0\n        ├── ixgbe-driver 0.1.0\n        │   └── axdriver_net 0.1.0\n        │       ├── axnet 0.1.0\n        │       │   ├── axruntime 0.1.0\n        │       │   │   ├── axfeat 0.1.0\n        │       │   │   │   ├── axstd 0.1.0\n        │       │   │   │   │   ├── arceos-shell 0.1.0\n        │       │   │   │   │   ├── arceos-httpserver 0.1.0\n        │       │   │   │   │   ├── arceos-httpclient 0.1.0\n        │       │   │   │   │   └── arceos-helloworld 0.1.0\n        │       │   │   │   ├── axlibc 0.1.0\n        │       │   │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   │   └── axlibc 0.1.0\n        │       │   │   │   └── arceos_api 0.1.0\n        │       │   │   │       └── axstd 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axdriver_virtio 0.1.0\n        │       │   └── axdriver 0.1.0\n        │       │       ├── axruntime 0.1.0\n        │       │       ├── axnet 0.1.0\n        │       │       ├── axfs 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   ├── arceos_posix_api 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       ├── axfeat 0.1.0\n        │       │       ├── axdisplay 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       └── arceos_api 0.1.0\n        │       └── axdriver 0.1.0\n        └── axnet 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 663,\n    \"last-commit\": \"acb7ce45817b13dd34cb32540ff18be4e1f3ba09\",\n    \"last-updated\": \"2024-10-09T00:13:59+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 190\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0006\",\n          \"package\": \"shlex\",\n          \"title\": \"Multiple issues involving quote API\",\n          \"description\": \"## Issue 1: Failure to quote characters\\n\\nAffected versions of this crate allowed the bytes `{` and `\\\\xa0` to appear\\nunquoted and unescaped in command arguments.\\n\\nIf the output of `quote` or `join` is passed to a shell, then what should be a\\nsingle command argument could be interpreted as multiple arguments.\\n\\nThis does not *directly* allow arbitrary command execution (you can't inject a\\ncommand substitution or similar).  But depending on the command you're running,\\nbeing able to inject multiple arguments where only one is expected could lead\\nto undesired consequences, potentially including arbitrary command execution.\\n\\nThe flaw was corrected in version 1.2.1 by escaping additional characters.\\nUpdating to 1.3.0 is recommended, but 1.2.1 offers a more minimal fix if\\ndesired.\\n\\nWorkaround: Check for the bytes `{` and `\\\\xa0` in `quote`/`join` input or\\noutput.\\n\\n(Note: `{` is problematic because it is used for glob expansion.  `\\\\xa0` is\\nproblematic because it's treated as a word separator in [specific\\nenvironments][solved-xa0].)\\n\\n## Issue 2: Dangerous API w.r.t. nul bytes\\n\\nVersion 1.3.0 deprecates the `quote` and `join` APIs in favor of `try_quote`\\nand `try_join`, which behave the same except that they have `Result` return\\ntype, returning `Err` if the input contains nul bytes.\\n\\nStrings containing nul bytes generally cannot be used in Unix command arguments\\nor environment variables, and most shells cannot handle nul bytes even\\ninternally.  If you try to pass one anyway, then the results might be\\nsecurity-sensitive in uncommon scenarios.  [More details here.][nul-bytes]\\n\\nDue to the low severity, the behavior of the original `quote` and `join` APIs\\nhas not changed; they continue to allow nuls.\\n\\nWorkaround: Manually check for nul bytes in `quote`/`join` input or output.\\n\\n## Issue 3: Lack of documentation for interactive shell risks\\n\\nThe `quote` family of functions does not and cannot escape control characters.\\nWith non-interactive shells this is perfectly safe, as control characters have\\nno special effect.  But if you writing directly to the standard input of an\\ninteractive shell (or through a pty), then control characters [can cause\\nmisbehavior including arbitrary command injection.][control-characters]\\n\\nThis is essentially unfixable, and has not been patched.  But as of version\\n1.3.0, documentation has been added.\\n\\nFuture versions of `shlex` may add API variants that avoid the issue at the\\ncost of reduced portability.\\n\\n[solved-xa0]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#solved-xa0\\n[nul-bytes]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#nul-bytes\\n[control-characters]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#control-characters-interactive-contexts-only\",\n          \"date\": \"2024-01-21\",\n          \"aliases\": [\n            \"GHSA-r7qv-8r2h-pg27\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"code-execution\",\n            \"file-disclosure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/comex/rust-shlex/security/advisories/GHSA-r7qv-8r2h-pg27\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=1.3.0\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"shlex::bytes::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::bytes::quote\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::quote\": [\n              \"<1.2.1\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"shlex\",\n          \"version\": \"1.1.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"43b2853a4d09f215c24cc5489c992ce46052d359b5109343cbafbf26bc62f8a3\",\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.36\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"0.1.11\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e3ff7eb3f316534d83a8a2c3d1674ace8a5a71198eba31e2e2b597833f699b28\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.1.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axfeat","count":2,"raw_reports":[{"file":"/home/runner/check/batch_1/arceos-org/arceos/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 663 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (190 crate dependencies)\nCrate:     shlex\nVersion:   1.1.0\nTitle:     Multiple issues involving quote API\nDate:      2024-01-21\nID:        RUSTSEC-2024-0006\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0006\nSolution:  Upgrade to >=1.3.0\nDependency tree:\nshlex 1.1.0\n└── bindgen 0.69.4\n    ├── axlibc 0.1.0\n    └── arceos_posix_api 0.1.0\n        └── axlibc 0.1.0\n\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.6\n    └── defmt 0.3.5\n        └── smoltcp 0.10.0\n            ├── ixgbe-driver 0.1.0\n            │   └── axdriver_net 0.1.0\n            │       ├── axnet 0.1.0\n            │       │   ├── axruntime 0.1.0\n            │       │   │   ├── axfeat 0.1.0\n            │       │   │   │   ├── axstd 0.1.0\n            │       │   │   │   │   ├── arceos-shell 0.1.0\n            │       │   │   │   │   ├── arceos-httpserver 0.1.0\n            │       │   │   │   │   ├── arceos-httpclient 0.1.0\n            │       │   │   │   │   └── arceos-helloworld 0.1.0\n            │       │   │   │   ├── axlibc 0.1.0\n            │       │   │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   │   │   └── axlibc 0.1.0\n            │       │   │   │   └── arceos_api 0.1.0\n            │       │   │   │       └── axstd 0.1.0\n            │       │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   └── arceos_api 0.1.0\n            │       │   ├── axfeat 0.1.0\n            │       │   ├── arceos_posix_api 0.1.0\n            │       │   └── arceos_api 0.1.0\n            │       ├── axdriver_virtio 0.1.0\n            │       │   └── axdriver 0.1.0\n            │       │       ├── axruntime 0.1.0\n            │       │       ├── axnet 0.1.0\n            │       │       ├── axfs 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   ├── arceos_posix_api 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       ├── axfeat 0.1.0\n            │       │       ├── axdisplay 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       └── arceos_api 0.1.0\n            │       └── axdriver 0.1.0\n            └── axnet 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   0.1.11\nWarning:   yanked\nDependency tree:\natomic-polyfill 0.1.11\n└── heapless 0.7.16\n    └── smoltcp 0.10.0\n        ├── ixgbe-driver 0.1.0\n        │   └── axdriver_net 0.1.0\n        │       ├── axnet 0.1.0\n        │       │   ├── axruntime 0.1.0\n        │       │   │   ├── axfeat 0.1.0\n        │       │   │   │   ├── axstd 0.1.0\n        │       │   │   │   │   ├── arceos-shell 0.1.0\n        │       │   │   │   │   ├── arceos-httpserver 0.1.0\n        │       │   │   │   │   ├── arceos-httpclient 0.1.0\n        │       │   │   │   │   └── arceos-helloworld 0.1.0\n        │       │   │   │   ├── axlibc 0.1.0\n        │       │   │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   │   └── axlibc 0.1.0\n        │       │   │   │   └── arceos_api 0.1.0\n        │       │   │   │       └── axstd 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axdriver_virtio 0.1.0\n        │       │   └── axdriver 0.1.0\n        │       │       ├── axruntime 0.1.0\n        │       │       ├── axnet 0.1.0\n        │       │       ├── axfs 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   ├── arceos_posix_api 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       ├── axfeat 0.1.0\n        │       │       ├── axdisplay 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       └── arceos_api 0.1.0\n        │       └── axdriver 0.1.0\n        └── axnet 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 663,\n    \"last-commit\": \"acb7ce45817b13dd34cb32540ff18be4e1f3ba09\",\n    \"last-updated\": \"2024-10-09T00:13:59+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 190\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0006\",\n          \"package\": \"shlex\",\n          \"title\": \"Multiple issues involving quote API\",\n          \"description\": \"## Issue 1: Failure to quote characters\\n\\nAffected versions of this crate allowed the bytes `{` and `\\\\xa0` to appear\\nunquoted and unescaped in command arguments.\\n\\nIf the output of `quote` or `join` is passed to a shell, then what should be a\\nsingle command argument could be interpreted as multiple arguments.\\n\\nThis does not *directly* allow arbitrary command execution (you can't inject a\\ncommand substitution or similar).  But depending on the command you're running,\\nbeing able to inject multiple arguments where only one is expected could lead\\nto undesired consequences, potentially including arbitrary command execution.\\n\\nThe flaw was corrected in version 1.2.1 by escaping additional characters.\\nUpdating to 1.3.0 is recommended, but 1.2.1 offers a more minimal fix if\\ndesired.\\n\\nWorkaround: Check for the bytes `{` and `\\\\xa0` in `quote`/`join` input or\\noutput.\\n\\n(Note: `{` is problematic because it is used for glob expansion.  `\\\\xa0` is\\nproblematic because it's treated as a word separator in [specific\\nenvironments][solved-xa0].)\\n\\n## Issue 2: Dangerous API w.r.t. nul bytes\\n\\nVersion 1.3.0 deprecates the `quote` and `join` APIs in favor of `try_quote`\\nand `try_join`, which behave the same except that they have `Result` return\\ntype, returning `Err` if the input contains nul bytes.\\n\\nStrings containing nul bytes generally cannot be used in Unix command arguments\\nor environment variables, and most shells cannot handle nul bytes even\\ninternally.  If you try to pass one anyway, then the results might be\\nsecurity-sensitive in uncommon scenarios.  [More details here.][nul-bytes]\\n\\nDue to the low severity, the behavior of the original `quote` and `join` APIs\\nhas not changed; they continue to allow nuls.\\n\\nWorkaround: Manually check for nul bytes in `quote`/`join` input or output.\\n\\n## Issue 3: Lack of documentation for interactive shell risks\\n\\nThe `quote` family of functions does not and cannot escape control characters.\\nWith non-interactive shells this is perfectly safe, as control characters have\\nno special effect.  But if you writing directly to the standard input of an\\ninteractive shell (or through a pty), then control characters [can cause\\nmisbehavior including arbitrary command injection.][control-characters]\\n\\nThis is essentially unfixable, and has not been patched.  But as of version\\n1.3.0, documentation has been added.\\n\\nFuture versions of `shlex` may add API variants that avoid the issue at the\\ncost of reduced portability.\\n\\n[solved-xa0]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#solved-xa0\\n[nul-bytes]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#nul-bytes\\n[control-characters]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#control-characters-interactive-contexts-only\",\n          \"date\": \"2024-01-21\",\n          \"aliases\": [\n            \"GHSA-r7qv-8r2h-pg27\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"code-execution\",\n            \"file-disclosure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/comex/rust-shlex/security/advisories/GHSA-r7qv-8r2h-pg27\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=1.3.0\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"shlex::bytes::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::bytes::quote\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::quote\": [\n              \"<1.2.1\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"shlex\",\n          \"version\": \"1.1.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"43b2853a4d09f215c24cc5489c992ce46052d359b5109343cbafbf26bc62f8a3\",\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.36\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"0.1.11\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e3ff7eb3f316534d83a8a2c3d1674ace8a5a71198eba31e2e2b597833f699b28\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.1.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axhal","count":2,"raw_reports":[{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/arch/x86_64/context.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `TaskContext`\n   --> modules/axhal/src/arch/x86_64/context.rs:148:5\n    |\n148 | /     pub const fn new() -> Self {\n149 | |         Self {\n150 | |             kstack_top: va!(0),\n151 | |             rsp: 0,\n...   |\n155 | |         }\n156 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n146 + impl Default for TaskContext {\n147 +     fn default() -> Self {\n148 +         Self::new()\n149 +     }\n150 + }\n    |\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axlibc","count":2,"raw_reports":[{"file":"/home/runner/check/batch_1/arceos-org/arceos/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 663 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (190 crate dependencies)\nCrate:     shlex\nVersion:   1.1.0\nTitle:     Multiple issues involving quote API\nDate:      2024-01-21\nID:        RUSTSEC-2024-0006\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0006\nSolution:  Upgrade to >=1.3.0\nDependency tree:\nshlex 1.1.0\n└── bindgen 0.69.4\n    ├── axlibc 0.1.0\n    └── arceos_posix_api 0.1.0\n        └── axlibc 0.1.0\n\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.6\n    └── defmt 0.3.5\n        └── smoltcp 0.10.0\n            ├── ixgbe-driver 0.1.0\n            │   └── axdriver_net 0.1.0\n            │       ├── axnet 0.1.0\n            │       │   ├── axruntime 0.1.0\n            │       │   │   ├── axfeat 0.1.0\n            │       │   │   │   ├── axstd 0.1.0\n            │       │   │   │   │   ├── arceos-shell 0.1.0\n            │       │   │   │   │   ├── arceos-httpserver 0.1.0\n            │       │   │   │   │   ├── arceos-httpclient 0.1.0\n            │       │   │   │   │   └── arceos-helloworld 0.1.0\n            │       │   │   │   ├── axlibc 0.1.0\n            │       │   │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   │   │   └── axlibc 0.1.0\n            │       │   │   │   └── arceos_api 0.1.0\n            │       │   │   │       └── axstd 0.1.0\n            │       │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   └── arceos_api 0.1.0\n            │       │   ├── axfeat 0.1.0\n            │       │   ├── arceos_posix_api 0.1.0\n            │       │   └── arceos_api 0.1.0\n            │       ├── axdriver_virtio 0.1.0\n            │       │   └── axdriver 0.1.0\n            │       │       ├── axruntime 0.1.0\n            │       │       ├── axnet 0.1.0\n            │       │       ├── axfs 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   ├── arceos_posix_api 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       ├── axfeat 0.1.0\n            │       │       ├── axdisplay 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       └── arceos_api 0.1.0\n            │       └── axdriver 0.1.0\n            └── axnet 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   0.1.11\nWarning:   yanked\nDependency tree:\natomic-polyfill 0.1.11\n└── heapless 0.7.16\n    └── smoltcp 0.10.0\n        ├── ixgbe-driver 0.1.0\n        │   └── axdriver_net 0.1.0\n        │       ├── axnet 0.1.0\n        │       │   ├── axruntime 0.1.0\n        │       │   │   ├── axfeat 0.1.0\n        │       │   │   │   ├── axstd 0.1.0\n        │       │   │   │   │   ├── arceos-shell 0.1.0\n        │       │   │   │   │   ├── arceos-httpserver 0.1.0\n        │       │   │   │   │   ├── arceos-httpclient 0.1.0\n        │       │   │   │   │   └── arceos-helloworld 0.1.0\n        │       │   │   │   ├── axlibc 0.1.0\n        │       │   │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   │   └── axlibc 0.1.0\n        │       │   │   │   └── arceos_api 0.1.0\n        │       │   │   │       └── axstd 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axdriver_virtio 0.1.0\n        │       │   └── axdriver 0.1.0\n        │       │       ├── axruntime 0.1.0\n        │       │       ├── axnet 0.1.0\n        │       │       ├── axfs 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   ├── arceos_posix_api 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       ├── axfeat 0.1.0\n        │       │       ├── axdisplay 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       └── arceos_api 0.1.0\n        │       └── axdriver 0.1.0\n        └── axnet 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 663,\n    \"last-commit\": \"acb7ce45817b13dd34cb32540ff18be4e1f3ba09\",\n    \"last-updated\": \"2024-10-09T00:13:59+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 190\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0006\",\n          \"package\": \"shlex\",\n          \"title\": \"Multiple issues involving quote API\",\n          \"description\": \"## Issue 1: Failure to quote characters\\n\\nAffected versions of this crate allowed the bytes `{` and `\\\\xa0` to appear\\nunquoted and unescaped in command arguments.\\n\\nIf the output of `quote` or `join` is passed to a shell, then what should be a\\nsingle command argument could be interpreted as multiple arguments.\\n\\nThis does not *directly* allow arbitrary command execution (you can't inject a\\ncommand substitution or similar).  But depending on the command you're running,\\nbeing able to inject multiple arguments where only one is expected could lead\\nto undesired consequences, potentially including arbitrary command execution.\\n\\nThe flaw was corrected in version 1.2.1 by escaping additional characters.\\nUpdating to 1.3.0 is recommended, but 1.2.1 offers a more minimal fix if\\ndesired.\\n\\nWorkaround: Check for the bytes `{` and `\\\\xa0` in `quote`/`join` input or\\noutput.\\n\\n(Note: `{` is problematic because it is used for glob expansion.  `\\\\xa0` is\\nproblematic because it's treated as a word separator in [specific\\nenvironments][solved-xa0].)\\n\\n## Issue 2: Dangerous API w.r.t. nul bytes\\n\\nVersion 1.3.0 deprecates the `quote` and `join` APIs in favor of `try_quote`\\nand `try_join`, which behave the same except that they have `Result` return\\ntype, returning `Err` if the input contains nul bytes.\\n\\nStrings containing nul bytes generally cannot be used in Unix command arguments\\nor environment variables, and most shells cannot handle nul bytes even\\ninternally.  If you try to pass one anyway, then the results might be\\nsecurity-sensitive in uncommon scenarios.  [More details here.][nul-bytes]\\n\\nDue to the low severity, the behavior of the original `quote` and `join` APIs\\nhas not changed; they continue to allow nuls.\\n\\nWorkaround: Manually check for nul bytes in `quote`/`join` input or output.\\n\\n## Issue 3: Lack of documentation for interactive shell risks\\n\\nThe `quote` family of functions does not and cannot escape control characters.\\nWith non-interactive shells this is perfectly safe, as control characters have\\nno special effect.  But if you writing directly to the standard input of an\\ninteractive shell (or through a pty), then control characters [can cause\\nmisbehavior including arbitrary command injection.][control-characters]\\n\\nThis is essentially unfixable, and has not been patched.  But as of version\\n1.3.0, documentation has been added.\\n\\nFuture versions of `shlex` may add API variants that avoid the issue at the\\ncost of reduced portability.\\n\\n[solved-xa0]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#solved-xa0\\n[nul-bytes]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#nul-bytes\\n[control-characters]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#control-characters-interactive-contexts-only\",\n          \"date\": \"2024-01-21\",\n          \"aliases\": [\n            \"GHSA-r7qv-8r2h-pg27\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"code-execution\",\n            \"file-disclosure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/comex/rust-shlex/security/advisories/GHSA-r7qv-8r2h-pg27\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=1.3.0\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"shlex::bytes::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::bytes::quote\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::quote\": [\n              \"<1.2.1\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"shlex\",\n          \"version\": \"1.1.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"43b2853a4d09f215c24cc5489c992ce46052d359b5109343cbafbf26bc62f8a3\",\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.36\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"0.1.11\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e3ff7eb3f316534d83a8a2c3d1674ace8a5a71198eba31e2e2b597833f699b28\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.1.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-12T15:42:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:42:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-12T15:42:11Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:42:11Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axruntime","count":2,"raw_reports":[{"file":"/home/runner/check/batch_1/arceos-org/arceos/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 663 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (190 crate dependencies)\nCrate:     shlex\nVersion:   1.1.0\nTitle:     Multiple issues involving quote API\nDate:      2024-01-21\nID:        RUSTSEC-2024-0006\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0006\nSolution:  Upgrade to >=1.3.0\nDependency tree:\nshlex 1.1.0\n└── bindgen 0.69.4\n    ├── axlibc 0.1.0\n    └── arceos_posix_api 0.1.0\n        └── axlibc 0.1.0\n\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.6\n    └── defmt 0.3.5\n        └── smoltcp 0.10.0\n            ├── ixgbe-driver 0.1.0\n            │   └── axdriver_net 0.1.0\n            │       ├── axnet 0.1.0\n            │       │   ├── axruntime 0.1.0\n            │       │   │   ├── axfeat 0.1.0\n            │       │   │   │   ├── axstd 0.1.0\n            │       │   │   │   │   ├── arceos-shell 0.1.0\n            │       │   │   │   │   ├── arceos-httpserver 0.1.0\n            │       │   │   │   │   ├── arceos-httpclient 0.1.0\n            │       │   │   │   │   └── arceos-helloworld 0.1.0\n            │       │   │   │   ├── axlibc 0.1.0\n            │       │   │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   │   │   └── axlibc 0.1.0\n            │       │   │   │   └── arceos_api 0.1.0\n            │       │   │   │       └── axstd 0.1.0\n            │       │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   └── arceos_api 0.1.0\n            │       │   ├── axfeat 0.1.0\n            │       │   ├── arceos_posix_api 0.1.0\n            │       │   └── arceos_api 0.1.0\n            │       ├── axdriver_virtio 0.1.0\n            │       │   └── axdriver 0.1.0\n            │       │       ├── axruntime 0.1.0\n            │       │       ├── axnet 0.1.0\n            │       │       ├── axfs 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   ├── arceos_posix_api 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       ├── axfeat 0.1.0\n            │       │       ├── axdisplay 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       └── arceos_api 0.1.0\n            │       └── axdriver 0.1.0\n            └── axnet 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   0.1.11\nWarning:   yanked\nDependency tree:\natomic-polyfill 0.1.11\n└── heapless 0.7.16\n    └── smoltcp 0.10.0\n        ├── ixgbe-driver 0.1.0\n        │   └── axdriver_net 0.1.0\n        │       ├── axnet 0.1.0\n        │       │   ├── axruntime 0.1.0\n        │       │   │   ├── axfeat 0.1.0\n        │       │   │   │   ├── axstd 0.1.0\n        │       │   │   │   │   ├── arceos-shell 0.1.0\n        │       │   │   │   │   ├── arceos-httpserver 0.1.0\n        │       │   │   │   │   ├── arceos-httpclient 0.1.0\n        │       │   │   │   │   └── arceos-helloworld 0.1.0\n        │       │   │   │   ├── axlibc 0.1.0\n        │       │   │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   │   └── axlibc 0.1.0\n        │       │   │   │   └── arceos_api 0.1.0\n        │       │   │   │       └── axstd 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axdriver_virtio 0.1.0\n        │       │   └── axdriver 0.1.0\n        │       │       ├── axruntime 0.1.0\n        │       │       ├── axnet 0.1.0\n        │       │       ├── axfs 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   ├── arceos_posix_api 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       ├── axfeat 0.1.0\n        │       │       ├── axdisplay 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       └── arceos_api 0.1.0\n        │       └── axdriver 0.1.0\n        └── axnet 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 663,\n    \"last-commit\": \"acb7ce45817b13dd34cb32540ff18be4e1f3ba09\",\n    \"last-updated\": \"2024-10-09T00:13:59+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 190\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0006\",\n          \"package\": \"shlex\",\n          \"title\": \"Multiple issues involving quote API\",\n          \"description\": \"## Issue 1: Failure to quote characters\\n\\nAffected versions of this crate allowed the bytes `{` and `\\\\xa0` to appear\\nunquoted and unescaped in command arguments.\\n\\nIf the output of `quote` or `join` is passed to a shell, then what should be a\\nsingle command argument could be interpreted as multiple arguments.\\n\\nThis does not *directly* allow arbitrary command execution (you can't inject a\\ncommand substitution or similar).  But depending on the command you're running,\\nbeing able to inject multiple arguments where only one is expected could lead\\nto undesired consequences, potentially including arbitrary command execution.\\n\\nThe flaw was corrected in version 1.2.1 by escaping additional characters.\\nUpdating to 1.3.0 is recommended, but 1.2.1 offers a more minimal fix if\\ndesired.\\n\\nWorkaround: Check for the bytes `{` and `\\\\xa0` in `quote`/`join` input or\\noutput.\\n\\n(Note: `{` is problematic because it is used for glob expansion.  `\\\\xa0` is\\nproblematic because it's treated as a word separator in [specific\\nenvironments][solved-xa0].)\\n\\n## Issue 2: Dangerous API w.r.t. nul bytes\\n\\nVersion 1.3.0 deprecates the `quote` and `join` APIs in favor of `try_quote`\\nand `try_join`, which behave the same except that they have `Result` return\\ntype, returning `Err` if the input contains nul bytes.\\n\\nStrings containing nul bytes generally cannot be used in Unix command arguments\\nor environment variables, and most shells cannot handle nul bytes even\\ninternally.  If you try to pass one anyway, then the results might be\\nsecurity-sensitive in uncommon scenarios.  [More details here.][nul-bytes]\\n\\nDue to the low severity, the behavior of the original `quote` and `join` APIs\\nhas not changed; they continue to allow nuls.\\n\\nWorkaround: Manually check for nul bytes in `quote`/`join` input or output.\\n\\n## Issue 3: Lack of documentation for interactive shell risks\\n\\nThe `quote` family of functions does not and cannot escape control characters.\\nWith non-interactive shells this is perfectly safe, as control characters have\\nno special effect.  But if you writing directly to the standard input of an\\ninteractive shell (or through a pty), then control characters [can cause\\nmisbehavior including arbitrary command injection.][control-characters]\\n\\nThis is essentially unfixable, and has not been patched.  But as of version\\n1.3.0, documentation has been added.\\n\\nFuture versions of `shlex` may add API variants that avoid the issue at the\\ncost of reduced portability.\\n\\n[solved-xa0]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#solved-xa0\\n[nul-bytes]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#nul-bytes\\n[control-characters]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#control-characters-interactive-contexts-only\",\n          \"date\": \"2024-01-21\",\n          \"aliases\": [\n            \"GHSA-r7qv-8r2h-pg27\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"code-execution\",\n            \"file-disclosure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/comex/rust-shlex/security/advisories/GHSA-r7qv-8r2h-pg27\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=1.3.0\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"shlex::bytes::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::bytes::quote\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::quote\": [\n              \"<1.2.1\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"shlex\",\n          \"version\": \"1.1.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"43b2853a4d09f215c24cc5489c992ce46052d359b5109343cbafbf26bc62f8a3\",\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.36\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"0.1.11\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e3ff7eb3f316534d83a8a2c3d1674ace8a5a71198eba31e2e2b597833f699b28\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.1.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axstd","count":2,"raw_reports":[{"file":"/home/runner/check/batch_1/arceos-org/arceos/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 663 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (190 crate dependencies)\nCrate:     shlex\nVersion:   1.1.0\nTitle:     Multiple issues involving quote API\nDate:      2024-01-21\nID:        RUSTSEC-2024-0006\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0006\nSolution:  Upgrade to >=1.3.0\nDependency tree:\nshlex 1.1.0\n└── bindgen 0.69.4\n    ├── axlibc 0.1.0\n    └── arceos_posix_api 0.1.0\n        └── axlibc 0.1.0\n\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.6\n    └── defmt 0.3.5\n        └── smoltcp 0.10.0\n            ├── ixgbe-driver 0.1.0\n            │   └── axdriver_net 0.1.0\n            │       ├── axnet 0.1.0\n            │       │   ├── axruntime 0.1.0\n            │       │   │   ├── axfeat 0.1.0\n            │       │   │   │   ├── axstd 0.1.0\n            │       │   │   │   │   ├── arceos-shell 0.1.0\n            │       │   │   │   │   ├── arceos-httpserver 0.1.0\n            │       │   │   │   │   ├── arceos-httpclient 0.1.0\n            │       │   │   │   │   └── arceos-helloworld 0.1.0\n            │       │   │   │   ├── axlibc 0.1.0\n            │       │   │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   │   │   └── axlibc 0.1.0\n            │       │   │   │   └── arceos_api 0.1.0\n            │       │   │   │       └── axstd 0.1.0\n            │       │   │   ├── arceos_posix_api 0.1.0\n            │       │   │   └── arceos_api 0.1.0\n            │       │   ├── axfeat 0.1.0\n            │       │   ├── arceos_posix_api 0.1.0\n            │       │   └── arceos_api 0.1.0\n            │       ├── axdriver_virtio 0.1.0\n            │       │   └── axdriver 0.1.0\n            │       │       ├── axruntime 0.1.0\n            │       │       ├── axnet 0.1.0\n            │       │       ├── axfs 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   ├── arceos_posix_api 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       ├── axfeat 0.1.0\n            │       │       ├── axdisplay 0.1.0\n            │       │       │   ├── axruntime 0.1.0\n            │       │       │   ├── axfeat 0.1.0\n            │       │       │   └── arceos_api 0.1.0\n            │       │       └── arceos_api 0.1.0\n            │       └── axdriver 0.1.0\n            └── axnet 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   0.1.11\nWarning:   yanked\nDependency tree:\natomic-polyfill 0.1.11\n└── heapless 0.7.16\n    └── smoltcp 0.10.0\n        ├── ixgbe-driver 0.1.0\n        │   └── axdriver_net 0.1.0\n        │       ├── axnet 0.1.0\n        │       │   ├── axruntime 0.1.0\n        │       │   │   ├── axfeat 0.1.0\n        │       │   │   │   ├── axstd 0.1.0\n        │       │   │   │   │   ├── arceos-shell 0.1.0\n        │       │   │   │   │   ├── arceos-httpserver 0.1.0\n        │       │   │   │   │   ├── arceos-httpclient 0.1.0\n        │       │   │   │   │   └── arceos-helloworld 0.1.0\n        │       │   │   │   ├── axlibc 0.1.0\n        │       │   │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   │   └── axlibc 0.1.0\n        │       │   │   │   └── arceos_api 0.1.0\n        │       │   │   │       └── axstd 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axdriver_virtio 0.1.0\n        │       │   └── axdriver 0.1.0\n        │       │       ├── axruntime 0.1.0\n        │       │       ├── axnet 0.1.0\n        │       │       ├── axfs 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   ├── arceos_posix_api 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       ├── axfeat 0.1.0\n        │       │       ├── axdisplay 0.1.0\n        │       │       │   ├── axruntime 0.1.0\n        │       │       │   ├── axfeat 0.1.0\n        │       │       │   └── arceos_api 0.1.0\n        │       │       └── arceos_api 0.1.0\n        │       └── axdriver 0.1.0\n        └── axnet 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 663,\n    \"last-commit\": \"acb7ce45817b13dd34cb32540ff18be4e1f3ba09\",\n    \"last-updated\": \"2024-10-09T00:13:59+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 190\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0006\",\n          \"package\": \"shlex\",\n          \"title\": \"Multiple issues involving quote API\",\n          \"description\": \"## Issue 1: Failure to quote characters\\n\\nAffected versions of this crate allowed the bytes `{` and `\\\\xa0` to appear\\nunquoted and unescaped in command arguments.\\n\\nIf the output of `quote` or `join` is passed to a shell, then what should be a\\nsingle command argument could be interpreted as multiple arguments.\\n\\nThis does not *directly* allow arbitrary command execution (you can't inject a\\ncommand substitution or similar).  But depending on the command you're running,\\nbeing able to inject multiple arguments where only one is expected could lead\\nto undesired consequences, potentially including arbitrary command execution.\\n\\nThe flaw was corrected in version 1.2.1 by escaping additional characters.\\nUpdating to 1.3.0 is recommended, but 1.2.1 offers a more minimal fix if\\ndesired.\\n\\nWorkaround: Check for the bytes `{` and `\\\\xa0` in `quote`/`join` input or\\noutput.\\n\\n(Note: `{` is problematic because it is used for glob expansion.  `\\\\xa0` is\\nproblematic because it's treated as a word separator in [specific\\nenvironments][solved-xa0].)\\n\\n## Issue 2: Dangerous API w.r.t. nul bytes\\n\\nVersion 1.3.0 deprecates the `quote` and `join` APIs in favor of `try_quote`\\nand `try_join`, which behave the same except that they have `Result` return\\ntype, returning `Err` if the input contains nul bytes.\\n\\nStrings containing nul bytes generally cannot be used in Unix command arguments\\nor environment variables, and most shells cannot handle nul bytes even\\ninternally.  If you try to pass one anyway, then the results might be\\nsecurity-sensitive in uncommon scenarios.  [More details here.][nul-bytes]\\n\\nDue to the low severity, the behavior of the original `quote` and `join` APIs\\nhas not changed; they continue to allow nuls.\\n\\nWorkaround: Manually check for nul bytes in `quote`/`join` input or output.\\n\\n## Issue 3: Lack of documentation for interactive shell risks\\n\\nThe `quote` family of functions does not and cannot escape control characters.\\nWith non-interactive shells this is perfectly safe, as control characters have\\nno special effect.  But if you writing directly to the standard input of an\\ninteractive shell (or through a pty), then control characters [can cause\\nmisbehavior including arbitrary command injection.][control-characters]\\n\\nThis is essentially unfixable, and has not been patched.  But as of version\\n1.3.0, documentation has been added.\\n\\nFuture versions of `shlex` may add API variants that avoid the issue at the\\ncost of reduced portability.\\n\\n[solved-xa0]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#solved-xa0\\n[nul-bytes]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#nul-bytes\\n[control-characters]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#control-characters-interactive-contexts-only\",\n          \"date\": \"2024-01-21\",\n          \"aliases\": [\n            \"GHSA-r7qv-8r2h-pg27\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"code-execution\",\n            \"file-disclosure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/comex/rust-shlex/security/advisories/GHSA-r7qv-8r2h-pg27\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=1.3.0\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"shlex::bytes::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::bytes::quote\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::join\": [\n              \"<1.2.1\"\n            ],\n            \"shlex::quote\": [\n              \"<1.2.1\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"shlex\",\n          \"version\": \"1.1.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"43b2853a4d09f215c24cc5489c992ce46052d359b5109343cbafbf26bc62f8a3\",\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.36\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"0.1.11\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e3ff7eb3f316534d83a8a2c3d1674ace8a5a71198eba31e2e2b597833f699b28\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.1.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"shilei-massclouds","repo":"early_console","pkg":"rt_early_console","count":2,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=rt_early_console, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_14/shilei-massclouds/early_console/rt_early_console\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none\n   Compiling rustversion v1.0.17\n   Compiling bit_field v0.10.2\n   Compiling bitflags v2.6.0\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v1.3.2\n   Compiling volatile v0.4.6\n   Compiling raw-cpuid v10.7.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n   Compiling x86 v0.52.0\n   Compiling log v0.4.22\n   Compiling paste v1.0.15\n[2024-10-12T14:55:41Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T14:55:41Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#4de587b7)\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling bit v0.1.1\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#52d4fca1)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling raw-cpuid v11.2.0\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal#83ec99c0)\n   Compiling arch_boot v0.1.0 (ssh://git@github.com/shilei-massclouds/arch_boot.git#8663e839)\n   Compiling x86_64 v0.14.12\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n   Compiling static_assertions v1.1.0\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling x2apic v0.4.3\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:6:20\n  |\n6 | pub use platform::{getchar, putchar};\n  |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n  |                    |\n  |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:10:15\n   |\n10 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:16:19\n   |\n16 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n16 -         platform::putchar(*c);\n16 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:23:36\n   |\n23 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n23 -         if let Some(c) = platform::getchar() {\n23 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T14:55:41Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T14:55:41Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axdma","count":1,"raw_reports":[{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axlog","count":1,"raw_reports":[{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axmm","count":1,"raw_reports":[{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axsync","count":1,"raw_reports":[{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"axtask","count":1,"raw_reports":[{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-12T15:37:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T15:37:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Audit","Mirai","Lockbud(Probably)","Lockbud(Possibly)","Unformatted"]}