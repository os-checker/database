{"kinds_order":["Clippy(Error)","Clippy(Warn)","Unformatted"],"data":[{"user":"arceos-org","repo":"arceos","package":"arceos-shell","count":62,"raw_reports":[{"file":"examples/shell/src/cmd.rs","count":53,"kinds":{"Clippy(Error)":["error[E0463]: can't find crate for `std`\n --> examples/shell/src/cmd.rs:2:5\n  |\n2 | use std::io::{self, prelude::*};\n  |     ^^^ can't find crate\n  |\n  = note: the `x86_64-unknown-none` target may not support the standard library\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n","error[E0463]: can't find crate for `std`\n --> examples/shell/src/cmd.rs:1:5\n  |\n1 | use std::fs::{self, File, FileType};\n  |     ^^^ can't find crate\n  |\n  = note: the `x86_64-unknown-none` target may not support the standard library\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n","error[E0463]: can't find crate for `std`\n --> examples/shell/src/cmd.rs:3:5\n  |\n3 | use std::{string::String, vec::Vec};\n  |     ^^^ can't find crate\n  |\n  = note: the `x86_64-unknown-none` target may not support the standard library\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n","error[E0432]: unresolved imports `std::fs`, `std::fs::File`, `std::fs::FileType`, `std::io`, `std::string::String`, `std::vec::Vec`\n --> examples/shell/src/cmd.rs:1:15\n  |\n1 | use std::fs::{self, File, FileType};\n  |               ^^^^  ^^^^  ^^^^^^^^\n2 | use std::io::{self, prelude::*};\n  |               ^^^^\n3 | use std::{string::String, vec::Vec};\n  |           ^^^^^^^^^^^^^^  ^^^^^^^^\n\n","error[E0432]: unresolved imports `std::fs`, `std::fs::File`, `std::fs::FileType`, `std::io`, `std::string::String`, `std::vec::Vec`\n --> examples/shell/src/cmd.rs:1:15\n  |\n1 | use std::fs::{self, File, FileType};\n  |               ^^^^  ^^^^  ^^^^^^^^\n2 | use std::io::{self, prelude::*};\n  |               ^^^^\n3 | use std::{string::String, vec::Vec};\n  |           ^^^^^^^^^^^^^^  ^^^^^^^^\n\n","error[E0432]: unresolved imports `std::fs`, `std::fs::File`, `std::fs::FileType`, `std::io`, `std::string::String`, `std::vec::Vec`\n --> examples/shell/src/cmd.rs:1:15\n  |\n1 | use std::fs::{self, File, FileType};\n  |               ^^^^  ^^^^  ^^^^^^^^\n2 | use std::io::{self, prelude::*};\n  |               ^^^^\n3 | use std::{string::String, vec::Vec};\n  |           ^^^^^^^^^^^^^^  ^^^^^^^^\n\n","error[E0432]: unresolved imports `std::fs`, `std::fs::File`, `std::fs::FileType`, `std::io`, `std::string::String`, `std::vec::Vec`\n --> examples/shell/src/cmd.rs:1:15\n  |\n1 | use std::fs::{self, File, FileType};\n  |               ^^^^  ^^^^  ^^^^^^^^\n2 | use std::io::{self, prelude::*};\n  |               ^^^^\n3 | use std::{string::String, vec::Vec};\n  |           ^^^^^^^^^^^^^^  ^^^^^^^^\n\n","error[E0432]: unresolved imports `std::fs`, `std::fs::File`, `std::fs::FileType`, `std::io`, `std::string::String`, `std::vec::Vec`\n --> examples/shell/src/cmd.rs:1:15\n  |\n1 | use std::fs::{self, File, FileType};\n  |               ^^^^  ^^^^  ^^^^^^^^\n2 | use std::io::{self, prelude::*};\n  |               ^^^^\n3 | use std::{string::String, vec::Vec};\n  |           ^^^^^^^^^^^^^^  ^^^^^^^^\n\n","error[E0432]: unresolved imports `std::fs`, `std::fs::File`, `std::fs::FileType`, `std::io`, `std::string::String`, `std::vec::Vec`\n --> examples/shell/src/cmd.rs:1:15\n  |\n1 | use std::fs::{self, File, FileType};\n  |               ^^^^  ^^^^  ^^^^^^^^\n2 | use std::io::{self, prelude::*};\n  |               ^^^^\n3 | use std::{string::String, vec::Vec};\n  |           ^^^^^^^^^^^^^^  ^^^^^^^^\n\n","error: cannot find macro `println` in this scope\n  --> examples/shell/src/cmd.rs:85:9\n   |\n85 |         println!(\"{}{} {:>8} {}\", file_type_char, rwx, size, entry);\n   |         ^^^^^^^\n\n","error: cannot find macro `println` in this scope\n  --> examples/shell/src/cmd.rs:96:13\n   |\n96 |             println!(\"{}:\", name);\n   |             ^^^^^^^\n\n","error: cannot find macro `println` in this scope\n   --> examples/shell/src/cmd.rs:13:9\n    |\n13  |         println!(\"{}: {}: {}\", $cmd, $arg, $err);\n    |         ^^^^^^^\n...\n108 |                 print_err!(\"ls\", path, e);\n    |                 ------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `print_err` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: cannot find macro `println` in this scope\n   --> examples/shell/src/cmd.rs:116:13\n    |\n116 |             println!();\n    |             ^^^^^^^\n\n","error: cannot find macro `println` in this scope\n   --> examples/shell/src/cmd.rs:13:9\n    |\n13  |         println!(\"{}: {}: {}\", $cmd, $arg, $err);\n    |         ^^^^^^^\n...\n119 |             print_err!(\"ls\", name, e);\n    |             ------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `print_err` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: cannot find macro `println` in this scope\n   --> examples/shell/src/cmd.rs:10:9\n    |\n10  |         println!(\"{}: {}\", $cmd, $msg);\n    |         ^^^^^^^\n...\n126 |         print_err!(\"cat\", \"no file specified\");\n    |         -------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `print_err` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: cannot find macro `println` in this scope\n   --> examples/shell/src/cmd.rs:13:9\n    |\n13  |         println!(\"{}: {}: {}\", $cmd, $arg, $err);\n    |         ^^^^^^^\n...\n145 |             print_err!(\"cat\", fname, e);\n    |             --------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `print_err` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: cannot find macro `println` in this scope\n   --> examples/shell/src/cmd.rs:10:9\n    |\n10  |         println!(\"{}: {}\", $cmd, $msg);\n    |         ^^^^^^^\n...\n163 |             print_err!(\"echo\", \"no file specified\");\n    |             --------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `print_err` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: cannot find macro `println` in this scope\n   --> examples/shell/src/cmd.rs:13:9\n    |\n13  |         println!(\"{}: {}: {}\", $cmd, $arg, $err);\n    |         ^^^^^^^\n...\n174 |             print_err!(\"echo\", fname, e);\n    |             ---------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `print_err` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: cannot find macro `println` in this scope\n   --> examples/shell/src/cmd.rs:177:9\n    |\n177 |         println!(\"{}\", args)\n    |         ^^^^^^^\n\n","error: cannot find macro `println` in this scope\n   --> examples/shell/src/cmd.rs:10:9\n    |\n10  |         println!(\"{}: {}\", $cmd, $msg);\n    |         ^^^^^^^\n...\n183 |         print_err!(\"mkdir\", \"missing operand\");\n    |         -------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `print_err` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: cannot find macro `println` in this scope\n   --> examples/shell/src/cmd.rs:13:9\n    |\n13  |         println!(\"{}: {}: {}\", $cmd, $arg, $err);\n    |         ^^^^^^^\n...\n193 |             print_err!(\"mkdir\", format_args!(\"cannot create directory '{path}'\"), e);\n    |             ------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `print_err` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: cannot find macro `println` in this scope\n   --> examples/shell/src/cmd.rs:10:9\n    |\n10  |         println!(\"{}: {}\", $cmd, $msg);\n    |         ^^^^^^^\n...\n200 |         print_err!(\"rm\", \"missing operand\");\n    |         ----------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `print_err` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: cannot find macro `println` in this scope\n   --> examples/shell/src/cmd.rs:13:9\n    |\n13  |         println!(\"{}: {}: {}\", $cmd, $arg, $err);\n    |         ^^^^^^^\n...\n223 |             print_err!(\"rm\", format_args!(\"cannot remove '{path}'\"), e);\n    |             ----------------------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `print_err` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: cannot find macro `println` in this scope\n   --> examples/shell/src/cmd.rs:13:9\n    |\n13  |         println!(\"{}: {}: {}\", $cmd, $arg, $err);\n    |         ^^^^^^^\n...\n234 |             print_err!(\"cd\", args, e);\n    |             ------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `print_err` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: cannot find macro `println` in this scope\n   --> examples/shell/src/cmd.rs:10:9\n    |\n10  |         println!(\"{}: {}\", $cmd, $msg);\n    |         ^^^^^^^\n...\n237 |         print_err!(\"cd\", \"too many arguments\");\n    |         -------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `print_err` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: cannot find macro `println` in this scope\n   --> examples/shell/src/cmd.rs:243:5\n    |\n243 |     println!(\"{}\", path_to_str!(pwd));\n    |     ^^^^^^^\n\n","error: cannot find macro `option_env` in this scope\n   --> examples/shell/src/cmd.rs:247:16\n    |\n247 |     let arch = option_env!(\"AX_ARCH\").unwrap_or(\"\");\n    |                ^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::option_env;\n    |\n\n","error: cannot find macro `option_env` in this scope\n   --> examples/shell/src/cmd.rs:248:20\n    |\n248 |     let platform = option_env!(\"AX_PLATFORM\").unwrap_or(\"\");\n    |                    ^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::option_env;\n    |\n\n","error: cannot find macro `option_env` in this scope\n   --> examples/shell/src/cmd.rs:249:21\n    |\n249 |     let smp = match option_env!(\"AX_SMP\") {\n    |                     ^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::option_env;\n    |\n\n","error: cannot find macro `option_env` in this scope\n   --> examples/shell/src/cmd.rs:253:19\n    |\n253 |     let version = option_env!(\"CARGO_PKG_VERSION\").unwrap_or(\"0.1.0\");\n    |                   ^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::option_env;\n    |\n\n","error: cannot find macro `println` in this scope\n   --> examples/shell/src/cmd.rs:254:5\n    |\n254 |     println!(\n    |     ^^^^^^^\n\n","error: cannot find macro `println` in this scope\n   --> examples/shell/src/cmd.rs:264:5\n    |\n264 |     println!(\"Available commands:\");\n    |     ^^^^^^^\n\n","error: cannot find macro `println` in this scope\n   --> examples/shell/src/cmd.rs:266:9\n    |\n266 |         println!(\"  {}\", name);\n    |         ^^^^^^^\n\n","error: cannot find macro `println` in this scope\n   --> examples/shell/src/cmd.rs:271:5\n    |\n271 |     println!(\"Bye~\");\n    |     ^^^^^^^\n\n","error: cannot find macro `println` in this scope\n   --> examples/shell/src/cmd.rs:285:9\n    |\n285 |         println!(\"{}: command not found\", cmd);\n    |         ^^^^^^^\n\n","error[E0463]: can't find crate for `std`\n  --> examples/shell/src/cmd.rs:70:23\n   |\n70 |     let current_dir = std::env::current_dir().unwrap();\n   |                       ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n","error[E0463]: can't find crate for `std`\n   --> examples/shell/src/cmd.rs:233:25\n    |\n233 |         if let Err(e) = std::env::set_current_dir(args) {\n    |                         ^^^ can't find crate\n    |\n    = note: the `x86_64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n","error[E0463]: can't find crate for `std`\n   --> examples/shell/src/cmd.rs:242:15\n    |\n242 |     let pwd = std::env::current_dir().unwrap();\n    |               ^^^ can't find crate\n    |\n    = note: the `x86_64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n","error[E0408]: variable `None` is not bound in all patterns\n   --> examples/shell/src/cmd.rs:250:16\n    |\n250 |         None | Some(\"1\") => \"\",\n    |         ----   ^^^^^^^^^ pattern doesn't bind `None`\n    |         |\n    |         variable not in all patterns\n    |\nhelp: if you meant to match on unit variant `core::option::Option::None`, use the full path in the pattern\n    |\n250 |         core::option::Option::None | Some(\"1\") => \"\",\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","error[E0463]: can't find crate for `std`\n   --> examples/shell/src/cmd.rs:272:5\n    |\n272 |     std::process::exit(0);\n    |     ^^^ can't find crate\n    |\n    = note: the `x86_64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n","error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n  --> examples/shell/src/cmd.rs:86:9\n   |\n86 |         Ok(())\n   |         ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n1  + use core::result::Result::Ok;\n   |\n\n","error[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n   --> examples/shell/src/cmd.rs:107:20\n    |\n107 |             if let Err(e) = show_entry_info(&path, entry) {\n    |                    ^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Err;\n    |\n\n","error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> examples/shell/src/cmd.rs:111:9\n    |\n111 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\n","error[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n   --> examples/shell/src/cmd.rs:118:16\n    |\n118 |         if let Err(e) = list_one(name, name_count > 1) {\n    |                ^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Err;\n    |\n\n","error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> examples/shell/src/cmd.rs:138:24\n    |\n138 |                 return Ok(());\n    |                        ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\n","error[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n   --> examples/shell/src/cmd.rs:144:16\n    |\n144 |         if let Err(e) = cat_one(fname) {\n    |                ^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Err;\n    |\n\n","error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> examples/shell/src/cmd.rs:156:9\n    |\n156 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\n","error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> examples/shell/src/cmd.rs:159:12\n    |\n159 |     if let Some(pos) = args.rfind('>') {\n    |            ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\n","error[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n   --> examples/shell/src/cmd.rs:173:16\n    |\n173 |         if let Err(e) = echo_file(fname, &text_list) {\n    |                ^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Err;\n    |\n\n","error[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n   --> examples/shell/src/cmd.rs:192:16\n    |\n192 |         if let Err(e) = mkdir_one(path) {\n    |                ^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Err;\n    |\n\n","error[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n   --> examples/shell/src/cmd.rs:222:16\n    |\n222 |         if let Err(e) = rm_one(path, rm_dir) {\n    |                ^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Err;\n    |\n\n","error[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n   --> examples/shell/src/cmd.rs:233:16\n    |\n233 |         if let Err(e) = std::env::set_current_dir(args) {\n    |                ^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Err;\n    |\n\n","error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> examples/shell/src/cmd.rs:250:16\n    |\n250 |         None | Some(\"1\") => \"\",\n    |                ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\n"]}},{"file":"examples/shell/src/main.rs","count":8,"kinds":{"Clippy(Error)":["error[E0463]: can't find crate for `std`\n  |\n  = note: the `x86_64-unknown-none` target may not support the standard library\n  = note: `std` is required by `arceos_shell` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n","error[E0463]: can't find crate for `std`\n  --> examples/shell/src/main.rs:26:5\n   |\n26 | use std::io::prelude::*;\n   |     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n","error: cannot find macro `print` in this scope\n  --> examples/shell/src/main.rs:37:5\n   |\n37 |     print!(\n   |     ^^^^^\n\n","error: cannot find macro `println` in this scope\n  --> examples/shell/src/main.rs:63:17\n   |\n63 |                 println!();\n   |                 ^^^^^^^\n\n","error[E0463]: can't find crate for `std`\n  --> examples/shell/src/main.rs:41:5\n   |\n41 |     std::io::stdout().flush().unwrap();\n   |     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n","error[E0463]: can't find crate for `std`\n  --> examples/shell/src/main.rs:46:21\n   |\n46 |     let mut stdin = std::io::stdin();\n   |                     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n","error[E0463]: can't find crate for `std`\n  --> examples/shell/src/main.rs:47:22\n   |\n47 |     let mut stdout = std::io::stdout();\n   |                      ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n","error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n  --> examples/shell/src/main.rs:55:61\n   |\n55 |         if stdin.read(&mut buf[cursor..cursor + 1]).ok() != Some(1) {\n   |                                                             ^^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n26 + use core::option::Option::Some;\n   |\n\n"]}},{"file":"unkonwn-but-maybe-important","count":1,"kinds":{"Clippy(Error)":["error: `#[panic_handler]` function required, but not found\n\n"]}}]},{"user":"arceos-org","repo":"arceos","package":"arceos-httpserver","count":35,"raw_reports":[{"file":"examples/httpserver/src/main.rs","count":33,"kinds":{"Clippy(Error)":["error[E0463]: can't find crate for `std`\n  |\n  = note: the `x86_64-unknown-none` target may not support the standard library\n  = note: `std` is required by `arceos_httpserver` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n","error[E0463]: can't find crate for `std`\n  --> examples/httpserver/src/main.rs:16:5\n   |\n16 | use std::io::{self, prelude::*};\n   |     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n","error[E0463]: can't find crate for `std`\n  --> examples/httpserver/src/main.rs:17:5\n   |\n17 | use std::net::{TcpListener, TcpStream};\n   |     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n","error[E0463]: can't find crate for `std`\n  --> examples/httpserver/src/main.rs:18:5\n   |\n18 | use std::thread;\n   |     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n","error[E0432]: unresolved imports `std::io`, `std::net::TcpListener`, `std::net::TcpStream`, `std::thread`\n  --> examples/httpserver/src/main.rs:16:15\n   |\n16 | use std::io::{self, prelude::*};\n   |               ^^^^\n17 | use std::net::{TcpListener, TcpStream};\n   |                ^^^^^^^^^^^  ^^^^^^^^^\n18 | use std::thread;\n   |     ^^^^^^^^^^^\n\n","error[E0432]: unresolved imports `std::io`, `std::net::TcpListener`, `std::net::TcpStream`, `std::thread`\n  --> examples/httpserver/src/main.rs:16:15\n   |\n16 | use std::io::{self, prelude::*};\n   |               ^^^^\n17 | use std::net::{TcpListener, TcpStream};\n   |                ^^^^^^^^^^^  ^^^^^^^^^\n18 | use std::thread;\n   |     ^^^^^^^^^^^\n\n","error[E0432]: unresolved imports `std::io`, `std::net::TcpListener`, `std::net::TcpStream`, `std::thread`\n  --> examples/httpserver/src/main.rs:16:15\n   |\n16 | use std::io::{self, prelude::*};\n   |               ^^^^\n17 | use std::net::{TcpListener, TcpStream};\n   |                ^^^^^^^^^^^  ^^^^^^^^^\n18 | use std::thread;\n   |     ^^^^^^^^^^^\n\n","error[E0432]: unresolved imports `std::io`, `std::net::TcpListener`, `std::net::TcpStream`, `std::thread`\n  --> examples/httpserver/src/main.rs:16:15\n   |\n16 | use std::io::{self, prelude::*};\n   |               ^^^^\n17 | use std::net::{TcpListener, TcpStream};\n   |                ^^^^^^^^^^^  ^^^^^^^^^\n18 | use std::thread;\n   |     ^^^^^^^^^^^\n\n","error: cannot find macro `format` in this scope\n  --> examples/httpserver/src/main.rs:66:20\n   |\n66 |     let response = format!(header!(), CONTENT.len(), CONTENT);\n   |                    ^^^^^^\n\n","error: cannot find macro `println` in this scope\n  --> examples/httpserver/src/main.rs:74:5\n   |\n74 |     println!(\"listen on: http://{}/\", listener.local_addr().unwrap());\n   |     ^^^^^^^\n\n","error: cannot find macro `option_env` in this scope\n  --> examples/httpserver/src/main.rs:53:15\n   |\n53 |         match option_env!(\"LOG\") {\n   |               ^^^^^^^^^^\n...\n80 |                 info!(\"new client {}: {}\", i, addr);\n   |                 ----------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `info` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   |\n16 + use core::option_env;\n   |\n\n","error: cannot find macro `print` in this scope\n  --> examples/httpserver/src/main.rs:55:17\n   |\n55 |                 print!(\"[INFO] {}\\n\", format_args!($($arg)*));\n   |                 ^^^^^\n...\n80 |                 info!(\"new client {}: {}\", i, addr);\n   |                 ----------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: cannot find macro `option_env` in this scope\n  --> examples/httpserver/src/main.rs:53:15\n   |\n53 |         match option_env!(\"LOG\") {\n   |               ^^^^^^^^^^\n...\n82 |                     Err(e) => info!(\"client connection error: {:?}\", e),\n   |                               ----------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `info` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   |\n16 + use core::option_env;\n   |\n\n","error: cannot find macro `print` in this scope\n  --> examples/httpserver/src/main.rs:55:17\n   |\n55 |                 print!(\"[INFO] {}\\n\", format_args!($($arg)*));\n   |                 ^^^^^\n...\n82 |                     Err(e) => info!(\"client connection error: {:?}\", e),\n   |                               ----------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: cannot find macro `option_env` in this scope\n  --> examples/httpserver/src/main.rs:53:15\n   |\n53 |         match option_env!(\"LOG\") {\n   |               ^^^^^^^^^^\n...\n83 |                     Ok(()) => info!(\"client {} closed successfully\", i),\n   |                               ----------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `info` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   |\n16 + use core::option_env;\n   |\n\n","error: cannot find macro `print` in this scope\n  --> examples/httpserver/src/main.rs:55:17\n   |\n55 |                 print!(\"[INFO] {}\\n\", format_args!($($arg)*));\n   |                 ^^^^^\n...\n83 |                     Ok(()) => info!(\"client {} closed successfully\", i),\n   |                               ----------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: cannot find macro `println` in this scope\n  --> examples/httpserver/src/main.rs:94:5\n   |\n94 |     println!(\"Hello, ArceOS HTTP server!\");\n   |     ^^^^^^^\n\n","error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n  --> examples/httpserver/src/main.rs:69:5\n   |\n69 |     Ok(())\n   |     ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n16 + use core::result::Result::Ok;\n   |\n\n","error[E0531]: cannot find tuple struct or tuple variant `Ok` in this scope\n  --> examples/httpserver/src/main.rs:79:13\n   |\n79 |             Ok((stream, addr)) => {\n   |             ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n16 + use core::result::Result::Ok;\n   |\n\n","error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n  --> examples/httpserver/src/main.rs:54:13\n   |\n54 |             Some(\"info\") | Some(\"debug\") | Some(\"trace\") => {\n   |             ^^^^ not found in this scope\n...\n80 |                 info!(\"new client {}: {}\", i, addr);\n   |                 ----------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `info` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this tuple variant\n   |\n16 + use core::option::Option::Some;\n   |\n\n","error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n  --> examples/httpserver/src/main.rs:54:28\n   |\n54 |             Some(\"info\") | Some(\"debug\") | Some(\"trace\") => {\n   |                            ^^^^ not found in this scope\n...\n80 |                 info!(\"new client {}: {}\", i, addr);\n   |                 ----------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `info` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this tuple variant\n   |\n16 + use core::option::Option::Some;\n   |\n\n","error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n  --> examples/httpserver/src/main.rs:54:44\n   |\n54 |             Some(\"info\") | Some(\"debug\") | Some(\"trace\") => {\n   |                                            ^^^^ not found in this scope\n...\n80 |                 info!(\"new client {}: {}\", i, addr);\n   |                 ----------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `info` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this tuple variant\n   |\n16 + use core::option::Option::Some;\n   |\n\n","error[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n  --> examples/httpserver/src/main.rs:82:21\n   |\n82 |                     Err(e) => info!(\"client connection error: {:?}\", e),\n   |                     ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n16 + use core::result::Result::Err;\n   |\n\n","error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n  --> examples/httpserver/src/main.rs:54:13\n   |\n54 |             Some(\"info\") | Some(\"debug\") | Some(\"trace\") => {\n   |             ^^^^ not found in this scope\n...\n82 |                     Err(e) => info!(\"client connection error: {:?}\", e),\n   |                               ----------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `info` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this tuple variant\n   |\n16 + use core::option::Option::Some;\n   |\n\n","error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n  --> examples/httpserver/src/main.rs:54:28\n   |\n54 |             Some(\"info\") | Some(\"debug\") | Some(\"trace\") => {\n   |                            ^^^^ not found in this scope\n...\n82 |                     Err(e) => info!(\"client connection error: {:?}\", e),\n   |                               ----------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `info` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this tuple variant\n   |\n16 + use core::option::Option::Some;\n   |\n\n","error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n  --> examples/httpserver/src/main.rs:54:44\n   |\n54 |             Some(\"info\") | Some(\"debug\") | Some(\"trace\") => {\n   |                                            ^^^^ not found in this scope\n...\n82 |                     Err(e) => info!(\"client connection error: {:?}\", e),\n   |                               ----------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `info` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this tuple variant\n   |\n16 + use core::option::Option::Some;\n   |\n\n","error[E0531]: cannot find tuple struct or tuple variant `Ok` in this scope\n  --> examples/httpserver/src/main.rs:83:21\n   |\n83 |                     Ok(()) => info!(\"client {} closed successfully\", i),\n   |                     ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n16 + use core::result::Result::Ok;\n   |\n\n","error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n  --> examples/httpserver/src/main.rs:54:13\n   |\n54 |             Some(\"info\") | Some(\"debug\") | Some(\"trace\") => {\n   |             ^^^^ not found in this scope\n...\n83 |                     Ok(()) => info!(\"client {} closed successfully\", i),\n   |                               ----------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `info` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this tuple variant\n   |\n16 + use core::option::Option::Some;\n   |\n\n","error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n  --> examples/httpserver/src/main.rs:54:28\n   |\n54 |             Some(\"info\") | Some(\"debug\") | Some(\"trace\") => {\n   |                            ^^^^ not found in this scope\n...\n83 |                     Ok(()) => info!(\"client {} closed successfully\", i),\n   |                               ----------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `info` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this tuple variant\n   |\n16 + use core::option::Option::Some;\n   |\n\n","error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n  --> examples/httpserver/src/main.rs:54:44\n   |\n54 |             Some(\"info\") | Some(\"debug\") | Some(\"trace\") => {\n   |                                            ^^^^ not found in this scope\n...\n83 |                     Ok(()) => info!(\"client {} closed successfully\", i),\n   |                               ----------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `info` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this tuple variant\n   |\n16 + use core::option::Option::Some;\n   |\n\n","error[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n  --> examples/httpserver/src/main.rs:86:13\n   |\n86 |             Err(e) => return Err(e),\n   |             ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n16 + use core::result::Result::Err;\n   |\n\n","error[E0425]: cannot find function, tuple struct or tuple variant `Err` in this scope\n  --> examples/httpserver/src/main.rs:86:30\n   |\n86 |             Err(e) => return Err(e),\n   |                              ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n16 + use core::result::Result::Err;\n   |\n\n"],"Clippy(Warn)":["warning: unused macro definition: `header`\n  --> examples/httpserver/src/main.rs:23:14\n   |\n23 | macro_rules! header {\n   |              ^^^^^^\n   |\n   = note: `#[warn(unused_macros)]` on by default\n\n"]}},{"file":"unkonwn-but-maybe-important","count":2,"kinds":{"Clippy(Error)":["error: `#[panic_handler]` function required, but not found\n\n","error: requires `sized` lang_item\n\n"]}}]},{"user":"arceos-org","repo":"arceos","package":"deptool","count":35,"raw_reports":[{"file":"src/cmd_parser.rs","count":15,"kinds":{"Unformatted":["file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 1 to 2)\n-use std::{fs, path::Path};\n-use clap::{Arg, ArgAction, Command};\n","file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 4 to 4)\n+use clap::{Arg, ArgAction, Command};\n+use std::{fs, path::Path};\n","file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 10 to 10)\n-\n","file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 18 to 18)\n-            Arg::new(\"no-default\").short('d').long(\"no-default\").action(ArgAction::SetFalse)\n+            Arg::new(\"no-default\")\n+                .short('d')\n+                .long(\"no-default\")\n+                .action(ArgAction::SetFalse),\n","file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 21 to 21)\n-            Arg::new(\"features\").short('f').long(\"name\").action(ArgAction::Append)\n+            Arg::new(\"features\")\n+                .short('f')\n+                .long(\"name\")\n+                .action(ArgAction::Append),\n","file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 24 to 24)\n-            Arg::new(\"format\").short('o').long(\"format\").default_value(\"mermaid\")\n+            Arg::new(\"format\")\n+                .short('o')\n+                .long(\"format\")\n+                .default_value(\"mermaid\"),\n","file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 26 to 26)\n+        .arg(Arg::new(\"target\").short('t').long(\"target\").required(true))\n","file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 27 to 27)\n-            Arg::new(\"target\").short('t').long(\"target\").required(true)\n+            Arg::new(\"save-path\")\n+                .short('s')\n+                .long(\"save-path\")\n+                .default_value(\"out.txt\"),\n","file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 29 to 31)\n-        .arg(\n-            Arg::new(\"save-path\").short('s').long(\"save-path\").default_value(\"out.txt\")\n-        )\n","file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 35 to 35)\n-    let features = matches.get_many::<String>(\"features\").unwrap_or_default()\n+    let features = matches\n+        .get_many::<String>(\"features\")\n+        .unwrap_or_default()\n","file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 40 to 40)\n-        _ => GraphFormat::Mermaid\n+        _ => GraphFormat::Mermaid,\n","file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 59 to 59)\n-fn gen_config(is_default: bool, features: Vec::<String>, format: GraphFormat, loc: String, output_loc: String) -> Config {\n+fn gen_config(\n+    is_default: bool,\n+    features: Vec<String>,\n+    format: GraphFormat,\n+    loc: String,\n+    output_loc: String,\n+) -> Config {\n","file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 65 to 65)\n-    crates.into_iter().map(|p| p.unwrap().file_name()).any(|n| n.to_str().unwrap() == name)\n+    crates\n+        .into_iter()\n+        .map(|p| p.unwrap().file_name())\n+        .any(|n| n.to_str().unwrap() == name)\n","file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 70 to 70)\n-    crates.into_iter().map(|p| p.unwrap().file_name()).any(|n| n.to_str().unwrap() == name)\n+    crates\n+        .into_iter()\n+        .map(|p| p.unwrap().file_name())\n+        .any(|n| n.to_str().unwrap() == name)\n","file: /ci/arceos/tools/deptool/src/cmd_parser.rs (original lines from 82 to 82)\n-    check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n+    check_crate_name(&name)\n+        || check_module_name(&name)\n+        || check_app_name(name)\n+        || check_lib_name(name)\n"]}},{"file":"src/lib.rs","count":15,"kinds":{"Unformatted":["file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 1 to 1)\n-mod cmd_parser;\n","file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 3 to 3)\n-mod mermaid_generator;\n+mod cmd_parser;\n","file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 5 to 5)\n+mod mermaid_generator;\n","file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 6 to 6)\n-use std::process::Command;\n","file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 9 to 9)\n+use std::process::Command;\n","file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 11 to 11)\n-pub use cmd_parser::{parse_cmd, build_loc};\n+pub use cmd_parser::{build_loc, parse_cmd};\n","file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 17 to 18)\n-   Mermaid,\n-   D2,\n+    Mermaid,\n+    D2,\n","file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 25 to 25)\n-    pub features: Vec::<String>,\n+    pub features: Vec<String>,\n","file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 27 to 27)\n-    output_loc: String\n+    output_loc: String,\n","file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 31 to 32)\n-    pub fn build(no_default: bool, features: Vec::<String>, format: GraphFormat, loc: String, output_loc: String) -> Config {\n-        Config { no_default, format, features, loc, output_loc }\n+    pub fn build(\n+        no_default: bool,\n+        features: Vec<String>,\n+        format: GraphFormat,\n+        loc: String,\n+        output_loc: String,\n+    ) -> Config {\n+        Config {\n+            no_default,\n+            format,\n+            features,\n+            loc,\n+            output_loc,\n+        }\n","file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 41 to 43)\n-                .args(cmds)\n-                .output()\n-                .expect(\"failed to execute process\")\n+            .args(cmds)\n+            .output()\n+            .expect(\"failed to execute process\")\n","file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 46 to 48)\n-                .args(cmds)\n-                .output()\n-                .expect(\"failed to execute process\")\n+            .args(cmds)\n+            .output()\n+            .expect(\"failed to execute process\")\n","file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 56 to 56)\n-    let mut rst = vec!();\n+    let mut rst = vec![];\n","file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 83 to 83)\n-        _ => generate_mermaid(config)\n+        _ => generate_mermaid(config),\n","file: /ci/arceos/tools/deptool/src/lib.rs (original lines from 97 to 98)\n-        Ok(()) => {},\n-        Err(error) => println!(\"Error during writing file {}, {}\", config.output_loc, error)\n+        Ok(()) => {}\n+        Err(error) => println!(\"Error during writing file {}, {}\", config.output_loc, error),\n"]}},{"file":"src/cmd_builder.rs","count":2,"kinds":{"Unformatted":["file: /ci/arceos/tools/deptool/src/cmd_builder.rs (original lines from 6 to 6)\n-        false => \"--no-default-features\"\n+        false => \"--no-default-features\",\n","file: /ci/arceos/tools/deptool/src/cmd_builder.rs (original lines from 11 to 11)\n-        _ => \"-F \".to_string() + cfg.features.join(\" \").as_str()\n+        _ => \"-F \".to_string() + cfg.features.join(\" \").as_str(),\n"]}},{"file":"src/d2_generator.rs","count":1,"kinds":{"Unformatted":["file: /ci/arceos/tools/deptool/src/d2_generator.rs (original lines from 3 to 3)\n-use crate::{parse_deps, cmd_parser::is_arceos_crate};\n+use crate::{cmd_parser::is_arceos_crate, parse_deps};\n"]}},{"file":"src/main.rs","count":1,"kinds":{"Unformatted":["file: /ci/arceos/tools/deptool/src/main.rs (original lines from 1 to 1)\n-use deptool::{run, parse_cmd};\n+use deptool::{parse_cmd, run};\n"]}},{"file":"src/mermaid_generator.rs","count":1,"kinds":{"Unformatted":["file: /ci/arceos/tools/deptool/src/mermaid_generator.rs (original lines from 3 to 3)\n-use crate::{parse_deps, cmd_parser::is_arceos_crate};\n+use crate::{cmd_parser::is_arceos_crate, parse_deps};\n"]}}]},{"user":"kern-crates","repo":"ByteOS","package":"kernel","count":16,"raw_reports":[{"file":"kernel/src/syscall/task.rs","count":5,"kinds":{"Clippy(Warn)":["warning: this `else { if .. }` block can be collapsed\n   --> kernel/src/syscall/task.rs:726:24\n    |\n726 |                   } else {\n    |  ________________________^\n727 | |                     if let Some(index) = target_signal.real_time_index() {\n728 | |                         child_tcb.signal_queue[index] += 1;\n729 | |                     }\n730 | |                 }\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\n    = note: `#[warn(clippy::collapsible_else_if)]` on by default\nhelp: collapse nested if block\n    |\n726 ~                 } else if let Some(index) = target_signal.real_time_index() {\n727 +                     child_tcb.signal_queue[index] += 1;\n728 +                 }\n    |\n\n","warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:757:36\n    |\n757 |             sec: stime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n    = note: `#[warn(clippy::inconsistent_digit_grouping)]` on by default\n\n","warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:758:37\n    |\n758 |             usec: stime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n","warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:761:36\n    |\n761 |             sec: utime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n","warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:762:37\n    |\n762 |             usec: utime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"]}},{"file":"kernel/build.rs","count":3,"kinds":{"Clippy(Warn)":["warning: comparison to empty slice\n  --> kernel/build.rs:17:12\n   |\n17 |         if module == \"\" {\n   |            ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `module.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n   = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n","warning: single-character string constant used as pattern\n  --> kernel/build.rs:20:84\n   |\n20 |         module_file_content.push_str(&format!(\"extern crate {};\\n\", module.replace(\"-\", \"_\")))\n   |                                                                                    ^^^ help: try using a `char` instead: `'-'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n","warning: single-character string constant used as pattern\n  --> kernel/build.rs:29:16\n   |\n29 |         .split(\",\")\n   |                ^^^ help: try using a `char` instead: `','`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"]}},{"file":"kernel/src/syscall/fd.rs","count":2,"kinds":{"Clippy(Warn)":["warning: digits of hex, binary or octal literal not in groups of equal size\n   --> kernel/src/syscall/fd.rs:699:57\n    |\n699 |         let etime = current_nsec() + timeout as usize * 0x1000_000;\n    |                                                         ^^^^^^^^^^ help: consider: `0x0100_0000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n    = note: `#[warn(clippy::unusual_byte_groupings)]` on by default\n\n","warning: digits of hex, binary or octal literal not in groups of equal size\n   --> kernel/src/syscall/fd.rs:936:31\n    |\n936 |             stime + timeout * 0x1000_000\n    |                               ^^^^^^^^^^ help: consider: `0x0100_0000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n\n"]}},{"file":"kernel/src/user/socket_pair.rs","count":2,"kinds":{"Clippy(Warn)":["warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:42:9\n   |\n42 | /         if events.contains(PollEvent::POLLOUT) {\n43 | |             if self.inner.lock().len() <= 0x50000 {\n44 | |                 res |= PollEvent::POLLOUT;\n45 | |             }\n46 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n   = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n   |\n42 ~         if events.contains(PollEvent::POLLOUT) && self.inner.lock().len() <= 0x50000 {\n43 +             res |= PollEvent::POLLOUT;\n44 +         }\n   |\n\n","warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:47:9\n   |\n47 | /         if events.contains(PollEvent::POLLIN) {\n48 | |             if self.inner.lock().len() > 0 {\n49 | |                 res |= PollEvent::POLLIN;\n50 | |             }\n51 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n   |\n47 ~         if events.contains(PollEvent::POLLIN) && self.inner.lock().len() > 0 {\n48 +             res |= PollEvent::POLLIN;\n49 +         }\n   |\n\n"]}},{"file":"kernel/src/user/signal.rs","count":1,"kinds":{"Clippy(Error)":["error[E0432]: unresolved import `polyhal::SIG_RETURN_ADDR`\n --> kernel/src/user/signal.rs:5:30\n  |\n5 | use polyhal::{TrapFrameArgs, SIG_RETURN_ADDR};\n  |                              ^^^^^^^^^^^^^^^ no `SIG_RETURN_ADDR` in the root\n\n"]}},{"file":"kernel/src/syscall/mod.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unneeded sub `cfg` when there is only one condition\n   --> kernel/src/syscall/mod.rs:381:19\n    |\n381 |             #[cfg(any(target_arch = \"x86_64\"))]\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `target_arch = \"x86_64\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_minimal_cfg\n    = note: `#[warn(clippy::non_minimal_cfg)]` on by default\n\n"]}},{"file":"kernel/src/syscall/shm.rs","count":1,"kinds":{"Clippy(Warn)":["warning: this is a decimal constant\n  --> kernel/src/syscall/shm.rs:31:21\n   |\n31 |         if shmflg & 01000 > 0 {\n   |                     ^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_prefixed_literal\n   = note: `#[warn(clippy::zero_prefixed_literal)]` on by default\nhelp: if you mean to use a decimal constant, remove the `0` to avoid confusion\n   |\n31 |         if shmflg & 1000 > 0 {\n   |                     ~~~~\nhelp: if you mean to use an octal constant, use `0o`\n   |\n31 |         if shmflg & 0o1000 > 0 {\n   |                     ~~~~~~\n\n"]}},{"file":"kernel/src/tasks/initproc.rs","count":1,"kinds":{"Clippy(Warn)":["warning: constants have by default a `'static` lifetime\n   --> kernel/src/tasks/initproc.rs:213:27\n    |\n213 | pub const USER_WORK_DIR: &'static str = \"/\";\n    |                          -^^^^^^^---- help: consider removing `'static`: `&str`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n    = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default\n\n"]}}]},{"user":"arceos-org","repo":"arceos","package":"arceos-httpclient","count":12,"raw_reports":[{"file":"examples/httpclient/src/main.rs","count":11,"kinds":{"Clippy(Error)":["error[E0463]: can't find crate for `std`\n  |\n  = note: the `x86_64-unknown-none` target may not support the standard library\n  = note: `std` is required by `arceos_httpclient` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n","error[E0463]: can't find crate for `std`\n --> examples/httpclient/src/main.rs:8:5\n  |\n8 | use std::io::{self, prelude::*};\n  |     ^^^ can't find crate\n  |\n  = note: the `x86_64-unknown-none` target may not support the standard library\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n","error[E0463]: can't find crate for `std`\n --> examples/httpclient/src/main.rs:9:5\n  |\n9 | use std::net::{TcpStream, ToSocketAddrs};\n  |     ^^^ can't find crate\n  |\n  = note: the `x86_64-unknown-none` target may not support the standard library\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n","error[E0432]: unresolved imports `std::io`, `std::net::TcpStream`, `std::net::ToSocketAddrs`\n --> examples/httpclient/src/main.rs:8:15\n  |\n8 | use std::io::{self, prelude::*};\n  |               ^^^^\n9 | use std::net::{TcpStream, ToSocketAddrs};\n  |                ^^^^^^^^^  ^^^^^^^^^^^^^\n\n","error[E0432]: unresolved imports `std::io`, `std::net::TcpStream`, `std::net::ToSocketAddrs`\n --> examples/httpclient/src/main.rs:8:15\n  |\n8 | use std::io::{self, prelude::*};\n  |               ^^^^\n9 | use std::net::{TcpStream, ToSocketAddrs};\n  |                ^^^^^^^^^  ^^^^^^^^^^^^^\n\n","error[E0432]: unresolved imports `std::io`, `std::net::TcpStream`, `std::net::ToSocketAddrs`\n --> examples/httpclient/src/main.rs:8:15\n  |\n8 | use std::io::{self, prelude::*};\n  |               ^^^^\n9 | use std::net::{TcpStream, ToSocketAddrs};\n  |                ^^^^^^^^^  ^^^^^^^^^^^^^\n\n","error: cannot find macro `println` in this scope\n  --> examples/httpclient/src/main.rs:38:5\n   |\n38 |     println!(\"Hello, simple http client!\");\n   |     ^^^^^^^\n\n","error: cannot find macro `println` in this scope\n  --> examples/httpclient/src/main.rs:32:5\n   |\n32 |     println!(\"{}\", response); // longer response need to handle tcp package problems.\n   |     ^^^^^^^\n\n","error: cannot find macro `println` in this scope\n  --> examples/httpclient/src/main.rs:24:9\n   |\n24 |         println!(\"dest: {} ({})\", DEST, addr);\n   |         ^^^^^^^\n\n","error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n  --> examples/httpclient/src/main.rs:33:5\n   |\n33 |     Ok(())\n   |     ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n8  + use core::result::Result::Ok;\n   |\n\n","error[E0599]: no method named `to_socket_addrs` found for reference `&'static str` in the current scope\n  --> examples/httpclient/src/main.rs:23:22\n   |\n23 |     for addr in DEST.to_socket_addrs()? {\n   |                      ^^^^^^^^^^^^^^^ method not found in `&str`\n\n"]}},{"file":"unkonwn-but-maybe-important","count":1,"kinds":{"Clippy(Error)":["error: `#[panic_handler]` function required, but not found\n\n"]}}]},{"user":"arceos-org","repo":"arceos","package":"mingo","count":5,"raw_reports":[{"file":"src/main.rs","count":3,"kinds":{"Clippy(Error)":["error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n","error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n","error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"]}},{"file":"src/cpu.rs","count":1,"kinds":{"Clippy(Error)":["error[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\n"]}},{"file":"src/panic_wait.rs","count":1,"kinds":{"Clippy(Error)":["error: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}}]},{"user":"arceos-org","repo":"arceos","package":"arceos-helloworld","count":4,"raw_reports":[{"file":"examples/helloworld/src/main.rs","count":2,"kinds":{"Clippy(Error)":["error[E0463]: can't find crate for `std`\n  |\n  = note: the `x86_64-unknown-none` target may not support the standard library\n  = note: `std` is required by `arceos_helloworld` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n","error: cannot find macro `println` in this scope\n --> examples/helloworld/src/main.rs:9:5\n  |\n9 |     println!(\"Hello, world!\");\n  |     ^^^^^^^\n\n"]}},{"file":"unkonwn-but-maybe-important","count":2,"kinds":{"Clippy(Error)":["error: `#[panic_handler]` function required, but not found\n\n","error: requires `sized` lang_item\n\n"]}}]},{"user":"arceos-org","repo":"arceos","package":"axfs","count":2,"raw_reports":[{"file":"modules/axfs/src/api/file.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/api/file.rs:27:5\n   |\n27 | /     pub const fn new() -> Self {\n28 | |         OpenOptions(fops::OpenOptions::new())\n29 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl Default for OpenOptions {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"]}},{"file":"modules/axfs/src/fops.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/fops.rs:54:5\n   |\n54 | /     pub const fn new() -> Self {\n55 | |         Self {\n56 | |             // generic\n57 | |             read: false,\n...  |\n66 | |         }\n67 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n52 + impl Default for OpenOptions {\n53 +     fn default() -> Self {\n54 +         Self::new()\n55 +     }\n56 + }\n   |\n\n"]}}]},{"user":"arceos-org","repo":"arceos","package":"axalloc","count":1,"raw_reports":[{"file":"modules/axalloc/src/lib.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `GlobalAllocator`\n  --> modules/axalloc/src/lib.rs:57:5\n   |\n57 | /     pub const fn new() -> Self {\n58 | |         Self {\n59 | |             balloc: SpinNoIrq::new(DefaultByteAllocator::new()),\n60 | |             palloc: SpinNoIrq::new(BitmapPageAllocator::new()),\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n55 + impl Default for GlobalAllocator {\n56 +     fn default() -> Self {\n57 +         Self::new()\n58 +     }\n59 + }\n   |\n\n"]}}]},{"user":"arceos-org","repo":"arceos","package":"axdma","count":1,"raw_reports":[{"file":"modules/axalloc/src/lib.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `GlobalAllocator`\n  --> modules/axalloc/src/lib.rs:57:5\n   |\n57 | /     pub const fn new() -> Self {\n58 | |         Self {\n59 | |             balloc: SpinNoIrq::new(DefaultByteAllocator::new()),\n60 | |             palloc: SpinNoIrq::new(BitmapPageAllocator::new()),\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n55 + impl Default for GlobalAllocator {\n56 +     fn default() -> Self {\n57 +         Self::new()\n58 +     }\n59 + }\n   |\n\n"]}}]},{"user":"arceos-org","repo":"arceos","package":"axmm","count":1,"raw_reports":[{"file":"modules/axalloc/src/lib.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `GlobalAllocator`\n  --> modules/axalloc/src/lib.rs:57:5\n   |\n57 | /     pub const fn new() -> Self {\n58 | |         Self {\n59 | |             balloc: SpinNoIrq::new(DefaultByteAllocator::new()),\n60 | |             palloc: SpinNoIrq::new(BitmapPageAllocator::new()),\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n55 + impl Default for GlobalAllocator {\n56 +     fn default() -> Self {\n57 +         Self::new()\n58 +     }\n59 + }\n   |\n\n"]}}]},{"user":"arceos-org","repo":"arceos","package":"axnet","count":1,"raw_reports":[{"file":"modules/axnet/src/smoltcp_impl/tcp.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `TcpSocket`\n  --> modules/axnet/src/smoltcp_impl/tcp.rs:50:5\n   |\n50 | /     pub const fn new() -> Self {\n51 | |         Self {\n52 | |             state: AtomicU8::new(STATE_CLOSED),\n53 | |             handle: UnsafeCell::new(None),\n...  |\n57 | |         }\n58 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n48 + impl Default for TcpSocket {\n49 +     fn default() -> Self {\n50 +         Self::new()\n51 +     }\n52 + }\n   |\n\n"]}}]}]}
