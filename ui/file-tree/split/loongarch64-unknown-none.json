{"data":[{"user":"kern-crates","repo":"ByteOS","pkg":"kernel","count":141,"raw_reports":[{"file":"kernel/src/syscall/consts.rs","count":55,"kinds":{"Clippy(Warn)":["warning: name `EPERM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:21:5\n   |\n21 |     EPERM = 1,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eperm`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ENOENT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:23:5\n   |\n23 |     ENOENT = 2,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoent`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ESRCH` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:25:5\n   |\n25 |     ESRCH = 3,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Esrch`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EINTR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:27:5\n   |\n27 |     EINTR = 4,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eintr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:29:5\n   |\n29 |     EIO = 5,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Eio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ENXIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:31:5\n   |\n31 |     ENXIO = 6,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enxio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ENOEXEC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:35:5\n   |\n35 |     ENOEXEC = 8,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoexec`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EBADF` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:37:5\n   |\n37 |     EBADF = 9,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebadf`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ECHILD` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:39:5\n   |\n39 |     ECHILD = 10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Echild`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EAGAIN` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:41:5\n   |\n41 |     EAGAIN = 11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eagain`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ENOMEM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:43:5\n   |\n43 |     ENOMEM = 12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enomem`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EACCES` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:45:5\n   |\n45 |     EACCES = 13,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eacces`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EFAULT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:47:5\n   |\n47 |     EFAULT = 14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efault`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ENOTBLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:49:5\n   |\n49 |     ENOTBLK = 15,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotblk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EBUSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:51:5\n   |\n51 |     EBUSY = 16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebusy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EEXIST` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:53:5\n   |\n53 |     EEXIST = 17,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eexist`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EXDEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:55:5\n   |\n55 |     EXDEV = 18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Exdev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ENODEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:57:5\n   |\n57 |     ENODEV = 19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enodev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ENOTDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:59:5\n   |\n59 |     ENOTDIR = 20,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EISDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:61:5\n   |\n61 |     EISDIR = 21,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eisdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EINVAL` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:63:5\n   |\n63 |     EINVAL = 22,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Einval`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ENFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:65:5\n   |\n65 |     ENFILE = 23,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EMFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:67:5\n   |\n67 |     EMFILE = 24,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ENOTTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:69:5\n   |\n69 |     ENOTTY = 25,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ETXTBSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:71:5\n   |\n71 |     ETXTBSY = 26,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxtbsy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EFBIG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:73:5\n   |\n73 |     EFBIG = 27,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efbig`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ENOSPC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:75:5\n   |\n75 |     ENOSPC = 28,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enospc`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ESPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:77:5\n   |\n77 |     ESPIPE = 29,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Espipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EROFS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:79:5\n   |\n79 |     EROFS = 30,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erofs`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EMLINK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:81:5\n   |\n81 |     EMLINK = 31,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emlink`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:83:5\n   |\n83 |     EPIPE = 32,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EDOM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:85:5\n   |\n85 |     EDOM = 33,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Edom`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ERANGE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:87:5\n   |\n87 |     ERANGE = 34,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erange`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EDEADLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:89:5\n   |\n89 |     EDEADLK = 35,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edeadlk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ENAMETOOLONG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:91:5\n   |\n91 |     ENAMETOOLONG = 36,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enametoolong`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ENOLCK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:93:5\n   |\n93 |     ENOLCK = 37,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enolck`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ENOSYS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:95:5\n   |\n95 |     ENOSYS = 38,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enosys`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ENOTEMPTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:97:5\n   |\n97 |     ENOTEMPTY = 39,\n   |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotempty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EAFNOSUPPORT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:99:5\n   |\n99 |     EAFNOSUPPORT = 97,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eafnosupport`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ENOTCONN` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:101:5\n    |\n101 |     ENOTCONN = 107,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotconn`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ETIMEDOUT` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:103:5\n    |\n103 |     ETIMEDOUT = 100,\n    |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etimedout`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ECONNREFUSED` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:105:5\n    |\n105 |     ECONNREFUSED = 111,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Econnrefused`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EALREADY` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:107:5\n    |\n107 |     EALREADY = 114,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ealready`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: casting integer literal to `isize` is unnecessary\n   --> kernel/src/syscall/consts.rs:422:27\n    |\n422 | pub const AT_CWD: usize = -100 as isize as usize;\n    |                           ^^^^^^^^^^^^^ help: try: `-100_isize`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n","warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:509:1\n    |\n509 | impl Into<MappingFlags> for MmapProt {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n    = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<syscall::consts::MmapProt>`\n    |\n509 ~ impl From<MmapProt> for MappingFlags {\n510 ~     fn from(val: MmapProt) -> Self {\n511 |         let mut res = MappingFlags::empty();\n512 ~         if val.contains(MmapProt::PROT_READ) {\n513 |             res |= MappingFlags::R;\n514 |         }\n515 ~         if val.contains(MmapProt::PROT_WRITE) {\n516 |             res |= MappingFlags::W;\n517 |         }\n518 ~         if val.contains(MmapProt::PROT_EXEC) {\n    |\n\n","warning: name `DUPFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:607:5\n    |\n607 |     DUPFD = 0,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `GETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:609:5\n    |\n609 |     GETFD = 1,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `SETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:611:5\n    |\n611 |     SETFD = 2,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `GETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:613:5\n    |\n613 |     GETFL = 3,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `SETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:615:5\n    |\n615 |     SETFL = 4,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `GETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:617:5\n    |\n617 |     GETLK = 5,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `SETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:619:5\n    |\n619 |     SETLK = 6,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `SETLKW` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:621:5\n    |\n621 |     SETLKW = 7,\n    |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlkw`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `DUPFDCLOEXEC` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:623:5\n    |\n623 |     DUPFDCLOEXEC = 0x406,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfdcloexec`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:872:1\n    |\n872 | impl<T> Into<usize> for UserRef<T> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<syscall::consts::UserRef<T>>`\n    |\n872 ~ impl<T> From<UserRef<T>> for usize {\n873 ~     fn from(val: UserRef<T>) -> Self {\n874 ~         val.addr.addr()\n    |\n\n"]}},{"file":"kernel/src/syscall/task.rs","count":18,"kinds":{"Clippy(Warn)":["warning: this `else { if .. }` block can be collapsed\n   --> kernel/src/syscall/task.rs:726:24\n    |\n726 |                   } else {\n    |  ________________________^\n727 | |                     if let Some(index) = target_signal.real_time_index() {\n728 | |                         child_tcb.signal_queue[index] += 1;\n729 | |                     }\n730 | |                 }\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\n    = note: `#[warn(clippy::collapsible_else_if)]` on by default\nhelp: collapse nested if block\n    |\n726 ~                 } else if let Some(index) = target_signal.real_time_index() {\n727 +                     child_tcb.signal_queue[index] += 1;\n728 +                 }\n    |\n\n","warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:757:36\n    |\n757 |             sec: stime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n    = note: `#[warn(clippy::inconsistent_digit_grouping)]` on by default\n\n","warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:758:37\n    |\n758 |             usec: stime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n","warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:761:36\n    |\n761 |             sec: utime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n","warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:762:37\n    |\n762 |             usec: utime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/syscall/task.rs:68:45\n   |\n68 |     if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n   |                                             ^^^^^^^ help: change this to: `buffer`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: redundant closure\n   --> kernel/src/syscall/task.rs:126:26\n    |\n126 |                     .map(|x| Arc::new(x))\n    |                          ^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Arc::new`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n    = note: `#[warn(clippy::redundant_closure)]` on by default\n\n","warning: useless conversion to the same type: `alloc::string::String`\n   --> kernel/src/syscall/task.rs:192:16\n    |\n192 |     let path = String::from(path);\n    |                ^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/task.rs:243:59\n    |\n243 |         let elf = if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n    |                                                           ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: parameter is only used in recursion\n   --> kernel/src/syscall/task.rs:189:5\n    |\n189 |     envp: Vec<String>,\n    |     ^^^^ help: if this is intentional, prefix it with an underscore: `_envp`\n    |\nnote: parameter used here\n   --> kernel/src/syscall/task.rs:248:79\n    |\n248 |             return exec_with_process(task, String::from(\"busybox\"), new_args, envp).await;\n    |                                                                               ^^^^\n...\n271 |                 return exec_with_process(task, new_args[0].clone(), new_args, envp).await;\n    |                                                                               ^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\n    = note: `#[warn(clippy::only_used_in_recursion)]` on by default\n\n","warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:405:14\n    |\n405 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n    = note: `#[warn(clippy::into_iter_on_ref)]` on by default\n\n","warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:411:14\n    |\n411 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n\n","warning: use of `.then_some(..).unwrap_or(..)` can be written more clearly with `if .. else ..`\n   --> kernel/src/syscall/task.rs:460:31\n    |\n460 |           let clear_child_tid = flags\n    |  _______________________________^\n461 | |             .contains(CloneFlags::CLONE_CHILD_CLEARTID)\n462 | |             .then_some(ctid)\n463 | |             .unwrap_or(UserRef::from(0));\n    | |________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#obfuscated_if_else\n    = note: `#[warn(clippy::obfuscated_if_else)]` on by default\nhelp: try\n    |\n460 ~         let clear_child_tid = if flags\n461 ~             .contains(CloneFlags::CLONE_CHILD_CLEARTID) { ctid } else { UserRef::from(0) };\n    |\n\n","warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:513:21\n    |\n513 | /                     inner\n514 | |                         .children\n515 | |                         .iter()\n516 | |                         .find(|x| x.task_id == pid as usize)\n517 | |                         .map(|x| x.clone())\n    | |___________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\n    = note: `#[warn(clippy::map_clone)]` on by default\nhelp: consider calling the dedicated `cloned` method\n    |\n513 ~                     inner\n514 +                         .children\n515 +                         .iter()\n516 +                         .find(|x| x.task_id == pid as usize).cloned()\n    |\n\n","warning: called `.iter().count()` on a `Vec`\n   --> kernel/src/syscall/task.rs:524:17\n    |\n524 |                 self.task.pcb.lock().children.iter().count()\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.task.pcb.lock().children.len()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#iter_count\n    = note: `#[warn(clippy::iter_count)]` on by default\n\n","warning: called `map_or(None, ..)` on an `Option` value. This can be done more directly by calling `and_then(..)` instead\n   --> kernel/src/syscall/task.rs:554:24\n    |\n554 |             let exit = child_task.clone().map_or(None, |x| x.exit_code());\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using `and_then` instead: `child_task.clone().and_then(|x| x.exit_code())`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_or_none\n    = note: `#[warn(clippy::option_map_or_none)]` on by default\n\n","warning: unneeded `return` statement\n   --> kernel/src/syscall/task.rs:698:17\n    |\n698 |                 return Err(LinuxError::EPERM);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n698 -                 return Err(LinuxError::EPERM);\n698 +                 Err(LinuxError::EPERM)\n    |\n\n","warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:706:13\n    |\n706 | /             x.threads\n707 | |                 .iter()\n708 | |                 .find(|x| match x.upgrade() {\n709 | |                     Some(thread) => thread.task_id == tid,\n710 | |                     None => false,\n711 | |                 })\n712 | |                 .map(|x| x.clone())\n    | |___________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\nhelp: consider calling the dedicated `cloned` method\n    |\n706 ~             x.threads\n707 +                 .iter()\n708 +                 .find(|x| match x.upgrade() {\n709 +                     Some(thread) => thread.task_id == tid,\n710 +                     None => false,\n711 +                 }).cloned()\n    |\n\n"]}},{"file":"kernel/src/tasks/initproc.rs","count":12,"kinds":{"Clippy(Warn)":["warning: constants have by default a `'static` lifetime\n   --> kernel/src/tasks/initproc.rs:213:27\n    |\n213 | pub const USER_WORK_DIR: &'static str = \"/\";\n    |                          -^^^^^^^---- help: consider removing `'static`: `&str`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n    = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default\n\n","warning: useless conversion to the same type: `hashbrown::hash_map::Values<'_, usize, alloc::sync::Weak<dyn executor::AsyncTask>>`\n  --> kernel/src/tasks/initproc.rs:59:5\n   |\n59 |     TASK_MAP.lock().values().into_iter().for_each(|task| {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `TASK_MAP.lock().values()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n","warning: unneeded `return` statement\n   --> kernel/src/tasks/initproc.rs:118:5\n    |\n118 |     return true;\n    |     ^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n118 -     return true;\n118 +     true\n    |\n\n","warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:122:41\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                         ^^^ help: try using a `char` instead: `' '`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n","warning: comparison to empty slice\n   --> kernel/src/tasks/initproc.rs:122:57\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                                         ^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!x.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n    = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n","warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:125:47\n    |\n125 |     let filename = match filename.starts_with(\"/\") {\n    |                                               ^^^ help: try using a `char` instead: `'/'`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n","warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:184:19\n    |\n184 |             match c as u8 {\n    |                   ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: unnecessary use of `to_string`\n   --> kernel/src/tasks/initproc.rs:187:40\n    |\n187 |                     let sign = command(&String::from_utf8_lossy(&buffer).to_string()).await;\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `String::from_utf8_lossy(&buffer).as_ref()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n    = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n","warning: length comparison to zero\n   --> kernel/src/tasks/initproc.rs:195:24\n    |\n195 |                     if buffer.len() > 0 {\n    |                        ^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:204:33\n    |\n204 |                     buffer.push(c as u8);\n    |                                 ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:205:43\n    |\n205 |                     DebugConsole::putchar(c as u8);\n    |                                           ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: called `is_none()` after searching an `Iterator` with `find`\n   --> kernel/src/tasks/initproc.rs:400:8\n    |\n400 |       if TASK_MAP\n    |  ________^\n401 | |         .lock()\n402 | |         .values()\n403 | |         .find(|x| {\n...   |\n407 | |         })\n408 | |         .is_none()\n    | |__________________^\n    |\n    = help: this is more succinctly expressed by calling `any()` with negation\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n"]}},{"file":"kernel/src/syscall/fd.rs","count":7,"kinds":{"Clippy(Warn)":["warning: digits of hex, binary or octal literal not in groups of equal size\n   --> kernel/src/syscall/fd.rs:936:31\n    |\n936 |             stime + timeout * 0x1000_000\n    |                               ^^^^^^^^^^ help: consider: `0x0100_0000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n    = note: `#[warn(clippy::unusual_byte_groupings)]` on by default\n\n","warning: length comparison to zero\n  --> kernel/src/syscall/fd.rs:26:8\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |        ^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!path.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","warning: single-character string constant used as pattern\n  --> kernel/src/syscall/fd.rs:26:43\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |                                           ^^^ help: try using a `char` instead: `'/'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/fd.rs:298:50\n    |\n298 |         dentry_open(dir.dentry.clone().unwrap(), &path, OpenFlags::NONE)\n    |                                                  ^^^^^ help: change this to: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: the loop variable `i` is only used to index `ts`\n   --> kernel/src/syscall/fd.rs:529:26\n    |\n529 |                 for i in 0..2 {\n    |                          ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n529 |                 for <item> in ts.iter().take(2) {\n    |                     ~~~~~~    ~~~~~~~~~~~~~~~~~\n\n","warning: the loop variable `i` is only used to index `poll_fds`\n   --> kernel/src/syscall/fd.rs:667:22\n    |\n667 |             for i in 0..nfds {\n    |                      ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n667 |             for <item> in poll_fds.iter_mut().take(nfds) {\n    |                 ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","warning: the method `writeat` doesn't need a mutable reference\n   --> kernel/src/syscall/fd.rs:995:46\n    |\n995 |                 .writeat(*off_out.get_ref(), &mut buffer[..rsize])\n    |                                              ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"]}},{"file":"kernel/src/tasks/async_ops.rs","count":6,"kinds":{"Clippy(Warn)":["warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/async_ops.rs:67:10\n   |\n67 |           .find(|x| x.contains(&task_id))\n   |  __________^\n68 | |         .is_some()\n   | |__________________^ help: use `any()` instead: `any(|x| x.contains(&task_id))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n   = note: `#[warn(clippy::search_is_some)]` on by default\n\n","warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/tasks/async_ops.rs:81:21\n   |\n81 | /                     self.0\n82 | |                         .lock()\n83 | |                         .values_mut()\n84 | |                         .find(|x| x.contains(&self.1))\n85 | |                         .map(|x| x.retain(|x| *x != self.1));\n   | |____________________________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\nhelp: try\n   |\n81 ~                     if let Some(x) = self.0\n82 +                         .lock()\n83 +                         .values_mut()\n84 +                         .find(|x| x.contains(&self.1)) { x.retain(|x| *x != self.1) }\n   |\n\n","warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:121:41\n    |\n121 |             .map(|x| x.drain(..cmp::min(wake_count as usize, que_size)));\n    |                                         ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:138:28\n    |\n138 |         .map(|x| x.drain(..wake_count as usize).count())\n    |                            ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:143:28\n    |\n143 |         .map(|x| x.drain(..reque_count as usize).collect());\n    |                            ^^^^^^^^^^^^^^^^^^^^ help: try: `reque_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: usage of `contains_key` followed by `insert` on a `BTreeMap`\n   --> kernel/src/tasks/async_ops.rs:146:9\n    |\n146 | /         if !futex_table.contains_key(&uaddr2) {\n147 | |             futex_table.insert(uaddr2, vec![]);\n148 | |         }\n    | |_________^ help: try: `futex_table.entry(uaddr2).or_insert_with(|| vec![]);`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_entry\n    = note: `#[warn(clippy::map_entry)]` on by default\n\n"]}},{"file":"kernel/src/tasks/filetable.rs","count":6,"kinds":{"Clippy(Warn)":["warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/filetable.rs:78:6\n   |\n78 | impl<'a> FileItem {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n","warning: manual implementation of an assign operation\n   --> kernel/src/tasks/filetable.rs:210:13\n    |\n210 |             ptr = ptr + current_len;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `ptr += current_len`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n    = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n","warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:333:12\n    |\n333 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:349:12\n    |\n349 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:374:12\n    |\n374 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/tasks/filetable.rs:378:47\n    |\n378 |         WaitBlockingWrite(self.inner.clone(), &buffer, offset)\n    |                                               ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"]}},{"file":"kernel/src/socket.rs","count":5,"kinds":{"Clippy(Warn)":["warning: name `STEAM` contains a capitalized acronym\n  --> kernel/src/socket.rs:15:5\n   |\n15 |     STEAM,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Steam`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `DGRAME` contains a capitalized acronym\n  --> kernel/src/socket.rs:16:5\n   |\n16 |     DGRAME,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dgrame`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `RAW` contains a capitalized acronym\n  --> kernel/src/socket.rs:17:5\n   |\n17 |     RAW,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Raw`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: length comparison to zero\n   --> kernel/src/socket.rs:163:12\n    |\n163 |         if data.len() == 0 {\n    |            ^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `data.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/socket.rs:186:33\n    |\n186 |         match self.inner.sendto(&buffer, None) {\n    |                                 ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"]}},{"file":"kernel/src/epoll/mod.rs","count":4,"kinds":{"Clippy(Warn)":["warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/epoll/mod.rs:65:17\n   |\n65 | //                 self.data.lock().get_mut(&fd).map(|x| {\n66 | ||                     *x = ev;\n67 | ||                 });\n   | ||__________________^- help: try: `if let Some(x) = self.data.lock().get_mut(&fd) { *x = ev; }`\n   |  |__________________|\n   | \n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\n   = note: `#[warn(clippy::option_map_unit_fn)]` on by default\n\n","warning: name `ADD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:79:5\n   |\n79 |     ADD = 1,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Add`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n","warning: name `DEL` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:80:5\n   |\n80 |     DEL = 2,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Del`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `MOD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:81:5\n   |\n81 |     MOD = 3,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Mod`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"]}},{"file":"kernel/src/tasks/memset.rs","count":4,"kinds":{"Clippy(Warn)":["warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/memset.rs:32:6\n   |\n32 | impl<'a> MemSet {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n","warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/memset.rs:38:23\n   |\n38 |         self.0.iter().find(|x| x.overlapping(start, end)).is_some()\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| x.overlapping(start, end))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n","warning: returning the result of a `let` binding from a block\n   --> kernel/src/tasks/memset.rs:111:9\n    |\n109 | /         let res =\n110 | |             !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end));\n    | |____________________________________________________________________________________________________- unnecessary `let` binding\n111 |           res\n    |           ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n    = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n    |\n109 ~         \n110 ~         !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end))\n    |\n\n","warning: you seem to be trying to use `match` for an equality check. Consider using `if`\n   --> kernel/src/tasks/memset.rs:213:9\n    |\n213 | /         match &self.mtype {\n214 | |             MemType::ShareFile => {\n215 | |                 let start = self.start;\n216 | |                 let len = self.len;\n...   |\n232 | |             _ => {}\n233 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n    = note: `#[warn(clippy::single_match)]` on by default\nhelp: try\n    |\n213 ~         if self.mtype == MemType::ShareFile {\n214 +             let start = self.start;\n215 +             let len = self.len;\n216 +             let mapfile = self.file.clone().unwrap();\n217 +             for tracker in &self.mtrackers {\n218 +                 if Arc::strong_count(&tracker.tracker) > 1 {\n219 +                     continue;\n220 +                 }\n221 + \n222 +                 let offset = tracker.vpn.to_addr() - start;\n223 +                 let wlen = min(len - offset, PAGE_SIZE);\n224 + \n225 +                 let bytes = &mut tracker.tracker.0.get_buffer()[..wlen];\n226 +                 mapfile\n227 +                     .writeat(offset, bytes)\n228 +                     .expect(\"can't write data to file at drop\");\n229 +             }\n230 +         }\n    |\n\n"]}},{"file":"kernel/src/tasks/task.rs","count":4,"kinds":{"Clippy(Warn)":["warning: this function has too many arguments (8/7)\n   --> kernel/src/tasks/task.rs:142:5\n    |\n142 | /     pub fn map_frames(\n143 | |         &self,\n144 | |         vpn: VirtPage,\n145 | |         mtype: MemType,\n...   |\n150 | |         len: usize,\n151 | |     ) -> Option<PhysPage> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n","warning: using `clone` on type `TrapFrame` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:320:29\n    |\n320 |         new_tcb_writer.cx = self.tcb.read().cx.clone();\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.tcb.read().cx`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: using `clone` on type `TrapFrame` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:360:17\n    |\n360 |             cx: parent_tcb.cx.clone(),\n    |                 ^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `parent_tcb.cx`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: using `clone` on type `SigProcMask` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:361:22\n    |\n361 |             sigmask: parent_tcb.sigmask.clone(),\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `parent_tcb.sigmask`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"]}},{"file":"kernel/build.rs","count":3,"kinds":{"Clippy(Warn)":["warning: comparison to empty slice\n  --> kernel/build.rs:17:12\n   |\n17 |         if module == \"\" {\n   |            ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `module.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n   = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n","warning: single-character string constant used as pattern\n  --> kernel/build.rs:20:84\n   |\n20 |         module_file_content.push_str(&format!(\"extern crate {};\\n\", module.replace(\"-\", \"_\")))\n   |                                                                                    ^^^ help: try using a `char` instead: `'-'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n","warning: single-character string constant used as pattern\n  --> kernel/build.rs:29:16\n   |\n29 |         .split(\",\")\n   |                ^^^ help: try using a `char` instead: `','`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"]}},{"file":"kernel/src/user/signal.rs","count":3,"kinds":{"Clippy(Warn)":["warning: using `clone` on type `SigAction` which implements the `Copy` trait\n  --> kernel/src/user/signal.rs:28:25\n   |\n28 |         let sigaction = self.task.pcb.lock().sigaction[signal.num()].clone();\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.task.pcb.lock().sigaction[signal.num()]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: using `clone` on type `TrapFrame` which implements the `Copy` trait\n  --> kernel/src/user/signal.rs:57:24\n   |\n57 |         let store_cx = cx_ref.clone();\n   |                        ^^^^^^^^^^^^^^ help: try dereferencing it: `*cx_ref`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/user/signal.rs:65:22\n   |\n65 |         cx.store_ctx(&cx_ref);\n   |                      ^^^^^^^ help: change this to: `cx_ref`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"]}},{"file":"kernel/src/user/socket_pair.rs","count":3,"kinds":{"Clippy(Warn)":["warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:42:9\n   |\n42 | /         if events.contains(PollEvent::POLLOUT) {\n43 | |             if self.inner.lock().len() <= 0x50000 {\n44 | |                 res |= PollEvent::POLLOUT;\n45 | |             }\n46 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n   = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n   |\n42 ~         if events.contains(PollEvent::POLLOUT) && self.inner.lock().len() <= 0x50000 {\n43 +             res |= PollEvent::POLLOUT;\n44 +         }\n   |\n\n","warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:47:9\n   |\n47 | /         if events.contains(PollEvent::POLLIN) {\n48 | |             if self.inner.lock().len() > 0 {\n49 | |                 res |= PollEvent::POLLIN;\n50 | |             }\n51 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n   |\n47 ~         if events.contains(PollEvent::POLLIN) && self.inner.lock().len() > 0 {\n48 +             res |= PollEvent::POLLIN;\n49 +         }\n   |\n\n","warning: useless conversion to the same type: `core::iter::Enumerate<alloc::collections::vec_deque::Drain<'_, u8>>`\n  --> kernel/src/user/socket_pair.rs:26:9\n   |\n26 | /         queue\n27 | |             .drain(..rlen)\n28 | |             .enumerate()\n29 | |             .into_iter()\n   | |________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\nhelp: consider removing `.into_iter()`\n   |\n26 ~         queue\n27 +             .drain(..rlen)\n28 +             .enumerate()\n   |\n\n"]}},{"file":"kernel/src/syscall/mod.rs","count":2,"kinds":{"Clippy(Warn)":["warning: unneeded sub `cfg` when there is only one condition\n   --> kernel/src/syscall/mod.rs:381:19\n    |\n381 |             #[cfg(any(target_arch = \"x86_64\"))]\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `target_arch = \"x86_64\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_minimal_cfg\n    = note: `#[warn(clippy::non_minimal_cfg)]` on by default\n\n","warning: useless conversion to the same type: `usize`\n   --> kernel/src/syscall/mod.rs:255:21\n    |\n255 |                     args[5].into(),\n    |                     ^^^^^^^^^^^^^^ help: consider removing `.into()`: `args[5]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n"]}},{"file":"kernel/src/syscall/socket.rs","count":2,"kinds":{"Clippy(Warn)":["warning: this loop could be written as a `while let` loop\n   --> kernel/src/syscall/socket.rs:237:9\n    |\n237 | /         loop {\n238 | |             match socket.inner.clone().connect(remote) {\n239 | |                 Err(NetServerError::Blocking) => {}\n240 | |                 _ => break,\n241 | |             }\n242 | |             yield_now().await;\n243 | |         }\n    | |_________^ help: try: `while let Err(NetServerError::Blocking) = socket.inner.clone().connect(remote) { .. }`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#while_let_loop\n    = note: `#[warn(clippy::while_let_loop)]` on by default\n\n","warning: using `clone` on type `Ipv4Addr` which implements the `Copy` trait\n   --> kernel/src/syscall/socket.rs:488:27\n    |\n488 |                 sa.addr = new_socket.get_remote().unwrap().ip().clone();\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*new_socket.get_remote().unwrap().ip()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n    = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"]}},{"file":"kernel/src/tasks/mod.rs","count":2,"kinds":{"Clippy(Warn)":["warning: manual `RangeInclusive::contains` implementation\n  --> kernel/src/tasks/mod.rs:57:20\n   |\n57 |                 if c >= 0x20 && c <= 0x7e {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^ help: use: `(0x20..=0x7e).contains(&c)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n   = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n","warning: name `TMS` contains a capitalized acronym\n   --> kernel/src/tasks/mod.rs:125:12\n    |\n125 | pub struct TMS {\n    |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Tms`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=kernel, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=loongarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/kern-crates/ByteOS/kernel\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target loongarch64-unknown-none\n   Compiling cfg-if v1.0.0\n   Compiling scopeguard v1.1.0\n   Compiling lock_api v0.4.9\n   Compiling log v0.4.17\n   Compiling bitflags v2.4.2\n   Compiling bit_field v0.10.2\n   Compiling bitflags v1.3.2\n   Compiling percpu v0.1.0 (https://github.com/Byte-OS/percpu.git#a71e60e3)\n   Compiling fdt v0.1.5\n   Compiling loongArch64 v0.2.2\n   Compiling byteorder v1.4.3\n   Compiling spin v0.9.8\n   Compiling sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n   Compiling polyhal v0.1.0 (https://github.com/Byte-OS/polyhal.git#78137eed)\n   Compiling zerocopy v0.7.32\n   Compiling linkme v0.3.22\n   Compiling timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling downcast-rs v1.2.0\n   Compiling num-traits v0.2.16\n   Compiling frame_allocator v0.1.0 (https://github.com/Byte-OS/bit_frame_allocator.git#e401675a)\n   Compiling vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling virtio-drivers v0.7.1 (https://github.com/rcore-os/virtio-drivers?rev=61ece50#61ece509)\n   Compiling ahash v0.8.3\n   Compiling once_cell v1.19.0\nerror[E0635]: unknown feature `stdsimd`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ahash-0.8.3/src/lib.rs:99:42\n   |\n99 | #![cfg_attr(feature = \"stdsimd\", feature(stdsimd))]\n   |                                          ^^^^^^^\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `ahash` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"kernel/src/main.rs","count":1,"kinds":{"Clippy(Warn)":["warning: matching on `Some` with `ok()` is redundant\n  --> kernel/src/main.rs:77:13\n   |\n77 |             if let Some(task) = current_task().downcast_arc::<UserTask>().ok() {\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_result_ok\n   = note: `#[warn(clippy::match_result_ok)]` on by default\nhelp: consider matching on `Ok(task)` and removing the call to `ok` instead\n   |\n77 |             if let Ok(task) = current_task().downcast_arc::<UserTask>() {\n   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"]}},{"file":"kernel/src/syscall/shm.rs","count":1,"kinds":{"Clippy(Warn)":["warning: this is a decimal constant\n  --> kernel/src/syscall/shm.rs:31:21\n   |\n31 |         if shmflg & 01000 > 0 {\n   |                     ^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_prefixed_literal\n   = note: `#[warn(clippy::zero_prefixed_literal)]` on by default\nhelp: if you mean to use a decimal constant, remove the `0` to avoid confusion\n   |\n31 |         if shmflg & 1000 > 0 {\n   |                     ~~~~\nhelp: if you mean to use an octal constant, use `0o`\n   |\n31 |         if shmflg & 0o1000 > 0 {\n   |                     ~~~~~~\n\n"]}},{"file":"kernel/src/tasks/elf.rs","count":1,"kinds":{"Clippy(Warn)":["warning: this function has too many arguments (10/7)\n   --> kernel/src/tasks/elf.rs:108:1\n    |\n108 | / pub fn init_task_stack(\n109 | |     user_task: Arc<UserTask>,\n110 | |     args: Vec<String>,\n111 | |     base: usize,\n...   |\n118 | |     tls: usize,\n119 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"]}},{"file":"kernel/src/tasks/shm.rs","count":1,"kinds":{"Clippy(Warn)":["warning: equality checks against true are unnecessary\n  --> kernel/src/tasks/shm.rs:30:49\n   |\n30 |         if Arc::strong_count(&self.mem) == 1 && *self.mem.deleted.lock() == true {\n   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `*self.mem.deleted.lock()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"]}}]},{"user":"Byte-OS","repo":"polyhal","pkg":"polyhal","count":26,"raw_reports":[{"file":"src/utils/mutex_no_irq.rs","count":9,"kinds":{"Clippy(Warn)":["warning: unsafe function's docs miss `# Safety` section\n  --> src/utils/mutex_no_irq.rs:59:5\n   |\n59 |     pub unsafe fn force_unlock(&self) {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n","warning: the following explicit lifetimes could be elided: 'b\n  --> src/utils/mutex_no_irq.rs:87:14\n   |\n87 |     fn deref<'b>(&'b self) -> &'b T {\n   |              ^^   ^^           ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n87 -     fn deref<'b>(&'b self) -> &'b T {\n87 +     fn deref(&self) -> &T {\n   |\n\n","warning: the following explicit lifetimes could be elided: 'b\n  --> src/utils/mutex_no_irq.rs:87:14\n   |\n87 |     fn deref<'b>(&'b self) -> &'b T {\n   |              ^^   ^^           ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n87 -     fn deref<'b>(&'b self) -> &'b T {\n87 +     fn deref(&self) -> &T {\n   |\n\n","warning: the following explicit lifetimes could be elided: 'b\n  --> src/utils/mutex_no_irq.rs:87:14\n   |\n87 |     fn deref<'b>(&'b self) -> &'b T {\n   |              ^^   ^^           ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n87 -     fn deref<'b>(&'b self) -> &'b T {\n87 +     fn deref(&self) -> &T {\n   |\n\n","warning: deref which would be done by auto-deref\n  --> src/utils/mutex_no_irq.rs:88:9\n   |\n88 |         &*(self.guard)\n   |         ^^^^^^^^^^^^^^ help: try: `&(self.guard)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref\n   = note: `#[warn(clippy::explicit_auto_deref)]` on by default\n\n","warning: the following explicit lifetimes could be elided: 'b\n  --> src/utils/mutex_no_irq.rs:93:18\n   |\n93 |     fn deref_mut<'b>(&'b mut self) -> &'b mut T {\n   |                  ^^   ^^               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n93 -     fn deref_mut<'b>(&'b mut self) -> &'b mut T {\n93 +     fn deref_mut(&mut self) -> &mut T {\n   |\n\n","warning: the following explicit lifetimes could be elided: 'b\n  --> src/utils/mutex_no_irq.rs:93:18\n   |\n93 |     fn deref_mut<'b>(&'b mut self) -> &'b mut T {\n   |                  ^^   ^^               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n93 -     fn deref_mut<'b>(&'b mut self) -> &'b mut T {\n93 +     fn deref_mut(&mut self) -> &mut T {\n   |\n\n","warning: the following explicit lifetimes could be elided: 'b\n  --> src/utils/mutex_no_irq.rs:93:18\n   |\n93 |     fn deref_mut<'b>(&'b mut self) -> &'b mut T {\n   |                  ^^   ^^               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n93 -     fn deref_mut<'b>(&'b mut self) -> &'b mut T {\n93 +     fn deref_mut(&mut self) -> &mut T {\n   |\n\n","warning: deref which would be done by auto-deref\n  --> src/utils/mutex_no_irq.rs:94:9\n   |\n94 |         &mut *(self.guard)\n   |         ^^^^^^^^^^^^^^^^^^ help: try: `&mut (self.guard)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref\n\n"]}},{"file":"src/components/pagetable/loongarch64.rs","count":3,"kinds":{"Clippy(Warn)":["warning: operator precedence can trip the unwary\n   --> src/components/pagetable/loongarch64.rs:178:10\n    |\n178 |         (self.0 >> 9 * n) & 0x1ff\n    |          ^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `self.0 >> (9 * n)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n    = note: `#[warn(clippy::precedence)]` on by default\n\n","warning: casting to the same type is unnecessary (`usize` -> `usize`)\n  --> src/components/pagetable/loongarch64.rs:36:30\n   |\n36 |         Self(ppn.to_addr() | flags.bits() as usize)\n   |                              ^^^^^^^^^^^^^^^^^^^^^ help: try: `flags.bits()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n   = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n","warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/components/pagetable/loongarch64.rs:58:1\n   |\n58 | impl Into<MappingFlags> for PTEFlags {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<components::pagetable::loongarch64::PTEFlags>`\n   |\n58 ~ impl From<PTEFlags> for MappingFlags {\n59 ~     fn from(val: PTEFlags) -> Self {\n60 |         let mut flags = MappingFlags::empty();\n61 ~         if val.contains(PTEFlags::W) {\n62 |             flags |= MappingFlags::W;\n63 |         }\n64 | \n65 ~         if val.contains(PTEFlags::D) {\n66 |             flags |= MappingFlags::D;\n ...\n72 | \n73 ~         if val.contains(PTEFlags::PLV_USER) {\n   |\n\n"]}},{"file":"src/components/pagetable/mod.rs","count":3,"kinds":{"Clippy(Warn)":["warning: name `PTE` contains a capitalized acronym\n  --> src/components/pagetable/mod.rs:18:19\n   |\n18 | pub(crate) struct PTE(pub usize);\n   |                   ^^^ help: consider making the acronym lowercase, except the initial letter: `Pte`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n","warning: `assert!(true)` will be optimized out by the compiler\n  --> src/components/pagetable/mod.rs:52:9\n   |\n52 |         assert!(Self::PAGE_LEVEL >= 3, \"Just level >= 3 supported currently\");\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: remove it\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n   = note: `#[warn(clippy::assertions_on_constants)]` on by default\n\n","warning: `assert!(true)` will be optimized out by the compiler\n   --> src/components/pagetable/mod.rs:105:9\n    |\n105 |         assert!(Self::PAGE_LEVEL >= 3, \"Just level >= 3 supported currently\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove it\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n\n"]}},{"file":"src/components/kcontext/loongarch64.rs","count":2,"kinds":{"Clippy(Warn)":["warning: unsafe function's docs miss `# Safety` section\n  --> src/components/kcontext/loongarch64.rs:92:1\n   |\n92 | pub unsafe extern \"C\" fn context_switch(from: *mut KContext, to: *const KContext) {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n","warning: unsafe function's docs miss `# Safety` section\n   --> src/components/kcontext/loongarch64.rs:135:1\n    |\n135 | / pub unsafe extern \"C\" fn context_switch_pt(\n136 | |     from: *mut KContext,\n137 | |     to: *const KContext,\n138 | |     pt_token: PageTable,\n139 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"]}},{"file":"src/time.rs","count":2,"kinds":{"Clippy(Warn)":["warning: digits grouped inconsistently by underscores\n  --> src/time.rs:52:18\n   |\n52 |         self.0 * 1000_000 / Self::get_freq()\n   |                  ^^^^^^^^ help: consider: `1_000_000`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n   = note: `#[warn(clippy::inconsistent_digit_grouping)]` on by default\n\n","warning: digits grouped inconsistently by underscores\n  --> src/time.rs:58:18\n   |\n58 |         self.0 * 1000_000_000 / Self::get_freq()\n   |                  ^^^^^^^^^^^^ help: consider: `1_000_000_000`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"]}},{"file":"src/addr.rs","count":1,"kinds":{"Clippy(Warn)":["warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/addr.rs:218:43\n    |\n218 |         self.get_buffer().copy_from_slice(&ppn.get_buffer());\n    |                                           ^^^^^^^^^^^^^^^^^ help: change this to: `ppn.get_buffer()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"]}},{"file":"src/components/arch/loongarch64.rs","count":1,"kinds":{"Clippy(Warn)":["warning: calls to `push` immediately after creation\n  --> src/components/arch/loongarch64.rs:9:9\n   |\n9  | /         let mut mem_area = Vec::new();\n10 | |         // This is just temporary solution until we find a better way to detect memory areas.\n11 | |         mem_area.push((VIRT_ADDR_START | 0x9000_0000, 0x2000_0000));\n   | |____________________________________________________________________^ help: consider using the `vec![]` macro: `let mem_area = vec![..];`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#vec_init_then_push\n   = note: `#[warn(clippy::vec_init_then_push)]` on by default\n\n"]}},{"file":"src/components/consts/mod.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unnecessary `pub(self)`\n  --> src/components/consts/mod.rs:14:1\n   |\n14 | pub(self) trait ConfigTrait {\n   | ^^^^^^^^^ help: remove it\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pub_self\n   = note: `#[warn(clippy::needless_pub_self)]` on by default\n\n"]}},{"file":"src/components/debug_console/mod.rs","count":1,"kinds":{"Clippy(Warn)":["warning: this `.into_iter()` call is equivalent to `.iter()` and will not consume the `slice`\n  --> src/components/debug_console/mod.rs:53:22\n   |\n53 |         s.as_bytes().into_iter().for_each(|x| Self::putchar(*x));\n   |                      ^^^^^^^^^ help: call directly: `iter`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n   = note: `#[warn(clippy::into_iter_on_ref)]` on by default\n\n"]}},{"file":"src/components/mod.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unnecessary `pub(self)`\n  --> src/components/mod.rs:23:1\n   |\n23 | pub(self) use polyhal_macro::define_arch_mods;\n   | ^^^^^^^^^ help: remove it\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pub_self\n\n"]}},{"file":"src/components/timer/loongarch64.rs","count":1,"kinds":{"Clippy(Warn)":["warning: redundant closure\n --> src/components/timer/loongarch64.rs:8:38\n  |\n8 | static FREQ: Lazy<usize> = Lazy::new(|| get_timer_freq());\n  |                                      ^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `get_timer_freq`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n  = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"]}},{"file":"src/lib.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused `#[macro_use]` import\n   --> src/lib.rs:148:1\n    |\n148 | #[macro_use]\n    | ^^^^^^^^^^^^\n    |\n    = note: `#[warn(unused_imports)]` on by default\n\n"]}}]},{"user":"Byte-OS","repo":"polyhal","pkg":"example","count":6,"raw_reports":[{"file":"src/frame.rs","count":2,"kinds":{"Clippy(Warn)":["warning: function `add_frame_range` is never used\n --> src/frame.rs:8:8\n  |\n8 | pub fn add_frame_range(mm_start: usize, mm_end: usize) {\n  |        ^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(dead_code)]` on by default\n\n","warning: redundant closure\n --> src/frame.rs:6:15\n  |\n6 |     Lazy::new(|| LockedFrameAllocator::new());\n  |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `LockedFrameAllocator::new`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n  = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"]}},{"file":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/macros.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unreachable statement\n  --> src/main.rs:87:5\n   |\n81 | /     loop {\n82 | |         if let Some(c) = DebugConsole::getchar() {\n83 | |             DebugConsole::putchar(c);\n84 | |         }\n85 | |     }\n   | |_____- any code following this expression is unreachable\n86 |\n87 |       log::info!(\"Run END. Shutdown successfully.\");\n   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n   |\n   = note: `#[warn(unreachable_code)]` on by default\n   = note: this warning originates in the macro `$crate::log` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=example, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=loongarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/polyhal/example\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target loongarch64-unknown-none\n   Compiling lock_api v0.4.11\n   Compiling scopeguard v1.2.0\n   Compiling byteorder v1.5.0\n   Compiling bitflags v2.6.0\n   Compiling bit_field v0.10.2\n   Compiling log v0.4.22\n   Compiling bitflags v1.3.2\n   Compiling zerocopy v0.7.35\n   Compiling loongArch64 v0.2.2\n   Compiling spin v0.9.8\n   Compiling cfg-if v1.0.0\n   Compiling fdt v0.1.5\n   Compiling buddy_system_allocator v0.9.1\n   Compiling polyhal v0.1.3 (/home/runner/check/batch_1/Byte-OS/polyhal)\nwarning: unexpected `cfg` condition name: `c906`\n   --> /home/runner/check/batch_1/Byte-OS/polyhal/src/addr.rs:219:15\n    |\n219 |         #[cfg(c906)]\n    |               ^^^^\n    |\n    = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, `windows`\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: `#[warn(unexpected_cfgs)]` on by default\n\nwarning: unexpected `cfg` condition name: `board`\n   --> /home/runner/check/batch_1/Byte-OS/polyhal/src/addr.rs:224:15\n    |\n224 |         #[cfg(board = \"2k1000\")]\n    |               ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(board, values(\"2k1000\"))'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(board, values(\\\"2k1000\\\"))\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `board`\n   --> /home/runner/check/batch_1/Byte-OS/polyhal/src/addr.rs:240:15\n    |\n240 |         #[cfg(board = \"2k1000\")]\n    |               ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(board, values(\"2k1000\"))'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(board, values(\\\"2k1000\\\"))\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `c906`\n   --> /home/runner/check/batch_1/Byte-OS/polyhal/src/addr.rs:244:15\n    |\n244 |         #[cfg(c906)]\n    |               ^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `board`\n --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/debug_console/loongarch64.rs:5:11\n  |\n5 | #[cfg(not(board = \"2k1000\"))]\n  |           ^^^^^^^^^^^^^^^^\n  |\n  = help: consider using a Cargo feature instead\n  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n           [lints.rust]\n           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(board, values(\"2k1000\"))'] }\n  = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(board, values(\\\"2k1000\\\"))\");` to the top of the `build.rs`\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `board`\n --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/debug_console/loongarch64.rs:7:7\n  |\n7 | #[cfg(board = \"2k1000\")]\n  |       ^^^^^^^^^^^^^^^^\n  |\n  = help: consider using a Cargo feature instead\n  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n           [lints.rust]\n           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(board, values(\"2k1000\"))'] }\n  = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(board, values(\\\"2k1000\\\"))\");` to the top of the `build.rs`\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: the feature `offset_of` has been stable since 1.77.0 and no longer requires an attribute to enable\n --> /home/runner/check/batch_1/Byte-OS/polyhal/src/lib.rs:8:12\n  |\n8 | #![feature(offset_of)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n   Compiling virtio-drivers v0.7.5\nwarning: field `0` is never read\n  --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/irq/mod.rs:35:22\n   |\n35 | pub struct IRQVector(pub(crate) usize);\n   |            --------- ^^^^^^^^^^^^^^^^\n   |            |\n   |            field in this struct\n   |\n   = note: `IRQVector` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\nhelp: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field\n   |\n35 | pub struct IRQVector(());\n   |                      ~~\n\nwarning: field `0` is never read\n  --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/percpu/mod.rs:15:19\n   |\n15 | struct PerCPUDATA([u8; PAGE_SIZE]);\n   |        ---------- ^^^^^^^^^^^^^^^\n   |        |\n   |        field in this struct\n   |\nhelp: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field\n   |\n15 | struct PerCPUDATA(());\n   |                   ~~\n\nwarning: `polyhal` (lib) generated 9 warnings\n   Compiling example v0.1.0 (/home/runner/check/batch_1/Byte-OS/polyhal/example)\nwarning: unreachable statement\n  --> src/main.rs:87:5\n   |\n81 | /     loop {\n82 | |         if let Some(c) = DebugConsole::getchar() {\n83 | |             DebugConsole::putchar(c);\n84 | |         }\n85 | |     }\n   | |_____- any code following this expression is unreachable\n86 |\n87 |       log::info!(\"Run END. Shutdown successfully.\");\n   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n   |\n   = note: `#[warn(unreachable_code)]` on by default\n   = note: this warning originates in the macro `$crate::log` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unused variable: `addr`\n  --> src/pci.rs:64:18\n   |\n64 |     if let Some((addr, size)) = bar_info.memory_address_size() {\n   |                  ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\nwarning: function `add_frame_range` is never used\n --> src/frame.rs:8:8\n  |\n8 | pub fn add_frame_range(mm_start: usize, mm_end: usize) {\n  |        ^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(dead_code)]` on by default\n\nerror: linking with `rust-lld` failed: exit status: 1\n  |\n  = note: LC_ALL=\"C\" PATH=\"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin:/opt/hostedtoolcache/sccache/0.8.1/x64:/snap/bin:/home/runner/.local/bin:/opt/pipx_bin:/home/runner/.cargo/bin:/home/runner/.config/composer/vendor/bin:/usr/local/.ghcup/bin:/home/runner/.dotnet/tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin\" VSLANG=\"1033\" \"rust-lld\" \"-flavor\" \"gnu\" \"/tmp/rustc0mf6N2/symbols.o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/example-46bf1524e5424e03.example.2a7541773a7853c9-cgu.0.rcgu.o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/example-46bf1524e5424e03.example.2a7541773a7853c9-cgu.1.rcgu.o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/example-46bf1524e5424e03.example.2a7541773a7853c9-cgu.2.rcgu.o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/example-46bf1524e5424e03.1dyeys17jnya82yrzwpvllz3v.rcgu.o\" \"--as-needed\" \"-L\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps\" \"-L\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/debug/deps\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib\" \"-Bstatic\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libvirtio_drivers-c71b4244ead45a74.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libzerocopy-b65a73bda5dd105a.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libbyteorder-a6608e82b803455e.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libpolyhal-2b527d3728be4062.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libloongArch64-63ff8d9558004182.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libbitflags-7d4c229935312c2e.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libbit_field-f205bae68304904b.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libcfg_if-e5b2c08080a8d0bd.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libbitflags-a49aa3b7c7494a35.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libfdt-45db0bc4944b4493.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/liblog-531edc9e0960d321.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libbuddy_system_allocator-0f74cc2c33704f4a.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/liballoc-cf622d6ac0c1207e.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libspin-e73be5f20d839958.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/liblock_api-cb5b9691a0c0d257.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libscopeguard-e4c379832e03342e.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/librustc_std_workspace_core-3b1e26e39e9a51e8.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcore-d6c82fdbb3df4fe1.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib\" \"-Bdynamic\" \"--eh-frame-hdr\" \"-z\" \"noexecstack\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib\" \"-o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/example-46bf1524e5424e03\" \"--gc-sections\" \"-Tlinker/linker-loongarch64.ld\"\n  = note: rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-absvdi2.o) is incompatible with /tmp/rustc0mf6N2/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-absvsi2.o) is incompatible with /tmp/rustc0mf6N2/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-absvti2.o) is incompatible with /tmp/rustc0mf6N2/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-addtf3.o) is incompatible with /tmp/rustc0mf6N2/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-addvdi3.o) is incompatible with /tmp/rustc0mf6N2/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-addvsi3.o) is incompatible with /tmp/rustc0mf6N2/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-addvti3.o) is incompatible with /tmp/rustc0mf6N2/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-clzdi2.o) is incompatible with /tmp/rustc0mf6N2/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-clzsi2.o) is incompatible with /tmp/rustc0mf6N2/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-clzti2.o) is incompatible with /tmp/rustc0mf6N2/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-cmpdi2.o) is incompatible with /tmp/rustc0mf6N2/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-cmpti2.o) is incompatible with /tmp/rustc0mf6N2/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-ctzdi2.o) is incompatible with /tmp/rustc0mf6N2/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-ctzsi2.o) is incompatible with /tmp/rustc0mf6N2/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-ctzti2.o) is incompatible with /tmp/rustc0mf6N2/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-divdc3.o) is incompatible with /tmp/rustc0mf6N2/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-divsc3.o) is incompatible with /tmp/rustc0mf6N2/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-divtf3.o) is incompatible with /tmp/rustc0mf6N2/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-extenddftf2.o) is incompatible with /tmp/rustc0mf6N2/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-extendhfsf2.o) is incompatible with /tmp/rustc0mf6N2/symbols.o\n          rust-lld: error: too many errors emitted, stopping now (use --error-limit=0 to see all errors)\n          \n\nwarning: `example` (bin \"example\") generated 3 warnings\nerror: could not compile `example` (bin \"example\") due to 1 previous error; 3 warnings emitted\n"]}},{"file":"src/main.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unneeded `return` statement\n  --> src/main.rs:36:23\n   |\n36 |         Breakpoint => return,\n   |                       ^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n   = note: `#[warn(clippy::needless_return)]` on by default\nhelp: replace `return` with a unit value\n   |\n36 |         Breakpoint => (),\n   |                       ~~\n\n"]}},{"file":"src/pci.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused variable: `addr`\n  --> src/pci.rs:64:18\n   |\n64 |     if let Some((addr, size)) = bar_info.memory_address_size() {\n   |                  ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Lockbud(Probably)","Lockbud(Possibly)","Unformatted"]}