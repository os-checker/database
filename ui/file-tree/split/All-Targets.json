{"data":[{"user":"kern-crates","repo":"zCore","pkg":"zcore","count":74,"raw_reports":[{"file":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs","count":15,"kinds":{"Clippy(Error)":["error[E0463]: can't find crate for `core`\n  |\n  = note: the `x86_64-unknown-uefi` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-uefi`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n","error[E0463]: can't find crate for `compiler_builtins`\n\n","error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:217:17\n    |\n217 |                 assert!(bit < Self::BIT_LENGTH);\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:227:17\n    |\n227 |                 assert!(range.start < Self::BIT_LENGTH);\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:228:17\n    |\n228 |                 assert!(range.end <= Self::BIT_LENGTH);\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:229:17\n    |\n229 |                 assert!(range.start < range.end);\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:241:17\n    |\n241 |                 assert!(bit < Self::BIT_LENGTH);\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:257:17\n    |\n257 |                 assert!(range.start < Self::BIT_LENGTH);\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:258:17\n    |\n258 |                 assert!(range.end <= Self::BIT_LENGTH);\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:259:17\n    |\n259 |                 assert!(range.start < range.end);\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:260:17\n    |\n260 |                 assert!(value << (Self::BIT_LENGTH - (range.end - range.start)) >>\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:298:9\n    |\n298 |         assert!(range.len() <= T::BIT_LENGTH);\n    |         ^^^^^^\n\n","error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:306:9\n    |\n306 |         assert!(slice_end - slice_start <= 1);\n    |         ^^^^^^\n\n","error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:335:9\n    |\n335 |         assert!(range.len() <= T::BIT_LENGTH);\n    |         ^^^^^^\n\n","error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:342:9\n    |\n342 |         assert!(slice_end - slice_start <= 1);\n    |         ^^^^^^\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs","count":6,"kinds":{"Clippy(Error)":["error[E0432]: unresolved import `naive_timer`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs:7:5\n  |\n7 | use naive_timer::Timer;\n  |     ^^^^^^^^^^^ use of undeclared crate or module `naive_timer`\n\n","error[E0599]: no method named `lock` found for struct `NAIVE_TIMER` in the current scope\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs:28:25\n   |\n12 | / lazy_static::lazy_static! {\n13 | |     static ref NAIVE_TIMER:Mutex<Timer> = Mutex::new(Timer::default());\n14 | | }\n   | |_- method `lock` not found for this struct\n...\n28 |               NAIVE_TIMER.lock().add(deadline, callback);\n   |                           ^^^^ method not found in `NAIVE_TIMER`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `lock`, perhaps you need to implement it:\n           candidate #1: `lock_api::mutex::RawMutex`\n\n","error[E0599]: no method named `lock` found for struct `NAIVE_TIMER` in the current scope\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs:32:25\n   |\n12 | / lazy_static::lazy_static! {\n13 | |     static ref NAIVE_TIMER:Mutex<Timer> = Mutex::new(Timer::default());\n14 | | }\n   | |_- method `lock` not found for this struct\n...\n32 |               NAIVE_TIMER.lock().expire(timer_now());\n   |                           ^^^^ method not found in `NAIVE_TIMER`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `lock`, perhaps you need to implement it:\n           candidate #1: `lock_api::mutex::RawMutex`\n\n","error[E0432]: unresolved import `naive_timer`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs:7:5\n  |\n7 | use naive_timer::Timer;\n  |     ^^^^^^^^^^^ use of undeclared crate or module `naive_timer`\n\n","error[E0599]: no method named `lock` found for struct `NAIVE_TIMER` in the current scope\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs:28:25\n   |\n12 | / lazy_static::lazy_static! {\n13 | |     static ref NAIVE_TIMER:Mutex<Timer> = Mutex::new(Timer::default());\n14 | | }\n   | |_- method `lock` not found for this struct\n...\n28 |               NAIVE_TIMER.lock().add(deadline, callback);\n   |                           ^^^^ method not found in `NAIVE_TIMER`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `lock`, perhaps you need to implement it:\n           candidate #1: `lock_api::mutex::RawMutex`\n\n","error[E0599]: no method named `lock` found for struct `NAIVE_TIMER` in the current scope\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs:32:25\n   |\n12 | / lazy_static::lazy_static! {\n13 | |     static ref NAIVE_TIMER:Mutex<Timer> = Mutex::new(Timer::default());\n14 | | }\n   | |_- method `lock` not found for this struct\n...\n32 |               NAIVE_TIMER.lock().expire(timer_now());\n   |                           ^^^^ method not found in `NAIVE_TIMER`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `lock`, perhaps you need to implement it:\n           candidate #1: `lock_api::mutex::RawMutex`\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs","count":4,"kinds":{"Mirai":["error[E0432]: unresolved imports `core::ops::Generator`, `core::ops::GeneratorState`\n --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs:6:17\n  |\n6 | use core::ops::{Generator, GeneratorState};\n  |                 ^^^^^^^^^  ^^^^^^^^^^^^^^ no `GeneratorState` in `ops`\n  |                 |\n  |                 no `Generator` in `ops`\n\n","error[E0432]: unresolved imports `core::ops::Generator`, `core::ops::GeneratorState`\n --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs:6:17\n  |\n6 | use core::ops::{Generator, GeneratorState};\n  |                 ^^^^^^^^^  ^^^^^^^^^^^^^^ no `GeneratorState` in `ops`\n  |                 |\n  |                 no `Generator` in `ops`\n\n","error[E0658]: yield syntax is experimental\n   --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs:227:33\n    |\n227 | ...                   yield found_key;\n    |                       ^^^^^^^^^^^^^^^\n    |\n    = note: see issue #43122 <https://github.com/rust-lang/rust/issues/43122> for more information\n    = help: add `#![feature(coroutines)]` to the crate attributes to enable\n    = note: this compiler was built on 2024-02-04; consider upgrading it if it is out of date\n\n","error[E0658]: yield syntax is experimental\n   --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs:244:17\n    |\n244 |                 yield None;\n    |                 ^^^^^^^^^^\n    |\n    = note: see issue #43122 <https://github.com/rust-lang/rust/issues/43122> for more information\n    = help: add `#![feature(coroutines)]` to the crate attributes to enable\n    = note: this compiler was built on 2024-02-04; consider upgrading it if it is out of date\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/config.rs","count":4,"kinds":{"Clippy(Error)":["error[E0433]: failed to resolve: use of undeclared crate or module `uefi`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/config.rs:3:5\n  |\n3 | use uefi::proto::console::gop::ModeInfo;\n  |     ^^^^ use of undeclared crate or module `uefi`\n\n","error[E0433]: failed to resolve: use of undeclared crate or module `uefi`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/config.rs:4:5\n  |\n4 | use uefi::table::boot::MemoryDescriptor;\n  |     ^^^^ use of undeclared crate or module `uefi`\n\n","error[E0433]: failed to resolve: use of undeclared crate or module `uefi`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/config.rs:3:5\n  |\n3 | use uefi::proto::console::gop::ModeInfo;\n  |     ^^^^ use of undeclared crate or module `uefi`\n\n","error[E0433]: failed to resolve: use of undeclared crate or module `uefi`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/config.rs:4:5\n  |\n4 | use uefi::table::boot::MemoryDescriptor;\n  |     ^^^^ use of undeclared crate or module `uefi`\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/trap.rs","count":4,"kinds":{"Clippy(Error)":["error[E0432]: unresolved import `trapframe::TrapFrame`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/trap.rs:2:5\n  |\n2 | use trapframe::TrapFrame;\n  |     ^^^^^^^^^^^^^^^^^^^^ no `TrapFrame` in the root\n\n","error[E0433]: failed to resolve: use of undeclared crate or module `executor`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/trap.rs:41:17\n   |\n41 |                 executor::handle_timeout();\n   |                 ^^^^^^^^ use of undeclared crate or module `executor`\n\n","error[E0432]: unresolved import `trapframe::TrapFrame`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/trap.rs:2:5\n  |\n2 | use trapframe::TrapFrame;\n  |     ^^^^^^^^^^^^^^^^^^^^ no `TrapFrame` in the root\n\n","error[E0433]: failed to resolve: use of undeclared crate or module `executor`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/trap.rs:41:17\n   |\n41 |                 executor::handle_timeout();\n   |                 ^^^^^^^^ use of undeclared crate or module `executor`\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/boot.rs","count":4,"kinds":{"Clippy(Error)":["error[E0425]: cannot find function `init` in crate `trapframe`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/boot.rs:24:33\n   |\n24 |             unsafe { trapframe::init() };\n   |                                 ^^^^ not found in `trapframe`\n   |\nhelp: consider importing one of these items\n   |\n3  | use crate::imp::arch::timer::init;\n   |\n3  | use crate::net::init;\n   |\n3  | use zcore_drivers::bus::pci::init;\n   |\n3  | use zcore_drivers::net::e1000::init;\n   |\nhelp: if you import `init`, refer to it directly\n   |\n24 -             unsafe { trapframe::init() };\n24 +             unsafe { init() };\n   |\n\n","error[E0425]: cannot find function `init` in crate `trapframe`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/boot.rs:31:33\n   |\n31 |             unsafe { trapframe::init() };\n   |                                 ^^^^ not found in `trapframe`\n   |\nhelp: consider importing one of these items\n   |\n3  | use crate::imp::arch::timer::init;\n   |\n3  | use crate::net::init;\n   |\n3  | use zcore_drivers::bus::pci::init;\n   |\n3  | use zcore_drivers::net::e1000::init;\n   |\nhelp: if you import `init`, refer to it directly\n   |\n31 -             unsafe { trapframe::init() };\n31 +             unsafe { init() };\n   |\n\n","error[E0425]: cannot find function `init` in crate `trapframe`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/boot.rs:24:33\n   |\n24 |             unsafe { trapframe::init() };\n   |                                 ^^^^ not found in `trapframe`\n   |\nhelp: consider importing one of these items\n   |\n3  | use crate::imp::arch::timer::init;\n   |\n3  | use crate::net::init;\n   |\n3  | use zcore_drivers::bus::pci::init;\n   |\n3  | use zcore_drivers::net::e1000::init;\n   |\nhelp: if you import `init`, refer to it directly\n   |\n24 -             unsafe { trapframe::init() };\n24 +             unsafe { init() };\n   |\n\n","error[E0425]: cannot find function `init` in crate `trapframe`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/boot.rs:31:33\n   |\n31 |             unsafe { trapframe::init() };\n   |                                 ^^^^ not found in `trapframe`\n   |\nhelp: consider importing one of these items\n   |\n3  | use crate::imp::arch::timer::init;\n   |\n3  | use crate::net::init;\n   |\n3  | use zcore_drivers::bus::pci::init;\n   |\n3  | use zcore_drivers::net::e1000::init;\n   |\nhelp: if you import `init`, refer to it directly\n   |\n31 -             unsafe { trapframe::init() };\n31 +             unsafe { init() };\n   |\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/lib.rs","count":3,"kinds":{"Mirai":["error[E0557]: feature has been removed\n --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/lib.rs:4:12\n  |\n4 | #![feature(generators, generator_trait)]\n  |            ^^^^^^^^^^ feature has been removed\n  |\n  = note: renamed to `coroutines`\n\n","error[E0635]: unknown feature `generator_trait`\n --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/lib.rs:4:24\n  |\n4 | #![feature(generators, generator_trait)]\n  |                        ^^^^^^^^^^^^^^^\n\n","error[E0635]: unknown feature `atomic_mut_ptr`\n --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/lib.rs:6:12\n  |\n6 | #![feature(atomic_mut_ptr)]\n  |            ^^^^^^^^^^^^^^\n\n"]}},{"file":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.3.2/src/lib.rs","count":3,"kinds":{"Clippy(Error)":["error[E0463]: can't find crate for `core`\n  |\n  = note: the `x86_64-unknown-uefi` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-uefi`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n","error[E0463]: can't find crate for `compiler_builtins`\n\n","error[E0463]: can't find crate for `core`\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.3.2/src/lib.rs:282:1\n    |\n282 | pub extern crate core as _core;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ can't find crate\n    |\n    = note: the `x86_64-unknown-uefi` target may not be installed\n    = help: consider downloading the target with `rustup target add x86_64-unknown-uefi`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"]}},{"file":"(virtual) clippy","count":3,"kinds":{"Cargo":["// pkg_name=zcore, checker=Clippy\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-musl\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zCore\n// cmd=cargo clippy --target x86_64-unknown-linux-musl --no-deps --message-format=json\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n    Checking log v0.4.21\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking raw-cpuid v10.7.0\n    Checking volatile v0.4.6\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n    Checking x86_64 v0.14.12\n    Checking volatile v0.3.0\n    Checking spin v0.9.8\n    Checking rsdp v2.0.1\n    Checking futures-sink v0.3.30\n    Checking lazy_static v1.5.0\n    Checking byteorder v1.5.0\n    Checking bit v0.1.1\n    Checking futures-core v0.3.30\n    Checking managed v0.8.0\n   Compiling trapframe v0.9.0\n   Compiling x86 v0.46.0\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking acpi v4.1.1\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking x2apic v0.4.3\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking numeric-enum-macro v0.2.0\n    Checking futures-task v0.3.30\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking git-version v0.3.9\n    Checking futures-util v0.3.30\n    Checking futures-channel v0.3.30\n    Checking futures-io v0.3.30\n    Checking ahash v0.4.8\n    Checking uniset v0.2.0 (https://github.com/pleasewhy/uniset?rev=40edbd7506979daa1d49f935b568873a6a21c5c0#40edbd75)\n    Checking zero v0.1.3\n    Checking xmas-elf v0.7.0\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n    Checking unicycle v0.7.1 (https://github.com/pleasewhy/unicycle?rev=904f1c061d4784a5642e092d308cf523a9270c6e#904f1c06)\n    Checking hashbrown v0.9.1\n    Checking region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\n    Checking kernel-hal v0.1.0 (https://github.com/kern-crates/zcore-kernel-hal.git?rev=eae409f2#eae409f2)\n    Checking woke v0.0.2\n    Checking downcast-rs v1.2.1\n    Checking bit-iter v1.2.0\n   Compiling zcore v0.1.0 (/home/runner/check/batch_12/kern-crates/zCore)\n    Checking customizable-buddy v0.0.3\n    Checking executor v0.1.0 (https://github.com/DeathWish5/PreemptiveScheduler?rev=e8cd353#e8cd3531)\nerror: could not compile `kernel-hal` due to 16 previous errors\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=zcore, checker=Clippy\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-uefi\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zCore\n// cmd=cargo clippy --target x86_64-unknown-uefi --no-deps --message-format=json\n Downloading crates ...\n  Downloaded bit_field v0.10.2\n  Downloaded futures-io v0.3.30\n  Downloaded futures-sink v0.3.30\n  Downloaded pin-utils v0.1.0\n  Downloaded numeric-enum-macro v0.2.0\n  Downloaded hashbrown v0.9.1\n  Downloaded woke v0.0.2\n  Downloaded autocfg v1.3.0\n  Downloaded quote v1.0.36\n  Downloaded managed v0.8.0\n  Downloaded unicode-ident v1.0.12\n  Downloaded futures-util v0.3.30\n  Downloaded customizable-buddy v0.0.3\n  Downloaded rsdp v2.0.1\n  Downloaded bitflags v2.6.0\n  Downloaded spin v0.9.8\n  Downloaded xmas-elf v0.7.0\n  Downloaded futures-channel v0.3.30\n  Downloaded git-version-macro v0.3.9\n  Downloaded bit-iter v1.2.0\n  Downloaded bit v0.1.1\n  Downloaded git-version v0.3.9\n  Downloaded zero v0.1.3\n  Downloaded volatile v0.4.6\n  Downloaded rustversion v1.0.17\n  Downloaded trapframe v0.9.0\n  Downloaded x2apic v0.4.3\n  Downloaded scopeguard v1.2.0\n  Downloaded paste v1.0.15\n  Downloaded futures-task v0.3.30\n  Downloaded volatile v0.3.0\n  Downloaded cfg-if v1.0.0\n  Downloaded downcast-rs v1.2.1\n  Downloaded bitflags v1.3.2\n  Downloaded futures-macro v0.3.30\n  Downloaded futures-core v0.3.30\n  Downloaded byteorder v1.5.0\n  Downloaded acpi v4.1.1\n  Downloaded lock_api v0.4.12\n  Downloaded pin-project-lite v0.2.14\n  Downloaded lazy_static v1.5.0\n  Downloaded ahash v0.4.8\n  Downloaded futures v0.3.30\n  Downloaded proc-macro2 v1.0.86\n  Downloaded x86_64 v0.14.12\n  Downloaded raw-cpuid v10.7.0\n  Downloaded syn v2.0.68\n  Downloaded x86 v0.46.0\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n   Compiling autocfg v1.3.0\nerror: could not compile `bitflags` due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `bit_field` due to 16 previous errors\n","// pkg_name=zcore, checker=Clippy\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zCore\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling lock_api v0.4.12\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.12\n    Checking log v0.4.21\n   Compiling rustversion v1.0.17\n    Checking scopeguard v1.2.0\n    Checking raw-cpuid v10.7.0\n    Checking volatile v0.4.6\n   Compiling quote v1.0.36\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.68\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n    Checking volatile v0.3.0\n    Checking cfg-if v1.0.0\n    Checking lazy_static v1.5.0\n    Checking rsdp v2.0.1\n    Checking managed v0.8.0\n    Checking x86_64 v0.14.12\n    Checking byteorder v1.5.0\n   Compiling trapframe v0.9.0\n    Checking futures-sink v0.3.30\n   Compiling x86 v0.46.0\n    Checking bit v0.1.1\n    Checking futures-core v0.3.30\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking acpi v4.1.1\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking x2apic v0.4.3\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n    Checking futures-task v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking pin-utils v0.1.0\n    Checking numeric-enum-macro v0.2.0\n    Checking futures-channel v0.3.30\n    Checking ahash v0.4.8\n    Checking uniset v0.2.0 (https://github.com/pleasewhy/uniset?rev=40edbd7506979daa1d49f935b568873a6a21c5c0#40edbd75)\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n    Checking futures-io v0.3.30\n    Checking zero v0.1.3\n    Checking xmas-elf v0.7.0\n    Checking unicycle v0.7.1 (https://github.com/pleasewhy/unicycle?rev=904f1c061d4784a5642e092d308cf523a9270c6e#904f1c06)\n    Checking hashbrown v0.9.1\n    Checking downcast-rs v1.2.1\n    Checking region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\n    Checking bit-iter v1.2.0\n    Checking woke v0.0.2\n   Compiling zcore v0.1.0 (/home/runner/check/batch_12/kern-crates/zCore)\n    Checking customizable-buddy v0.0.3\n    Checking executor v0.1.0 (https://github.com/DeathWish5/PreemptiveScheduler?rev=e8cd353#e8cd3531)\n   Compiling git-version-macro v0.3.9\n   Compiling futures-macro v0.3.30\n    Checking git-version v0.3.9\n    Checking kernel-hal v0.1.0 (https://github.com/kern-crates/zcore-kernel-hal.git?rev=eae409f2#eae409f2)\n    Checking futures-util v0.3.30\nerror: could not compile `kernel-hal` due to 16 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":3,"kinds":{"Cargo":["// pkg_name=zcore, checker=Lockbud\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-uefi\n// pkg_dir=/home/runner/check/batch_8/kern-crates/zCore\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-uefi\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling log v0.4.21\n   Compiling lock_api v0.4.12\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `x86_64-unknown-uefi` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-uefi`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bit_field` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n","// pkg_name=zcore, checker=Lockbud\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_8/kern-crates/zCore\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n   Compiling autocfg v1.3.0\n   Compiling unicode-ident v1.0.12\n   Compiling rustversion v1.0.17\n   Compiling log v0.4.21\n[2024-11-22T11:46:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:46:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling scopeguard v1.2.0\n   Compiling raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling quote v1.0.36\n   Compiling volatile v0.4.6\n   Compiling bitflags v2.6.0\n   Compiling syn v2.0.68\n   Compiling spin v0.9.8\n   Compiling x86_64 v0.14.12\n   Compiling paste v1.0.15\n   Compiling cfg-if v1.0.0\n   Compiling volatile v0.3.0\n   Compiling lazy_static v1.5.0\n   Compiling rsdp v2.0.1\n   Compiling futures-sink v0.3.30\n   Compiling bit v0.1.1\n   Compiling trapframe v0.9.0\n   Compiling x86 v0.46.0\n   Compiling futures-core v0.3.30\n   Compiling managed v0.8.0\n   Compiling byteorder v1.5.0\n   Compiling smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n   Compiling acpi v4.1.1\n   Compiling lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n   Compiling x2apic v0.4.3\n   Compiling isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n   Compiling virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n   Compiling pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n   Compiling futures-task v0.3.30\n   Compiling device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n   Compiling numeric-enum-macro v0.2.0\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling futures-channel v0.3.30\n   Compiling ahash v0.4.8\n   Compiling uniset v0.2.0 (https://github.com/pleasewhy/uniset?rev=40edbd7506979daa1d49f935b568873a6a21c5c0#40edbd75)\n   Compiling zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n   Compiling zero v0.1.3\n   Compiling futures-io v0.3.30\n   Compiling xmas-elf v0.7.0\n   Compiling unicycle v0.7.1 (https://github.com/pleasewhy/unicycle?rev=904f1c061d4784a5642e092d308cf523a9270c6e#904f1c06)\n   Compiling hashbrown v0.9.1\n   Compiling region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\nerror[E0635]: unknown feature `btree_drain_filter`\n --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:2:12\n  |\n2 | #![feature(btree_drain_filter)]\n  |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `drain_filter` found for struct `alloc::collections::BTreeSet` in the current scope\n   --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:120:14\n    |\n119 | /         self.regions\n120 | |             .drain_filter(|r| {\n    | |             -^^^^^^^^^^^^ method not found in `BTreeSet<Region>`\n    | |_____________|\n    |\n\nSome errors have detailed explanations: E0599, E0635.\nFor more information about an error, try `rustc --explain E0599`.\nerror: could not compile `region-alloc` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=zcore, checker=Lockbud\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-musl\n// pkg_dir=/home/runner/check/batch_8/kern-crates/zCore\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-musl\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling log v0.4.21\n   Compiling lock_api v0.4.12\n   Compiling scopeguard v1.2.0\n   Compiling raw-cpuid v10.7.0\n   Compiling volatile v0.4.6\n[2024-11-22T11:46:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:46:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bitflags v2.6.0\n   Compiling volatile v0.3.0\n   Compiling cfg-if v1.0.0\n   Compiling rsdp v2.0.1\n   Compiling x86_64 v0.14.12\n   Compiling spin v0.9.8\n   Compiling byteorder v1.5.0\n   Compiling lazy_static v1.5.0\n   Compiling futures-sink v0.3.30\n   Compiling managed v0.8.0\n   Compiling futures-core v0.3.30\n   Compiling bit v0.1.1\n   Compiling trapframe v0.9.0\n   Compiling smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n   Compiling isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n   Compiling x86 v0.46.0\n   Compiling acpi v4.1.1\n   Compiling virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n   Compiling git-version-macro v0.3.9\n   Compiling lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n   Compiling x2apic v0.4.3\n   Compiling futures-macro v0.3.30\n   Compiling pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n   Compiling futures-task v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n   Compiling numeric-enum-macro v0.2.0\n   Compiling pin-project-lite v0.2.14\n   Compiling git-version v0.3.9\n   Compiling zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n   Compiling futures-util v0.3.30\n   Compiling futures-channel v0.3.30\n   Compiling zero v0.1.3\n   Compiling uniset v0.2.0 (https://github.com/pleasewhy/uniset?rev=40edbd7506979daa1d49f935b568873a6a21c5c0#40edbd75)\n   Compiling futures-io v0.3.30\n   Compiling ahash v0.4.8\n   Compiling unicycle v0.7.1 (https://github.com/pleasewhy/unicycle?rev=904f1c061d4784a5642e092d308cf523a9270c6e#904f1c06)\n   Compiling xmas-elf v0.7.0\n   Compiling hashbrown v0.9.1\n   Compiling kernel-hal v0.1.0 (https://github.com/kern-crates/zcore-kernel-hal.git?rev=eae409f2#eae409f2)\nerror[E0433]: failed to resolve: use of undeclared crate or module `x2apic`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/drivers.rs:36:9\n   |\n36 |     use x2apic::lapic::{TimerDivide, TimerMode};\n   |         ^^^^^^ use of undeclared crate or module `x2apic`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `uefi`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/config.rs:3:5\n  |\n3 | use uefi::proto::console::gop::ModeInfo;\n  |     ^^^^ use of undeclared crate or module `uefi`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `uefi`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/config.rs:4:5\n  |\n4 | use uefi::table::boot::MemoryDescriptor;\n  |     ^^^^ use of undeclared crate or module `uefi`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `uefi`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mem.rs:5:5\n  |\n5 | use uefi::table::boot::MemoryType;\n  |     ^^^^ use of undeclared crate or module `uefi`\n\nerror[E0432]: unresolved import `trapframe::TrapFrame`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/trap.rs:2:5\n  |\n2 | use trapframe::TrapFrame;\n  |     ^^^^^^^^^^^^^^^^^^^^ no `TrapFrame` in the root\n\nerror[E0432]: unresolved import `naive_timer`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs:7:5\n  |\n7 | use naive_timer::Timer;\n  |     ^^^^^^^^^^^ use of undeclared crate or module `naive_timer`\n\nerror[E0432]: unresolved import `raw_cpuid`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/cpu.rs:3:5\n  |\n3 | use raw_cpuid::CpuId;\n  |     ^^^^^^^^^ use of undeclared crate or module `raw_cpuid`\n\nerror[E0425]: cannot find function `init` in crate `trapframe`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/boot.rs:24:33\n   |\n24 |             unsafe { trapframe::init() };\n   |                                 ^^^^ not found in `trapframe`\n   |\nhelp: consider importing one of these functions\n   |\n3  + use crate::imp::arch::timer::init;\n   |\n3  + use crate::net::init;\n   |\n3  + use zcore_drivers::bus::pci::init;\n   |\n3  + use zcore_drivers::net::e1000::init;\n   |\nhelp: if you import `init`, refer to it directly\n   |\n24 -             unsafe { trapframe::init() };\n24 +             unsafe { init() };\n   |\n\nerror[E0425]: cannot find function `init` in crate `trapframe`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/boot.rs:31:33\n   |\n31 |             unsafe { trapframe::init() };\n   |                                 ^^^^ not found in `trapframe`\n   |\nhelp: consider importing one of these functions\n   |\n3  + use crate::imp::arch::timer::init;\n   |\n3  + use crate::net::init;\n   |\n3  + use zcore_drivers::bus::pci::init;\n   |\n3  + use zcore_drivers::net::e1000::init;\n   |\nhelp: if you import `init`, refer to it directly\n   |\n31 -             unsafe { trapframe::init() };\n31 +             unsafe { init() };\n   |\n\nerror[E0599]: no method named `run` found for struct `trapframe::UserContext` in the current scope\n   --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/common/context.rs:232:24\n    |\n232 |                 self.0.run()\n    |                        ^^^ method not found in `UserContext`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `executor`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/trap.rs:41:17\n   |\n41 |                 executor::handle_timeout();\n   |                 ^^^^^^^^ use of undeclared crate or module `executor`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `x86_smpboot`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mod.rs:51:9\n   |\n51 |         x86_smpboot::start_application_processors(\n   |         ^^^^^^^^^^^ use of undeclared crate or module `x86_smpboot`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `executor`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/thread.rs:17:13\n   |\n17 |             executor::spawn(future);\n   |             ^^^^^^^^ use of undeclared crate or module `executor`\n\n   Compiling woke v0.0.2\nerror[E0599]: no method named `lock` found for struct `imp::timer::NAIVE_TIMER` in the current scope\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs:28:25\n   |\n12 | / lazy_static::lazy_static! {\n13 | |     static ref NAIVE_TIMER:Mutex<Timer> = Mutex::new(Timer::default());\n14 | | }\n   | |_- method `lock` not found for this struct\n...\n28 |               NAIVE_TIMER.lock().add(deadline, callback);\n   |                           ^^^^ method not found in `NAIVE_TIMER`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `lock`, perhaps you need to implement it:\n           candidate #1: `lock_api::mutex::RawMutex`\n\nerror[E0599]: no method named `lock` found for struct `imp::timer::NAIVE_TIMER` in the current scope\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs:32:25\n   |\n12 | / lazy_static::lazy_static! {\n13 | |     static ref NAIVE_TIMER:Mutex<Timer> = Mutex::new(Timer::default());\n14 | | }\n   | |_- method `lock` not found for this struct\n...\n32 |               NAIVE_TIMER.lock().expire(timer_now());\n   |                           ^^^^ method not found in `NAIVE_TIMER`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `lock`, perhaps you need to implement it:\n           candidate #1: `lock_api::mutex::RawMutex`\n\n   Compiling downcast-rs v1.2.1\n   Compiling bit-iter v1.2.0\n   Compiling region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\nerror[E0635]: unknown feature `btree_drain_filter`\n --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:2:12\n  |\n2 | #![feature(btree_drain_filter)]\n  |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `drain_filter` found for struct `alloc::collections::BTreeSet` in the current scope\n   --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:120:14\n    |\n119 | /         self.regions\n120 | |             .drain_filter(|r| {\n    | |             -^^^^^^^^^^^^ method not found in `BTreeSet<Region>`\n    | |_____________|\n    |\n\nSome errors have detailed explanations: E0599, E0635.\nFor more information about an error, try `rustc --explain E0599`.\nerror: could not compile `region-alloc` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nSome errors have detailed explanations: E0425, E0432, E0433, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `kernel-hal` (lib) due to 15 previous errors\n"]}},{"file":"Cargo.lock","count":3,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 664 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (224 crate dependencies)\nCrate:     critical-section\nVersion:   1.1.2\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.2\n└── riscv 0.10.1\n    ├── zcore-drivers 0.1.0\n    │   ├── linux-object 0.1.0\n    │   │   ├── zcore-loader 0.1.0\n    │   │   │   └── zcore 0.1.0\n    │   │   ├── zcore 0.1.0\n    │   │   └── linux-syscall 0.1.0\n    │   │       └── zcore-loader 0.1.0\n    │   └── kernel-hal 0.1.0\n    │       ├── zircon-syscall 0.1.0\n    │       │   └── zcore-loader 0.1.0\n    │       ├── zircon-object 0.1.0\n    │       │   ├── zircon-syscall 0.1.0\n    │       │   ├── zcore-loader 0.1.0\n    │       │   ├── zcore 0.1.0\n    │       │   ├── linux-syscall 0.1.0\n    │       │   └── linux-object 0.1.0\n    │       ├── zcore-loader 0.1.0\n    │       ├── zcore 0.1.0\n    │       ├── linux-syscall 0.1.0\n    │       └── linux-object 0.1.0\n    ├── zcore 0.1.0\n    └── kernel-hal 0.1.0\n\nCrate:     futures-util\nVersion:   0.3.30\nWarning:   yanked\nDependency tree:\nfutures-util 0.3.30\n└── futures 0.3.30\n    ├── zircon-syscall 0.1.0\n    │   └── zcore-loader 0.1.0\n    │       └── zcore 0.1.0\n    ├── zircon-object 0.1.0\n    │   ├── zircon-syscall 0.1.0\n    │   ├── zcore-loader 0.1.0\n    │   ├── zcore 0.1.0\n    │   ├── linux-syscall 0.1.0\n    │   │   └── zcore-loader 0.1.0\n    │   └── linux-object 0.1.0\n    │       ├── zcore-loader 0.1.0\n    │       ├── zcore 0.1.0\n    │       └── linux-syscall 0.1.0\n    └── linux-syscall 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 664,\n    \"last-commit\": \"f3460e5ed91658ab94fa41908cfa44991f9f4f02\",\n    \"last-updated\": \"2024-11-01T08:31:51-04:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 224\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.2\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"7059fff8937831a9ae6f0fe4d658ffabf58f2ca96aa9dec1c889f936f705f216\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      },\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"futures-util\",\n          \"version\": \"0.3.30\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48\",\n          \"dependencies\": [\n            {\n              \"name\": \"futures-core\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-macro\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-sink\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-task\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-project-lite\",\n              \"version\": \"0.2.14\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-utils\",\n              \"version\": \"0.1.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}","    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 664 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (224 crate dependencies)\nCrate:     critical-section\nVersion:   1.1.2\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.2\n└── riscv 0.10.1\n    ├── zcore-drivers 0.1.0\n    │   ├── linux-object 0.1.0\n    │   │   ├── zcore-loader 0.1.0\n    │   │   │   └── zcore 0.1.0\n    │   │   ├── zcore 0.1.0\n    │   │   └── linux-syscall 0.1.0\n    │   │       └── zcore-loader 0.1.0\n    │   └── kernel-hal 0.1.0\n    │       ├── zircon-syscall 0.1.0\n    │       │   └── zcore-loader 0.1.0\n    │       ├── zircon-object 0.1.0\n    │       │   ├── zircon-syscall 0.1.0\n    │       │   ├── zcore-loader 0.1.0\n    │       │   ├── zcore 0.1.0\n    │       │   ├── linux-syscall 0.1.0\n    │       │   └── linux-object 0.1.0\n    │       ├── zcore-loader 0.1.0\n    │       ├── zcore 0.1.0\n    │       ├── linux-syscall 0.1.0\n    │       └── linux-object 0.1.0\n    ├── zcore 0.1.0\n    └── kernel-hal 0.1.0\n\nCrate:     futures-util\nVersion:   0.3.30\nWarning:   yanked\nDependency tree:\nfutures-util 0.3.30\n└── futures 0.3.30\n    ├── zircon-syscall 0.1.0\n    │   └── zcore-loader 0.1.0\n    │       └── zcore 0.1.0\n    ├── zircon-object 0.1.0\n    │   ├── zircon-syscall 0.1.0\n    │   ├── zcore-loader 0.1.0\n    │   ├── zcore 0.1.0\n    │   ├── linux-syscall 0.1.0\n    │   │   └── zcore-loader 0.1.0\n    │   └── linux-object 0.1.0\n    │       ├── zcore-loader 0.1.0\n    │       ├── zcore 0.1.0\n    │       └── linux-syscall 0.1.0\n    └── linux-syscall 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 664,\n    \"last-commit\": \"f3460e5ed91658ab94fa41908cfa44991f9f4f02\",\n    \"last-updated\": \"2024-11-01T08:31:51-04:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 224\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.2\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"7059fff8937831a9ae6f0fe4d658ffabf58f2ca96aa9dec1c889f936f705f216\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      },\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"futures-util\",\n          \"version\": \"0.3.30\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48\",\n          \"dependencies\": [\n            {\n              \"name\": \"futures-core\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-macro\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-sink\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-task\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-project-lite\",\n              \"version\": \"0.2.14\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-utils\",\n              \"version\": \"0.1.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}","    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 664 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (224 crate dependencies)\nCrate:     critical-section\nVersion:   1.1.2\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.2\n└── riscv 0.10.1\n    ├── zcore-drivers 0.1.0\n    │   ├── linux-object 0.1.0\n    │   │   ├── zcore-loader 0.1.0\n    │   │   │   └── zcore 0.1.0\n    │   │   ├── zcore 0.1.0\n    │   │   └── linux-syscall 0.1.0\n    │   │       └── zcore-loader 0.1.0\n    │   └── kernel-hal 0.1.0\n    │       ├── zircon-syscall 0.1.0\n    │       │   └── zcore-loader 0.1.0\n    │       ├── zircon-object 0.1.0\n    │       │   ├── zircon-syscall 0.1.0\n    │       │   ├── zcore-loader 0.1.0\n    │       │   ├── zcore 0.1.0\n    │       │   ├── linux-syscall 0.1.0\n    │       │   └── linux-object 0.1.0\n    │       ├── zcore-loader 0.1.0\n    │       ├── zcore 0.1.0\n    │       ├── linux-syscall 0.1.0\n    │       └── linux-object 0.1.0\n    ├── zcore 0.1.0\n    └── kernel-hal 0.1.0\n\nCrate:     futures-util\nVersion:   0.3.30\nWarning:   yanked\nDependency tree:\nfutures-util 0.3.30\n└── futures 0.3.30\n    ├── zircon-syscall 0.1.0\n    │   └── zcore-loader 0.1.0\n    │       └── zcore 0.1.0\n    ├── zircon-object 0.1.0\n    │   ├── zircon-syscall 0.1.0\n    │   ├── zcore-loader 0.1.0\n    │   ├── zcore 0.1.0\n    │   ├── linux-syscall 0.1.0\n    │   │   └── zcore-loader 0.1.0\n    │   └── linux-object 0.1.0\n    │       ├── zcore-loader 0.1.0\n    │       ├── zcore 0.1.0\n    │       └── linux-syscall 0.1.0\n    └── linux-syscall 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 664,\n    \"last-commit\": \"f3460e5ed91658ab94fa41908cfa44991f9f4f02\",\n    \"last-updated\": \"2024-11-01T08:31:51-04:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 224\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.2\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"7059fff8937831a9ae6f0fe4d658ffabf58f2ca96aa9dec1c889f936f705f216\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      },\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"futures-util\",\n          \"version\": \"0.3.30\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48\",\n          \"dependencies\": [\n            {\n              \"name\": \"futures-core\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-macro\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-sink\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-task\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-project-lite\",\n              \"version\": \"0.2.14\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-utils\",\n              \"version\": \"0.1.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"[outdated direct dependencies]","count":3,"kinds":{"Outdated":["pkg=zcore, checker=Outdated\ntoolchain=nightly-2022-10-27, target=x86_64-unknown-uefi\npkg_dir=/home/runner/check/batch_9/kern-crates/zCore\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName                    Project  Compat  Latest  Kind    Platform\n----                    -------  ------  ------  ----    --------\nasync-std               1.12.0   1.13.0  1.13.0  Normal  cfg(not(target_os = \"none\"))\nbuddy_system_allocator  0.8.0    ---     0.11.0  Normal  cfg(all(target_os = \"none\", target_arch = \"x86_64\"))\nlog                     0.4.21   0.4.22  0.4.22  Normal  ---\nriscv                   0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsbi-rt                  0.0.2    ---     0.0.3   Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\n","pkg=zcore, checker=Outdated\ntoolchain=nightly-2022-10-27, target=x86_64-unknown-linux-musl\npkg_dir=/home/runner/check/batch_9/kern-crates/zCore\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName                    Project  Compat  Latest  Kind    Platform\n----                    -------  ------  ------  ----    --------\nasync-std               1.12.0   1.13.0  1.13.0  Normal  cfg(not(target_os = \"none\"))\nbuddy_system_allocator  0.8.0    ---     0.11.0  Normal  cfg(all(target_os = \"none\", target_arch = \"x86_64\"))\nlog                     0.4.21   0.4.22  0.4.22  Normal  ---\nriscv                   0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsbi-rt                  0.0.2    ---     0.0.3   Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\n","pkg=zcore, checker=Outdated\ntoolchain=nightly-2022-10-27, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_9/kern-crates/zCore\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName                    Project  Compat  Latest  Kind    Platform\n----                    -------  ------  ------  ----    --------\nasync-std               1.12.0   1.13.0  1.13.0  Normal  cfg(not(target_os = \"none\"))\nbuddy_system_allocator  0.8.0    ---     0.11.0  Normal  cfg(all(target_os = \"none\", target_arch = \"x86_64\"))\nlog                     0.4.21   0.4.22  0.4.22  Normal  ---\nriscv                   0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsbi-rt                  0.0.2    ---     0.0.3   Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\n"]}},{"file":"/home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs","count":2,"kinds":{"Mirai":["error[E0635]: unknown feature `btree_drain_filter`\n --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:2:12\n  |\n2 | #![feature(btree_drain_filter)]\n  |            ^^^^^^^^^^^^^^^^^^\n\n","error[E0599]: no method named `drain_filter` found for struct `BTreeSet` in the current scope\n   --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:120:14\n    |\n119 | /         self.regions\n120 | |             .drain_filter(|r| {\n    | |             -^^^^^^^^^^^^ method not found in `BTreeSet<Region>`\n    | |_____________|\n    | \n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/cpu.rs","count":2,"kinds":{"Clippy(Error)":["error[E0432]: unresolved import `raw_cpuid`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/cpu.rs:3:5\n  |\n3 | use raw_cpuid::CpuId;\n  |     ^^^^^^^^^ use of undeclared crate or module `raw_cpuid`\n\n","error[E0432]: unresolved import `raw_cpuid`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/cpu.rs:3:5\n  |\n3 | use raw_cpuid::CpuId;\n  |     ^^^^^^^^^ use of undeclared crate or module `raw_cpuid`\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/drivers.rs","count":2,"kinds":{"Clippy(Error)":["error[E0433]: failed to resolve: use of undeclared crate or module `x2apic`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/drivers.rs:36:9\n   |\n36 |     use x2apic::lapic::{TimerDivide, TimerMode};\n   |         ^^^^^^ use of undeclared crate or module `x2apic`\n\n","error[E0433]: failed to resolve: use of undeclared crate or module `x2apic`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/drivers.rs:36:9\n   |\n36 |     use x2apic::lapic::{TimerDivide, TimerMode};\n   |         ^^^^^^ use of undeclared crate or module `x2apic`\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mem.rs","count":2,"kinds":{"Clippy(Error)":["error[E0433]: failed to resolve: use of undeclared crate or module `uefi`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mem.rs:5:5\n  |\n5 | use uefi::table::boot::MemoryType;\n  |     ^^^^ use of undeclared crate or module `uefi`\n\n","error[E0433]: failed to resolve: use of undeclared crate or module `uefi`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mem.rs:5:5\n  |\n5 | use uefi::table::boot::MemoryType;\n  |     ^^^^ use of undeclared crate or module `uefi`\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mod.rs","count":2,"kinds":{"Clippy(Error)":["error[E0433]: failed to resolve: use of undeclared crate or module `x86_smpboot`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mod.rs:51:9\n   |\n51 |         x86_smpboot::start_application_processors(\n   |         ^^^^^^^^^^^ use of undeclared crate or module `x86_smpboot`\n\n","error[E0433]: failed to resolve: use of undeclared crate or module `x86_smpboot`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mod.rs:51:9\n   |\n51 |         x86_smpboot::start_application_processors(\n   |         ^^^^^^^^^^^ use of undeclared crate or module `x86_smpboot`\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/thread.rs","count":2,"kinds":{"Clippy(Error)":["error[E0433]: failed to resolve: use of undeclared crate or module `executor`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/thread.rs:17:13\n   |\n17 |             executor::spawn(future);\n   |             ^^^^^^^^ use of undeclared crate or module `executor`\n\n","error[E0433]: failed to resolve: use of undeclared crate or module `executor`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/thread.rs:17:13\n   |\n17 |             executor::spawn(future);\n   |             ^^^^^^^^ use of undeclared crate or module `executor`\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/common/context.rs","count":2,"kinds":{"Clippy(Error)":["error[E0599]: no method named `run` found for struct `trapframe::UserContext` in the current scope\n   --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/common/context.rs:232:24\n    |\n232 |                 self.0.run()\n    |                        ^^^ method not found in `trapframe::UserContext`\n\n","error[E0599]: no method named `run` found for struct `trapframe::UserContext` in the current scope\n   --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/common/context.rs:232:24\n    |\n232 |                 self.0.run()\n    |                        ^^^ method not found in `trapframe::UserContext`\n\n"]}},{"file":"[lockbud] Not supported to display yet.","count":2,"kinds":{"Lockbud(Possibly)":["[2024-11-22T11:46:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:46:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-11-22T11:46:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:46:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"(virtual) geiger","count":1,"kinds":{"Cargo":["// pkg_name=zcore, checker=Geiger\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/zCore\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu geiger --output-format Ascii\n     Removed 0 files\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n   Compiling autocfg v1.3.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/bitflags-17eaae058c49a1b8.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/build/proc-macro2-2e4f8e2b99a9092e/build_script_build-2e4f8e2b99a9092e.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libbitflags-17eaae058c49a1b8.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/bit_field-61ca02e954e6235d.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/autocfg-0a6d62afcf720594.d\",\"emit\":\"dep-info\"}\n   Compiling rustversion v1.0.17\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/build/rustversion-b2cc760a58479d11/build_script_build-b2cc760a58479d11.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libbit_field-61ca02e954e6235d.rmeta\",\"emit\":\"metadata\"}\n   Compiling unicode-ident v1.0.12\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/unicode_ident-62f822500da935ba.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libautocfg-0a6d62afcf720594.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libunicode_ident-62f822500da935ba.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libunicode_ident-62f822500da935ba.rlib\",\"emit\":\"link\"}\n    Checking log v0.4.21\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/build/proc-macro2-2e4f8e2b99a9092e/build_script_build-2e4f8e2b99a9092e\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/log-20087c0c0cd98a51.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/build/rustversion-b2cc760a58479d11/build_script_build-b2cc760a58479d11\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/liblog-20087c0c0cd98a51.rmeta\",\"emit\":\"metadata\"}\n    Checking scopeguard v1.2.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/scopeguard-bed2286efe7a4a8c.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libscopeguard-bed2286efe7a4a8c.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/rustversion-9ba2f79cde08ba1a.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/proc_macro2-9ec0c4ac1cf91437.d\",\"emit\":\"dep-info\"}\n    Checking raw-cpuid v10.7.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libautocfg-0a6d62afcf720594.rlib\",\"emit\":\"link\"}\n   Compiling lock_api v0.4.12\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/build/lock_api-2377125df40c6b41/build_script_build-2377125df40c6b41.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/build/lock_api-2377125df40c6b41/build_script_build-2377125df40c6b41\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/raw_cpuid-34e71311cc015f78.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/lock_api-8f2dced78cd037e4.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libproc_macro2-9ec0c4ac1cf91437.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/liblock_api-8f2dced78cd037e4.rmeta\",\"emit\":\"metadata\"}\n    Checking volatile v0.4.6\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/volatile-d336caeb5066eab2.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libvolatile-d336caeb5066eab2.rmeta\",\"emit\":\"metadata\"}\n    Checking bitflags v2.6.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/bitflags-134e726d290f914f.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/librustversion-9ba2f79cde08ba1a.so\",\"emit\":\"link\"}\n    Checking spin v0.9.8\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/spin-0b4f1511ea2ddc43.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libbitflags-134e726d290f914f.rmeta\",\"emit\":\"metadata\"}\n    Checking x86_64 v0.14.12\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libspin-0b4f1511ea2ddc43.rmeta\",\"emit\":\"metadata\"}\n   Compiling paste v1.0.15\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libproc_macro2-9ec0c4ac1cf91437.rlib\",\"emit\":\"link\"}\n   Compiling quote v1.0.36\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/build/paste-77d3fa96bc928172/build_script_build-77d3fa96bc928172.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/quote-499255dbadc8642f.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/x86_64-eab401ad914894fc.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/build/paste-77d3fa96bc928172/build_script_build-77d3fa96bc928172\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libquote-499255dbadc8642f.rmeta\",\"emit\":\"metadata\"}\n    Checking cfg-if v1.0.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/cfg_if-d488aff7a2e4faf1.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libcfg_if-d488aff7a2e4faf1.rmeta\",\"emit\":\"metadata\"}\n    Checking volatile v0.3.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/volatile-0563b9eb9b34ee1c.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libvolatile-0563b9eb9b34ee1c.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libquote-499255dbadc8642f.rlib\",\"emit\":\"link\"}\n   Compiling syn v2.0.68\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/paste-7e324243a80a0071.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libraw_cpuid-34e71311cc015f78.rmeta\",\"emit\":\"metadata\"}\n    Checking lazy_static v1.5.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/lazy_static-4da8af1bdcaa97aa.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/liblazy_static-4da8af1bdcaa97aa.rmeta\",\"emit\":\"metadata\"}\n    Checking rsdp v2.0.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/rsdp-08914f85139c2e85.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/librsdp-08914f85139c2e85.rmeta\",\"emit\":\"metadata\"}\n   Compiling x86 v0.46.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/build/x86-f08596b473cf0d4f/build_script_build-f08596b473cf0d4f.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/build/x86-f08596b473cf0d4f/build_script_build-f08596b473cf0d4f\",\"emit\":\"link\"}\n   Compiling trapframe v0.9.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/syn-60a893961c6399fe.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/build/trapframe-17f1f8fe6dcb8d9c/build_script_build-17f1f8fe6dcb8d9c.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libpaste-7e324243a80a0071.so\",\"emit\":\"link\"}\n    Checking bit v0.1.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/build/trapframe-17f1f8fe6dcb8d9c/build_script_build-17f1f8fe6dcb8d9c\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/bit-e5570165c5157381.d\",\"emit\":\"dep-info\"}\n    Checking futures-core v0.3.30\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libbit-e5570165c5157381.rmeta\",\"emit\":\"metadata\"}\n    Checking managed v0.8.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/futures_core-7228aa8c1a1e2060.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libfutures_core-7228aa8c1a1e2060.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/managed-9d464f084413da2f.d\",\"emit\":\"dep-info\"}\n    Checking byteorder v1.5.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/byteorder-56694e6c7dc71c55.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libmanaged-9d464f084413da2f.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libbyteorder-56694e6c7dc71c55.rmeta\",\"emit\":\"metadata\"}\n    Checking futures-sink v0.3.30\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/futures_sink-ac1630ec1bea86f0.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libfutures_sink-ac1630ec1bea86f0.rmeta\",\"emit\":\"metadata\"}\n    Checking acpi v4.1.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/acpi-6557f5f2af567e1d.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libx86_64-eab401ad914894fc.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/smoltcp-f0f108892ca98294.d\",\"emit\":\"dep-info\"}\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/lock-3912bc5e9889e147.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/liblock-3912bc5e9889e147.rmeta\",\"emit\":\"metadata\"}\n    Checking x2apic v0.4.3\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libacpi-6557f5f2af567e1d.rmeta\",\"emit\":\"metadata\"}\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/x2apic-44676b899f19b3ee.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/isomorphic_drivers-b703933e41c220ef.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libx2apic-44676b899f19b3ee.rmeta\",\"emit\":\"metadata\"}\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/virtio_drivers-451f51969ca0977f.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libisomorphic_drivers-b703933e41c220ef.rmeta\",\"emit\":\"metadata\"}\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/pci-d7464b4ae7d994f7.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libpci-d7464b4ae7d994f7.rmeta\",\"emit\":\"metadata\"}\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/bitmap_allocator-19eb6a18d77e4ea9.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libbitmap_allocator-19eb6a18d77e4ea9.rmeta\",\"emit\":\"metadata\"}\n    Checking pin-utils v0.1.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libvirtio_drivers-451f51969ca0977f.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/pin_utils-1c7de171da91051c.d\",\"emit\":\"dep-info\"}\n    Checking futures-task v0.3.30\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libpin_utils-1c7de171da91051c.rmeta\",\"emit\":\"metadata\"}\n    Checking pin-project-lite v0.2.14\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/pin_project_lite-b0c78d6afffeb1cc.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/futures_task-389e0b22dce98f7c.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libpin_project_lite-b0c78d6afffeb1cc.rmeta\",\"emit\":\"metadata\"}\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/device_tree-452eff093f686b9c.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libfutures_task-389e0b22dce98f7c.rmeta\",\"emit\":\"metadata\"}\n    Checking numeric-enum-macro v0.2.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/numeric_enum_macro-9dc1515b6f4d17cb.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libnumeric_enum_macro-9dc1515b6f4d17cb.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/trapframe-101d5ba7b181f12e.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libdevice_tree-452eff093f686b9c.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libtrapframe-101d5ba7b181f12e.rmeta\",\"emit\":\"metadata\"}\n    Checking futures-channel v0.3.30\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/futures_channel-6b2a7a70676af733.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libfutures_channel-6b2a7a70676af733.rmeta\",\"emit\":\"metadata\"}\n    Checking ahash v0.4.8\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/ahash-e2a67a937af55283.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/x86-b67dac7b537997a3.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libahash-e2a67a937af55283.rmeta\",\"emit\":\"metadata\"}\n    Checking uniset v0.2.0 (https://github.com/pleasewhy/uniset?rev=40edbd7506979daa1d49f935b568873a6a21c5c0#40edbd75)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/uniset-f3be98e707735fa1.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libuniset-f3be98e707735fa1.rmeta\",\"emit\":\"metadata\"}\n    Checking zero v0.1.3\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/zero-02c81bc07f5be504.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libzero-02c81bc07f5be504.rmeta\",\"emit\":\"metadata\"}\n    Checking futures-io v0.3.30\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/futures_io-187f5b44b85648f6.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libfutures_io-187f5b44b85648f6.rmeta\",\"emit\":\"metadata\"}\n    Checking xmas-elf v0.7.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/xmas_elf-017bb0161f1b0332.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libsmoltcp-f0f108892ca98294.rmeta\",\"emit\":\"metadata\"}\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libxmas_elf-017bb0161f1b0332.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/zcore_drivers-45f17389bfd229a8.d\",\"emit\":\"dep-info\"}\n    Checking unicycle v0.7.1 (https://github.com/pleasewhy/unicycle?rev=904f1c061d4784a5642e092d308cf523a9270c6e#904f1c06)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/unicycle-605834519fbc8eb0.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libsyn-60a893961c6399fe.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libunicycle-605834519fbc8eb0.rmeta\",\"emit\":\"metadata\"}\n    Checking hashbrown v0.9.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/hashbrown-3be8462c0f44d3fc.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libhashbrown-3be8462c0f44d3fc.rmeta\",\"emit\":\"metadata\"}\n    Checking bit-iter v1.2.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libx86-b67dac7b537997a3.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/bit_iter-ba5ee0147425b8ee.d\",\"emit\":\"dep-info\"}\n    Checking woke v0.0.2\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libzcore_drivers-45f17389bfd229a8.rmeta\",\"emit\":\"metadata\"}\n    Checking downcast-rs v1.2.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/woke-c410f14222064302.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libwoke-c410f14222064302.rmeta\",\"emit\":\"metadata\"}\n    Checking region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/downcast_rs-63d11109cf0f44c5.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libdowncast_rs-63d11109cf0f44c5.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libbit_iter-ba5ee0147425b8ee.rmeta\",\"emit\":\"metadata\"}\n   Compiling zcore v0.1.0 (/home/runner/check/batch_9/kern-crates/zCore)\n    Checking executor v0.1.0 (https://github.com/DeathWish5/PreemptiveScheduler?rev=e8cd353#e8cd3531)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/region_alloc-720e4094f11f9a1b.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"unknown feature `btree_drain_filter`\",\"code\":{\"code\":\"E0635\",\"explanation\":\"The `#![feature]` attribute specified an unknown feature.\\n\\nErroneous code example:\\n\\n```compile_fail,E0635\\n#![feature(nonexistent_rust_feature)] // error: unknown feature\\n```\\n\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs\",\"byte_start\":22,\"byte_end\":40,\"line_start\":2,\"line_end\":2,\"column_start\":12,\"column_end\":30,\"is_primary\":true,\"text\":[{\"text\":\"#![feature(btree_drain_filter)]\",\"highlight_start\":12,\"highlight_end\":30}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror[E0635]\\u001b[0m\\u001b[0m\\u001b[1m: unknown feature `btree_drain_filter`\\u001b[0m\\n\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m/home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:2:12\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m2\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m#![feature(btree_drain_filter)]\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m            \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/build/zcore-11c6437e27c1da69/build_script_build-11c6437e27c1da69.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"feature has been removed\",\"code\":{\"code\":\"E0557\",\"explanation\":\"A feature attribute named a feature that has been removed.\\n\\nErroneous code example:\\n\\n```compile_fail,E0557\\n#![feature(managed_boxes)] // error: feature has been removed\\n```\\n\\nDelete the offending feature attribute.\\n\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/lib.rs\",\"byte_start\":80,\"byte_end\":90,\"line_start\":4,\"line_end\":4,\"column_start\":12,\"column_end\":22,\"is_primary\":true,\"text\":[{\"text\":\"#![feature(generators, generator_trait)]\",\"highlight_start\":12,\"highlight_end\":22}],\"label\":\"feature has been removed\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"renamed to `coroutines`\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror[E0557]\\u001b[0m\\u001b[0m\\u001b[1m: feature has been removed\\u001b[0m\\n\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m/home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/lib.rs:4:12\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m4\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m#![feature(generators, generator_trait)]\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m            \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mfeature has been removed\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: renamed to `coroutines`\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"no method named `drain_filter` found for struct `BTreeSet` in the current scope\",\"code\":{\"code\":\"E0599\",\"explanation\":\"This error occurs when a method is used on a type which doesn't implement it:\\n\\nErroneous code example:\\n\\n```compile_fail,E0599\\nstruct Mouth;\\n\\nlet x = Mouth;\\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\\n               //        in the current scope\\n```\\n\\nIn this case, you need to implement the `chocolate` method to fix the error:\\n\\n```\\nstruct Mouth;\\n\\nimpl Mouth {\\n    fn chocolate(&self) { // We implement the `chocolate` method here.\\n        println!(\\\"Hmmm! I love chocolate!\\\");\\n    }\\n}\\n\\nlet x = Mouth;\\nx.chocolate(); // ok!\\n```\\n\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs\",\"byte_start\":3929,\"byte_end\":3955,\"line_start\":119,\"line_end\":120,\"column_start\":9,\"column_end\":14,\"is_primary\":false,\"text\":[{\"text\":\"        self.regions\",\"highlight_start\":9,\"highlight_end\":21},{\"text\":\"            .drain_filter(|r| {\",\"highlight_start\":1,\"highlight_end\":14}],\"label\":\"\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"/home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs\",\"byte_start\":3955,\"byte_end\":3967,\"line_start\":120,\"line_end\":120,\"column_start\":14,\"column_end\":26,\"is_primary\":true,\"text\":[{\"text\":\"            .drain_filter(|r| {\",\"highlight_start\":14,\"highlight_end\":26}],\"label\":\"method not found in `BTreeSet<Region>`\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror[E0599]\\u001b[0m\\u001b[0m\\u001b[1m: no method named `drain_filter` found for struct `BTreeSet` in the current scope\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m/home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:120:14\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m119\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m/\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m        self.regions\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m120\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m            .drain_filter(|r| {\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m             \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m-\\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mmethod not found in `BTreeSet<Region>`\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|_____________|\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"aborting due to 2 previous errors\",\"code\":null,\"level\":\"error\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: aborting due to 2 previous errors\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"Some errors have detailed explanations: E0599, E0635.\",\"code\":null,\"level\":\"failure-note\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1mSome errors have detailed explanations: E0599, E0635.\\u001b[0m\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"For more information about an error, try `rustc --explain E0599`.\",\"code\":null,\"level\":\"failure-note\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1mFor more information about an error, try `rustc --explain E0599`.\\u001b[0m\\n\"}\nerror: could not compile `region-alloc` (lib)\nwarning: build failed, waiting for other jobs to finish...\n{\"$message_type\":\"diagnostic\",\"message\":\"unresolved imports `core::ops::Generator`, `core::ops::GeneratorState`\",\"code\":{\"code\":\"E0432\",\"explanation\":\"An import was unresolved.\\n\\nErroneous code example:\\n\\n```compile_fail,E0432\\nuse something::Foo; // error: unresolved import `something::Foo`.\\n```\\n\\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\\nimport items relative to the current and parent modules, use the `self::` and\\n`super::` prefixes, respectively.\\n\\nIn Rust 2018 or later, paths in `use` statements are relative to the current\\nmodule unless they begin with the name of a crate or a literal `crate::`, in\\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\\nand `super::` prefixes refer to the current and parent modules respectively.\\n\\nAlso verify that you didn't misspell the import name and that the import exists\\nin the module from where you tried to import it. Example:\\n\\n```\\nuse self::something::Foo; // Ok.\\n\\nmod something {\\n    pub struct Foo;\\n}\\n# fn main() {}\\n```\\n\\nIf you tried to use a module from an external crate and are using Rust 2015,\\nyou may have missed the `extern crate` declaration (which is usually placed in\\nthe crate root):\\n\\n```edition2015\\nextern crate core; // Required to use the `core` crate in Rust 2015.\\n\\nuse core::any;\\n# fn main() {}\\n```\\n\\nSince Rust 2018 the `extern crate` declaration is not required and\\nyou can instead just `use` it:\\n\\n```edition2018\\nuse core::any; // No extern crate required in Rust 2018.\\n# fn main() {}\\n```\\n\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs\",\"byte_start\":172,\"byte_end\":181,\"line_start\":6,\"line_end\":6,\"column_start\":17,\"column_end\":26,\"is_primary\":true,\"text\":[{\"text\":\"use core::ops::{Generator, GeneratorState};\",\"highlight_start\":17,\"highlight_end\":26}],\"label\":\"no `Generator` in `ops`\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"/home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs\",\"byte_start\":183,\"byte_end\":197,\"line_start\":6,\"line_end\":6,\"column_start\":28,\"column_end\":42,\"is_primary\":true,\"text\":[{\"text\":\"use core::ops::{Generator, GeneratorState};\",\"highlight_start\":28,\"highlight_end\":42}],\"label\":\"no `GeneratorState` in `ops`\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror[E0432]\\u001b[0m\\u001b[0m\\u001b[1m: unresolved imports `core::ops::Generator`, `core::ops::GeneratorState`\\u001b[0m\\n\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m/home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs:6:17\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m6\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0muse core::ops::{Generator, GeneratorState};\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                 \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^\\u001b[0m\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^^^^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mno `GeneratorState` in `ops`\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                 \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m|\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                 \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mno `Generator` in `ops`\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/executor-5ce2dc2b76c2e9e4.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"yield syntax is experimental\",\"code\":{\"code\":\"E0658\",\"explanation\":\"An unstable feature was used.\\n\\nErroneous code example:\\n\\n```compile_fail,E0658\\n#[repr(u128)] // error: use of unstable library feature 'repr128'\\nenum Foo {\\n    Bar(u64),\\n}\\n```\\n\\nIf you're using a stable or a beta version of rustc, you won't be able to use\\nany unstable features. In order to do so, please switch to a nightly version of\\nrustc (by using [rustup]).\\n\\nIf you're using a nightly version of rustc, just add the corresponding feature\\nto be able to use it:\\n\\n```\\n#![feature(repr128)]\\n\\n#[repr(u128)] // ok!\\nenum Foo {\\n    Bar(u64),\\n}\\n```\\n\\n[rustup]: https://rust-lang.github.io/rustup/concepts/channels.html\\n\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs\",\"byte_start\":7872,\"byte_end\":7887,\"line_start\":227,\"line_end\":227,\"column_start\":33,\"column_end\":48,\"is_primary\":true,\"text\":[{\"text\":\"                                yield found_key;\",\"highlight_start\":33,\"highlight_end\":48}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"see issue #43122 <https://github.com/rust-lang/rust/issues/43122> for more information\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"add `#![feature(coroutines)]` to the crate attributes to enable\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"this compiler was built on 2024-10-11; consider upgrading it if it is out of date\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror[E0658]\\u001b[0m\\u001b[0m\\u001b[1m: yield syntax is experimental\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m/home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs:227:33\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m227\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m...\\u001b[0m\\u001b[0m                   yield found_key;\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                       \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^^^^^\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: see issue #43122 <https://github.com/rust-lang/rust/issues/43122> for more information\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mhelp\\u001b[0m\\u001b[0m: add `#![feature(coroutines)]` to the crate attributes to enable\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: this compiler was built on 2024-10-11; consider upgrading it if it is out of date\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"yield syntax is experimental\",\"code\":{\"code\":\"E0658\",\"explanation\":\"An unstable feature was used.\\n\\nErroneous code example:\\n\\n```compile_fail,E0658\\n#[repr(u128)] // error: use of unstable library feature 'repr128'\\nenum Foo {\\n    Bar(u64),\\n}\\n```\\n\\nIf you're using a stable or a beta version of rustc, you won't be able to use\\nany unstable features. In order to do so, please switch to a nightly version of\\nrustc (by using [rustup]).\\n\\nIf you're using a nightly version of rustc, just add the corresponding feature\\nto be able to use it:\\n\\n```\\n#![feature(repr128)]\\n\\n#[repr(u128)] // ok!\\nenum Foo {\\n    Bar(u64),\\n}\\n```\\n\\n[rustup]: https://rust-lang.github.io/rustup/concepts/channels.html\\n\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs\",\"byte_start\":8623,\"byte_end\":8633,\"line_start\":244,\"line_end\":244,\"column_start\":17,\"column_end\":27,\"is_primary\":true,\"text\":[{\"text\":\"                yield None;\",\"highlight_start\":17,\"highlight_end\":27}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"see issue #43122 <https://github.com/rust-lang/rust/issues/43122> for more information\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"add `#![feature(coroutines)]` to the crate attributes to enable\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"this compiler was built on 2024-10-11; consider upgrading it if it is out of date\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror[E0658]\\u001b[0m\\u001b[0m\\u001b[1m: yield syntax is experimental\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m/home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs:244:17\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m244\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m                yield None;\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                 \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: see issue #43122 <https://github.com/rust-lang/rust/issues/43122> for more information\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mhelp\\u001b[0m\\u001b[0m: add `#![feature(coroutines)]` to the crate attributes to enable\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: this compiler was built on 2024-10-11; consider upgrading it if it is out of date\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"yield syntax is experimental\",\"code\":{\"code\":\"E0658\",\"explanation\":\"An unstable feature was used.\\n\\nErroneous code example:\\n\\n```compile_fail,E0658\\n#[repr(u128)] // error: use of unstable library feature 'repr128'\\nenum Foo {\\n    Bar(u64),\\n}\\n```\\n\\nIf you're using a stable or a beta version of rustc, you won't be able to use\\nany unstable features. In order to do so, please switch to a nightly version of\\nrustc (by using [rustup]).\\n\\nIf you're using a nightly version of rustc, just add the corresponding feature\\nto be able to use it:\\n\\n```\\n#![feature(repr128)]\\n\\n#[repr(u128)] // ok!\\nenum Foo {\\n    Bar(u64),\\n}\\n```\\n\\n[rustup]: https://rust-lang.github.io/rustup/concepts/channels.html\\n\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs\",\"byte_start\":7872,\"byte_end\":7887,\"line_start\":227,\"line_end\":227,\"column_start\":33,\"column_end\":48,\"is_primary\":true,\"text\":[{\"text\":\"                                yield found_key;\",\"highlight_start\":33,\"highlight_end\":48}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"see issue #43122 <https://github.com/rust-lang/rust/issues/43122> for more information\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"add `#![feature(coroutines)]` to the crate attributes to enable\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"this compiler was built on 2024-10-11; consider upgrading it if it is out of date\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror[E0658]\\u001b[0m\\u001b[0m\\u001b[1m: yield syntax is experimental\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m/home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs:227:33\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m227\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m...\\u001b[0m\\u001b[0m                   yield found_key;\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                       \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^^^^^\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: see issue #43122 <https://github.com/rust-lang/rust/issues/43122> for more information\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mhelp\\u001b[0m\\u001b[0m: add `#![feature(coroutines)]` to the crate attributes to enable\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: this compiler was built on 2024-10-11; consider upgrading it if it is out of date\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"`yield` can only be used in `#[coroutine]` closures, or `gen` blocks\",\"code\":null,\"level\":\"error\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs\",\"byte_start\":7872,\"byte_end\":7887,\"line_start\":227,\"line_end\":227,\"column_start\":33,\"column_end\":48,\"is_primary\":true,\"text\":[{\"text\":\"                                yield found_key;\",\"highlight_start\":33,\"highlight_end\":48}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"use `#[coroutine]` to make this closure a coroutine\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs\",\"byte_start\":7046,\"byte_end\":7046,\"line_start\":212,\"line_end\":212,\"column_start\":9,\"column_end\":9,\"is_primary\":true,\"text\":[{\"text\":\"        static move || {\",\"highlight_start\":9,\"highlight_end\":9}],\"label\":null,\"suggested_replacement\":\"#[coroutine] \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: `yield` can only be used in `#[coroutine]` closures, or `gen` blocks\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m/home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs:227:33\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m227\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m...\\u001b[0m\\u001b[0m                   yield found_key;\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                       \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^^^^^\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: use `#[coroutine]` to make this closure a coroutine\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m212\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0m        \\u001b[0m\\u001b[0m\\u001b[38;5;10m#[coroutine] \\u001b[0m\\u001b[0mstatic move || {\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m         \\u001b[0m\\u001b[0m\\u001b[38;5;10m++++++++++++\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"yield syntax is experimental\",\"code\":{\"code\":\"E0658\",\"explanation\":\"An unstable feature was used.\\n\\nErroneous code example:\\n\\n```compile_fail,E0658\\n#[repr(u128)] // error: use of unstable library feature 'repr128'\\nenum Foo {\\n    Bar(u64),\\n}\\n```\\n\\nIf you're using a stable or a beta version of rustc, you won't be able to use\\nany unstable features. In order to do so, please switch to a nightly version of\\nrustc (by using [rustup]).\\n\\nIf you're using a nightly version of rustc, just add the corresponding feature\\nto be able to use it:\\n\\n```\\n#![feature(repr128)]\\n\\n#[repr(u128)] // ok!\\nenum Foo {\\n    Bar(u64),\\n}\\n```\\n\\n[rustup]: https://rust-lang.github.io/rustup/concepts/channels.html\\n\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs\",\"byte_start\":8623,\"byte_end\":8633,\"line_start\":244,\"line_end\":244,\"column_start\":17,\"column_end\":27,\"is_primary\":true,\"text\":[{\"text\":\"                yield None;\",\"highlight_start\":17,\"highlight_end\":27}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"see issue #43122 <https://github.com/rust-lang/rust/issues/43122> for more information\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"add `#![feature(coroutines)]` to the crate attributes to enable\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"this compiler was built on 2024-10-11; consider upgrading it if it is out of date\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror[E0658]\\u001b[0m\\u001b[0m\\u001b[1m: yield syntax is experimental\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m/home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs:244:17\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m244\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m                yield None;\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                 \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: see issue #43122 <https://github.com/rust-lang/rust/issues/43122> for more information\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mhelp\\u001b[0m\\u001b[0m: add `#![feature(coroutines)]` to the crate attributes to enable\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: this compiler was built on 2024-10-11; consider upgrading it if it is out of date\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"unknown feature `generator_trait`\",\"code\":{\"code\":\"E0635\",\"explanation\":\"The `#![feature]` attribute specified an unknown feature.\\n\\nErroneous code example:\\n\\n```compile_fail,E0635\\n#![feature(nonexistent_rust_feature)] // error: unknown feature\\n```\\n\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/lib.rs\",\"byte_start\":92,\"byte_end\":107,\"line_start\":4,\"line_end\":4,\"column_start\":24,\"column_end\":39,\"is_primary\":true,\"text\":[{\"text\":\"#![feature(generators, generator_trait)]\",\"highlight_start\":24,\"highlight_end\":39}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror[E0635]\\u001b[0m\\u001b[0m\\u001b[1m: unknown feature `generator_trait`\\u001b[0m\\n\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m/home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/lib.rs:4:24\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m4\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m#![feature(generators, generator_trait)]\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                        \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^^^^^\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"unknown feature `atomic_mut_ptr`\",\"code\":{\"code\":\"E0635\",\"explanation\":\"The `#![feature]` attribute specified an unknown feature.\\n\\nErroneous code example:\\n\\n```compile_fail,E0635\\n#![feature(nonexistent_rust_feature)] // error: unknown feature\\n```\\n\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/lib.rs\",\"byte_start\":155,\"byte_end\":169,\"line_start\":6,\"line_end\":6,\"column_start\":12,\"column_end\":26,\"is_primary\":true,\"text\":[{\"text\":\"#![feature(atomic_mut_ptr)]\",\"highlight_start\":12,\"highlight_end\":26}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror[E0635]\\u001b[0m\\u001b[0m\\u001b[1m: unknown feature `atomic_mut_ptr`\\u001b[0m\\n\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m/home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/lib.rs:6:12\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m6\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m#![feature(atomic_mut_ptr)]\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m            \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^^^^\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"aborting due to 9 previous errors\",\"code\":null,\"level\":\"error\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: aborting due to 9 previous errors\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"Some errors have detailed explanations: E0432, E0557, E0635, E0658.\",\"code\":null,\"level\":\"failure-note\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1mSome errors have detailed explanations: E0432, E0557, E0635, E0658.\\u001b[0m\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"For more information about an error, try `rustc --explain E0432`.\",\"code\":null,\"level\":\"failure-note\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1mFor more information about an error, try `rustc --explain E0432`.\\u001b[0m\\n\"}\nerror: could not compile `executor` (lib)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/build/zcore-11c6437e27c1da69/build_script_build-11c6437e27c1da69\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/kern-crates/zCore/target/debug/deps/libsyn-60a893961c6399fe.rlib\",\"emit\":\"link\"}\nerror: Cargo(\"2 jobs failed\")\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=zcore, checker=Mirai\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_8/kern-crates/zCore\n// cmd=cargo +nightly-2024-02-05 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n   Compiling autocfg v1.3.0\n    Checking log v0.4.21\n   Compiling unicode-ident v1.0.12\n   Compiling rustversion v1.0.17\n    Checking scopeguard v1.2.0\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling quote v1.0.36\n    Checking volatile v0.4.6\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.68\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n    Checking volatile v0.3.0\n    Checking cfg-if v1.0.0\n    Checking lazy_static v1.5.0\n    Checking rsdp v2.0.1\n    Checking x86_64 v0.14.12\n    Checking bit v0.1.1\n    Checking byteorder v1.5.0\n    Checking futures-sink v0.3.30\n    Checking futures-core v0.3.30\n   Compiling x86 v0.46.0\n   Compiling trapframe v0.9.0\n    Checking managed v0.8.0\n    Checking acpi v4.1.1\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking x2apic v0.4.3\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n    Checking numeric-enum-macro v0.2.0\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.30\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking pin-project-lite v0.2.14\n    Checking futures-channel v0.3.30\n    Checking futures-io v0.3.30\n    Checking uniset v0.2.0 (https://github.com/pleasewhy/uniset?rev=40edbd7506979daa1d49f935b568873a6a21c5c0#40edbd75)\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n    Checking ahash v0.4.8\n    Checking zero v0.1.3\n    Checking xmas-elf v0.7.0\n    Checking hashbrown v0.9.1\n    Checking unicycle v0.7.1 (https://github.com/pleasewhy/unicycle?rev=904f1c061d4784a5642e092d308cf523a9270c6e#904f1c06)\n    Checking woke v0.0.2\n    Checking downcast-rs v1.2.1\n    Checking bit-iter v1.2.0\n    Checking region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\n    Checking executor v0.1.0 (https://github.com/DeathWish5/PreemptiveScheduler?rev=e8cd353#e8cd3531)\nerror: could not compile `region-alloc` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `executor` (lib) due to 7 previous errors\n"]}},{"file":"(virtual) rap","count":1,"kinds":{"Cargo":["// pkg_name=zcore, checker=Rap\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_8/kern-crates/zCore\n// cmd=cargo +nightly-2024-10-12 rap -F -M\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling autocfg v1.3.0\n   Compiling proc-macro2 v1.0.86\n    Checking log v0.4.21\n   Compiling unicode-ident v1.0.12\n   Compiling rustversion v1.0.17\n    Checking scopeguard v1.2.0\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n   Compiling quote v1.0.36\n    Checking volatile v0.4.6\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.68\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n    Checking x86_64 v0.14.12\n    Checking volatile v0.3.0\n    Checking cfg-if v1.0.0\n    Checking lazy_static v1.5.0\n    Checking rsdp v2.0.1\n   Compiling x86 v0.46.0\n   Compiling trapframe v0.9.0\n    Checking managed v0.8.0\n    Checking futures-core v0.3.30\n    Checking byteorder v1.5.0\n    Checking futures-sink v0.3.30\n    Checking bit v0.1.1\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking x2apic v0.4.3\n    Checking acpi v4.1.1\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking pin-utils v0.1.0\n    Checking numeric-enum-macro v0.2.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-task v0.3.30\n    Checking futures-channel v0.3.30\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n    Checking ahash v0.4.8\n    Checking uniset v0.2.0 (https://github.com/pleasewhy/uniset?rev=40edbd7506979daa1d49f935b568873a6a21c5c0#40edbd75)\n    Checking zero v0.1.3\n    Checking futures-io v0.3.30\n    Checking xmas-elf v0.7.0\n    Checking unicycle v0.7.1 (https://github.com/pleasewhy/unicycle?rev=904f1c061d4784a5642e092d308cf523a9270c6e#904f1c06)\n    Checking hashbrown v0.9.1\n    Checking woke v0.0.2\n    Checking bit-iter v1.2.0\n    Checking downcast-rs v1.2.1\n    Checking region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\n    Checking executor v0.1.0 (https://github.com/DeathWish5/PreemptiveScheduler?rev=e8cd353#e8cd3531)\n   Compiling zcore v0.1.0 (/home/runner/check/batch_8/kern-crates/zCore)\nerror[E0635]: unknown feature `btree_drain_filter`\n --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:2:12\n  |\n2 | #![feature(btree_drain_filter)]\n  |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `drain_filter` found for struct `BTreeSet` in the current scope\n   --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:120:14\n    |\n119 | /         self.regions\n120 | |             .drain_filter(|r| {\n    | |             -^^^^^^^^^^^^ method not found in `BTreeSet<Region>`\n    | |_____________|\n    |\n\nerror[E0557]: feature has been removed\n --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/lib.rs:4:12\n  |\n4 | #![feature(generators, generator_trait)]\n  |            ^^^^^^^^^^ feature has been removed\n  |\n  = note: renamed to `coroutines`\n\nSome errors have detailed explanations: E0599, E0635.\nFor more information about an error, try `rustc --explain E0599`.\nerror: could not compile `region-alloc` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0432]: unresolved imports `core::ops::Generator`, `core::ops::GeneratorState`\n --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs:6:17\n  |\n6 | use core::ops::{Generator, GeneratorState};\n  |                 ^^^^^^^^^  ^^^^^^^^^^^^^^ no `GeneratorState` in `ops`\n  |                 |\n  |                 no `Generator` in `ops`\n\nerror[E0658]: yield syntax is experimental\n   --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs:227:33\n    |\n227 | ...                   yield found_key;\n    |                       ^^^^^^^^^^^^^^^\n    |\n    = note: see issue #43122 <https://github.com/rust-lang/rust/issues/43122> for more information\n    = help: add `#![feature(coroutines)]` to the crate attributes to enable\n    = note: this compiler was built on 2024-10-11; consider upgrading it if it is out of date\n\nerror[E0658]: yield syntax is experimental\n   --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs:244:17\n    |\n244 |                 yield None;\n    |                 ^^^^^^^^^^\n    |\n    = note: see issue #43122 <https://github.com/rust-lang/rust/issues/43122> for more information\n    = help: add `#![feature(coroutines)]` to the crate attributes to enable\n    = note: this compiler was built on 2024-10-11; consider upgrading it if it is out of date\n\nerror: `yield` can only be used in `#[coroutine]` closures, or `gen` blocks\n   --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs:227:33\n    |\n227 | ...                   yield found_key;\n    |                       ^^^^^^^^^^^^^^^\n    |\nhelp: use `#[coroutine]` to make this closure a coroutine\n    |\n212 |         #[coroutine] static move || {\n    |         ++++++++++++\n\nerror[E0635]: unknown feature `generator_trait`\n --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/lib.rs:4:24\n  |\n4 | #![feature(generators, generator_trait)]\n  |                        ^^^^^^^^^^^^^^^\n\nerror[E0635]: unknown feature `atomic_mut_ptr`\n --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/lib.rs:6:12\n  |\n6 | #![feature(atomic_mut_ptr)]\n  |            ^^^^^^^^^^^^^^\n\nSome errors have detailed explanations: E0432, E0557, E0635, E0658.\nFor more information about an error, try `rustc --explain E0432`.\nerror: could not compile `executor` (lib) due to 9 previous errors\n11:46:22|RAP|ERROR|: Finished with non-zero exit code.\n"]}}]},{"user":"kern-crates","repo":"zcore-kernel-hal","pkg":"kernel-hal","count":25,"raw_reports":[{"file":"src/common/ipi.rs","count":9,"kinds":{"Clippy(Error)":["error: empty line after doc comment\n  --> src/common/ipi.rs:53:1\n   |\n53 | / ///\n54 | |\n   | |_\n55 |   const TYPE_SHIFT: usize = 60;\n   |   ----------------------- the comment documents this constant\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n   = note: `#[deny(clippy::empty_line_after_doc_comments)]` implied by `#[deny(warnings)]`\n   = help: if the empty line is unintentional remove it\n\n","error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:20:30\n   |\n20 |         IRQueue::new(unsafe {&mut IPI_REASON0} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n20 |         IRQueue::new(unsafe {&raw mut IPI_REASON0} ),\n   |                              ~~~~~~~~\n\n","error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:21:30\n   |\n21 |         IRQueue::new(unsafe {&mut IPI_REASON1} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n21 |         IRQueue::new(unsafe {&raw mut IPI_REASON1} ),\n   |                              ~~~~~~~~\n\n","error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:22:30\n   |\n22 |         IRQueue::new(unsafe {&mut IPI_REASON2} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n22 |         IRQueue::new(unsafe {&raw mut IPI_REASON2} ),\n   |                              ~~~~~~~~\n\n","error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:23:30\n   |\n23 |         IRQueue::new(unsafe {&mut IPI_REASON3} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n23 |         IRQueue::new(unsafe {&raw mut IPI_REASON3} ),\n   |                              ~~~~~~~~\n\n","error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:24:30\n   |\n24 |         IRQueue::new(unsafe {&mut IPI_REASON4} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n24 |         IRQueue::new(unsafe {&raw mut IPI_REASON4} ),\n   |                              ~~~~~~~~\n\n","error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:25:30\n   |\n25 |         IRQueue::new(unsafe {&mut IPI_REASON5} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n25 |         IRQueue::new(unsafe {&raw mut IPI_REASON5} ),\n   |                              ~~~~~~~~\n\n","error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:26:30\n   |\n26 |         IRQueue::new(unsafe {&mut IPI_REASON6} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n26 |         IRQueue::new(unsafe {&raw mut IPI_REASON6} ),\n   |                              ~~~~~~~~\n\n","error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:27:30\n   |\n27 |         IRQueue::new(unsafe {&mut IPI_REASON7} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n27 |         IRQueue::new(unsafe {&raw mut IPI_REASON7} ),\n   |                              ~~~~~~~~\n\n"]}},{"file":"src/utils/mpsc_queue.rs","count":4,"kinds":{"Clippy(Error)":["error: the following explicit lifetimes could be elided: 'a\n  --> src/utils/mpsc_queue.rs:17:13\n   |\n17 | unsafe impl<'a, T: Copy> Sync for MpscQueue<'a, T> {}\n   |             ^^                              ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[deny(clippy::needless_lifetimes)]` implied by `#[deny(warnings)]`\nhelp: elide the lifetimes\n   |\n17 - unsafe impl<'a, T: Copy> Sync for MpscQueue<'a, T> {}\n17 + unsafe impl<T: Copy> Sync for MpscQueue<'_, T> {}\n   |\n\n","error: the following explicit lifetimes could be elided: 'a\n  --> src/utils/mpsc_queue.rs:17:13\n   |\n17 | unsafe impl<'a, T: Copy> Sync for MpscQueue<'a, T> {}\n   |             ^^                              ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[deny(clippy::needless_lifetimes)]` implied by `#[deny(warnings)]`\nhelp: elide the lifetimes\n   |\n17 - unsafe impl<'a, T: Copy> Sync for MpscQueue<'a, T> {}\n17 + unsafe impl<T: Copy> Sync for MpscQueue<'_, T> {}\n   |\n\n","error: the following explicit lifetimes could be elided: 'a\n  --> src/utils/mpsc_queue.rs:19:13\n   |\n19 | unsafe impl<'a, T: Copy> Send for MpscQueue<'a, T> {}\n   |             ^^                              ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n19 - unsafe impl<'a, T: Copy> Send for MpscQueue<'a, T> {}\n19 + unsafe impl<T: Copy> Send for MpscQueue<'_, T> {}\n   |\n\n","error: the following explicit lifetimes could be elided: 'a\n  --> src/utils/mpsc_queue.rs:19:13\n   |\n19 | unsafe impl<'a, T: Copy> Send for MpscQueue<'a, T> {}\n   |             ^^                              ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n19 - unsafe impl<'a, T: Copy> Send for MpscQueue<'a, T> {}\n19 + unsafe impl<T: Copy> Send for MpscQueue<'_, T> {}\n   |\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=kernel-hal, checker=Clippy\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/zcore-kernel-hal\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling autocfg v1.4.0\n   Compiling crossbeam-utils v0.8.20\n    Checking pin-project-lite v0.2.15\n    Checking bitflags v1.3.2\n    Checking parking v2.2.1\n    Checking bitflags v2.6.0\n    Checking value-bag v1.10.0\n    Checking fastrand v2.2.0\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n    Checking futures-core v0.3.31\n   Compiling rustix v0.38.41\n    Checking cfg-if v1.0.0\n    Checking futures-io v0.3.31\n    Checking linux-raw-sys v0.4.14\n   Compiling lock_api v0.4.12\n    Checking concurrent-queue v2.5.0\n    Checking event-listener v5.3.1\n   Compiling slab v0.4.9\n    Checking scopeguard v1.2.0\n   Compiling rustversion v1.0.18\n    Checking event-listener-strategy v0.5.2\n    Checking futures-lite v2.5.0\n   Compiling libc v0.2.164\n   Compiling version-compare v0.0.10\n   Compiling proc-macro2 v1.0.92\n   Compiling cfg-if v0.1.10\n    Checking tracing-core v0.1.32\n   Compiling sdl2-sys v0.34.5\n    Checking tracing v0.1.40\n    Checking spin v0.9.8\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.14\n    Checking async-task v4.7.1\n    Checking atomic-waker v1.1.2\n    Checking volatile v0.4.6\n    Checking piper v0.2.4\n    Checking x86_64 v0.14.12\n    Checking async-channel v2.3.1\n    Checking async-lock v3.4.0\n   Compiling paste v1.0.15\n    Checking once_cell v1.20.2\n    Checking blocking v1.6.1\n   Compiling quote v1.0.37\n    Checking async-executor v1.13.1\n   Compiling memoffset v0.6.5\n   Compiling sdl2 v0.34.5\n    Checking event-listener v2.5.3\n    Checking volatile v0.3.0\n    Checking async-channel v1.9.0\n   Compiling syn v2.0.89\n    Checking lazy_static v1.5.0\n    Checking kv-log-macro v1.0.7\n    Checking rsdp v2.0.1\n    Checking pin-utils v0.1.0\n    Checking managed v0.8.0\n    Checking memchr v2.7.4\n    Checking polling v3.7.4\n   Compiling trapframe v0.9.0\n    Checking async-io v2.4.0\n    Checking byteorder v1.5.0\n   Compiling x86 v0.46.0\n    Checking bit v0.1.1\n    Checking x2apic v0.4.3\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking async-global-executor v2.4.1\n    Checking acpi v4.1.1\n    Checking async-std v1.13.0\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n    Checking numeric-enum-macro v0.2.0\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking nix v0.23.2\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n    Checking tempfile v3.14.0\n   Compiling git-version-macro v0.3.9\n    Checking git-version v0.3.9\n    Checking kernel-hal v0.1.0 (/home/runner/check/batch_9/kern-crates/zcore-kernel-hal)\nerror: could not compile `kernel-hal` (lib) due to 16 previous errors\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=kernel-hal, checker=Lockbud\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/zcore-kernel-hal\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling autocfg v1.4.0\n   Compiling crossbeam-utils v0.8.20\n   Compiling pin-project-lite v0.2.15\n   Compiling bitflags v1.3.2\n   Compiling bitflags v2.6.0\n   Compiling parking v2.2.1\n   Compiling value-bag v1.10.0\n   Compiling bit_field v0.10.2\n   Compiling fastrand v2.2.0\n   Compiling log v0.4.22\n   Compiling futures-core v0.3.31\n   Compiling lock_api v0.4.12\n   Compiling cfg-if v1.0.0\n   Compiling rustix v0.38.41\n[2024-11-22T11:41:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:41:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling concurrent-queue v2.5.0\n   Compiling futures-io v0.3.31\n   Compiling event-listener v5.3.1\n   Compiling slab v0.4.9\n   Compiling scopeguard v1.2.0\n   Compiling linux-raw-sys v0.4.14\n   Compiling rustversion v1.0.18\n   Compiling event-listener-strategy v0.5.2\n   Compiling futures-lite v2.5.0\n   Compiling proc-macro2 v1.0.92\n   Compiling tracing-core v0.1.32\n   Compiling version-compare v0.0.10\n   Compiling cfg-if v0.1.10\n   Compiling libc v0.2.164\n   Compiling sdl2-sys v0.34.5\n   Compiling tracing v0.1.40\n   Compiling spin v0.9.8\n   Compiling raw-cpuid v10.7.0\n   Compiling async-task v4.7.1\n   Compiling atomic-waker v1.1.2\n   Compiling volatile v0.4.6\n   Compiling unicode-ident v1.0.14\n   Compiling x86_64 v0.14.12\n   Compiling piper v0.2.4\n   Compiling async-channel v2.3.1\n   Compiling async-lock v3.4.0\n   Compiling once_cell v1.20.2\n   Compiling paste v1.0.15\n[2024-11-22T11:41:48Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-22T11:41:48Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling blocking v1.6.1\n   Compiling quote v1.0.37\n[2024-11-22T11:41:48Z WARN  lockbud::callbacks] [\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:240:13: 240:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:533:17: 533:71 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/sys/backtrace.rs:154:18: 154:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:240:13: 240:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:533:17: 533:71 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/sys/backtrace.rs:154:18: 154:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:533:17: 533:71 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/sys/backtrace.rs:154:18: 154:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:54: 264:59 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:533:17: 533:71 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/sys/backtrace.rs:154:18: 154:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:254:25: 254:51 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:533:17: 533:71 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/sys/backtrace.rs:154:18: 154:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:54: 264:59 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:533:17: 533:71 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/sys/backtrace.rs:154:18: 154:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:18: 264:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:533:17: 533:71 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/sys/backtrace.rs:154:18: 154:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:265:21: 265:25 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:533:17: 533:71 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/sys/backtrace.rs:154:18: 154:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"CondvarDeadlock\": {\n          \"bug_kind\": \"Deadlock before Condvar::wait and notify\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"condvar_wait_type\": \"std::sync::Condvar::wait\",\n            \"condvar_wait_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:31: 264:69 (#0)\",\n            \"condvar_notify_type\": \"std::sync::Condvar::notify\",\n            \"condvar_notify_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:288:9: 288:31 (#0)\",\n            \"deadlocks\": [\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:284:13: 284:22 (#0)\"\n              },\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:284:13: 284:22 (#0)\"\n              }\n            ]\n          },\n          \"explanation\": \"The same lock before Condvar::wait and notify\"\n        }\n      },\n      {\n        \"CondvarDeadlock\": {\n          \"bug_kind\": \"Deadlock before Condvar::wait and notify\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"condvar_wait_type\": \"std::sync::Condvar::wait\",\n            \"condvar_wait_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:31: 264:69 (#0)\",\n            \"condvar_notify_type\": \"std::sync::Condvar::notify\",\n            \"condvar_notify_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:319:13: 319:35 (#0)\",\n            \"deadlocks\": [\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\"\n              },\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\"\n              }\n            ]\n          },\n          \"explanation\": \"The same lock before Condvar::wait and notify\"\n        }\n      }\n    ]\n[2024-11-22T11:41:48Z WARN  lockbud::callbacks] crate blocking contains bugs: { probably: 4, possibly: 4 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 2 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling async-executor v1.13.1\n   Compiling memoffset v0.6.5\n[2024-11-22T11:41:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:41:48Z WARN  lockbud::callbacks] crate async_executor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling sdl2 v0.34.5\n   Compiling event-listener v2.5.3\n   Compiling volatile v0.3.0\n   Compiling async-channel v1.9.0\n   Compiling syn v2.0.89\n   Compiling lazy_static v1.5.0\n   Compiling kv-log-macro v1.0.7\n   Compiling rsdp v2.0.1\n   Compiling trapframe v0.9.0\n   Compiling x86 v0.46.0\n   Compiling polling v3.7.4\n   Compiling pin-utils v0.1.0\n   Compiling byteorder v1.5.0\n   Compiling async-io v2.4.0\n   Compiling managed v0.8.0\n   Compiling memchr v2.7.4\n[2024-11-22T11:41:50Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:41:50Z WARN  lockbud::callbacks] crate async_io contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling async-global-executor v2.4.1\n   Compiling bit v0.1.1\n   Compiling smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n   Compiling x2apic v0.4.3\n[2024-11-22T11:41:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:41:51Z WARN  lockbud::callbacks] crate async_global_executor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 3 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling async-std v1.13.0\n   Compiling acpi v4.1.1\n[2024-11-22T11:41:53Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/keyboard/keycode.rs:520:37: 520:52 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/keyboard/keycode.rs:527:17: 527:18 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/hint.rs:93:27: 93:41 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/hint.rs:111:1: 111:2 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:858:6: 858:6 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:854:13: 854:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:850:58: 850:67 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:854:13: 854:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/joystick.rs:432:39: 432:61 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/joystick.rs:438:5: 438:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:210:39: 210:51 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:214:13: 214:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:285:41: 285:55 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:289:13: 289:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-22T11:41:53Z WARN  lockbud::callbacks] crate sdl2 contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 7 }\n   Compiling virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n   Compiling isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n   Compiling lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n   Compiling pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n   Compiling device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n   Compiling numeric-enum-macro v0.2.0\n   Compiling nix v0.23.2\n   Compiling zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n   Compiling git-version-macro v0.3.9\n   Compiling git-version v0.3.9\n   Compiling tempfile v3.14.0\n[2024-11-22T11:41:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"file::imp::unix::persist\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tempfile-3.14.0/src/file/imp/unix.rs:125:17: 125:36 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tempfile-3.14.0/src/file/imp/unix.rs:128:42: 128:68 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:41:56Z WARN  lockbud::callbacks] crate tempfile contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-22T11:41:57Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:865:50: 865:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:868:9: 868:10 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:874:50: 874:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:877:9: 877:10 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2725:23: 2725:28 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2719:9: 2752:10 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2706:25: 2706:29 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2706:25: 2706:29 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2724:21: 2724:24 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2719:9: 2752:10 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-22T11:41:57Z WARN  lockbud::callbacks] crate nix contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 8 }\n   Compiling kernel-hal v0.1.0 (/home/runner/check/batch_9/kern-crates/zcore-kernel-hal)\nerror: private item shadows public glob re-export\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\n   |\nnote: the name `config` in the type namespace is supposed to be publicly re-exported here\n  --> src/lib.rs:49:5\n   |\n49 |     *,\n   |     ^\nnote: but the private item here shadows it\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\nnote: the lint level is defined here\n  --> src/lib.rs:9:9\n   |\n9  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(hidden_glob_reexports)]` implied by `#[deny(warnings)]`\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:20:30\n   |\n20 |         IRQueue::new(unsafe {&mut IPI_REASON0} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n20 |         IRQueue::new(unsafe {&raw mut IPI_REASON0} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:21:30\n   |\n21 |         IRQueue::new(unsafe {&mut IPI_REASON1} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n21 |         IRQueue::new(unsafe {&raw mut IPI_REASON1} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:22:30\n   |\n22 |         IRQueue::new(unsafe {&mut IPI_REASON2} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n22 |         IRQueue::new(unsafe {&raw mut IPI_REASON2} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:23:30\n   |\n23 |         IRQueue::new(unsafe {&mut IPI_REASON3} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n23 |         IRQueue::new(unsafe {&raw mut IPI_REASON3} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:24:30\n   |\n24 |         IRQueue::new(unsafe {&mut IPI_REASON4} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n24 |         IRQueue::new(unsafe {&raw mut IPI_REASON4} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:25:30\n   |\n25 |         IRQueue::new(unsafe {&mut IPI_REASON5} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n25 |         IRQueue::new(unsafe {&raw mut IPI_REASON5} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:26:30\n   |\n26 |         IRQueue::new(unsafe {&mut IPI_REASON6} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n26 |         IRQueue::new(unsafe {&raw mut IPI_REASON6} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:27:30\n   |\n27 |         IRQueue::new(unsafe {&mut IPI_REASON7} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n27 |         IRQueue::new(unsafe {&raw mut IPI_REASON7} ),\n   |                              ~~~~~~~~\n\nerror: could not compile `kernel-hal` (lib) due to 9 previous errors\n"]}},{"file":"(virtual) rap","count":1,"kinds":{"Cargo":["// pkg_name=kernel-hal, checker=Rap\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/zcore-kernel-hal\n// cmd=cargo +nightly-2024-10-12 rap -F -M\n   Compiling autocfg v1.4.0\n   Compiling crossbeam-utils v0.8.20\n    Checking pin-project-lite v0.2.15\n    Checking bitflags v1.3.2\n    Checking bitflags v2.6.0\n    Checking parking v2.2.1\n    Checking value-bag v1.10.0\n    Checking futures-core v0.3.31\n    Checking fastrand v2.2.0\n    Checking bit_field v0.10.2\n    Checking log v0.4.22\n   Compiling lock_api v0.4.12\n    Checking futures-io v0.3.31\n    Checking concurrent-queue v2.5.0\n   Compiling rustix v0.38.41\n    Checking cfg-if v1.0.0\n   Compiling slab v0.4.9\n    Checking event-listener v5.3.1\n    Checking linux-raw-sys v0.4.14\n   Compiling rustversion v1.0.18\n    Checking event-listener-strategy v0.5.2\n    Checking scopeguard v1.2.0\n    Checking futures-lite v2.5.0\n   Compiling version-compare v0.0.10\n   Compiling libc v0.2.164\n   Compiling proc-macro2 v1.0.92\n    Checking tracing-core v0.1.32\n   Compiling cfg-if v0.1.10\n   Compiling sdl2-sys v0.34.5\n    Checking tracing v0.1.40\n    Checking spin v0.9.8\n    Checking raw-cpuid v10.7.0\n    Checking volatile v0.4.6\n    Checking atomic-waker v1.1.2\n    Checking async-task v4.7.1\n   Compiling unicode-ident v1.0.14\n    Checking x86_64 v0.14.12\n    Checking piper v0.2.4\n    Checking async-channel v2.3.1\n    Checking async-lock v3.4.0\n    Checking once_cell v1.20.2\n   Compiling paste v1.0.15\n    Checking blocking v1.6.1\n   Compiling quote v1.0.37\n    Checking async-executor v1.13.1\n   Compiling memoffset v0.6.5\n    Checking event-listener v2.5.3\n   Compiling sdl2 v0.34.5\n    Checking volatile v0.3.0\n    Checking async-channel v1.9.0\n   Compiling syn v2.0.89\n    Checking polling v3.7.4\n    Checking async-io v2.4.0\n    Checking lazy_static v1.5.0\n    Checking rsdp v2.0.1\n    Checking kv-log-macro v1.0.7\n   Compiling trapframe v0.9.0\n    Checking pin-utils v0.1.0\n    Checking managed v0.8.0\n    Checking memchr v2.7.4\n    Checking async-global-executor v2.4.1\n   Compiling x86 v0.46.0\n    Checking bit v0.1.1\n    Checking byteorder v1.5.0\n    Checking x2apic v0.4.3\n    Checking async-std v1.13.0\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking acpi v4.1.1\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n    Checking numeric-enum-macro v0.2.0\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking nix v0.23.2\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n    Checking tempfile v3.14.0\n   Compiling git-version-macro v0.3.9\n    Checking git-version v0.3.9\n    Checking kernel-hal v0.1.0 (/home/runner/check/batch_9/kern-crates/zcore-kernel-hal)\nerror: private item shadows public glob re-export\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\n   |\nnote: the name `config` in the type namespace is supposed to be publicly re-exported here\n  --> src/lib.rs:49:5\n   |\n49 |     *,\n   |     ^\nnote: but the private item here shadows it\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\nnote: the lint level is defined here\n  --> src/lib.rs:9:9\n   |\n9  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(hidden_glob_reexports)]` implied by `#[deny(warnings)]`\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:20:30\n   |\n20 |         IRQueue::new(unsafe {&mut IPI_REASON0} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n20 |         IRQueue::new(unsafe {&raw mut IPI_REASON0} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:21:30\n   |\n21 |         IRQueue::new(unsafe {&mut IPI_REASON1} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n21 |         IRQueue::new(unsafe {&raw mut IPI_REASON1} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:22:30\n   |\n22 |         IRQueue::new(unsafe {&mut IPI_REASON2} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n22 |         IRQueue::new(unsafe {&raw mut IPI_REASON2} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:23:30\n   |\n23 |         IRQueue::new(unsafe {&mut IPI_REASON3} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n23 |         IRQueue::new(unsafe {&raw mut IPI_REASON3} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:24:30\n   |\n24 |         IRQueue::new(unsafe {&mut IPI_REASON4} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n24 |         IRQueue::new(unsafe {&raw mut IPI_REASON4} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:25:30\n   |\n25 |         IRQueue::new(unsafe {&mut IPI_REASON5} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n25 |         IRQueue::new(unsafe {&raw mut IPI_REASON5} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:26:30\n   |\n26 |         IRQueue::new(unsafe {&mut IPI_REASON6} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n26 |         IRQueue::new(unsafe {&raw mut IPI_REASON6} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:27:30\n   |\n27 |         IRQueue::new(unsafe {&mut IPI_REASON7} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n27 |         IRQueue::new(unsafe {&raw mut IPI_REASON7} ),\n   |                              ~~~~~~~~\n\nerror: could not compile `kernel-hal` (lib) due to 9 previous errors\n11:42:13|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=kernel-hal, checker=SemverChecks\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/zcore-kernel-hal\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n     Parsing kernel-hal v0.1.0 (current)\nerror: running cargo-doc on crate kernel-hal failed with output:\n-----\n   Compiling autocfg v1.4.0\n   Compiling crossbeam-utils v0.8.20\n    Checking pin-project-lite v0.2.15\n    Checking bitflags v1.3.2\n    Checking bitflags v2.6.0\n    Checking bit_field v0.10.2\n    Checking parking v2.2.1\n    Checking value-bag v1.10.0\n   Compiling proc-macro2 v1.0.92\n    Checking log v0.4.22\n    Checking fastrand v2.2.0\n    Checking futures-core v0.3.31\n   Compiling lock_api v0.4.12\n   Compiling unicode-ident v1.0.14\n    Checking concurrent-queue v2.5.0\n    Checking scopeguard v1.2.0\n    Checking futures-io v0.3.31\n    Checking event-listener v5.3.1\n   Compiling rustix v0.38.41\n    Checking cfg-if v1.0.0\n    Checking event-listener-strategy v0.5.2\n   Compiling slab v0.4.9\n    Checking linux-raw-sys v0.4.14\n   Compiling quote v1.0.37\n   Compiling rustversion v1.0.18\n    Checking spin v0.9.8\n    Checking futures-lite v2.5.0\n   Compiling num-traits v0.2.19\n   Compiling az v1.2.1\n   Compiling version-compare v0.0.10\n    Checking tracing-core v0.1.33\n   Compiling cfg-if v0.1.10\n   Compiling libc v0.2.167\n    Checking tracing v0.1.41\n   Compiling sdl2-sys v0.34.5\n    Checking raw-cpuid v10.7.0\n    Checking async-task v4.7.1\n    Checking atomic-waker v1.1.2\n    Checking volatile v0.4.6\n    Checking nb v1.1.0\n    Checking byteorder v1.5.0\n    Checking nb v0.1.3\n    Checking piper v0.2.4\n    Checking x86_64 v0.14.13\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate kernel-hal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_9/kern-crates/zcore-kernel-hal --no-default-features --features allwinner-drivers,async-std,bitmap-allocator,board-c910light,board-qemu,default,fu740-drivers,graphic,libos,link-user-img,loopback,nix,no-pci,tempfile,thead-maee &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate kernel-hal v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-22T11:41:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:41:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-22T11:41:48Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-22T11:41:48Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-11-22T11:41:48Z WARN  lockbud::callbacks] [\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:240:13: 240:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:533:17: 533:71 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/sys/backtrace.rs:154:18: 154:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:240:13: 240:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:533:17: 533:71 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/sys/backtrace.rs:154:18: 154:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:533:17: 533:71 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/sys/backtrace.rs:154:18: 154:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:54: 264:59 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:533:17: 533:71 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/sys/backtrace.rs:154:18: 154:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:254:25: 254:51 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:533:17: 533:71 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/sys/backtrace.rs:154:18: 154:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:54: 264:59 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:533:17: 533:71 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/sys/backtrace.rs:154:18: 154:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:18: 264:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:533:17: 533:71 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/sys/backtrace.rs:154:18: 154:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:265:21: 265:25 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:533:17: 533:71 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/sys/backtrace.rs:154:18: 154:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:380:18: 380:41 (#0)\"\n                ],\n                [\n                  \"/rustc/14f303bc1430a78ddaa91b3e104bbe4c0413184e/library/std/src/thread/mod.rs:447:32: 447:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"CondvarDeadlock\": {\n          \"bug_kind\": \"Deadlock before Condvar::wait and notify\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"condvar_wait_type\": \"std::sync::Condvar::wait\",\n            \"condvar_wait_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:31: 264:69 (#0)\",\n            \"condvar_notify_type\": \"std::sync::Condvar::notify\",\n            \"condvar_notify_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:288:9: 288:31 (#0)\",\n            \"deadlocks\": [\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:284:13: 284:22 (#0)\"\n              },\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:284:13: 284:22 (#0)\"\n              }\n            ]\n          },\n          \"explanation\": \"The same lock before Condvar::wait and notify\"\n        }\n      },\n      {\n        \"CondvarDeadlock\": {\n          \"bug_kind\": \"Deadlock before Condvar::wait and notify\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"condvar_wait_type\": \"std::sync::Condvar::wait\",\n            \"condvar_wait_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:31: 264:69 (#0)\",\n            \"condvar_notify_type\": \"std::sync::Condvar::notify\",\n            \"condvar_notify_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:319:13: 319:35 (#0)\",\n            \"deadlocks\": [\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\"\n              },\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\"\n              }\n            ]\n          },\n          \"explanation\": \"The same lock before Condvar::wait and notify\"\n        }\n      }\n    ]\n[2024-11-22T11:41:48Z WARN  lockbud::callbacks] crate blocking contains bugs: { probably: 4, possibly: 4 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 2 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-22T11:41:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:41:48Z WARN  lockbud::callbacks] crate async_executor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-22T11:41:50Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:41:50Z WARN  lockbud::callbacks] crate async_io contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-22T11:41:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:41:51Z WARN  lockbud::callbacks] crate async_global_executor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 3 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-22T11:41:53Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/keyboard/keycode.rs:520:37: 520:52 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/keyboard/keycode.rs:527:17: 527:18 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/hint.rs:93:27: 93:41 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/hint.rs:111:1: 111:2 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:858:6: 858:6 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:854:13: 854:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:850:58: 850:67 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:854:13: 854:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/joystick.rs:432:39: 432:61 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/joystick.rs:438:5: 438:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:210:39: 210:51 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:214:13: 214:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:285:41: 285:55 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:289:13: 289:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-22T11:41:53Z WARN  lockbud::callbacks] crate sdl2 contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 7 }\n[2024-11-22T11:41:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"file::imp::unix::persist\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tempfile-3.14.0/src/file/imp/unix.rs:125:17: 125:36 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tempfile-3.14.0/src/file/imp/unix.rs:128:42: 128:68 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:41:56Z WARN  lockbud::callbacks] crate tempfile contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-22T11:41:57Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:865:50: 865:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:868:9: 868:10 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:874:50: 874:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:877:9: 877:10 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2725:23: 2725:28 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2719:9: 2752:10 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2706:25: 2706:29 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2706:25: 2706:29 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2724:21: 2724:24 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2719:9: 2752:10 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-22T11:41:57Z WARN  lockbud::callbacks] crate nix contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 8 }"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=kernel-hal, checker=SemverChecks\ntoolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_9/kern-crates/zcore-kernel-hal\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n\n\nstdout:\n\nstderr:\n     Parsing kernel-hal v0.1.0 (current)\nerror: running cargo-doc on crate kernel-hal failed with output:\n-----\n   Compiling autocfg v1.4.0\n   Compiling crossbeam-utils v0.8.20\n    Checking pin-project-lite v0.2.15\n    Checking bitflags v1.3.2\n    Checking bitflags v2.6.0\n    Checking bit_field v0.10.2\n    Checking parking v2.2.1\n    Checking value-bag v1.10.0\n   Compiling proc-macro2 v1.0.92\n    Checking log v0.4.22\n    Checking fastrand v2.2.0\n    Checking futures-core v0.3.31\n   Compiling lock_api v0.4.12\n   Compiling unicode-ident v1.0.14\n    Checking concurrent-queue v2.5.0\n    Checking scopeguard v1.2.0\n    Checking futures-io v0.3.31\n    Checking event-listener v5.3.1\n   Compiling rustix v0.38.41\n    Checking cfg-if v1.0.0\n    Checking event-listener-strategy v0.5.2\n   Compiling slab v0.4.9\n    Checking linux-raw-sys v0.4.14\n   Compiling quote v1.0.37\n   Compiling rustversion v1.0.18\n    Checking spin v0.9.8\n    Checking futures-lite v2.5.0\n   Compiling num-traits v0.2.19\n   Compiling az v1.2.1\n   Compiling version-compare v0.0.10\n    Checking tracing-core v0.1.33\n   Compiling cfg-if v0.1.10\n   Compiling libc v0.2.167\n    Checking tracing v0.1.41\n   Compiling sdl2-sys v0.34.5\n    Checking raw-cpuid v10.7.0\n    Checking async-task v4.7.1\n    Checking atomic-waker v1.1.2\n    Checking volatile v0.4.6\n    Checking nb v1.1.0\n    Checking byteorder v1.5.0\n    Checking nb v0.1.3\n    Checking piper v0.2.4\n    Checking x86_64 v0.14.13\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate kernel-hal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_9/kern-crates/zcore-kernel-hal --no-default-features --features allwinner-drivers,async-std,bitmap-allocator,board-c910light,board-qemu,default,fu740-drivers,graphic,libos,link-user-img,loopback,nix,no-pci,tempfile,thead-maee &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate kernel-hal v0.1.0\n"]}},{"file":"src/bare/arch/riscv/trap.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_9/kern-crates/zcore-kernel-hal/src/bare/arch/riscv/trap.rs (original lines from 54 to 54)\n-        other => panic!(\"Undefined trap: {:x?} = {:#x}\\n{:#x?}\", other, scause.bits(), tf),\n+        other => panic!(\n+            \"Undefined trap: {:x?} = {:#x}\\n{:#x?}\",\n+            other,\n+            scause.bits(),\n+            tf\n+        ),\n"]}},{"file":"src/common/future.rs","count":1,"kinds":{"Clippy(Error)":["error: usage of a legacy numeric method\n  --> src/common/future.rs:47:44\n   |\n47 |         if self.deadline.as_nanos() < i64::max_value() as u128 {\n   |                                            ^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: `#[deny(clippy::legacy_numeric_constants)]` implied by `#[deny(warnings)]`\nhelp: use the associated constant instead\n   |\n47 |         if self.deadline.as_nanos() < i64::MAX as u128 {\n   |                                            ~~~\n\n"]}},{"file":"src/common/vdso.rs","count":1,"kinds":{"Clippy(Error)":["error: first doc comment paragraph is too long\n --> src/common/vdso.rs:4:1\n  |\n4 | / /// This struct contains constants that are initialized by the kernel\n5 | | /// once at boot time.  From the vDSO code's perspective, they are\n6 | | /// read-only data that can never change.  Hence, no synchronization is\n7 | | /// required to read them.\n  | |_\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n  = note: `#[deny(clippy::too_long_first_doc_paragraph)]` implied by `#[deny(warnings)]`\n\n"]}},{"file":"src/lib.rs","count":1,"kinds":{"Clippy(Error)":["error: private item shadows public glob re-export\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\n   |\nnote: the name `config` in the type namespace is supposed to be publicly re-exported here\n  --> src/lib.rs:49:5\n   |\n49 |     *,\n   |     ^\nnote: but the private item here shadows it\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\nnote: the lint level is defined here\n  --> src/lib.rs:9:9\n   |\n9  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(hidden_glob_reexports)]` implied by `#[deny(warnings)]`\n\n"]}},{"file":"src/libos/mem.rs","count":1,"kinds":{"Clippy(Error)":["error: a `Vec` of `Range` that is only one element\n  --> src/libos/mem.rs:35:13\n   |\n35 |             vec![PAGE_SIZE..PMEM_SIZE]\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_range_in_vec_init\n   = note: `#[deny(clippy::single_range_in_vec_init)]` implied by `#[deny(warnings)]`\nhelp: if you wanted a `Vec` that contains the entire range, try\n   |\n35 |             (PAGE_SIZE..PMEM_SIZE).collect::<std::vec::Vec<usize>>()\n   |\n\n"]}},{"file":"src/utils/lazy_init.rs","count":1,"kinds":{"Clippy(Error)":["error: you should consider adding a `Default` implementation for `LazyInit<T>`\n  --> src/utils/lazy_init.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             inited: AtomicBool::new(false),\n20 | |             data: UnsafeCell::new(MaybeUninit::uninit()),\n21 | |         }\n22 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[deny(clippy::new_without_default)]` implied by `#[deny(warnings)]`\nhelp: try adding this\n   |\n16 + impl<T> Default for LazyInit<T> {\n17 +     fn default() -> Self {\n18 +         Self::new()\n19 +     }\n20 + }\n   |\n\n"]}}]},{"user":"kern-crates","repo":"zcore-drivers","pkg":"zcore-drivers","count":22,"raw_reports":[{"file":"src/nvme/interface.rs","count":5,"kinds":{"Clippy(Error)":["error: transmute used without annotations\n   --> src/nvme/interface.rs:108:46\n    |\n108 |         let common_cmd = unsafe { core::mem::transmute(cmd) };\n    |                                              ^^^^^^^^^ help: consider adding missing annotations: `transmute::<nvme::interface::NvmeIdentify, nvme::interface::NvmeCommonCommand>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n    = note: `#[deny(clippy::missing_transmute_annotations)]` implied by `#[deny(warnings)]`\n\n","error: transmute used without annotations\n   --> src/nvme/interface.rs:174:46\n    |\n174 |         let common_cmd = unsafe { core::mem::transmute(cmd) };\n    |                                              ^^^^^^^^^ help: consider adding missing annotations: `transmute::<nvme::interface::NvmeCreateCq, nvme::interface::NvmeCommonCommand>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n","error: transmute used without annotations\n   --> src/nvme/interface.rs:207:46\n    |\n207 |         let common_cmd = unsafe { core::mem::transmute(cmd) };\n    |                                              ^^^^^^^^^ help: consider adding missing annotations: `transmute::<nvme::interface::NvmeCreateSq, nvme::interface::NvmeCommonCommand>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n","error: transmute used without annotations\n   --> src/nvme/interface.rs:268:46\n    |\n268 |         let common_cmd = unsafe { core::mem::transmute(cmd) };\n    |                                              ^^^^^^^^^ help: consider adding missing annotations: `transmute::<nvme::interface::NvmeRWCommand, nvme::interface::NvmeCommonCommand>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n","error: transmute used without annotations\n   --> src/nvme/interface.rs:321:46\n    |\n321 |         let common_cmd = unsafe { core::mem::transmute(cmd) };\n    |                                              ^^^^^^^^^ help: consider adding missing annotations: `transmute::<nvme::interface::NvmeRWCommand, nvme::interface::NvmeCommonCommand>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n"]}},{"file":"src/scheme/display.rs","count":4,"kinds":{"Clippy(Error)":["error: the following explicit lifetimes could be elided: 'a\n   --> src/scheme/display.rs:141:6\n    |\n141 | impl<'a> core::ops::Deref for FrameBuffer<'a> {\n    |      ^^                                   ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n141 - impl<'a> core::ops::Deref for FrameBuffer<'a> {\n141 + impl core::ops::Deref for FrameBuffer<'_> {\n    |\n\n","error: the following explicit lifetimes could be elided: 'a\n   --> src/scheme/display.rs:141:6\n    |\n141 | impl<'a> core::ops::Deref for FrameBuffer<'a> {\n    |      ^^                                   ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n141 - impl<'a> core::ops::Deref for FrameBuffer<'a> {\n141 + impl core::ops::Deref for FrameBuffer<'_> {\n    |\n\n","error: the following explicit lifetimes could be elided: 'a\n   --> src/scheme/display.rs:148:6\n    |\n148 | impl<'a> core::ops::DerefMut for FrameBuffer<'a> {\n    |      ^^                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n148 - impl<'a> core::ops::DerefMut for FrameBuffer<'a> {\n148 + impl core::ops::DerefMut for FrameBuffer<'_> {\n    |\n\n","error: the following explicit lifetimes could be elided: 'a\n   --> src/scheme/display.rs:148:6\n    |\n148 | impl<'a> core::ops::DerefMut for FrameBuffer<'a> {\n    |      ^^                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n148 - impl<'a> core::ops::DerefMut for FrameBuffer<'a> {\n148 + impl core::ops::DerefMut for FrameBuffer<'_> {\n    |\n\n"]}},{"file":"src/input/mouse.rs","count":2,"kinds":{"Clippy(Error)":["error: clamp-like pattern without using clamp function\n  --> src/input/mouse.rs:38:18\n   |\n38 |         let dx = self.dx.max(-127).min(127);\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `self.dx.clamp(-127, 127)`\n   |\n   = note: clamp will panic if max < min\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_clamp\n   = note: `#[deny(clippy::manual_clamp)]` implied by `#[deny(warnings)]`\n\n","error: clamp-like pattern without using clamp function\n  --> src/input/mouse.rs:39:18\n   |\n39 |         let dy = self.dy.max(-127).min(127);\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `self.dy.clamp(-127, 127)`\n   |\n   = note: clamp will panic if max < min\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_clamp\n\n"]}},{"file":"src/irq/x86_apic/ioapic.rs","count":2,"kinds":{"Clippy(Error)":["error: the following explicit lifetimes could be elided: 'a\n   --> src/irq/x86_apic/ioapic.rs:185:14\n    |\n185 |         impl<'a> fmt::Debug for RedirTable<'a> {\n    |              ^^                            ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[deny(clippy::needless_lifetimes)]` implied by `#[deny(warnings)]`\nhelp: elide the lifetimes\n    |\n185 -         impl<'a> fmt::Debug for RedirTable<'a> {\n185 +         impl fmt::Debug for RedirTable<'_> {\n    |\n\n","error: the following explicit lifetimes could be elided: 'a\n   --> src/irq/x86_apic/ioapic.rs:185:14\n    |\n185 |         impl<'a> fmt::Debug for RedirTable<'a> {\n    |              ^^                            ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[deny(clippy::needless_lifetimes)]` implied by `#[deny(warnings)]`\nhelp: elide the lifetimes\n    |\n185 -         impl<'a> fmt::Debug for RedirTable<'a> {\n185 +         impl fmt::Debug for RedirTable<'_> {\n    |\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=zcore-drivers, checker=Clippy\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_8/kern-crates/zcore-drivers\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling autocfg v1.4.0\n    Checking log v0.4.22\n   Compiling rustversion v1.0.18\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking bitflags v2.6.0\n   Compiling paste v1.0.15\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n    Checking spin v0.9.8\n    Checking rsdp v2.0.1\n    Checking cfg-if v1.0.0\n    Checking x86_64 v0.14.12\n    Checking bit v0.1.1\n    Checking byteorder v1.5.0\n    Checking managed v0.8.0\n    Checking volatile v0.3.0\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking acpi v4.1.1\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking numeric-enum-macro v0.2.0\n    Checking lazy_static v1.5.0\n    Checking x2apic v0.4.3\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking zcore-drivers v0.1.0 (/home/runner/check/batch_8/kern-crates/zcore-drivers)\nerror: could not compile `zcore-drivers` (lib) due to 13 previous errors\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=zcore-drivers, checker=Lockbud\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_8/kern-crates/zcore-drivers\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling autocfg v1.4.0\n   Compiling rustversion v1.0.18\n   Compiling log v0.4.22\n   Compiling scopeguard v1.2.0\n[2024-11-22T11:46:30Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:46:30Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling paste v1.0.15\n   Compiling bitflags v2.6.0\n   Compiling volatile v0.4.6\n   Compiling raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling spin v0.9.8\n   Compiling rsdp v2.0.1\n   Compiling x86_64 v0.14.12\n   Compiling bit v0.1.1\n   Compiling volatile v0.3.0\n   Compiling byteorder v1.5.0\n   Compiling managed v0.8.0\n   Compiling cfg-if v1.0.0\n   Compiling isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n   Compiling smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n   Compiling acpi v4.1.1\n   Compiling pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n   Compiling numeric-enum-macro v0.2.0\n   Compiling device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n   Compiling lazy_static v1.5.0\n   Compiling lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n   Compiling x2apic v0.4.3\n   Compiling zcore-drivers v0.1.0 (/home/runner/check/batch_8/kern-crates/zcore-drivers)\nerror: unexpected `cfg` condition value: `board_malta`\n  --> src/bus/pci.rs:56:7\n   |\n56 | #[cfg(feature = \"board_malta\")]\n   |       ^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `feature` are: `allwinner`, `async-std`, `board-qemu`, `d1-pac`, `fu740`, `graphic`, `loopback`, `mock`, `no-pci`, `rcore-console`, `sdl2`, `virtio`, and `virtio-drivers`\n   = help: consider adding `board_malta` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\nnote: the lint level is defined here\n  --> src/lib.rs:4:9\n   |\n4  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(unexpected_cfgs)]` implied by `#[deny(warnings)]`\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/irq/x86_apic/lapic.rs:16:9\n   |\n16 | /         LOCAL_APIC\n17 | |             .as_mut()\n   | |_____________________^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\n\nerror: could not compile `zcore-drivers` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rap","count":1,"kinds":{"Cargo":["// pkg_name=zcore-drivers, checker=Rap\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_8/kern-crates/zcore-drivers\n// cmd=cargo +nightly-2024-10-12 rap -F -M\n    Checking bit_field v0.10.2\n   Compiling autocfg v1.4.0\n    Checking bitflags v1.3.2\n    Checking log v0.4.22\n   Compiling rustversion v1.0.18\n    Checking scopeguard v1.2.0\n   Compiling paste v1.0.15\n    Checking volatile v0.4.6\n    Checking bitflags v2.6.0\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n    Checking rsdp v2.0.1\n    Checking x86_64 v0.14.12\n    Checking spin v0.9.8\n    Checking volatile v0.3.0\n    Checking bit v0.1.1\n    Checking cfg-if v1.0.0\n    Checking managed v0.8.0\n    Checking byteorder v1.5.0\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking acpi v4.1.1\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking lazy_static v1.5.0\n    Checking numeric-enum-macro v0.2.0\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking x2apic v0.4.3\n    Checking zcore-drivers v0.1.0 (/home/runner/check/batch_8/kern-crates/zcore-drivers)\nerror: unexpected `cfg` condition value: `board_malta`\n  --> src/bus/pci.rs:56:7\n   |\n56 | #[cfg(feature = \"board_malta\")]\n   |       ^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `feature` are: `allwinner`, `async-std`, `board-qemu`, `d1-pac`, `fu740`, `graphic`, `loopback`, `mock`, `no-pci`, `rcore-console`, `sdl2`, `virtio`, and `virtio-drivers`\n   = help: consider adding `board_malta` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\nnote: the lint level is defined here\n  --> src/lib.rs:4:9\n   |\n4  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(unexpected_cfgs)]` implied by `#[deny(warnings)]`\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/irq/x86_apic/lapic.rs:16:9\n   |\n16 | /         LOCAL_APIC\n17 | |             .as_mut()\n   | |_____________________^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\n\nerror: could not compile `zcore-drivers` (lib) due to 2 previous errors\n11:46:47|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=zcore-drivers, checker=SemverChecks\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/zcore-drivers\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n     Parsing zcore-drivers v0.1.0 (current)\nerror: running cargo-doc on crate zcore-drivers failed with output:\n-----\n   Compiling autocfg v1.4.0\n   Compiling crossbeam-utils v0.8.20\n    Checking pin-project-lite v0.2.15\n    Checking parking v2.2.1\n    Checking value-bag v1.10.0\n    Checking bitflags v1.3.2\n    Checking bitflags v2.6.0\n    Checking bit_field v0.10.2\n    Checking log v0.4.22\n    Checking futures-core v0.3.31\n    Checking fastrand v2.2.0\n    Checking futures-io v0.3.31\n   Compiling proc-macro2 v1.0.92\n   Compiling rustix v0.38.41\n    Checking concurrent-queue v2.5.0\n   Compiling slab v0.4.9\n    Checking event-listener v5.3.1\n   Compiling lock_api v0.4.12\n   Compiling num-traits v0.2.19\n    Checking futures-lite v2.5.0\n   Compiling cfg-if v0.1.10\n    Checking event-listener-strategy v0.5.2\n    Checking linux-raw-sys v0.4.14\n    Checking tracing-core v0.1.33\n   Compiling az v1.2.1\n    Checking cfg-if v1.0.0\n   Compiling unicode-ident v1.0.14\n   Compiling rustversion v1.0.18\n   Compiling version-compare v0.0.10\n   Compiling sdl2-sys v0.34.5\n    Checking tracing v0.1.41\n    Checking scopeguard v1.2.0\n    Checking async-task v4.7.1\n   Compiling libc v0.2.167\n    Checking nb v1.1.0\n    Checking atomic-waker v1.1.2\n    Checking byteorder v1.5.0\n    Checking piper v0.2.4\n    Checking nb v0.1.3\n   Compiling quote v1.0.37\n    Checking async-lock v3.4.0\n    Checking async-channel v2.3.1\n   Compiling paste v1.0.15\n   Compiling riscv v0.8.0\n    Checking void v1.0.2\n    Checking volatile v0.4.6\n    Checking embedded-hal v0.2.7\n    Checking x86_64 v0.14.13\n    Checking blocking v1.6.1\n    Checking embedded-graphics-core v0.3.3\n    Checking float-cmp v0.8.0\n   Compiling vte_generate_state_changes v0.1.2\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n    Checking spin v0.9.8\n    Checking async-executor v1.13.1\n    Checking raw-cpuid v10.7.0\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate zcore-drivers v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_9/kern-crates/zcore-drivers --no-default-features --features allwinner,async-std,board-qemu,d1-pac,fu740,graphic,loopback,mock,no-pci,rcore-console,sdl2,virtio,virtio-drivers &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate zcore-drivers v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-22T11:46:30Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:46:30Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=zcore-drivers, checker=SemverChecks\ntoolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_9/kern-crates/zcore-drivers\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n\n\nstdout:\n\nstderr:\n     Parsing zcore-drivers v0.1.0 (current)\nerror: running cargo-doc on crate zcore-drivers failed with output:\n-----\n   Compiling autocfg v1.4.0\n   Compiling crossbeam-utils v0.8.20\n    Checking pin-project-lite v0.2.15\n    Checking parking v2.2.1\n    Checking value-bag v1.10.0\n    Checking bitflags v1.3.2\n    Checking bitflags v2.6.0\n    Checking bit_field v0.10.2\n    Checking log v0.4.22\n    Checking futures-core v0.3.31\n    Checking fastrand v2.2.0\n    Checking futures-io v0.3.31\n   Compiling proc-macro2 v1.0.92\n   Compiling rustix v0.38.41\n    Checking concurrent-queue v2.5.0\n   Compiling slab v0.4.9\n    Checking event-listener v5.3.1\n   Compiling lock_api v0.4.12\n   Compiling num-traits v0.2.19\n    Checking futures-lite v2.5.0\n   Compiling cfg-if v0.1.10\n    Checking event-listener-strategy v0.5.2\n    Checking linux-raw-sys v0.4.14\n    Checking tracing-core v0.1.33\n   Compiling az v1.2.1\n    Checking cfg-if v1.0.0\n   Compiling unicode-ident v1.0.14\n   Compiling rustversion v1.0.18\n   Compiling version-compare v0.0.10\n   Compiling sdl2-sys v0.34.5\n    Checking tracing v0.1.41\n    Checking scopeguard v1.2.0\n    Checking async-task v4.7.1\n   Compiling libc v0.2.167\n    Checking nb v1.1.0\n    Checking atomic-waker v1.1.2\n    Checking byteorder v1.5.0\n    Checking piper v0.2.4\n    Checking nb v0.1.3\n   Compiling quote v1.0.37\n    Checking async-lock v3.4.0\n    Checking async-channel v2.3.1\n   Compiling paste v1.0.15\n   Compiling riscv v0.8.0\n    Checking void v1.0.2\n    Checking volatile v0.4.6\n    Checking embedded-hal v0.2.7\n    Checking x86_64 v0.14.13\n    Checking blocking v1.6.1\n    Checking embedded-graphics-core v0.3.3\n    Checking float-cmp v0.8.0\n   Compiling vte_generate_state_changes v0.1.2\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n    Checking spin v0.9.8\n    Checking async-executor v1.13.1\n    Checking raw-cpuid v10.7.0\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate zcore-drivers v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_9/kern-crates/zcore-drivers --no-default-features --features allwinner,async-std,board-qemu,d1-pac,fu740,graphic,loopback,mock,no-pci,rcore-console,sdl2,virtio,virtio-drivers &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate zcore-drivers v0.1.0\n"]}},{"file":"src/bus/pci.rs","count":1,"kinds":{"Clippy(Error)":["error: unexpected `cfg` condition value: `board_malta`\n  --> src/bus/pci.rs:56:7\n   |\n56 | #[cfg(feature = \"board_malta\")]\n   |       ^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `feature` are: `allwinner`, `async-std`, `board-qemu`, `d1-pac`, `fu740`, `graphic`, `loopback`, `mock`, `no-pci`, `rcore-console`, `sdl2`, `virtio`, and `virtio-drivers`\n   = help: consider adding `board_malta` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\nnote: the lint level is defined here\n  --> src/lib.rs:4:9\n   |\n4  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(unexpected_cfgs)]` implied by `#[deny(warnings)]`\n\n"]}},{"file":"src/irq/x86_apic/lapic.rs","count":1,"kinds":{"Clippy(Error)":["error: creating a mutable reference to mutable static is discouraged\n  --> src/irq/x86_apic/lapic.rs:16:9\n   |\n16 | /         LOCAL_APIC\n17 | |             .as_mut()\n   | |_____________________^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\n\n"]}},{"file":"src/utils/devicetree.rs","count":1,"kinds":{"Clippy(Error)":["error: parameter is only used in recursion\n  --> src/utils/devicetree.rs:47:23\n   |\n47 |     fn walk_inner<F>(&self, node: &Node, props: InheritProps, device_node_op: &mut F)\n   |                       ^^^^\n   |\nnote: parameter used here\n  --> src/utils/devicetree.rs:64:13\n   |\n64 |             self.walk_inner(child, props, device_node_op);\n   |             ^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\n   = note: `#[deny(clippy::only_used_in_recursion)]` implied by `#[deny(warnings)]`\n\n"]}}]},{"user":"kern-crates","repo":"zCore","pkg":"zircon-user","count":10,"raw_reports":[{"file":"(virtual) outdated","count":3,"kinds":{"Cargo":["// pkg_name=zircon-user, checker=Outdated\n// toolchain=nightly-2022-01-20, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/zCore/zcore-zircon-user\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu outdated -R --exit-code=2\nwarning: `/home/runner/check/batch_9/kern-crates/zCore/zcore-zircon-user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: failed to run `rustc` to learn about target-specific information\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names -L ../prebuilt/zircon/x64 --target x86_64-fuchsia --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg` (exit status: 1)\n  --- stderr\n  error: Error loading target specification: Could not find specification for target \"x86_64-fuchsia\". Run `rustc --print target-list` for a list of built-in targets\n\n","// pkg_name=zircon-user, checker=Outdated\n// toolchain=nightly-2022-01-20, target=x86_64-unknown-uefi\n// pkg_dir=/home/runner/check/batch_9/kern-crates/zCore/zcore-zircon-user\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu outdated -R --exit-code=2\nwarning: `/home/runner/check/batch_9/kern-crates/zCore/zcore-zircon-user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: failed to run `rustc` to learn about target-specific information\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names -L ../prebuilt/zircon/x64 --target x86_64-fuchsia --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg` (exit status: 1)\n  --- stderr\n  error: Error loading target specification: Could not find specification for target \"x86_64-fuchsia\". Run `rustc --print target-list` for a list of built-in targets\n\n","// pkg_name=zircon-user, checker=Outdated\n// toolchain=nightly-2022-01-20, target=x86_64-unknown-linux-musl\n// pkg_dir=/home/runner/check/batch_9/kern-crates/zCore/zcore-zircon-user\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu outdated -R --exit-code=2\nwarning: `/home/runner/check/batch_9/kern-crates/zCore/zcore-zircon-user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: failed to run `rustc` to learn about target-specific information\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names -L ../prebuilt/zircon/x64 --target x86_64-fuchsia --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg` (exit status: 1)\n  --- stderr\n  error: Error loading target specification: Could not find specification for target \"x86_64-fuchsia\". Run `rustc --print target-list` for a list of built-in targets\n\n"]}},{"file":"src/bin/hello.rs","count":2,"kinds":{"Clippy(Error)":["error[E0463]: can't find crate for `std`\n  |\n  = note: the `x86_64-unknown-uefi` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-uefi`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n","error: cannot find macro `println` in this scope\n --> src/bin/hello.rs:2:5\n  |\n2 |     println!(\"Hello, zCore!\");\n  |     ^^^^^^^\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=zircon-user, checker=Clippy\n// toolchain=nightly-2022-01-20, target=x86_64-unknown-uefi\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zCore/zcore-zircon-user\n// cmd=cargo clippy --target x86_64-unknown-uefi --no-deps --message-format=json\n    Checking zircon-user v0.1.0 (/home/runner/check/batch_12/kern-crates/zCore/zcore-zircon-user)\nerror: could not compile `zircon-user` due to 4 previous errors\n"]}},{"file":"(virtual) geiger","count":1,"kinds":{"Cargo":["// pkg_name=zircon-user, checker=Geiger\n// toolchain=nightly-2022-01-20, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/zCore/zcore-zircon-user\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu geiger --output-format Ascii\nwarning: `/home/runner/check/batch_9/kern-crates/zCore/zcore-zircon-user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: `cargo metadata` exited with an error: warning: `/home/runner/check/batch_9/kern-crates/zCore/zcore-zircon-user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: failed to run `rustc` to learn about target-specific information\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names -L ../prebuilt/zircon/x64 --target x86_64-fuchsia --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg` (exit status: 1)\n  --- stderr\n  error: Error loading target specification: Could not find specification for target \"x86_64-fuchsia\". Run `rustc --print target-list` for a list of built-in targets\n\n\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=zircon-user, checker=Lockbud\n// toolchain=nightly-2022-01-20, target=x86_64-unknown-uefi\n// pkg_dir=/home/runner/check/batch_8/kern-crates/zCore/zcore-zircon-user\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-uefi\nwarning: `/home/runner/check/batch_8/kern-crates/zCore/zcore-zircon-user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/batch_8/kern-crates/zCore/zcore-zircon-user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\n   Compiling zircon-user v0.1.0 (/home/runner/check/batch_8/kern-crates/zCore/zcore-zircon-user)\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `x86_64-unknown-uefi` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-uefi`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `zircon-user` (bin \"hello\") due to 1 previous error\n"]}},{"file":"(virtual) rap","count":1,"kinds":{"Cargo":["// pkg_name=zircon-user, checker=Rap\n// toolchain=nightly-2022-01-20, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_8/kern-crates/zCore/zcore-zircon-user\n// cmd=cargo +nightly-2024-10-12 rap -F -M\nwarning: `/home/runner/check/batch_8/kern-crates/zCore/zcore-zircon-user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/batch_8/kern-crates/zCore/zcore-zircon-user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: failed to run `rustc` to learn about target-specific information\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.cargo/bin/cargo-rap /home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names -L ../prebuilt/zircon/x64 --target x86_64-fuchsia --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg` (exit status: 1)\n  --- stderr\n  error: Error loading target specification: Could not find specification for target \"x86_64-fuchsia\". Run `rustc --print target-list` for a list of built-in targets\n\n11:46:23|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"unkonwn-but-maybe-important","count":1,"kinds":{"Clippy(Error)":["error: requires `sized` lang_item\n\n"]}}]},{"user":"kern-crates","repo":"zCore","pkg":"rboot","count":8,"raw_reports":[{"file":"(virtual) lockbud","count":2,"kinds":{"Cargo":["// pkg_name=rboot, checker=Lockbud\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-uefi\n// pkg_dir=/home/runner/check/batch_8/kern-crates/zCore/rboot\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-uefi\nwarning: `/home/runner/check/batch_8/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/batch_8/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: \"/home/runner/.rustup/toolchains/nightly-2024-10-05-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/Cargo.lock\" does not exist, unable to build with the standard library, try:\n        rustup component add rust-src --toolchain nightly-2024-10-05-x86_64-unknown-linux-gnu\n","// pkg_name=rboot, checker=Lockbud\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-musl\n// pkg_dir=/home/runner/check/batch_8/kern-crates/zCore/rboot\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-musl\nwarning: `/home/runner/check/batch_8/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/batch_8/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: \"/home/runner/.rustup/toolchains/nightly-2024-10-05-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/Cargo.lock\" does not exist, unable to build with the standard library, try:\n        rustup component add rust-src --toolchain nightly-2024-10-05-x86_64-unknown-linux-gnu\n"]}},{"file":"(virtual) outdated","count":2,"kinds":{"Cargo":["// pkg_name=rboot, checker=Outdated\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-uefi\n// pkg_dir=/home/runner/check/batch_9/kern-crates/zCore/rboot\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu outdated -R --exit-code=2\nwarning: `/home/runner/check/batch_9/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: failed to parse lock file at: /home/runner/check/batch_9/kern-crates/zCore/rboot/Cargo.lock\n\nCaused by:\n  lock file version 4 requires `-Znext-lockfile-bump`\n","// pkg_name=rboot, checker=Outdated\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-musl\n// pkg_dir=/home/runner/check/batch_9/kern-crates/zCore/rboot\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu outdated -R --exit-code=2\nwarning: `/home/runner/check/batch_9/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: failed to parse lock file at: /home/runner/check/batch_9/kern-crates/zCore/rboot/Cargo.lock\n\nCaused by:\n  lock file version 4 requires `-Znext-lockfile-bump`\n"]}},{"file":"(virtual) semver-checks","count":2,"kinds":{"Cargo":["// pkg_name=rboot, checker=SemverChecks\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-uefi\n// pkg_dir=/home/runner/check/batch_9/kern-crates/zCore/rboot\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-uefi\nwarning: `/home/runner/check/batch_9/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\n     Parsing rboot v0.1.6 (current)\nerror: running cargo-doc on crate rboot failed with output:\n-----\nwarning: `/home/runner/check/batch_9/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-uefi --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___.efi\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\npacked\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"uefi\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate rboot v0.1.6\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_9/kern-crates/zCore/rboot --no-default-features --features default,rboot,uefi-services &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rboot v0.1.6\n","// pkg_name=rboot, checker=SemverChecks\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-musl\n// pkg_dir=/home/runner/check/batch_9/kern-crates/zCore/rboot\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-musl\nwarning: `/home/runner/check/batch_9/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\n     Parsing rboot v0.1.6 (current)\nerror: running cargo-doc on crate rboot failed with output:\n-----\nwarning: `/home/runner/check/batch_9/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-linux-musl --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\nlib___.so\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\npacked\nunpacked\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"unwind\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"musl\"\ntarget_family=\"unix\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"sse\"\ntarget_feature=\"sse2\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"linux\"\ntarget_pointer_width=\"64\"\ntarget_thread_local\ntarget_vendor=\"unknown\"\nub_checks\nunix\n\n\n-----\n\nerror: failed to build rustdoc for crate rboot v0.1.6\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_9/kern-crates/zCore/rboot --no-default-features --features default,rboot,uefi-services &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rboot v0.1.6\n"]}},{"file":"[semver checks]","count":2,"kinds":{"Semver Violation":["pkg=rboot, checker=SemverChecks\ntoolchain=nightly-2022-10-27, target=x86_64-unknown-uefi\npkg_dir=/home/runner/check/batch_9/kern-crates/zCore/rboot\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-uefi\n\n\nstdout:\n\nstderr:\nwarning: `/home/runner/check/batch_9/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\n     Parsing rboot v0.1.6 (current)\nerror: running cargo-doc on crate rboot failed with output:\n-----\nwarning: `/home/runner/check/batch_9/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-uefi --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___.efi\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\npacked\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"uefi\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate rboot v0.1.6\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_9/kern-crates/zCore/rboot --no-default-features --features default,rboot,uefi-services &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rboot v0.1.6\n","pkg=rboot, checker=SemverChecks\ntoolchain=nightly-2022-10-27, target=x86_64-unknown-linux-musl\npkg_dir=/home/runner/check/batch_9/kern-crates/zCore/rboot\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-musl\n\n\nstdout:\n\nstderr:\nwarning: `/home/runner/check/batch_9/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\n     Parsing rboot v0.1.6 (current)\nerror: running cargo-doc on crate rboot failed with output:\n-----\nwarning: `/home/runner/check/batch_9/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-linux-musl --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\nlib___.so\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\npacked\nunpacked\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"unwind\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"musl\"\ntarget_family=\"unix\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"sse\"\ntarget_feature=\"sse2\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"linux\"\ntarget_pointer_width=\"64\"\ntarget_thread_local\ntarget_vendor=\"unknown\"\nub_checks\nunix\n\n\n-----\n\nerror: failed to build rustdoc for crate rboot v0.1.6\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_9/kern-crates/zCore/rboot --no-default-features --features default,rboot,uefi-services &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rboot v0.1.6\n"]}}]},{"user":"kern-crates","repo":"zCore","pkg":"uart","count":4,"raw_reports":[{"file":"(virtual) lockbud","count":3,"kinds":{"Cargo":["// pkg_name=uart, checker=Lockbud\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_8/kern-crates/zCore/zcore-tests/testcases/src/uart\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling libc v0.2.164\n   Compiling cfg_aliases v0.2.1\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v2.6.0\n   Compiling nix v0.29.0\n   Compiling uart v0.1.0 (/home/runner/check/batch_8/kern-crates/zCore/zcore-tests/testcases/src/uart)\nerror[E0432]: unresolved imports `nix::fcntl::open`, `nix::fcntl::OFlag`, `nix::sys::stat`\n   --> src/main.rs:2:13\n    |\n2   |     fcntl::{open, OFlag},\n    |             ^^^^  ^^^^^ no `OFlag` in `fcntl`\n    |             |\n    |             no `open` in `fcntl`\n3   |     sys::stat::Mode,\n    |          ^^^^ could not find `stat` in `sys`\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/fcntl.rs:220:8\n    |\n220 | pub fn open<P: ?Sized + NixPath>(\n    |        ^^^^\nnote: the item is gated behind the `fs` feature\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/fcntl.rs:212:4\n    |\n212 | #![feature = \"fs\"]\n    |    ^^^^^^^\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/sys/mod.rs:128:13\n    |\n128 |     pub mod stat;\n    |             ^^^^\nnote: the item is gated behind the `fs` feature\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/sys/mod.rs:126:8\n    |\n126 |     #![feature = \"fs\"]\n    |        ^^^^^^^\n\nFor more information about this error, try `rustc --explain E0432`.\nerror: could not compile `uart` (bin \"uart\") due to 1 previous error\n","// pkg_name=uart, checker=Lockbud\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-uefi\n// pkg_dir=/home/runner/check/batch_8/kern-crates/zCore/zcore-tests/testcases/src/uart\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-uefi\n   Compiling libc v0.2.164\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v2.6.0\n   Compiling nix v0.29.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `x86_64-unknown-uefi` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-uefi`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `libc` (lib) due to 1 previous error\n","// pkg_name=uart, checker=Lockbud\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-musl\n// pkg_dir=/home/runner/check/batch_8/kern-crates/zCore/zcore-tests/testcases/src/uart\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-musl\n   Compiling libc v0.2.164\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v2.6.0\n   Compiling nix v0.29.0\n   Compiling uart v0.1.0 (/home/runner/check/batch_8/kern-crates/zCore/zcore-tests/testcases/src/uart)\nerror[E0432]: unresolved imports `nix::fcntl::open`, `nix::fcntl::OFlag`, `nix::sys::stat`\n   --> src/main.rs:2:13\n    |\n2   |     fcntl::{open, OFlag},\n    |             ^^^^  ^^^^^ no `OFlag` in `fcntl`\n    |             |\n    |             no `open` in `fcntl`\n3   |     sys::stat::Mode,\n    |          ^^^^ could not find `stat` in `sys`\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/fcntl.rs:220:8\n    |\n220 | pub fn open<P: ?Sized + NixPath>(\n    |        ^^^^\nnote: the item is gated behind the `fs` feature\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/fcntl.rs:212:4\n    |\n212 | #![feature = \"fs\"]\n    |    ^^^^^^^\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/sys/mod.rs:128:13\n    |\n128 |     pub mod stat;\n    |             ^^^^\nnote: the item is gated behind the `fs` feature\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/sys/mod.rs:126:8\n    |\n126 |     #![feature = \"fs\"]\n    |        ^^^^^^^\n\nFor more information about this error, try `rustc --explain E0432`.\nerror: could not compile `uart` (bin \"uart\") due to 1 previous error\n"]}},{"file":"(virtual) rap","count":1,"kinds":{"Cargo":["// pkg_name=uart, checker=Rap\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_8/kern-crates/zCore/zcore-tests/testcases/src/uart\n// cmd=cargo +nightly-2024-10-12 rap -F -M\n   Compiling cfg_aliases v0.2.1\n   Compiling libc v0.2.164\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling nix v0.29.0\n    Checking uart v0.1.0 (/home/runner/check/batch_8/kern-crates/zCore/zcore-tests/testcases/src/uart)\nerror[E0432]: unresolved imports `nix::fcntl::open`, `nix::fcntl::OFlag`, `nix::sys::stat`\n   --> src/main.rs:2:13\n    |\n2   |     fcntl::{open, OFlag},\n    |             ^^^^  ^^^^^ no `OFlag` in `fcntl`\n    |             |\n    |             no `open` in `fcntl`\n3   |     sys::stat::Mode,\n    |          ^^^^ could not find `stat` in `sys`\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/fcntl.rs:220:8\n    |\n220 | pub fn open<P: ?Sized + NixPath>(\n    |        ^^^^\nnote: the item is gated behind the `fs` feature\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/fcntl.rs:212:4\n    |\n212 | #![feature = \"fs\"]\n    |    ^^^^^^^\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/sys/mod.rs:128:13\n    |\n128 |     pub mod stat;\n    |             ^^^^\nnote: the item is gated behind the `fs` feature\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/sys/mod.rs:126:8\n    |\n126 |     #![feature = \"fs\"]\n    |        ^^^^^^^\n\nFor more information about this error, try `rustc --explain E0432`.\nerror: could not compile `uart` (bin \"uart\") due to 1 previous error\n11:46:17|RAP|ERROR|: Finished with non-zero exit code.\n"]}}]},{"user":"kern-crates","repo":"virtio-input-decoder","pkg":"virtio-input-decoder","count":4,"raw_reports":[{"file":"src/decoder.rs","count":2,"kinds":{"Clippy(Warn)":["warning: this returns a `Result<_, ()>`\n  --> src/decoder.rs:13:5\n   |\n13 |     pub fn decode(etype: usize, code: usize, value: isize) -> Result<DecodeType, ()> {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: use a custom `Error` type instead\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_unit_err\n   = note: `#[warn(clippy::result_unit_err)]` on by default\n\n","warning: this returns a `Result<_, ()>`\n  --> src/decoder.rs:34:5\n   |\n34 |     pub fn convert_key(key: Key) -> Result<char, ()> {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: use a custom `Error` type instead\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_unit_err\n\n"]}},{"file":"src/key.rs","count":2,"kinds":{"Clippy(Warn)":["warning: this returns a `Result<_, ()>`\n   --> src/key.rs:203:5\n    |\n203 |     pub fn from_code(code: usize) -> Result<Key, ()> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use a custom `Error` type instead\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_unit_err\n\n","warning: this returns a `Result<_, ()>`\n   --> src/key.rs:271:5\n    |\n271 |     pub fn to_char(&self) -> Result<char, ()> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use a custom `Error` type instead\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_unit_err\n\n"]}}]},{"user":"kern-crates","repo":"zcore-linux-syscall","pkg":"","count":1,"raw_reports":[{"file":"batch_9/kern-crates/zcore-linux-syscall","count":1,"kinds":{"Cargo":["\n   0: 无法解析 `batch_9/kern-crates/zcore-linux-syscall` 内的 Rust 项目布局\n   1: 无法读取 cargo metadata 的结果：`cargo metadata` exited with an error:     Updating crates.io index\n          Updating git repository `https://github.com/kern-crates/zcore-kernel-hal.git`\n          Updating git repository `https://github.com/kern-crates/zcore-linux-object.git`\n          Updating git repository `https://github.com/DeathWish5/kernel-sync`\n          Updating git repository `https://github.com/rcore-os/rcore-fs`\n          Updating git repository `https://github.com/kern-crates/zcore-zircon-object.git`\n          Updating git repository `https://github.com/smoltcp-rs/smoltcp`\n          Updating git repository `https://github.com/kern-crates/zcore-drivers.git`\n          Updating git repository `https://github.com/rcore-os/x86-smpboot`\n          Updating git repository `https://github.com/DeathWish5/PreemptiveScheduler`\n          Updating git repository `https://github.com/rust-embedded/riscv`\n          Updating git repository `https://github.com/rzswh/region-allocator`\n          Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n          Updating git repository `https://github.com/rcore-os/device_tree-rs`\n          Updating git repository `https://github.com/rcore-os/isomorphic_drivers`\n          Updating git repository `https://github.com/elliott10/pci-rs`\n          Updating git repository `https://github.com/rcore-os/virtio-drivers`\n          Updating git repository `https://github.com/pleasewhy/unicycle`\n          Updating git repository `https://github.com/pleasewhy/uniset`\n      error: failed to select a version for the requirement `funty = \"~1.2\"`\n      candidate versions found which didn't match: 3.0.0-rc2, 3.0.0-rc1, 2.0.0, ...\n      location searched: crates.io index\n      required by package `bitvec v0.22.0`\n          ... which satisfies dependency `bitvec = \"^0.22\"` of package `rcore-fs-sfs v0.1.0 (https://github.com/rcore-os/rcore-fs?rev=1a3246b#1a3246b1)`\n          ... which satisfies git dependency `rcore-fs-sfs` of package `linux-object v0.1.0 (https://github.com/kern-crates/zcore-linux-object.git?rev=1304b7e1#1304b7e1)`\n          ... which satisfies git dependency `linux-object` of package `linux-syscall v0.1.0 (/home/runner/check/batch_9/kern-crates/zcore-linux-syscall)`\n      if you are looking for the prerelease package it needs to be specified explicitly\n          funty = { version = \"3.0.0-rc2\" }\n   1: \n\nLocation:\n   src/layout/mod.rs:59\n\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ SPANTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n   0: os_checker::run_checker::try_new with user=\"kern-crates\" repo=\"zcore-linux-syscall\"\n      at src/run_checker/mod.rs:215\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets."]}}]},{"user":"kern-crates","repo":"r4l","pkg":"","count":1,"raw_reports":[{"file":"batch_9/kern-crates/r4l","count":1,"kinds":{"Cargo":["\n   0: 无法解析 `batch_9/kern-crates/r4l` 内的 Rust 项目布局\n   1: 无法读取 cargo metadata 的结果：`cargo metadata` exited with an error: error: current package believes it's in a workspace when it's not:\n      current:   /home/runner/check/batch_9/kern-crates/r4l/drivers/i2c/busses/i2c-designware/Cargo.toml\n      workspace: /home/runner/check/batch_9/kern-crates/r4l/Cargo.toml\n\n      this may be fixable by adding `drivers/i2c/busses/i2c-designware` to the `workspace.members` array of the manifest located at: /home/runner/check/batch_9/kern-crates/r4l/Cargo.toml\n      Alternatively, to keep it out of the workspace, add the package to the `workspace.exclude` array, or add an empty `[workspace]` table to the package's manifest.\n   1: \n\nLocation:\n   src/layout/mod.rs:59\n\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ SPANTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n   0: os_checker::run_checker::try_new with user=\"kern-crates\" repo=\"r4l\"\n      at src/run_checker/mod.rs:215\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets."]}}]},{"user":"kern-crates","repo":"zcore-linux-object","pkg":"","count":1,"raw_reports":[{"file":"batch_9/kern-crates/zcore-linux-object","count":1,"kinds":{"Cargo":["\n   0: 无法解析 `batch_9/kern-crates/zcore-linux-object` 内的 Rust 项目布局\n   1: 无法读取 cargo metadata 的结果：`cargo metadata` exited with an error:     Updating crates.io index\n          Updating git repository `https://github.com/kern-crates/zcore-kernel-hal.git`\n          Updating git repository `https://github.com/DeathWish5/kernel-sync`\n          Updating git repository `https://github.com/rcore-os/rcore-fs`\n          Updating git repository `https://github.com/smoltcp-rs/smoltcp`\n          Updating git repository `https://github.com/kern-crates/zcore-drivers.git`\n          Updating git repository `https://github.com/kern-crates/zcore-zircon-object.git`\n          Updating git repository `https://github.com/rcore-os/x86-smpboot`\n          Updating git repository `https://github.com/DeathWish5/PreemptiveScheduler`\n          Updating git repository `https://github.com/rust-embedded/riscv`\n          Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n          Updating git repository `https://github.com/rcore-os/device_tree-rs`\n          Updating git repository `https://github.com/rcore-os/isomorphic_drivers`\n          Updating git repository `https://github.com/elliott10/pci-rs`\n          Updating git repository `https://github.com/rcore-os/virtio-drivers`\n          Updating git repository `https://github.com/rzswh/region-allocator`\n          Updating git repository `https://github.com/pleasewhy/unicycle`\n          Updating git repository `https://github.com/pleasewhy/uniset`\n      error: failed to select a version for the requirement `funty = \"~1.2\"`\n      candidate versions found which didn't match: 3.0.0-rc2, 3.0.0-rc1, 2.0.0, ...\n      location searched: crates.io index\n      required by package `bitvec v0.22.0`\n          ... which satisfies dependency `bitvec = \"^0.22\"` of package `rcore-fs-sfs v0.1.0 (https://github.com/rcore-os/rcore-fs?rev=1a3246b#1a3246b1)`\n          ... which satisfies git dependency `rcore-fs-sfs` of package `linux-object v0.1.0 (/home/runner/check/batch_9/kern-crates/zcore-linux-object)`\n      if you are looking for the prerelease package it needs to be specified explicitly\n          funty = { version = \"3.0.0-rc2\" }\n   1: \n\nLocation:\n   src/layout/mod.rs:59\n\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ SPANTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n   0: os_checker::run_checker::try_new with user=\"kern-crates\" repo=\"zcore-linux-object\"\n      at src/run_checker/mod.rs:215\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets."]}}]},{"user":"kern-crates","repo":"test-test-repo","pkg":"","count":1,"raw_reports":[{"file":"batch_9/kern-crates/test-test-repo","count":1,"kinds":{"Cargo":["\n   0: 无法解析 `batch_9/kern-crates/test-test-repo` 内的 Rust 项目布局\n   1: repo_root `batch_9/kern-crates/test-test-repo` (规范路径为 `/home/runner/check/batch_9/kern-crates/test-test-repo`) 不是 Rust 项目，因为不包含任何 Cargo.toml\n\nLocation:\n   src/layout/mod.rs:136\n\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ SPANTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n   0: os_checker::run_checker::try_new with user=\"kern-crates\" repo=\"test-test-repo\"\n      at src/run_checker/mod.rs:215\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets."]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Semver Violation","Audit","Mirai","Rap","Rudra","Lockbud(Probably)","Lockbud(Possibly)","Outdated","Geiger","Unformatted"]}