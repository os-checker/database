{
  "data": [
    {
      "user": "os-checker",
      "repo": "os-checker-test-suite",
      "pkg": "atomvchecker-checks-this",
      "count": 27,
      "raw_reports": [
        {
          "file": "src/main.rs",
          "features": "",
          "count": 19,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/src/main.rs (original lines from 1 to 1)\n-use std::sync::atomic::Ordering::{Acquire, Release, Relaxed};\n",
              "file: /home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/src/main.rs (original lines from 3 to 3)\n-use std::{ptr, mem};\n+use std::sync::atomic::Ordering::{Acquire, Relaxed, Release};\n",
              "file: /home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/src/main.rs (original lines from 5 to 5)\n+use std::{mem, ptr};\n",
              "file: /home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/src/main.rs (original lines from 49 to 49)\n-        if let Payload::Data(_) = self.payload { true } else { false }\n+        if let Payload::Data(_) = self.payload {\n+            true\n+        } else {\n+            false\n+        }\n",
              "file: /home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/src/main.rs (original lines from 80 to 85)\n-    fn push_internal(&self,\n-                     guard: &epoch::Guard,\n-                     onto: Shared<Node<T>>,\n-                     n: Owned<Node<T>>)\n-                     -> Result<(), Owned<Node<T>>>\n-    {\n+    fn push_internal(\n+        &self,\n+        guard: &epoch::Guard,\n+        onto: Shared<Node<T>>,\n+        n: Owned<Node<T>>,\n+    ) -> Result<(), Owned<Node<T>>> {\n",
              "file: /home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/src/main.rs (original lines from 93 to 96)\n-            onto.next.cas_and_ref(None, n, Release, guard).map(|shared| {\n-                // try to move the tail pointer forward\n-                self.tail.cas_shared(Some(onto), Some(shared), Release);\n-            })\n+            onto.next\n+                .cas_and_ref(None, n, Release, guard)\n+                .map(|shared| {\n+                    // try to move the tail pointer forward\n+                    self.tail.cas_shared(Some(onto), Some(shared), Release);\n+                })\n",
              "file: /home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/src/main.rs (original lines from 114 to 120)\n-                    Cache::Data(t) => {\n-                        Owned::new(Node {\n-                            payload: Payload::Data(t),\n-                            next: Atomic::null()\n-                        })\n-                    }\n-                    Cache::Node(n) => n\n+                    Cache::Data(t) => Owned::new(Node {\n+                        payload: Payload::Data(t),\n+                        next: Atomic::null(),\n+                    }),\n+                    Cache::Node(n) => n,\n",
              "file: /home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/src/main.rs (original lines from 128 to 133)\n-                    Cache::Node(node) => {\n-                        match node.into_inner().payload {\n-                            Payload::Data(t) => t,\n-                            _ => unreachable!(),\n-                        }\n-                    }\n+                    Cache::Node(node) => match node.into_inner().payload {\n+                        Payload::Data(t) => t,\n+                        _ => unreachable!(),\n+                    },\n",
              "file: /home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/src/main.rs (original lines from 147 to 148)\n-            if tail.is_data() ||\n-                self.head.load(Relaxed, &guard).unwrap().as_raw() == tail.as_raw()\n+            if tail.is_data() || self.head.load(Relaxed, &guard).unwrap().as_raw() == tail.as_raw()\n",
              "file: /home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/src/main.rs (original lines from 165 to 166)\n-                let request = head.next.load(Acquire, &guard).and_then(|next| {\n-                    match next.payload {\n+                let request = head\n+                    .next\n+                    .load(Acquire, &guard)\n+                    .and_then(|next| match next.payload {\n",
              "file: /home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/src/main.rs (original lines from 169 to 170)\n-                    }\n-                });\n+                    });\n",
              "file: /home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/src/main.rs (original lines from 173 to 173)\n-                    if self.head.cas_shared(Some(head), Some(blocked_node), Release) {\n+                    if self\n+                        .head\n+                        .cas_shared(Some(head), Some(blocked_node), Release)\n+                    {\n",
              "file: /home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/src/main.rs (original lines from 287 to 287)\n-                if tail.is_data() && tail.as_raw() != head.as_raw() { continue; }\n+                if tail.is_data() && tail.as_raw() != head.as_raw() {\n+                    continue;\n+                }\n",
              "file: /home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/src/main.rs (original lines from 321 to 321)\n+\n"
            ],
            "Mirai": [
              "warning: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\n  --> src/main.rs:66:50\n   |\n66 |             payload: Payload::Data(unsafe { mem::uninitialized() }),\n   |                                                  ^^^^^^^^^^^^^\n   |\n   = note: `#[warn(deprecated)]` on by default\n\n"
            ],
            "Clippy(Warn)": [
              "warning: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\n  --> src/main.rs:66:50\n   |\n66 |             payload: Payload::Data(unsafe { mem::uninitialized() }),\n   |                                                  ^^^^^^^^^^^^^\n   |\n   = note: `#[warn(deprecated)]` on by default\n\n",
              "warning: if let .. else expression looks like `matches!` macro\n  --> src/main.rs:49:9\n   |\n49 |         if let Payload::Data(_) = self.payload { true } else { false }\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `matches!(self.payload, Payload::Data(_))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro\n   = note: `#[warn(clippy::match_like_matches_macro)]` on by default\n\n",
              "warning: you should consider adding a `Default` implementation for `MsQueue<T>`\n  --> src/main.rs:60:5\n   |\n60 | /     pub fn new() -> MsQueue<T> {\n61 | |         let q = MsQueue {\n62 | |             head: CachePadded::new(Atomic::null()),\n63 | |             tail: CachePadded::new(Atomic::null()),\n...  |\n72 | |         q\n73 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n58 + impl<T> Default for MsQueue<T> {\n59 +     fn default() -> Self {\n60 +         Self::new()\n61 +     }\n62 + }\n   |\n\n",
              "warning: if let .. else expression looks like `matches!` macro\n   --> src/main.rs:217:13\n    |\n217 | /             if let Payload::Data(_) = next.payload {\n218 | |                 false\n219 | |             } else {\n220 | |                 true\n221 | |             }\n    | |_____________^ help: try: `!matches!(next.payload, Payload::Data(_))`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro\n\n"
            ]
          }
        },
        {
          "file": "(virtual) geiger",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=atomvchecker-checks-this, checker=Geiger\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2025-06-28 10:25:00.432252245 +08:00:00\n     Removed 0 files\nwarning: atomvchecker-checks-this v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this) ignoring invalid dependency `scope` which is missing a lib target\n   Compiling memchr v2.5.0\n   Compiling cc v1.0.78\n   Compiling libc v0.2.139\n    Checking adler v1.0.2\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/build/memchr-166c41b25847c006/build_script_build-166c41b25847c006.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/adler-fdf39299470ac537.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/build/libc-0ff584f437c8ae74/build_script_build-0ff584f437c8ae74.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/cc-e113d91ac7ef53ff.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/libadler-fdf39299470ac537.rmeta\",\"emit\":\"metadata\"}\n    Checking gimli v0.27.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/build/memchr-166c41b25847c006/build_script_build-166c41b25847c006\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/build/libc-0ff584f437c8ae74/build_script_build-0ff584f437c8ae74\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/memchr-d78578b802053383.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/gimli-d0ac95b2e31a84f3.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/libc-2432bcc0716d1762.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/libmemchr-d78578b802053383.rmeta\",\"emit\":\"metadata\"}\n    Checking object v0.30.3\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/libcc-e113d91ac7ef53ff.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/object-247df4b33fe4f7b5.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/liblibc-2432bcc0716d1762.rmeta\",\"emit\":\"metadata\"}\n    Checking miniz_oxide v0.6.2\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/miniz_oxide-67543609143a3bef.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/libminiz_oxide-67543609143a3bef.rmeta\",\"emit\":\"metadata\"}\n    Checking cfg-if v1.0.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/cfg_if-ad924814d1857747.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/libcfg_if-ad924814d1857747.rmeta\",\"emit\":\"metadata\"}\n    Checking rustc-demangle v0.1.21\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/rustc_demangle-3f80cc49aa775289.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/libcc-e113d91ac7ef53ff.rlib\",\"emit\":\"link\"}\n   Compiling backtrace v0.3.67\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/build/backtrace-7e783032fd9f739e/build_script_build-7e783032fd9f739e.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/librustc_demangle-3f80cc49aa775289.rmeta\",\"emit\":\"metadata\"}\n    Checking byteorder v1.4.3\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/build/backtrace-7e783032fd9f739e/build_script_build-7e783032fd9f739e\",\"emit\":\"link\"}\n    Checking crossbeam v0.2.12\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/byteorder-4789733e3e1e5c9f.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/crossbeam-14ff231d9c1c719d.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/libbyteorder-4789733e3e1e5c9f.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/libcrossbeam-14ff231d9c1c719d.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/libgimli-d0ac95b2e31a84f3.rmeta\",\"emit\":\"metadata\"}\n    Checking addr2line v0.19.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/addr2line-84f5a62d406b9385.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/libaddr2line-84f5a62d406b9385.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/libobject-247df4b33fe4f7b5.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/backtrace-e92d5f1449f6a1e8.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/libbacktrace-e92d5f1449f6a1e8.rmeta\",\"emit\":\"metadata\"}\n    Checking error-chain v0.10.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/error_chain-af360c531fc17f77.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/liberror_chain-af360c531fc17f77.rmeta\",\"emit\":\"metadata\"}\n    Checking mem v0.5.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/mem-64d21ceb2488c9d9.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/libmem-64d21ceb2488c9d9.rmeta\",\"emit\":\"metadata\"}\n    Checking atomvchecker-checks-this v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/atomvchecker_checks_this-8689c9714121e5ec.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\",\"code\":{\"code\":\"deprecated\",\"explanation\":null},\"level\":\"warning\",\"spans\":[{\"file_name\":\"src/main.rs\",\"byte_start\":1981,\"byte_end\":1994,\"line_start\":66,\"line_end\":66,\"column_start\":50,\"column_end\":63,\"is_primary\":true,\"text\":[{\"text\":\"            payload: Payload::Data(unsafe { mem::uninitialized() }),\",\"highlight_start\":50,\"highlight_end\":63}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"`#[warn(deprecated)]` on by default\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[33mwarning\\u001b[0m\\u001b[0m\\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/main.rs:66:50\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m66\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m            payload: Payload::Data(unsafe { mem::uninitialized() }),\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                                                  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33m^^^^^^^^^^^^^\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: `#[warn(deprecated)]` on by default\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/debug/deps/libatomvchecker_checks_this-8689c9714121e5ec.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"1 warning emitted\",\"code\":null,\"level\":\"warning\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[33mwarning\\u001b[0m\\u001b[0m\\u001b[1m: 1 warning emitted\\u001b[0m\\n\\n\"}\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 2.49s\nFailed to parse file: /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-0.2.12/src/bin/bench.rs, Syn(Error(\"expected `:`\"), \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-0.2.12/src/bin/bench.rs\") \nFailed to parse file: /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mem-0.5.0/src/interface.rs, Syn(Error(\"expected `:`\"), \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mem-0.5.0/src/interface.rs\") \n    Scanning done\nWARNING: Dependency file was never scanned: /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mem-0.5.0/src/interface.rs\nerror: Found 1 warnings\n"
            ]
          }
        },
        {
          "file": "(virtual) rudra",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=atomvchecker-checks-this, checker=Rudra\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this\n// cmd=cargo +nightly-2021-10-21 rudra --target x86_64-unknown-linux-gnu \n// timestamp=2025-06-28 10:22:54.255196445 +08:00:00\nerror[E0425]: cannot find function `scope` in module `thread`\n   --> src/main.rs:313:13\n    |\n313 |     thread::scope(|s2| {\n    |             ^^^^^ not found in `thread`\n    |\nhelp: consider importing this function\n    |\n1   | use crossbeam::scope;\n    |\n\nwarning: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\n  --> src/main.rs:66:50\n   |\n66 |             payload: Payload::Data(unsafe { mem::uninitialized() }),\n   |                                                  ^^^^^^^^^^^^^\n   |\n   = note: `#[warn(deprecated)]` on by default\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `atomvchecker-checks-this` due to previous error; 1 warning emitted\n"
            ]
          }
        },
        {
          "file": "[AtomVChecker] memory ordering misuse detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Atomvchecker": [
              "[2025-06-28T02:22:27Z WARN  atomvchecker::callbacks] [\n      {\n        \"AtomicCorrelationViolation\": {\n          \"bug_kind\": \"AtomicCorrelationViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"atomic\": \"src/main.rs:298:41: 298:54\"\n          },\n          \"explanation\": \"Using an atomic operation with a weaker memory ordering than necessary can lead to an inconsistent memory state. Using Acquire is sufficient to ensure the program's correctness.\"\n        }\n      },\n      {\n        \"AtomicCorrelationViolation\": {\n          \"bug_kind\": \"AtomicCorrelationViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"atomic\": \"src/main.rs:177:45: 177:65\"\n          },\n          \"explanation\": \"Using an atomic operation with a weaker memory ordering than necessary can lead to an inconsistent memory state. Using Release is sufficient to ensure the program's correctness.\"\n        }\n      }\n    ]\n[2025-06-28T02:22:27Z WARN  atomvchecker::callbacks] crate atomvchecker_checks_this contains atomic_correlation_violation: { possibly: 2 }"
            ]
          }
        },
        {
          "file": "[Geiger] Unsafe code statistics",
          "features": "",
          "count": 1,
          "kinds": {
            "Geiger": [
              "pkg=atomvchecker-checks-this, checker=Geiger\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\ntimestamp=2025-06-28 10:25:05.442784475 +08:00:00\n\n\nMetric output format: x/y\n    x = unsafe code used by the build\n    y = total unsafe code found in the crate\n\nSymbols:\n    :) = No `unsafe` usage found, declares #![forbid(unsafe_code)]\n    ?  = No `unsafe` usage found, missing #![forbid(unsafe_code)]\n    !  = `unsafe` usage found\n\nFunctions  Expressions  Impls  Traits  Methods  Dependency\n\n0/0        29/29        2/2    0/0     0/0      !  atomvchecker-checks-this 0.1.0\n2/2        398/451      19/21  0/0     16/17    !  |-- crossbeam 0.2.12\n0/0        0/0          0/0    0/0     0/0      ?  `-- mem 0.5.0\n1/1        193/193      0/0    0/0     0/0      !      |-- byteorder 1.4.3\n0/0        0/0          0/0    0/0     0/0      ?      `-- error-chain 0.10.0\n7/22       214/785      2/6    0/0     2/5      !          `-- backtrace 0.3.67\n0/0        5/20         0/0    0/0     0/0      !              |-- addr2line 0.19.0\n1/1        38/57        1/3    1/1     0/0      !              |   |-- gimli 0.27.1\n0/0        24/26        0/0    1/1     0/0      !              |   |-- object 0.30.3\n20/37      1249/2029    0/0    0/0     21/21    !              |   |   `-- memchr 2.5.0\n0/24       12/444       0/2    0/0     2/45     !              |   |       `-- libc 0.2.139\n0/0        0/0          0/0    0/0     0/0      ?              |   `-- rustc-demangle 0.1.21\n0/0        0/0          0/0    0/0     0/0      ?              |-- cfg-if 1.0.0\n0/24       12/444       0/2    0/0     2/45     !              |-- libc 0.2.139\n0/0        0/0          0/0    0/0     0/0      :)             |-- miniz_oxide 0.6.2\n0/0        0/0          0/0    0/0     0/0      :)             |   `-- adler 1.0.2\n0/0        24/26        0/0    1/1     0/0      !              |-- object 0.30.3\n0/0        0/0          0/0    0/0     0/0      ?              `-- rustc-demangle 0.1.21\n\n31/87      2162/4034    24/34  2/2     41/88\n\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T02:22:11Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"mem::epoch::participant::Participant::exit\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-0.2.12/src/mem/epoch/participant.rs:78:25: 78:55 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-0.2.12/src/mem/epoch/participant.rs:79:9: 81:59 (#0)\",\n            \"dep_kind\": \"Data\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"mem::epoch::participant::Participant::enter\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-0.2.12/src/mem/epoch/participant.rs:61:25: 61:55 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-0.2.12/src/mem/epoch/participant.rs:62:9: 62:51 (#0)\",\n            \"dep_kind\": \"Data\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"mem::epoch::participant::Participant::enter\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-0.2.12/src/mem/epoch/participant.rs:68:28: 68:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-0.2.12/src/mem/epoch/participant.rs:69:13: 69:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T02:22:11Z WARN  lockbud::callbacks] crate crossbeam contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 3 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-06-28T02:22:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"symbolize::gimli::elf::debug_path_exists\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/backtrace-0.3.67/src/symbolize/gimli/elf.rs:287:30: 287:71 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/backtrace-0.3.67/src/symbolize/gimli/elf.rs:294:17: 294:67 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T02:22:13Z WARN  lockbud::callbacks] crate backtrace contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Rapx] memory safety detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Rapx": [
              "pkg=atomvchecker-checks-this, checker=Rapx\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this\ncmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-28 10:22:42.335012621 +08:00:00\n\nwarning: Double free detected.\n   --> src/main.rs:308:5\n    |\n308 |     }\n    |     - Double free detected.\n    |\n"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=atomvchecker-checks-this, checker=Udeps\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-28 10:25:33.840756289 +08:00:00\n\n\nstdout:\nunused dependencies:\n`atomvchecker-checks-this v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this)`\n└─── dependencies\n     └─── \"scope\"\nNote: These dependencies might be used by other targets.\n      To find dependencies that are not used by any target, enable `--all-targets`.\nNote: Some dependencies are non-library packages.\n      `cargo-udeps` regards them as unused.\nNote: They might be false-positive.\n      For example, `cargo-udeps` cannot detect usage of crates that are only used in doc-tests.\n      To ignore some dependencies, write `package.metadata.cargo-udeps.ignore` in Cargo.toml.\n\nstderr:\nwarning: atomvchecker-checks-this v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this) ignoring invalid dependency `scope` which is missing a lib target\nwarning: atomvchecker-checks-this v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this) ignoring invalid dependency `scope` which is missing a lib target\n   Compiling memchr v2.5.0\n   Compiling libc v0.2.139\n   Compiling cc v1.0.78\n    Checking adler v1.0.2\n    Checking gimli v0.27.1\n    Checking object v0.30.3\n    Checking miniz_oxide v0.6.2\n    Checking rustc-demangle v0.1.21\n    Checking cfg-if v1.0.0\n    Checking byteorder v1.4.3\n   Compiling backtrace v0.3.67\n    Checking crossbeam v0.2.12\n    Checking addr2line v0.19.0\n    Checking error-chain v0.10.0\n    Checking mem v0.5.0\n    Checking atomvchecker-checks-this v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this)\nwarning: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\n  --> src/main.rs:66:50\n   |\n66 |             payload: Payload::Data(unsafe { mem::uninitialized() }),\n   |                                                  ^^^^^^^^^^^^^\n   |\n   = note: `#[warn(deprecated)]` on by default\n\nwarning: `atomvchecker-checks-this` (bin \"atomvchecker-checks-this\") generated 1 warning\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 2.51s\ninfo: Loading depinfo from \"/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this/target/x86_64-unknown-linux-gnu/debug/deps/atomvchecker_checks_this-96a33dcde73917fb.d\"\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=atomvchecker-checks-this, checker=Outdated\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/atomvchecker-checks-this\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 10:24:56.57037279 +08:00:00\n\nName       Project  Compat  Latest  Kind    Platform\n----       -------  ------  ------  ----    --------\ncrossbeam  0.2.12   ---     0.8.4   Normal  ---\n"
            ]
          }
        }
      ]
    },
    {
      "user": "os-checker",
      "repo": "os-checker-test-suite",
      "pkg": "rudra-checks-this",
      "count": 16,
      "raw_reports": [
        {
          "file": "rudra-checks-this/src/vec_push_all.rs",
          "features": "",
          "count": 7,
          "kinds": {
            "Clippy(Error)": [
              "error: calling `set_len()` immediately after reserving a buffer creates uninitialized values\n  --> rudra-checks-this/src/vec_push_all.rs:13:9\n   |\n13 |         self.0.reserve(to_push.len());\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n...\n16 |             self.0.set_len(self.0.len() + to_push.len());\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: initialize the buffer or wrap the content in `MaybeUninit`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninit_vec\n   = note: `#[deny(clippy::uninit_vec)]` on by default\n\n",
              "error: calling `set_len()` immediately after reserving a buffer creates uninitialized values\n  --> rudra-checks-this/src/vec_push_all.rs:13:9\n   |\n13 |         self.0.reserve(to_push.len());\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n...\n16 |             self.0.set_len(self.0.len() + to_push.len());\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: initialize the buffer or wrap the content in `MaybeUninit`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninit_vec\n   = note: `#[deny(clippy::uninit_vec)]` on by default\n\n"
            ],
            "Clippy(Warn)": [
              "warning: struct `MyVec` is never constructed\n --> rudra-checks-this/src/vec_push_all.rs:8:12\n  |\n8 | pub struct MyVec<T>(Vec<T>);\n  |            ^^^^^\n\n",
              "warning: method `push_all` is never used\n  --> rudra-checks-this/src/vec_push_all.rs:12:8\n   |\n10 | impl<T: Clone> MyVec<T> {\n   | ----------------------- method in this implementation\n11 |     // Example from: https://doc.rust-lang.org/nomicon/exception-safety.html#vecpush_all\n12 |     fn push_all(&mut self, to_push: &[T]) {\n   |        ^^^^^^^^\n\n",
              "warning: use of `offset` with a `usize` casted to an `isize`\n  --> rudra-checks-this/src/vec_push_all.rs:20:17\n   |\n20 |                 self.0.as_mut_ptr().offset(i as isize).write(x.clone());\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.0.as_mut_ptr().add(i)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n   = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
            ],
            "Mirai": [
              "warning: struct `MyVec` is never constructed\n --> rudra-checks-this/src/vec_push_all.rs:8:12\n  |\n8 | pub struct MyVec<T>(Vec<T>);\n  |            ^^^^^\n\n",
              "warning: method `push_all` is never used\n  --> rudra-checks-this/src/vec_push_all.rs:12:8\n   |\n10 | impl<T: Clone> MyVec<T> {\n   | ----------------------- method in this implementation\n11 |     // Example from: https://doc.rust-lang.org/nomicon/exception-safety.html#vecpush_all\n12 |     fn push_all(&mut self, to_push: &[T]) {\n   |        ^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "rudra-checks-this/src/order_unsafe.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: function `test_order_unsafe` is never used\n  --> rudra-checks-this/src/order_unsafe.rs:10:4\n   |\n10 | fn test_order_unsafe<I: Iterator<Item = impl Debug>>(mut iter: I) {\n   |    ^^^^^^^^^^^^^^^^^\n\n"
            ],
            "Mirai": [
              "warning: function `test_order_unsafe` is never used\n  --> rudra-checks-this/src/order_unsafe.rs:10:4\n   |\n10 | fn test_order_unsafe<I: Iterator<Item = impl Debug>>(mut iter: I) {\n   |    ^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "rudra-checks-this/src/wild_send.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Mirai": [
              "warning: struct `Atom` is never constructed\n --> rudra-checks-this/src/wild_send.rs:8:8\n  |\n8 | struct Atom<P>(P);\n  |        ^^^^\n\n"
            ],
            "Clippy(Warn)": [
              "warning: struct `Atom` is never constructed\n --> rudra-checks-this/src/wild_send.rs:8:8\n  |\n8 | struct Atom<P>(P);\n  |        ^^^^\n\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rudra-checks-this, checker=Clippy\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/rudra-checks-this\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-06-28 10:21:45.009143739 +08:00:00\nwarning: /home/runner/check/batch_1/os-checker/os-checker-test-suite/miri-checks-this/Cargo.toml: no edition set: defaulting to the 2015 edition while the latest is 2024\n    Checking rudra-checks-this v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/rudra-checks-this)\nerror: could not compile `rudra-checks-this` (lib) due to 1 previous error; 6 warnings emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rudra-checks-this, checker=SemverChecks\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/rudra-checks-this\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-06-28 10:21:52.600351997 +08:00:00\n    Building rudra-checks-this v0.1.0 (current)\n       Built [   0.295s] (current)\n     Parsing rudra-checks-this v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: rudra-checks-this not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[Geiger] Unsafe code statistics",
          "features": "",
          "count": 1,
          "kinds": {
            "Geiger": [
              "pkg=rudra-checks-this, checker=Geiger\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/rudra-checks-this\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\ntimestamp=2025-06-28 10:25:07.002987702 +08:00:00\n\n\nMetric output format: x/y\n    x = unsafe code used by the build\n    y = total unsafe code found in the crate\n\nSymbols:\n    :) = No `unsafe` usage found, declares #![forbid(unsafe_code)]\n    ?  = No `unsafe` usage found, missing #![forbid(unsafe_code)]\n    !  = `unsafe` usage found\n\nFunctions  Expressions  Impls  Traits  Methods  Dependency\n\n0/0        21/21        1/1    0/0     0/0      !  rudra-checks-this 0.1.0\n\n0/0        21/21        1/1    0/0     0/0\n\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=rudra-checks-this, checker=SemverChecks\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/rudra-checks-this\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-28 10:21:53.373488132 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building rudra-checks-this v0.1.0 (current)\n       Built [   0.295s] (current)\n     Parsing rudra-checks-this v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: rudra-checks-this not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "rudra-checks-this/src/fp1.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: struct `Leak` is never constructed\n --> rudra-checks-this/src/fp1.rs:8:12\n  |\n8 | pub struct Leak<'a> {\n  |            ^^^^\n  |\n  = note: `#[warn(dead_code)]` on by default\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "os-checker",
      "repo": "os-checker-test-suite",
      "pkg": "ws-lockbud-checks-this1",
      "count": 16,
      "raw_reports": [
        {
          "file": "crates/ws-lockbud-checks-this1/src/main.rs",
          "features": "",
          "count": 11,
          "kinds": {
            "Clippy(Warn)": [
              "warning: casting raw pointers to the same type and constness is unnecessary (`*mut *mut i8` -> `*mut *mut i8`)\n  --> crates/ws-lockbud-checks-this1/src/main.rs:96:24\n   |\n96 |             h_aliases: host_aliases.as_mut_slice().as_mut_ptr() as *mut *mut i8,\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `host_aliases.as_mut_slice().as_mut_ptr()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n   = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n",
              "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> crates/ws-lockbud-checks-this1/src/main.rs:122:14\n    |\n122 |         days[date.tm_wday as usize],\n    |              ^^^^^^^^^^^^^^^^^^^^^ help: try: `date.tm_wday`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
              "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> crates/ws-lockbud-checks-this1/src/main.rs:123:16\n    |\n123 |         months[date.tm_mon as usize],\n    |                ^^^^^^^^^^^^^^^^^^^^ help: try: `date.tm_mon`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
              "warning: useless use of `vec!`\n   --> crates/ws-lockbud-checks-this1/src/main.rs:114:16\n    |\n114 |     let days = vec![\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can use an array directly: `[\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_vec\n    = note: `#[warn(clippy::useless_vec)]` on by default\n\n",
              "warning: useless use of `vec!`\n   --> crates/ws-lockbud-checks-this1/src/main.rs:115:18\n    |\n115 |       let months = vec![\n    |  __________________^\n116 | |         \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\",\n117 | |     ];\n    | |_____^ help: you can use an array directly: `[\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_vec\n\n",
              "warning: creating a mutable reference to mutable static\n  --> crates/ws-lockbud-checks-this1/src/main.rs:83:46\n   |\n83 |           let mut host_aliases: Vec<*mut i8> = HOST_ALIASES\n   |  ______________________________________________^\n84 | |             .as_mut()\n   | |_____________________^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[warn(static_mut_refs)]` on by default\n\n",
              "warning: creating a mutable reference to mutable static\n  --> crates/ws-lockbud-checks-this1/src/main.rs:95:21\n   |\n95 |             h_name: HOST_NAME.as_mut().unwrap().as_mut_ptr() as *mut c_char,\n   |                     ^^^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\n",
              "warning: creating a shared reference to mutable static\n   --> crates/ws-lockbud-checks-this1/src/main.rs:101:9\n    |\n101 |         &HOST_ENTRY as *const hostent\n    |         ^^^^^^^^^^^ shared reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\nhelp: use `&raw const` instead to create a raw pointer\n    |\n101 |         &raw const HOST_ENTRY as *const hostent\n    |          +++++++++\n\n"
            ],
            "Mirai": [
              "warning: creating a mutable reference to mutable static is discouraged\n  --> crates/ws-lockbud-checks-this1/src/main.rs:83:46\n   |\n83 |           let mut host_aliases: Vec<*mut i8> = HOST_ALIASES\n   |  ______________________________________________^\n84 | |             .as_mut()\n   | |_____________________^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[warn(static_mut_refs)]` on by default\n\n",
              "warning: creating a mutable reference to mutable static is discouraged\n  --> crates/ws-lockbud-checks-this1/src/main.rs:95:21\n   |\n95 |             h_name: HOST_NAME.as_mut().unwrap().as_mut_ptr() as *mut c_char,\n   |                     ^^^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\n",
              "warning: creating a shared reference to mutable static is discouraged\n   --> crates/ws-lockbud-checks-this1/src/main.rs:101:9\n    |\n101 |         &HOST_ENTRY as *const hostent\n    |         ^^^^^^^^^^^ shared reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\nhelp: use `&raw const` instead to create a raw pointer\n    |\n101 |         &raw const HOST_ENTRY as *const hostent\n    |         ~~~~~~~~~~\n\n"
            ]
          }
        },
        {
          "file": "[Geiger] Unsafe code statistics",
          "features": "",
          "count": 1,
          "kinds": {
            "Geiger": [
              "pkg=ws-lockbud-checks-this1, checker=Geiger\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/workspace2/crates/ws-lockbud-checks-this1\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\ntimestamp=2025-06-28 10:25:12.714698548 +08:00:00\n\n\nMetric output format: x/y\n    x = unsafe code used by the build\n    y = total unsafe code found in the crate\n\nSymbols:\n    :) = No `unsafe` usage found, declares #![forbid(unsafe_code)]\n    ?  = No `unsafe` usage found, missing #![forbid(unsafe_code)]\n    !  = `unsafe` usage found\n\nFunctions  Expressions  Impls  Traits  Methods  Dependency\n\n2/2        45/45        0/0    0/0     0/0      !  ws-lockbud-checks-this1 0.1.0\n0/90       12/596       0/2    0/0     2/69     !  |-- libc 0.2.161\n0/0        32/32        0/0    0/0     0/0      !  `-- rand 0.8.5\n0/90       12/596       0/2    0/0     2/69     !      |-- libc 0.2.161\n0/0        0/0          0/0    0/0     0/0      ?      |-- rand_chacha 0.3.1\n2/2        632/680      0/0    0/0     17/25    !      |   |-- ppv-lite86 0.2.20\n2/2        116/116      7/7    8/8     8/8      !      |   |   `-- zerocopy 0.7.35\n0/1        162/179      0/0    0/0     0/0      !      |   |       |-- byteorder 1.5.0\n0/0        0/0          0/0    0/0     0/0      ?      |   |       `-- zerocopy-derive 0.7.35\n0/0        15/15        0/0    0/0     3/3      !      |   |           |-- proc-macro2 1.0.89\n0/0        4/4          0/0    0/0     0/0      !      |   |           |   `-- unicode-ident 1.0.13\n0/0        0/0          0/0    0/0     0/0      ?      |   |           |-- quote 1.0.37\n0/0        15/15        0/0    0/0     3/3      !      |   |           |   `-- proc-macro2 1.0.89\n0/0        88/88        3/3    0/0     2/2      !      |   |           `-- syn 2.0.85\n0/0        15/15        0/0    0/0     3/3      !      |   |               |-- proc-macro2 1.0.89\n0/0        0/0          0/0    0/0     0/0      ?      |   |               |-- quote 1.0.37\n0/0        4/4          0/0    0/0     0/0      !      |   |               `-- unicode-ident 1.0.13\n0/0        2/2          0/0    0/0     0/0      !      |   `-- rand_core 0.6.4\n3/6        67/192       1/1    0/0     3/3      !      |       `-- getrandom 0.2.15\n0/0        0/0          0/0    0/0     0/0      ?      |           |-- cfg-if 1.0.0\n0/90       12/596       0/2    0/0     2/69     !      |           `-- libc 0.2.161\n0/0        2/2          0/0    0/0     0/0      !      `-- rand_core 0.6.4\n\n9/103      1175/1949    11/13  8/8     35/110\n\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T02:22:15Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.15/src/lazy.rs:36:23: 36:43 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.15/src/lazy.rs:39:13: 39:39 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T02:22:15Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-06-28T02:22:19Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _5 at crates/ws-lockbud-checks-this1/src/main.rs:46:13: 46:21 (#0) escapes to [(_1.0: std::sync::atomic::AtomicPtr<T>)] but pointee is dropped at crates/ws-lockbud-checks-this1/src/main.rs:47:9: 47:10 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at crates/ws-lockbud-checks-this1/src/main.rs:113:36: 113:49 (#0) escapes to [_0] but pointee is dropped at crates/ws-lockbud-checks-this1/src/main.rs:131:1: 131:2 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at crates/ws-lockbud-checks-this1/src/main.rs:131:2: 131:2 (#0) after dropped at crates/ws-lockbud-checks-this1/src/main.rs:131:1: 131:2 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Global: Raw ptr Place(_51) at crates/ws-lockbud-checks-this1/src/main.rs:96:24: 96:64 (#0) escapes to ConstantDeref(Val(Scalar(alloc1), *mut escape_to_global::hostent)) but pointee is dropped at crates/ws-lockbud-checks-this1/src/main.rs:102:5: 102:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at crates/ws-lockbud-checks-this1/src/main.rs:15:28: 15:32 (#37) after dropped at crates/ws-lockbud-checks-this1/src/main.rs:10:37: 10:38 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at crates/ws-lockbud-checks-this1/src/main.rs:14:13: 14:26 (#0) after dropped at crates/ws-lockbud-checks-this1/src/main.rs:10:37: 10:38 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at crates/ws-lockbud-checks-this1/src/main.rs:14:13: 14:16 (#0) after dropped at crates/ws-lockbud-checks-this1/src/main.rs:10:37: 10:38 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-06-28T02:22:19Z WARN  lockbud::callbacks] crate ws_lockbud_checks_this1 contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 7 }"
            ]
          }
        },
        {
          "file": "[Rapx] memory safety detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Rapx": [
              "pkg=ws-lockbud-checks-this1, checker=Rapx\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/workspace2/crates/ws-lockbud-checks-this1\ncmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-28 10:22:47.828866944 +08:00:00\n\nwarning: Dangling pointer detected.\n   --> crates/ws-lockbud-checks-this1/src/main.rs:113:1\n    |\n113 | / unsafe fn fmt_time(date: &Date) -> *const c_char {\n114 | |     let days = vec![\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n...   |\n130 | |     time_str[0..26].as_ptr() as _\n131 | | }\n    | |_- Dangling pointer detected.\n    |\n"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=ws-lockbud-checks-this1, checker=Udeps\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/workspace2/crates/ws-lockbud-checks-this1\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-28 10:25:37.980285427 +08:00:00\n\n\nstdout:\nunused dependencies:\n`ws-lockbud-checks-this1 v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/workspace2/crates/ws-lockbud-checks-this1)`\n└─── dependencies\n     └─── \"rand\"\nNote: These dependencies might be used by other targets.\n      To find dependencies that are not used by any target, enable `--all-targets`.\nNote: They might be false-positive.\n      For example, `cargo-udeps` cannot detect usage of crates that are only used in doc-tests.\n      To ignore some dependencies, write `package.metadata.cargo-udeps.ignore` in Cargo.toml.\n\nstderr:\n   Compiling proc-macro2 v1.0.89\n   Compiling unicode-ident v1.0.13\n   Compiling libc v0.2.161\n    Checking cfg-if v1.0.0\n    Checking byteorder v1.5.0\n   Compiling quote v1.0.37\n   Compiling syn v2.0.85\n    Checking getrandom v0.2.15\n    Checking rand_core v0.6.4\n   Compiling zerocopy-derive v0.7.35\n    Checking zerocopy v0.7.35\n    Checking ppv-lite86 v0.2.20\n    Checking rand_chacha v0.3.1\n    Checking rand v0.8.5\n    Checking ws-lockbud-checks-this1 v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/workspace2/crates/ws-lockbud-checks-this1)\nwarning: creating a mutable reference to mutable static\n  --> crates/ws-lockbud-checks-this1/src/main.rs:83:46\n   |\n83 |           let mut host_aliases: Vec<*mut i8> = HOST_ALIASES\n   |  ______________________________________________^\n84 | |             .as_mut()\n   | |_____________________^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[warn(static_mut_refs)]` on by default\n\nwarning: creating a mutable reference to mutable static\n  --> crates/ws-lockbud-checks-this1/src/main.rs:95:21\n   |\n95 |             h_name: HOST_NAME.as_mut().unwrap().as_mut_ptr() as *mut c_char,\n   |                     ^^^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\nwarning: creating a shared reference to mutable static\n   --> crates/ws-lockbud-checks-this1/src/main.rs:101:9\n    |\n101 |         &HOST_ENTRY as *const hostent\n    |         ^^^^^^^^^^^ shared reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\nhelp: use `&raw const` instead to create a raw pointer\n    |\n101 |         &raw const HOST_ENTRY as *const hostent\n    |          +++++++++\n\nwarning: `ws-lockbud-checks-this1` (bin \"ws-lockbud-checks-this1\") generated 3 warnings\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 3.35s\ninfo: Loading depinfo from \"/home/runner/check/batch_1/os-checker/os-checker-test-suite/workspace2/target/x86_64-unknown-linux-gnu/debug/deps/ws_lockbud_checks_this1-c6e303c4fc6836b5.d\"\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=ws-lockbud-checks-this1, checker=Outdated\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/workspace2/crates/ws-lockbud-checks-this1\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 10:24:58.108633285 +08:00:00\n\nName  Project  Compat   Latest   Kind    Platform\n----  -------  ------   ------   ----    --------\nlibc  0.2.161  0.2.174  0.2.174  Normal  ---\n"
            ]
          }
        }
      ]
    },
    {
      "user": "os-checker",
      "repo": "os-checker-test-suite",
      "pkg": "ws-lockbud-checks-this2",
      "count": 14,
      "raw_reports": [
        {
          "file": "crates/ws-lockbud-checks-this2/src/main.rs",
          "features": "",
          "count": 12,
          "kinds": {
            "Clippy(Warn)": [
              "warning: variables can be used directly in the `format!` string\n  --> crates/ws-lockbud-checks-this2/src/main.rs:28:5\n   |\n28 |     println!(\"{:?}\", a);\n   |     ^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n   = note: `#[warn(clippy::uninlined_format_args)]` on by default\nhelp: change this to\n   |\n28 -     println!(\"{:?}\", a);\n28 +     println!(\"{a:?}\");\n   |\n\n",
              "warning: variables can be used directly in the `format!` string\n  --> crates/ws-lockbud-checks-this2/src/main.rs:37:5\n   |\n37 |     println!(\"{:?}\", a);\n   |     ^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n37 -     println!(\"{:?}\", a);\n37 +     println!(\"{a:?}\");\n   |\n\n",
              "warning: variables can be used directly in the `format!` string\n  --> crates/ws-lockbud-checks-this2/src/main.rs:48:5\n   |\n48 |     println!(\"{:?}\", a);\n   |     ^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n48 -     println!(\"{:?}\", a);\n48 +     println!(\"{a:?}\");\n   |\n\n",
              "warning: variables can be used directly in the `format!` string\n  --> crates/ws-lockbud-checks-this2/src/main.rs:63:5\n   |\n63 |     println!(\"{:?}\", a);\n   |     ^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n63 -     println!(\"{:?}\", a);\n63 +     println!(\"{a:?}\");\n   |\n\n"
            ],
            "Mirai": [
              "warning: [MIRAI] possible attempt to add with overflow\n  --> crates/ws-lockbud-checks-this2/src/main.rs:23:14\n   |\n23 |     let v3 = v + 1;\n   |              ^^^^^\n\n",
              "warning: [MIRAI] possible attempt to add with overflow\n  --> crates/ws-lockbud-checks-this2/src/main.rs:24:27\n   |\n24 |     let v4 = if v3 > 10 { v3 + 2 } else { v3 - 1 };\n   |                           ^^^^^^\n\n",
              "warning: [MIRAI] possible attempt to add with overflow\n  --> crates/ws-lockbud-checks-this2/src/main.rs:34:14\n   |\n34 |     let v3 = v + 1;\n   |              ^^^^^\n\n",
              "warning: [MIRAI] possible attempt to add with overflow\n  --> crates/ws-lockbud-checks-this2/src/main.rs:35:27\n   |\n35 |     let v4 = if v3 > 10 { v3 + 2 } else { v3 - 1 };\n   |                           ^^^^^^\n\n",
              "warning: [MIRAI] possible attempt to add with overflow\n  --> crates/ws-lockbud-checks-this2/src/main.rs:43:14\n   |\n43 |     let v3 = v + 1;\n   |              ^^^^^\n\n",
              "warning: [MIRAI] possible attempt to add with overflow\n  --> crates/ws-lockbud-checks-this2/src/main.rs:44:27\n   |\n44 |     let v4 = if v3 > 10 { v3 + 2 } else { v3 - 1 };\n   |                           ^^^^^^\n\n",
              "warning: [MIRAI] possible attempt to add with overflow\n  --> crates/ws-lockbud-checks-this2/src/main.rs:54:14\n   |\n54 |     let v3 = v + 1;\n   |              ^^^^^\n\n",
              "warning: [MIRAI] possible attempt to add with overflow\n  --> crates/ws-lockbud-checks-this2/src/main.rs:55:27\n   |\n55 |     let v4 = if v3 > 10 { v3 + 2 } else { v3 - 1 };\n   |                           ^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "[Geiger] Unsafe code statistics",
          "features": "",
          "count": 1,
          "kinds": {
            "Geiger": [
              "pkg=ws-lockbud-checks-this2, checker=Geiger\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/workspace2/crates/ws-lockbud-checks-this2\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\ntimestamp=2025-06-28 10:25:18.251292326 +08:00:00\n\n\nMetric output format: x/y\n    x = unsafe code used by the build\n    y = total unsafe code found in the crate\n\nSymbols:\n    :) = No `unsafe` usage found, declares #![forbid(unsafe_code)]\n    ?  = No `unsafe` usage found, missing #![forbid(unsafe_code)]\n    !  = `unsafe` usage found\n\nFunctions  Expressions  Impls  Traits  Methods  Dependency\n\n0/0        0/0          0/0    0/0     0/0      ?  ws-lockbud-checks-this2 0.1.0\n0/0        32/32        0/0    0/0     0/0      !  `-- rand 0.8.5\n0/90       12/596       0/2    0/0     2/69     !      |-- libc 0.2.161\n0/0        0/0          0/0    0/0     0/0      ?      |-- rand_chacha 0.3.1\n2/2        632/680      0/0    0/0     17/25    !      |   |-- ppv-lite86 0.2.20\n2/2        116/116      7/7    8/8     8/8      !      |   |   `-- zerocopy 0.7.35\n0/1        162/179      0/0    0/0     0/0      !      |   |       |-- byteorder 1.5.0\n0/0        0/0          0/0    0/0     0/0      ?      |   |       `-- zerocopy-derive 0.7.35\n0/0        15/15        0/0    0/0     3/3      !      |   |           |-- proc-macro2 1.0.89\n0/0        4/4          0/0    0/0     0/0      !      |   |           |   `-- unicode-ident 1.0.13\n0/0        0/0          0/0    0/0     0/0      ?      |   |           |-- quote 1.0.37\n0/0        15/15        0/0    0/0     3/3      !      |   |           |   `-- proc-macro2 1.0.89\n0/0        88/88        3/3    0/0     2/2      !      |   |           `-- syn 2.0.85\n0/0        15/15        0/0    0/0     3/3      !      |   |               |-- proc-macro2 1.0.89\n0/0        0/0          0/0    0/0     0/0      ?      |   |               |-- quote 1.0.37\n0/0        4/4          0/0    0/0     0/0      !      |   |               `-- unicode-ident 1.0.13\n0/0        2/2          0/0    0/0     0/0      !      |   `-- rand_core 0.6.4\n3/6        67/192       1/1    0/0     3/3      !      |       `-- getrandom 0.2.15\n0/0        0/0          0/0    0/0     0/0      ?      |           |-- cfg-if 1.0.0\n0/90       12/596       0/2    0/0     2/69     !      |           `-- libc 0.2.161\n0/0        2/2          0/0    0/0     0/0      !      `-- rand_core 0.6.4\n\n7/101      1130/1904    11/13  8/8     35/110\n\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T02:22:20Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.15/src/lazy.rs:36:23: 36:43 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.15/src/lazy.rs:39:13: 39:39 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T02:22:20Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-06-28T02:22:20Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"buggy_control_dep_bool\",\n            \"atomic_reader\": \"crates/ws-lockbud-checks-this2/src/main.rs:14:8: 14:33 (#0)\",\n            \"atomic_writer\": \"crates/ws-lockbud-checks-this2/src/main.rs:15:9: 15:42 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"buggy_data_dep_i32\",\n            \"atomic_reader\": \"crates/ws-lockbud-checks-this2/src/main.rs:33:13: 33:38 (#0)\",\n            \"atomic_writer\": \"crates/ws-lockbud-checks-this2/src/main.rs:36:5: 36:35 (#0)\",\n            \"dep_kind\": \"Data\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"buggy_both_dep_i32\",\n            \"atomic_reader\": \"crates/ws-lockbud-checks-this2/src/main.rs:42:13: 42:38 (#0)\",\n            \"atomic_writer\": \"crates/ws-lockbud-checks-this2/src/main.rs:46:9: 46:39 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"buggy_control_dep_i32\",\n            \"atomic_reader\": \"crates/ws-lockbud-checks-this2/src/main.rs:22:13: 22:38 (#0)\",\n            \"atomic_writer\": \"crates/ws-lockbud-checks-this2/src/main.rs:26:9: 26:39 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T02:22:20Z WARN  lockbud::callbacks] crate ws_lockbud_checks_this2 contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 4 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        }
      ]
    },
    {
      "user": "os-checker",
      "repo": "os-checker-test-suite",
      "pkg": "buildrs-failure",
      "count": 8,
      "raw_reports": [
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=buildrs-failure, checker=Clippy\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-06-28 10:21:44.064786713 +08:00:00\nwarning: /home/runner/check/batch_1/os-checker/os-checker-test-suite/miri-checks-this/Cargo.toml: no edition set: defaulting to the 2015 edition while the latest is 2024\n   Compiling buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)\nerror: failed to run custom build command for `buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/os-checker/os-checker-test-suite/target/debug/build/buildrs-failure-b84400955a7a6b60/build-script-build` (exit status: 101)\n  --- stderr\n\n  thread 'main' panicked at buildrs-failure/build.rs:2:5:\n  Test as a failure in build script.\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
            ]
          }
        },
        {
          "file": "(virtual) geiger",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=buildrs-failure, checker=Geiger\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2025-06-28 10:25:05.444838751 +08:00:00\n     Removed 0 files\nwarning: /home/runner/check/batch_1/os-checker/os-checker-test-suite/miri-checks-this/Cargo.toml: no edition set: defaulting to the 2015 edition while the latest is 2024\n   Compiling buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/target/debug/build/buildrs-failure-4ebb0216c914cab9/build_script_build-4ebb0216c914cab9.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/target/debug/build/buildrs-failure-4ebb0216c914cab9/build_script_build-4ebb0216c914cab9\",\"emit\":\"link\"}\nerror: failed to run custom build command for `buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/os-checker/os-checker-test-suite/target/debug/build/buildrs-failure-4ebb0216c914cab9/build-script-build` (exit status: 101)\n  --- stderr\n\n  thread 'main' panicked at buildrs-failure/build.rs:2:5:\n  Test as a failure in build script.\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nerror: Cargo(\"1 job failed\")\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=buildrs-failure, checker=Lockbud\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-06-28 10:22:14.177250847 +08:00:00\nwarning: /home/runner/check/batch_1/os-checker/os-checker-test-suite/miri-checks-this/Cargo.toml: no edition set: defaulting to the 2015 edition while the latest is 2024\n   Compiling buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)\nerror: failed to run custom build command for `buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/os-checker/os-checker-test-suite/target/debug/build/buildrs-failure-bbf1f06fa40384c7/build-script-build` (exit status: 101)\n  --- stderr\n\n  thread 'main' panicked at buildrs-failure/build.rs:2:5:\n  Test as a failure in build script.\n  stack backtrace:\n     0:     0x560ba98406d0 - std::backtrace_rs::backtrace::libunwind::trace::h09b3d24f06048964\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/../../backtrace/src/backtrace/libunwind.rs:116:5\n     1:     0x560ba98406d0 - std::backtrace_rs::backtrace::trace_unsynchronized::hf47addf765c6ae4e\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x560ba98406d0 - std::sys::backtrace::_print_fmt::h1cac4748ae805433\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:66:9\n     3:     0x560ba98406d0 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h51876e9b806abd2f\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:39:26\n     4:     0x560ba985d673 - core::fmt::rt::Argument::fmt::h74675d727819c734\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/fmt/rt.rs:177:76\n     5:     0x560ba985d673 - core::fmt::write::hec8160b518640e0a\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/fmt/mod.rs:1449:21\n     6:     0x560ba983dd43 - std::io::Write::write_fmt::h23dd9fd522f1ed73\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/io/mod.rs:1890:15\n     7:     0x560ba9840522 - std::sys::backtrace::BacktraceLock::print::h82fa1cbd2f5c85f6\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:42:9\n     8:     0x560ba984146f - std::panicking::default_hook::{{closure}}::h0c71ebc4d32ee68d\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:298:22\n     9:     0x560ba98412da - std::panicking::default_hook::h869bbd2dc4246a59\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:325:9\n    10:     0x560ba9841d42 - std::panicking::rust_panic_with_hook::he7cb010bd1162eb7\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:831:13\n    11:     0x560ba9841ba6 - std::panicking::begin_panic_handler::{{closure}}::h144a44d32326050e\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:697:13\n    12:     0x560ba9840bd9 - std::sys::backtrace::__rust_end_short_backtrace::h7baa569e657f05a9\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:168:18\n    13:     0x560ba984186d - rust_begin_unwind\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:695:5\n    14:     0x560ba985cae0 - core::panicking::panic_fmt::hc13ec85888cb23ce\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/panicking.rs:75:14\n    15:     0x560ba9820e1d - build_script_build::main::h2eb21cca9dd0203e\n                                 at /home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure/build.rs:2:5\n    16:     0x560ba9820ddb - core::ops::function::FnOnce::call_once::hbf2815c812198eee\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/ops/function.rs:250:5\n    17:     0x560ba9820d1e - std::sys::backtrace::__rust_begin_short_backtrace::ha0bc89d9dbc27f12\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/sys/backtrace.rs:152:18\n    18:     0x560ba9820cf1 - std::rt::lang_start::{{closure}}::hb517ac546c9a3628\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/rt.rs:199:18\n    19:     0x560ba983bdd0 - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::h73c200d88ac341db\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/core/src/ops/function.rs:284:13\n    20:     0x560ba983bdd0 - std::panicking::try::do_call::h5d854913854b71fe\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:587:40\n    21:     0x560ba983bdd0 - std::panicking::try::hf1ae1b2a2498e678\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:550:19\n    22:     0x560ba983bdd0 - std::panic::catch_unwind::hcfb0a552e6092b8e\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panic.rs:358:14\n    23:     0x560ba983bdd0 - std::rt::lang_start_internal::{{closure}}::hb0245fc583346cd7\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/rt.rs:168:24\n    24:     0x560ba983bdd0 - std::panicking::try::do_call::h946e97edafdf2f58\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:587:40\n    25:     0x560ba983bdd0 - std::panicking::try::ha9077e2e87ccc6a6\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panicking.rs:550:19\n    26:     0x560ba983bdd0 - std::panic::catch_unwind::hd02f80e9111b6f00\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/panic.rs:358:14\n    27:     0x560ba983bdd0 - std::rt::lang_start_internal::h13b1bd40350dac66\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/rt.rs:164:5\n    28:     0x560ba9820cd7 - std::rt::lang_start::hc9f5c75da524eb5c\n                                 at /rustc/854f22563c8daf92709fae18ee6aed52953835cd/library/std/src/rt.rs:198:5\n    29:     0x560ba9820e3e - main\n    30:     0x7fb0d842a1ca - <unknown>\n    31:     0x7fb0d842a28b - __libc_start_main\n    32:     0x560ba9820bd5 - _start\n    33:                0x0 - <unknown>\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=buildrs-failure, checker=Mirai\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-06-28 10:21:57.940496987 +08:00:00\nwarning: /home/runner/check/batch_1/os-checker/os-checker-test-suite/miri-checks-this/Cargo.toml: no edition set: defaulting to the 2015 edition while the latest is 2024\n   Compiling buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)\nerror: failed to run custom build command for `buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/os-checker/os-checker-test-suite/target/debug/build/buildrs-failure-bbf1f06fa40384c7/build-script-build` (exit status: 101)\n  --- stderr\n\n  thread 'main' panicked at buildrs-failure/build.rs:2:5:\n  Test as a failure in build script.\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=buildrs-failure, checker=SemverChecks\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-06-28 10:21:50.670226314 +08:00:00\n    Building buildrs-failure v0.1.0 (current)\nerror: running cargo-doc on crate 'buildrs-failure' failed with output:\n-----\n   Compiling buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)\nerror: failed to run custom build command for `buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/os-checker/os-checker-test-suite/target/semver-checks/local-buildrs_failure-0_1_0-x86_64_unknown_linux_gnu-01666ec060466c14/target/debug/build/buildrs-failure-05687d8c63af9102/build-script-build` (exit status: 101)\n  --- stderr\n\n  thread 'main' panicked at /home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure/build.rs:2:5:\n  Test as a failure in build script.\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n\n-----\n\nerror: failed to build rustdoc for crate buildrs-failure v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate buildrs-failure v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=buildrs-failure, checker=Udeps\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-linux-gnu \n// timestamp=2025-06-28 10:25:33.841916833 +08:00:00\nwarning: /home/runner/check/batch_1/os-checker/os-checker-test-suite/miri-checks-this/Cargo.toml: no edition set: defaulting to the 2015 edition while the latest is 2024\n   Compiling buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)\nerror: failed to run custom build command for `buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/os-checker/os-checker-test-suite/target/debug/build/buildrs-failure-bbf1f06fa40384c7/build-script-build` (exit status: 101)\n  --- stderr\n\n  thread 'main' panicked at buildrs-failure/build.rs:2:5:\n  Test as a failure in build script.\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=buildrs-failure, checker=Udeps\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-28 10:25:34.01550728 +08:00:00\n\n\nstdout:\n\nstderr:\nwarning: /home/runner/check/batch_1/os-checker/os-checker-test-suite/miri-checks-this/Cargo.toml: no edition set: defaulting to the 2015 edition while the latest is 2024\n   Compiling buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)\nerror: failed to run custom build command for `buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/os-checker/os-checker-test-suite/target/debug/build/buildrs-failure-bbf1f06fa40384c7/build-script-build` (exit status: 101)\n  --- stderr\n\n  thread 'main' panicked at buildrs-failure/build.rs:2:5:\n  Test as a failure in build script.\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=buildrs-failure, checker=SemverChecks\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-28 10:21:51.0515376 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building buildrs-failure v0.1.0 (current)\nerror: running cargo-doc on crate 'buildrs-failure' failed with output:\n-----\n   Compiling buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)\nerror: failed to run custom build command for `buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/os-checker/os-checker-test-suite/target/semver-checks/local-buildrs_failure-0_1_0-x86_64_unknown_linux_gnu-01666ec060466c14/target/debug/build/buildrs-failure-05687d8c63af9102/build-script-build` (exit status: 101)\n  --- stderr\n\n  thread 'main' panicked at /home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure/build.rs:2:5:\n  Test as a failure in build script.\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n\n-----\n\nerror: failed to build rustdoc for crate buildrs-failure v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate buildrs-failure v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "os-checker",
      "repo": "os-checker-test-suite",
      "pkg": "rap-checks-this",
      "count": 8,
      "raw_reports": [
        {
          "file": "rap-checks-this/src/lib.rs",
          "features": "",
          "count": 5,
          "kinds": {
            "Mirai": [
              "warning: function `main` is never used\n --> rap-checks-this/src/lib.rs:4:4\n  |\n4 | fn main() {\n  |    ^^^^\n  |\n  = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: function `main` is never used\n --> rap-checks-this/src/lib.rs:4:4\n  |\n4 | fn main() {\n  |    ^^^^\n  |\n  = note: `#[warn(dead_code)]` on by default\n\n"
            ],
            "Clippy(Warn)": [
              "warning: function `main` is never used\n --> rap-checks-this/src/lib.rs:4:4\n  |\n4 | fn main() {\n  |    ^^^^\n  |\n  = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: variables can be used directly in the `format!` string\n  --> rap-checks-this/src/lib.rs:11:5\n   |\n11 |     println!(\"{:?}\", slot);\n   |     ^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n   = note: `#[warn(clippy::uninlined_format_args)]` on by default\nhelp: change this to\n   |\n11 -     println!(\"{:?}\", slot);\n11 +     println!(\"{slot:?}\");\n   |\n\n",
              "warning: variables can be used directly in the `format!` string\n  --> rap-checks-this/src/lib.rs:12:5\n   |\n12 |     println!(\"{:?}\", v);\n   |     ^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n12 -     println!(\"{:?}\", v);\n12 +     println!(\"{v:?}\");\n   |\n\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rap-checks-this, checker=SemverChecks\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/rap-checks-this\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-06-28 10:21:51.822452845 +08:00:00\n    Building rap-checks-this v0.1.0 (current)\n       Built [   0.290s] (current)\n     Parsing rap-checks-this v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: rap-checks-this not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[Geiger] Unsafe code statistics",
          "features": "",
          "count": 1,
          "kinds": {
            "Geiger": [
              "pkg=rap-checks-this, checker=Geiger\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/rap-checks-this\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\ntimestamp=2025-06-28 10:25:06.7704281 +08:00:00\n\n\nMetric output format: x/y\n    x = unsafe code used by the build\n    y = total unsafe code found in the crate\n\nSymbols:\n    :) = No `unsafe` usage found, declares #![forbid(unsafe_code)]\n    ?  = No `unsafe` usage found, missing #![forbid(unsafe_code)]\n    !  = `unsafe` usage found\n\nFunctions  Expressions  Impls  Traits  Methods  Dependency\n\n0/0        4/4          0/0    0/0     0/0      !  rap-checks-this 0.1.0\n\n0/0        4/4          0/0    0/0     0/0\n\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=rap-checks-this, checker=SemverChecks\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/rap-checks-this\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-28 10:21:52.598849681 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building rap-checks-this v0.1.0 (current)\n       Built [   0.290s] (current)\n     Parsing rap-checks-this v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: rap-checks-this not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        }
      ]
    },
    {
      "user": "os-checker",
      "repo": "os-checker-test-suite",
      "pkg": "ws-rap-checks-this2",
      "count": 7,
      "raw_reports": [
        {
          "file": "src/main.rs",
          "features": "",
          "count": 5,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_1/os-checker/os-checker-test-suite/workspace2/crates/ws-rap-checks-this2/src/main.rs (original lines from 4 to 4)\n-struct MyRef<'a> { a: &'a str, }\n+struct MyRef<'a> {\n+    a: &'a str,\n+}\n",
              "file: /home/runner/check/batch_1/os-checker/os-checker-test-suite/workspace2/crates/ws-rap-checks-this2/src/main.rs (original lines from 7 to 9)\n-    unsafe {\n-        std::mem::transmute(myref)\n-    }\n+    unsafe { std::mem::transmute(myref) }\n",
              "file: /home/runner/check/batch_1/os-checker/os-checker-test-suite/workspace2/crates/ws-rap-checks-this2/src/main.rs (original lines from 15 to 15)\n-    let my_ref = unsafe { f(MyRef { a: &string })};\n+    let my_ref = unsafe { f(MyRef { a: &string }) };\n",
              "file: /home/runner/check/batch_1/os-checker/os-checker-test-suite/workspace2/crates/ws-rap-checks-this2/src/main.rs (original lines from 17 to 17)\n-         drop(string);\n+        drop(string);\n",
              "file: /home/runner/check/batch_1/os-checker/os-checker-test-suite/workspace2/crates/ws-rap-checks-this2/src/main.rs (original lines from 19 to 19)\n-    println!(\"{:?}\",my_ref.a);\n+    println!(\"{:?}\", my_ref.a);\n"
            ]
          }
        },
        {
          "file": "[Geiger] Unsafe code statistics",
          "features": "",
          "count": 1,
          "kinds": {
            "Geiger": [
              "pkg=ws-rap-checks-this2, checker=Geiger\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/workspace2/crates/ws-rap-checks-this2\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\ntimestamp=2025-06-28 10:25:26.131105247 +08:00:00\n\n\nMetric output format: x/y\n    x = unsafe code used by the build\n    y = total unsafe code found in the crate\n\nSymbols:\n    :) = No `unsafe` usage found, declares #![forbid(unsafe_code)]\n    ?  = No `unsafe` usage found, missing #![forbid(unsafe_code)]\n    !  = `unsafe` usage found\n\nFunctions  Expressions  Impls  Traits  Methods  Dependency\n\n1/1        4/4          0/0    0/0     0/0      !  ws-rap-checks-this2 0.1.0\n\n1/1        4/4          0/0    0/0     0/0\n\n"
            ]
          }
        },
        {
          "file": "[Rapx] memory safety detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Rapx": [
              "pkg=ws-rap-checks-this2, checker=Rapx\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/workspace2/crates/ws-rap-checks-this2\ncmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-28 10:22:53.344023644 +08:00:00\n\nwarning: Double free detected.\n  --> crates/ws-rap-checks-this2/src/main.rs:20:1\n   |\n20 | }\n   | - Double free detected.\n   |\nwarning: Use after free detected.\n  --> crates/ws-rap-checks-this2/src/main.rs:19:15\n   |\n19 |     println!(\"{:?}\",my_ref.a);\n   |               ----  -------- Use after free detected.\n   |               |\n   |               Use after free detected.\n   |\n"
            ]
          }
        }
      ]
    },
    {
      "user": "os-checker",
      "repo": "os-checker-test-suite",
      "pkg": "ws-rap-checks-this_with-feature-gated",
      "count": 7,
      "raw_reports": [
        {
          "file": "crates/ws-rap-checks-this_with-feature-gated/src/main.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Clippy(Warn)": [
              "warning: struct `MyRef` is never constructed\n --> crates/ws-rap-checks-this_with-feature-gated/src/main.rs:1:8\n  |\n1 | struct MyRef<'a> {\n  |        ^^^^^\n  |\n  = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: method `print` is never used\n --> crates/ws-rap-checks-this_with-feature-gated/src/main.rs:6:8\n  |\n5 | impl<'a> MyRef<'a> {\n  | ------------------ method in this implementation\n6 |     fn print(&self) {\n  |        ^^^^^\n\n",
              "warning: function `f` is never used\n  --> crates/ws-rap-checks-this_with-feature-gated/src/main.rs:11:11\n   |\n11 | unsafe fn f<'a>(myref: MyRef<'a>) -> MyRef<'static> {\n   |           ^\n\n"
            ],
            "Mirai": [
              "warning: struct `MyRef` is never constructed\n --> crates/ws-rap-checks-this_with-feature-gated/src/main.rs:1:8\n  |\n1 | struct MyRef<'a> {\n  |        ^^^^^\n  |\n  = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: method `print` is never used\n --> crates/ws-rap-checks-this_with-feature-gated/src/main.rs:6:8\n  |\n5 | impl<'a> MyRef<'a> {\n  | ------------------ method in this implementation\n6 |     fn print(&self) {\n  |        ^^^^^\n\n",
              "warning: function `f` is never used\n  --> crates/ws-rap-checks-this_with-feature-gated/src/main.rs:11:11\n   |\n11 | unsafe fn f<'a>(myref: MyRef<'a>) -> MyRef<'static> {\n   |           ^\n\n"
            ]
          }
        },
        {
          "file": "[Geiger] Unsafe code statistics",
          "features": "",
          "count": 1,
          "kinds": {
            "Geiger": [
              "pkg=ws-rap-checks-this_with-feature-gated, checker=Geiger\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/workspace2/crates/ws-rap-checks-this_with-feature-gated\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\ntimestamp=2025-06-28 10:25:31.298356981 +08:00:00\n\n\nMetric output format: x/y\n    x = unsafe code used by the build\n    y = total unsafe code found in the crate\n\nSymbols:\n    :) = No `unsafe` usage found, declares #![forbid(unsafe_code)]\n    ?  = No `unsafe` usage found, missing #![forbid(unsafe_code)]\n    !  = `unsafe` usage found\n\nFunctions  Expressions  Impls  Traits  Methods  Dependency\n\n1/1        6/6          0/0    0/0     0/0      !  ws-rap-checks-this_with-feature-gated 0.1.0\n\n1/1        6/6          0/0    0/0     0/0\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "os-checker",
      "repo": "os-checker-test-suite",
      "pkg": "os-checker-test-suite",
      "count": 6,
      "raw_reports": [
        {
          "file": "src/main.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Mirai": [
              "warning: unused variable: `a`\n --> src/main.rs:2:9\n  |\n2 |     let a = 3.14;\n  |         ^ help: if this is intentional, prefix it with an underscore: `_a`\n  |\n  = note: `#[warn(unused_variables)]` on by default\n\n",
              "warning: unused variable: `a`\n --> src/main.rs:2:9\n  |\n2 |     let a = 3.14;\n  |         ^ help: if this is intentional, prefix it with an underscore: `_a`\n  |\n  = note: `#[warn(unused_variables)]` on by default\n\n"
            ],
            "Clippy(Error)": [
              "error: approximate value of `f{32, 64}::consts::PI` found\n --> src/main.rs:2:13\n  |\n2 |     let a = 3.14;\n  |             ^^^^\n  |\n  = help: consider using the constant directly\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant\n  = note: `#[deny(clippy::approx_constant)]` on by default\n\n"
            ],
            "Clippy(Warn)": [
              "warning: unused variable: `a`\n --> src/main.rs:2:9\n  |\n2 |     let a = 3.14;\n  |         ^ help: if this is intentional, prefix it with an underscore: `_a`\n  |\n  = note: `#[warn(unused_variables)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=os-checker-test-suite, checker=Clippy\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-06-28 10:21:44.703372439 +08:00:00\nwarning: /home/runner/check/batch_1/os-checker/os-checker-test-suite/miri-checks-this/Cargo.toml: no edition set: defaulting to the 2015 edition while the latest is 2024\n    Checking os-checker-test-suite v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite)\nerror: could not compile `os-checker-test-suite` (bin \"os-checker-test-suite\") due to 1 previous error; 1 warning emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) fmt",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "\n   0: \u001b[91m无法解析 rustfmt 的标准输出：stdout=[]\n      [{\"name\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/examples/need-clippy-fix.rs\",\"mismatches\":[{\"original_begin_line\":2,\"original_end_line\":2,\"expected_begin_line\":2,\"expected_end_line\":2,\"original\":\"    _ = (123); \\n\",\"expected\":\"    _ = (123);\\n\"}]},{\"name\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/examples/need-fmt.rs\",\"mismatches\":[{\"original_begin_line\":1,\"original_end_line\":1,\"expected_begin_line\":1,\"expected_end_line\":2,\"original\":\"fn main() {    println!(\\\"from example\\\");\\n\",\"expected\":\"fn main() {\\n    println!(\\\"from example\\\");\\n\"}]},{\"name\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/src/main.rs\",\"mismatches\":[{\"original_begin_line\":4,\"original_end_line\":5,\"expected_begin_line\":4,\"expected_end_line\":4,\"original\":\" \\nprintln!(\\\"Hello, world!\\\");\\n\",\"expected\":\"    println!(\\\"Hello, world!\\\");\\n\"}]},{\"name\":\"/home/runner/check/batch_1/os-checker/os-checker-test-suite/tests/need-fmt.rs\",\"mismatches\":[{\"original_begin_line\":1,\"original_end_line\":2,\"expected_begin_line\":1,\"expected_end_line\":1,\"original\":\"fn main () {\\n  }\\n\",\"expected\":\"fn main() {}\\n\"}]}]\n      []\n\n      原始命令为：`cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu fmt`（即 `Io(Dir(\"/home/runner/check/batch_1/os-checker/os-checker-test-suite\"), Cmd([\"cargo\", \"+nightly-2025-06-26-x86_64-unknown-linux-gnu\", \"fmt\", \"--\", \"--emit=json\"]))`）\n      toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu\n      stderr=\u001b[0m\n   1: \u001b[91mtrailing characters at line 2 column 1\u001b[0m\n\nLocation:\n   \u001b[35msrc/run_checker/mod.rs\u001b[0m:\u001b[35m465\u001b[0m\n\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ SPANTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n   0: \u001b[91mos_checker::run_checker\u001b[0m\u001b[91m::\u001b[0m\u001b[91mrun\u001b[0m with \u001b[96m\u001b[3muser\u001b[0m\u001b[2m=\u001b[0m\"os-checker\" \u001b[3mrepo\u001b[0m\u001b[2m=\u001b[0m\"os-checker-test-suite\"\u001b[0m\n      at \u001b[35msrc/run_checker/mod.rs\u001b[0m:\u001b[35m254\u001b[0m\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets."
            ]
          }
        }
      ]
    },
    {
      "user": "os-checker",
      "repo": "os-checker-test-suite",
      "pkg": "lockbud-checks-this",
      "count": 4,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=lockbud-checks-this, checker=SemverChecks\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/lockbud-checks-this\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-06-28 10:21:51.052987208 +08:00:00\n    Building lockbud-checks-this v0.1.0 (current)\n       Built [   0.286s] (current)\n     Parsing lockbud-checks-this v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: lockbud-checks-this not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[Geiger] Unsafe code statistics",
          "features": "",
          "count": 1,
          "kinds": {
            "Geiger": [
              "pkg=lockbud-checks-this, checker=Geiger\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/lockbud-checks-this\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\ntimestamp=2025-06-28 10:25:05.855908678 +08:00:00\n\n\nMetric output format: x/y\n    x = unsafe code used by the build\n    y = total unsafe code found in the crate\n\nSymbols:\n    :) = No `unsafe` usage found, declares #![forbid(unsafe_code)]\n    ?  = No `unsafe` usage found, missing #![forbid(unsafe_code)]\n    !  = `unsafe` usage found\n\nFunctions  Expressions  Impls  Traits  Methods  Dependency\n\n0/0        3/3          0/0    0/0     0/0      !  lockbud-checks-this 0.1.0\n\n0/0        3/3          0/0    0/0     0/0\n\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T02:22:14Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at lockbud-checks-this/src/lib.rs:8:28: 8:32 (#5) after dropped at lockbud-checks-this/src/lib.rs:5:5: 5:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at lockbud-checks-this/src/lib.rs:7:13: 7:26 (#0) after dropped at lockbud-checks-this/src/lib.rs:5:5: 5:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-06-28T02:22:14Z WARN  lockbud::callbacks] crate lockbud_checks_this contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=lockbud-checks-this, checker=SemverChecks\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/lockbud-checks-this\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-28 10:21:51.820936775 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building lockbud-checks-this v0.1.0 (current)\n       Built [   0.286s] (current)\n     Parsing lockbud-checks-this v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: lockbud-checks-this not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        }
      ]
    },
    {
      "user": "os-checker",
      "repo": "os-checker-test-suite",
      "pkg": "updes-checks-this",
      "count": 3,
      "raw_reports": [
        {
          "file": "[Geiger] Unsafe code statistics",
          "features": "",
          "count": 1,
          "kinds": {
            "Geiger": [
              "pkg=updes-checks-this, checker=Geiger\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/updes-checks-this\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\ntimestamp=2025-06-28 10:25:07.281700224 +08:00:00\n\n\nMetric output format: x/y\n    x = unsafe code used by the build\n    y = total unsafe code found in the crate\n\nSymbols:\n    :) = No `unsafe` usage found, declares #![forbid(unsafe_code)]\n    ?  = No `unsafe` usage found, missing #![forbid(unsafe_code)]\n    !  = `unsafe` usage found\n\nFunctions  Expressions  Impls  Traits  Methods  Dependency\n\n0/0        0/0          0/0    0/0     0/0      ?  updes-checks-this 0.1.0\n2/2        18/18        1/1    0/0     0/0      !  `-- log 0.4.27\n\n2/2        18/18        1/1    0/0     0/0\n\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T02:22:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T02:22:14Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=updes-checks-this, checker=Udeps\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/updes-checks-this\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-28 10:25:34.601717903 +08:00:00\n\n\nstdout:\nunused dependencies:\n`updes-checks-this v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/updes-checks-this)`\n└─── dependencies\n     └─── \"log\"\nNote: These dependencies might be used by other targets.\n      To find dependencies that are not used by any target, enable `--all-targets`.\nNote: They might be false-positive.\n      For example, `cargo-udeps` cannot detect usage of crates that are only used in doc-tests.\n      To ignore some dependencies, write `package.metadata.cargo-udeps.ignore` in Cargo.toml.\n\nstderr:\nwarning: /home/runner/check/batch_1/os-checker/os-checker-test-suite/miri-checks-this/Cargo.toml: no edition set: defaulting to the 2015 edition while the latest is 2024\n    Checking log v0.4.27\n    Checking updes-checks-this v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/updes-checks-this)\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.10s\ninfo: Loading depinfo from \"/home/runner/check/batch_1/os-checker/os-checker-test-suite/target/x86_64-unknown-linux-gnu/debug/deps/updes_checks_this-6cf9c466c8ecec71.d\"\n"
            ]
          }
        }
      ]
    },
    {
      "user": "os-checker",
      "repo": "os-checker-test-suite",
      "pkg": "miri-checks-this",
      "count": 2,
      "raw_reports": [
        {
          "file": "[Geiger] Unsafe code statistics",
          "features": "",
          "count": 1,
          "kinds": {
            "Geiger": [
              "pkg=miri-checks-this, checker=Geiger\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/miri-checks-this\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\ntimestamp=2025-06-28 10:25:06.301831377 +08:00:00\n\n\nMetric output format: x/y\n    x = unsafe code used by the build\n    y = total unsafe code found in the crate\n\nSymbols:\n    :) = No `unsafe` usage found, declares #![forbid(unsafe_code)]\n    ?  = No `unsafe` usage found, missing #![forbid(unsafe_code)]\n    !  = `unsafe` usage found\n\nFunctions  Expressions  Impls  Traits  Methods  Dependency\n\n0/0        3/3          0/0    0/0     0/0      !  miri-checks-this 0.1.0\n\n0/0        3/3          0/0    0/0     0/0\n\n"
            ]
          }
        },
        {
          "file": "miri-checks-this/src/main.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: transmute from a reference to a pointer\n  --> miri-checks-this/src/main.rs:16:35\n   |\n16 |     let xraw: *mut i32 = unsafe { mem::transmute(&mut x) };\n   |                                   ^^^^^^^^^^^^^^^^^^^^^^ help: try: `&mut x as *mut i32`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute\n   = note: `#[warn(clippy::useless_transmute)]` on by default\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "os-checker",
      "repo": "os-checker-test-suite",
      "pkg": "ws-rap-checks-this_with-build-script",
      "count": 2,
      "raw_reports": [
        {
          "file": "[Geiger] Unsafe code statistics",
          "features": "",
          "count": 1,
          "kinds": {
            "Geiger": [
              "pkg=ws-rap-checks-this_with-build-script, checker=Geiger\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/workspace2/crates/ws-rap-checks-this_with-build-script\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\ntimestamp=2025-06-28 10:25:28.7021475 +08:00:00\n\n\nMetric output format: x/y\n    x = unsafe code used by the build\n    y = total unsafe code found in the crate\n\nSymbols:\n    :) = No `unsafe` usage found, declares #![forbid(unsafe_code)]\n    ?  = No `unsafe` usage found, missing #![forbid(unsafe_code)]\n    !  = `unsafe` usage found\n\nFunctions  Expressions  Impls  Traits  Methods  Dependency\n\n0/0        3/3          0/0    0/0     0/0      !  ws-rap-checks-this_with-build-script 0.1.0\n\n0/0        3/3          0/0    0/0     0/0\n\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T02:22:21Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at crates/ws-rap-checks-this_with-build-script/src/main.rs:7:13: 7:26 (#0) after dropped at crates/ws-rap-checks-this_with-build-script/src/main.rs:5:5: 5:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at crates/ws-rap-checks-this_with-build-script/src/main.rs:8:28: 8:32 (#5) after dropped at crates/ws-rap-checks-this_with-build-script/src/main.rs:5:5: 5:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-06-28T02:22:21Z WARN  lockbud::callbacks] crate ws_rap_checks_this_with_build_script contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }"
            ]
          }
        }
      ]
    },
    {
      "user": "os-checker",
      "repo": "os-checker-test-suite",
      "pkg": "mirai-checks-this",
      "count": 1,
      "raw_reports": [
        {
          "file": "mirai-checks-this/src/main.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Mirai": [
              "warning: [MIRAI] attempt to add with overflow\n  --> mirai-checks-this/src/main.rs:26:10\n   |\n26 |     dbg!(a + b());\n   |          ^^^^^^^\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "os-checker",
      "repo": "os-checker-test-suite",
      "pkg": "ws-rap-checks-this1",
      "count": 1,
      "raw_reports": [
        {
          "file": "[Rapx] memory safety detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Rapx": [
              "pkg=ws-rap-checks-this1, checker=Rapx\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/workspace2/crates/ws-rap-checks-this1\ncmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-28 10:22:52.921254 +08:00:00\n\nwarning: Memory Leak detected.\n --> crates/ws-rap-checks-this1/src/main.rs:3:16\n  |\n1 | fn main() {\n2 |     let buf = Box::new(\"buffer\");\n3 |     let _ptr = Box::into_raw(buf);\n  |                ------------------ Memory Leak Candidates.\n4 | }\n  |\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Atomvchecker",
    "Outdated",
    "Geiger",
    "Unused Deps",
    "Unformatted"
  ]
}