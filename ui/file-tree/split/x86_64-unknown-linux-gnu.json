{
  "data": [
    {
      "user": "shilei-massclouds",
      "repo": "percpu2",
      "pkg": "percpu2",
      "count": 55,
      "raw_reports": [
        {
          "file": "tests/test_percpu.rs",
          "features": "",
          "count": 48,
          "kinds": {
            "Mirai": [
              "error[E0432]: unresolved import `percpu`\n --> tests/test_percpu.rs:3:5\n  |\n3 | use percpu::*;\n  |     ^^^^^^ use of undeclared crate or module `percpu`\n  |\nhelp: there is a crate or module with a similar name\n  |\n3 | use percpu2::*;\n  |     ~~~~~~~\n\n",
              "error: cannot find attribute `def_percpu` in this scope\n --> tests/test_percpu.rs:7:3\n  |\n7 | #[def_percpu]\n  |   ^^^^^^^^^^\n  |\nhelp: consider importing one of these attribute macros\n  |\n3 + use percpu2::def_percpu;\n  |\n3 + use percpu_macros2::def_percpu;\n  |\n\n",
              "error: cannot find attribute `def_percpu` in this scope\n  --> tests/test_percpu.rs:10:3\n   |\n10 | #[def_percpu]\n   |   ^^^^^^^^^^\n   |\nhelp: consider importing one of these attribute macros\n   |\n3  + use percpu2::def_percpu;\n   |\n3  + use percpu_macros2::def_percpu;\n   |\n\n",
              "error: cannot find attribute `def_percpu` in this scope\n  --> tests/test_percpu.rs:13:3\n   |\n13 | #[def_percpu]\n   |   ^^^^^^^^^^\n   |\nhelp: consider importing one of these attribute macros\n   |\n3  + use percpu2::def_percpu;\n   |\n3  + use percpu_macros2::def_percpu;\n   |\n\n",
              "error: cannot find attribute `def_percpu` in this scope\n  --> tests/test_percpu.rs:16:3\n   |\n16 | #[def_percpu]\n   |   ^^^^^^^^^^\n   |\nhelp: consider importing one of these attribute macros\n   |\n3  + use percpu2::def_percpu;\n   |\n3  + use percpu_macros2::def_percpu;\n   |\n\n",
              "error: cannot find attribute `def_percpu` in this scope\n  --> tests/test_percpu.rs:19:3\n   |\n19 | #[def_percpu]\n   |   ^^^^^^^^^^\n   |\nhelp: consider importing one of these attribute macros\n   |\n3  + use percpu2::def_percpu;\n   |\n3  + use percpu_macros2::def_percpu;\n   |\n\n",
              "error: cannot find attribute `def_percpu` in this scope\n  --> tests/test_percpu.rs:22:3\n   |\n22 | #[def_percpu]\n   |   ^^^^^^^^^^\n   |\nhelp: consider importing one of these attribute macros\n   |\n3  + use percpu2::def_percpu;\n   |\n3  + use percpu_macros2::def_percpu;\n   |\n\n",
              "error: cannot find attribute `def_percpu` in this scope\n  --> tests/test_percpu.rs:30:3\n   |\n30 | #[def_percpu]\n   |   ^^^^^^^^^^\n   |\nhelp: consider importing one of these attribute macros\n   |\n3  + use percpu2::def_percpu;\n   |\n3  + use percpu_macros2::def_percpu;\n   |\n\n",
              "error[E0599]: no method named `offset` found for type `bool` in the current scope\n  --> tests/test_percpu.rs:52:41\n   |\n52 |     println!(\"bool offset: {:#x}\", BOOL.offset());\n   |                                         ^^^^^^ method not found in `bool`\n\n",
              "error[E0599]: no method named `offset` found for type `u8` in the current scope\n  --> tests/test_percpu.rs:53:37\n   |\n53 |     println!(\"u8 offset: {:#x}\", U8.offset());\n   |                                     ^^^^^^ method not found in `u8`\n\n",
              "error[E0599]: no method named `offset` found for type `u16` in the current scope\n  --> tests/test_percpu.rs:54:39\n   |\n54 |     println!(\"u16 offset: {:#x}\", U16.offset());\n   |                                       ^^^^^^ method not found in `u16`\n\n",
              "error[E0599]: no method named `offset` found for type `u32` in the current scope\n  --> tests/test_percpu.rs:55:39\n   |\n55 |     println!(\"u32 offset: {:#x}\", U32.offset());\n   |                                       ^^^^^^ method not found in `u32`\n\n",
              "error[E0599]: no method named `offset` found for type `u64` in the current scope\n  --> tests/test_percpu.rs:56:39\n   |\n56 |     println!(\"u64 offset: {:#x}\", U64.offset());\n   |                                       ^^^^^^ method not found in `u64`\n\n",
              "error[E0599]: no method named `offset` found for type `usize` in the current scope\n  --> tests/test_percpu.rs:57:43\n   |\n57 |     println!(\"usize offset: {:#x}\", USIZE.offset());\n   |                                           ^^^^^^ method not found in `usize`\n\n",
              "error[E0599]: no method named `offset` found for struct `Struct` in the current scope\n  --> tests/test_percpu.rs:58:45\n   |\n25 | struct Struct {\n   | ------------- method `offset` not found for this struct\n...\n58 |     println!(\"struct offset: {:#x}\", STRUCT.offset());\n   |                                             ^^^^^^ method not found in `Struct`\n\n",
              "error[E0599]: no method named `offset` found for type `bool` in the current scope\n  --> tests/test_percpu.rs:62:32\n   |\n62 |         assert_eq!(base + BOOL.offset(), BOOL.current_ptr() as usize);\n   |                                ^^^^^^ method not found in `bool`\n\n",
              "error[E0599]: no method named `current_ptr` found for type `bool` in the current scope\n  --> tests/test_percpu.rs:62:47\n   |\n62 |         assert_eq!(base + BOOL.offset(), BOOL.current_ptr() as usize);\n   |                                               ^^^^^^^^^^^ method not found in `bool`\n\n",
              "error[E0599]: no method named `offset` found for type `u8` in the current scope\n  --> tests/test_percpu.rs:63:30\n   |\n63 |         assert_eq!(base + U8.offset(), U8.current_ptr() as usize);\n   |                              ^^^^^^ method not found in `u8`\n\n",
              "error[E0599]: no method named `current_ptr` found for type `u8` in the current scope\n  --> tests/test_percpu.rs:63:43\n   |\n63 |         assert_eq!(base + U8.offset(), U8.current_ptr() as usize);\n   |                                           ^^^^^^^^^^^ method not found in `u8`\n\n",
              "error[E0599]: no method named `offset` found for type `u16` in the current scope\n  --> tests/test_percpu.rs:64:31\n   |\n64 |         assert_eq!(base + U16.offset(), U16.current_ptr() as usize);\n   |                               ^^^^^^ method not found in `u16`\n\n",
              "error[E0599]: no method named `current_ptr` found for type `u16` in the current scope\n  --> tests/test_percpu.rs:64:45\n   |\n64 |         assert_eq!(base + U16.offset(), U16.current_ptr() as usize);\n   |                                             ^^^^^^^^^^^ method not found in `u16`\n\n",
              "error[E0599]: no method named `offset` found for type `u32` in the current scope\n  --> tests/test_percpu.rs:65:31\n   |\n65 |         assert_eq!(base + U32.offset(), U32.current_ptr() as usize);\n   |                               ^^^^^^ method not found in `u32`\n\n",
              "error[E0599]: no method named `current_ptr` found for type `u32` in the current scope\n  --> tests/test_percpu.rs:65:45\n   |\n65 |         assert_eq!(base + U32.offset(), U32.current_ptr() as usize);\n   |                                             ^^^^^^^^^^^ method not found in `u32`\n\n",
              "error[E0599]: no method named `offset` found for type `u64` in the current scope\n  --> tests/test_percpu.rs:66:31\n   |\n66 |         assert_eq!(base + U64.offset(), U64.current_ptr() as usize);\n   |                               ^^^^^^ method not found in `u64`\n\n",
              "error[E0599]: no method named `current_ptr` found for type `u64` in the current scope\n  --> tests/test_percpu.rs:66:45\n   |\n66 |         assert_eq!(base + U64.offset(), U64.current_ptr() as usize);\n   |                                             ^^^^^^^^^^^ method not found in `u64`\n\n",
              "error[E0599]: no method named `offset` found for type `usize` in the current scope\n  --> tests/test_percpu.rs:67:33\n   |\n67 |         assert_eq!(base + USIZE.offset(), USIZE.current_ptr() as usize);\n   |                                 ^^^^^^ method not found in `usize`\n\n",
              "error[E0599]: no method named `current_ptr` found for type `usize` in the current scope\n  --> tests/test_percpu.rs:67:49\n   |\n67 |         assert_eq!(base + USIZE.offset(), USIZE.current_ptr() as usize);\n   |                                                 ^^^^^^^^^^^ method not found in `usize`\n\n",
              "error[E0599]: no method named `offset` found for struct `Struct` in the current scope\n  --> tests/test_percpu.rs:68:34\n   |\n25 | struct Struct {\n   | ------------- method `offset` not found for this struct\n...\n68 |         assert_eq!(base + STRUCT.offset(), STRUCT.current_ptr() as usize);\n   |                                  ^^^^^^ method not found in `Struct`\n\n",
              "error[E0599]: no method named `current_ptr` found for struct `Struct` in the current scope\n  --> tests/test_percpu.rs:68:51\n   |\n25 | struct Struct {\n   | ------------- method `current_ptr` not found for this struct\n...\n68 |         assert_eq!(base + STRUCT.offset(), STRUCT.current_ptr() as usize);\n   |                                                   ^^^^^^^^^^^ method not found in `Struct`\n\n",
              "error[E0599]: no method named `write_current` found for type `bool` in the current scope\n  --> tests/test_percpu.rs:71:10\n   |\n71 |     BOOL.write_current(true);\n   |          ^^^^^^^^^^^^^ method not found in `bool`\n\n",
              "error[E0599]: no method named `write_current` found for type `u8` in the current scope\n  --> tests/test_percpu.rs:72:8\n   |\n72 |     U8.write_current(123);\n   |        ^^^^^^^^^^^^^ method not found in `u8`\n\n",
              "error[E0599]: no method named `write_current` found for type `u16` in the current scope\n  --> tests/test_percpu.rs:73:9\n   |\n73 |     U16.write_current(0xabcd);\n   |         ^^^^^^^^^^^^^ method not found in `u16`\n\n",
              "error[E0599]: no method named `write_current` found for type `u32` in the current scope\n  --> tests/test_percpu.rs:74:9\n   |\n74 |     U32.write_current(0xdead_beef);\n   |         ^^^^^^^^^^^^^ method not found in `u32`\n\n",
              "error[E0599]: no method named `write_current` found for type `u64` in the current scope\n  --> tests/test_percpu.rs:75:9\n   |\n75 |     U64.write_current(0xa2ce_a2ce_a2ce_a2ce);\n   |         ^^^^^^^^^^^^^ method not found in `u64`\n\n",
              "error[E0599]: no method named `write_current` found for type `usize` in the current scope\n  --> tests/test_percpu.rs:76:11\n   |\n76 |     USIZE.write_current(0xffff_0000);\n   |           ^^^^^^^^^^^^^ method not found in `usize`\n\n",
              "error[E0599]: no method named `with_current` found for struct `Struct` in the current scope\n  --> tests/test_percpu.rs:78:12\n   |\n25 | struct Struct {\n   | ------------- method `with_current` not found for this struct\n...\n78 |     STRUCT.with_current(|s| {\n   |     -------^^^^^^^^^^^^ method not found in `Struct`\n\n",
              "error[E0599]: no method named `read_current` found for type `bool` in the current scope\n  --> tests/test_percpu.rs:83:37\n   |\n83 |     println!(\"bool value: {}\", BOOL.read_current());\n   |                                     ^^^^^^^^^^^^ method not found in `bool`\n\n",
              "error[E0599]: no method named `read_current` found for type `u8` in the current scope\n  --> tests/test_percpu.rs:84:33\n   |\n84 |     println!(\"u8 value: {}\", U8.read_current());\n   |                                 ^^^^^^^^^^^^ method not found in `u8`\n\n",
              "error[E0599]: no method named `read_current` found for type `u16` in the current scope\n  --> tests/test_percpu.rs:85:38\n   |\n85 |     println!(\"u16 value: {:#x}\", U16.read_current());\n   |                                      ^^^^^^^^^^^^ method not found in `u16`\n\n",
              "error[E0599]: no method named `read_current` found for type `u32` in the current scope\n  --> tests/test_percpu.rs:86:38\n   |\n86 |     println!(\"u32 value: {:#x}\", U32.read_current());\n   |                                      ^^^^^^^^^^^^ method not found in `u32`\n\n",
              "error[E0599]: no method named `read_current` found for type `u64` in the current scope\n  --> tests/test_percpu.rs:87:38\n   |\n87 |     println!(\"u64 value: {:#x}\", U64.read_current());\n   |                                      ^^^^^^^^^^^^ method not found in `u64`\n\n",
              "error[E0599]: no method named `read_current` found for type `usize` in the current scope\n  --> tests/test_percpu.rs:88:42\n   |\n88 |     println!(\"usize value: {:#x}\", USIZE.read_current());\n   |                                          ^^^^^^^^^^^^ method not found in `usize`\n\n",
              "error[E0599]: no method named `read_current` found for type `u8` in the current scope\n  --> tests/test_percpu.rs:90:19\n   |\n90 |     assert_eq!(U8.read_current(), 123);\n   |                   ^^^^^^^^^^^^ method not found in `u8`\n\n",
              "error[E0599]: no method named `read_current` found for type `u16` in the current scope\n  --> tests/test_percpu.rs:91:20\n   |\n91 |     assert_eq!(U16.read_current(), 0xabcd);\n   |                    ^^^^^^^^^^^^ method not found in `u16`\n\n",
              "error[E0599]: no method named `read_current` found for type `u32` in the current scope\n  --> tests/test_percpu.rs:92:20\n   |\n92 |     assert_eq!(U32.read_current(), 0xdead_beef);\n   |                    ^^^^^^^^^^^^ method not found in `u32`\n\n",
              "error[E0599]: no method named `read_current` found for type `u64` in the current scope\n  --> tests/test_percpu.rs:93:20\n   |\n93 |     assert_eq!(U64.read_current(), 0xa2ce_a2ce_a2ce_a2ce);\n   |                    ^^^^^^^^^^^^ method not found in `u64`\n\n",
              "error[E0599]: no method named `read_current` found for type `usize` in the current scope\n  --> tests/test_percpu.rs:94:22\n   |\n94 |     assert_eq!(USIZE.read_current(), 0xffff_0000);\n   |                      ^^^^^^^^^^^^ method not found in `usize`\n\n",
              "error[E0599]: no method named `with_current` found for struct `Struct` in the current scope\n  --> tests/test_percpu.rs:96:12\n   |\n25 | struct Struct {\n   | ------------- method `with_current` not found for this struct\n...\n96 |     STRUCT.with_current(|s| {\n   |     -------^^^^^^^^^^^^ method not found in `Struct`\n\n"
            ]
          }
        },
        {
          "file": "src/imp.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Mirai": [
              "warning: [MIRAI] Inline assembly code cannot be analyzed by MIRAI.\n  --> src/imp.rs:17:5\n   |\n17 |     percpu_symbol_offset!(_percpu_load_end) - percpu_symbol_offset!(_percpu_load_start)\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: this warning originates in the macro `percpu_symbol_offset` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: [MIRAI] Inline assembly code cannot be analyzed by MIRAI.\n   --> src/imp.rs:95:21\n    |\n95  | /                     core::arch::asm!(\n96  | |                         \"syscall\",\n97  | |                         in(\"eax\") SYS_ARCH_PRCTL,\n98  | |                         in(\"edi\") ARCH_SET_GS,\n99  | |                         in(\"rsi\") tp,\n100 | |                     );\n    | |_____________________^\n\n",
              "warning: [MIRAI] Inline assembly code cannot be analyzed by MIRAI.\n   --> src/imp.rs:119:1\n    |\n119 | #[percpu_macros2::def_percpu]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the attribute macro `percpu_macros2::def_percpu` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=percpu2, checker=Mirai\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/percpu2/percpu2\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 15:00:34.836276426 +08:00:00\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n    Checking scopeguard v1.2.0\n    Checking bitflags v1.3.2\n   Compiling x86 v0.52.0\n    Checking raw-cpuid v10.7.0\n    Checking bit_field v0.10.2\n   Compiling percpu2 v0.1.0 (/home/runner/check/batch_9/shilei-massclouds/percpu2/percpu2)\n    Checking cfg-if v1.0.0\n   Compiling lock_api v0.4.12\n   Compiling quote v1.0.40\n   Compiling syn v2.0.101\n    Checking spin v0.9.8\n   Compiling percpu_macros2 v0.1.0 (/home/runner/check/batch_9/shilei-massclouds/percpu2/percpu_macros2)\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 3.90s\n   Compiling scopeguard v1.2.0\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling cfg-if v1.0.0\n   Compiling raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling spin v0.9.8\n   Compiling x86 v0.52.0\n   Compiling percpu2 v0.1.0 (/home/runner/check/batch_9/shilei-massclouds/percpu2/percpu2)\nerror: could not compile `percpu2` (test \"test_percpu\") due to 48 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) outdated",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=percpu2, checker=Outdated\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/percpu2/percpu2\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n// timestamp=2025-05-04 15:00:55.48555131 +08:00:00\nerror: feature `sp-naive` includes `percpu_macros2/sp-naive`, but `percpu_macros2` is not a dependency\n  --> Cargo.toml:27:12\n   |\n27 | sp-naive = [\"percpu_macros2/sp-naive\"]\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nerror: failed to parse manifest at `/tmp/cargo-outdated5nOxub/Cargo.toml`\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=percpu2, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/percpu2/percpu2\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 15:00:30.690002803 +08:00:00\n    Building percpu2 v0.1.0 (current)\n       Built [   3.452s] (current)\n     Parsing percpu2 v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: percpu2 not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=percpu2, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_9/shilei-massclouds/percpu2/percpu2\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-05-04 15:00:34.749545578 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building percpu2 v0.1.0 (current)\n       Built [   3.452s] (current)\n     Parsing percpu2 v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: percpu2 not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        }
      ]
    },
    {
      "user": "shilei-massclouds",
      "repo": "rust_fatfs",
      "pkg": "rust_fatfs",
      "count": 46,
      "raw_reports": [
        {
          "file": "tests/format.rs",
          "features": "",
          "count": 20,
          "kinds": {
            "Mirai": [
              "error[E0432]: unresolved import `fatfs`\n --> tests/format.rs:4:5\n  |\n4 | use fatfs::{DefaultTimeProvider, LossyOemCpConverter, StdIoWrapper};\n  |     ^^^^^ use of undeclared crate or module `fatfs`\n\n",
              "error[E0433]: failed to resolve: use of undeclared crate or module `fatfs`\n  --> tests/format.rs:68:31\n   |\n68 |     let mut buffered_stream = fatfs::StdIoWrapper::from(BufStream::new(storage_cur));\n   |                               ^^^^^ use of undeclared crate or module `fatfs`\n\n",
              "error[E0433]: failed to resolve: use of undeclared crate or module `fatfs`\n  --> tests/format.rs:16:25\n   |\n16 |     if fs.fat_type() == fatfs::FatType::Fat32 {\n   |                         ^^^^^ use of undeclared crate or module `fatfs`\n   |\nhelp: consider importing this enum\n   |\n1  + use rust_fatfs::FatType;\n   |\nhelp: if you import `FatType`, refer to it directly\n   |\n16 -     if fs.fat_type() == fatfs::FatType::Fat32 {\n16 +     if fs.fat_type() == FatType::Fat32 {\n   |\n\n",
              "error[E0433]: failed to resolve: use of undeclared crate or module `fatfs`\n  --> tests/format.rs:71:14\n   |\n71 |     let fs = fatfs::FileSystem::new(buffered_stream, fatfs::FsOptions::new()).expect(\"open fs\");\n   |              ^^^^^ use of undeclared crate or module `fatfs`\n   |\nhelp: consider importing this struct\n   |\n1  + use rust_fatfs::FileSystem;\n   |\nhelp: if you import `FileSystem`, refer to it directly\n   |\n71 -     let fs = fatfs::FileSystem::new(buffered_stream, fatfs::FsOptions::new()).expect(\"open fs\");\n71 +     let fs = FileSystem::new(buffered_stream, fatfs::FsOptions::new()).expect(\"open fs\");\n   |\n\n",
              "error[E0433]: failed to resolve: use of undeclared crate or module `fatfs`\n  --> tests/format.rs:71:54\n   |\n71 |     let fs = fatfs::FileSystem::new(buffered_stream, fatfs::FsOptions::new()).expect(\"open fs\");\n   |                                                      ^^^^^ use of undeclared crate or module `fatfs`\n   |\nhelp: consider importing this struct\n   |\n1  + use rust_fatfs::FsOptions;\n   |\nhelp: if you import `FsOptions`, refer to it directly\n   |\n71 -     let fs = fatfs::FileSystem::new(buffered_stream, fatfs::FsOptions::new()).expect(\"open fs\");\n71 +     let fs = fatfs::FileSystem::new(buffered_stream, FsOptions::new()).expect(\"open fs\");\n   |\n\n",
              "error[E0433]: failed to resolve: use of undeclared crate or module `fatfs`\n  --> tests/format.rs:79:16\n   |\n79 |     let opts = fatfs::FormatVolumeOptions::new();\n   |                ^^^^^ use of undeclared crate or module `fatfs`\n   |\nhelp: consider importing this struct\n   |\n1  + use rust_fatfs::FormatVolumeOptions;\n   |\nhelp: if you import `FormatVolumeOptions`, refer to it directly\n   |\n79 -     let opts = fatfs::FormatVolumeOptions::new();\n79 +     let opts = FormatVolumeOptions::new();\n   |\n\n",
              "error[E0433]: failed to resolve: use of undeclared crate or module `fatfs`\n  --> tests/format.rs:81:31\n   |\n81 |     assert_eq!(fs.fat_type(), fatfs::FatType::Fat12);\n   |                               ^^^^^ use of undeclared crate or module `fatfs`\n   |\nhelp: consider importing this enum\n   |\n1  + use rust_fatfs::FatType;\n   |\nhelp: if you import `FatType`, refer to it directly\n   |\n81 -     assert_eq!(fs.fat_type(), fatfs::FatType::Fat12);\n81 +     assert_eq!(fs.fat_type(), FatType::Fat12);\n   |\n\n",
              "error[E0433]: failed to resolve: use of undeclared crate or module `fatfs`\n  --> tests/format.rs:87:16\n   |\n87 |     let opts = fatfs::FormatVolumeOptions::new().fats(1);\n   |                ^^^^^ use of undeclared crate or module `fatfs`\n   |\nhelp: consider importing this struct\n   |\n1  + use rust_fatfs::FormatVolumeOptions;\n   |\nhelp: if you import `FormatVolumeOptions`, refer to it directly\n   |\n87 -     let opts = fatfs::FormatVolumeOptions::new().fats(1);\n87 +     let opts = FormatVolumeOptions::new().fats(1);\n   |\n\n",
              "error[E0433]: failed to resolve: use of undeclared crate or module `fatfs`\n  --> tests/format.rs:89:31\n   |\n89 |     assert_eq!(fs.fat_type(), fatfs::FatType::Fat16);\n   |                               ^^^^^ use of undeclared crate or module `fatfs`\n   |\nhelp: consider importing this enum\n   |\n1  + use rust_fatfs::FatType;\n   |\nhelp: if you import `FatType`, refer to it directly\n   |\n89 -     assert_eq!(fs.fat_type(), fatfs::FatType::Fat16);\n89 +     assert_eq!(fs.fat_type(), FatType::Fat16);\n   |\n\n",
              "error[E0433]: failed to resolve: use of undeclared crate or module `fatfs`\n  --> tests/format.rs:95:16\n   |\n95 |     let opts = fatfs::FormatVolumeOptions::new();\n   |                ^^^^^ use of undeclared crate or module `fatfs`\n   |\nhelp: consider importing this struct\n   |\n1  + use rust_fatfs::FormatVolumeOptions;\n   |\nhelp: if you import `FormatVolumeOptions`, refer to it directly\n   |\n95 -     let opts = fatfs::FormatVolumeOptions::new();\n95 +     let opts = FormatVolumeOptions::new();\n   |\n\n",
              "error[E0433]: failed to resolve: use of undeclared crate or module `fatfs`\n  --> tests/format.rs:97:31\n   |\n97 |     assert_eq!(fs.fat_type(), fatfs::FatType::Fat16);\n   |                               ^^^^^ use of undeclared crate or module `fatfs`\n   |\nhelp: consider importing this enum\n   |\n1  + use rust_fatfs::FatType;\n   |\nhelp: if you import `FatType`, refer to it directly\n   |\n97 -     assert_eq!(fs.fat_type(), fatfs::FatType::Fat16);\n97 +     assert_eq!(fs.fat_type(), FatType::Fat16);\n   |\n\n",
              "error[E0433]: failed to resolve: use of undeclared crate or module `fatfs`\n   --> tests/format.rs:103:16\n    |\n103 |     let opts = fatfs::FormatVolumeOptions::new();\n    |                ^^^^^ use of undeclared crate or module `fatfs`\n    |\nhelp: consider importing this struct\n    |\n1   + use rust_fatfs::FormatVolumeOptions;\n    |\nhelp: if you import `FormatVolumeOptions`, refer to it directly\n    |\n103 -     let opts = fatfs::FormatVolumeOptions::new();\n103 +     let opts = FormatVolumeOptions::new();\n    |\n\n",
              "error[E0433]: failed to resolve: use of undeclared crate or module `fatfs`\n   --> tests/format.rs:105:31\n    |\n105 |     assert_eq!(fs.fat_type(), fatfs::FatType::Fat32);\n    |                               ^^^^^ use of undeclared crate or module `fatfs`\n    |\nhelp: consider importing this enum\n    |\n1   + use rust_fatfs::FatType;\n    |\nhelp: if you import `FatType`, refer to it directly\n    |\n105 -     assert_eq!(fs.fat_type(), fatfs::FatType::Fat32);\n105 +     assert_eq!(fs.fat_type(), FatType::Fat32);\n    |\n\n",
              "error[E0433]: failed to resolve: use of undeclared crate or module `fatfs`\n   --> tests/format.rs:111:16\n    |\n111 |     let opts = fatfs::FormatVolumeOptions::new().bytes_per_sector(4096);\n    |                ^^^^^ use of undeclared crate or module `fatfs`\n    |\nhelp: consider importing this struct\n    |\n1   + use rust_fatfs::FormatVolumeOptions;\n    |\nhelp: if you import `FormatVolumeOptions`, refer to it directly\n    |\n111 -     let opts = fatfs::FormatVolumeOptions::new().bytes_per_sector(4096);\n111 +     let opts = FormatVolumeOptions::new().bytes_per_sector(4096);\n    |\n\n",
              "error[E0433]: failed to resolve: use of undeclared crate or module `fatfs`\n   --> tests/format.rs:113:31\n    |\n113 |     assert_eq!(fs.fat_type(), fatfs::FatType::Fat32);\n    |                               ^^^^^ use of undeclared crate or module `fatfs`\n    |\nhelp: consider importing this enum\n    |\n1   + use rust_fatfs::FatType;\n    |\nhelp: if you import `FatType`, refer to it directly\n    |\n113 -     assert_eq!(fs.fat_type(), fatfs::FatType::Fat32);\n113 +     assert_eq!(fs.fat_type(), FatType::Fat32);\n    |\n\n",
              "error[E0433]: failed to resolve: use of undeclared crate or module `fatfs`\n   --> tests/format.rs:119:16\n    |\n119 |     let opts = fatfs::FormatVolumeOptions::new();\n    |                ^^^^^ use of undeclared crate or module `fatfs`\n    |\nhelp: consider importing this struct\n    |\n1   + use rust_fatfs::FormatVolumeOptions;\n    |\nhelp: if you import `FormatVolumeOptions`, refer to it directly\n    |\n119 -     let opts = fatfs::FormatVolumeOptions::new();\n119 +     let opts = FormatVolumeOptions::new();\n    |\n\n",
              "error[E0433]: failed to resolve: use of undeclared crate or module `fatfs`\n   --> tests/format.rs:128:16\n    |\n128 |     let opts = fatfs::FormatVolumeOptions::new()\n    |                ^^^^^ use of undeclared crate or module `fatfs`\n    |\nhelp: consider importing this struct\n    |\n1   + use rust_fatfs::FormatVolumeOptions;\n    |\nhelp: if you import `FormatVolumeOptions`, refer to it directly\n    |\n128 -     let opts = fatfs::FormatVolumeOptions::new()\n128 +     let opts = FormatVolumeOptions::new()\n    |\n\n",
              "error[E0433]: failed to resolve: use of undeclared crate or module `fatfs`\n  --> tests/format.rs:69:5\n   |\n69 |     fatfs::format_volume(&mut buffered_stream, opts).expect(\"format volume\");\n   |     ^^^^^ use of undeclared crate or module `fatfs`\n\n",
              "error[E0433]: failed to resolve: use of undeclared crate or module `fatfs`\n  --> tests/format.rs:12:5\n   |\n12 |     fatfs::FileSystem<StdIoWrapper<BufStream<io::Cursor<Vec<u8>>>>, DefaultTimeProvider, LossyOemCpConverter>;\n   |     ^^^^^ use of undeclared crate or module `fatfs`\n\n",
              "error[E0433]: failed to resolve: use of undeclared crate or module `fatfs`\n  --> tests/format.rs:63:25\n   |\n63 | fn test_format_fs(opts: fatfs::FormatVolumeOptions, total_bytes: u64) -> FileSystem {\n   |                         ^^^^^ use of undeclared crate or module `fatfs`\n\n"
            ]
          }
        },
        {
          "file": "src/boot_sector.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Clippy(Warn)": [
              "warning: importing legacy numeric constants\n --> src/boot_sector.rs:2:5\n  |\n2 | use core::u16;\n  |     ^^^^^^^^^\n  |\n  = help: remove this import\n  = note: then `u16::<CONST>` will resolve to the respective associated constant\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n  = note: `#[warn(clippy::legacy_numeric_constants)]` on by default\n\n",
              "warning: importing legacy numeric constants\n --> src/boot_sector.rs:3:5\n  |\n3 | use core::u8;\n  |     ^^^^^^^^\n  |\n  = help: remove this import\n  = note: then `u8::<CONST>` will resolve to the respective associated constant\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n\n",
              "warning: manually reimplementing `div_ceil`\n   --> src/boot_sector.rs:366:9\n    |\n366 |         (root_dir_bytes + u32::from(self.bytes_per_sector) - 1) / u32::from(self.bytes_per_sector)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.div_ceil()`: `root_dir_bytes.div_ceil(u32::from(self.bytes_per_sector))`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_div_ceil\n    = note: `#[warn(clippy::manual_div_ceil)]` on by default\n\n",
              "warning: manually reimplementing `div_ceil`\n   --> src/boot_sector.rs:402:9\n    |\n402 |         ((bytes + cluster_size - 1) / cluster_size) as u32\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.div_ceil()`: `bytes.div_ceil(cluster_size)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_div_ceil\n\n",
              "warning: manually reimplementing `div_ceil`\n   --> src/boot_sector.rs:575:27\n    |\n575 |     let sectors_per_fat = (t1 + t2 - 1) / t2;\n    |                           ^^^^^^^^^^^^^^^^^^ help: consider using `.div_ceil()`: `t1.div_ceil(t2)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_div_ceil\n\n",
              "warning: manually reimplementing `div_ceil`\n   --> src/boot_sector.rs:633:9\n    |\n633 |         (root_dir_bytes + u32::from(bytes_per_sector) - 1) / u32::from(bytes_per_sector)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.div_ceil()`: `root_dir_bytes.div_ceil(u32::from(bytes_per_sector))`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_div_ceil\n\n"
            ]
          }
        },
        {
          "file": "src/file.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Clippy(Warn)": [
              "warning: usage of a legacy numeric constant\n  --> src/file.rs:10:28\n   |\n10 | const MAX_FILE_SIZE: u32 = core::u32::MAX;\n   |                            ^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\nhelp: use the associated constant instead\n   |\n10 | const MAX_FILE_SIZE: u32 = u32::MAX;\n   |                            ~~~~~~~~\n\n",
              "warning: this could be rewritten as `let...else`\n  --> src/file.rs:95:9\n   |\n95 | /         let mut bytes_left = match self.size() {\n96 | |             Some(s) => s,\n97 | |             None => return None.into_iter().flatten(),\n98 | |         };\n   | |__________^ help: consider writing: `let Some(mut bytes_left) = self.size() else { return None.into_iter().flatten() };`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_let_else\n   = note: `#[warn(clippy::manual_let_else)]` implied by `#[warn(clippy::pedantic)]`\n\n",
              "warning: this could be rewritten as `let...else`\n   --> src/file.rs:99:9\n    |\n99  | /         let first = match self.first_cluster {\n100 | |             Some(f) => f,\n101 | |             None => return None.into_iter().flatten(),\n102 | |         };\n    | |__________^ help: consider writing: `let Some(first) = self.first_cluster else { return None.into_iter().flatten() };`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_let_else\n\n",
              "warning: this `map_or` can be simplified\n   --> src/file.rs:228:16\n    |\n228 |             if e.inner().size().map_or(false, |s| offset > s) {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use is_some_and instead: `e.inner().size().is_some_and(|s| offset > s)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or\n    = note: `#[warn(clippy::unnecessary_map_or)]` on by default\n\n",
              "warning: this could be rewritten as `let...else`\n   --> src/file.rs:280:9\n    |\n280 | /         let current_cluster = match current_cluster_opt {\n281 | |             Some(n) => n,\n282 | |             None => return Ok(0),\n283 | |         };\n    | |__________^ help: consider writing: `let Some(current_cluster) = current_cluster_opt else { return Ok(0) };`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_let_else\n\n",
              "warning: this could be rewritten as `let...else`\n   --> src/file.rs:424:9\n    |\n424 | /         let mut new_offset = if let Some(new_offset) = new_offset_opt {\n425 | |             new_offset\n426 | |         } else {\n427 | |             error!(\"Invalid seek offset\");\n428 | |             return Err(Error::InvalidInput);\n429 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_let_else\nhelp: consider writing\n    |\n424 ~         let Some(mut new_offset) = new_offset_opt else {\n425 +             error!(\"Invalid seek offset\");\n426 +             return Err(Error::InvalidInput);\n427 +         };\n    |\n\n"
            ]
          }
        },
        {
          "file": "src/fs.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Warn)": [
              "warning: importing legacy numeric constants\n  --> src/fs.rs:10:5\n   |\n10 | use core::u32;\n   |     ^^^^^^^^^\n   |\n   = help: remove this import\n   = note: then `u32::<CONST>` will resolve to the respective associated constant\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n\n",
              "warning: manually reimplementing `is_power_of_two`\n   --> src/fs.rs:966:13\n    |\n966 |             bytes_per_cluster.count_ones() == 1 && bytes_per_cluster >= 512,\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.is_power_of_two()`: `bytes_per_cluster.is_power_of_two()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_is_power_of_two\n    = note: `#[warn(clippy::manual_is_power_of_two)]` implied by `#[warn(clippy::pedantic)]`\n\n",
              "warning: manually reimplementing `is_power_of_two`\n   --> src/fs.rs:996:13\n    |\n996 |             bytes_per_sector.count_ones() == 1 && bytes_per_sector >= 512,\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.is_power_of_two()`: `bytes_per_sector.is_power_of_two()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_is_power_of_two\n\n"
            ]
          }
        },
        {
          "file": "src/dir.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: manually reimplementing `div_ceil`\n   --> src/dir.rs:739:37\n    |\n739 | const MAX_LONG_DIR_ENTRIES: usize = (MAX_LONG_NAME_LEN + LFN_PART_LEN - 1) / LFN_PART_LEN;\n    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.div_ceil()`: `MAX_LONG_NAME_LEN.div_ceil(LFN_PART_LEN)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_div_ceil\n\n",
              "warning: manually reimplementing `div_ceil`\n   --> src/dir.rs:955:27\n    |\n955 |         let num_entries = (name_utf16.len() + LFN_PART_LEN - 1) / LFN_PART_LEN;\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.div_ceil()`: `name_utf16.len().div_ceil(LFN_PART_LEN)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_div_ceil\n\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rust_fatfs, checker=Mirai\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/rust_fatfs/rust_fatfs\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 15:07:50.931723923 +08:00:00\n    Checking bitflags v1.3.2\n    Checking log v0.4.27\n    Checking rust_fatfs v0.4.0 (/home/runner/check/batch_9/shilei-massclouds/rust_fatfs/rust_fatfs)\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 1.03s\n   Compiling libc v0.2.172\n   Compiling memchr v2.7.4\n   Compiling regex-syntax v0.8.5\n   Compiling log v0.4.27\n   Compiling termcolor v1.4.1\n   Compiling aho-corasick v1.1.3\n   Compiling bitflags v1.3.2\n   Compiling humantime v2.2.0\n   Compiling atty v0.2.14\n   Compiling rust_fatfs v0.4.0 (/home/runner/check/batch_9/shilei-massclouds/rust_fatfs/rust_fatfs)\n   Compiling fscommon v0.1.1\n   Compiling regex-automata v0.4.9\n   Compiling regex v1.11.1\n   Compiling env_logger v0.9.3\nerror: could not compile `rust_fatfs` (test \"format\") due to 20 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rust_fatfs, checker=Rapx\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/rust_fatfs/rust_fatfs\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 15:07:56.764063521 +08:00:00\n    Updating crates.io index\n    Checking bitflags v1.3.2\n    Checking log v0.4.27\n    Checking rust_fatfs v0.4.0 (/home/runner/check/batch_9/shilei-massclouds/rust_fatfs/rust_fatfs)\nthread 'rustc' panicked at src/analysis/safedrop/check_bugs.rs:51:23:\nindex out of bounds: the len is 34 but the index is 34\nstack backtrace:\n   0:     0x7ff08c9cac6a - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h10effc2e897f3f44\n   1:     0x7ff08d2034a6 - core::fmt::write::hbd15d6610b1ec6a0\n   2:     0x7ff08e41f351 - std::io::Write::write_fmt::h001054fbeb78f30b\n   3:     0x7ff08c9caac2 - std::sys::backtrace::BacktraceLock::print::h379243fdc830b8e1\n   4:     0x7ff08c9ccf96 - std::panicking::default_hook::{{closure}}::h5f0acb8207356983\n   5:     0x7ff08c9ccde0 - std::panicking::default_hook::h6e553cabd993e75a\n   6:     0x7ff08ba256ff - std[a52682fb6709fd50]::panicking::update_hook::<alloc[6c1b03e26bdbf4ed]::boxed::Box<rustc_driver_impl[193eb2676e99316f]::install_ice_hook::{closure#0}>>::{closure#0}\n   7:     0x7ff08c9cd6a8 - std::panicking::rust_panic_with_hook::h41309167c2756168\n   8:     0x7ff08c9cd47a - std::panicking::begin_panic_handler::{{closure}}::hf306b851c08afab0\n   9:     0x7ff08c9cb119 - std::sys::backtrace::__rust_end_short_backtrace::he5588192121653f9\n  10:     0x7ff08c9cd13c - rust_begin_unwind\n  11:     0x7ff08a3e5b50 - core::panicking::panic_fmt::h78fd6fa67a3d3b3d\n  12:     0x7ff08b152c7b - core::panicking::panic_bounds_check::h259d4b2367f1d39c\n  13:     0x55a0983810a9 - rapx::analysis::safedrop::check_bugs::<impl rapx::analysis::safedrop::graph::SafeDropGraph>::exist_dead::h113e4ef7f08e5624\n  14:     0x55a098380c83 - rapx::analysis::safedrop::check_bugs::<impl rapx::analysis::safedrop::graph::SafeDropGraph>::exist_dead::h113e4ef7f08e5624\n  15:     0x55a098380c83 - rapx::analysis::safedrop::check_bugs::<impl rapx::analysis::safedrop::graph::SafeDropGraph>::exist_dead::h113e4ef7f08e5624\n  16:     0x55a098380fd0 - rapx::analysis::safedrop::check_bugs::<impl rapx::analysis::safedrop::graph::SafeDropGraph>::exist_dead::h113e4ef7f08e5624\n  17:     0x55a0983814c4 - rapx::analysis::safedrop::check_bugs::<impl rapx::analysis::safedrop::graph::SafeDropGraph>::dp_check::h48282610a70b2e6e\n  18:     0x55a098388d48 - rapx::analysis::safedrop::safedrop::<impl rapx::analysis::safedrop::graph::SafeDropGraph>::check::head071587c08e9f6\n  19:     0x55a098388ef8 - rapx::analysis::safedrop::safedrop::<impl rapx::analysis::safedrop::graph::SafeDropGraph>::check::head071587c08e9f6\n  20:     0x55a09838840b - rapx::analysis::safedrop::safedrop::<impl rapx::analysis::safedrop::graph::SafeDropGraph>::check::head071587c08e9f6\n  21:     0x55a098388ef8 - rapx::analysis::safedrop::safedrop::<impl rapx::analysis::safedrop::graph::SafeDropGraph>::check::head071587c08e9f6\n  22:     0x55a09837881e - rapx::analysis::safedrop::query_safedrop::h3eee044e56815203\n  23:     0x55a0983786d2 - rapx::analysis::safedrop::SafeDrop::start::h66b0d8646908082b\n  24:     0x55a0983796df - rapx::start_analyzer::hbedc8914710c69e1\n  25:     0x55a09837172c - rustc_middle::ty::context::GlobalCtxt::enter::h204669bb4c7854de\n  26:     0x55a098379392 - <rapx::RapCallback as rustc_driver_impl::Callbacks>::after_analysis::h8ba48e5b8051bcdb\n  27:     0x7ff08df7715f - rustc_interface[edd3a01c1bde3f2a]::interface::run_compiler::<core[aa94f1cb029d72f2]::result::Result<(), rustc_span[66abce9569f09a61]::ErrorGuaranteed>, rustc_driver_impl[193eb2676e99316f]::run_compiler::{closure#0}>::{closure#1}\n  28:     0x7ff08e08c450 - std[a52682fb6709fd50]::sys::backtrace::__rust_begin_short_backtrace::<rustc_interface[edd3a01c1bde3f2a]::util::run_in_thread_with_globals<rustc_interface[edd3a01c1bde3f2a]::util::run_in_thread_pool_with_globals<rustc_interface[edd3a01c1bde3f2a]::interface::run_compiler<core[aa94f1cb029d72f2]::result::Result<(), rustc_span[66abce9569f09a61]::ErrorGuaranteed>, rustc_driver_impl[193eb2676e99316f]::run_compiler::{closure#0}>::{closure#1}, core[aa94f1cb029d72f2]::result::Result<(), rustc_span[66abce9569f09a61]::ErrorGuaranteed>>::{closure#0}, core[aa94f1cb029d72f2]::result::Result<(), rustc_span[66abce9569f09a61]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[aa94f1cb029d72f2]::result::Result<(), rustc_span[66abce9569f09a61]::ErrorGuaranteed>>\n  29:     0x7ff08e08cb17 - <<std[a52682fb6709fd50]::thread::Builder>::spawn_unchecked_<rustc_interface[edd3a01c1bde3f2a]::util::run_in_thread_with_globals<rustc_interface[edd3a01c1bde3f2a]::util::run_in_thread_pool_with_globals<rustc_interface[edd3a01c1bde3f2a]::interface::run_compiler<core[aa94f1cb029d72f2]::result::Result<(), rustc_span[66abce9569f09a61]::ErrorGuaranteed>, rustc_driver_impl[193eb2676e99316f]::run_compiler::{closure#0}>::{closure#1}, core[aa94f1cb029d72f2]::result::Result<(), rustc_span[66abce9569f09a61]::ErrorGuaranteed>>::{closure#0}, core[aa94f1cb029d72f2]::result::Result<(), rustc_span[66abce9569f09a61]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[aa94f1cb029d72f2]::result::Result<(), rustc_span[66abce9569f09a61]::ErrorGuaranteed>>::{closure#1} as core[aa94f1cb029d72f2]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  30:     0x7ff08e08da01 - std::sys::pal::unix::thread::Thread::new::thread_start::h51ead510c5edae48\n  31:     0x7ff08709caa4 - <unknown>\n  32:     0x7ff087129c3c - <unknown>\n  33:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: bug_report_url\n\nnote: please make sure that you have updated to the latest nightly\n\nnote: please attach the file at `/home/runner/check/batch_9/shilei-massclouds/rust_fatfs/rust_fatfs/rustc-ice-2025-05-04T07_07_57-543965.txt` to your bug report\n\nnote: compiler flags: --crate-type lib -C embed-bitcode=no -C debuginfo=2\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\nerror: could not compile `rust_fatfs` (lib)\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.cargo/bin/cargo-rapx /home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc --crate-name rust_fatfs --edition=2018 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 --cfg 'feature=\"alloc\"' --cfg 'feature=\"default\"' --cfg 'feature=\"lfn\"' --cfg 'feature=\"log_level_debug\"' --cfg 'feature=\"log_level_error\"' --cfg 'feature=\"log_level_info\"' --cfg 'feature=\"log_level_trace\"' --cfg 'feature=\"log_level_warn\"' --cfg 'feature=\"unicode\"' --check-cfg 'cfg(docsrs)' --check-cfg 'cfg(feature, values(\"alloc\", \"chrono\", \"default\", \"lfn\", \"log_level_debug\", \"log_level_error\", \"log_level_info\", \"log_level_trace\", \"log_level_warn\", \"std\", \"unicode\"))' -C metadata=1ef51b50ea195a58 -C extra-filename=-1ef51b50ea195a58 --out-dir /home/runner/check/batch_9/shilei-massclouds/rust_fatfs/rust_fatfs/target/x86_64-unknown-linux-gnu/debug/deps --target x86_64-unknown-linux-gnu -L dependency=/home/runner/check/batch_9/shilei-massclouds/rust_fatfs/rust_fatfs/target/x86_64-unknown-linux-gnu/debug/deps -L dependency=/home/runner/check/batch_9/shilei-massclouds/rust_fatfs/rust_fatfs/target/debug/deps --extern bitflags=/home/runner/check/batch_9/shilei-massclouds/rust_fatfs/rust_fatfs/target/x86_64-unknown-linux-gnu/debug/deps/libbitflags-a1aa3a16a978fd93.rmeta --extern log=/home/runner/check/batch_9/shilei-massclouds/rust_fatfs/rust_fatfs/target/x86_64-unknown-linux-gnu/debug/deps/liblog-da8525849d354c10.rmeta` (exit status: 101)\n07:08:02|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rust_fatfs, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/rust_fatfs/rust_fatfs\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 15:07:48.158506635 +08:00:00\n    Building rust_fatfs v0.4.0 (current)\n       Built [   1.580s] (current)\n     Parsing rust_fatfs v0.4.0 (current)\n      Parsed [   0.010s] (current)\nerror: rust_fatfs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    └── rust_fatfs 0.4.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\n\n{\n  \"database\": {\n    \"advisory-count\": 772,\n    \"last-commit\": \"4584ad9a5ea16ce196317cf4d3593e974fb4a8a1\",\n    \"last-updated\": \"2025-05-02T10:23:27+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 59\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.172\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.172\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-04T07:07:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-04T07:07:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=rust_fatfs, checker=Outdated\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_9/shilei-massclouds/rust_fatfs/rust_fatfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-04 15:08:03.833474169 +08:00:00\n\nName        Project  Compat  Latest  Kind         Platform\n----        -------  ------  ------  ----         --------\nbitflags    1.3.2    ---     2.9.0   Normal       ---\nenv_logger  0.9.3    ---     0.11.8  Development  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=rust_fatfs, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_9/shilei-massclouds/rust_fatfs/rust_fatfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-05-04 15:07:50.524125058 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building rust_fatfs v0.4.0 (current)\n       Built [   1.580s] (current)\n     Parsing rust_fatfs v0.4.0 (current)\n      Parsed [   0.010s] (current)\nerror: rust_fatfs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "src/dir_entry.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: matching over `()` is more explicit\n   --> src/dir_entry.rs:390:16\n    |\n390 |             Ok(_) => {}\n    |                ^ help: use `()` instead of `_`: `()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ignored_unit_patterns\nnote: the lint level is defined here\n   --> src/lib.rs:49:9\n    |\n49  | #![warn(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[warn(clippy::ignored_unit_patterns)]` implied by `#[warn(clippy::pedantic)]`\n\n"
            ]
          }
        },
        {
          "file": "src/io.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: item in documentation is missing backticks\n  --> src/io.rs:31:55\n   |\n31 |     /// (e. g. being close to end-of-file) or because read() was interrupted by a signal.\n   |                                                       ^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown\n   = note: `#[warn(clippy::doc_markdown)]` implied by `#[warn(clippy::pedantic)]`\nhelp: try\n   |\n31 |     /// (e. g. being close to end-of-file) or because `read()` was interrupted by a signal.\n   |                                                       ~~~~~~~~\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "shilei-massclouds",
      "repo": "macrokernel",
      "pkg": "rt_macrokernel",
      "count": 24,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs",
          "features": "",
          "count": 10,
          "kinds": {
            "Mirai": [
              "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n",
              "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n",
              "error[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\n",
              "error[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\n",
              "error[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\n"
            ],
            "Clippy(Error)": [
              "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n",
              "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n",
              "error[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\n",
              "error[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\n",
              "error[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\n"
            ]
          }
        },
        {
          "file": "src/lib.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_9/shilei-massclouds/macrokernel/rt_macrokernel/src/lib.rs (original lines from 12 to 12)\n+use core::panic::PanicInfo;\n",
              "file: /home/runner/check/batch_9/shilei-massclouds/macrokernel/rt_macrokernel/src/lib.rs (original lines from 15 to 15)\n-use core::panic::PanicInfo;\n",
              "file: /home/runner/check/batch_9/shilei-massclouds/macrokernel/rt_macrokernel/src/lib.rs (original lines from 119 to 119)\n-    use axhal::mem::{MemRegionFlags};\n+    use axhal::mem::MemRegionFlags;\n",
              "file: /home/runner/check/batch_9/shilei-massclouds/macrokernel/rt_macrokernel/src/lib.rs (original lines from 310 to 310)\n-        run_init_process(init_cmd).unwrap_or_else(|_| panic!(\"Requested init {} failed.\", init_cmd));\n+        run_init_process(init_cmd)\n+            .unwrap_or_else(|_| panic!(\"Requested init {} failed.\", init_cmd));\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\n"
            ],
            "Mirai": [
              "error[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rt_macrokernel, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/macrokernel/rt_macrokernel\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-05-04 14:23:13.387056008 +08:00:00\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.3\n   Compiling toml_datetime v0.6.9\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n    Checking log v0.4.27\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n    Checking bitflags v2.9.0\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.101\n   Compiling rustversion v1.0.20\n   Compiling toml_edit v0.19.15\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking volatile v0.4.6\n    Checking x86_64 v0.14.13\n    Checking raw-cpuid v10.7.0\n   Compiling paste v1.0.15\n   Compiling x86 v0.52.0\n    Checking scopeguard v1.2.0\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling syn v1.0.109\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking spin v0.9.8\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2.git#2fa7f00e)\n    Checking bit v0.1.1\n   Compiling libc v0.2.172\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n    Checking x2apic v0.4.3\n    Checking raw-cpuid v11.5.0\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rt_macrokernel, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/macrokernel/rt_macrokernel\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 14:24:11.779433712 +08:00:00\n   Compiling hashbrown v0.15.3\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling toml_datetime v0.6.9\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n   Compiling log v0.4.27\n[2025-05-04T06:24:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-04T06:24:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bit_field v0.10.2\n   Compiling bitflags v1.3.2\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v2.9.0\n   Compiling syn v2.0.101\n   Compiling rustversion v1.0.20\n   Compiling toml_edit v0.19.15\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling volatile v0.4.6\n   Compiling x86_64 v0.14.13\n   Compiling raw-cpuid v10.7.0\n   Compiling paste v1.0.15\n   Compiling x86 v0.52.0\n   Compiling scopeguard v1.2.0\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling syn v1.0.109\n   Compiling spin v0.9.8\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling libc v0.2.172\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n   Compiling bit v0.1.1\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2.git#2fa7f00e)\n   Compiling x2apic v0.4.3\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rt_macrokernel, checker=Mirai\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/macrokernel/rt_macrokernel\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 14:24:04.012860182 +08:00:00\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.3\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.9\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n    Checking log v0.4.27\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.9.0\n   Compiling syn v2.0.101\n   Compiling rustversion v1.0.20\n   Compiling toml_edit v0.19.15\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking volatile v0.4.6\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking x86_64 v0.14.13\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n    Checking scopeguard v1.2.0\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling syn v1.0.109\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking spin v0.9.8\n   Compiling libc v0.2.172\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2.git#2fa7f00e)\n    Checking bit v0.1.1\n    Checking x2apic v0.4.3\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n    Checking raw-cpuid v11.5.0\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rt_macrokernel, checker=Rapx\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/macrokernel/rt_macrokernel\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 14:24:19.700028409 +08:00:00\n    Updating git repository `ssh://git@github.com/shilei-massclouds/arch_boot.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axalloc.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axconfig.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axdriver.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axdtb.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axerrno.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axhal.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axlog2.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axmount.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axsyscall.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axtrap.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axtype.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/exec.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/fork.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/percpu2.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/preempt_guard.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/run_queue.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/task.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/allocator`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/memory_addr`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/spinbase`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/driver_block.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/driver_common.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/driver_pci.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/driver_virtio.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/lazy_init`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/early_console`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/kernel_guard_base`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/ratio`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axfs_devfs.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axfs_ramfs`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axfs_vfs.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/ext2fs.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/mutex.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/rust_fatfs.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/fileops.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/mmap.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/signal.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/sys.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/handler_table.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axfile.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axio.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/bprm_loader`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/elf.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/page_table`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/mm.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/taskctx.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/scheduler.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/filetable.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/fstree.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/spinpreempt.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/wait_queue.git`\n    Updating git repository `https://github.com/rcore-os/virtio-drivers.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/pipefs.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/capability`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/user_stack`\n Downloading crates ...\n  Downloaded toml_edit v0.19.15\n  Downloaded zerocopy v0.6.6\n  Downloaded winnow v0.5.40\n  Downloaded zerocopy-derive v0.6.6\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.3\n   Compiling serde v1.0.219\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.9\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.9.0\n   Compiling unicode-ident v1.0.18\n    Checking log v0.4.27\n   Compiling quote v1.0.40\n   Compiling toml_edit v0.19.15\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.9.0\n   Compiling syn v2.0.101\n   Compiling rustversion v1.0.20\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking volatile v0.4.6\n    Checking x86_64 v0.14.13\n    Checking raw-cpuid v10.7.0\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n06:25:05|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rt_macrokernel, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/macrokernel/rt_macrokernel\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 14:23:20.984898197 +08:00:00\n    Building rt_macrokernel v0.1.0 (current)\nerror: running cargo-doc on crate 'rt_macrokernel' failed with output:\n-----\n   Compiling hashbrown v0.15.3\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling toml_datetime v0.6.9\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n    Checking log v0.4.27\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n    Checking bitflags v2.9.0\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.101\n   Compiling rustversion v1.0.20\n   Compiling toml_edit v0.19.15\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking volatile v0.4.6\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking x86_64 v0.14.13\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n    Checking scopeguard v1.2.0\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling syn v1.0.109\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking spin v0.9.8\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2.git#2fa7f00e)\n   Compiling libc v0.2.172\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n    Checking bit v0.1.1\n    Checking x2apic v0.4.3\n    Checking raw-cpuid v11.5.0\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rt_macrokernel v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_9/shilei-massclouds/macrokernel/rt_macrokernel &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rt_macrokernel v0.1.0\n"
            ]
          }
        },
        {
          "file": "Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    ├── axhal 0.1.0\n    │   ├── taskctx 0.1.0\n    │   │   ├── wait_queue 0.1.0\n    │   │   │   ├── task 0.1.0\n    │   │   │   │   ├── sys 0.1.0\n    │   │   │   │   │   ├── signal 0.1.0\n    │   │   │   │   │   │   ├── mmap 0.1.0\n    │   │   │   │   │   │   │   ├── exec 0.1.0\n    │   │   │   │   │   │   │   │   ├── rt_macrokernel 0.1.0\n    │   │   │   │   │   │   │   │   └── axsyscall 0.1.0\n    │   │   │   │   │   │   │   │       ├── rt_macrokernel 0.1.0\n    │   │   │   │   │   │   │   │       └── axtrap 0.1.0\n    │   │   │   │   │   │   │   │           └── rt_macrokernel 0.1.0\n    │   │   │   │   │   │   │   ├── bprm_loader 0.1.0\n    │   │   │   │   │   │   │   │   └── exec 0.1.0\n    │   │   │   │   │   │   │   ├── axtrap 0.1.0\n    │   │   │   │   │   │   │   └── axsyscall 0.1.0\n    │   │   │   │   │   │   ├── fileops 0.1.0\n    │   │   │   │   │   │   │   ├── bprm_loader 0.1.0\n    │   │   │   │   │   │   │   └── axsyscall 0.1.0\n    │   │   │   │   │   │   ├── axtrap 0.1.0\n    │   │   │   │   │   │   └── axsyscall 0.1.0\n    │   │   │   │   │   └── axsyscall 0.1.0\n    │   │   │   │   ├── signal 0.1.0\n    │   │   │   │   ├── rt_macrokernel 0.1.0\n    │   │   │   │   ├── procfs 0.1.0\n    │   │   │   │   │   └── fileops 0.1.0\n    │   │   │   │   ├── mmap 0.1.0\n    │   │   │   │   ├── fork 0.1.0\n    │   │   │   │   │   ├── rt_macrokernel 0.1.0\n    │   │   │   │   │   └── axsyscall 0.1.0\n    │   │   │   │   ├── fileops 0.1.0\n    │   │   │   │   ├── exec 0.1.0\n    │   │   │   │   ├── bprm_loader 0.1.0\n    │   │   │   │   ├── block_loop 0.1.0\n    │   │   │   │   │   └── fileops 0.1.0\n    │   │   │   │   ├── axtrap 0.1.0\n    │   │   │   │   └── axsyscall 0.1.0\n    │   │   │   ├── sys 0.1.0\n    │   │   │   └── mutex 0.1.0\n    │   │   │       ├── sys 0.1.0\n    │   │   │       ├── mm 0.1.0\n    │   │   │       │   ├── task 0.1.0\n    │   │   │       │   ├── procfs 0.1.0\n    │   │   │       │   ├── mmap 0.1.0\n    │   │   │       │   ├── fork 0.1.0\n    │   │   │       │   └── fileops 0.1.0\n    │   │   │       ├── filetable 0.1.0\n    │   │   │       │   └── task 0.1.0\n    │   │   │       ├── fileops 0.1.0\n    │   │   │       ├── ext2fs 0.1.0\n    │   │   │       │   └── axmount 0.1.0\n    │   │   │       │       ├── rt_macrokernel 0.1.0\n    │   │   │       │       ├── fstree 0.1.0\n    │   │   │       │       │   ├── task 0.1.0\n    │   │   │       │       │   └── axfile 0.1.0\n    │   │   │       │       │       ├── procfs 0.1.0\n    │   │   │       │       │       ├── mmap 0.1.0\n    │   │   │       │       │       ├── mm 0.1.0\n    │   │   │       │       │       ├── filetable 0.1.0\n    │   │   │       │       │       ├── fileops 0.1.0\n    │   │   │       │       │       ├── exec 0.1.0\n    │   │   │       │       │       ├── bprm_loader 0.1.0\n    │   │   │       │       │       └── block_loop 0.1.0\n    │   │   │       │       └── fileops 0.1.0\n    │   │   │       ├── exec 0.1.0\n    │   │   │       ├── bprm_loader 0.1.0\n    │   │   │       ├── block_loop 0.1.0\n    │   │   │       └── axmount 0.1.0\n    │   │   ├── task 0.1.0\n    │   │   ├── sys 0.1.0\n    │   │   ├── signal 0.1.0\n    │   │   ├── run_queue 0.1.0\n    │   │   │   ├── wait_queue 0.1.0\n    │   │   │   ├── task 0.1.0\n    │   │   │   ├── sys 0.1.0\n    │   │   │   ├── rt_macrokernel 0.1.0\n    │   │   │   ├── preempt_guard 0.1.0\n    │   │   │   │   ├── task 0.1.0\n    │   │   │   │   ├── spinpreempt 0.1.0\n    │   │   │   │   │   ├── task 0.1.0\n    │   │   │   │   │   ├── fstree 0.1.0\n    │   │   │   │   │   └── filetable 0.1.0\n    │   │   │   │   ├── rt_macrokernel 0.1.0\n    │   │   │   │   ├── exec 0.1.0\n    │   │   │   │   └── axtrap 0.1.0\n    │   │   │   ├── pipefs 0.1.0\n    │   │   │   │   ├── fileops 0.1.0\n    │   │   │   │   └── axfs_ramfs 0.1.0\n    │   │   │   │       ├── fileops 0.1.0\n    │   │   │   │       └── axmount 0.1.0\n    │   │   │   ├── fork 0.1.0\n    │   │   │   ├── axtrap 0.1.0\n    │   │   │   └── axfs_devfs 0.1.0\n    │   │   │       ├── axmount 0.1.0\n    │   │   │       └── axfs_ramfs 0.1.0\n    │   │   ├── preempt_guard 0.1.0\n    │   │   ├── mutex 0.1.0\n    │   │   └── fork 0.1.0\n    │   ├── task 0.1.0\n    │   ├── sys 0.1.0\n    │   ├── signal 0.1.0\n    │   ├── run_queue 0.1.0\n    │   ├── rt_macrokernel 0.1.0\n    │   ├── page_table_entry 0.1.0\n    │   │   └── page_table 0.1.0\n    │   │       ├── taskctx 0.1.0\n    │   │       ├── mm 0.1.0\n    │   │       ├── fstree 0.1.0\n    │   │       ├── fileops 0.1.0\n    │   │       ├── exec 0.1.0\n    │   │       └── bprm_loader 0.1.0\n    │   ├── page_table 0.1.0\n    │   ├── mmap 0.1.0\n    │   ├── mm 0.1.0\n    │   ├── fstree 0.1.0\n    │   ├── fork 0.1.0\n    │   ├── fileops 0.1.0\n    │   ├── ext2fs 0.1.0\n    │   ├── exec 0.1.0\n    │   ├── bprm_loader 0.1.0\n    │   ├── axtrap 0.1.0\n    │   ├── axsyscall 0.1.0\n    │   ├── axmount 0.1.0\n    │   ├── axfs_devfs 0.1.0\n    │   ├── axdriver 0.1.0\n    │   │   ├── rt_macrokernel 0.1.0\n    │   │   ├── fstree 0.1.0\n    │   │   ├── fileops 0.1.0\n    │   │   ├── ext2fs 0.1.0\n    │   │   └── axmount 0.1.0\n    │   └── axalloc 0.1.0\n    │       ├── user_stack 0.1.0\n    │       │   └── bprm_loader 0.1.0\n    │       ├── sys 0.1.0\n    │       ├── rt_macrokernel 0.1.0\n    │       ├── page_table 0.1.0\n    │       ├── mmap 0.1.0\n    │       ├── mm 0.1.0\n    │       ├── fstree 0.1.0\n    │       ├── fork 0.1.0\n    │       ├── fileops 0.1.0\n    │       ├── exec 0.1.0\n    │       ├── bprm_loader 0.1.0\n    │       ├── axtrap 0.1.0\n    │       └── axdriver 0.1.0\n    └── arch_boot 0.1.0\n        └── rt_macrokernel 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 772,\n    \"last-commit\": \"4584ad9a5ea16ce196317cf4d3593e974fb4a8a1\",\n    \"last-updated\": \"2025-05-02T10:23:27+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 114\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-04T06:24:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-04T06:24:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=rt_macrokernel, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_9/shilei-massclouds/macrokernel/rt_macrokernel\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-05-04 14:24:03.482916517 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building rt_macrokernel v0.1.0 (current)\nerror: running cargo-doc on crate 'rt_macrokernel' failed with output:\n-----\n   Compiling hashbrown v0.15.3\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling toml_datetime v0.6.9\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n    Checking log v0.4.27\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n    Checking bitflags v2.9.0\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.101\n   Compiling rustversion v1.0.20\n   Compiling toml_edit v0.19.15\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking volatile v0.4.6\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking x86_64 v0.14.13\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n    Checking scopeguard v1.2.0\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling syn v1.0.109\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking spin v0.9.8\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2.git#2fa7f00e)\n   Compiling libc v0.2.172\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n    Checking bit v0.1.1\n    Checking x2apic v0.4.3\n    Checking raw-cpuid v11.5.0\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rt_macrokernel v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_9/shilei-massclouds/macrokernel/rt_macrokernel &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rt_macrokernel v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "shilei-massclouds",
      "repo": "preempt_guard",
      "pkg": "preempt_guard",
      "count": 20,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs",
          "features": "",
          "count": 10,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n",
              "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n",
              "error[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\n",
              "error[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\n",
              "error[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\n"
            ],
            "Mirai": [
              "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n",
              "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n",
              "error[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\n",
              "error[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\n",
              "error[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\n"
            ],
            "Mirai": [
              "error[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=preempt_guard, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-05-04 15:01:13.14107598 +08:00:00\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.3\n   Compiling toml_datetime v0.6.9\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling indexmap v2.9.0\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.40\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.20\n   Compiling autocfg v1.4.0\n    Checking bitflags v2.9.0\n   Compiling toml_edit v0.19.15\n   Compiling lock_api v0.4.12\n    Checking volatile v0.4.6\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base.git#4e672f3e)\n    Checking scopeguard v1.2.0\n    Checking log v0.4.27\n   Compiling syn v1.0.109\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling syn v2.0.101\n   Compiling libc v0.2.172\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n    Checking bit v0.1.1\n   Compiling unicode-width v0.1.14\n    Checking x2apic v0.4.3\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=preempt_guard, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 15:01:46.209925549 +08:00:00\n   Compiling hashbrown v0.15.3\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.9\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling indexmap v2.9.0\n   Compiling bit_field v0.10.2\n   Compiling quote v1.0.40\n   Compiling cfg-if v1.0.0\n   Compiling rustversion v1.0.20\n   Compiling bitflags v2.9.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling lock_api v0.4.12\n   Compiling volatile v0.4.6\n   Compiling bitflags v1.3.2\n   Compiling raw-cpuid v10.7.0\n   Compiling x86_64 v0.14.13\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base.git#4e672f3e)\n   Compiling paste v1.0.15\n   Compiling scopeguard v1.2.0\n   Compiling log v0.4.27\n[2025-05-04T07:01:50Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-04T07:01:50Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling x86 v0.52.0\n   Compiling syn v1.0.109\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling syn v2.0.101\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling libc v0.2.172\n   Compiling spin v0.9.8\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=preempt_guard, checker=Mirai\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 15:01:39.124281375 +08:00:00\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.3\n   Compiling toml_datetime v0.6.9\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling indexmap v2.9.0\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.40\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.20\n    Checking bitflags v2.9.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling lock_api v0.4.12\n    Checking bitflags v1.3.2\n    Checking volatile v0.4.6\n    Checking raw-cpuid v10.7.0\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base.git#4e672f3e)\n    Checking log v0.4.27\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n   Compiling paste v1.0.15\n   Compiling x86 v0.52.0\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling syn v2.0.101\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling libc v0.2.172\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking spin v0.9.8\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking bit v0.1.1\n   Compiling base64 v0.13.1\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling unicode-width v0.1.14\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=preempt_guard, checker=Rapx\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 15:01:54.542073025 +08:00:00\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.3\n   Compiling equivalent v1.0.2\n   Compiling toml_datetime v0.6.9\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.9.0\n   Compiling unicode-ident v1.0.18\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.40\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.20\n   Compiling toml_edit v0.19.15\n   Compiling autocfg v1.4.0\n    Checking bitflags v2.9.0\n   Compiling lock_api v0.4.12\n    Checking bitflags v1.3.2\n    Checking volatile v0.4.6\n    Checking raw-cpuid v10.7.0\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base.git#4e672f3e)\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n   Compiling syn v1.0.109\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n   Compiling paste v1.0.15\n    Checking scopeguard v1.2.0\n   Compiling x86 v0.52.0\n    Checking log v0.4.27\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n07:01:59|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=preempt_guard, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 15:01:20.241108993 +08:00:00\n    Building preempt_guard v0.1.0 (current)\nerror: running cargo-doc on crate 'preempt_guard' failed with output:\n-----\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.3\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.9\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling indexmap v2.9.0\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.40\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.20\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n    Checking bitflags v2.9.0\n   Compiling lock_api v0.4.12\n    Checking bitflags v1.3.2\n    Checking volatile v0.4.6\n    Checking raw-cpuid v10.7.0\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base.git#4e672f3e)\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n   Compiling paste v1.0.15\n   Compiling x86 v0.52.0\n    Checking log v0.4.27\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling syn v2.0.101\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling libc v0.2.172\n    Checking spin v0.9.8\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate preempt_guard v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard --features default &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate preempt_guard v0.1.0\n"
            ]
          }
        },
        {
          "file": "Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── taskctx 0.1.0\n        │   ├── run_queue 0.1.0\n        │   │   └── preempt_guard 0.1.0\n        │   └── preempt_guard 0.1.0\n        ├── run_queue 0.1.0\n        ├── page_table_entry 0.1.0\n        │   └── page_table 0.1.0\n        │       └── taskctx 0.1.0\n        ├── page_table 0.1.0\n        └── axalloc 0.1.0\n            └── page_table 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 772,\n    \"last-commit\": \"4584ad9a5ea16ce196317cf4d3593e974fb4a8a1\",\n    \"last-updated\": \"2025-05-02T10:23:27+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 70\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-04T07:01:50Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-04T07:01:50Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=preempt_guard, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-05-04 15:01:38.56573418 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building preempt_guard v0.1.0 (current)\nerror: running cargo-doc on crate 'preempt_guard' failed with output:\n-----\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.3\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.9\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling indexmap v2.9.0\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.40\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.20\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n    Checking bitflags v2.9.0\n   Compiling lock_api v0.4.12\n    Checking bitflags v1.3.2\n    Checking volatile v0.4.6\n    Checking raw-cpuid v10.7.0\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base.git#4e672f3e)\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n   Compiling paste v1.0.15\n   Compiling x86 v0.52.0\n    Checking log v0.4.27\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling syn v2.0.101\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling libc v0.2.172\n    Checking spin v0.9.8\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate preempt_guard v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard --features default &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate preempt_guard v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "shilei-massclouds",
      "repo": "signal",
      "pkg": "signal",
      "count": 20,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs",
          "features": "",
          "count": 10,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n",
              "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n",
              "error[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\n",
              "error[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\n",
              "error[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\n"
            ],
            "Mirai": [
              "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n",
              "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n",
              "error[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\n",
              "error[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\n",
              "error[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\n"
            ],
            "Mirai": [
              "error[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=signal, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/signal/signal\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-05-04 15:08:36.872050716 +08:00:00\n   Compiling proc-macro2 v1.0.95\n   Compiling hashbrown v0.15.3\n   Compiling equivalent v1.0.2\n   Compiling unicode-ident v1.0.18\n   Compiling serde v1.0.219\n   Compiling toml_datetime v0.6.9\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n    Checking log v0.4.27\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.101\n    Checking bitflags v2.9.0\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.20\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling syn v1.0.109\n   Compiling paste v1.0.15\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking spin v0.9.8\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling libc v0.2.172\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=signal, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/signal/signal\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 15:09:25.610853334 +08:00:00\n   Compiling proc-macro2 v1.0.95\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling unicode-ident v1.0.18\n   Compiling hashbrown v0.15.3\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.9\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n   Compiling log v0.4.27\n[2025-05-04T07:09:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-04T07:09:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling syn v2.0.101\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v2.9.0\n   Compiling rustversion v1.0.20\n   Compiling toml_edit v0.19.15\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling volatile v0.4.6\n   Compiling scopeguard v1.2.0\n   Compiling x86_64 v0.14.13\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling raw-cpuid v10.7.0\n   Compiling paste v1.0.15\n   Compiling syn v1.0.109\n   Compiling x86 v0.52.0\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling spin v0.9.8\n   Compiling libc v0.2.172\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=signal, checker=Mirai\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/signal/signal\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 15:09:18.596935819 +08:00:00\n   Compiling proc-macro2 v1.0.95\n   Compiling hashbrown v0.15.3\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling unicode-ident v1.0.18\n   Compiling toml_datetime v0.6.9\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n    Checking log v0.4.27\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.101\n    Checking bitflags v2.9.0\n    Checking cfg-if v1.0.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling rustversion v1.0.20\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\n   Compiling syn v1.0.109\n   Compiling paste v1.0.15\n   Compiling x86 v0.52.0\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking spin v0.9.8\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling libc v0.2.172\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=signal, checker=Rapx\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/signal/signal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 15:09:34.391666486 +08:00:00\n   Compiling proc-macro2 v1.0.95\n   Compiling equivalent v1.0.2\n   Compiling unicode-ident v1.0.18\n   Compiling hashbrown v0.15.3\n   Compiling serde v1.0.219\n   Compiling toml_datetime v0.6.9\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n    Checking log v0.4.27\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.101\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.9.0\n   Compiling rustversion v1.0.20\n   Compiling toml_edit v0.19.15\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n    Checking x86_64 v0.14.13\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n    Checking raw-cpuid v10.7.0\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n07:09:40|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=signal, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/signal/signal\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 15:08:43.751879896 +08:00:00\n    Building signal v0.1.0 (current)\nerror: running cargo-doc on crate 'signal' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling hashbrown v0.15.3\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling unicode-ident v1.0.18\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.9\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n    Checking log v0.4.27\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.101\n    Checking bitflags v2.9.0\n    Checking cfg-if v1.0.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling rustversion v1.0.20\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\n   Compiling syn v1.0.109\n   Compiling paste v1.0.15\n   Compiling x86 v0.52.0\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking spin v0.9.8\n   Compiling libc v0.2.172\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling unicode-width v0.1.14\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling base64 v0.13.1\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate signal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_9/shilei-massclouds/signal/signal &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate signal v0.1.0\n"
            ]
          }
        },
        {
          "file": "Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── taskctx 0.1.0\n        │   ├── wait_queue 0.1.0\n        │   │   ├── task 0.1.0\n        │   │   │   ├── sys 0.1.0\n        │   │   │   │   └── signal 0.1.0\n        │   │   │   └── signal 0.1.0\n        │   │   ├── sys 0.1.0\n        │   │   └── mutex 0.1.0\n        │   │       ├── sys 0.1.0\n        │   │       ├── mm 0.1.0\n        │   │       │   └── task 0.1.0\n        │   │       ├── filetable 0.1.0\n        │   │       │   └── task 0.1.0\n        │   │       ├── ext2fs 0.1.0\n        │   │       │   └── axmount 0.1.0\n        │   │       │       └── fstree 0.1.0\n        │   │       │           ├── task 0.1.0\n        │   │       │           └── axfile 0.1.0\n        │   │       │               ├── mm 0.1.0\n        │   │       │               └── filetable 0.1.0\n        │   │       └── axmount 0.1.0\n        │   ├── task 0.1.0\n        │   ├── sys 0.1.0\n        │   ├── signal 0.1.0\n        │   ├── run_queue 0.1.0\n        │   │   ├── wait_queue 0.1.0\n        │   │   ├── task 0.1.0\n        │   │   ├── sys 0.1.0\n        │   │   ├── preempt_guard 0.1.0\n        │   │   │   ├── task 0.1.0\n        │   │   │   └── spinpreempt 0.1.0\n        │   │   │       ├── task 0.1.0\n        │   │   │       ├── fstree 0.1.0\n        │   │   │       └── filetable 0.1.0\n        │   │   ├── pipefs 0.1.0\n        │   │   │   └── axfs_ramfs 0.1.0\n        │   │   │       └── axmount 0.1.0\n        │   │   └── axfs_devfs 0.1.0\n        │   │       ├── axmount 0.1.0\n        │   │       └── axfs_ramfs 0.1.0\n        │   ├── preempt_guard 0.1.0\n        │   └── mutex 0.1.0\n        ├── task 0.1.0\n        ├── sys 0.1.0\n        ├── signal 0.1.0\n        ├── run_queue 0.1.0\n        ├── page_table_entry 0.1.0\n        │   └── page_table 0.1.0\n        │       ├── taskctx 0.1.0\n        │       ├── mm 0.1.0\n        │       └── fstree 0.1.0\n        ├── page_table 0.1.0\n        ├── mm 0.1.0\n        ├── fstree 0.1.0\n        ├── ext2fs 0.1.0\n        ├── axmount 0.1.0\n        ├── axfs_devfs 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── fstree 0.1.0\n        │   ├── ext2fs 0.1.0\n        │   └── axmount 0.1.0\n        └── axalloc 0.1.0\n            ├── sys 0.1.0\n            ├── page_table 0.1.0\n            ├── mm 0.1.0\n            ├── fstree 0.1.0\n            └── axdriver 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 772,\n    \"last-commit\": \"4584ad9a5ea16ce196317cf4d3593e974fb4a8a1\",\n    \"last-updated\": \"2025-05-02T10:23:27+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 99\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-04T07:09:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-04T07:09:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=signal, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_9/shilei-massclouds/signal/signal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-05-04 15:09:18.044341865 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building signal v0.1.0 (current)\nerror: running cargo-doc on crate 'signal' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling hashbrown v0.15.3\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling unicode-ident v1.0.18\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.9\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n    Checking log v0.4.27\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.101\n    Checking bitflags v2.9.0\n    Checking cfg-if v1.0.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling rustversion v1.0.20\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\n   Compiling syn v1.0.109\n   Compiling paste v1.0.15\n   Compiling x86 v0.52.0\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking spin v0.9.8\n   Compiling libc v0.2.172\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling unicode-width v0.1.14\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling base64 v0.13.1\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate signal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_9/shilei-massclouds/signal/signal &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate signal v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "shilei-massclouds",
      "repo": "kernel_guard_base",
      "pkg": "kernel_guard_base",
      "count": 9,
      "raw_reports": [
        {
          "file": "src/lib.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Warn)": [
              "warning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> src/lib.rs:55:12\n   |\n55 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\n",
              "warning: you should consider adding a `Default` implementation for `NoOp`\n  --> src/lib.rs:94:5\n   |\n94 | /     pub const fn new() -> Self {\n95 | |         Self\n96 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n92 + impl Default for NoOp {\n93 +     fn default() -> Self {\n94 +         Self::new()\n95 +     }\n96 + }\n   |\n\n"
            ],
            "Mirai": [
              "warning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> src/lib.rs:55:12\n   |\n55 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "src/arch/mod.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused import: `self::x86::*`\n --> src/arch/mod.rs:6:17\n  |\n6 |         pub use self::x86::*;\n  |                 ^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
            ],
            "Mirai": [
              "warning: unused import: `self::x86::*`\n --> src/arch/mod.rs:6:17\n  |\n6 |         pub use self::x86::*;\n  |                 ^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "src/arch/x86.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Mirai": [
              "warning: [MIRAI] Inline assembly code cannot be analyzed by MIRAI.\n --> src/arch/x86.rs:9:14\n  |\n9 |     unsafe { asm!(\"pushf; pop {}; cli\", out(reg) flags) };\n  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: [MIRAI] Inline assembly code cannot be analyzed by MIRAI.\n  --> src/arch/x86.rs:16:18\n   |\n16 |         unsafe { asm!(\"sti\") };\n   |                  ^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kernel_guard_base, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/kernel_guard_base/kernel_guard_base\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 14:22:17.013209246 +08:00:00\n    Building kernel_guard_base v0.1.0 (current)\n       Built [   0.248s] (current)\n     Parsing kernel_guard_base v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: kernel_guard_base not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=kernel_guard_base, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_9/shilei-massclouds/kernel_guard_base/kernel_guard_base\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-05-04 14:22:17.785905055 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building kernel_guard_base v0.1.0 (current)\n       Built [   0.248s] (current)\n     Parsing kernel_guard_base v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: kernel_guard_base not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        }
      ]
    },
    {
      "user": "shilei-massclouds",
      "repo": "lazy_init",
      "pkg": "lazy_init",
      "count": 3,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=lazy_init, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/lazy_init/lazy_init\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-04 14:22:24.04408188 +08:00:00\n    Building lazy_init v0.1.0 (current)\n       Built [   0.228s] (current)\n     Parsing lazy_init v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: lazy_init not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=lazy_init, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_9/shilei-massclouds/lazy_init/lazy_init\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-05-04 14:22:24.741915837 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building lazy_init v0.1.0 (current)\n       Built [   0.228s] (current)\n     Parsing lazy_init v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: lazy_init not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: you should consider adding a `Default` implementation for `LazyInit<T>`\n  --> src/lib.rs:49:5\n   |\n49 | /     pub const fn new() -> Self {\n50 | |         Self {\n51 | |             inited: AtomicBool::new(false),\n52 | |             data: UnsafeCell::new(MaybeUninit::uninit()),\n53 | |         }\n54 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n47 + impl<T> Default for LazyInit<T> {\n48 +     fn default() -> Self {\n49 +         Self::new()\n50 +     }\n51 + }\n   |\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "shilei-massclouds",
      "repo": "memory_addr",
      "pkg": "memory_addr",
      "count": 2,
      "raw_reports": [
        {
          "file": "src/lib.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: the feature `const_mut_refs` has been stable since 1.83.0 and no longer requires an attribute to enable\n --> src/lib.rs:2:12\n  |\n2 | #![feature(const_mut_refs)]\n  |            ^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
            ],
            "Mirai": [
              "warning: the feature `const_mut_refs` has been stable since 1.83.0 and no longer requires an attribute to enable\n --> src/lib.rs:2:12\n  |\n2 | #![feature(const_mut_refs)]\n  |            ^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}