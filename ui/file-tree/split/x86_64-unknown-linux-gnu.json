{"data":[{"user":"os-checker","repo":"os-checker-test-suite","pkg":"os-checker-test-suite","count":9,"raw_reports":[{"file":"src/main.rs","count":5,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/os-checker/os-checker-test-suite/src/main.rs (original lines from 4 to 5)\n- \n-println!(\"Hello, world!\");\n+    println!(\"Hello, world!\");\n"],"Clippy(Error)":["error: approximate value of `f{32, 64}::consts::PI` found\n --> src/main.rs:2:13\n  |\n2 |     let a = 3.14;\n  |             ^^^^\n  |\n  = help: consider using the constant directly\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant\n  = note: `#[deny(clippy::approx_constant)]` on by default\n\n"],"Mirai":["warning: unused variable: `a`\n --> src/main.rs:2:9\n  |\n2 |     let a = 3.14;\n  |         ^ help: if this is intentional, prefix it with an underscore: `_a`\n  |\n  = note: `#[warn(unused_variables)]` on by default\n\n","warning: unused variable: `a`\n --> src/main.rs:2:9\n  |\n2 |     let a = 3.14;\n  |         ^ help: if this is intentional, prefix it with an underscore: `_a`\n  |\n  = note: `#[warn(unused_variables)]` on by default\n\n"],"Clippy(Warn)":["warning: unused variable: `a`\n --> src/main.rs:2:9\n  |\n2 |     let a = 3.14;\n  |         ^ help: if this is intentional, prefix it with an underscore: `_a`\n  |\n  = note: `#[warn(unused_variables)]` on by default\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=os-checker-test-suite, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking os-checker-test-suite v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite)\nerror: could not compile `os-checker-test-suite` (bin \"os-checker-test-suite\") due to 2 previous errors; 1 warning emitted\n"]}},{"file":"examples/need-clippy-fix.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/os-checker/os-checker-test-suite/examples/need-clippy-fix.rs (original lines from 2 to 2)\n-    _ = (123); \n+    _ = (123);\n"]}},{"file":"examples/need-fmt.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/os-checker/os-checker-test-suite/examples/need-fmt.rs (original lines from 1 to 1)\n-fn main() {    println!(\"from example\");\n+fn main() {\n+    println!(\"from example\");\n"]}},{"file":"tests/need-fmt.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/os-checker/os-checker-test-suite/tests/need-fmt.rs (original lines from 1 to 2)\n-fn main () {\n-  }\n+fn main() {}\n"]}}]},{"user":"kern-crates","repo":"axfeat","pkg":"axfeat","count":5,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs","count":1,"kinds":{"Clippy(Error)":["error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axfeat, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/kern-crates/axfeat\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/axalloc.git`\n    Updating git repository `https://github.com/Starry-OS/axdisplay.git`\n    Updating git repository `https://github.com/Starry-OS/axdriver.git`\n    Updating git repository `https://github.com/Starry-OS/axfs.git`\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/axnet.git`\n    Updating git repository `https://github.com/Starry-OS/axprocess.git`\n    Updating git repository `https://github.com/Starry-OS/axruntime.git`\n    Updating git repository `https://github.com/Starry-OS/axsync.git`\n    Updating git repository `https://github.com/Starry-OS/axtask.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/allocator.git`\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/driver_display.git`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/driver_block.git`\n    Updating git repository `https://github.com/Starry-OS/driver_common.git`\n    Updating git repository `https://github.com/Starry-OS/driver_net.git`\n    Updating git repository `https://github.com/Starry-OS/driver_pci.git`\n    Updating git repository `https://github.com/Starry-OS/driver_virtio.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_devfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_ramfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_vfs.git`\n    Updating git repository `https://github.com/Starry-OS/axio.git`\n    Updating git repository `https://github.com/Starry-OS/capability.git`\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/yuoo655/ext4_rs.git`\n    Updating git repository `https://github.com/rafalh/rust-fatfs`\n    Updating git repository `https://github.com/elliott10/lwext4_rust.git`\n    Updating git submodule `https://github.com/gkostka/lwext4.git`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/rcore-os/smoltcp.git`\n    Updating git repository `https://github.com/Starry-OS/axfutex.git`\n    Updating git repository `https://github.com/Starry-OS/axmem.git`\n    Updating git repository `https://github.com/Starry-OS/axsignal.git`\n    Updating git repository `https://github.com/Starry-OS/elf_parser.git`\n    Updating git repository `https://github.com/kern-crates/axbacktrace.git`\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/Starry-OS/scheduler.git`\n    Updating git repository `https://github.com/Starry-OS/timer_list.git`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n    Updating git repository `https://github.com/arceos-org/slab_allocator.git`\n    Updating git repository `https://github.com/lhw2002426/bcm2835-sdhci.git`\n    Updating git repository `https://github.com/KuangjuX/ixgbe-driver.git`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n    Updating git repository `https://github.com/rcore-os/smoltcp.git`\n     Locking 154 packages to latest compatible versions\n      Adding ahash v0.7.8 (available: v0.8.11)\n      Adding base64 v0.13.1 (available: v0.22.1)\n      Adding bitflags v1.3.2 (available: v2.6.0)\n      Adding buddy_system_allocator v0.9.1 (available: v0.11.0)\n      Adding buddy_system_allocator v0.10.0 (available: v0.11.0)\n      Adding embedded-hal v0.2.7 (available: v1.0.0)\n      Adding hash32 v0.2.1 (available: v0.3.1)\n      Adding hashbrown v0.11.2 (available: v0.14.5)\n      Adding heapless v0.7.17 (available: v0.8.0)\n      Adding itertools v0.9.0 (available: v0.13.0)\n      Adding nb v0.1.3 (available: v1.1.0)\n      Adding raw-cpuid v10.7.0 (available: v11.1.0)\n      Adding riscv v0.10.1 (available: v0.11.1)\n      Adding syn v1.0.109 (available: v2.0.77)\n      Adding tock-registers v0.8.1 (available: v0.9.0)\n      Adding unicode-width v0.1.14 (available: v0.2.0)\n      Adding volatile v0.2.7 (available: v0.6.1)\n      Adding volatile v0.3.0 (available: v0.6.1)\n      Adding volatile v0.4.6 (available: v0.6.1)\n      Adding wasi v0.11.0+wasi-snapshot-preview1 (available: v0.13.2+wasi-0.2.1)\n      Adding x86_64 v0.14.12 (available: v0.15.1)\n Downloading crates ...\n  Downloaded toml_datetime v0.6.8\n  Downloaded aarch64-cpu v9.4.0\n  Downloaded spin v0.9.8\n  Downloaded volatile v0.4.6\n  Downloaded x2apic v0.4.3\n  Downloaded x86_64 v0.15.1\n  Downloaded raw-cpuid v11.1.0\n  Downloaded toml_edit v0.22.21\n  Downloaded raw-cpuid v10.7.0\n  Downloaded winnow v0.6.18\n  Downloaded x86_64 v0.14.12\n  Downloaded tock-registers v0.8.1\n  Downloaded scopeguard v1.2.0\n  Downloaded paste v1.0.15\n  Downloaded fdt v0.1.5\n  Downloaded bitflags v2.6.0\n  Downloaded bit_field v0.10.2\n  Downloaded lock_api v0.4.12\n  Downloaded x86 v0.52.0\n  Downloaded bit v0.1.1\n    Blocking waiting for file lock on package cache\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.14.5\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.3.0\n   Compiling toml_edit v0.22.21\n   Compiling lock_api v0.4.12\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.17\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking log v0.4.22\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.77\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: could not compile `axconfig` (build script) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axfeat, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/kern-crates/axfeat\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.210\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n   Compiling bitflags v1.3.2\n   Compiling raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.3.0\n   Compiling toml_edit v0.22.21\n   Compiling unicode-ident v1.0.13\n   Compiling lock_api v0.4.12\n   Compiling cfg-if v1.0.0\n   Compiling rustversion v1.0.17\n   Compiling quote v1.0.37\n   Compiling log v0.4.22\n[2024-09-23T09:22:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-23T09:22:40Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling bitflags v2.6.0\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.77\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling static_assertions v1.1.0\n   Compiling volatile v0.4.6\n   Compiling spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling lazy_static v1.5.0\n   Compiling x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=axfeat, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/kern-crates/axfeat\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.3.0\n   Compiling toml_edit v0.22.21\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\n    Checking cfg-if v1.0.0\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/kern-crates/axfeat/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-09-23T09:22:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-23T09:22:40Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"os-checker","repo":"os-checker-test-suite","pkg":"buildrs-failure","count":3,"raw_reports":[{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=buildrs-failure, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Blocking waiting for file lock on package cache\n   Compiling buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)\nerror: failed to run custom build command for `buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/os-checker/os-checker-test-suite/target/debug/build/buildrs-failure-cbaf576da3545279/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at buildrs-failure/build.rs:2:5:\n  Test as a failure in build script.\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=buildrs-failure, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)\nerror: failed to run custom build command for `buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/os-checker/os-checker-test-suite/target/debug/build/buildrs-failure-b6dc1f6b857b62c6/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at buildrs-failure/build.rs:2:5:\n  Test as a failure in build script.\n  stack backtrace:\n     0:     0x55edb4629915 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55edb4629915 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55edb4629915 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55edb4629915 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55edb4647a1b - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55edb4647a1b - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55edb462783f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55edb46296ee - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55edb46296ee - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55edb462aa59 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55edb462a79d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55edb462af13 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55edb462adbb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55edb4629dd9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55edb462ab27 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55edb4646c43 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55edb460f6d2 - build_script_build::main::hf4decbdbc8d11168\n                                 at /home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure/build.rs:2:5\n    17:     0x55edb460f63b - core::ops::function::FnOnce::call_once::h92e512ce7bee2ef5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x55edb460f4de - std::sys_common::backtrace::__rust_begin_short_backtrace::hf7abc9272a435240\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x55edb460f551 - std::rt::lang_start::{{closure}}::hc4a88c97cc645181\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x55edb4625acd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x55edb4625acd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x55edb4625acd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x55edb4625acd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x55edb4625acd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x55edb4625acd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x55edb4625acd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x55edb4625acd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x55edb4625acd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55edb460f52a - std::rt::lang_start::he6aea475bde28aeb\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55edb460f6fe - main\n    31:     0x7f25e5229d90 - <unknown>\n    32:     0x7f25e5229e40 - __libc_start_main\n    33:     0x55edb460f405 - _start\n    34:                0x0 - <unknown>\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=buildrs-failure, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)\nerror: failed to run custom build command for `buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/os-checker/os-checker-test-suite/target/debug/build/buildrs-failure-b6dc1f6b857b62c6/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at buildrs-failure/build.rs:2:5:\n  Test as a failure in build script.\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"]}}]},{"user":"os-checker","repo":"os-checker-test-suite","pkg":"lockbud-checks-this","count":1,"raw_reports":[{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-09-23T09:22:26Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at lockbud-checks-this/src/lib.rs:7:13: 7:26 (#0) after dropped at lockbud-checks-this/src/lib.rs:5:5: 5:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at lockbud-checks-this/src/lib.rs:8:28: 8:32 (#5) after dropped at lockbud-checks-this/src/lib.rs:5:5: 5:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-23T09:22:26Z WARN  lockbud::callbacks] crate lockbud_checks_this contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }"]}}]},{"user":"os-checker","repo":"os-checker-test-suite","pkg":"mirai-checks-this","count":1,"raw_reports":[{"file":"mirai-checks-this/src/main.rs","count":1,"kinds":{"Mirai":["warning: attempt to add with overflow\n  --> mirai-checks-this/src/main.rs:26:10\n   |\n26 |     dbg!(a + b());\n   |          ^^^^^^^\n\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Mirai","Lockbud(Probably)","Lockbud(Possibly)","Unformatted"]}