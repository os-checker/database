{
  "data": [
    {
      "user": "yuoo655",
      "repo": "ext4_rs",
      "pkg": "ext4_rs",
      "count": 728,
      "raw_reports": [
        {
          "file": "src/ext4_impls/extents.rs",
          "features": "",
          "count": 185,
          "kinds": {
            "Clippy(Warn)": [
              "warning: casting to the same type is unnecessary (`u64` -> `u64`)\n   --> src/ext4_impls/extents.rs:929:33\n    |\n929 |                 ex.store_pblock(newblock as u64);\n    |                                 ^^^^^^^^^^^^^^^ help: try: `newblock`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
            ],
            "Unformatted": [
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1 to 1)\n+use crate::ext4_defs::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 3 to 3)\n-use crate::ext4_defs::*;\n+use crate::utils::crc::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 6 to 6)\n-use crate::utils::crc::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 8 to 8)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 94 to 95)\n-        log::info!(\"[insert_extent] Starting - Inserting extent at block {}\", newex_first_block);\n-        log::info!(\"[insert_extent] Current tree state: magic={:x}, entries={}, max={}, depth={}\", \n+        log::info!(\n+            \"[insert_extent] Starting - Inserting extent at block {}\",\n+            newex_first_block\n+        );\n+        log::info!(\n+            \"[insert_extent] Current tree state: magic={:x}, entries={}, max={}, depth={}\",\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 99 to 100)\n-            inode_ref.inode.root_extent_header().depth);\n-        \n+            inode_ref.inode.root_extent_header().depth\n+        );\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 102 to 102)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 185 to 186)\n-            log::info!(\"[insert_extent] Node is full (entries={}, max={}), creating new leaf\", \n-                header.entries_count, header.max_entries_count);\n+            log::info!(\n+                \"[insert_extent] Node is full (entries={}, max={}), creating new leaf\",\n+                header.entries_count,\n+                header.max_entries_count\n+            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 222 to 222)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 266 to 266)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 273 to 273)\n-        if ext1_ee_len + ext2_ee_len > EXT_INIT_MAX_LEN as usize{\n+        if ext1_ee_len + ext2_ee_len > EXT_INIT_MAX_LEN as usize {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 284 to 284)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 292 to 292)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 294 to 297)\n-        log::info!(\"[merge_extent] Left extent: logical block {}, physical block {}, length {}\", \n-            left_ext.first_block, left_ext.get_pblock(), left_ext.get_actual_len());\n-        log::info!(\"[merge_extent] Right extent: logical block {}, physical block {}, length {}\", \n-            right_ext.first_block, right_ext.get_pblock(), right_ext.get_actual_len());\n+        log::info!(\n+            \"[merge_extent] Left extent: logical block {}, physical block {}, length {}\",\n+            left_ext.first_block,\n+            left_ext.get_pblock(),\n+            left_ext.get_actual_len()\n+        );\n+        log::info!(\n+            \"[merge_extent] Right extent: logical block {}, physical block {}, length {}\",\n+            right_ext.first_block,\n+            right_ext.get_pblock(),\n+            right_ext.get_actual_len()\n+        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 307 to 308)\n-        log::info!(\"[merge_extent] Merged extent: logical block {}, physical block {}, new length {}\", \n-            left_ext.first_block, left_ext.get_pblock(), left_ext.get_actual_len());\n+        log::info!(\n+            \"[merge_extent] Merged extent: logical block {}, physical block {}, new length {}\",\n+            left_ext.first_block,\n+            left_ext.get_pblock(),\n+            left_ext.get_actual_len()\n+        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 313 to 313)\n-            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>() + core::mem::size_of::<Ext4Extent>() * (node.position);\n+            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>()\n+                + core::mem::size_of::<Ext4Extent>() * (node.position);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 315 to 315)\n-            let left_ext:&mut Ext4Extent = ext4block.read_offset_as_mut(new_ex_offset);\n+            let left_ext: &mut Ext4Extent = ext4block.read_offset_as_mut(new_ex_offset);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 346 to 348)\n-        log::info!(\"[insert_new_extent] Node info: entries={}, max={}, position={}\", \n-            header.entries_count, header.max_entries_count, node.position);\n-        \n+        log::info!(\n+            \"[insert_new_extent] Node info: entries={}, max={}, position={}\",\n+            header.entries_count,\n+            header.max_entries_count,\n+            node.position\n+        );\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 355 to 358)\n-        log::debug!(\"  - Raw data: start_lo={}, start_hi={}, block_count={:#x}\", \n-            new_extent.start_lo, new_extent.start_hi, new_extent.block_count);\n-        log::debug!(\"  - Tree position: depth={}, position={}, at_root={}\", \n-            depth, node.position, node.pblock_of_node == 0);\n+        log::debug!(\n+            \"  - Raw data: start_lo={}, start_hi={}, block_count={:#x}\",\n+            new_extent.start_lo,\n+            new_extent.start_hi,\n+            new_extent.block_count\n+        );\n+        log::debug!(\n+            \"  - Tree position: depth={}, position={}, at_root={}\",\n+            depth,\n+            node.position,\n+            node.pblock_of_node == 0\n+        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 369 to 369)\n-                \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 372 to 372)\n-                log::debug!(\"  - Root header: magic={:x}, entries={}, max={}, depth={}\", \n+                log::debug!(\n+                    \"  - Root header: magic={:x}, entries={}, max={}, depth={}\",\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 376 to 377)\n-                    inode_ref.inode.root_extent_header().depth);\n-                \n+                    inode_ref.inode.root_extent_header().depth\n+                );\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 388 to 388)\n-            \n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 390 to 391)\n-            log::info!(\"[insert_new_extent] Inserting at root at position {} (entries: {})\", \n-                node.position + 1, header.entries_count);\n+            log::info!(\n+                \"[insert_new_extent] Inserting at root at position {} (entries: {})\",\n+                node.position + 1,\n+                header.entries_count\n+            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 394 to 394)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 396 to 396)\n-            log::debug!(\"  - Root header: magic={:x}, entries={}, max={}, depth={}\", \n+            log::debug!(\n+                \"  - Root header: magic={:x}, entries={}, max={}, depth={}\",\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 400 to 401)\n-                inode_ref.inode.root_extent_header().depth);\n-            \n+                inode_ref.inode.root_extent_header().depth\n+            );\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 405 to 406)\n-            log::info!(\"[insert_new_extent] Inserting at non-root node at depth {}, position {}\", \n-                depth, node.position + 1);\n+            log::info!(\n+                \"[insert_new_extent] Inserting at non-root node at depth {}, position {}\",\n+                depth,\n+                node.position + 1\n+            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 410 to 412)\n-            let mut ext4block =\n-            Block::load(&self.block_device, node_block * BLOCK_SIZE);\n-            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>() + core::mem::size_of::<Ext4Extent>() * (node.position + 1);\n+            let mut ext4block = Block::load(&self.block_device, node_block * BLOCK_SIZE);\n+            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>()\n+                + core::mem::size_of::<Ext4Extent>() * (node.position + 1);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 419 to 419)\n-            // update entry count \n+            // update entry count\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 421 to 422)\n-            log::info!(\"[insert_new_extent] Updated non-root node: entries={}, max={}\", \n-                header.entries_count, header.max_entries_count);\n+            log::info!(\n+                \"[insert_new_extent] Updated non-root node: entries={}, max={}\",\n+                header.entries_count,\n+                header.max_entries_count\n+            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 428 to 428)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 431 to 431)\n-                log::warn!(\"[insert_new_extent] Failed to set extent block checksum: {:?}\", e);\n+                log::warn!(\n+                    \"[insert_new_extent] Failed to set extent block checksum: {:?}\",\n+                    e\n+                );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 435 to 435)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 439 to 440)\n-            log::debug!(\"  - Node header: entries={}, max={}, depth={}\", \n-                node_header_entries, node_header_max, depth);\n+            log::debug!(\n+                \"  - Node header: entries={}, max={}, depth={}\",\n+                node_header_entries,\n+                node_header_max,\n+                depth\n+            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 443 to 444)\n-            log::debug!(\"  - Extent: logical={}, physical={}, length={}\", \n-                new_extent.first_block, new_extent.get_pblock(), new_extent.get_actual_len());\n+            log::debug!(\n+                \"  - Extent: logical={}, physical={}, length={}\",\n+                new_extent.first_block,\n+                new_extent.get_pblock(),\n+                new_extent.get_actual_len()\n+            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 460 to 460)\n-        log::info!(\"[create_new_leaf] Root header: magic={:x}, entries={}, max={}, depth={}\", \n+        log::info!(\n+            \"[create_new_leaf] Root header: magic={:x}, entries={}, max={}, depth={}\",\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 464 to 467)\n-            inode_ref.inode.root_extent_header().depth);\n-        log::info!(\"[create_new_leaf] New extent: logical block {}, physical block {}, length {}\", \n-            new_extent.first_block, new_extent.get_pblock(), new_extent.get_actual_len());\n-        \n+            inode_ref.inode.root_extent_header().depth\n+        );\n+        log::info!(\n+            \"[create_new_leaf] New extent: logical block {}, physical block {}, length {}\",\n+            new_extent.first_block,\n+            new_extent.get_pblock(),\n+            new_extent.get_actual_len()\n+        );\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 471 to 471)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 473 to 473)\n-        log::info!(\"[create_new_leaf] Root header: magic={:x}, entries={}, max={}, depth={}\", \n+        log::info!(\n+            \"[create_new_leaf] Root header: magic={:x}, entries={}, max={}, depth={}\",\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 477 to 477)\n-            inode_ref.inode.root_extent_header().depth);\n+            inode_ref.inode.root_extent_header().depth\n+        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 484 to 484)\n-    \n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 489 to 489)\n-    fn ext_grow_indepth(&self, inode_ref: &mut Ext4InodeRef) -> Result<()>{\n+    fn ext_grow_indepth(&self, inode_ref: &mut Ext4InodeRef) -> Result<()> {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 491 to 491)\n-        log::info!(\"[ext_grow_indepth] Root header: magic={:x}, entries={}, max={}, depth={}\", \n+        log::info!(\n+            \"[ext_grow_indepth] Root header: magic={:x}, entries={}, max={}, depth={}\",\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 495 to 495)\n-            inode_ref.inode.root_extent_header().depth);\n+            inode_ref.inode.root_extent_header().depth\n+        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 502 to 503)\n-        let mut new_ext4block =\n-            Block::load(&self.block_device, new_block as usize * BLOCK_SIZE);\n+        let mut new_ext4block = Block::load(&self.block_device, new_block as usize * BLOCK_SIZE);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 513 to 513)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 525 to 525)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 532 to 532)\n-            0  // generation field, usually 0\n+            0, // generation field, usually 0\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 534 to 534)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 537 to 540)\n-            core::slice::from_raw_parts(\n-                &new_header as *const _ as *const u8,\n-                header_size\n-            )\n+            core::slice::from_raw_parts(&new_header as *const _ as *const u8, header_size)\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 543 to 543)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 550 to 550)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 556 to 556)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 561 to 561)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 564 to 564)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 569 to 569)\n-            log::warn!(\"[ext_grow_indepth] Failed to set extent block checksum: {:?}\", e);\n+            log::warn!(\n+                \"[ext_grow_indepth] Failed to set extent block checksum: {:?}\",\n+                e\n+            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 573 to 573)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 576 to 576)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 584 to 586)\n-            \n-            log::info!(\"[ext_grow_indepth] Updated root header: depth {} -> {}, entries={}, max={}\", \n-                old_depth, root_header.depth, root_header.entries_count, root_header.max_entries_count);\n+\n+            log::info!(\n+                \"[ext_grow_indepth] Updated root header: depth {} -> {}, entries={}, max={}\",\n+                old_depth,\n+                root_header.depth,\n+                root_header.entries_count,\n+                root_header.max_entries_count\n+            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 588 to 588)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 596 to 596)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 602 to 604)\n-            \n-            log::info!(\"[ext_grow_indepth] Root became index block, first_block={}, pointing to block {}\", \n-                first_logical_block_saved, new_block);\n+\n+            log::info!(\n+                \"[ext_grow_indepth] Root became index block, first_block={}, pointing to block {}\",\n+                first_logical_block_saved,\n+                new_block\n+            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 612 to 612)\n-        log::info!(\"[ext_grow_indepth] Root header: magic={:x}, entries={}, max={}, depth={}\", \n+        log::info!(\n+            \"[ext_grow_indepth] Root header: magic={:x}, entries={}, max={}, depth={}\",\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 616 to 616)\n-            inode_ref.inode.root_extent_header().depth);\n+            inode_ref.inode.root_extent_header().depth\n+        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 620 to 620)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 735 to 736)\n-                let ext4block =\n-                    Block::load(&self.block_device, node_pblock * BLOCK_SIZE);\n+                let ext4block = Block::load(&self.block_device, node_pblock * BLOCK_SIZE);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1075 to 1075)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1107 to 1107)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1179 to 1179)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1186 to 1186)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1189 to 1189)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1194 to 1194)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1197 to 1197)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1200 to 1200)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1202 to 1203)\n-        let checksum = self.calculate_extent_block_checksum(inode_ref, &data_for_checksum, block_addr);\n-        \n+        let checksum =\n+            self.calculate_extent_block_checksum(inode_ref, &data_for_checksum, block_addr);\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1206 to 1206)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1209 to 1209)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1212 to 1212)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1215 to 1215)\n-    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1217 to 1217)\n-    fn calculate_extent_block_checksum(&self, inode_ref: &Ext4InodeRef, data: &[u8], block_addr: usize) -> u32 {\n+    fn calculate_extent_block_checksum(\n+        &self,\n+        inode_ref: &Ext4InodeRef,\n+        data: &[u8],\n+        block_addr: usize,\n+    ) -> u32 {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1219 to 1219)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1224 to 1224)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1228 to 1228)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1231 to 1231)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1234 to 1234)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1238 to 1238)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1242 to 1242)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1245 to 1245)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1248 to 1248)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1253 to 1254)\n-    size_of::<Ext4ExtentHeader>() + \n-    (header.max_entries_count as usize * size_of::<Ext4Extent>())\n+    size_of::<Ext4ExtentHeader>() + (header.max_entries_count as usize * size_of::<Ext4Extent>())\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1256 to 1256)\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1 to 1)\n+use crate::ext4_defs::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 3 to 3)\n-use crate::ext4_defs::*;\n+use crate::utils::crc::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 6 to 6)\n-use crate::utils::crc::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 8 to 8)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 94 to 95)\n-        log::info!(\"[insert_extent] Starting - Inserting extent at block {}\", newex_first_block);\n-        log::info!(\"[insert_extent] Current tree state: magic={:x}, entries={}, max={}, depth={}\", \n+        log::info!(\n+            \"[insert_extent] Starting - Inserting extent at block {}\",\n+            newex_first_block\n+        );\n+        log::info!(\n+            \"[insert_extent] Current tree state: magic={:x}, entries={}, max={}, depth={}\",\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 99 to 100)\n-            inode_ref.inode.root_extent_header().depth);\n-        \n+            inode_ref.inode.root_extent_header().depth\n+        );\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 102 to 102)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 185 to 186)\n-            log::info!(\"[insert_extent] Node is full (entries={}, max={}), creating new leaf\", \n-                header.entries_count, header.max_entries_count);\n+            log::info!(\n+                \"[insert_extent] Node is full (entries={}, max={}), creating new leaf\",\n+                header.entries_count,\n+                header.max_entries_count\n+            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 222 to 222)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 266 to 266)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 273 to 273)\n-        if ext1_ee_len + ext2_ee_len > EXT_INIT_MAX_LEN as usize{\n+        if ext1_ee_len + ext2_ee_len > EXT_INIT_MAX_LEN as usize {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 284 to 284)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 292 to 292)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 294 to 297)\n-        log::info!(\"[merge_extent] Left extent: logical block {}, physical block {}, length {}\", \n-            left_ext.first_block, left_ext.get_pblock(), left_ext.get_actual_len());\n-        log::info!(\"[merge_extent] Right extent: logical block {}, physical block {}, length {}\", \n-            right_ext.first_block, right_ext.get_pblock(), right_ext.get_actual_len());\n+        log::info!(\n+            \"[merge_extent] Left extent: logical block {}, physical block {}, length {}\",\n+            left_ext.first_block,\n+            left_ext.get_pblock(),\n+            left_ext.get_actual_len()\n+        );\n+        log::info!(\n+            \"[merge_extent] Right extent: logical block {}, physical block {}, length {}\",\n+            right_ext.first_block,\n+            right_ext.get_pblock(),\n+            right_ext.get_actual_len()\n+        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 307 to 308)\n-        log::info!(\"[merge_extent] Merged extent: logical block {}, physical block {}, new length {}\", \n-            left_ext.first_block, left_ext.get_pblock(), left_ext.get_actual_len());\n+        log::info!(\n+            \"[merge_extent] Merged extent: logical block {}, physical block {}, new length {}\",\n+            left_ext.first_block,\n+            left_ext.get_pblock(),\n+            left_ext.get_actual_len()\n+        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 313 to 313)\n-            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>() + core::mem::size_of::<Ext4Extent>() * (node.position);\n+            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>()\n+                + core::mem::size_of::<Ext4Extent>() * (node.position);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 315 to 315)\n-            let left_ext:&mut Ext4Extent = ext4block.read_offset_as_mut(new_ex_offset);\n+            let left_ext: &mut Ext4Extent = ext4block.read_offset_as_mut(new_ex_offset);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 346 to 348)\n-        log::info!(\"[insert_new_extent] Node info: entries={}, max={}, position={}\", \n-            header.entries_count, header.max_entries_count, node.position);\n-        \n+        log::info!(\n+            \"[insert_new_extent] Node info: entries={}, max={}, position={}\",\n+            header.entries_count,\n+            header.max_entries_count,\n+            node.position\n+        );\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 355 to 358)\n-        log::debug!(\"  - Raw data: start_lo={}, start_hi={}, block_count={:#x}\", \n-            new_extent.start_lo, new_extent.start_hi, new_extent.block_count);\n-        log::debug!(\"  - Tree position: depth={}, position={}, at_root={}\", \n-            depth, node.position, node.pblock_of_node == 0);\n+        log::debug!(\n+            \"  - Raw data: start_lo={}, start_hi={}, block_count={:#x}\",\n+            new_extent.start_lo,\n+            new_extent.start_hi,\n+            new_extent.block_count\n+        );\n+        log::debug!(\n+            \"  - Tree position: depth={}, position={}, at_root={}\",\n+            depth,\n+            node.position,\n+            node.pblock_of_node == 0\n+        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 369 to 369)\n-                \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 372 to 372)\n-                log::debug!(\"  - Root header: magic={:x}, entries={}, max={}, depth={}\", \n+                log::debug!(\n+                    \"  - Root header: magic={:x}, entries={}, max={}, depth={}\",\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 376 to 377)\n-                    inode_ref.inode.root_extent_header().depth);\n-                \n+                    inode_ref.inode.root_extent_header().depth\n+                );\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 388 to 388)\n-            \n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 390 to 391)\n-            log::info!(\"[insert_new_extent] Inserting at root at position {} (entries: {})\", \n-                node.position + 1, header.entries_count);\n+            log::info!(\n+                \"[insert_new_extent] Inserting at root at position {} (entries: {})\",\n+                node.position + 1,\n+                header.entries_count\n+            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 394 to 394)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 396 to 396)\n-            log::debug!(\"  - Root header: magic={:x}, entries={}, max={}, depth={}\", \n+            log::debug!(\n+                \"  - Root header: magic={:x}, entries={}, max={}, depth={}\",\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 400 to 401)\n-                inode_ref.inode.root_extent_header().depth);\n-            \n+                inode_ref.inode.root_extent_header().depth\n+            );\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 405 to 406)\n-            log::info!(\"[insert_new_extent] Inserting at non-root node at depth {}, position {}\", \n-                depth, node.position + 1);\n+            log::info!(\n+                \"[insert_new_extent] Inserting at non-root node at depth {}, position {}\",\n+                depth,\n+                node.position + 1\n+            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 410 to 412)\n-            let mut ext4block =\n-            Block::load(&self.block_device, node_block * BLOCK_SIZE);\n-            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>() + core::mem::size_of::<Ext4Extent>() * (node.position + 1);\n+            let mut ext4block = Block::load(&self.block_device, node_block * BLOCK_SIZE);\n+            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>()\n+                + core::mem::size_of::<Ext4Extent>() * (node.position + 1);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 419 to 419)\n-            // update entry count \n+            // update entry count\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 421 to 422)\n-            log::info!(\"[insert_new_extent] Updated non-root node: entries={}, max={}\", \n-                header.entries_count, header.max_entries_count);\n+            log::info!(\n+                \"[insert_new_extent] Updated non-root node: entries={}, max={}\",\n+                header.entries_count,\n+                header.max_entries_count\n+            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 428 to 428)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 431 to 431)\n-                log::warn!(\"[insert_new_extent] Failed to set extent block checksum: {:?}\", e);\n+                log::warn!(\n+                    \"[insert_new_extent] Failed to set extent block checksum: {:?}\",\n+                    e\n+                );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 435 to 435)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 439 to 440)\n-            log::debug!(\"  - Node header: entries={}, max={}, depth={}\", \n-                node_header_entries, node_header_max, depth);\n+            log::debug!(\n+                \"  - Node header: entries={}, max={}, depth={}\",\n+                node_header_entries,\n+                node_header_max,\n+                depth\n+            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 443 to 444)\n-            log::debug!(\"  - Extent: logical={}, physical={}, length={}\", \n-                new_extent.first_block, new_extent.get_pblock(), new_extent.get_actual_len());\n+            log::debug!(\n+                \"  - Extent: logical={}, physical={}, length={}\",\n+                new_extent.first_block,\n+                new_extent.get_pblock(),\n+                new_extent.get_actual_len()\n+            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 460 to 460)\n-        log::info!(\"[create_new_leaf] Root header: magic={:x}, entries={}, max={}, depth={}\", \n+        log::info!(\n+            \"[create_new_leaf] Root header: magic={:x}, entries={}, max={}, depth={}\",\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 464 to 467)\n-            inode_ref.inode.root_extent_header().depth);\n-        log::info!(\"[create_new_leaf] New extent: logical block {}, physical block {}, length {}\", \n-            new_extent.first_block, new_extent.get_pblock(), new_extent.get_actual_len());\n-        \n+            inode_ref.inode.root_extent_header().depth\n+        );\n+        log::info!(\n+            \"[create_new_leaf] New extent: logical block {}, physical block {}, length {}\",\n+            new_extent.first_block,\n+            new_extent.get_pblock(),\n+            new_extent.get_actual_len()\n+        );\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 471 to 471)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 473 to 473)\n-        log::info!(\"[create_new_leaf] Root header: magic={:x}, entries={}, max={}, depth={}\", \n+        log::info!(\n+            \"[create_new_leaf] Root header: magic={:x}, entries={}, max={}, depth={}\",\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 477 to 477)\n-            inode_ref.inode.root_extent_header().depth);\n+            inode_ref.inode.root_extent_header().depth\n+        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 484 to 484)\n-    \n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 489 to 489)\n-    fn ext_grow_indepth(&self, inode_ref: &mut Ext4InodeRef) -> Result<()>{\n+    fn ext_grow_indepth(&self, inode_ref: &mut Ext4InodeRef) -> Result<()> {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 491 to 491)\n-        log::info!(\"[ext_grow_indepth] Root header: magic={:x}, entries={}, max={}, depth={}\", \n+        log::info!(\n+            \"[ext_grow_indepth] Root header: magic={:x}, entries={}, max={}, depth={}\",\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 495 to 495)\n-            inode_ref.inode.root_extent_header().depth);\n+            inode_ref.inode.root_extent_header().depth\n+        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 502 to 503)\n-        let mut new_ext4block =\n-            Block::load(&self.block_device, new_block as usize * BLOCK_SIZE);\n+        let mut new_ext4block = Block::load(&self.block_device, new_block as usize * BLOCK_SIZE);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 513 to 513)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 525 to 525)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 532 to 532)\n-            0  // generation field, usually 0\n+            0, // generation field, usually 0\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 534 to 534)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 537 to 540)\n-            core::slice::from_raw_parts(\n-                &new_header as *const _ as *const u8,\n-                header_size\n-            )\n+            core::slice::from_raw_parts(&new_header as *const _ as *const u8, header_size)\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 543 to 543)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 550 to 550)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 556 to 556)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 561 to 561)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 564 to 564)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 569 to 569)\n-            log::warn!(\"[ext_grow_indepth] Failed to set extent block checksum: {:?}\", e);\n+            log::warn!(\n+                \"[ext_grow_indepth] Failed to set extent block checksum: {:?}\",\n+                e\n+            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 573 to 573)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 576 to 576)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 584 to 586)\n-            \n-            log::info!(\"[ext_grow_indepth] Updated root header: depth {} -> {}, entries={}, max={}\", \n-                old_depth, root_header.depth, root_header.entries_count, root_header.max_entries_count);\n+\n+            log::info!(\n+                \"[ext_grow_indepth] Updated root header: depth {} -> {}, entries={}, max={}\",\n+                old_depth,\n+                root_header.depth,\n+                root_header.entries_count,\n+                root_header.max_entries_count\n+            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 588 to 588)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 596 to 596)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 602 to 604)\n-            \n-            log::info!(\"[ext_grow_indepth] Root became index block, first_block={}, pointing to block {}\", \n-                first_logical_block_saved, new_block);\n+\n+            log::info!(\n+                \"[ext_grow_indepth] Root became index block, first_block={}, pointing to block {}\",\n+                first_logical_block_saved,\n+                new_block\n+            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 612 to 612)\n-        log::info!(\"[ext_grow_indepth] Root header: magic={:x}, entries={}, max={}, depth={}\", \n+        log::info!(\n+            \"[ext_grow_indepth] Root header: magic={:x}, entries={}, max={}, depth={}\",\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 616 to 616)\n-            inode_ref.inode.root_extent_header().depth);\n+            inode_ref.inode.root_extent_header().depth\n+        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 620 to 620)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 735 to 736)\n-                let ext4block =\n-                    Block::load(&self.block_device, node_pblock * BLOCK_SIZE);\n+                let ext4block = Block::load(&self.block_device, node_pblock * BLOCK_SIZE);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1075 to 1075)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1107 to 1107)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1179 to 1179)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1186 to 1186)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1189 to 1189)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1194 to 1194)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1197 to 1197)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1200 to 1200)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1202 to 1203)\n-        let checksum = self.calculate_extent_block_checksum(inode_ref, &data_for_checksum, block_addr);\n-        \n+        let checksum =\n+            self.calculate_extent_block_checksum(inode_ref, &data_for_checksum, block_addr);\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1206 to 1206)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1209 to 1209)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1212 to 1212)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1215 to 1215)\n-    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1217 to 1217)\n-    fn calculate_extent_block_checksum(&self, inode_ref: &Ext4InodeRef, data: &[u8], block_addr: usize) -> u32 {\n+    fn calculate_extent_block_checksum(\n+        &self,\n+        inode_ref: &Ext4InodeRef,\n+        data: &[u8],\n+        block_addr: usize,\n+    ) -> u32 {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1219 to 1219)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1224 to 1224)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1228 to 1228)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1231 to 1231)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1234 to 1234)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1238 to 1238)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1242 to 1242)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1245 to 1245)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1248 to 1248)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1253 to 1254)\n-    size_of::<Ext4ExtentHeader>() + \n-    (header.max_entries_count as usize * size_of::<Ext4Extent>())\n+    size_of::<Ext4ExtentHeader>() + (header.max_entries_count as usize * size_of::<Ext4Extent>())\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 1256 to 1256)\n+\n"
            ]
          }
        },
        {
          "file": "src/ext4_impls/file.rs",
          "features": "",
          "count": 145,
          "kinds": {
            "Clippy(Warn)": [
              "warning: length comparison to zero\n   --> src/ext4_impls/file.rs:341:24\n    |\n341 |                     if allocated_blocks.len() > 0 {\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!allocated_blocks.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n"
            ],
            "Unformatted": [
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 1 to 1)\n+use crate::ext4_defs::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 4 to 4)\n-use crate::ext4_defs::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 87 to 87)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 115 to 118)\n-        let inode_ref = Ext4InodeRef {\n-            inode_num,\n-            inode,\n-        };\n+        let inode_ref = Ext4InodeRef { inode_num, inode };\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 123 to 123)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 134 to 134)\n-    pub fn create_with_attr(&self, parent: u32, name: &str, inode_mode: u16, uid:u16, gid: u16) -> Result<Ext4InodeRef> {\n+    pub fn create_with_attr(\n+        &self,\n+        parent: u32,\n+        name: &str,\n+        inode_mode: u16,\n+        uid: u16,\n+        gid: u16,\n+    ) -> Result<Ext4InodeRef> {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 193 to 193)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 196 to 196)\n-        \n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 209 to 211)\n-                Ok(idx) => {\n-                    idx\n-                },\n+                Ok(idx) => idx,\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 213 to 213)\n-                    return_errno_with_message!(Errno::EIO, \"Failed to get physical block for logical block\");\n+                    return_errno_with_message!(\n+                        Errno::EIO,\n+                        \"Failed to get physical block for logical block\"\n+                    );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 218 to 218)\n-            let data = self.block_device.read_offset(pblock_idx as usize * BLOCK_SIZE);\n+            let data = self\n+                .block_device\n+                .read_offset(pblock_idx as usize * BLOCK_SIZE);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 234 to 234)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 244 to 244)\n-            \n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 248 to 250)\n-                Ok(idx) => {\n-                    idx\n-                },\n+                Ok(idx) => idx,\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 252 to 252)\n-                    return_errno_with_message!(Errno::EIO, \"Failed to get physical block for logical block\");\n+                    return_errno_with_message!(\n+                        Errno::EIO,\n+                        \"Failed to get physical block for logical block\"\n+                    );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 257 to 257)\n-            let data = self.block_device.read_offset(pblock_idx as usize * BLOCK_SIZE);\n+            let data = self\n+                .block_device\n+                .read_offset(pblock_idx as usize * BLOCK_SIZE);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 294 to 295)\n-        log::trace!(\"[Write] Starting write - inode: {}, offset: {}, size: {}, current file size: {}\", \n-            inode, offset, write_buf_len, file_size);\n+        log::trace!(\n+            \"[Write] Starting write - inode: {}, offset: {}, size: {}, current file size: {}\",\n+            inode,\n+            offset,\n+            write_buf_len,\n+            file_size\n+        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 329 to 329)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 331 to 332)\n-            let allocated_blocks = self.append_inode_pblk_batch(&mut inode_ref, &mut start_bgid, blocks_to_allocate)?;\n-            \n+            let allocated_blocks =\n+                self.append_inode_pblk_batch(&mut inode_ref, &mut start_bgid, blocks_to_allocate)?;\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 335 to 336)\n-                log::trace!(\"[Write] Could only allocate {} out of {} blocks\", allocated_blocks.len(), blocks_to_allocate);\n-                \n+                log::trace!(\n+                    \"[Write] Could only allocate {} out of {} blocks\",\n+                    allocated_blocks.len(),\n+                    blocks_to_allocate\n+                );\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 351 to 351)\n-                \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 354 to 354)\n-                    return return_errno_with_message!(Errno::ENOSPC, \"No blocks available for write\");\n+                    return return_errno_with_message!(\n+                        Errno::ENOSPC,\n+                        \"No blocks available for write\"\n+                    );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 356 to 356)\n-                \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 359 to 359)\n-                log::trace!(\"[Write] Adjusted write size from {} to {} bytes\", write_buf.len(), write_buf_len);\n+                log::trace!(\n+                    \"[Write] Adjusted write size from {} to {} bytes\",\n+                    write_buf.len(),\n+                    write_buf_len\n+                );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 361 to 361)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 374 to 376)\n-            log::error!(\"[Write] Not enough blocks available: required {}, available {}\", \n-                required_blocks, available_blocks);\n-            return return_errno_with_message!(Errno::ENOSPC, \"Not enough blocks available for write\");\n+            log::error!(\n+                \"[Write] Not enough blocks available: required {}, available {}\",\n+                required_blocks,\n+                available_blocks\n+            );\n+            return return_errno_with_message!(\n+                Errno::ENOSPC,\n+                \"Not enough blocks available for write\"\n+            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 383 to 383)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 388 to 388)\n-                    log::error!(\"[Write] Failed to get physical block for logical block {}: {:?}\", iblk_idx, e);\n+                    log::error!(\n+                        \"[Write] Failed to get physical block for logical block {}: {:?}\",\n+                        iblk_idx,\n+                        e\n+                    );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 395 to 395)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 398 to 398)\n-                let existing_data = self.block_device.read_offset(pblock_idx as usize * BLOCK_SIZE);\n+                let existing_data = self\n+                    .block_device\n+                    .read_offset(pblock_idx as usize * BLOCK_SIZE);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 401 to 401)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 408 to 408)\n-                log::error!(\"[Write] Verification failed for unaligned write at block {}\", pblock_idx);\n+                log::error!(\n+                    \"[Write] Verification failed for unaligned write at block {}\",\n+                    pblock_idx\n+                );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 420 to 421)\n-        log::info!(\"[Aligned Write] Starting aligned writes for {} blocks\", (write_buf_len - written + BLOCK_SIZE - 1) / BLOCK_SIZE);\n-        \n+        log::info!(\n+            \"[Aligned Write] Starting aligned writes for {} blocks\",\n+            (write_buf_len - written + BLOCK_SIZE - 1) / BLOCK_SIZE\n+        );\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 424 to 424)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 429 to 429)\n-                    log::error!(\"[Write] Failed to get physical block for logical block {}: {:?}\", iblk_idx, e);\n+                    log::error!(\n+                        \"[Write] Failed to get physical block for logical block {}: {:?}\",\n+                        iblk_idx,\n+                        e\n+                    );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 438 to 438)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 444 to 444)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 451 to 451)\n-                log::error!(\"[Write] Verification failed for aligned write at block {}\", pblock_idx);\n+                log::error!(\n+                    \"[Write] Verification failed for aligned write at block {}\",\n+                    pblock_idx\n+                );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 456 to 456)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 461 to 461)\n-                log::trace!(\"[Progress] Written {} blocks, {} bytes\", aligned_blocks, written);\n+                log::trace!(\n+                    \"[Progress] Written {} blocks, {} bytes\",\n+                    aligned_blocks,\n+                    written\n+                );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 464 to 464)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 468 to 469)\n-            log::trace!(\"[Write] Updating file size from {} to {}\", file_size, new_size);\n-            \n+            log::trace!(\n+                \"[Write] Updating file size from {} to {}\",\n+                file_size,\n+                new_size\n+            );\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 472 to 472)\n-                log::error!(\"[Write] New file size {} exceeds maximum allowed size\", new_size);\n+                log::error!(\n+                    \"[Write] New file size {} exceeds maximum allowed size\",\n+                    new_size\n+                );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 475 to 475)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 478 to 478)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 482 to 484)\n-                log::error!(\"[Write] File size update verification failed: expected {}, got {}\", \n-                    new_size, verify_inode.inode.size());\n-                return return_errno_with_message!(Errno::EIO, \"File size update verification failed\");\n+                log::error!(\n+                    \"[Write] File size update verification failed: expected {}, got {}\",\n+                    new_size,\n+                    verify_inode.inode.size()\n+                );\n+                return return_errno_with_message!(\n+                    Errno::EIO,\n+                    \"File size update verification failed\"\n+                );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 489 to 490)\n-        log::info!(\"[Blocks] Total blocks: {}, New blocks: {}, Aligned blocks: {}\", \n-            total_blocks, new_blocks, aligned_blocks);\n+        log::info!(\n+            \"[Blocks] Total blocks: {}, New blocks: {}, Aligned blocks: {}\",\n+            total_blocks,\n+            new_blocks,\n+            aligned_blocks\n+        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 526 to 530)\n-        let r = self.unlink(\n-            &mut parent_inode_ref,\n-            &mut child_inode_ref,\n-            &p[..len],\n-        )?;\n+        let r = self.unlink(&mut parent_inode_ref, &mut child_inode_ref, &p[..len])?;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 532 to 532)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 558 to 558)\n-        if diff_blocks_cnt > 0{\n+        if diff_blocks_cnt > 0 {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 571 to 589)\n-    // /// Write data to a file at a given offset\n-    // ///\n-    // /// Params:\n-    // /// inode: u32 - inode number of the file\n-    // /// offset: usize - offset from where to write\n-    // /// write_buf: &[u8] - buffer to write the data from\n-    // ///\n-    // /// Returns:\n-    // /// `Result<usize>` - number of bytes written\n-    // pub fn write_at(&self, inode: u32, offset: usize, write_buf: &[u8]) -> Result<usize> {\n-    //     let total_start = Instant::now();\n-    //     log::info!(\"=== Write Performance Analysis ===\");\n-    //     log::info!(\"Write size: {} bytes\", write_buf.len());\n-        \n-    //     // write buf is empty, return 0\n-    //     let write_buf_len = write_buf.len();\n-    //     if write_buf_len == 0 {\n-    //         return Ok(0);\n-    //     }\n+// /// Write data to a file at a given offset\n+// ///\n+// /// Params:\n+// /// inode: u32 - inode number of the file\n+// /// offset: usize - offset from where to write\n+// /// write_buf: &[u8] - buffer to write the data from\n+// ///\n+// /// Returns:\n+// /// `Result<usize>` - number of bytes written\n+// pub fn write_at(&self, inode: u32, offset: usize, write_buf: &[u8]) -> Result<usize> {\n+//     let total_start = Instant::now();\n+//     log::info!(\"=== Write Performance Analysis ===\");\n+//     log::info!(\"Write size: {} bytes\", write_buf.len());\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 591 to 595)\n-    //     // get the inode reference\n-    //     let inode_start = Instant::now();\n-    //     let mut inode_ref = self.get_inode_ref(inode);\n-    //     let inode_time = inode_start.elapsed();\n-    //     log::info!(\"[Time] Get inode: {:.3}ms\", inode_time.as_secs_f64() * 1000.0);\n+//     // write buf is empty, return 0\n+//     let write_buf_len = write_buf.len();\n+//     if write_buf_len == 0 {\n+//         return Ok(0);\n+//     }\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 597 to 598)\n-    //     // Get the file size\n-    //     let file_size = inode_ref.inode.size();\n+//     // get the inode reference\n+//     let inode_start = Instant::now();\n+//     let mut inode_ref = self.get_inode_ref(inode);\n+//     let inode_time = inode_start.elapsed();\n+//     log::info!(\"[Time] Get inode: {:.3}ms\", inode_time.as_secs_f64() * 1000.0);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 600 to 605)\n-    //     // Calculate the start and end block index\n-    //     let iblock_start = offset / BLOCK_SIZE;\n-    //     let iblock_last = (offset + write_buf_len + BLOCK_SIZE - 1) / BLOCK_SIZE;\n-    //     let total_blocks_needed = iblock_last - iblock_start;\n-    //     log::info!(\"[Blocks] Start block: {}, Last block: {}, Total blocks needed: {}\", \n-    //         iblock_start, iblock_last, total_blocks_needed);\n+//     // Get the file size\n+//     let file_size = inode_ref.inode.size();\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 607 to 609)\n-    //     // start block index\n-    //     let mut iblk_idx = iblock_start;\n-    //     let ifile_blocks = (file_size + BLOCK_SIZE as u64 - 1) / BLOCK_SIZE as u64;\n+//     // Calculate the start and end block index\n+//     let iblock_start = offset / BLOCK_SIZE;\n+//     let iblock_last = (offset + write_buf_len + BLOCK_SIZE - 1) / BLOCK_SIZE;\n+//     let total_blocks_needed = iblock_last - iblock_start;\n+//     log::info!(\"[Blocks] Start block: {}, Last block: {}, Total blocks needed: {}\",\n+//         iblock_start, iblock_last, total_blocks_needed);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 611 to 615)\n-    //     // Calculate the unaligned size\n-    //     let unaligned = offset % BLOCK_SIZE;\n-    //     if unaligned > 0 {\n-    //         log::info!(\"[Alignment] Unaligned start: {} bytes\", unaligned);\n-    //     }\n+//     // start block index\n+//     let mut iblk_idx = iblock_start;\n+//     let ifile_blocks = (file_size + BLOCK_SIZE as u64 - 1) / BLOCK_SIZE as u64;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 617 to 623)\n-    //     // Buffer to keep track of written bytes\n-    //     let mut written = 0;\n-    //     let mut total_blocks = 0;\n-    //     let mut new_blocks = 0;\n-    //     let mut total_alloc_time = Duration::new(0, 0);\n-    //     let mut total_write_time = Duration::new(0, 0);\n-    //     let mut total_sync_time = Duration::new(0, 0);\n+//     // Calculate the unaligned size\n+//     let unaligned = offset % BLOCK_SIZE;\n+//     if unaligned > 0 {\n+//         log::info!(\"[Alignment] Unaligned start: {} bytes\", unaligned);\n+//     }\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 625 to 626)\n-    //     // Start bgid for block allocation\n-    //     let mut start_bgid = 1;\n+//     // Buffer to keep track of written bytes\n+//     let mut written = 0;\n+//     let mut total_blocks = 0;\n+//     let mut new_blocks = 0;\n+//     let mut total_alloc_time = Duration::new(0, 0);\n+//     let mut total_write_time = Duration::new(0, 0);\n+//     let mut total_sync_time = Duration::new(0, 0);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 628 to 633)\n-    //     // Pre-allocate blocks if needed\n-    //     let blocks_to_allocate = if iblk_idx >= ifile_blocks as usize {\n-    //         total_blocks_needed\n-    //     } else {\n-    //         max(0, total_blocks_needed - (ifile_blocks as usize - iblk_idx))\n-    //     };\n+//     // Start bgid for block allocation\n+//     let mut start_bgid = 1;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 635 to 654)\n-    //     if blocks_to_allocate > 0 {\n-    //         let prealloc_start = Instant::now();\n-    //         log::info!(\"[Pre-allocation] Allocating {} blocks\", blocks_to_allocate);\n-            \n-    //         // Use the new batch allocation function\n-    //         let allocated_blocks = self.balloc_alloc_block_new(&mut inode_ref, &mut start_bgid, blocks_to_allocate)?;\n-            \n-    //         // Create a single extent for all allocated blocks\n-    //         if !allocated_blocks.is_empty() {\n-    //             let mut newex = Ext4Extent::default();\n-    //             newex.first_block = iblk_idx as u32;\n-    //             newex.store_pblock(allocated_blocks[0]);\n-    //             newex.block_count = allocated_blocks.len() as u16;\n-    //             self.insert_extent(&mut inode_ref, &mut newex)?;\n-    //         }\n-            \n-    //         let prealloc_time = prealloc_start.elapsed();\n-    //         log::info!(\"[Time] Pre-allocation: {:.3}ms\", prealloc_time.as_secs_f64() * 1000.0);\n-    //         new_blocks += blocks_to_allocate;\n-    //     }\n+//     // Pre-allocate blocks if needed\n+//     let blocks_to_allocate = if iblk_idx >= ifile_blocks as usize {\n+//         total_blocks_needed\n+//     } else {\n+//         max(0, total_blocks_needed - (ifile_blocks as usize - iblk_idx))\n+//     };\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 656 to 667)\n-    //     // Unaligned write\n-    //     if unaligned > 0 {\n-    //         let unaligned_start = Instant::now();\n-    //         let len = min(write_buf_len, BLOCK_SIZE - unaligned);\n-    //         log::info!(\"[Unaligned Write] Writing {} bytes\", len);\n-            \n-    //         // Get the physical block id\n-    //         let pblock_start = Instant::now();\n-    //         let pblock_idx = self.get_pblock_idx(&inode_ref, iblk_idx as u32)?;\n-    //         let alloc_time = pblock_start.elapsed();\n-    //         total_alloc_time += alloc_time;\n-    //         total_blocks += 1;\n+//     if blocks_to_allocate > 0 {\n+//         let prealloc_start = Instant::now();\n+//         log::info!(\"[Pre-allocation] Allocating {} blocks\", blocks_to_allocate);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 669 to 673)\n-    //         let write_start = Instant::now();\n-    //         let mut block = Block::load(self.block_device.clone(), pblock_idx as usize * BLOCK_SIZE);\n-    //         block.write_offset(unaligned, &write_buf[..len], len);\n-    //         let write_time = write_start.elapsed();\n-    //         total_write_time += write_time;\n+//         // Use the new batch allocation function\n+//         let allocated_blocks = self.balloc_alloc_block_new(&mut inode_ref, &mut start_bgid, blocks_to_allocate)?;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 675 to 679)\n-    //         let sync_start = Instant::now();\n-    //         block.sync_blk_to_disk(self.block_device.clone());\n-    //         let sync_time = sync_start.elapsed();\n-    //         total_sync_time += sync_time;\n-    //         drop(block);\n+//         // Create a single extent for all allocated blocks\n+//         if !allocated_blocks.is_empty() {\n+//             let mut newex = Ext4Extent::default();\n+//             newex.first_block = iblk_idx as u32;\n+//             newex.store_pblock(allocated_blocks[0]);\n+//             newex.block_count = allocated_blocks.len() as u16;\n+//             self.insert_extent(&mut inode_ref, &mut newex)?;\n+//         }\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 681 to 686)\n-    //         written += len;\n-    //         iblk_idx += 1;\n-            \n-    //         let unaligned_time = unaligned_start.elapsed();\n-    //         log::info!(\"[Time] Total unaligned write: {:.3}ms\", unaligned_time.as_secs_f64() * 1000.0);\n-    //     }\n+//         let prealloc_time = prealloc_start.elapsed();\n+//         log::info!(\"[Time] Pre-allocation: {:.3}ms\", prealloc_time.as_secs_f64() * 1000.0);\n+//         new_blocks += blocks_to_allocate;\n+//     }\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 688 to 701)\n-    //     // Aligned write\n-    //     let aligned_start = Instant::now();\n-    //     let mut aligned_blocks = 0;\n-    //     log::info!(\"[Aligned Write] Starting aligned writes for {} blocks\", (write_buf_len - written + BLOCK_SIZE - 1) / BLOCK_SIZE);\n-        \n-    //     while written < write_buf_len {\n-    //         aligned_blocks += 1;\n-            \n-    //         // Get the physical block id\n-    //         let pblock_start = Instant::now();\n-    //         let pblock_idx = self.get_pblock_idx(&inode_ref, iblk_idx as u32)?;\n-    //         let alloc_time = pblock_start.elapsed();\n-    //         total_alloc_time += alloc_time;\n-    //         total_blocks += 1;\n+//     // Unaligned write\n+//     if unaligned > 0 {\n+//         let unaligned_start = Instant::now();\n+//         let len = min(write_buf_len, BLOCK_SIZE - unaligned);\n+//         log::info!(\"[Unaligned Write] Writing {} bytes\", len);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 703 to 709)\n-    //         let write_start = Instant::now();\n-    //         let block_offset = pblock_idx as usize * BLOCK_SIZE;\n-    //         let mut block = Block::load(self.block_device.clone(), block_offset);\n-    //         let write_size = min(BLOCK_SIZE, write_buf_len - written);\n-    //         block.write_offset(0, &write_buf[written..written + write_size], write_size);\n-    //         let write_time = write_start.elapsed();\n-    //         total_write_time += write_time;\n+//         // Get the physical block id\n+//         let pblock_start = Instant::now();\n+//         let pblock_idx = self.get_pblock_idx(&inode_ref, iblk_idx as u32)?;\n+//         let alloc_time = pblock_start.elapsed();\n+//         total_alloc_time += alloc_time;\n+//         total_blocks += 1;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 711 to 718)\n-    //         let sync_start = Instant::now();\n-    //         block.sync_blk_to_disk(self.block_device.clone());\n-    //         let sync_time = sync_start.elapsed();\n-    //         total_sync_time += sync_time;\n-    //         drop(block);\n-            \n-    //         written += write_size;\n-    //         iblk_idx += 1;\n+//         let write_start = Instant::now();\n+//         let mut block = Block::load(self.block_device.clone(), pblock_idx as usize * BLOCK_SIZE);\n+//         block.write_offset(unaligned, &write_buf[..len], len);\n+//         let write_time = write_start.elapsed();\n+//         total_write_time += write_time;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 720 to 726)\n-    //         if aligned_blocks % 1000 == 0 {\n-    //             log::info!(\"[Progress] Written {} blocks, {} bytes\", aligned_blocks, written);\n-    //         }\n-    //     }\n-        \n-    //     let aligned_time = aligned_start.elapsed();\n-    //     log::info!(\"[Time] Total aligned write: {:.3}ms\", aligned_time.as_secs_f64() * 1000.0);\n+//         let sync_start = Instant::now();\n+//         block.sync_blk_to_disk(self.block_device.clone());\n+//         let sync_time = sync_start.elapsed();\n+//         total_sync_time += sync_time;\n+//         drop(block);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 728 to 735)\n-    //     // Update file size if necessary\n-    //     let update_start = Instant::now();\n-    //     if offset + written > file_size as usize {\n-    //         inode_ref.inode.set_size((offset + write_buf_len) as u64);\n-    //         self.write_back_inode(&mut inode_ref);\n-    //     }\n-    //     let update_time = update_start.elapsed();\n-    //     log::info!(\"[Time] Inode update: {:.3}ms\", update_time.as_secs_f64() * 1000.0);\n+//         written += len;\n+//         iblk_idx += 1;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 737 to 752)\n-    //     let total_time = total_start.elapsed();\n-    //     log::info!(\"=== Write Performance Summary ===\");\n-    //     log::info!(\"[Blocks] Total blocks: {}, New blocks: {}, Aligned blocks: {}\", \n-    //         total_blocks, new_blocks, aligned_blocks);\n-    //     log::info!(\"[Time] Average block allocation: {:.3}ms\", \n-    //         (total_alloc_time.as_secs_f64() * 1000.0) / total_blocks as f64);\n-    //     log::info!(\"[Time] Average block write: {:.3}ms\", \n-    //         (total_write_time.as_secs_f64() * 1000.0) / total_blocks as f64);\n-    //     log::info!(\"[Time] Average block sync: {:.3}ms\", \n-    //         (total_sync_time.as_secs_f64() * 1000.0) / total_blocks as f64);\n-    //     log::info!(\"[Time] Total write time: {:.3}ms\", total_time.as_secs_f64() * 1000.0);\n-    //     log::info!(\"[Speed] Write speed: {:.2} MB/s\", \n-    //         (write_buf_len as f64 / 1024.0 / 1024.0) / total_time.as_secs_f64());\n-    //     log::info!(\"[Efficiency] Write efficiency: {:.2}%\", \n-    //         (written as f64 / (total_blocks * BLOCK_SIZE) as f64) * 100.0);\n-    //     log::info!(\"=== End of Write Analysis ===\");\n+//         let unaligned_time = unaligned_start.elapsed();\n+//         log::info!(\"[Time] Total unaligned write: {:.3}ms\", unaligned_time.as_secs_f64() * 1000.0);\n+//     }\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 754 to 755)\n-    //     Ok(written)\n-    // }    \n+//     // Aligned write\n+//     let aligned_start = Instant::now();\n+//     let mut aligned_blocks = 0;\n+//     log::info!(\"[Aligned Write] Starting aligned writes for {} blocks\", (write_buf_len - written + BLOCK_SIZE - 1) / BLOCK_SIZE);\n+\n+//     while written < write_buf_len {\n+//         aligned_blocks += 1;\n+\n+//         // Get the physical block id\n+//         let pblock_start = Instant::now();\n+//         let pblock_idx = self.get_pblock_idx(&inode_ref, iblk_idx as u32)?;\n+//         let alloc_time = pblock_start.elapsed();\n+//         total_alloc_time += alloc_time;\n+//         total_blocks += 1;\n+\n+//         let write_start = Instant::now();\n+//         let block_offset = pblock_idx as usize * BLOCK_SIZE;\n+//         let mut block = Block::load(self.block_device.clone(), block_offset);\n+//         let write_size = min(BLOCK_SIZE, write_buf_len - written);\n+//         block.write_offset(0, &write_buf[written..written + write_size], write_size);\n+//         let write_time = write_start.elapsed();\n+//         total_write_time += write_time;\n+\n+//         let sync_start = Instant::now();\n+//         block.sync_blk_to_disk(self.block_device.clone());\n+//         let sync_time = sync_start.elapsed();\n+//         total_sync_time += sync_time;\n+//         drop(block);\n+\n+//         written += write_size;\n+//         iblk_idx += 1;\n+\n+//         if aligned_blocks % 1000 == 0 {\n+//             log::info!(\"[Progress] Written {} blocks, {} bytes\", aligned_blocks, written);\n+//         }\n+//     }\n+\n+//     let aligned_time = aligned_start.elapsed();\n+//     log::info!(\"[Time] Total aligned write: {:.3}ms\", aligned_time.as_secs_f64() * 1000.0);\n+\n+//     // Update file size if necessary\n+//     let update_start = Instant::now();\n+//     if offset + written > file_size as usize {\n+//         inode_ref.inode.set_size((offset + write_buf_len) as u64);\n+//         self.write_back_inode(&mut inode_ref);\n+//     }\n+//     let update_time = update_start.elapsed();\n+//     log::info!(\"[Time] Inode update: {:.3}ms\", update_time.as_secs_f64() * 1000.0);\n+\n+//     let total_time = total_start.elapsed();\n+//     log::info!(\"=== Write Performance Summary ===\");\n+//     log::info!(\"[Blocks] Total blocks: {}, New blocks: {}, Aligned blocks: {}\",\n+//         total_blocks, new_blocks, aligned_blocks);\n+//     log::info!(\"[Time] Average block allocation: {:.3}ms\",\n+//         (total_alloc_time.as_secs_f64() * 1000.0) / total_blocks as f64);\n+//     log::info!(\"[Time] Average block write: {:.3}ms\",\n+//         (total_write_time.as_secs_f64() * 1000.0) / total_blocks as f64);\n+//     log::info!(\"[Time] Average block sync: {:.3}ms\",\n+//         (total_sync_time.as_secs_f64() * 1000.0) / total_blocks as f64);\n+//     log::info!(\"[Time] Total write time: {:.3}ms\", total_time.as_secs_f64() * 1000.0);\n+//     log::info!(\"[Speed] Write speed: {:.2} MB/s\",\n+//         (write_buf_len as f64 / 1024.0 / 1024.0) / total_time.as_secs_f64());\n+//     log::info!(\"[Efficiency] Write efficiency: {:.2}%\",\n+//         (written as f64 / (total_blocks * BLOCK_SIZE) as f64) * 100.0);\n+//     log::info!(\"=== End of Write Analysis ===\");\n+\n+//     Ok(written)\n+// }\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 757 to 757)\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 1 to 1)\n+use crate::ext4_defs::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 4 to 4)\n-use crate::ext4_defs::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 87 to 87)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 115 to 118)\n-        let inode_ref = Ext4InodeRef {\n-            inode_num,\n-            inode,\n-        };\n+        let inode_ref = Ext4InodeRef { inode_num, inode };\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 123 to 123)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 134 to 134)\n-    pub fn create_with_attr(&self, parent: u32, name: &str, inode_mode: u16, uid:u16, gid: u16) -> Result<Ext4InodeRef> {\n+    pub fn create_with_attr(\n+        &self,\n+        parent: u32,\n+        name: &str,\n+        inode_mode: u16,\n+        uid: u16,\n+        gid: u16,\n+    ) -> Result<Ext4InodeRef> {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 193 to 193)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 196 to 196)\n-        \n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 209 to 211)\n-                Ok(idx) => {\n-                    idx\n-                },\n+                Ok(idx) => idx,\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 213 to 213)\n-                    return_errno_with_message!(Errno::EIO, \"Failed to get physical block for logical block\");\n+                    return_errno_with_message!(\n+                        Errno::EIO,\n+                        \"Failed to get physical block for logical block\"\n+                    );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 218 to 218)\n-            let data = self.block_device.read_offset(pblock_idx as usize * BLOCK_SIZE);\n+            let data = self\n+                .block_device\n+                .read_offset(pblock_idx as usize * BLOCK_SIZE);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 234 to 234)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 244 to 244)\n-            \n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 248 to 250)\n-                Ok(idx) => {\n-                    idx\n-                },\n+                Ok(idx) => idx,\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 252 to 252)\n-                    return_errno_with_message!(Errno::EIO, \"Failed to get physical block for logical block\");\n+                    return_errno_with_message!(\n+                        Errno::EIO,\n+                        \"Failed to get physical block for logical block\"\n+                    );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 257 to 257)\n-            let data = self.block_device.read_offset(pblock_idx as usize * BLOCK_SIZE);\n+            let data = self\n+                .block_device\n+                .read_offset(pblock_idx as usize * BLOCK_SIZE);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 294 to 295)\n-        log::trace!(\"[Write] Starting write - inode: {}, offset: {}, size: {}, current file size: {}\", \n-            inode, offset, write_buf_len, file_size);\n+        log::trace!(\n+            \"[Write] Starting write - inode: {}, offset: {}, size: {}, current file size: {}\",\n+            inode,\n+            offset,\n+            write_buf_len,\n+            file_size\n+        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 329 to 329)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 331 to 332)\n-            let allocated_blocks = self.append_inode_pblk_batch(&mut inode_ref, &mut start_bgid, blocks_to_allocate)?;\n-            \n+            let allocated_blocks =\n+                self.append_inode_pblk_batch(&mut inode_ref, &mut start_bgid, blocks_to_allocate)?;\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 335 to 336)\n-                log::trace!(\"[Write] Could only allocate {} out of {} blocks\", allocated_blocks.len(), blocks_to_allocate);\n-                \n+                log::trace!(\n+                    \"[Write] Could only allocate {} out of {} blocks\",\n+                    allocated_blocks.len(),\n+                    blocks_to_allocate\n+                );\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 351 to 351)\n-                \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 354 to 354)\n-                    return return_errno_with_message!(Errno::ENOSPC, \"No blocks available for write\");\n+                    return return_errno_with_message!(\n+                        Errno::ENOSPC,\n+                        \"No blocks available for write\"\n+                    );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 356 to 356)\n-                \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 359 to 359)\n-                log::trace!(\"[Write] Adjusted write size from {} to {} bytes\", write_buf.len(), write_buf_len);\n+                log::trace!(\n+                    \"[Write] Adjusted write size from {} to {} bytes\",\n+                    write_buf.len(),\n+                    write_buf_len\n+                );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 361 to 361)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 374 to 376)\n-            log::error!(\"[Write] Not enough blocks available: required {}, available {}\", \n-                required_blocks, available_blocks);\n-            return return_errno_with_message!(Errno::ENOSPC, \"Not enough blocks available for write\");\n+            log::error!(\n+                \"[Write] Not enough blocks available: required {}, available {}\",\n+                required_blocks,\n+                available_blocks\n+            );\n+            return return_errno_with_message!(\n+                Errno::ENOSPC,\n+                \"Not enough blocks available for write\"\n+            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 383 to 383)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 388 to 388)\n-                    log::error!(\"[Write] Failed to get physical block for logical block {}: {:?}\", iblk_idx, e);\n+                    log::error!(\n+                        \"[Write] Failed to get physical block for logical block {}: {:?}\",\n+                        iblk_idx,\n+                        e\n+                    );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 395 to 395)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 398 to 398)\n-                let existing_data = self.block_device.read_offset(pblock_idx as usize * BLOCK_SIZE);\n+                let existing_data = self\n+                    .block_device\n+                    .read_offset(pblock_idx as usize * BLOCK_SIZE);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 401 to 401)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 408 to 408)\n-                log::error!(\"[Write] Verification failed for unaligned write at block {}\", pblock_idx);\n+                log::error!(\n+                    \"[Write] Verification failed for unaligned write at block {}\",\n+                    pblock_idx\n+                );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 420 to 421)\n-        log::info!(\"[Aligned Write] Starting aligned writes for {} blocks\", (write_buf_len - written + BLOCK_SIZE - 1) / BLOCK_SIZE);\n-        \n+        log::info!(\n+            \"[Aligned Write] Starting aligned writes for {} blocks\",\n+            (write_buf_len - written + BLOCK_SIZE - 1) / BLOCK_SIZE\n+        );\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 424 to 424)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 429 to 429)\n-                    log::error!(\"[Write] Failed to get physical block for logical block {}: {:?}\", iblk_idx, e);\n+                    log::error!(\n+                        \"[Write] Failed to get physical block for logical block {}: {:?}\",\n+                        iblk_idx,\n+                        e\n+                    );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 438 to 438)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 444 to 444)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 451 to 451)\n-                log::error!(\"[Write] Verification failed for aligned write at block {}\", pblock_idx);\n+                log::error!(\n+                    \"[Write] Verification failed for aligned write at block {}\",\n+                    pblock_idx\n+                );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 456 to 456)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 461 to 461)\n-                log::trace!(\"[Progress] Written {} blocks, {} bytes\", aligned_blocks, written);\n+                log::trace!(\n+                    \"[Progress] Written {} blocks, {} bytes\",\n+                    aligned_blocks,\n+                    written\n+                );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 464 to 464)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 468 to 469)\n-            log::trace!(\"[Write] Updating file size from {} to {}\", file_size, new_size);\n-            \n+            log::trace!(\n+                \"[Write] Updating file size from {} to {}\",\n+                file_size,\n+                new_size\n+            );\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 472 to 472)\n-                log::error!(\"[Write] New file size {} exceeds maximum allowed size\", new_size);\n+                log::error!(\n+                    \"[Write] New file size {} exceeds maximum allowed size\",\n+                    new_size\n+                );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 475 to 475)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 478 to 478)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 482 to 484)\n-                log::error!(\"[Write] File size update verification failed: expected {}, got {}\", \n-                    new_size, verify_inode.inode.size());\n-                return return_errno_with_message!(Errno::EIO, \"File size update verification failed\");\n+                log::error!(\n+                    \"[Write] File size update verification failed: expected {}, got {}\",\n+                    new_size,\n+                    verify_inode.inode.size()\n+                );\n+                return return_errno_with_message!(\n+                    Errno::EIO,\n+                    \"File size update verification failed\"\n+                );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 489 to 490)\n-        log::info!(\"[Blocks] Total blocks: {}, New blocks: {}, Aligned blocks: {}\", \n-            total_blocks, new_blocks, aligned_blocks);\n+        log::info!(\n+            \"[Blocks] Total blocks: {}, New blocks: {}, Aligned blocks: {}\",\n+            total_blocks,\n+            new_blocks,\n+            aligned_blocks\n+        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 526 to 530)\n-        let r = self.unlink(\n-            &mut parent_inode_ref,\n-            &mut child_inode_ref,\n-            &p[..len],\n-        )?;\n+        let r = self.unlink(&mut parent_inode_ref, &mut child_inode_ref, &p[..len])?;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 532 to 532)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 558 to 558)\n-        if diff_blocks_cnt > 0{\n+        if diff_blocks_cnt > 0 {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 571 to 589)\n-    // /// Write data to a file at a given offset\n-    // ///\n-    // /// Params:\n-    // /// inode: u32 - inode number of the file\n-    // /// offset: usize - offset from where to write\n-    // /// write_buf: &[u8] - buffer to write the data from\n-    // ///\n-    // /// Returns:\n-    // /// `Result<usize>` - number of bytes written\n-    // pub fn write_at(&self, inode: u32, offset: usize, write_buf: &[u8]) -> Result<usize> {\n-    //     let total_start = Instant::now();\n-    //     log::info!(\"=== Write Performance Analysis ===\");\n-    //     log::info!(\"Write size: {} bytes\", write_buf.len());\n-        \n-    //     // write buf is empty, return 0\n-    //     let write_buf_len = write_buf.len();\n-    //     if write_buf_len == 0 {\n-    //         return Ok(0);\n-    //     }\n+// /// Write data to a file at a given offset\n+// ///\n+// /// Params:\n+// /// inode: u32 - inode number of the file\n+// /// offset: usize - offset from where to write\n+// /// write_buf: &[u8] - buffer to write the data from\n+// ///\n+// /// Returns:\n+// /// `Result<usize>` - number of bytes written\n+// pub fn write_at(&self, inode: u32, offset: usize, write_buf: &[u8]) -> Result<usize> {\n+//     let total_start = Instant::now();\n+//     log::info!(\"=== Write Performance Analysis ===\");\n+//     log::info!(\"Write size: {} bytes\", write_buf.len());\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 591 to 595)\n-    //     // get the inode reference\n-    //     let inode_start = Instant::now();\n-    //     let mut inode_ref = self.get_inode_ref(inode);\n-    //     let inode_time = inode_start.elapsed();\n-    //     log::info!(\"[Time] Get inode: {:.3}ms\", inode_time.as_secs_f64() * 1000.0);\n+//     // write buf is empty, return 0\n+//     let write_buf_len = write_buf.len();\n+//     if write_buf_len == 0 {\n+//         return Ok(0);\n+//     }\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 597 to 598)\n-    //     // Get the file size\n-    //     let file_size = inode_ref.inode.size();\n+//     // get the inode reference\n+//     let inode_start = Instant::now();\n+//     let mut inode_ref = self.get_inode_ref(inode);\n+//     let inode_time = inode_start.elapsed();\n+//     log::info!(\"[Time] Get inode: {:.3}ms\", inode_time.as_secs_f64() * 1000.0);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 600 to 605)\n-    //     // Calculate the start and end block index\n-    //     let iblock_start = offset / BLOCK_SIZE;\n-    //     let iblock_last = (offset + write_buf_len + BLOCK_SIZE - 1) / BLOCK_SIZE;\n-    //     let total_blocks_needed = iblock_last - iblock_start;\n-    //     log::info!(\"[Blocks] Start block: {}, Last block: {}, Total blocks needed: {}\", \n-    //         iblock_start, iblock_last, total_blocks_needed);\n+//     // Get the file size\n+//     let file_size = inode_ref.inode.size();\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 607 to 609)\n-    //     // start block index\n-    //     let mut iblk_idx = iblock_start;\n-    //     let ifile_blocks = (file_size + BLOCK_SIZE as u64 - 1) / BLOCK_SIZE as u64;\n+//     // Calculate the start and end block index\n+//     let iblock_start = offset / BLOCK_SIZE;\n+//     let iblock_last = (offset + write_buf_len + BLOCK_SIZE - 1) / BLOCK_SIZE;\n+//     let total_blocks_needed = iblock_last - iblock_start;\n+//     log::info!(\"[Blocks] Start block: {}, Last block: {}, Total blocks needed: {}\",\n+//         iblock_start, iblock_last, total_blocks_needed);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 611 to 615)\n-    //     // Calculate the unaligned size\n-    //     let unaligned = offset % BLOCK_SIZE;\n-    //     if unaligned > 0 {\n-    //         log::info!(\"[Alignment] Unaligned start: {} bytes\", unaligned);\n-    //     }\n+//     // start block index\n+//     let mut iblk_idx = iblock_start;\n+//     let ifile_blocks = (file_size + BLOCK_SIZE as u64 - 1) / BLOCK_SIZE as u64;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 617 to 623)\n-    //     // Buffer to keep track of written bytes\n-    //     let mut written = 0;\n-    //     let mut total_blocks = 0;\n-    //     let mut new_blocks = 0;\n-    //     let mut total_alloc_time = Duration::new(0, 0);\n-    //     let mut total_write_time = Duration::new(0, 0);\n-    //     let mut total_sync_time = Duration::new(0, 0);\n+//     // Calculate the unaligned size\n+//     let unaligned = offset % BLOCK_SIZE;\n+//     if unaligned > 0 {\n+//         log::info!(\"[Alignment] Unaligned start: {} bytes\", unaligned);\n+//     }\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 625 to 626)\n-    //     // Start bgid for block allocation\n-    //     let mut start_bgid = 1;\n+//     // Buffer to keep track of written bytes\n+//     let mut written = 0;\n+//     let mut total_blocks = 0;\n+//     let mut new_blocks = 0;\n+//     let mut total_alloc_time = Duration::new(0, 0);\n+//     let mut total_write_time = Duration::new(0, 0);\n+//     let mut total_sync_time = Duration::new(0, 0);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 628 to 633)\n-    //     // Pre-allocate blocks if needed\n-    //     let blocks_to_allocate = if iblk_idx >= ifile_blocks as usize {\n-    //         total_blocks_needed\n-    //     } else {\n-    //         max(0, total_blocks_needed - (ifile_blocks as usize - iblk_idx))\n-    //     };\n+//     // Start bgid for block allocation\n+//     let mut start_bgid = 1;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 635 to 654)\n-    //     if blocks_to_allocate > 0 {\n-    //         let prealloc_start = Instant::now();\n-    //         log::info!(\"[Pre-allocation] Allocating {} blocks\", blocks_to_allocate);\n-            \n-    //         // Use the new batch allocation function\n-    //         let allocated_blocks = self.balloc_alloc_block_new(&mut inode_ref, &mut start_bgid, blocks_to_allocate)?;\n-            \n-    //         // Create a single extent for all allocated blocks\n-    //         if !allocated_blocks.is_empty() {\n-    //             let mut newex = Ext4Extent::default();\n-    //             newex.first_block = iblk_idx as u32;\n-    //             newex.store_pblock(allocated_blocks[0]);\n-    //             newex.block_count = allocated_blocks.len() as u16;\n-    //             self.insert_extent(&mut inode_ref, &mut newex)?;\n-    //         }\n-            \n-    //         let prealloc_time = prealloc_start.elapsed();\n-    //         log::info!(\"[Time] Pre-allocation: {:.3}ms\", prealloc_time.as_secs_f64() * 1000.0);\n-    //         new_blocks += blocks_to_allocate;\n-    //     }\n+//     // Pre-allocate blocks if needed\n+//     let blocks_to_allocate = if iblk_idx >= ifile_blocks as usize {\n+//         total_blocks_needed\n+//     } else {\n+//         max(0, total_blocks_needed - (ifile_blocks as usize - iblk_idx))\n+//     };\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 656 to 667)\n-    //     // Unaligned write\n-    //     if unaligned > 0 {\n-    //         let unaligned_start = Instant::now();\n-    //         let len = min(write_buf_len, BLOCK_SIZE - unaligned);\n-    //         log::info!(\"[Unaligned Write] Writing {} bytes\", len);\n-            \n-    //         // Get the physical block id\n-    //         let pblock_start = Instant::now();\n-    //         let pblock_idx = self.get_pblock_idx(&inode_ref, iblk_idx as u32)?;\n-    //         let alloc_time = pblock_start.elapsed();\n-    //         total_alloc_time += alloc_time;\n-    //         total_blocks += 1;\n+//     if blocks_to_allocate > 0 {\n+//         let prealloc_start = Instant::now();\n+//         log::info!(\"[Pre-allocation] Allocating {} blocks\", blocks_to_allocate);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 669 to 673)\n-    //         let write_start = Instant::now();\n-    //         let mut block = Block::load(self.block_device.clone(), pblock_idx as usize * BLOCK_SIZE);\n-    //         block.write_offset(unaligned, &write_buf[..len], len);\n-    //         let write_time = write_start.elapsed();\n-    //         total_write_time += write_time;\n+//         // Use the new batch allocation function\n+//         let allocated_blocks = self.balloc_alloc_block_new(&mut inode_ref, &mut start_bgid, blocks_to_allocate)?;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 675 to 679)\n-    //         let sync_start = Instant::now();\n-    //         block.sync_blk_to_disk(self.block_device.clone());\n-    //         let sync_time = sync_start.elapsed();\n-    //         total_sync_time += sync_time;\n-    //         drop(block);\n+//         // Create a single extent for all allocated blocks\n+//         if !allocated_blocks.is_empty() {\n+//             let mut newex = Ext4Extent::default();\n+//             newex.first_block = iblk_idx as u32;\n+//             newex.store_pblock(allocated_blocks[0]);\n+//             newex.block_count = allocated_blocks.len() as u16;\n+//             self.insert_extent(&mut inode_ref, &mut newex)?;\n+//         }\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 681 to 686)\n-    //         written += len;\n-    //         iblk_idx += 1;\n-            \n-    //         let unaligned_time = unaligned_start.elapsed();\n-    //         log::info!(\"[Time] Total unaligned write: {:.3}ms\", unaligned_time.as_secs_f64() * 1000.0);\n-    //     }\n+//         let prealloc_time = prealloc_start.elapsed();\n+//         log::info!(\"[Time] Pre-allocation: {:.3}ms\", prealloc_time.as_secs_f64() * 1000.0);\n+//         new_blocks += blocks_to_allocate;\n+//     }\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 688 to 701)\n-    //     // Aligned write\n-    //     let aligned_start = Instant::now();\n-    //     let mut aligned_blocks = 0;\n-    //     log::info!(\"[Aligned Write] Starting aligned writes for {} blocks\", (write_buf_len - written + BLOCK_SIZE - 1) / BLOCK_SIZE);\n-        \n-    //     while written < write_buf_len {\n-    //         aligned_blocks += 1;\n-            \n-    //         // Get the physical block id\n-    //         let pblock_start = Instant::now();\n-    //         let pblock_idx = self.get_pblock_idx(&inode_ref, iblk_idx as u32)?;\n-    //         let alloc_time = pblock_start.elapsed();\n-    //         total_alloc_time += alloc_time;\n-    //         total_blocks += 1;\n+//     // Unaligned write\n+//     if unaligned > 0 {\n+//         let unaligned_start = Instant::now();\n+//         let len = min(write_buf_len, BLOCK_SIZE - unaligned);\n+//         log::info!(\"[Unaligned Write] Writing {} bytes\", len);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 703 to 709)\n-    //         let write_start = Instant::now();\n-    //         let block_offset = pblock_idx as usize * BLOCK_SIZE;\n-    //         let mut block = Block::load(self.block_device.clone(), block_offset);\n-    //         let write_size = min(BLOCK_SIZE, write_buf_len - written);\n-    //         block.write_offset(0, &write_buf[written..written + write_size], write_size);\n-    //         let write_time = write_start.elapsed();\n-    //         total_write_time += write_time;\n+//         // Get the physical block id\n+//         let pblock_start = Instant::now();\n+//         let pblock_idx = self.get_pblock_idx(&inode_ref, iblk_idx as u32)?;\n+//         let alloc_time = pblock_start.elapsed();\n+//         total_alloc_time += alloc_time;\n+//         total_blocks += 1;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 711 to 718)\n-    //         let sync_start = Instant::now();\n-    //         block.sync_blk_to_disk(self.block_device.clone());\n-    //         let sync_time = sync_start.elapsed();\n-    //         total_sync_time += sync_time;\n-    //         drop(block);\n-            \n-    //         written += write_size;\n-    //         iblk_idx += 1;\n+//         let write_start = Instant::now();\n+//         let mut block = Block::load(self.block_device.clone(), pblock_idx as usize * BLOCK_SIZE);\n+//         block.write_offset(unaligned, &write_buf[..len], len);\n+//         let write_time = write_start.elapsed();\n+//         total_write_time += write_time;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 720 to 726)\n-    //         if aligned_blocks % 1000 == 0 {\n-    //             log::info!(\"[Progress] Written {} blocks, {} bytes\", aligned_blocks, written);\n-    //         }\n-    //     }\n-        \n-    //     let aligned_time = aligned_start.elapsed();\n-    //     log::info!(\"[Time] Total aligned write: {:.3}ms\", aligned_time.as_secs_f64() * 1000.0);\n+//         let sync_start = Instant::now();\n+//         block.sync_blk_to_disk(self.block_device.clone());\n+//         let sync_time = sync_start.elapsed();\n+//         total_sync_time += sync_time;\n+//         drop(block);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 728 to 735)\n-    //     // Update file size if necessary\n-    //     let update_start = Instant::now();\n-    //     if offset + written > file_size as usize {\n-    //         inode_ref.inode.set_size((offset + write_buf_len) as u64);\n-    //         self.write_back_inode(&mut inode_ref);\n-    //     }\n-    //     let update_time = update_start.elapsed();\n-    //     log::info!(\"[Time] Inode update: {:.3}ms\", update_time.as_secs_f64() * 1000.0);\n+//         written += len;\n+//         iblk_idx += 1;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 737 to 752)\n-    //     let total_time = total_start.elapsed();\n-    //     log::info!(\"=== Write Performance Summary ===\");\n-    //     log::info!(\"[Blocks] Total blocks: {}, New blocks: {}, Aligned blocks: {}\", \n-    //         total_blocks, new_blocks, aligned_blocks);\n-    //     log::info!(\"[Time] Average block allocation: {:.3}ms\", \n-    //         (total_alloc_time.as_secs_f64() * 1000.0) / total_blocks as f64);\n-    //     log::info!(\"[Time] Average block write: {:.3}ms\", \n-    //         (total_write_time.as_secs_f64() * 1000.0) / total_blocks as f64);\n-    //     log::info!(\"[Time] Average block sync: {:.3}ms\", \n-    //         (total_sync_time.as_secs_f64() * 1000.0) / total_blocks as f64);\n-    //     log::info!(\"[Time] Total write time: {:.3}ms\", total_time.as_secs_f64() * 1000.0);\n-    //     log::info!(\"[Speed] Write speed: {:.2} MB/s\", \n-    //         (write_buf_len as f64 / 1024.0 / 1024.0) / total_time.as_secs_f64());\n-    //     log::info!(\"[Efficiency] Write efficiency: {:.2}%\", \n-    //         (written as f64 / (total_blocks * BLOCK_SIZE) as f64) * 100.0);\n-    //     log::info!(\"=== End of Write Analysis ===\");\n+//         let unaligned_time = unaligned_start.elapsed();\n+//         log::info!(\"[Time] Total unaligned write: {:.3}ms\", unaligned_time.as_secs_f64() * 1000.0);\n+//     }\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 754 to 755)\n-    //     Ok(written)\n-    // }    \n+//     // Aligned write\n+//     let aligned_start = Instant::now();\n+//     let mut aligned_blocks = 0;\n+//     log::info!(\"[Aligned Write] Starting aligned writes for {} blocks\", (write_buf_len - written + BLOCK_SIZE - 1) / BLOCK_SIZE);\n+\n+//     while written < write_buf_len {\n+//         aligned_blocks += 1;\n+\n+//         // Get the physical block id\n+//         let pblock_start = Instant::now();\n+//         let pblock_idx = self.get_pblock_idx(&inode_ref, iblk_idx as u32)?;\n+//         let alloc_time = pblock_start.elapsed();\n+//         total_alloc_time += alloc_time;\n+//         total_blocks += 1;\n+\n+//         let write_start = Instant::now();\n+//         let block_offset = pblock_idx as usize * BLOCK_SIZE;\n+//         let mut block = Block::load(self.block_device.clone(), block_offset);\n+//         let write_size = min(BLOCK_SIZE, write_buf_len - written);\n+//         block.write_offset(0, &write_buf[written..written + write_size], write_size);\n+//         let write_time = write_start.elapsed();\n+//         total_write_time += write_time;\n+\n+//         let sync_start = Instant::now();\n+//         block.sync_blk_to_disk(self.block_device.clone());\n+//         let sync_time = sync_start.elapsed();\n+//         total_sync_time += sync_time;\n+//         drop(block);\n+\n+//         written += write_size;\n+//         iblk_idx += 1;\n+\n+//         if aligned_blocks % 1000 == 0 {\n+//             log::info!(\"[Progress] Written {} blocks, {} bytes\", aligned_blocks, written);\n+//         }\n+//     }\n+\n+//     let aligned_time = aligned_start.elapsed();\n+//     log::info!(\"[Time] Total aligned write: {:.3}ms\", aligned_time.as_secs_f64() * 1000.0);\n+\n+//     // Update file size if necessary\n+//     let update_start = Instant::now();\n+//     if offset + written > file_size as usize {\n+//         inode_ref.inode.set_size((offset + write_buf_len) as u64);\n+//         self.write_back_inode(&mut inode_ref);\n+//     }\n+//     let update_time = update_start.elapsed();\n+//     log::info!(\"[Time] Inode update: {:.3}ms\", update_time.as_secs_f64() * 1000.0);\n+\n+//     let total_time = total_start.elapsed();\n+//     log::info!(\"=== Write Performance Summary ===\");\n+//     log::info!(\"[Blocks] Total blocks: {}, New blocks: {}, Aligned blocks: {}\",\n+//         total_blocks, new_blocks, aligned_blocks);\n+//     log::info!(\"[Time] Average block allocation: {:.3}ms\",\n+//         (total_alloc_time.as_secs_f64() * 1000.0) / total_blocks as f64);\n+//     log::info!(\"[Time] Average block write: {:.3}ms\",\n+//         (total_write_time.as_secs_f64() * 1000.0) / total_blocks as f64);\n+//     log::info!(\"[Time] Average block sync: {:.3}ms\",\n+//         (total_sync_time.as_secs_f64() * 1000.0) / total_blocks as f64);\n+//     log::info!(\"[Time] Total write time: {:.3}ms\", total_time.as_secs_f64() * 1000.0);\n+//     log::info!(\"[Speed] Write speed: {:.2} MB/s\",\n+//         (write_buf_len as f64 / 1024.0 / 1024.0) / total_time.as_secs_f64());\n+//     log::info!(\"[Efficiency] Write efficiency: {:.2}%\",\n+//         (written as f64 / (total_blocks * BLOCK_SIZE) as f64) * 100.0);\n+//     log::info!(\"=== End of Write Analysis ===\");\n+\n+//     Ok(written)\n+// }\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 757 to 757)\n+\n"
            ]
          }
        },
        {
          "file": "src/ext4_impls/balloc.rs",
          "features": "",
          "count": 125,
          "kinds": {
            "Clippy(Warn)": [
              "warning: returning the result of a `let` binding from a block\n   --> src/ext4_impls/balloc.rs:726:9\n    |\n721 |         let meta_blocks = if has_super { 1 + gdt_blocks } else { 0 };\n    |         ------------------------------------------------------------- unnecessary `let` binding\n...\n726 |         meta_blocks\n    |         ^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n721 ~         \n722 |         // log::info!(\n  ...\n725 |         // );\n726 ~         if has_super { 1 + gdt_blocks } else { 0 }\n    |\n\n"
            ],
            "Unformatted": [
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 61 to 62)\n-            for i in 0..self.len-1 {\n-                self.caches[i] = self.caches[i+1];\n+            for i in 0..self.len - 1 {\n+                self.caches[i] = self.caches[i + 1];\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 64 to 64)\n-            self.caches[self.len-1] = (bgid, cache);\n+            self.caches[self.len - 1] = (bgid, cache);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 138 to 138)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 182 to 182)\n-                    return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+                    return_errno_with_message!(\n+                        Errno::ENOSPC,\n+                        \"No free blocks available in all block groups\"\n+                    );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 229 to 229)\n-                    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 261 to 261)\n-        return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+        return_errno_with_message!(\n+            Errno::ENOSPC,\n+            \"No free blocks available in all block groups\"\n+        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 302 to 302)\n-                    return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+                    return_errno_with_message!(\n+                        Errno::ENOSPC,\n+                        \"No free blocks available in all block groups\"\n+                    );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 354 to 354)\n-                    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 369 to 369)\n-            if ext4_bmap_bit_find_clr(&bitmap_block.data, idx_in_bg, max_blocks_in_bitmap as u32, &mut rel_blk_idx) {\n+            if ext4_bmap_bit_find_clr(\n+                &bitmap_block.data,\n+                idx_in_bg,\n+                max_blocks_in_bitmap as u32,\n+                &mut rel_blk_idx,\n+            ) {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 391 to 391)\n-        return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+        return_errno_with_message!(\n+            Errno::ENOSPC,\n+            \"No free blocks available in all block groups\"\n+        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 442 to 443)\n-            let mut bg =\n-                Ext4BlockGroup::load_new(&self.block_device, &super_block, bgid as usize);\n+            let mut bg = Ext4BlockGroup::load_new(&self.block_device, &super_block, bgid as usize);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 477 to 477)\n-            inode_blocks -= (free_cnt  * (BLOCK_SIZE / EXT4_INODE_BLOCK_SIZE)) as u64;\n+            inode_blocks -= (free_cnt * (BLOCK_SIZE / EXT4_INODE_BLOCK_SIZE)) as u64;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 491 to 491)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 493 to 493)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 509 to 509)\n-    /// \n+    ///\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 514 to 514)\n-    /// \n+    ///\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 526 to 528)\n-        \n-        log::debug!(\"[Block Alloc] Requesting {} blocks starting from bgid {}\", count, *start_bgid);\n-        \n+\n+        log::debug!(\n+            \"[Block Alloc] Requesting {} blocks starting from bgid {}\",\n+            count,\n+            *start_bgid\n+        );\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 531 to 531)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 537 to 537)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 539 to 539)\n-            log::warn!(\"[Block Alloc] Invalid start_bgid {}, resetting to 0\", *start_bgid);\n+            log::warn!(\n+                \"[Block Alloc] Invalid start_bgid {}, resetting to 0\",\n+                *start_bgid\n+            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 542 to 542)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 546 to 546)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 549 to 549)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 552 to 552)\n-            let mut block_group = \n+            let mut block_group =\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 554 to 554)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 563 to 563)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 566 to 568)\n-            let mut bitmap_data = \n-                self.block_device.read_offset(bmp_blk_adr as usize * BLOCK_SIZE);\n-            \n+            let mut bitmap_data = self\n+                .block_device\n+                .read_offset(bmp_blk_adr as usize * BLOCK_SIZE);\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 574 to 574)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 580 to 580)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 587 to 587)\n-                \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 592 to 592)\n-                        log::error!(\"[Block Alloc] System reserved block found at {:x?}\", block_num);\n+                        log::error!(\n+                            \"[Block Alloc] System reserved block found at {:x?}\",\n+                            block_num\n+                        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 596 to 596)\n-                    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 599 to 599)\n-                    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 602 to 602)\n-                    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 606 to 606)\n-                    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 611 to 612)\n-                            log::debug!(\"[Block Alloc] Non-contiguous blocks: prev={}, current={}, diff={}\",\n-                                prev_block, block_num, block_num - prev_block);\n+                            log::debug!(\n+                                \"[Block Alloc] Non-contiguous blocks: prev={}, current={}, diff={}\",\n+                                prev_block,\n+                                block_num,\n+                                block_num - prev_block\n+                            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 616 to 616)\n-                \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 619 to 619)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 623 to 623)\n-                \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 627 to 627)\n-                    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 632 to 632)\n-                    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 637 to 637)\n-                        log::error!(\"[Block Alloc] System reserved block found at {:x?} bgid {}\", block_num, bgid);\n+                        log::error!(\n+                            \"[Block Alloc] System reserved block found at {:x?} bgid {}\",\n+                            block_num,\n+                            bgid\n+                        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 641 to 641)\n-                    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 643 to 643)\n-                    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 646 to 646)\n-                    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 650 to 650)\n-                    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 655 to 656)\n-                            log::debug!(\"[Block Alloc] Non-contiguous blocks: prev={}, current={}, diff={}\",\n-                                prev_block, block_num, block_num - prev_block);\n+                            log::debug!(\n+                                \"[Block Alloc] Non-contiguous blocks: prev={}, current={}, diff={}\",\n+                                prev_block,\n+                                block_num,\n+                                block_num - prev_block\n+                            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 661 to 661)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 666 to 667)\n-                self.block_device.write_offset(bmp_blk_adr as usize * BLOCK_SIZE, &bitmap_data);\n-                \n+                self.block_device\n+                    .write_offset(bmp_blk_adr as usize * BLOCK_SIZE, &bitmap_data);\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 672 to 672)\n-                \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 678 to 678)\n-                \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 684 to 684)\n-                \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 687 to 688)\n-                \n-                log::debug!(\"[Block Alloc] Allocated {} blocks from bg {}\", found_blocks, bgid);\n+\n+                log::debug!(\n+                    \"[Block Alloc] Allocated {} blocks from bg {}\",\n+                    found_blocks,\n+                    bgid\n+                );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 690 to 690)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 695 to 695)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 698 to 699)\n-        log::debug!(\"[Block Alloc] Allocated {}/{} blocks\", allocated_count, count);\n-        \n+        log::debug!(\n+            \"[Block Alloc] Allocated {}/{} blocks\",\n+            allocated_count,\n+            count\n+        );\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 702 to 703)\n-            log::warn!(\"[Block Alloc] Could only allocate {} out of {} blocks. Remaining: {}\", \n-                allocated_count, count, remaining);\n+            log::warn!(\n+                \"[Block Alloc] Could only allocate {} out of {} blocks. Remaining: {}\",\n+                allocated_count,\n+                count,\n+                remaining\n+            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 705 to 705)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 708 to 708)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 713 to 713)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 736 to 737)\n-            if n < base { return false; }\n-            while n % base == 0 { n /= base; }\n+            if n < base {\n+                return false;\n+            }\n+            while n % base == 0 {\n+                n /= base;\n+            }\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 757 to 757)\n-        let desc_blocks = ((group_count as u64 * desc_size as u64 + block_size as u64 - 1) / block_size as u64) as u32;\n+        let desc_blocks = ((group_count as u64 * desc_size as u64 + block_size as u64 - 1)\n+            / block_size as u64) as u32;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 61 to 62)\n-            for i in 0..self.len-1 {\n-                self.caches[i] = self.caches[i+1];\n+            for i in 0..self.len - 1 {\n+                self.caches[i] = self.caches[i + 1];\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 64 to 64)\n-            self.caches[self.len-1] = (bgid, cache);\n+            self.caches[self.len - 1] = (bgid, cache);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 138 to 138)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 182 to 182)\n-                    return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+                    return_errno_with_message!(\n+                        Errno::ENOSPC,\n+                        \"No free blocks available in all block groups\"\n+                    );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 229 to 229)\n-                    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 261 to 261)\n-        return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+        return_errno_with_message!(\n+            Errno::ENOSPC,\n+            \"No free blocks available in all block groups\"\n+        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 302 to 302)\n-                    return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+                    return_errno_with_message!(\n+                        Errno::ENOSPC,\n+                        \"No free blocks available in all block groups\"\n+                    );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 354 to 354)\n-                    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 369 to 369)\n-            if ext4_bmap_bit_find_clr(&bitmap_block.data, idx_in_bg, max_blocks_in_bitmap as u32, &mut rel_blk_idx) {\n+            if ext4_bmap_bit_find_clr(\n+                &bitmap_block.data,\n+                idx_in_bg,\n+                max_blocks_in_bitmap as u32,\n+                &mut rel_blk_idx,\n+            ) {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 391 to 391)\n-        return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+        return_errno_with_message!(\n+            Errno::ENOSPC,\n+            \"No free blocks available in all block groups\"\n+        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 442 to 443)\n-            let mut bg =\n-                Ext4BlockGroup::load_new(&self.block_device, &super_block, bgid as usize);\n+            let mut bg = Ext4BlockGroup::load_new(&self.block_device, &super_block, bgid as usize);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 477 to 477)\n-            inode_blocks -= (free_cnt  * (BLOCK_SIZE / EXT4_INODE_BLOCK_SIZE)) as u64;\n+            inode_blocks -= (free_cnt * (BLOCK_SIZE / EXT4_INODE_BLOCK_SIZE)) as u64;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 491 to 491)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 493 to 493)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 509 to 509)\n-    /// \n+    ///\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 514 to 514)\n-    /// \n+    ///\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 526 to 528)\n-        \n-        log::debug!(\"[Block Alloc] Requesting {} blocks starting from bgid {}\", count, *start_bgid);\n-        \n+\n+        log::debug!(\n+            \"[Block Alloc] Requesting {} blocks starting from bgid {}\",\n+            count,\n+            *start_bgid\n+        );\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 531 to 531)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 537 to 537)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 539 to 539)\n-            log::warn!(\"[Block Alloc] Invalid start_bgid {}, resetting to 0\", *start_bgid);\n+            log::warn!(\n+                \"[Block Alloc] Invalid start_bgid {}, resetting to 0\",\n+                *start_bgid\n+            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 542 to 542)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 546 to 546)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 549 to 549)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 552 to 552)\n-            let mut block_group = \n+            let mut block_group =\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 554 to 554)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 563 to 563)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 566 to 568)\n-            let mut bitmap_data = \n-                self.block_device.read_offset(bmp_blk_adr as usize * BLOCK_SIZE);\n-            \n+            let mut bitmap_data = self\n+                .block_device\n+                .read_offset(bmp_blk_adr as usize * BLOCK_SIZE);\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 574 to 574)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 580 to 580)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 587 to 587)\n-                \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 592 to 592)\n-                        log::error!(\"[Block Alloc] System reserved block found at {:x?}\", block_num);\n+                        log::error!(\n+                            \"[Block Alloc] System reserved block found at {:x?}\",\n+                            block_num\n+                        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 596 to 596)\n-                    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 599 to 599)\n-                    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 602 to 602)\n-                    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 606 to 606)\n-                    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 611 to 612)\n-                            log::debug!(\"[Block Alloc] Non-contiguous blocks: prev={}, current={}, diff={}\",\n-                                prev_block, block_num, block_num - prev_block);\n+                            log::debug!(\n+                                \"[Block Alloc] Non-contiguous blocks: prev={}, current={}, diff={}\",\n+                                prev_block,\n+                                block_num,\n+                                block_num - prev_block\n+                            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 616 to 616)\n-                \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 619 to 619)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 623 to 623)\n-                \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 627 to 627)\n-                    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 632 to 632)\n-                    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 637 to 637)\n-                        log::error!(\"[Block Alloc] System reserved block found at {:x?} bgid {}\", block_num, bgid);\n+                        log::error!(\n+                            \"[Block Alloc] System reserved block found at {:x?} bgid {}\",\n+                            block_num,\n+                            bgid\n+                        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 641 to 641)\n-                    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 643 to 643)\n-                    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 646 to 646)\n-                    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 650 to 650)\n-                    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 655 to 656)\n-                            log::debug!(\"[Block Alloc] Non-contiguous blocks: prev={}, current={}, diff={}\",\n-                                prev_block, block_num, block_num - prev_block);\n+                            log::debug!(\n+                                \"[Block Alloc] Non-contiguous blocks: prev={}, current={}, diff={}\",\n+                                prev_block,\n+                                block_num,\n+                                block_num - prev_block\n+                            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 661 to 661)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 666 to 667)\n-                self.block_device.write_offset(bmp_blk_adr as usize * BLOCK_SIZE, &bitmap_data);\n-                \n+                self.block_device\n+                    .write_offset(bmp_blk_adr as usize * BLOCK_SIZE, &bitmap_data);\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 672 to 672)\n-                \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 678 to 678)\n-                \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 684 to 684)\n-                \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 687 to 688)\n-                \n-                log::debug!(\"[Block Alloc] Allocated {} blocks from bg {}\", found_blocks, bgid);\n+\n+                log::debug!(\n+                    \"[Block Alloc] Allocated {} blocks from bg {}\",\n+                    found_blocks,\n+                    bgid\n+                );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 690 to 690)\n-            \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 695 to 695)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 698 to 699)\n-        log::debug!(\"[Block Alloc] Allocated {}/{} blocks\", allocated_count, count);\n-        \n+        log::debug!(\n+            \"[Block Alloc] Allocated {}/{} blocks\",\n+            allocated_count,\n+            count\n+        );\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 702 to 703)\n-            log::warn!(\"[Block Alloc] Could only allocate {} out of {} blocks. Remaining: {}\", \n-                allocated_count, count, remaining);\n+            log::warn!(\n+                \"[Block Alloc] Could only allocate {} out of {} blocks. Remaining: {}\",\n+                allocated_count,\n+                count,\n+                remaining\n+            );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 705 to 705)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 708 to 708)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 713 to 713)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 736 to 737)\n-            if n < base { return false; }\n-            while n % base == 0 { n /= base; }\n+            if n < base {\n+                return false;\n+            }\n+            while n % base == 0 {\n+                n /= base;\n+            }\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 757 to 757)\n-        let desc_blocks = ((group_count as u64 * desc_size as u64 + block_size as u64 - 1) / block_size as u64) as u32;\n+        let desc_blocks = ((group_count as u64 * desc_size as u64 + block_size as u64 - 1)\n+            / block_size as u64) as u32;\n"
            ]
          }
        },
        {
          "file": "src/simple_interface/mod.rs",
          "features": "",
          "count": 33,
          "kinds": {
            "Clippy(Warn)": [
              "warning: returning the result of a `let` binding from a block\n   --> src/simple_interface/mod.rs:124:9\n    |\n123 |         let mut entries = self.dir_get_entries(inode);\n    |         ---------------------------------------------- unnecessary `let` binding\n124 |         entries\n    |         ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n123 ~         \n124 ~         self.dir_get_entries(inode)\n    |\n\n"
            ],
            "Unformatted": [
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 11 to 12)\n-pub use crate::ext4_defs::Ext4;\n-pub use crate::ext4_defs::BLOCK_SIZE;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 14 to 14)\n+pub use crate::ext4_defs::Ext4;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 15 to 15)\n+pub use crate::ext4_defs::BLOCK_SIZE;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 16 to 16)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 19 to 19)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 52 to 56)\n-    pub fn ext4_file_open(\n-        &self,\n-        path: &str,\n-        flags: &str,\n-    ) -> Result<u32> {\n+    pub fn ext4_file_open(&self, path: &str, flags: &str) -> Result<u32> {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 73 to 73)\n-    /// \n+    ///\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 76 to 76)\n-    /// \n+    ///\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 79 to 79)\n-    /// \n+    ///\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 81 to 81)\n-    /// * `Result<u32>` - The inode number of the newly created directory if successful, \n+    /// * `Result<u32>` - The inode number of the newly created directory if successful,\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 95 to 95)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 105 to 108)\n-    pub fn ext4_dir_open(\n-        &self,\n-        path: &str,\n-    ) -> Result<u32> {\n+    pub fn ext4_dir_open(&self, path: &str) -> Result<u32> {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 138 to 143)\n-    pub fn ext4_file_read(\n-        &self,\n-        ino: u64,\n-        size: u32,\n-        offset: i64,\n-    ) -> Result<Vec<u8>> {\n+    pub fn ext4_file_read(&self, ino: u64, size: u32, offset: i64) -> Result<Vec<u8>> {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 161 to 166)\n-    pub fn ext4_file_write(\n-        &self,\n-        ino: u64,\n-        offset: i64,\n-        data: &[u8],\n-    ) -> Result<usize> {\n+    pub fn ext4_file_write(&self, ino: u64, offset: i64, data: &[u8]) -> Result<usize> {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 170 to 170)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 172 to 172)\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 11 to 12)\n-pub use crate::ext4_defs::Ext4;\n-pub use crate::ext4_defs::BLOCK_SIZE;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 14 to 14)\n+pub use crate::ext4_defs::Ext4;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 15 to 15)\n+pub use crate::ext4_defs::BLOCK_SIZE;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 16 to 16)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 19 to 19)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 52 to 56)\n-    pub fn ext4_file_open(\n-        &self,\n-        path: &str,\n-        flags: &str,\n-    ) -> Result<u32> {\n+    pub fn ext4_file_open(&self, path: &str, flags: &str) -> Result<u32> {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 73 to 73)\n-    /// \n+    ///\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 76 to 76)\n-    /// \n+    ///\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 79 to 79)\n-    /// \n+    ///\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 81 to 81)\n-    /// * `Result<u32>` - The inode number of the newly created directory if successful, \n+    /// * `Result<u32>` - The inode number of the newly created directory if successful,\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 95 to 95)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 105 to 108)\n-    pub fn ext4_dir_open(\n-        &self,\n-        path: &str,\n-    ) -> Result<u32> {\n+    pub fn ext4_dir_open(&self, path: &str) -> Result<u32> {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 138 to 143)\n-    pub fn ext4_file_read(\n-        &self,\n-        ino: u64,\n-        size: u32,\n-        offset: i64,\n-    ) -> Result<Vec<u8>> {\n+    pub fn ext4_file_read(&self, ino: u64, size: u32, offset: i64) -> Result<Vec<u8>> {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 161 to 166)\n-    pub fn ext4_file_write(\n-        &self,\n-        ino: u64,\n-        offset: i64,\n-        data: &[u8],\n-    ) -> Result<usize> {\n+    pub fn ext4_file_write(&self, ino: u64, offset: i64, data: &[u8]) -> Result<usize> {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 170 to 170)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 172 to 172)\n+\n"
            ]
          }
        },
        {
          "file": "src/fuse_interface/mod.rs",
          "features": "",
          "count": 32,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 9 to 10)\n-pub use crate::ext4_defs::Ext4;\n-pub use crate::ext4_defs::BLOCK_SIZE;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 12 to 12)\n+pub use crate::ext4_defs::Ext4;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 13 to 13)\n+pub use crate::ext4_defs::BLOCK_SIZE;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 120 to 120)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 139 to 139)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 148 to 148)\n-        uid: u32, \n+        uid: u32,\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 156 to 156)\n-        let inode_ref = self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n+        let inode_ref =\n+            self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 177 to 178)\n-    pub fn fuse_mkdir_with_attr(&mut self, parent: u64, name: &str, mode: u32, umask: u32, uid:u32, gid:u32) -> Result<Ext4InodeRef> {\n-\n+    pub fn fuse_mkdir_with_attr(\n+        &mut self,\n+        parent: u64,\n+        name: &str,\n+        mode: u32,\n+        umask: u32,\n+        uid: u32,\n+        gid: u32,\n+    ) -> Result<Ext4InodeRef> {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 219 to 223)\n-        let r = self.unlink(\n-            &mut parent_inode_ref,\n-            &mut child_inode_ref,\n-            &p[..len],\n-        )?;\n+        let r = self.unlink(&mut parent_inode_ref, &mut child_inode_ref, &p[..len])?;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 335 to 335)\n-        ) -> Result<Vec<u8>> {\n+    ) -> Result<Vec<u8>> {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 441 to 441)\n-            if (flags & O_RDONLY != 0) || (flags & O_RDWR != 0) && !can_read{\n+            if (flags & O_RDONLY != 0) || (flags & O_RDWR != 0) && !can_read {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 465 to 465)\n-    /// \n+    ///\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 9 to 10)\n-pub use crate::ext4_defs::Ext4;\n-pub use crate::ext4_defs::BLOCK_SIZE;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 12 to 12)\n+pub use crate::ext4_defs::Ext4;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 13 to 13)\n+pub use crate::ext4_defs::BLOCK_SIZE;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 120 to 120)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 139 to 139)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 148 to 148)\n-        uid: u32, \n+        uid: u32,\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 156 to 156)\n-        let inode_ref = self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n+        let inode_ref =\n+            self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 177 to 178)\n-    pub fn fuse_mkdir_with_attr(&mut self, parent: u64, name: &str, mode: u32, umask: u32, uid:u32, gid:u32) -> Result<Ext4InodeRef> {\n-\n+    pub fn fuse_mkdir_with_attr(\n+        &mut self,\n+        parent: u64,\n+        name: &str,\n+        mode: u32,\n+        umask: u32,\n+        uid: u32,\n+        gid: u32,\n+    ) -> Result<Ext4InodeRef> {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 219 to 223)\n-        let r = self.unlink(\n-            &mut parent_inode_ref,\n-            &mut child_inode_ref,\n-            &p[..len],\n-        )?;\n+        let r = self.unlink(&mut parent_inode_ref, &mut child_inode_ref, &p[..len])?;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 335 to 335)\n-        ) -> Result<Vec<u8>> {\n+    ) -> Result<Vec<u8>> {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 441 to 441)\n-            if (flags & O_RDONLY != 0) || (flags & O_RDWR != 0) && !can_read{\n+            if (flags & O_RDONLY != 0) || (flags & O_RDWR != 0) && !can_read {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 465 to 465)\n-    /// \n+    ///\n"
            ],
            "Clippy(Warn)": [
              "warning: this function has too many arguments (14/7)\n  --> src/fuse_interface/mod.rs:38:5\n   |\n38 | /     pub fn fuse_setattr(\n39 | |         &self,\n40 | |         ino: u64,\n41 | |         mode: Option<u32>,\n...  |\n52 | |         flags: Option<u32>,\n53 | |     ) {\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n   = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n",
              "warning: this function has too many arguments (8/7)\n   --> src/fuse_interface/mod.rs:141:5\n    |\n141 | /     pub fn fuse_mknod_with_attr(\n142 | |         &self,\n143 | |         parent: u64,\n144 | |         name: &str,\n...   |\n149 | |         gid: u32,\n150 | |     ) -> Result<Ext4InodeRef> {\n    | |_____________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n",
              "warning: this function has too many arguments (8/7)\n   --> src/fuse_interface/mod.rs:354:5\n    |\n354 | /     pub fn fuse_write(\n355 | |         &self,\n356 | |         ino: u64,\n357 | |         fh: u64,\n...   |\n362 | |         lock_owner: Option<u64>,\n363 | |     ) -> Result<usize> {\n    | |______________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n",
              "warning: this function has too many arguments (8/7)\n   --> src/fuse_interface/mod.rs:593:5\n    |\n593 | /     fn fuse_getlk(\n594 | |         &mut self,\n595 | |         ino: u64,\n596 | |         fh: u64,\n...   |\n601 | |         pid: u32,\n602 | |     ) {\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n",
              "warning: this function has too many arguments (9/7)\n   --> src/fuse_interface/mod.rs:613:5\n    |\n613 | /     fn fuse_setlk(\n614 | |         &mut self,\n615 | |         ino: u64,\n616 | |         fh: u64,\n...   |\n622 | |         sleep: bool,\n623 | |     ) {\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n",
              "warning: this function has too many arguments (9/7)\n   --> src/fuse_interface/mod.rs:670:5\n    |\n670 | /     fn fuse_copy_file_range(\n671 | |         &mut self,\n672 | |         ino_in: u64,\n673 | |         fh_in: u64,\n...   |\n679 | |         flags: u32,\n680 | |     ) {\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n"
            ],
            "Clippy(Error)": [
              "error: &-masking with zero\n   --> src/fuse_interface/mod.rs:305:13\n    |\n305 |         if ((flags & O_RDONLY != 0) || (flags & O_RDWR != 0)) && !can_read {\n    |             ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n    = note: `#[deny(clippy::bad_bit_mask)]` on by default\n\n",
              "error: &-masking with zero\n   --> src/fuse_interface/mod.rs:441:16\n    |\n441 |             if (flags & O_RDONLY != 0) || (flags & O_RDWR != 0) && !can_read{\n    |                ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n\n"
            ]
          }
        },
        {
          "file": "src/ext4_defs/extents.rs",
          "features": "",
          "count": 24,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 270 to 270)\n-            let mut header = *Ext4ExtentHeader::load_from_u8_mut(&mut data[..size_of::<Ext4ExtentHeader>()]);\n+            let mut header =\n+                *Ext4ExtentHeader::load_from_u8_mut(&mut data[..size_of::<Ext4ExtentHeader>()]);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 314 to 314)\n-    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 320 to 320)\n-    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 329 to 329)\n-                        l = m + 1;  // Otherwise, move to the right half\n+                        l = m + 1; // Otherwise, move to the right half\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 497 to 497)\n-    pub fn set_actual_len(&mut self, len: u16){\n+    pub fn set_actual_len(&mut self, len: u16) {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 591 to 591)\n-        assert!(result.is_err(), \"Expected error for invalid root node data length\");\n+        assert!(\n+            result.is_err(),\n+            \"Expected error for invalid root node data length\"\n+        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 596 to 596)\n-        assert!(result.is_err(), \"Expected error for invalid internal node data length\");\n+        assert!(\n+            result.is_err(),\n+            \"Expected error for invalid internal node data length\"\n+        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 740 to 740)\n-        let index = node.get_index(0).expect(\"Failed to get index at position 0\");\n+        let index = node\n+            .get_index(0)\n+            .expect(\"Failed to get index at position 0\");\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 746 to 746)\n-        let index = node.get_index(1).expect(\"Failed to get index at position 1\");\n+        let index = node\n+            .get_index(1)\n+            .expect(\"Failed to get index at position 1\");\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 787 to 787)\n-        let extent = node.get_extent(0).expect(\"Failed to get extent at position 0\");\n+        let extent = node\n+            .get_extent(0)\n+            .expect(\"Failed to get extent at position 0\");\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 792 to 792)\n-        let extent = node.get_extent(1).expect(\"Failed to get extent at position 1\");\n+        let extent = node\n+            .get_extent(1)\n+            .expect(\"Failed to get extent at position 1\");\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 270 to 270)\n-            let mut header = *Ext4ExtentHeader::load_from_u8_mut(&mut data[..size_of::<Ext4ExtentHeader>()]);\n+            let mut header =\n+                *Ext4ExtentHeader::load_from_u8_mut(&mut data[..size_of::<Ext4ExtentHeader>()]);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 314 to 314)\n-    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 320 to 320)\n-    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 329 to 329)\n-                        l = m + 1;  // Otherwise, move to the right half\n+                        l = m + 1; // Otherwise, move to the right half\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 497 to 497)\n-    pub fn set_actual_len(&mut self, len: u16){\n+    pub fn set_actual_len(&mut self, len: u16) {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 591 to 591)\n-        assert!(result.is_err(), \"Expected error for invalid root node data length\");\n+        assert!(\n+            result.is_err(),\n+            \"Expected error for invalid root node data length\"\n+        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 596 to 596)\n-        assert!(result.is_err(), \"Expected error for invalid internal node data length\");\n+        assert!(\n+            result.is_err(),\n+            \"Expected error for invalid internal node data length\"\n+        );\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 740 to 740)\n-        let index = node.get_index(0).expect(\"Failed to get index at position 0\");\n+        let index = node\n+            .get_index(0)\n+            .expect(\"Failed to get index at position 0\");\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 746 to 746)\n-        let index = node.get_index(1).expect(\"Failed to get index at position 1\");\n+        let index = node\n+            .get_index(1)\n+            .expect(\"Failed to get index at position 1\");\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 787 to 787)\n-        let extent = node.get_extent(0).expect(\"Failed to get extent at position 0\");\n+        let extent = node\n+            .get_extent(0)\n+            .expect(\"Failed to get extent at position 0\");\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 792 to 792)\n-        let extent = node.get_extent(1).expect(\"Failed to get extent at position 1\");\n+        let extent = node\n+            .get_extent(1)\n+            .expect(\"Failed to get extent at position 1\");\n"
            ],
            "Clippy(Warn)": [
              "warning: field assignment outside of initializer for an instance created with Default::default()\n   --> src/ext4_defs/extents.rs:172:9\n    |\n172 |         idx.first_block = u32::from_le_bytes(bytes[0..4].try_into().unwrap());\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nnote: consider initializing the variable with `ext4_defs::extents::Ext4ExtentIndex { first_block: u32::from_le_bytes(bytes[0..4].try_into().unwrap()), leaf_lo: u32::from_le_bytes(bytes[4..8].try_into().unwrap()), leaf_hi: u16::from_le_bytes(bytes[8..10].try_into().unwrap()), padding: u16::from_le_bytes(bytes[10..12].try_into().unwrap()) }` and removing relevant reassignments\n   --> src/ext4_defs/extents.rs:171:9\n    |\n171 |         let mut idx = Ext4ExtentIndex::default();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default\n    = note: `#[warn(clippy::field_reassign_with_default)]` on by default\n\n",
              "warning: field assignment outside of initializer for an instance created with Default::default()\n   --> src/ext4_defs/extents.rs:206:9\n    |\n206 |         ext.first_block = u32::from_le_bytes(bytes[0..4].try_into().unwrap());\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nnote: consider initializing the variable with `ext4_defs::extents::Ext4Extent { first_block: u32::from_le_bytes(bytes[0..4].try_into().unwrap()), block_count: u16::from_le_bytes(bytes[4..6].try_into().unwrap()), start_hi: u16::from_le_bytes(bytes[6..8].try_into().unwrap()), start_lo: u32::from_le_bytes(bytes[8..12].try_into().unwrap()) }` and removing relevant reassignments\n   --> src/ext4_defs/extents.rs:205:9\n    |\n205 |         let mut ext = Ext4Extent::default();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default\n\n"
            ]
          }
        },
        {
          "file": "src/ext4_defs/direntry.rs",
          "features": "",
          "count": 20,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 58 to 61)\n-pub struct Ext4DirSearchResult{\n-    pub dentry: Ext4DirEntry, \n-    pub pblock_id: usize, // disk block id\n-    pub offset: usize, // offset in block\n+pub struct Ext4DirSearchResult {\n+    pub dentry: Ext4DirEntry,\n+    pub pblock_id: usize,   // disk block id\n+    pub offset: usize,      // offset in block\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 118 to 118)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 131 to 132)\n-        if self.name_len as usize == name.len(){\n-            return &self.name[..name.len()] == name.as_bytes()\n+        if self.name_len as usize == name.len() {\n+            return &self.name[..name.len()] == name.as_bytes();\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 164 to 164)\n-    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 172 to 172)\n-    pub fn write_entry(&mut self, entry_len: u16, inode: u32, name: &str, de_type:DirEntryType) {\n+    pub fn write_entry(&mut self, entry_len: u16, inode: u32, name: &str, de_type: DirEntryType) {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 179 to 179)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 183 to 183)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 227 to 227)\n-impl Ext4DirEntryTail{\n+impl Ext4DirEntryTail {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 250 to 253)\n-        let offset = BLOCK_SIZE - core::mem::size_of::<Ext4DirEntryTail>();\n-        let de_ptr = self as *const Ext4DirEntryTail as *const u8;\n-        let array_ptr = array as *mut [u8] as *mut u8;\n-        let count = core::mem::size_of::<Ext4DirEntryTail>();\n+            let offset = BLOCK_SIZE - core::mem::size_of::<Ext4DirEntryTail>();\n+            let de_ptr = self as *const Ext4DirEntryTail as *const u8;\n+            let array_ptr = array as *mut [u8] as *mut u8;\n+            let count = core::mem::size_of::<Ext4DirEntryTail>();\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 258 to 258)\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 58 to 61)\n-pub struct Ext4DirSearchResult{\n-    pub dentry: Ext4DirEntry, \n-    pub pblock_id: usize, // disk block id\n-    pub offset: usize, // offset in block\n+pub struct Ext4DirSearchResult {\n+    pub dentry: Ext4DirEntry,\n+    pub pblock_id: usize,   // disk block id\n+    pub offset: usize,      // offset in block\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 118 to 118)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 131 to 132)\n-        if self.name_len as usize == name.len(){\n-            return &self.name[..name.len()] == name.as_bytes()\n+        if self.name_len as usize == name.len() {\n+            return &self.name[..name.len()] == name.as_bytes();\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 164 to 164)\n-    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 172 to 172)\n-    pub fn write_entry(&mut self, entry_len: u16, inode: u32, name: &str, de_type:DirEntryType) {\n+    pub fn write_entry(&mut self, entry_len: u16, inode: u32, name: &str, de_type: DirEntryType) {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 179 to 179)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 183 to 183)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 227 to 227)\n-impl Ext4DirEntryTail{\n+impl Ext4DirEntryTail {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 250 to 253)\n-        let offset = BLOCK_SIZE - core::mem::size_of::<Ext4DirEntryTail>();\n-        let de_ptr = self as *const Ext4DirEntryTail as *const u8;\n-        let array_ptr = array as *mut [u8] as *mut u8;\n-        let count = core::mem::size_of::<Ext4DirEntryTail>();\n+            let offset = BLOCK_SIZE - core::mem::size_of::<Ext4DirEntryTail>();\n+            let de_ptr = self as *const Ext4DirEntryTail as *const u8;\n+            let array_ptr = array as *mut [u8] as *mut u8;\n+            let count = core::mem::size_of::<Ext4DirEntryTail>();\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 258 to 258)\n+\n"
            ]
          }
        },
        {
          "file": "src/ext4_defs/mod.rs",
          "features": "",
          "count": 20,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 1 to 1)\n-pub mod consts;\n+pub mod block;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 3 to 3)\n+pub mod consts;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 4 to 5)\n-pub mod block;\n-pub mod file;\n+pub mod ext4;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 7 to 7)\n+pub mod file;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 10 to 10)\n-pub mod ext4;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 12 to 14)\n-\n-\n-pub use consts::*;\n+pub use block::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 16 to 16)\n+pub use consts::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 17 to 18)\n-pub use block::*;\n-pub use file::*;\n+pub use ext4::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 20 to 20)\n+pub use file::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 23 to 23)\n-pub use ext4::*;\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 1 to 1)\n-pub mod consts;\n+pub mod block;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 3 to 3)\n+pub mod consts;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 4 to 5)\n-pub mod block;\n-pub mod file;\n+pub mod ext4;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 7 to 7)\n+pub mod file;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 10 to 10)\n-pub mod ext4;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 12 to 14)\n-\n-\n-pub use consts::*;\n+pub use block::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 16 to 16)\n+pub use consts::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 17 to 18)\n-pub use block::*;\n-pub use file::*;\n+pub use ext4::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 20 to 20)\n+pub use file::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 23 to 23)\n-pub use ext4::*;\n+\n"
            ]
          }
        },
        {
          "file": "src/utils/errors.rs",
          "features": "",
          "count": 16,
          "kinds": {
            "Clippy(Warn)": [
              "warning: sub-expression diverges\n   --> src/utils/errors.rs:92:9\n    |\n92  |         return Err(Ext4Error::with_message($errno, $message))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n   ::: src/ext4_impls/inode.rs:375:28\n    |\n375 |                     return return_errno_with_message!(Errno::EINVAL, \"Invalid extent detected\");\n    |                            -------------------------------------------------------------------- in this macro invocation\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#diverging_sub_expression\n    = note: `#[warn(clippy::diverging_sub_expression)]` on by default\n    = note: this warning originates in the macro `return_errno_with_message` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: sub-expression diverges\n   --> src/utils/errors.rs:92:9\n    |\n92  |         return Err(Ext4Error::with_message($errno, $message))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n   ::: src/ext4_impls/inode.rs:411:28\n    |\n411 |             None => return return_errno_with_message!(Errno::EINVAL, \"File size overflow\"),\n    |                            --------------------------------------------------------------- in this macro invocation\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#diverging_sub_expression\n    = note: this warning originates in the macro `return_errno_with_message` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: sub-expression diverges\n   --> src/utils/errors.rs:92:9\n    |\n92  |         return Err(Ext4Error::with_message($errno, $message))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n   ::: src/ext4_impls/inode.rs:423:20\n    |\n423 |             return return_errno_with_message!(Errno::ENOENT, \"No extents found\");\n    |                    ------------------------------------------------------------- in this macro invocation\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#diverging_sub_expression\n    = note: this warning originates in the macro `return_errno_with_message` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: sub-expression diverges\n   --> src/utils/errors.rs:92:9\n    |\n92  |         return Err(Ext4Error::with_message($errno, $message))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n   ::: src/ext4_impls/inode.rs:434:24\n    |\n434 |                 return return_errno_with_message!(Errno::ENOENT, \"Invalid extent tree\");\n    |                        ---------------------------------------------------------------- in this macro invocation\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#diverging_sub_expression\n    = note: this warning originates in the macro `return_errno_with_message` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: sub-expression diverges\n   --> src/utils/errors.rs:92:9\n    |\n92  |         return Err(Ext4Error::with_message($errno, $message))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n   ::: src/ext4_impls/inode.rs:451:20\n    |\n451 |             return return_errno_with_message!(Errno::ENOENT, \"No extent entries found\");\n    |                    -------------------------------------------------------------------- in this macro invocation\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#diverging_sub_expression\n    = note: this warning originates in the macro `return_errno_with_message` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: sub-expression diverges\n   --> src/utils/errors.rs:92:9\n    |\n92  |         return Err(Ext4Error::with_message($errno, $message))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n   ::: src/ext4_impls/file.rs:354:28\n    |\n354 |                     return return_errno_with_message!(Errno::ENOSPC, \"No blocks available for write\");\n    |                            -------------------------------------------------------------------------- in this macro invocation\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#diverging_sub_expression\n    = note: this warning originates in the macro `return_errno_with_message` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: sub-expression diverges\n   --> src/utils/errors.rs:92:9\n    |\n92  |         return Err(Ext4Error::with_message($errno, $message))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n   ::: src/ext4_impls/file.rs:376:20\n    |\n376 |             return return_errno_with_message!(Errno::ENOSPC, \"Not enough blocks available for write\");\n    |                    ---------------------------------------------------------------------------------- in this macro invocation\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#diverging_sub_expression\n    = note: this warning originates in the macro `return_errno_with_message` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: sub-expression diverges\n   --> src/utils/errors.rs:92:9\n    |\n92  |         return Err(Ext4Error::with_message($errno, $message))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n   ::: src/ext4_impls/file.rs:409:24\n    |\n409 |                 return return_errno_with_message!(Errno::EIO, \"Write verification failed\");\n    |                        ------------------------------------------------------------------- in this macro invocation\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#diverging_sub_expression\n    = note: this warning originates in the macro `return_errno_with_message` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: sub-expression diverges\n   --> src/utils/errors.rs:92:9\n    |\n92  |         return Err(Ext4Error::with_message($errno, $message))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n   ::: src/ext4_impls/file.rs:452:24\n    |\n452 |                 return return_errno_with_message!(Errno::EIO, \"Write verification failed\");\n    |                        ------------------------------------------------------------------- in this macro invocation\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#diverging_sub_expression\n    = note: this warning originates in the macro `return_errno_with_message` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: sub-expression diverges\n   --> src/utils/errors.rs:92:9\n    |\n92  |         return Err(Ext4Error::with_message($errno, $message))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n   ::: src/ext4_impls/file.rs:473:24\n    |\n473 |                 return return_errno_with_message!(Errno::EFBIG, \"File size too large\");\n    |                        --------------------------------------------------------------- in this macro invocation\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#diverging_sub_expression\n    = note: this warning originates in the macro `return_errno_with_message` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: sub-expression diverges\n   --> src/utils/errors.rs:92:9\n    |\n92  |         return Err(Ext4Error::with_message($errno, $message))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n   ::: src/ext4_impls/file.rs:484:24\n    |\n484 |                 return return_errno_with_message!(Errno::EIO, \"File size update verification failed\");\n    |                        ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#diverging_sub_expression\n    = note: this warning originates in the macro `return_errno_with_message` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: sub-expression diverges\n   --> src/utils/errors.rs:92:9\n    |\n92  |         return Err(Ext4Error::with_message($errno, $message))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n   ::: src/ext4_impls/balloc.rs:535:20\n    |\n535 |             return return_errno_with_message!(Errno::EINVAL, \"Invalid block group count\");\n    |                    ---------------------------------------------------------------------- in this macro invocation\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#diverging_sub_expression\n    = note: this warning originates in the macro `return_errno_with_message` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
            ],
            "Unformatted": [
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/errors.rs (original lines from 1 to 2)\n-\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/errors.rs (original lines from 37 to 37)\n-    ENOTSUP   = 95,   /* Not supported */\n+    ENOTSUP = 95,      /* Not supported */\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/errors.rs (original lines from 1 to 2)\n-\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/errors.rs (original lines from 37 to 37)\n-    ENOTSUP   = 95,   /* Not supported */\n+    ENOTSUP = 95,      /* Not supported */\n"
            ]
          }
        },
        {
          "file": "src/ext4_impls/dir.rs",
          "features": "",
          "count": 14,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 47 to 48)\n-                let mut ext4block =\n-                    Block::load(&self.block_device, fblock as usize * BLOCK_SIZE);\n+                let mut ext4block = Block::load(&self.block_device, fblock as usize * BLOCK_SIZE);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 135 to 136)\n-                let ext4block =\n-                    Block::load(&self.block_device, fblock as usize * BLOCK_SIZE);\n+                let ext4block = Block::load(&self.block_device, fblock as usize * BLOCK_SIZE);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 193 to 194)\n-            let mut ext4block =\n-                Block::load(&self.block_device, pblock as usize * BLOCK_SIZE);\n+            let mut ext4block = Block::load(&self.block_device, pblock as usize * BLOCK_SIZE);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 214 to 215)\n-        let mut new_ext4block =\n-            Block::load(&self.block_device, new_block as usize * BLOCK_SIZE);\n+        let mut new_ext4block = Block::load(&self.block_device, new_block as usize * BLOCK_SIZE);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 379 to 380)\n-                let ext4block =\n-                    Block::load(&self.block_device, fblock as usize * BLOCK_SIZE);\n+                let ext4block = Block::load(&self.block_device, fblock as usize * BLOCK_SIZE);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 412 to 412)\n-        if self.dir_has_entry(child_inode_ref.inode_num){\n+        if self.dir_has_entry(child_inode_ref.inode_num) {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 415 to 415)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 47 to 48)\n-                let mut ext4block =\n-                    Block::load(&self.block_device, fblock as usize * BLOCK_SIZE);\n+                let mut ext4block = Block::load(&self.block_device, fblock as usize * BLOCK_SIZE);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 135 to 136)\n-                let ext4block =\n-                    Block::load(&self.block_device, fblock as usize * BLOCK_SIZE);\n+                let ext4block = Block::load(&self.block_device, fblock as usize * BLOCK_SIZE);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 193 to 194)\n-            let mut ext4block =\n-                Block::load(&self.block_device, pblock as usize * BLOCK_SIZE);\n+            let mut ext4block = Block::load(&self.block_device, pblock as usize * BLOCK_SIZE);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 214 to 215)\n-        let mut new_ext4block =\n-            Block::load(&self.block_device, new_block as usize * BLOCK_SIZE);\n+        let mut new_ext4block = Block::load(&self.block_device, new_block as usize * BLOCK_SIZE);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 379 to 380)\n-                let ext4block =\n-                    Block::load(&self.block_device, fblock as usize * BLOCK_SIZE);\n+                let ext4block = Block::load(&self.block_device, fblock as usize * BLOCK_SIZE);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 412 to 412)\n-        if self.dir_has_entry(child_inode_ref.inode_num){\n+        if self.dir_has_entry(child_inode_ref.inode_num) {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 415 to 415)\n-        \n+\n"
            ]
          }
        },
        {
          "file": "src/main.rs",
          "features": "",
          "count": 13,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/main.rs (original lines from 105 to 105)\n-    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/main.rs (original lines from 109 to 109)\n-    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/main.rs (original lines from 112 to 112)\n-    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/main.rs (original lines from 121 to 121)\n-    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/main.rs (original lines from 124 to 124)\n-    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/main.rs (original lines from 133 to 133)\n-    let block_device = disk.clone();  // Clone before using\n+    let block_device = disk.clone(); // Clone before using\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/main.rs (original lines from 140 to 140)\n-    let mut read_buf = vec![0u8;  READ_SIZE as usize];\n+    let mut read_buf = vec![0u8; READ_SIZE as usize];\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/main.rs (original lines from 146 to 147)\n-\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/main.rs (original lines from 149 to 149)\n-    let mut read_buf = vec![0u8;  READ_SIZE as usize];\n+    let mut read_buf = vec![0u8; READ_SIZE as usize];\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/main.rs (original lines from 189 to 189)\n-    let inode_ref = ext4.create(ROOT_INODE, \"4G.txt\", inode_mode | inode_perm).unwrap();\n+    let inode_ref = ext4\n+        .create(ROOT_INODE, \"4G.txt\", inode_mode | inode_perm)\n+        .unwrap();\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/main.rs (original lines from 193 to 193)\n-    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/main.rs (original lines from 198 to 198)\n-    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/main.rs (original lines from 207 to 207)\n-    for i in 0..WRITE_SIZE/ BLOCK_SIZE {\n+    for i in 0..WRITE_SIZE / BLOCK_SIZE {\n"
            ]
          }
        },
        {
          "file": "src/ext4_impls/mod.rs",
          "features": "",
          "count": 12,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 1 to 3)\n-pub mod extents;\n-pub mod ext4;\n-pub mod inode;\n+pub mod balloc;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 5 to 5)\n+pub mod ext4;\n+pub mod extents;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 7 to 7)\n-pub mod balloc;\n+pub mod inode;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 9 to 11)\n-pub use extents::*;\n-pub use ext4::*;\n-pub use inode::*;\n+pub use balloc::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 13 to 13)\n+pub use ext4::*;\n+pub use extents::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 15 to 15)\n-pub use balloc::*;\n+pub use inode::*;\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 1 to 3)\n-pub mod extents;\n-pub mod ext4;\n-pub mod inode;\n+pub mod balloc;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 5 to 5)\n+pub mod ext4;\n+pub mod extents;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 7 to 7)\n-pub mod balloc;\n+pub mod inode;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 9 to 11)\n-pub use extents::*;\n-pub use ext4::*;\n-pub use inode::*;\n+pub use balloc::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 13 to 13)\n+pub use ext4::*;\n+pub use extents::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 15 to 15)\n-pub use balloc::*;\n+pub use inode::*;\n+\n"
            ]
          }
        },
        {
          "file": "src/utils/bitmap.rs",
          "features": "",
          "count": 10,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/bitmap.rs (original lines from 56 to 56)\n-    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/bitmap.rs (original lines from 62 to 62)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/bitmap.rs (original lines from 82 to 82)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/bitmap.rs (original lines from 87 to 87)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/bitmap.rs (original lines from 104 to 104)\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/bitmap.rs (original lines from 56 to 56)\n-    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/bitmap.rs (original lines from 62 to 62)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/bitmap.rs (original lines from 82 to 82)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/bitmap.rs (original lines from 87 to 87)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/bitmap.rs (original lines from 104 to 104)\n+\n"
            ]
          }
        },
        {
          "file": "src/utils/mod.rs",
          "features": "",
          "count": 10,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 3 to 3)\n-pub mod path;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 5 to 5)\n+pub mod path;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 6 to 7)\n-\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 10 to 10)\n-pub use path::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 12 to 12)\n+pub use path::*;\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 3 to 3)\n-pub mod path;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 5 to 5)\n+pub mod path;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 6 to 7)\n-\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 10 to 10)\n-pub use path::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 12 to 12)\n+pub use path::*;\n+\n"
            ]
          }
        },
        {
          "file": "src/lib.rs",
          "features": "",
          "count": 9,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/lib.rs (original lines from 7 to 7)\n-pub mod utils;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/lib.rs (original lines from 9 to 9)\n+pub mod utils;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/lib.rs (original lines from 10 to 10)\n-pub use utils::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/lib.rs (original lines from 12 to 12)\n+pub use utils::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/lib.rs (original lines from 13 to 13)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/lib.rs (original lines from 17 to 18)\n-\n-pub mod simple_interface;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/lib.rs (original lines from 20 to 20)\n+pub mod simple_interface;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/lib.rs (original lines from 21 to 22)\n-\n-pub use simple_interface::*;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/lib.rs (original lines from 24 to 24)\n+pub use simple_interface::*;\n"
            ]
          }
        },
        {
          "file": "src/ext4_defs/block.rs",
          "features": "",
          "count": 8,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 25 to 27)\n-        let data_bytes: &[u8; 60] = unsafe {\n-            core::mem::transmute(data)\n-        };\n+        let data_bytes: &[u8; 60] = unsafe { core::mem::transmute(data) };\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 29 to 29)\n-            disk_offset: 0, \n+            disk_offset: 0,\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 78 to 79)\n-impl Block{\n-    pub fn sync_blk_to_disk(&self, block_device: &Arc<dyn BlockDevice>){\n+impl Block {\n+    pub fn sync_blk_to_disk(&self, block_device: &Arc<dyn BlockDevice>) {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 83 to 83)\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 25 to 27)\n-        let data_bytes: &[u8; 60] = unsafe {\n-            core::mem::transmute(data)\n-        };\n+        let data_bytes: &[u8; 60] = unsafe { core::mem::transmute(data) };\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 29 to 29)\n-            disk_offset: 0, \n+            disk_offset: 0,\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 78 to 79)\n-impl Block{\n-    pub fn sync_blk_to_disk(&self, block_device: &Arc<dyn BlockDevice>){\n+impl Block {\n+    pub fn sync_blk_to_disk(&self, block_device: &Arc<dyn BlockDevice>) {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 83 to 83)\n+\n"
            ]
          }
        },
        {
          "file": "src/ext4_defs/block_group.rs",
          "features": "",
          "count": 8,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 97 to 97)\n-        self.itable_unused_lo = (cnt & 0xffff) as u16; \n+        self.itable_unused_lo = (cnt & 0xffff) as u16;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 105 to 105)\n-        self.itable_unused_lo = (cnt & 0xffff) as u16; \n+        self.itable_unused_lo = (cnt & 0xffff) as u16;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 231 to 231)\n-        self.free_blocks_count_lo = (cnt & 0xffff) as u16; \n+        self.free_blocks_count_lo = (cnt & 0xffff) as u16;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 234 to 234)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 97 to 97)\n-        self.itable_unused_lo = (cnt & 0xffff) as u16; \n+        self.itable_unused_lo = (cnt & 0xffff) as u16;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 105 to 105)\n-        self.itable_unused_lo = (cnt & 0xffff) as u16; \n+        self.itable_unused_lo = (cnt & 0xffff) as u16;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 231 to 231)\n-        self.free_blocks_count_lo = (cnt & 0xffff) as u16; \n+        self.free_blocks_count_lo = (cnt & 0xffff) as u16;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 234 to 234)\n-\n"
            ]
          }
        },
        {
          "file": "src/ext4_impls/ext4.rs",
          "features": "",
          "count": 7,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 27 to 27)\n-            let block_group = Ext4BlockGroup::load_new(&self.block_device, &self.super_block, bgid as usize);\n+            let block_group =\n+                Ext4BlockGroup::load_new(&self.block_device, &self.super_block, bgid as usize);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 44 to 44)\n-            let itb_per_group = ((inodes_per_group as u64 * inode_size + block_size - 1) / block_size) as u64;\n+            let itb_per_group =\n+                ((inodes_per_group as u64 * inode_size + block_size - 1) / block_size) as u64;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 60 to 60)\n-        \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 27 to 27)\n-            let block_group = Ext4BlockGroup::load_new(&self.block_device, &self.super_block, bgid as usize);\n+            let block_group =\n+                Ext4BlockGroup::load_new(&self.block_device, &self.super_block, bgid as usize);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 44 to 44)\n-            let itb_per_group = ((inodes_per_group as u64 * inode_size + block_size - 1) / block_size) as u64;\n+            let itb_per_group =\n+                ((inodes_per_group as u64 * inode_size + block_size - 1) / block_size) as u64;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 60 to 60)\n-        \n+\n"
            ],
            "Clippy(Warn)": [
              "warning: casting to the same type is unnecessary (`u64` -> `u64`)\n  --> src/ext4_impls/ext4.rs:44:33\n   |\n44 |             let itb_per_group = ((inodes_per_group as u64 * inode_size + block_size - 1) / block_size) as u64;\n   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `((inodes_per_group as u64 * inode_size + block_size - 1) / block_size)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
            ]
          }
        },
        {
          "file": "src/ext4_defs/consts.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/consts.rs (original lines from 3 to 3)\n-pub const BLOCK_SIZE: usize = 0x1000;                // 4KB\n+pub const BLOCK_SIZE: usize = 0x1000; // 4KB\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/consts.rs (original lines from 12 to 15)\n-pub const ROOT_INODE: u32 = 2;                      // Root directory inode\n-pub const JOURNAL_INODE: u32 = 8;                   // Journal file inode\n-pub const UNDEL_DIR_INODE: u32 = 6;                 // Undelete directory inode\n-pub const LOST_AND_FOUND_INODE: u32 = 11;           // lost+found directory inode\n+pub const ROOT_INODE: u32 = 2; // Root directory inode\n+pub const JOURNAL_INODE: u32 = 8; // Journal file inode\n+pub const UNDEL_DIR_INODE: u32 = 6; // Undelete directory inode\n+pub const LOST_AND_FOUND_INODE: u32 = 11; // lost+found directory inode\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/consts.rs (original lines from 70 to 70)\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/consts.rs (original lines from 3 to 3)\n-pub const BLOCK_SIZE: usize = 0x1000;                // 4KB\n+pub const BLOCK_SIZE: usize = 0x1000; // 4KB\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/consts.rs (original lines from 12 to 15)\n-pub const ROOT_INODE: u32 = 2;                      // Root directory inode\n-pub const JOURNAL_INODE: u32 = 8;                   // Journal file inode\n-pub const UNDEL_DIR_INODE: u32 = 6;                 // Undelete directory inode\n-pub const LOST_AND_FOUND_INODE: u32 = 11;           // lost+found directory inode\n+pub const ROOT_INODE: u32 = 2; // Root directory inode\n+pub const JOURNAL_INODE: u32 = 8; // Journal file inode\n+pub const UNDEL_DIR_INODE: u32 = 6; // Undelete directory inode\n+pub const LOST_AND_FOUND_INODE: u32 = 11; // lost+found directory inode\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/consts.rs (original lines from 70 to 70)\n+\n"
            ]
          }
        },
        {
          "file": "src/ext4_defs/super_block.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/super_block.rs (original lines from 149 to 149)\n-    pub fn first_data_block(&self) -> u32{\n+    pub fn first_data_block(&self) -> u32 {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/super_block.rs (original lines from 207 to 207)\n-        self.free_blocks_count_lo = (free_blocks & 0xffffffff) as u32; \n+        self.free_blocks_count_lo = (free_blocks & 0xffffffff) as u32;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/super_block.rs (original lines from 235 to 235)\n-    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/super_block.rs (original lines from 149 to 149)\n-    pub fn first_data_block(&self) -> u32{\n+    pub fn first_data_block(&self) -> u32 {\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/super_block.rs (original lines from 207 to 207)\n-        self.free_blocks_count_lo = (free_blocks & 0xffffffff) as u32; \n+        self.free_blocks_count_lo = (free_blocks & 0xffffffff) as u32;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/super_block.rs (original lines from 235 to 235)\n-    \n+\n"
            ]
          }
        },
        {
          "file": "src/ext4_defs/inode.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/inode.rs (original lines from 608 to 608)\n-    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/inode.rs (original lines from 640 to 640)\n-        assert_eq!(inode.mode, InodeFileType::S_IFREG.bits() | (InodePerm::S_IREAD | InodePerm::S_IWRITE | InodePerm::S_IEXEC).bits()); // Regular file with rwx permissions\n+        assert_eq!(\n+            inode.mode,\n+            InodeFileType::S_IFREG.bits()\n+                | (InodePerm::S_IREAD | InodePerm::S_IWRITE | InodePerm::S_IEXEC).bits()\n+        ); // Regular file with rwx permissions\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/inode.rs (original lines from 608 to 608)\n-    \n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_defs/inode.rs (original lines from 640 to 640)\n-        assert_eq!(inode.mode, InodeFileType::S_IFREG.bits() | (InodePerm::S_IREAD | InodePerm::S_IWRITE | InodePerm::S_IEXEC).bits()); // Regular file with rwx permissions\n+        assert_eq!(\n+            inode.mode,\n+            InodeFileType::S_IFREG.bits()\n+                | (InodePerm::S_IREAD | InodePerm::S_IWRITE | InodePerm::S_IEXEC).bits()\n+        ); // Regular file with rwx permissions\n"
            ]
          }
        },
        {
          "file": "src/ext4_impls/ialloc.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/ialloc.rs (original lines from 18 to 19)\n-            let mut bg =\n-                Ext4BlockGroup::load_new(&self.block_device, &super_block, bgid as usize);\n+            let mut bg = Ext4BlockGroup::load_new(&self.block_device, &super_block, bgid as usize);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/ialloc.rs (original lines from 87 to 88)\n-        let mut bg =\n-            Ext4BlockGroup::load_new(&self.block_device, &super_block, bgid as usize);\n+        let mut bg = Ext4BlockGroup::load_new(&self.block_device, &super_block, bgid as usize);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/ialloc.rs (original lines from 18 to 19)\n-            let mut bg =\n-                Ext4BlockGroup::load_new(&self.block_device, &super_block, bgid as usize);\n+            let mut bg = Ext4BlockGroup::load_new(&self.block_device, &super_block, bgid as usize);\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/ext4_impls/ialloc.rs (original lines from 87 to 88)\n-        let mut bg =\n-            Ext4BlockGroup::load_new(&self.block_device, &super_block, bgid as usize);\n+        let mut bg = Ext4BlockGroup::load_new(&self.block_device, &super_block, bgid as usize);\n"
            ]
          }
        },
        {
          "file": "src/ext4_impls/inode.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Error)": [
              "error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> src/ext4_impls/inode.rs:465:12\n    |\n465 |         if extent.first_block >= EXT_MAX_BLOCKS {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: because `EXT_MAX_BLOCKS` is the maximum value for this type, the case where the two sides are not equal never occurs, consider using `extent.first_block == EXT_MAX_BLOCKS` instead\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons\n    = note: `#[deny(clippy::absurd_extreme_comparisons)]` on by default\n\n",
              "error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> src/ext4_impls/inode.rs:484:16\n    |\n484 |             if end_block > EXT_MAX_BLOCKS {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: because `EXT_MAX_BLOCKS` is the maximum value for this type, this comparison is always false\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons\n\n"
            ],
            "Clippy(Warn)": [
              "warning: returning the result of a `let` binding from a block\n   --> src/ext4_impls/inode.rs:294:13\n    |\n284 | /             let last_extent = match self.get_last_extent(inode_ref) {\n285 | |                 Ok(extent) => extent.first_block + extent.block_count as u32,\n286 | |                 Err(_) => {\n287 | |                     log::warn!(\n...   |\n292 | |                 }\n293 | |             };\n    | |______________- unnecessary `let` binding\n294 |               last_extent\n    |               ^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n    = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n    |\n284 ~             \n285 ~             match self.get_last_extent(inode_ref) {\n286 +                 Ok(extent) => extent.first_block + extent.block_count as u32,\n287 +                 Err(_) => {\n288 +                     log::warn!(\n289 +                         \"[Batch Append] Could not get last extent, starting at block {}\",\n290 +                         iblock\n291 +                     );\n292 +                     iblock\n293 +                 }\n294 +             }\n    |\n\n",
              "warning: field assignment outside of initializer for an instance created with Default::default()\n   --> src/ext4_impls/inode.rs:361:17\n    |\n361 |                 newex.first_block = current_iblk;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nnote: consider initializing the variable with `ext4_defs::extents::Ext4Extent { first_block: current_iblk, ..Default::default() }` and removing relevant reassignments\n   --> src/ext4_impls/inode.rs:360:17\n    |\n360 |                 let mut newex = Ext4Extent::default();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default\n\n"
            ]
          }
        },
        {
          "file": "src/prelude.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/prelude.rs (original lines from 19 to 19)\n+pub(crate) use core::cmp::min;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/prelude.rs (original lines from 22 to 23)\n-pub(crate) use core::cmp::min;\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/prelude.rs (original lines from 19 to 19)\n+pub(crate) use core::cmp::min;\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/prelude.rs (original lines from 22 to 23)\n-pub(crate) use core::cmp::min;\n-\n"
            ]
          }
        },
        {
          "file": "src/utils/crc.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/crc.rs (original lines from 53 to 53)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/crc.rs (original lines from 79 to 79)\n+\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/crc.rs (original lines from 53 to 53)\n-\n",
              "file: /home/runner/check/batch_10/yuoo655/ext4_rs/src/utils/crc.rs (original lines from 79 to 79)\n+\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ext4_rs, checker=Clippy\n// toolchain=nightly-2024-06-01, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_10/yuoo655/ext4_rs\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-06-28 14:38:14.392387594 +08:00:00\n Downloading crates ...\n  Downloaded bitflags v2.5.0\n    Checking bitflags v2.5.0\n    Checking log v0.4.21\n    Checking ext4_rs v1.3.2 (/home/runner/check/batch_10/yuoo655/ext4_rs)\nerror: could not compile `ext4_rs` (lib) due to 5 previous errors; 27 warnings emitted\n"
            ]
          }
        },
        {
          "file": "[Geiger] Unsafe code statistics",
          "features": "",
          "count": 1,
          "kinds": {
            "Geiger": [
              "pkg=ext4_rs, checker=Geiger\ntoolchain=nightly-2024-06-01, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_10/yuoo655/ext4_rs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\ntimestamp=2025-06-28 14:38:38.657138719 +08:00:00\n\n\nMetric output format: x/y\n    x = unsafe code used by the build\n    y = total unsafe code found in the crate\n\nSymbols:\n    :) = No `unsafe` usage found, declares #![forbid(unsafe_code)]\n    ?  = No `unsafe` usage found, missing #![forbid(unsafe_code)]\n    !  = `unsafe` usage found\n\nFunctions  Expressions  Impls  Traits  Methods  Dependency\n\n0/0        174/174      0/0    0/0     0/0      !  ext4_rs 1.3.2\n0/0        0/0          0/0    0/0     0/0      ?  |-- bitflags 2.5.0\n2/2        18/18        1/1    0/0     0/0      !  `-- log 0.4.21\n\n2/2        192/192      1/1    0/0     0/0\n\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T06:38:17Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T06:38:17Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Rapx] memory safety detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Rapx": [
              "pkg=ext4_rs, checker=Rapx\ntoolchain=nightly-2024-06-01, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_10/yuoo655/ext4_rs\ncmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-28 14:38:36.431914964 +08:00:00\n\nwarning: Dangling pointer detected.\n   --> src/ext4_defs/direntry.rs:206:1\n    |\n206 | / pub fn write_de_to_blk(&self, dst_blk: &mut Block, offset: usize) {\n207 | |         let count = core::mem::size_of::<Ext4DirEntry>() / core::mem::size_of::<u8>();\n...   |\n213 | |         // assert_eq!(dst_blk.block_data[offset..offset + core::mem::size_of::<Ext4DirEntry>()], data[..]);\n214 | |     }\n    | |_____- Dangling pointer detected.\n    |\nwarning: Dangling pointer detected during unwinding.\n   --> src/ext4_defs/direntry.rs:206:1\n    |\n206 | / pub fn write_de_to_blk(&self, dst_blk: &mut Block, offset: usize) {\n207 | |         let count = core::mem::size_of::<Ext4DirEntry>() / core::mem::size_of::<u8>();\n...   |\n213 | |         // assert_eq!(dst_blk.block_data[offset..offset + core::mem::size_of::<Ext4DirEntry>()], data[..]);\n214 | |     }\n    | |_____- Dangling pointer detected during unwinding.\n    |\nOver visited: DefId(0:482 ~ ext4_rs[e188]::ext4_impls::extents::{impl#0}::insert_extent)\nOver visited: DefId(0:486 ~ ext4_rs[e188]::ext4_impls::extents::{impl#0}::merge_extent)\nOver visited: DefId(0:487 ~ ext4_rs[e188]::ext4_impls::extents::{impl#0}::insert_new_extent)\nOver visited: DefId(0:488 ~ ext4_rs[e188]::ext4_impls::extents::{impl#0}::create_new_leaf)\nOver visited: DefId(0:489 ~ ext4_rs[e188]::ext4_impls::extents::{impl#0}::ext_grow_indepth)\nOver visited: DefId(0:491 ~ ext4_rs[e188]::ext4_impls::extents::{impl#1}::extent_remove_space)\nOver visited: DefId(0:492 ~ ext4_rs[e188]::ext4_impls::extents::{impl#1}::ext_remove_leaf)\nwarning: Double free detected.\n  --> src/ext4_impls/ext4.rs:72:5\n   |\n72 |     }\n   |     - Double free detected.\n   |\nOver visited: DefId(0:532 ~ ext4_rs[e188]::ext4_impls::inode::{impl#0}::append_inode_pblk_batch)\nOver visited: DefId(0:564 ~ ext4_rs[e188]::ext4_impls::file::{impl#0}::write_at)\nOver visited: DefId(0:599 ~ ext4_rs[e188]::ext4_impls::balloc::{impl#2}::balloc_alloc_block)\nOver visited: DefId(0:600 ~ ext4_rs[e188]::ext4_impls::balloc::{impl#2}::balloc_alloc_block_from)\nOver visited: DefId(0:604 ~ ext4_rs[e188]::ext4_impls::balloc::{impl#2}::balloc_alloc_block_batch)\nOver visited: DefId(0:650 ~ ext4_rs[e188]::fuse_interface::{impl#0}::fuse_setattr)\nwarning: Dangling pointer detected.\n   --> src/ext4_defs/direntry.rs:206:1\n    |\n206 | / pub fn write_de_to_blk(&self, dst_blk: &mut Block, offset: usize) {\n207 | |         let count = core::mem::size_of::<Ext4DirEntry>() / core::mem::size_of::<u8>();\n...   |\n213 | |         // assert_eq!(dst_blk.block_data[offset..offset + core::mem::size_of::<Ext4DirEntry>()], data[..]);\n214 | |     }\n    | |_____- Dangling pointer detected.\n    |\nwarning: Dangling pointer detected during unwinding.\n   --> src/ext4_defs/direntry.rs:206:1\n    |\n206 | / pub fn write_de_to_blk(&self, dst_blk: &mut Block, offset: usize) {\n207 | |         let count = core::mem::size_of::<Ext4DirEntry>() / core::mem::size_of::<u8>();\n...   |\n213 | |         // assert_eq!(dst_blk.block_data[offset..offset + core::mem::size_of::<Ext4DirEntry>()], data[..]);\n214 | |     }\n    | |_____- Dangling pointer detected during unwinding.\n    |\nOver visited: DefId(0:481 ~ ext4_rs[4402]::ext4_impls::extents::{impl#0}::insert_extent)\nOver visited: DefId(0:485 ~ ext4_rs[4402]::ext4_impls::extents::{impl#0}::merge_extent)\nOver visited: DefId(0:486 ~ ext4_rs[4402]::ext4_impls::extents::{impl#0}::insert_new_extent)\nOver visited: DefId(0:487 ~ ext4_rs[4402]::ext4_impls::extents::{impl#0}::create_new_leaf)\nOver visited: DefId(0:488 ~ ext4_rs[4402]::ext4_impls::extents::{impl#0}::ext_grow_indepth)\nOver visited: DefId(0:490 ~ ext4_rs[4402]::ext4_impls::extents::{impl#1}::extent_remove_space)\nOver visited: DefId(0:491 ~ ext4_rs[4402]::ext4_impls::extents::{impl#1}::ext_remove_leaf)\nwarning: Double free detected.\n  --> src/ext4_impls/ext4.rs:72:5\n   |\n72 |     }\n   |     - Double free detected.\n   |\nOver visited: DefId(0:531 ~ ext4_rs[4402]::ext4_impls::inode::{impl#0}::append_inode_pblk_batch)\nOver visited: DefId(0:563 ~ ext4_rs[4402]::ext4_impls::file::{impl#0}::write_at)\nOver visited: DefId(0:598 ~ ext4_rs[4402]::ext4_impls::balloc::{impl#2}::balloc_alloc_block)\nOver visited: DefId(0:599 ~ ext4_rs[4402]::ext4_impls::balloc::{impl#2}::balloc_alloc_block_from)\nOver visited: DefId(0:603 ~ ext4_rs[4402]::ext4_impls::balloc::{impl#2}::balloc_alloc_block_batch)\nOver visited: DefId(0:630 ~ ext4_rs[4402]::fuse_interface::{impl#0}::fuse_setattr)\nOver visited: DefId(0:729 ~ ext4_rs[4402]::test_raw_block_device_write)\nOver visited: DefId(0:730 ~ ext4_rs[4402]::main)\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=ext4_rs, checker=Outdated\ntoolchain=nightly-2024-06-01, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_10/yuoo655/ext4_rs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 14:38:37.539046246 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.5.0    2.9.1   2.9.1   Normal  ---\nlog       0.4.21   0.4.27  0.4.27  Normal  ---\n"
            ]
          }
        }
      ]
    },
    {
      "user": "os-module",
      "repo": "safe-virtio-drivers",
      "pkg": "virtio-drivers",
      "count": 57,
      "raw_reports": [
        {
          "file": "virtio-drivers/src/device/gpu/ty.rs",
          "features": "",
          "count": 14,
          "kinds": {
            "Clippy(Warn)": [
              "warning: constant `EVENT_DISPLAY` is never used\n  --> virtio-drivers/src/device/gpu/ty.rs:22:7\n   |\n22 | const EVENT_DISPLAY: u32 = 1 << 0;\n   |       ^^^^^^^^^^^^^\n\n",
              "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: constant `GPU_FLAG_FENCE` is never used\n  --> virtio-drivers/src/device/gpu/ty.rs:87:7\n   |\n87 | const GPU_FLAG_FENCE: u32 = 1 << 0;\n   |       ^^^^^^^^^^^^^^\n\n",
              "warning: this `impl` can be derived\n  --> virtio-drivers/src/device/gpu/ty.rs:81:1\n   |\n81 | / impl Default for Command {\n82 | |     fn default() -> Self {\n83 | |         Command(0)\n84 | |     }\n85 | | }\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n   = note: `#[warn(clippy::derivable_impls)]` on by default\nhelp: replace the manual implementation with a derive attribute\n   |\n52 + #[derive(Default)]\n53 ~ pub struct Command(u32);\n   |\n\n"
            ]
          }
        },
        {
          "file": "virtio-drivers/src/device/block/ty.rs",
          "features": "",
          "count": 10,
          "kinds": {
            "Clippy(Warn)": [
              "warning: variants `GetLifetime`, `Discard`, `WriteZeroes`, and `SecureErase` are never constructed\n  --> virtio-drivers/src/device/block/ty.rs:71:5\n   |\n64 | pub enum BlkReqType {\n   |          ---------- variants in this enum\n...\n71 |     GetLifetime = 10,\n   |     ^^^^^^^^^^^\n72 |     Discard = 11,\n   |     ^^^^^^^\n73 |     WriteZeroes = 13,\n   |     ^^^^^^^^^^^\n74 |     SecureErase = 14,\n   |     ^^^^^^^^^^^\n   |\n   = note: `BlkReqType` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: variants `GetLifetime`, `Discard`, `WriteZeroes`, and `SecureErase` are never constructed\n  --> virtio-drivers/src/device/block/ty.rs:71:5\n   |\n64 | pub enum BlkReqType {\n   |          ---------- variants in this enum\n...\n71 |     GetLifetime = 10,\n   |     ^^^^^^^^^^^\n72 |     Discard = 11,\n   |     ^^^^^^^\n73 |     WriteZeroes = 13,\n   |     ^^^^^^^^^^^\n74 |     SecureErase = 14,\n   |     ^^^^^^^^^^^\n   |\n   = note: `BlkReqType` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: variants `GetLifetime`, `Discard`, `WriteZeroes`, and `SecureErase` are never constructed\n  --> virtio-drivers/src/device/block/ty.rs:71:5\n   |\n64 | pub enum BlkReqType {\n   |          ---------- variants in this enum\n...\n71 |     GetLifetime = 10,\n   |     ^^^^^^^^^^^\n72 |     Discard = 11,\n   |     ^^^^^^^\n73 |     WriteZeroes = 13,\n   |     ^^^^^^^^^^^\n74 |     SecureErase = 14,\n   |     ^^^^^^^^^^^\n   |\n   = note: `BlkReqType` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: variants `GetLifetime`, `Discard`, `WriteZeroes`, and `SecureErase` are never constructed\n  --> virtio-drivers/src/device/block/ty.rs:71:5\n   |\n64 | pub enum BlkReqType {\n   |          ---------- variants in this enum\n...\n71 |     GetLifetime = 10,\n   |     ^^^^^^^^^^^\n72 |     Discard = 11,\n   |     ^^^^^^^\n73 |     WriteZeroes = 13,\n   |     ^^^^^^^^^^^\n74 |     SecureErase = 14,\n   |     ^^^^^^^^^^^\n   |\n   = note: `BlkReqType` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: fields `size_max`, `seg_max`, `geometry`, `blk_size`, `topology`, and `opt_io_size` are never read\n   --> virtio-drivers/src/device/block/ty.rs:131:16\n    |\n128 | pub struct BlkConfig {\n    |            --------- fields in this struct\n...\n131 |     pub(super) size_max: ReadWrite<{ CONFIG_OFFSET + 0x8 }, u32>,\n    |                ^^^^^^^^\n132 |     pub(super) seg_max: ReadWrite<{ CONFIG_OFFSET + 0xc }, u32>,\n    |                ^^^^^^^\n...\n136 |     pub(super) geometry: ReadWrite<{ CONFIG_OFFSET + 0x10 }, u32>,\n    |                ^^^^^^^^\n137 |     pub(super) blk_size: ReadWrite<{ CONFIG_OFFSET + 0x14 }, u32>,\n    |                ^^^^^^^^\n...\n141 |     pub(super) topology: ReadWrite<{ CONFIG_OFFSET + 0x18 }, u32>,\n    |                ^^^^^^^^\n142 |     pub(super) opt_io_size: ReadWrite<{ CONFIG_OFFSET + 0x1c }, u32>,\n    |                ^^^^^^^^^^^\n    |\n    = note: `BlkConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n",
              "warning: fields `size_max`, `seg_max`, `geometry`, `blk_size`, `topology`, and `opt_io_size` are never read\n   --> virtio-drivers/src/device/block/ty.rs:131:16\n    |\n128 | pub struct BlkConfig {\n    |            --------- fields in this struct\n...\n131 |     pub(super) size_max: ReadWrite<{ CONFIG_OFFSET + 0x8 }, u32>,\n    |                ^^^^^^^^\n132 |     pub(super) seg_max: ReadWrite<{ CONFIG_OFFSET + 0xc }, u32>,\n    |                ^^^^^^^\n...\n136 |     pub(super) geometry: ReadWrite<{ CONFIG_OFFSET + 0x10 }, u32>,\n    |                ^^^^^^^^\n137 |     pub(super) blk_size: ReadWrite<{ CONFIG_OFFSET + 0x14 }, u32>,\n    |                ^^^^^^^^\n...\n141 |     pub(super) topology: ReadWrite<{ CONFIG_OFFSET + 0x18 }, u32>,\n    |                ^^^^^^^^\n142 |     pub(super) opt_io_size: ReadWrite<{ CONFIG_OFFSET + 0x1c }, u32>,\n    |                ^^^^^^^^^^^\n    |\n    = note: `BlkConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n",
              "warning: fields `size_max`, `seg_max`, `geometry`, `blk_size`, `topology`, and `opt_io_size` are never read\n   --> virtio-drivers/src/device/block/ty.rs:131:16\n    |\n128 | pub struct BlkConfig {\n    |            --------- fields in this struct\n...\n131 |     pub(super) size_max: ReadWrite<{ CONFIG_OFFSET + 0x8 }, u32>,\n    |                ^^^^^^^^\n132 |     pub(super) seg_max: ReadWrite<{ CONFIG_OFFSET + 0xc }, u32>,\n    |                ^^^^^^^\n...\n136 |     pub(super) geometry: ReadWrite<{ CONFIG_OFFSET + 0x10 }, u32>,\n    |                ^^^^^^^^\n137 |     pub(super) blk_size: ReadWrite<{ CONFIG_OFFSET + 0x14 }, u32>,\n    |                ^^^^^^^^\n...\n141 |     pub(super) topology: ReadWrite<{ CONFIG_OFFSET + 0x18 }, u32>,\n    |                ^^^^^^^^\n142 |     pub(super) opt_io_size: ReadWrite<{ CONFIG_OFFSET + 0x1c }, u32>,\n    |                ^^^^^^^^^^^\n    |\n    = note: `BlkConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n",
              "warning: fields `size_max`, `seg_max`, `geometry`, `blk_size`, `topology`, and `opt_io_size` are never read\n   --> virtio-drivers/src/device/block/ty.rs:131:16\n    |\n128 | pub struct BlkConfig {\n    |            --------- fields in this struct\n...\n131 |     pub(super) size_max: ReadWrite<{ CONFIG_OFFSET + 0x8 }, u32>,\n    |                ^^^^^^^^\n132 |     pub(super) seg_max: ReadWrite<{ CONFIG_OFFSET + 0xc }, u32>,\n    |                ^^^^^^^\n...\n136 |     pub(super) geometry: ReadWrite<{ CONFIG_OFFSET + 0x10 }, u32>,\n    |                ^^^^^^^^\n137 |     pub(super) blk_size: ReadWrite<{ CONFIG_OFFSET + 0x14 }, u32>,\n    |                ^^^^^^^^\n...\n141 |     pub(super) topology: ReadWrite<{ CONFIG_OFFSET + 0x18 }, u32>,\n    |                ^^^^^^^^\n142 |     pub(super) opt_io_size: ReadWrite<{ CONFIG_OFFSET + 0x1c }, u32>,\n    |                ^^^^^^^^^^^\n    |\n    = note: `BlkConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n",
              "warning: fields `size_max`, `seg_max`, `geometry`, `blk_size`, `topology`, and `opt_io_size` are never read\n   --> virtio-drivers/src/device/block/ty.rs:131:16\n    |\n128 | pub struct BlkConfig {\n    |            --------- fields in this struct\n...\n131 |     pub(super) size_max: ReadWrite<{ CONFIG_OFFSET + 0x8 }, u32>,\n    |                ^^^^^^^^\n132 |     pub(super) seg_max: ReadWrite<{ CONFIG_OFFSET + 0xc }, u32>,\n    |                ^^^^^^^\n...\n136 |     pub(super) geometry: ReadWrite<{ CONFIG_OFFSET + 0x10 }, u32>,\n    |                ^^^^^^^^\n137 |     pub(super) blk_size: ReadWrite<{ CONFIG_OFFSET + 0x14 }, u32>,\n    |                ^^^^^^^^\n...\n141 |     pub(super) topology: ReadWrite<{ CONFIG_OFFSET + 0x18 }, u32>,\n    |                ^^^^^^^^\n142 |     pub(super) opt_io_size: ReadWrite<{ CONFIG_OFFSET + 0x1c }, u32>,\n    |                ^^^^^^^^^^^\n    |\n    = note: `BlkConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n",
              "warning: fields `size_max`, `seg_max`, `geometry`, `blk_size`, `topology`, and `opt_io_size` are never read\n   --> virtio-drivers/src/device/block/ty.rs:131:16\n    |\n128 | pub struct BlkConfig {\n    |            --------- fields in this struct\n...\n131 |     pub(super) size_max: ReadWrite<{ CONFIG_OFFSET + 0x8 }, u32>,\n    |                ^^^^^^^^\n132 |     pub(super) seg_max: ReadWrite<{ CONFIG_OFFSET + 0xc }, u32>,\n    |                ^^^^^^^\n...\n136 |     pub(super) geometry: ReadWrite<{ CONFIG_OFFSET + 0x10 }, u32>,\n    |                ^^^^^^^^\n137 |     pub(super) blk_size: ReadWrite<{ CONFIG_OFFSET + 0x14 }, u32>,\n    |                ^^^^^^^^\n...\n141 |     pub(super) topology: ReadWrite<{ CONFIG_OFFSET + 0x18 }, u32>,\n    |                ^^^^^^^^\n142 |     pub(super) opt_io_size: ReadWrite<{ CONFIG_OFFSET + 0x1c }, u32>,\n    |                ^^^^^^^^^^^\n    |\n    = note: `BlkConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"
            ]
          }
        },
        {
          "file": "virtio-drivers/src/device/net/ty.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Clippy(Warn)": [
              "warning: constant `MAX_BUFFER_LEN` is never used\n --> virtio-drivers/src/device/net/ty.rs:9:11\n  |\n9 | pub const MAX_BUFFER_LEN: usize = 65535;\n  |           ^^^^^^^^^^^^^^\n\n",
              "warning: associated constants `NONE`, `TCPV4`, `UDP`, `TCPV6`, and `ECN` are never used\n   --> virtio-drivers/src/device/net/ty.rs:172:11\n    |\n171 | impl GsoType {\n    | ------------ associated constants in this implementation\n172 |     const NONE: GsoType = GsoType(0);\n    |           ^^^^\n173 |     const TCPV4: GsoType = GsoType(1);\n    |           ^^^^^\n174 |     const UDP: GsoType = GsoType(3);\n    |           ^^^\n175 |     const TCPV6: GsoType = GsoType(4);\n    |           ^^^^^\n176 |     const ECN: GsoType = GsoType(0x80);\n    |           ^^^\n\n",
              "warning: associated constants `NONE`, `TCPV4`, `UDP`, `TCPV6`, and `ECN` are never used\n   --> virtio-drivers/src/device/net/ty.rs:172:11\n    |\n171 | impl GsoType {\n    | ------------ associated constants in this implementation\n172 |     const NONE: GsoType = GsoType(0);\n    |           ^^^^\n173 |     const TCPV4: GsoType = GsoType(1);\n    |           ^^^^^\n174 |     const UDP: GsoType = GsoType(3);\n    |           ^^^\n175 |     const TCPV6: GsoType = GsoType(4);\n    |           ^^^^^\n176 |     const ECN: GsoType = GsoType(0x80);\n    |           ^^^\n\n",
              "warning: associated constants `NONE`, `TCPV4`, `UDP`, `TCPV6`, and `ECN` are never used\n   --> virtio-drivers/src/device/net/ty.rs:172:11\n    |\n171 | impl GsoType {\n    | ------------ associated constants in this implementation\n172 |     const NONE: GsoType = GsoType(0);\n    |           ^^^^\n173 |     const TCPV4: GsoType = GsoType(1);\n    |           ^^^^^\n174 |     const UDP: GsoType = GsoType(3);\n    |           ^^^\n175 |     const TCPV6: GsoType = GsoType(4);\n    |           ^^^^^\n176 |     const ECN: GsoType = GsoType(0x80);\n    |           ^^^\n\n",
              "warning: associated constants `NONE`, `TCPV4`, `UDP`, `TCPV6`, and `ECN` are never used\n   --> virtio-drivers/src/device/net/ty.rs:172:11\n    |\n171 | impl GsoType {\n    | ------------ associated constants in this implementation\n172 |     const NONE: GsoType = GsoType(0);\n    |           ^^^^\n173 |     const TCPV4: GsoType = GsoType(1);\n    |           ^^^^^\n174 |     const UDP: GsoType = GsoType(3);\n    |           ^^^\n175 |     const TCPV6: GsoType = GsoType(4);\n    |           ^^^^^\n176 |     const ECN: GsoType = GsoType(0x80);\n    |           ^^^\n\n",
              "warning: associated constants `NONE`, `TCPV4`, `UDP`, `TCPV6`, and `ECN` are never used\n   --> virtio-drivers/src/device/net/ty.rs:172:11\n    |\n171 | impl GsoType {\n    | ------------ associated constants in this implementation\n172 |     const NONE: GsoType = GsoType(0);\n    |           ^^^^\n173 |     const TCPV4: GsoType = GsoType(1);\n    |           ^^^^^\n174 |     const UDP: GsoType = GsoType(3);\n    |           ^^^\n175 |     const TCPV6: GsoType = GsoType(4);\n    |           ^^^^^\n176 |     const ECN: GsoType = GsoType(0x80);\n    |           ^^^\n\n"
            ]
          }
        },
        {
          "file": "virtio-drivers/src/device/gpu/mod.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Warn)": [
              "warning: field `config` is never read\n  --> virtio-drivers/src/device/gpu/mod.rs:35:5\n   |\n24 | pub struct VirtIOGpu<H: Hal<QUEUE_SIZE>, T: Transport> {\n   |            --------- field in this struct\n...\n35 |     config: GpuConfig,\n   |     ^^^^^^\n\n",
              "warning: variables can be used directly in the `format!` string\n  --> virtio-drivers/src/device/gpu/mod.rs:47:9\n   |\n47 | /         info!(\n48 | |             \"events_read: {:#x}, num_scanouts: {:#x}\",\n49 | |             events_read, num_scanouts\n50 | |         );\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
              "warning: variables can be used directly in the `format!` string\n  --> virtio-drivers/src/device/gpu/mod.rs:80:9\n   |\n80 |         info!(\"=> {:?}\", display_info);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n80 -         info!(\"=> {:?}\", display_info);\n80 +         info!(\"=> {display_info:?}\");\n   |\n\n",
              "warning: this function has too many arguments (8/7)\n   --> virtio-drivers/src/device/gpu/mod.rs:257:5\n    |\n257 | /     fn update_cursor(\n258 | |         &mut self,\n259 | |         resource_id: u32,\n260 | |         scanout_id: u32,\n...   |\n265 | |         is_move: bool,\n266 | |     ) -> VirtIoResult<()> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "virtio-drivers/src/device/net/raw.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Warn)": [
              "warning: empty lines after doc comment\n  --> virtio-drivers/src/device/net/raw.rs:60:5\n   |\n60 | /     /// Disable interrupts.\n...  |\n71 | |\n   | |_^\n72 |       /// Get MAC address.\n73 |       pub fn mac_address(&self) -> VirtIoResult<[u8; 6]> {\n   |       ------------------ the comment documents this function\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n   = note: `#[warn(clippy::empty_line_after_doc_comments)]` on by default\n   = help: if the empty lines are unintentional, remove them\nhelp: if the doc comment should not document function `mac_address` then comment it out\n   |\n60 ~     // /// Disable interrupts.\n61 |     // pub fn disable_interrupts(&mut self) -> VirtIoResult<()> {\n...\n65 |\n66 ~     // /// Enable interrupts.\n   |\n\n",
              "warning: variables can be used directly in the `format!` string\n  --> virtio-drivers/src/device/net/raw.rs:30:9\n   |\n30 |         info!(\"negotiated_features {:?}\", negotiated_features);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n30 -         info!(\"negotiated_features {:?}\", negotiated_features);\n30 +         info!(\"negotiated_features {negotiated_features:?}\");\n   |\n\n",
              "warning: redundant pattern matching, consider using `is_none()`\n  --> virtio-drivers/src/device/net/raw.rs:84:16\n   |\n84 |         if let None = token {\n   |         -------^^^^-------- help: try: `if token.is_none()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching\n   = note: `#[warn(clippy::redundant_pattern_matching)]` on by default\n\n",
              "warning: unneeded late initialization\n   --> virtio-drivers/src/device/net/raw.rs:259:9\n    |\n259 |         let v;\n    |         ^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init\n    = note: `#[warn(clippy::needless_late_init)]` on by default\nhelp: move the declaration `v` here and remove the assignments from the branches\n    |\n259 ~         \n260 ~         let v = if !tx_buf.is_empty() {\n261 |             // Special case sending an empty packet, to avoid adding an empty buffer to the\n...\n267 |             );\n268 ~             vec![header_desc, desc]\n269 |         } else {\n270 ~             vec![header_desc]\n271 ~         };\n    |\n\n"
            ]
          }
        },
        {
          "file": "virtio-drivers/src/queue.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Warn)": [
              "warning: field `queue_page` is never read\n  --> virtio-drivers/src/queue.rs:14:5\n   |\n13 | pub struct VirtIoQueue<H: Hal<SIZE>, const SIZE: usize> {\n   |            ----------- field in this struct\n14 |     queue_page: Box<dyn QueuePage<SIZE>>,\n   |     ^^^^^^^^^^\n\n",
              "warning: associated constant `DESCRIPTOR_TABLE_OFFSET` is never used\n  --> virtio-drivers/src/queue.rs:27:11\n   |\n25 | impl<H: Hal<SIZE>, const SIZE: usize> VirtIoQueue<H, SIZE> {\n   | ---------------------------------------------------------- associated constant in this implementation\n26 |     const AVAIL_RING_OFFSET: usize = size_of::<Descriptor>() * SIZE;\n27 |     const DESCRIPTOR_TABLE_OFFSET: usize = 0;\n   |           ^^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: associated constant `INDIRECT` is never used\n   --> virtio-drivers/src/queue.rs:297:11\n    |\n293 | impl DescFlag {\n    | ------------- associated constant in this implementation\n...\n297 |     const INDIRECT: u16 = 4;\n    |           ^^^^^^^^\n\n",
              "warning: this `impl` can be derived\n   --> virtio-drivers/src/queue.rs:272:1\n    |\n272 | / impl Default for Descriptor {\n273 | |     fn default() -> Self {\n274 | |         Self {\n275 | |             addr: Default::default(),\n...   |\n281 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\nhelp: replace the manual implementation with a derive attribute\n    |\n266 + #[derive(Default)]\n267 ~ pub struct Descriptor {\n    |\n\n"
            ]
          }
        },
        {
          "file": "virtio-drivers/src/device/console/mod.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: variables can be used directly in the `format!` string\n  --> virtio-drivers/src/device/console/mod.rs:85:13\n   |\n85 |             info!(\"poll_retrieve: l: {:?}\", l);\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n   = note: `#[warn(clippy::uninlined_format_args)]` on by default\nhelp: change this to\n   |\n85 -             info!(\"poll_retrieve: l: {:?}\", l);\n85 +             info!(\"poll_retrieve: l: {l:?}\");\n   |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> virtio-drivers/src/device/console/mod.rs:98:13\n    |\n98  | /             info!(\n99  | |                 \"finish_receive: receive_token: {:?}, peek_used: {:?}\",\n100 | |                 receive_token, peek_used\n101 | |             );\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n"
            ]
          }
        },
        {
          "file": "virtio-drivers/src/device/input/ty.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: struct `AbsInfo` is never constructed\n  --> virtio-drivers/src/device/input/ty.rs:34:8\n   |\n34 | struct AbsInfo {\n   |        ^^^^^^^\n\n",
              "warning: struct `DevIDs` is never constructed\n  --> virtio-drivers/src/device/input/ty.rs:44:8\n   |\n44 | struct DevIDs {\n   |        ^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "[Geiger] Unsafe code statistics",
          "features": "",
          "count": 1,
          "kinds": {
            "Geiger": [
              "pkg=virtio-drivers, checker=Geiger\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_6/os-module/safe-virtio-drivers/virtio-drivers\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\ntimestamp=2025-06-28 15:57:41.491483848 +08:00:00\n\n\nMetric output format: x/y\n    x = unsafe code used by the build\n    y = total unsafe code found in the crate\n\nSymbols:\n    :) = No `unsafe` usage found, declares #![forbid(unsafe_code)]\n    ?  = No `unsafe` usage found, missing #![forbid(unsafe_code)]\n    !  = `unsafe` usage found\n\nFunctions  Expressions  Impls  Traits  Methods  Dependency\n\n0/0        0/27         0/0    0/0     0/0      :) virtio-drivers 0.1.0\n0/0        0/0          0/0    0/0     0/0      ?  |-- bitflags 2.9.1\n2/2        18/18        1/1    0/0     0/0      !  `-- log 0.4.27\n\n2/2        18/45        1/1    0/0     0/0\n\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T07:57:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T07:57:10Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Rapx] memory safety detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Rapx": [
              "pkg=virtio-drivers, checker=Rapx\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_6/os-module/safe-virtio-drivers/virtio-drivers\ncmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-28 15:57:36.454652925 +08:00:00\n\nwarning: Double free detected.\n  --> virtio-drivers/src/device/console/mod.rs:49:5\n   |\n49 |     }\n   |     -\n   |     |\n   |     Double free detected.\n   |     Double free detected.\n   |     Double free detected.\n   |\nwarning: Dangling pointer detected during unwinding.\n   --> virtio-drivers/src/device/gpu/mod.rs:77:1\n    |\n 77 | / pub fn setup_framebuffer(&mut self) -> VirtIoResult<&mut [u8]> {\n 78 | |         // get display info\n...   |\n101 | |         Ok(buf)\n102 | |     }\n    | |_____- Dangling pointer detected during unwinding.\n    |\nwarning: Dangling pointer detected during unwinding.\n   --> virtio-drivers/src/device/gpu/mod.rs:115:1\n    |\n115 | / pub fn setup_cursor(\n116 | |         &mut self,\n...   |\n144 | |         Ok(())\n145 | |     }\n    | |_____- Dangling pointer detected during unwinding.\n    |\nOver visited: DefId(0:309 ~ virtio_drivers[3e6d]::device::net::raw::{impl#0}::new)\nwarning: Double free detected.\n  --> virtio-drivers/src/queue.rs:64:5\n   |\n64 |     }\n   |     -\n   |     |\n   |     Double free detected.\n   |     Double free detected.\n   |\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=virtio-drivers, checker=SemverChecks\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_6/os-module/safe-virtio-drivers/virtio-drivers\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-28 15:57:01.188830094 +08:00:00\n\n\nstdout:\n\n--- failure enum_missing: pub enum removed or renamed ---\n\nDescription:\nA publicly-visible enum cannot be imported by its prior path. A `pub use` may have been removed, or the enum itself may have been renamed or removed entirely.\n        ref: https://doc.rust-lang.org/cargo/reference/semver.html#item-remove\n       impl: https://github.com/obi1kenobi/cargo-semver-checks/tree/v0.41.0/src/lints/enum_missing.ron\n\nFailed in:\n  enum virtio_drivers::MmioError, previously in file /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/virtio-drivers-0.1.0/src/transport/mmio.rs:53\n  enum virtio_drivers::RespStatus, previously in file /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/virtio-drivers-0.1.0/src/blk.rs:240\n  enum virtio_drivers::InputConfigSelect, previously in file /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/virtio-drivers-0.1.0/src/input.rs:96\n  enum virtio_drivers::MmioVersion, previously in file /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/virtio-drivers-0.1.0/src/transport/mmio.rs:23\n  enum virtio_drivers::Error, previously in file /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/virtio-drivers-0.1.0/src/lib.rs:40\n  enum virtio_drivers::DeviceType, previously in file /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/virtio-drivers-0.1.0/src/transport/mod.rs:107\n\n--- failure struct_missing: pub struct removed or renamed ---\n\nDescription:\nA publicly-visible struct cannot be imported by its prior path. A `pub use` may have been removed, or the struct itself may have been renamed or removed entirely.\n        ref: https://doc.rust-lang.org/cargo/reference/semver.html#item-remove\n       impl: https://github.com/obi1kenobi/cargo-semver-checks/tree/v0.41.0/src/lints/struct_missing.ron\n\nFailed in:\n  struct virtio_drivers::VirtIONet, previously in file /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/virtio-drivers-0.1.0/src/net.rs:17\n  struct virtio_drivers::InputEvent, previously in file /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/virtio-drivers-0.1.0/src/input.rs:150\n  struct virtio_drivers::VirtIOInput, previously in file /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/virtio-drivers-0.1.0/src/input.rs:13\n  struct virtio_drivers::DeviceStatus, previously in file /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/virtio-drivers-0.1.0/src/transport/mod.rs:73\n  struct virtio_drivers::BlkResp, previously in file /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/virtio-drivers-0.1.0/src/blk.rs:216\n  struct virtio_drivers::MmioTransport, previously in file /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/virtio-drivers-0.1.0/src/transport/mmio.rs:275\n  struct virtio_drivers::VirtIOConsole, previously in file /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/virtio-drivers-0.1.0/src/console.rs:15\n  struct virtio_drivers::VirtIOGpu, previously in file /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/virtio-drivers-0.1.0/src/gpu.rs:16\n  struct virtio_drivers::VirtIOBlk, previously in file /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/virtio-drivers-0.1.0/src/blk.rs:13\n  struct virtio_drivers::VirtIOHeader, previously in file /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/virtio-drivers-0.1.0/src/transport/mmio.rs:82\n\n--- failure trait_missing: pub trait removed or renamed ---\n\nDescription:\nA publicly-visible trait cannot be imported by its prior path. A `pub use` may have been removed, or the trait itself may have been renamed or removed entirely.\n        ref: https://doc.rust-lang.org/cargo/reference/semver.html#item-remove\n       impl: https://github.com/obi1kenobi/cargo-semver-checks/tree/v0.41.0/src/lints/trait_missing.ron\n\nFailed in:\n  trait virtio_drivers::Hal, previously in file /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/virtio-drivers-0.1.0/src/hal.rs:56\n  trait virtio_drivers::Transport, previously in file /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/virtio-drivers-0.1.0/src/transport/mod.rs:10\n\nstderr:\n    Building virtio-drivers v0.1.0 (current)\n       Built [   0.506s] (current)\n     Parsing virtio-drivers v0.1.0 (current)\n      Parsed [   0.012s] (current)\n    Building virtio-drivers v0.1.0 (baseline)\n       Built [   0.425s] (baseline)\n     Parsing virtio-drivers v0.1.0 (baseline)\n      Parsed [   0.009s] (baseline)\n    Checking virtio-drivers v0.1.0 -> v0.1.0 (no change; assume minor)\n     Checked [   0.025s] 140 checks: 137 pass, 3 fail, 0 warn, 37 skip\n\n     Summary semver requires new major version: 3 major and 0 minor checks failed\n    Finished [   1.549s] virtio-drivers\n"
            ]
          }
        },
        {
          "file": "virtio-drivers/src/device/console/ty.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: field `emerg_wr` is never read\n --> virtio-drivers/src/device/console/ty.rs:9:16\n  |\n5 | pub struct ConsoleConfig {\n  |            ------------- field in this struct\n...\n9 |     pub(super) emerg_wr: WriteOnly<{ CONFIG_OFFSET + 8 }, u32>,\n  |                ^^^^^^^^\n  |\n  = note: `ConsoleConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"
            ]
          }
        },
        {
          "file": "virtio-drivers/src/device/input/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: field `status_queue` is never read\n  --> virtio-drivers/src/device/input/mod.rs:29:5\n   |\n26 | pub struct VirtIOInput<H: Hal<QUEUE_SIZE>, T: Transport> {\n   |            ----------- field in this struct\n...\n29 |     status_queue: VirtIoQueue<H, QUEUE_SIZE>,\n   |     ^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "virtio-drivers/src/device/net/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: empty lines after doc comment\n  --> virtio-drivers/src/device/net/mod.rs:55:5\n   |\n55 | /     /// Disable interrupts.\n...  |\n64 | |\n   | |_^\n65 |       /// Get MAC address.\n66 |       pub fn mac_address(&self) -> VirtIoResult<[u8; 6]> {\n   |       ------------------ the comment documents this function\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n   = help: if the empty lines are unintentional, remove them\nhelp: if the doc comment should not document function `mac_address` then comment it out\n   |\n55 ~     // /// Disable interrupts.\n56 |     // pub fn disable_interrupts(&mut self) -> VirtIoResult<()> {\n...\n59 |\n60 ~     // /// Enable interrupts.\n   |\n\n"
            ]
          }
        },
        {
          "file": "virtio-drivers/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: manually reimplementing `div_ceil`\n  --> virtio-drivers/src/lib.rs:20:5\n   |\n20 |     (size + PAGE_SIZE - 1) / PAGE_SIZE\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.div_ceil()`: `size.div_ceil(PAGE_SIZE)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_div_ceil\n   = note: `#[warn(clippy::manual_div_ceil)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "virtio-drivers/src/transport/mmio.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: field `config_generation` is never read\n   --> virtio-drivers/src/transport/mmio.rs:155:5\n    |\n17  | pub struct VirtIOHeader {\n    |            ------------ field in this struct\n...\n155 |     config_generation: ReadOnly<0xfc, u32>,\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: `VirtIOHeader` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"
            ]
          }
        },
        {
          "file": "virtio-drivers/src/transport/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: variables can be used directly in the `format!` string\n  --> virtio-drivers/src/transport/mod.rs:76:9\n   |\n76 |         debug!(\"Device features: {:?}\", device_features);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n76 -         debug!(\"Device features: {:?}\", device_features);\n76 +         debug!(\"Device features: {device_features:?}\");\n   |\n\n"
            ]
          }
        },
        {
          "file": "virtio-drivers/src/volatile.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: the loop variable `i` is used to index `res`\n  --> virtio-drivers/src/volatile.rs:36:18\n   |\n36 |         for i in 0..SIZE {\n   |                  ^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n   = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n   |\n36 -         for i in 0..SIZE {\n36 +         for (i, <item>) in res.iter_mut().enumerate().take(SIZE) {\n   |\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "rcore-os",
      "repo": "arm-gic-driver",
      "pkg": "arm-gic-driver",
      "count": 22,
      "raw_reports": [
        {
          "file": "src/version/v2.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Clippy(Error)": [
              "error[E0407]: method `set_eoi_mode` is not a member of trait `local::Interface`\n   --> src/version/v2.rs:104:5\n    |\n104 | /     fn set_eoi_mode(&self, b: bool) {\n105 | |         self.gicc()\n106 | |             .CTLR\n107 | |             .modify(GICC_CTLR::EOIMODENS.val(if b { 1 } else { 0 }));\n108 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\n",
              "error[E0407]: method `get_eoi_mode` is not a member of trait `local::Interface`\n   --> src/version/v2.rs:110:5\n    |\n110 | /     fn get_eoi_mode(&self) -> bool {\n111 | |         self.gicc().CTLR.is_set(GICC_CTLR::EOIMODENS)\n112 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\n",
              "error[E0407]: method `dir` is not a member of trait `local::Interface`\n   --> src/version/v2.rs:122:5\n    |\n122 | /     fn dir(&self, intid: IrqId) {\n123 | |         self.gicc().dir(intid.into());\n124 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\n"
            ],
            "Mirai": [
              "error[E0407]: method `set_eoi_mode` is not a member of trait `local::Interface`\n   --> src/version/v2.rs:104:5\n    |\n104 | /     fn set_eoi_mode(&self, b: bool) {\n105 | |         self.gicc()\n106 | |             .CTLR\n107 | |             .modify(GICC_CTLR::EOIMODENS.val(if b { 1 } else { 0 }));\n108 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\n",
              "error[E0407]: method `get_eoi_mode` is not a member of trait `local::Interface`\n   --> src/version/v2.rs:110:5\n    |\n110 | /     fn get_eoi_mode(&self) -> bool {\n111 | |         self.gicc().CTLR.is_set(GICC_CTLR::EOIMODENS)\n112 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\n",
              "error[E0407]: method `dir` is not a member of trait `local::Interface`\n   --> src/version/v2.rs:122:5\n    |\n122 | /     fn dir(&self, intid: IrqId) {\n123 | |         self.gicc().dir(intid.into());\n124 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\n"
            ]
          }
        },
        {
          "file": "src/version/v3.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Clippy(Error)": [
              "error[E0407]: method `set_eoi_mode` is not a member of trait `local::Interface`\n   --> src/version/v3.rs:306:5\n    |\n306 | /     fn set_eoi_mode(&self, b: bool) {\n307 | |         let mut reg = cpu_read!(\"ICC_CTLR_EL1\");\n308 | |         if b {\n309 | |             reg |= ICC_CTLR_EL1_EOIMODE;\n...   |\n313 | |         cpu_write!(\"ICC_CTLR_EL1\", reg);\n314 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\n",
              "error[E0407]: method `get_eoi_mode` is not a member of trait `local::Interface`\n   --> src/version/v3.rs:316:5\n    |\n316 | /     fn get_eoi_mode(&self) -> bool {\n317 | |         let reg = cpu_read!(\"ICC_CTLR_EL1\");\n318 | |         (reg & ICC_CTLR_EL1_EOIMODE) != 0\n319 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\n",
              "error[E0407]: method `dir` is not a member of trait `local::Interface`\n   --> src/version/v3.rs:336:5\n    |\n336 | /     fn dir(&self, irq: IrqId) {\n337 | |         let intid: usize = irq.into();\n338 | |         cpu_write!(\"icc_dir_el1\", intid);\n339 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\n"
            ],
            "Mirai": [
              "error[E0407]: method `set_eoi_mode` is not a member of trait `local::Interface`\n   --> src/version/v3.rs:306:5\n    |\n306 | /     fn set_eoi_mode(&self, b: bool) {\n307 | |         let mut reg = cpu_read!(\"ICC_CTLR_EL1\");\n308 | |         if b {\n309 | |             reg |= ICC_CTLR_EL1_EOIMODE;\n...   |\n313 | |         cpu_write!(\"ICC_CTLR_EL1\", reg);\n314 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\n",
              "error[E0407]: method `get_eoi_mode` is not a member of trait `local::Interface`\n   --> src/version/v3.rs:316:5\n    |\n316 | /     fn get_eoi_mode(&self) -> bool {\n317 | |         let reg = cpu_read!(\"ICC_CTLR_EL1\");\n318 | |         (reg & ICC_CTLR_EL1_EOIMODE) != 0\n319 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\n",
              "error[E0407]: method `dir` is not a member of trait `local::Interface`\n   --> src/version/v3.rs:336:5\n    |\n336 | /     fn dir(&self, irq: IrqId) {\n337 | |         let intid: usize = irq.into();\n338 | |         cpu_write!(\"icc_dir_el1\", intid);\n339 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arm-gic-driver, checker=Clippy\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_5/rcore-os/arm-gic-driver\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-07-09 18:13:46.143219735 +08:00:00\n    Checking as-any v0.3.2\n    Checking cfg-if v1.0.1\n   Compiling thiserror v2.0.12\n    Checking tock-registers v0.9.0\n    Checking log v0.4.27\n    Checking bitflags v2.9.1\n    Checking aarch64-cpu v10.0.0\n    Checking rdif-def v0.2.0\n    Checking rdif-base v0.6.0\n    Checking rdif-intc v0.11.0\n    Checking arm-gic-driver v0.14.9 (/home/runner/check/batch_5/rcore-os/arm-gic-driver)\nerror: could not compile `arm-gic-driver` (lib) due to 6 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) geiger",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arm-gic-driver, checker=Geiger\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_5/rcore-os/arm-gic-driver\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2025-07-09 18:14:07.528879435 +08:00:00\n     Removed 0 files\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling thiserror v2.0.12\n    Checking as-any v0.3.2\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/rcore-os/arm-gic-driver/target/debug/build/thiserror-258026ef10e5918b/build_script_build-258026ef10e5918b.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/rcore-os/arm-gic-driver/target/debug/build/proc-macro2-b0b63e0222bcc583/build_script_build-b0b63e0222bcc583.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"can't find crate for `core`\",\"code\":{\"code\":\"E0463\",\"explanation\":\"A crate was declared but cannot be found.\\n\\nErroneous code example:\\n\\n```compile_fail,E0463\\nextern crate foo; // error: can't find crate\\n```\\n\\nYou need to link your code to the relevant crate in order to be able to use it\\n(through Cargo or the `-L` option of rustc, for example).\\n\\n## Common causes\\n\\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\\n  in Cargo.toml.\\n- The crate is present, but under a different name. If using Cargo, look for\\n  `package = ` under `[dependencies]` in Cargo.toml.\\n\\n## Common causes for missing `std` or `core`\\n\\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\\n  Consider one of the following:\\n  + Adding a pre-compiled version of std with `rustup target add`\\n  + Building std from source with `cargo build -Z build-std`\\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\\n    place.\\n- You are developing the compiler itself and haven't built libstd from source.\\n  You can usually build it with `x.py build library/std`. More information\\n  about x.py is available in the [rustc-dev-guide].\\n\\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\\n\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/as-any-0.3.2/src/lib.rs\",\"byte_start\":0,\"byte_end\":0,\"line_start\":1,\"line_end\":1,\"column_start\":1,\"column_end\":1,\"is_primary\":true,\"text\":[],\"label\":\"can't find crate\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"the `aarch64-unknown-none` target may not be installed\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"consider downloading the target with `rustup target add aarch64-unknown-none`\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"consider building the standard library from source with `cargo build -Zbuild-std`\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror[E0463]\\u001b[0m\\u001b[0m\\u001b[1m: can't find crate for `core`\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: the `aarch64-unknown-none` target may not be installed\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mhelp\\u001b[0m\\u001b[0m: consider downloading the target with `rustup target add aarch64-unknown-none`\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mhelp\\u001b[0m\\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"aborting due to 1 previous error\",\"code\":null,\"level\":\"error\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: aborting due to 1 previous error\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"For more information about this error, try `rustc --explain E0463`.\",\"code\":null,\"level\":\"failure-note\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1mFor more information about this error, try `rustc --explain E0463`.\\u001b[0m\\n\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/rcore-os/arm-gic-driver/target/debug/deps/unicode_ident-00291e71c3df335a.d\",\"emit\":\"dep-info\"}\nerror: could not compile `as-any` (lib)\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-2025-06-26-x86_64-unknown-linux-gnu/bin/rustc --crate-name as_any --edition=2018 /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/as-any-0.3.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=0e20d4807af01e22 -C extra-filename=-2fa334610e7dc3c1 --out-dir /home/runner/check/batch_5/rcore-os/arm-gic-driver/target/aarch64-unknown-none/debug/deps --target aarch64-unknown-none -L dependency=/home/runner/check/batch_5/rcore-os/arm-gic-driver/target/aarch64-unknown-none/debug/deps -L dependency=/home/runner/check/batch_5/rcore-os/arm-gic-driver/target/debug/deps --cap-lints allow` (exit status: 1)\nwarning: build failed, waiting for other jobs to finish...\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/rcore-os/arm-gic-driver/target/debug/deps/libunicode_ident-00291e71c3df335a.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/rcore-os/arm-gic-driver/target/debug/deps/libunicode_ident-00291e71c3df335a.rlib\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/rcore-os/arm-gic-driver/target/debug/build/proc-macro2-b0b63e0222bcc583/build_script_build-b0b63e0222bcc583\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_5/rcore-os/arm-gic-driver/target/debug/build/thiserror-258026ef10e5918b/build_script_build-258026ef10e5918b\",\"emit\":\"link\"}\nerror: Cargo(\"1 job failed\")\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arm-gic-driver, checker=Lockbud\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_5/rcore-os/arm-gic-driver\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-07-09 18:14:03.825626655 +08:00:00\n   Compiling as-any v0.3.2\n   Compiling tock-registers v0.9.0\n   Compiling thiserror v2.0.12\n[2025-07-09T10:13:58Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-07-09T10:13:58Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling cfg-if v1.0.1\n   Compiling log v0.4.27\n   Compiling bitflags v2.9.1\n   Compiling rdif-def v0.2.0\n   Compiling aarch64-cpu v10.0.0\n[2025-07-09T10:14:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-07-09T10:14:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling rdif-base v0.6.0\n   Compiling rdif-intc v0.11.0\n   Compiling arm-gic-driver v0.14.9 (/home/runner/check/batch_5/rcore-os/arm-gic-driver)\nerror[E0407]: method `set_eoi_mode` is not a member of trait `local::Interface`\n   --> src/version/v2.rs:104:5\n    |\n104 | /     fn set_eoi_mode(&self, b: bool) {\n105 | |         self.gicc()\n106 | |             .CTLR\n107 | |             .modify(GICC_CTLR::EOIMODENS.val(if b { 1 } else { 0 }));\n108 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nerror[E0407]: method `get_eoi_mode` is not a member of trait `local::Interface`\n   --> src/version/v2.rs:110:5\n    |\n110 | /     fn get_eoi_mode(&self) -> bool {\n111 | |         self.gicc().CTLR.is_set(GICC_CTLR::EOIMODENS)\n112 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nerror[E0407]: method `dir` is not a member of trait `local::Interface`\n   --> src/version/v2.rs:122:5\n    |\n122 | /     fn dir(&self, intid: IrqId) {\n123 | |         self.gicc().dir(intid.into());\n124 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nerror[E0407]: method `set_eoi_mode` is not a member of trait `local::Interface`\n   --> src/version/v3.rs:306:5\n    |\n306 | /     fn set_eoi_mode(&self, b: bool) {\n307 | |         let mut reg = cpu_read!(\"ICC_CTLR_EL1\");\n308 | |         if b {\n309 | |             reg |= ICC_CTLR_EL1_EOIMODE;\n...   |\n313 | |         cpu_write!(\"ICC_CTLR_EL1\", reg);\n314 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nerror[E0407]: method `get_eoi_mode` is not a member of trait `local::Interface`\n   --> src/version/v3.rs:316:5\n    |\n316 | /     fn get_eoi_mode(&self) -> bool {\n317 | |         let reg = cpu_read!(\"ICC_CTLR_EL1\");\n318 | |         (reg & ICC_CTLR_EL1_EOIMODE) != 0\n319 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nerror[E0407]: method `dir` is not a member of trait `local::Interface`\n   --> src/version/v3.rs:336:5\n    |\n336 | /     fn dir(&self, irq: IrqId) {\n337 | |         let intid: usize = irq.into();\n338 | |         cpu_write!(\"icc_dir_el1\", intid);\n339 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nFor more information about this error, try `rustc --explain E0407`.\nerror: could not compile `arm-gic-driver` (lib) due to 6 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arm-gic-driver, checker=Mirai\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_5/rcore-os/arm-gic-driver\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-07-09 18:13:53.365168137 +08:00:00\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling thiserror v2.0.12\n    Checking as-any v0.3.2\n   Compiling once_cell v1.21.3\n    Checking cfg-if v1.0.1\n    Checking tock-registers v0.9.0\n    Checking aarch64-cpu v10.0.0\n    Checking log v0.4.27\n    Checking bitflags v2.9.1\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling thiserror-impl v2.0.12\n   Compiling async-trait v0.1.88\n   Compiling enum_dispatch v0.3.13\n    Checking rdif-def v0.2.0\n    Checking rdif-base v0.6.0\n    Checking rdif-intc v0.11.0\n    Checking arm-gic-driver v0.14.9 (/home/runner/check/batch_5/rcore-os/arm-gic-driver)\nerror: could not compile `arm-gic-driver` (lib) due to 6 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arm-gic-driver, checker=SemverChecks\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_5/rcore-os/arm-gic-driver\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-07-09 18:13:48.642817301 +08:00:00\n    Building arm-gic-driver v0.14.9 (current)\nerror: running cargo-doc on crate 'arm-gic-driver' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling thiserror v2.0.12\n    Checking as-any v0.3.2\n    Checking cfg-if v1.0.1\n   Compiling once_cell v1.21.3\n    Checking tock-registers v0.9.0\n    Checking aarch64-cpu v10.0.0\n    Checking bitflags v2.9.1\n    Checking log v0.4.27\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling thiserror-impl v2.0.12\n   Compiling async-trait v0.1.88\n   Compiling enum_dispatch v0.3.13\n    Checking rdif-def v0.2.0\n    Checking rdif-base v0.6.0\n    Checking rdif-intc v0.11.0\n Documenting arm-gic-driver v0.14.9 (/home/runner/check/batch_5/rcore-os/arm-gic-driver)\nerror[E0407]: method `set_eoi_mode` is not a member of trait `local::Interface`\n   --> /home/runner/check/batch_5/rcore-os/arm-gic-driver/src/version/v2.rs:104:5\n    |\n104 | /     fn set_eoi_mode(&self, b: bool) {\n105 | |         self.gicc()\n106 | |             .CTLR\n107 | |             .modify(GICC_CTLR::EOIMODENS.val(if b { 1 } else { 0 }));\n108 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nerror[E0407]: method `get_eoi_mode` is not a member of trait `local::Interface`\n   --> /home/runner/check/batch_5/rcore-os/arm-gic-driver/src/version/v2.rs:110:5\n    |\n110 | /     fn get_eoi_mode(&self) -> bool {\n111 | |         self.gicc().CTLR.is_set(GICC_CTLR::EOIMODENS)\n112 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nerror[E0407]: method `dir` is not a member of trait `local::Interface`\n   --> /home/runner/check/batch_5/rcore-os/arm-gic-driver/src/version/v2.rs:122:5\n    |\n122 | /     fn dir(&self, intid: IrqId) {\n123 | |         self.gicc().dir(intid.into());\n124 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nerror[E0407]: method `set_eoi_mode` is not a member of trait `local::Interface`\n   --> /home/runner/check/batch_5/rcore-os/arm-gic-driver/src/version/v3.rs:306:5\n    |\n306 | /     fn set_eoi_mode(&self, b: bool) {\n307 | |         let mut reg = cpu_read!(\"ICC_CTLR_EL1\");\n308 | |         if b {\n309 | |             reg |= ICC_CTLR_EL1_EOIMODE;\n...   |\n313 | |         cpu_write!(\"ICC_CTLR_EL1\", reg);\n314 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nerror[E0407]: method `get_eoi_mode` is not a member of trait `local::Interface`\n   --> /home/runner/check/batch_5/rcore-os/arm-gic-driver/src/version/v3.rs:316:5\n    |\n316 | /     fn get_eoi_mode(&self) -> bool {\n317 | |         let reg = cpu_read!(\"ICC_CTLR_EL1\");\n318 | |         (reg & ICC_CTLR_EL1_EOIMODE) != 0\n319 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nerror[E0407]: method `dir` is not a member of trait `local::Interface`\n   --> /home/runner/check/batch_5/rcore-os/arm-gic-driver/src/version/v3.rs:336:5\n    |\n336 | /     fn dir(&self, irq: IrqId) {\n337 | |         let intid: usize = irq.into();\n338 | |         cpu_write!(\"icc_dir_el1\", intid);\n339 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nFor more information about this error, try `rustc --explain E0407`.\nerror: could not document `arm-gic-driver`\n\n-----\n\nerror: failed to build rustdoc for crate arm-gic-driver v0.14.9\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_5/rcore-os/arm-gic-driver &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arm-gic-driver v0.14.9\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arm-gic-driver, checker=Udeps\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_5/rcore-os/arm-gic-driver\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-linux-gnu \n// timestamp=2025-07-09 18:14:08.176215905 +08:00:00\n   Compiling proc-macro2 v1.0.95\n    Checking as-any v0.3.2\n   Compiling thiserror v2.0.12\n    Checking tock-registers v0.9.0\n    Checking cfg-if v1.0.1\n    Checking log v0.4.27\n    Checking bitflags v2.9.1\n    Checking aarch64-cpu v10.0.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling thiserror-impl v2.0.12\n   Compiling async-trait v0.1.88\n   Compiling enum_dispatch v0.3.13\n    Checking rdif-def v0.2.0\n    Checking rdif-base v0.6.0\n    Checking rdif-intc v0.11.0\n    Checking arm-gic-driver v0.14.9 (/home/runner/check/batch_5/rcore-os/arm-gic-driver)\nerror[E0407]: method `set_eoi_mode` is not a member of trait `local::Interface`\n   --> src/version/v2.rs:104:5\n    |\n104 | /     fn set_eoi_mode(&self, b: bool) {\n105 | |         self.gicc()\n106 | |             .CTLR\n107 | |             .modify(GICC_CTLR::EOIMODENS.val(if b { 1 } else { 0 }));\n108 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nerror[E0407]: method `get_eoi_mode` is not a member of trait `local::Interface`\n   --> src/version/v2.rs:110:5\n    |\n110 | /     fn get_eoi_mode(&self) -> bool {\n111 | |         self.gicc().CTLR.is_set(GICC_CTLR::EOIMODENS)\n112 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nerror[E0407]: method `dir` is not a member of trait `local::Interface`\n   --> src/version/v2.rs:122:5\n    |\n122 | /     fn dir(&self, intid: IrqId) {\n123 | |         self.gicc().dir(intid.into());\n124 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nerror[E0407]: method `set_eoi_mode` is not a member of trait `local::Interface`\n   --> src/version/v3.rs:306:5\n    |\n306 | /     fn set_eoi_mode(&self, b: bool) {\n307 | |         let mut reg = cpu_read!(\"ICC_CTLR_EL1\");\n308 | |         if b {\n309 | |             reg |= ICC_CTLR_EL1_EOIMODE;\n...   |\n313 | |         cpu_write!(\"ICC_CTLR_EL1\", reg);\n314 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nerror[E0407]: method `get_eoi_mode` is not a member of trait `local::Interface`\n   --> src/version/v3.rs:316:5\n    |\n316 | /     fn get_eoi_mode(&self) -> bool {\n317 | |         let reg = cpu_read!(\"ICC_CTLR_EL1\");\n318 | |         (reg & ICC_CTLR_EL1_EOIMODE) != 0\n319 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nerror[E0407]: method `dir` is not a member of trait `local::Interface`\n   --> src/version/v3.rs:336:5\n    |\n336 | /     fn dir(&self, irq: IrqId) {\n337 | |         let intid: usize = irq.into();\n338 | |         cpu_write!(\"icc_dir_el1\", intid);\n339 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nFor more information about this error, try `rustc --explain E0407`.\nerror: could not compile `arm-gic-driver` (lib) due to 6 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-07-09T10:13:58Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-07-09T10:13:58Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2025-07-09T10:14:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-07-09T10:14:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=arm-gic-driver, checker=Udeps\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_5/rcore-os/arm-gic-driver\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-linux-gnu \ntimestamp=2025-07-09 18:14:12.43466198 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling proc-macro2 v1.0.95\n    Checking as-any v0.3.2\n   Compiling thiserror v2.0.12\n    Checking tock-registers v0.9.0\n    Checking cfg-if v1.0.1\n    Checking log v0.4.27\n    Checking bitflags v2.9.1\n    Checking aarch64-cpu v10.0.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling thiserror-impl v2.0.12\n   Compiling async-trait v0.1.88\n   Compiling enum_dispatch v0.3.13\n    Checking rdif-def v0.2.0\n    Checking rdif-base v0.6.0\n    Checking rdif-intc v0.11.0\n    Checking arm-gic-driver v0.14.9 (/home/runner/check/batch_5/rcore-os/arm-gic-driver)\nerror[E0407]: method `set_eoi_mode` is not a member of trait `local::Interface`\n   --> src/version/v2.rs:104:5\n    |\n104 | /     fn set_eoi_mode(&self, b: bool) {\n105 | |         self.gicc()\n106 | |             .CTLR\n107 | |             .modify(GICC_CTLR::EOIMODENS.val(if b { 1 } else { 0 }));\n108 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nerror[E0407]: method `get_eoi_mode` is not a member of trait `local::Interface`\n   --> src/version/v2.rs:110:5\n    |\n110 | /     fn get_eoi_mode(&self) -> bool {\n111 | |         self.gicc().CTLR.is_set(GICC_CTLR::EOIMODENS)\n112 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nerror[E0407]: method `dir` is not a member of trait `local::Interface`\n   --> src/version/v2.rs:122:5\n    |\n122 | /     fn dir(&self, intid: IrqId) {\n123 | |         self.gicc().dir(intid.into());\n124 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nerror[E0407]: method `set_eoi_mode` is not a member of trait `local::Interface`\n   --> src/version/v3.rs:306:5\n    |\n306 | /     fn set_eoi_mode(&self, b: bool) {\n307 | |         let mut reg = cpu_read!(\"ICC_CTLR_EL1\");\n308 | |         if b {\n309 | |             reg |= ICC_CTLR_EL1_EOIMODE;\n...   |\n313 | |         cpu_write!(\"ICC_CTLR_EL1\", reg);\n314 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nerror[E0407]: method `get_eoi_mode` is not a member of trait `local::Interface`\n   --> src/version/v3.rs:316:5\n    |\n316 | /     fn get_eoi_mode(&self) -> bool {\n317 | |         let reg = cpu_read!(\"ICC_CTLR_EL1\");\n318 | |         (reg & ICC_CTLR_EL1_EOIMODE) != 0\n319 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nerror[E0407]: method `dir` is not a member of trait `local::Interface`\n   --> src/version/v3.rs:336:5\n    |\n336 | /     fn dir(&self, irq: IrqId) {\n337 | |         let intid: usize = irq.into();\n338 | |         cpu_write!(\"icc_dir_el1\", intid);\n339 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nFor more information about this error, try `rustc --explain E0407`.\nerror: could not compile `arm-gic-driver` (lib) due to 6 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=arm-gic-driver, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_5/rcore-os/arm-gic-driver\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-07-09 18:14:07.463236232 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\ntock-registers  0.9.0    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=arm-gic-driver, checker=SemverChecks\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_5/rcore-os/arm-gic-driver\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-07-09 18:13:53.239163113 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arm-gic-driver v0.14.9 (current)\nerror: running cargo-doc on crate 'arm-gic-driver' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling thiserror v2.0.12\n    Checking as-any v0.3.2\n    Checking cfg-if v1.0.1\n   Compiling once_cell v1.21.3\n    Checking tock-registers v0.9.0\n    Checking aarch64-cpu v10.0.0\n    Checking bitflags v2.9.1\n    Checking log v0.4.27\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling thiserror-impl v2.0.12\n   Compiling async-trait v0.1.88\n   Compiling enum_dispatch v0.3.13\n    Checking rdif-def v0.2.0\n    Checking rdif-base v0.6.0\n    Checking rdif-intc v0.11.0\n Documenting arm-gic-driver v0.14.9 (/home/runner/check/batch_5/rcore-os/arm-gic-driver)\nerror[E0407]: method `set_eoi_mode` is not a member of trait `local::Interface`\n   --> /home/runner/check/batch_5/rcore-os/arm-gic-driver/src/version/v2.rs:104:5\n    |\n104 | /     fn set_eoi_mode(&self, b: bool) {\n105 | |         self.gicc()\n106 | |             .CTLR\n107 | |             .modify(GICC_CTLR::EOIMODENS.val(if b { 1 } else { 0 }));\n108 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nerror[E0407]: method `get_eoi_mode` is not a member of trait `local::Interface`\n   --> /home/runner/check/batch_5/rcore-os/arm-gic-driver/src/version/v2.rs:110:5\n    |\n110 | /     fn get_eoi_mode(&self) -> bool {\n111 | |         self.gicc().CTLR.is_set(GICC_CTLR::EOIMODENS)\n112 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nerror[E0407]: method `dir` is not a member of trait `local::Interface`\n   --> /home/runner/check/batch_5/rcore-os/arm-gic-driver/src/version/v2.rs:122:5\n    |\n122 | /     fn dir(&self, intid: IrqId) {\n123 | |         self.gicc().dir(intid.into());\n124 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nerror[E0407]: method `set_eoi_mode` is not a member of trait `local::Interface`\n   --> /home/runner/check/batch_5/rcore-os/arm-gic-driver/src/version/v3.rs:306:5\n    |\n306 | /     fn set_eoi_mode(&self, b: bool) {\n307 | |         let mut reg = cpu_read!(\"ICC_CTLR_EL1\");\n308 | |         if b {\n309 | |             reg |= ICC_CTLR_EL1_EOIMODE;\n...   |\n313 | |         cpu_write!(\"ICC_CTLR_EL1\", reg);\n314 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nerror[E0407]: method `get_eoi_mode` is not a member of trait `local::Interface`\n   --> /home/runner/check/batch_5/rcore-os/arm-gic-driver/src/version/v3.rs:316:5\n    |\n316 | /     fn get_eoi_mode(&self) -> bool {\n317 | |         let reg = cpu_read!(\"ICC_CTLR_EL1\");\n318 | |         (reg & ICC_CTLR_EL1_EOIMODE) != 0\n319 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nerror[E0407]: method `dir` is not a member of trait `local::Interface`\n   --> /home/runner/check/batch_5/rcore-os/arm-gic-driver/src/version/v3.rs:336:5\n    |\n336 | /     fn dir(&self, irq: IrqId) {\n337 | |         let intid: usize = irq.into();\n338 | |         cpu_write!(\"icc_dir_el1\", intid);\n339 | |     }\n    | |_____^ not a member of trait `local::Interface`\n\nFor more information about this error, try `rustc --explain E0407`.\nerror: could not document `arm-gic-driver`\n\n-----\n\nerror: failed to build rustdoc for crate arm-gic-driver v0.14.9\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_5/rcore-os/arm-gic-driver &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arm-gic-driver v0.14.9\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "fdt-parser",
      "pkg": "dtb-tool",
      "count": 12,
      "raw_reports": [
        {
          "file": "dtb-tool/src/main.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Warn)": [
              "warning: variables can be used directly in the `format!` string\n  --> dtb-tool/src/main.rs:30:9\n   |\n30 |         writeln!(file, \"/memreserve/ {:?};\", region).unwrap();\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n   = note: `#[warn(clippy::uninlined_format_args)]` on by default\nhelp: change this to\n   |\n30 -         writeln!(file, \"/memreserve/ {:?};\", region).unwrap();\n30 +         writeln!(file, \"/memreserve/ {region:?};\").unwrap();\n   |\n\n",
              "warning: variables can be used directly in the `format!` string\n  --> dtb-tool/src/main.rs:38:13\n   |\n38 |             writeln!(file, \"{} -compatible: \", space).unwrap();\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n38 -             writeln!(file, \"{} -compatible: \", space).unwrap();\n38 +             writeln!(file, \"{space} -compatible: \").unwrap();\n   |\n\n",
              "warning: variables can be used directly in the `format!` string\n  --> dtb-tool/src/main.rs:45:13\n   |\n45 |             writeln!(file, \"{} - reg: \", space).unwrap();\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n45 -             writeln!(file, \"{} - reg: \", space).unwrap();\n45 +             writeln!(file, \"{space} - reg: \").unwrap();\n   |\n\n",
              "warning: variables can be used directly in the `format!` string\n  --> dtb-tool/src/main.rs:47:17\n   |\n47 |                 writeln!(file, \"{}     {:?}\", space, cell).unwrap();\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n47 -                 writeln!(file, \"{}     {:?}\", space, cell).unwrap();\n47 +                 writeln!(file, \"{space}     {cell:?}\").unwrap();\n   |\n\n"
            ]
          }
        },
        {
          "file": "fdt-parser/src/pci.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Warn)": [
              "warning: lifetime flowing from input to output with different syntax can be confusing\n  --> fdt-parser/src/pci.rs:25:19\n   |\n25 |     pub fn ranges(&self) -> FdtResult<impl Iterator<Item = PciRange> + 'a> {\n   |                   ^^^^^     ---------------------------------------------- the lifetime gets resolved as `'_`\n   |                   |\n   |                   this lifetime flows to the output\n   |\n   = note: `#[warn(mismatched_lifetime_syntaxes)]` on by default\nhelp: one option is to remove the lifetime for references and use the anonymous lifetime for paths\n   |\n25 |     pub fn ranges(&self) -> FdtResult<'_, impl Iterator<Item = PciRange> + 'a> {\n   |                                       +++\n\n",
              "warning: lifetime flowing from input to output with different syntax can be confusing\n  --> fdt-parser/src/pci.rs:37:9\n   |\n37 |         &self,\n   |         ^^^^^ this lifetime flows to the output\n...\n42 |     ) -> FdtResult<PciChildIrq<'a>> {\n   |          -------------------------- the lifetime gets resolved as `'_`\n   |\nhelp: one option is to remove the lifetime for references and use the anonymous lifetime for paths\n   |\n42 |     ) -> FdtResult<'_, PciChildIrq<'a>> {\n   |                    +++\n\n",
              "warning: lifetime flowing from input to output with different syntax can be confusing\n   --> fdt-parser/src/pci.rs:101:27\n    |\n101 |     fn interrupt_map_mask(&self) -> FdtResult<[u32; 4]> {\n    |                           ^^^^^     ------------------- the lifetime gets resolved as `'_`\n    |                           |\n    |                           this lifetime flows to the output\n    |\nhelp: one option is to remove the lifetime for references and use the anonymous lifetime for paths\n    |\n101 |     fn interrupt_map_mask(&self) -> FdtResult<'_, [u32; 4]> {\n    |                                               +++\n\n"
            ]
          }
        },
        {
          "file": "(virtual) geiger",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=dtb-tool, checker=Geiger\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_7/qclic/fdt-parser/dtb-tool\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2025-06-28 11:58:49.362119899 +08:00:00\nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#jiff-static@0.2.15 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219 \n     Removed 0 files\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking utf8parse v0.2.2\n    Checking memchr v2.7.5\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/utf8parse-1869fb7867dfc50c.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/build/proc-macro2-4b131a9cc84a5cde/build_script_build-4b131a9cc84a5cde.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/unicode_ident-1d1395cd7a8bd8da.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libutf8parse-1869fb7867dfc50c.rmeta\",\"emit\":\"metadata\"}\n    Checking anstyle-parse v0.2.7\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libunicode_ident-1d1395cd7a8bd8da.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libunicode_ident-1d1395cd7a8bd8da.rlib\",\"emit\":\"link\"}\n    Checking is_terminal_polyfill v1.70.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/anstyle_parse-3aac24250026291e.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/memchr-0b7acf02e45bee6d.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/is_terminal_polyfill-d6a1bd323f83db35.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libis_terminal_polyfill-d6a1bd323f83db35.rmeta\",\"emit\":\"metadata\"}\n    Checking regex-syntax v0.8.5\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libanstyle_parse-3aac24250026291e.rmeta\",\"emit\":\"metadata\"}\n    Checking colorchoice v1.0.4\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/colorchoice-3ce2363fd816ba66.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libcolorchoice-3ce2363fd816ba66.rmeta\",\"emit\":\"metadata\"}\n    Checking anstyle-query v1.1.3\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/build/proc-macro2-4b131a9cc84a5cde/build_script_build-4b131a9cc84a5cde\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/regex_syntax-3134acd8920b2c4e.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/anstyle_query-a26cc9e4eb527d3d.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libanstyle_query-a26cc9e4eb527d3d.rmeta\",\"emit\":\"metadata\"}\n    Checking anstyle v1.0.11\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/anstyle-bbf5e169356e7b19.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/proc_macro2-d52e1b0fd08ab4a5.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libanstyle-bbf5e169356e7b19.rmeta\",\"emit\":\"metadata\"}\n    Checking anstream v0.6.19\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/anstream-4d93ba2f50c9c83f.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libmemchr-0b7acf02e45bee6d.rmeta\",\"emit\":\"metadata\"}\n    Checking aho-corasick v1.1.3\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libanstream-4d93ba2f50c9c83f.rmeta\",\"emit\":\"metadata\"}\n   Compiling heck v0.5.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/aho_corasick-c7f4cc893cd6ddec.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/heck-20e948fc986d72b6.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libheck-20e948fc986d72b6.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libproc_macro2-d52e1b0fd08ab4a5.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libheck-20e948fc986d72b6.rlib\",\"emit\":\"link\"}\n    Checking strsim v0.11.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/strsim-fb4e44c253bc4641.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libstrsim-fb4e44c253bc4641.rmeta\",\"emit\":\"metadata\"}\n    Checking log v0.4.27\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/log-82805d0e90451053.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libproc_macro2-d52e1b0fd08ab4a5.rlib\",\"emit\":\"link\"}\n   Compiling quote v1.0.40\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/liblog-82805d0e90451053.rmeta\",\"emit\":\"metadata\"}\n    Checking clap_lex v0.7.5\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/quote-c8eb33032447793c.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/clap_lex-8ef99c14709910cf.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libregex_syntax-3134acd8920b2c4e.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libclap_lex-8ef99c14709910cf.rmeta\",\"emit\":\"metadata\"}\n    Checking jiff v0.2.15\n    Checking clap_builder v4.5.40\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libquote-c8eb33032447793c.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libquote-c8eb33032447793c.rlib\",\"emit\":\"link\"}\n   Compiling syn v2.0.104\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/clap_builder-6ca09b643a10e377.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libaho_corasick-c7f4cc893cd6ddec.rmeta\",\"emit\":\"metadata\"}\n    Checking regex-automata v0.4.9\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/jiff-9afeb1dc23a7e419.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/syn-fff2c145fa39ae1a.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/regex_automata-6f01846d16f4717d.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libclap_builder-6ca09b643a10e377.rmeta\",\"emit\":\"metadata\"}\n    Checking fdt-parser v0.4.17 (/home/runner/check/batch_7/qclic/fdt-parser/fdt-parser)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/fdt_parser-0cbcf60ded0258f4.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"struct `RawReg` is never constructed\",\"code\":{\"code\":\"dead_code\",\"explanation\":null},\"level\":\"warning\",\"spans\":[{\"file_name\":\"fdt-parser/src/define.rs\",\"byte_start\":1564,\"byte_end\":1570,\"line_start\":87,\"line_end\":87,\"column_start\":12,\"column_end\":18,\"is_primary\":true,\"text\":[{\"text\":\"pub struct RawReg<'a> {\",\"highlight_start\":12,\"highlight_end\":18}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"`#[warn(dead_code)]` on by default\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[33mwarning\\u001b[0m\\u001b[0m\\u001b[1m: struct `RawReg` is never constructed\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0mfdt-parser/src/define.rs:87:12\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m87\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0mpub struct RawReg<'a> {\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m            \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33m^^^^^^\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: `#[warn(dead_code)]` on by default\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"lifetime flowing from input to output with different syntax can be confusing\",\"code\":{\"code\":\"mismatched_lifetime_syntaxes\",\"explanation\":null},\"level\":\"warning\",\"spans\":[{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":580,\"byte_end\":585,\"line_start\":25,\"line_end\":25,\"column_start\":19,\"column_end\":24,\"is_primary\":true,\"text\":[{\"text\":\"    pub fn ranges(&self) -> FdtResult<impl Iterator<Item = PciRange> + 'a> {\",\"highlight_start\":19,\"highlight_end\":24}],\"label\":\"this lifetime flows to the output\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":590,\"byte_end\":636,\"line_start\":25,\"line_end\":25,\"column_start\":29,\"column_end\":75,\"is_primary\":false,\"text\":[{\"text\":\"    pub fn ranges(&self) -> FdtResult<impl Iterator<Item = PciRange> + 'a> {\",\"highlight_start\":29,\"highlight_end\":75}],\"label\":\"the lifetime gets resolved as `'_`\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"`#[warn(mismatched_lifetime_syntaxes)]` on by default\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"one option is to remove the lifetime for references and use the anonymous lifetime for paths\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":600,\"byte_end\":600,\"line_start\":25,\"line_end\":25,\"column_start\":39,\"column_end\":39,\"is_primary\":true,\"text\":[{\"text\":\"    pub fn ranges(&self) -> FdtResult<impl Iterator<Item = PciRange> + 'a> {\",\"highlight_start\":39,\"highlight_end\":39}],\"label\":null,\"suggested_replacement\":\"'_, \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"one option is to consistently use `'_`\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":581,\"byte_end\":581,\"line_start\":25,\"line_end\":25,\"column_start\":20,\"column_end\":20,\"is_primary\":true,\"text\":[{\"text\":\"    pub fn ranges(&self) -> FdtResult<impl Iterator<Item = PciRange> + 'a> {\",\"highlight_start\":20,\"highlight_end\":20}],\"label\":null,\"suggested_replacement\":\"'_ \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null},{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":600,\"byte_end\":600,\"line_start\":25,\"line_end\":25,\"column_start\":39,\"column_end\":39,\"is_primary\":true,\"text\":[{\"text\":\"    pub fn ranges(&self) -> FdtResult<impl Iterator<Item = PciRange> + 'a> {\",\"highlight_start\":39,\"highlight_end\":39}],\"label\":null,\"suggested_replacement\":\"'_, \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[33mwarning\\u001b[0m\\u001b[0m\\u001b[1m: lifetime flowing from input to output with different syntax can be confusing\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0mfdt-parser/src/pci.rs:25:19\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m25\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m    pub fn ranges(&self) -> FdtResult<impl Iterator<Item = PciRange> + 'a> {\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33m^^^^^\\u001b[0m\\u001b[0m     \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m----------------------------------------------\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12mthe lifetime gets resolved as `'_`\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33m|\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33mthis lifetime flows to the output\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: `#[warn(mismatched_lifetime_syntaxes)]` on by default\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: one option is to remove the lifetime for references and use the anonymous lifetime for paths\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m25\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0m    pub fn ranges(&self) -> FdtResult<\\u001b[0m\\u001b[0m\\u001b[38;5;10m'_, \\u001b[0m\\u001b[0mimpl Iterator<Item = PciRange> + 'a> {\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                                       \\u001b[0m\\u001b[0m\\u001b[38;5;10m+++\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"lifetime flowing from input to output with different syntax can be confusing\",\"code\":{\"code\":\"mismatched_lifetime_syntaxes\",\"explanation\":null},\"level\":\"warning\",\"spans\":[{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":875,\"byte_end\":880,\"line_start\":37,\"line_end\":37,\"column_start\":9,\"column_end\":14,\"is_primary\":true,\"text\":[{\"text\":\"        &self,\",\"highlight_start\":9,\"highlight_end\":14}],\"label\":\"this lifetime flows to the output\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":968,\"byte_end\":994,\"line_start\":42,\"line_end\":42,\"column_start\":10,\"column_end\":36,\"is_primary\":false,\"text\":[{\"text\":\"    ) -> FdtResult<PciChildIrq<'a>> {\",\"highlight_start\":10,\"highlight_end\":36}],\"label\":\"the lifetime gets resolved as `'_`\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"one option is to remove the lifetime for references and use the anonymous lifetime for paths\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":978,\"byte_end\":978,\"line_start\":42,\"line_end\":42,\"column_start\":20,\"column_end\":20,\"is_primary\":true,\"text\":[{\"text\":\"    ) -> FdtResult<PciChildIrq<'a>> {\",\"highlight_start\":20,\"highlight_end\":20}],\"label\":null,\"suggested_replacement\":\"'_, \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"one option is to consistently use `'_`\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":876,\"byte_end\":876,\"line_start\":37,\"line_end\":37,\"column_start\":10,\"column_end\":10,\"is_primary\":true,\"text\":[{\"text\":\"        &self,\",\"highlight_start\":10,\"highlight_end\":10}],\"label\":null,\"suggested_replacement\":\"'_ \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null},{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":978,\"byte_end\":978,\"line_start\":42,\"line_end\":42,\"column_start\":20,\"column_end\":20,\"is_primary\":true,\"text\":[{\"text\":\"    ) -> FdtResult<PciChildIrq<'a>> {\",\"highlight_start\":20,\"highlight_end\":20}],\"label\":null,\"suggested_replacement\":\"'_, \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[33mwarning\\u001b[0m\\u001b[0m\\u001b[1m: lifetime flowing from input to output with different syntax can be confusing\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0mfdt-parser/src/pci.rs:37:9\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m37\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m        &self,\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m         \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33m^^^^^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33mthis lifetime flows to the output\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m...\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m42\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m    ) -> FdtResult<PciChildIrq<'a>> {\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m          \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--------------------------\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12mthe lifetime gets resolved as `'_`\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: one option is to remove the lifetime for references and use the anonymous lifetime for paths\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m42\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0m    ) -> FdtResult<\\u001b[0m\\u001b[0m\\u001b[38;5;10m'_, \\u001b[0m\\u001b[0mPciChildIrq<'a>> {\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                    \\u001b[0m\\u001b[0m\\u001b[38;5;10m+++\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"lifetime flowing from input to output with different syntax can be confusing\",\"code\":{\"code\":\"mismatched_lifetime_syntaxes\",\"explanation\":null},\"level\":\"warning\",\"spans\":[{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":2792,\"byte_end\":2797,\"line_start\":101,\"line_end\":101,\"column_start\":27,\"column_end\":32,\"is_primary\":true,\"text\":[{\"text\":\"    fn interrupt_map_mask(&self) -> FdtResult<[u32; 4]> {\",\"highlight_start\":27,\"highlight_end\":32}],\"label\":\"this lifetime flows to the output\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":2802,\"byte_end\":2821,\"line_start\":101,\"line_end\":101,\"column_start\":37,\"column_end\":56,\"is_primary\":false,\"text\":[{\"text\":\"    fn interrupt_map_mask(&self) -> FdtResult<[u32; 4]> {\",\"highlight_start\":37,\"highlight_end\":56}],\"label\":\"the lifetime gets resolved as `'_`\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"one option is to remove the lifetime for references and use the anonymous lifetime for paths\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":2812,\"byte_end\":2812,\"line_start\":101,\"line_end\":101,\"column_start\":47,\"column_end\":47,\"is_primary\":true,\"text\":[{\"text\":\"    fn interrupt_map_mask(&self) -> FdtResult<[u32; 4]> {\",\"highlight_start\":47,\"highlight_end\":47}],\"label\":null,\"suggested_replacement\":\"'_, \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"one option is to consistently use `'_`\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":2793,\"byte_end\":2793,\"line_start\":101,\"line_end\":101,\"column_start\":28,\"column_end\":28,\"is_primary\":true,\"text\":[{\"text\":\"    fn interrupt_map_mask(&self) -> FdtResult<[u32; 4]> {\",\"highlight_start\":28,\"highlight_end\":28}],\"label\":null,\"suggested_replacement\":\"'_ \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null},{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":2812,\"byte_end\":2812,\"line_start\":101,\"line_end\":101,\"column_start\":47,\"column_end\":47,\"is_primary\":true,\"text\":[{\"text\":\"    fn interrupt_map_mask(&self) -> FdtResult<[u32; 4]> {\",\"highlight_start\":47,\"highlight_end\":47}],\"label\":null,\"suggested_replacement\":\"'_, \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[33mwarning\\u001b[0m\\u001b[0m\\u001b[1m: lifetime flowing from input to output with different syntax can be confusing\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0mfdt-parser/src/pci.rs:101:27\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m101\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m    fn interrupt_map_mask(&self) -> FdtResult<[u32; 4]> {\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                           \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33m^^^^^\\u001b[0m\\u001b[0m     \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m-------------------\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12mthe lifetime gets resolved as `'_`\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                           \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33m|\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                           \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33mthis lifetime flows to the output\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: one option is to remove the lifetime for references and use the anonymous lifetime for paths\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m101\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0m    fn interrupt_map_mask(&self) -> FdtResult<\\u001b[0m\\u001b[0m\\u001b[38;5;10m'_, \\u001b[0m\\u001b[0m[u32; 4]> {\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                                               \\u001b[0m\\u001b[0m\\u001b[38;5;10m+++\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libfdt_parser-0cbcf60ded0258f4.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"4 warnings emitted\",\"code\":null,\"level\":\"warning\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[33mwarning\\u001b[0m\\u001b[0m\\u001b[1m: 4 warnings emitted\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libregex_automata-6f01846d16f4717d.rmeta\",\"emit\":\"metadata\"}\n    Checking regex v1.11.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/regex-31e1d23f90fdfa85.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libregex-31e1d23f90fdfa85.rmeta\",\"emit\":\"metadata\"}\n    Checking env_filter v0.1.3\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/env_filter-9f5b773ce7c03cf3.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libenv_filter-9f5b773ce7c03cf3.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libsyn-fff2c145fa39ae1a.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libjiff-9afeb1dc23a7e419.rmeta\",\"emit\":\"metadata\"}\n    Checking env_logger v0.11.8\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/env_logger-c209d9a25696d15e.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libsyn-fff2c145fa39ae1a.rlib\",\"emit\":\"link\"}\n   Compiling clap_derive v4.5.40\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libenv_logger-c209d9a25696d15e.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/clap_derive-03cc4e85e35be99b.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libclap_derive-03cc4e85e35be99b.so\",\"emit\":\"link\"}\n    Checking clap v4.5.40\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/clap-fdd13b85f8481ef7.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libclap-fdd13b85f8481ef7.rmeta\",\"emit\":\"metadata\"}\n    Checking dtb-tool v0.1.0 (/home/runner/check/batch_7/qclic/fdt-parser/dtb-tool)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/dtb_tool-078d911688b1e98f.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libdtb_tool-078d911688b1e98f.rmeta\",\"emit\":\"metadata\"}\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 4.76s\n    Scanning done\nWARNING: Dependency file was never scanned: /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jiff-0.2.15/COMPARE.md\nWARNING: Dependency file was never scanned: /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clap_builder-4.5.40/README.md\nWARNING: Dependency file was never scanned: /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clap_derive-4.5.40/README.md\nWARNING: Dependency file was never scanned: /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jiff-0.2.15/PLATFORM.md\nWARNING: Dependency file was never scanned: /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clap-4.5.40/examples/demo.md\nWARNING: Dependency file was never scanned: /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jiff-0.2.15/CHANGELOG.md\nWARNING: Dependency file was never scanned: /home/runner/check/batch_7/qclic/fdt-parser/fdt-parser/README.md\nWARNING: Dependency file was never scanned: /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jiff-0.2.15/DESIGN.md\nerror: Found 8 warnings\n"
            ]
          }
        },
        {
          "file": "[Geiger] Unsafe code statistics",
          "features": "",
          "count": 1,
          "kinds": {
            "Geiger": [
              "pkg=dtb-tool, checker=Geiger\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_7/qclic/fdt-parser/dtb-tool\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\ntimestamp=2025-06-28 11:59:02.709518139 +08:00:00\n\n\nMetric output format: x/y\n    x = unsafe code used by the build\n    y = total unsafe code found in the crate\n\nSymbols:\n    :) = No `unsafe` usage found, declares #![forbid(unsafe_code)]\n    ?  = No `unsafe` usage found, missing #![forbid(unsafe_code)]\n    !  = `unsafe` usage found\n\nFunctions  Expressions  Impls  Traits  Methods  Dependency\n\n0/0        0/0          0/0    0/0     0/0      ?  dtb-tool 0.1.0\n0/0        15/15        0/0    0/0     0/0      !  |-- fdt-parser 0.4.17\n0/0        0/0          0/0    0/0     0/0      ?  |-- clap 4.5.40\n0/0        0/0          0/0    0/0     0/0      :) |   |-- clap_builder 4.5.40\n1/1        7/7          0/0    0/0     0/0      !  |   |   |-- anstream 0.6.19\n0/0        17/17        0/0    0/0     0/0      !  |   |   |   |-- anstyle-parse 0.2.7\n0/0        1/1          0/0    0/0     0/0      !  |   |   |   |   `-- utf8parse 0.2.2\n0/0        22/22        0/0    0/0     0/0      !  |   |   |   |-- anstyle-query 1.1.3\n0/0        6/6          0/0    0/0     0/0      !  |   |   |   |-- anstyle 1.0.11\n0/0        0/0          0/0    0/0     0/0      ?  |   |   |   |-- colorchoice 1.0.4\n0/0        0/0          0/0    0/0     0/0      ?  |   |   |   |-- is_terminal_polyfill 1.70.1\n0/0        1/1          0/0    0/0     0/0      !  |   |   |   `-- utf8parse 0.2.2\n0/0        6/6          0/0    0/0     0/0      !  |   |   |-- anstyle 1.0.11\n1/1        15/15        0/0    0/0     0/0      !  |   |   |-- clap_lex 0.7.5\n0/0        0/0          0/0    0/0     0/0      :) |   |   `-- strsim 0.11.1\n0/0        0/0          0/0    0/0     0/0      :) |   `-- clap_derive 4.5.40\n0/0        6/6          0/0    0/0     0/0      !  |       |-- anstyle 1.0.11\n0/0        0/0          0/0    0/0     0/0      :) |       |-- heck 0.5.0\n0/0        14/14        0/0    0/0     3/3      !  |       |-- proc-macro2 1.0.95\n0/0        4/4          0/0    0/0     0/0      !  |       |   `-- unicode-ident 1.0.18\n0/0        0/0          0/0    0/0     0/0      ?  |       |-- quote 1.0.40\n0/0        14/14        0/0    0/0     3/3      !  |       |   `-- proc-macro2 1.0.95\n0/0        88/88        3/3    0/0     2/2      !  |       `-- syn 2.0.104\n0/0        14/14        0/0    0/0     3/3      !  |           |-- proc-macro2 1.0.95\n0/0        0/0          0/0    0/0     0/0      ?  |           |-- quote 1.0.40\n0/0        4/4          0/0    0/0     0/0      !  |           `-- unicode-ident 1.0.18\n0/0        0/0          0/0    0/0     0/0      ?  |-- env_logger 0.11.8\n1/1        7/7          0/0    0/0     0/0      !  |   |-- anstream 0.6.19\n0/0        6/6          0/0    0/0     0/0      !  |   |-- anstyle 1.0.11\n0/0        0/0          0/0    0/0     0/0      ?  |   |-- env_filter 0.1.3\n2/2        18/18        1/1    0/0     0/0      !  |   |   |-- log 0.4.27\n0/0        0/0          0/1    0/0     0/0      ?  |   |   `-- regex 1.11.1\n8/8        997/997      5/5    1/1     86/86    !  |   |       |-- aho-corasick 1.1.3\n2/2        18/18        1/1    0/0     0/0      !  |   |       |   |-- log 0.4.27\n27/41      1973/2421    2/2    0/0     109/147  !  |   |       |   `-- memchr 2.7.5\n2/2        18/18        1/1    0/0     0/0      !  |   |       |       `-- log 0.4.27\n27/41      1973/2421    2/2    0/0     109/147  !  |   |       |-- memchr 2.7.5\n0/0        83/638       4/7    0/1     1/11     !  |   |       |-- regex-automata 0.4.9\n8/8        997/997      5/5    1/1     86/86    !  |   |       |   |-- aho-corasick 1.1.3\n2/2        18/18        1/1    0/0     0/0      !  |   |       |   |-- log 0.4.27\n27/41      1973/2421    2/2    0/0     109/147  !  |   |       |   |-- memchr 2.7.5\n0/0        0/0          0/0    0/0     0/0      :) |   |       |   `-- regex-syntax 0.8.5\n0/0        0/0          0/0    0/0     0/0      :) |   |       `-- regex-syntax 0.8.5\n0/2        61/102       2/4    0/0     6/6      !  |   |-- jiff 0.2.15\n2/2        18/18        1/1    0/0     0/0      !  |   |   `-- log 0.4.27\n2/2        18/18        1/1    0/0     0/0      !  |   `-- log 0.4.27\n2/2        18/18        1/1    0/0     0/0      !  `-- log 0.4.27\n\n39/55      3321/4365    17/23  1/2     207/255\n\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T03:58:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T03:58:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-06-28T03:58:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T03:58:28Z WARN  lockbud::callbacks] crate env_filter contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=dtb-tool, checker=Udeps\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_7/qclic/fdt-parser/dtb-tool\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-28 11:59:16.912141443 +08:00:00\n\n\nstdout:\nunused dependencies:\n`dtb-tool v0.1.0 (/home/runner/check/batch_7/qclic/fdt-parser/dtb-tool)`\n└─── dependencies\n     ├─── \"env_logger\"\n     └─── \"log\"\nNote: These dependencies might be used by other targets.\n      To find dependencies that are not used by any target, enable `--all-targets`.\nNote: They might be false-positive.\n      For example, `cargo-udeps` cannot detect usage of crates that are only used in doc-tests.\n      To ignore some dependencies, write `package.metadata.cargo-udeps.ignore` in Cargo.toml.\n\nstderr:\n   Compiling proc-macro2 v1.0.95\n    Checking utf8parse v0.2.2\n   Compiling unicode-ident v1.0.18\n    Checking memchr v2.7.5\n    Checking anstyle-parse v0.2.7\n    Checking colorchoice v1.0.4\n    Checking is_terminal_polyfill v1.70.1\n    Checking anstyle v1.0.11\n    Checking anstyle-query v1.1.3\n    Checking regex-syntax v0.8.5\n    Checking anstream v0.6.19\n    Checking aho-corasick v1.1.3\n   Compiling heck v0.5.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n    Checking log v0.4.27\n    Checking clap_lex v0.7.5\n    Checking regex-automata v0.4.9\n    Checking strsim v0.11.1\n    Checking jiff v0.2.15\n    Checking clap_builder v4.5.40\n    Checking fdt-parser v0.4.17 (/home/runner/check/batch_7/qclic/fdt-parser/fdt-parser)\n    Checking regex v1.11.1\nwarning: struct `RawReg` is never constructed\n  --> fdt-parser/src/define.rs:87:12\n   |\n87 | pub struct RawReg<'a> {\n   |            ^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\nwarning: lifetime flowing from input to output with different syntax can be confusing\n  --> fdt-parser/src/pci.rs:25:19\n   |\n25 |     pub fn ranges(&self) -> FdtResult<impl Iterator<Item = PciRange> + 'a> {\n   |                   ^^^^^     ---------------------------------------------- the lifetime gets resolved as `'_`\n   |                   |\n   |                   this lifetime flows to the output\n   |\n   = note: `#[warn(mismatched_lifetime_syntaxes)]` on by default\nhelp: one option is to remove the lifetime for references and use the anonymous lifetime for paths\n   |\n25 |     pub fn ranges(&self) -> FdtResult<'_, impl Iterator<Item = PciRange> + 'a> {\n   |                                       +++\n\nwarning: lifetime flowing from input to output with different syntax can be confusing\n  --> fdt-parser/src/pci.rs:37:9\n   |\n37 |         &self,\n   |         ^^^^^ this lifetime flows to the output\n...\n42 |     ) -> FdtResult<PciChildIrq<'a>> {\n   |          -------------------------- the lifetime gets resolved as `'_`\n   |\nhelp: one option is to remove the lifetime for references and use the anonymous lifetime for paths\n   |\n42 |     ) -> FdtResult<'_, PciChildIrq<'a>> {\n   |                    +++\n\nwarning: lifetime flowing from input to output with different syntax can be confusing\n   --> fdt-parser/src/pci.rs:101:27\n    |\n101 |     fn interrupt_map_mask(&self) -> FdtResult<[u32; 4]> {\n    |                           ^^^^^     ------------------- the lifetime gets resolved as `'_`\n    |                           |\n    |                           this lifetime flows to the output\n    |\nhelp: one option is to remove the lifetime for references and use the anonymous lifetime for paths\n    |\n101 |     fn interrupt_map_mask(&self) -> FdtResult<'_, [u32; 4]> {\n    |                                               +++\n\nwarning: `fdt-parser` (lib) generated 4 warnings\n    Checking env_filter v0.1.3\n    Checking env_logger v0.11.8\n   Compiling clap_derive v4.5.40\n    Checking clap v4.5.40\n    Checking dtb-tool v0.1.0 (/home/runner/check/batch_7/qclic/fdt-parser/dtb-tool)\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 5.13s\ninfo: Loading depinfo from \"/home/runner/check/batch_7/qclic/fdt-parser/target/x86_64-unknown-linux-gnu/debug/deps/fdt_parser-b2ab7c35d36fc55d.d\"\ninfo: Loading depinfo from \"/home/runner/check/batch_7/qclic/fdt-parser/target/x86_64-unknown-linux-gnu/debug/deps/dtb_tool-679f7d7913a328df.d\"\n"
            ]
          }
        },
        {
          "file": "fdt-parser/src/define.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: struct `RawReg` is never constructed\n  --> fdt-parser/src/define.rs:87:12\n   |\n87 | pub struct RawReg<'a> {\n   |            ^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "fdt-parser",
      "pkg": "fdt-parser",
      "count": 10,
      "raw_reports": [
        {
          "file": "fdt-parser/src/define.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Warn)": [
              "warning: struct `RawReg` is never constructed\n  --> fdt-parser/src/define.rs:87:12\n   |\n87 | pub struct RawReg<'a> {\n   |            ^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> fdt-parser/src/define.rs:235:25\n    |\n235 |             f.write_fmt(format_args!(\"{:#x}>\", s))\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n    = note: `#[warn(clippy::uninlined_format_args)]` on by default\nhelp: change this to\n    |\n235 -             f.write_fmt(format_args!(\"{:#x}>\", s))\n235 +             f.write_fmt(format_args!(\"{s:#x}>\"))\n    |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> fdt-parser/src/define.rs:265:25\n    |\n265 |             f.write_fmt(format_args!(\"{:#x} \", addr))?;\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n265 -             f.write_fmt(format_args!(\"{:#x} \", addr))?;\n265 +             f.write_fmt(format_args!(\"{addr:#x} \"))?;\n    |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> fdt-parser/src/define.rs:269:25\n    |\n269 |             f.write_fmt(format_args!(\"{:#x} \", addr))?;\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n269 -             f.write_fmt(format_args!(\"{:#x} \", addr))?;\n269 +             f.write_fmt(format_args!(\"{addr:#x} \"))?;\n    |\n\n"
            ]
          }
        },
        {
          "file": "fdt-parser/src/pci.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Warn)": [
              "warning: lifetime flowing from input to output with different syntax can be confusing\n  --> fdt-parser/src/pci.rs:25:19\n   |\n25 |     pub fn ranges(&self) -> FdtResult<impl Iterator<Item = PciRange> + 'a> {\n   |                   ^^^^^     ---------------------------------------------- the lifetime gets resolved as `'_`\n   |                   |\n   |                   this lifetime flows to the output\n   |\n   = note: `#[warn(mismatched_lifetime_syntaxes)]` on by default\nhelp: one option is to remove the lifetime for references and use the anonymous lifetime for paths\n   |\n25 |     pub fn ranges(&self) -> FdtResult<'_, impl Iterator<Item = PciRange> + 'a> {\n   |                                       +++\n\n",
              "warning: lifetime flowing from input to output with different syntax can be confusing\n  --> fdt-parser/src/pci.rs:37:9\n   |\n37 |         &self,\n   |         ^^^^^ this lifetime flows to the output\n...\n42 |     ) -> FdtResult<PciChildIrq<'a>> {\n   |          -------------------------- the lifetime gets resolved as `'_`\n   |\nhelp: one option is to remove the lifetime for references and use the anonymous lifetime for paths\n   |\n42 |     ) -> FdtResult<'_, PciChildIrq<'a>> {\n   |                    +++\n\n",
              "warning: lifetime flowing from input to output with different syntax can be confusing\n   --> fdt-parser/src/pci.rs:101:27\n    |\n101 |     fn interrupt_map_mask(&self) -> FdtResult<[u32; 4]> {\n    |                           ^^^^^     ------------------- the lifetime gets resolved as `'_`\n    |                           |\n    |                           this lifetime flows to the output\n    |\nhelp: one option is to remove the lifetime for references and use the anonymous lifetime for paths\n    |\n101 |     fn interrupt_map_mask(&self) -> FdtResult<'_, [u32; 4]> {\n    |                                               +++\n\n"
            ]
          }
        },
        {
          "file": "(virtual) geiger",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=fdt-parser, checker=Geiger\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_7/qclic/fdt-parser/fdt-parser\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2025-06-28 11:59:02.714518183 +08:00:00\n     Removed 186 files, 43.1MiB total\n    Checking fdt-parser v0.4.17 (/home/runner/check/batch_7/qclic/fdt-parser/fdt-parser)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/fdt_parser-0cbcf60ded0258f4.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"struct `RawReg` is never constructed\",\"code\":{\"code\":\"dead_code\",\"explanation\":null},\"level\":\"warning\",\"spans\":[{\"file_name\":\"fdt-parser/src/define.rs\",\"byte_start\":1564,\"byte_end\":1570,\"line_start\":87,\"line_end\":87,\"column_start\":12,\"column_end\":18,\"is_primary\":true,\"text\":[{\"text\":\"pub struct RawReg<'a> {\",\"highlight_start\":12,\"highlight_end\":18}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"`#[warn(dead_code)]` on by default\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[33mwarning\\u001b[0m\\u001b[0m\\u001b[1m: struct `RawReg` is never constructed\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0mfdt-parser/src/define.rs:87:12\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m87\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0mpub struct RawReg<'a> {\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m            \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33m^^^^^^\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: `#[warn(dead_code)]` on by default\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"lifetime flowing from input to output with different syntax can be confusing\",\"code\":{\"code\":\"mismatched_lifetime_syntaxes\",\"explanation\":null},\"level\":\"warning\",\"spans\":[{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":580,\"byte_end\":585,\"line_start\":25,\"line_end\":25,\"column_start\":19,\"column_end\":24,\"is_primary\":true,\"text\":[{\"text\":\"    pub fn ranges(&self) -> FdtResult<impl Iterator<Item = PciRange> + 'a> {\",\"highlight_start\":19,\"highlight_end\":24}],\"label\":\"this lifetime flows to the output\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":590,\"byte_end\":636,\"line_start\":25,\"line_end\":25,\"column_start\":29,\"column_end\":75,\"is_primary\":false,\"text\":[{\"text\":\"    pub fn ranges(&self) -> FdtResult<impl Iterator<Item = PciRange> + 'a> {\",\"highlight_start\":29,\"highlight_end\":75}],\"label\":\"the lifetime gets resolved as `'_`\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"`#[warn(mismatched_lifetime_syntaxes)]` on by default\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"one option is to remove the lifetime for references and use the anonymous lifetime for paths\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":600,\"byte_end\":600,\"line_start\":25,\"line_end\":25,\"column_start\":39,\"column_end\":39,\"is_primary\":true,\"text\":[{\"text\":\"    pub fn ranges(&self) -> FdtResult<impl Iterator<Item = PciRange> + 'a> {\",\"highlight_start\":39,\"highlight_end\":39}],\"label\":null,\"suggested_replacement\":\"'_, \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"one option is to consistently use `'_`\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":581,\"byte_end\":581,\"line_start\":25,\"line_end\":25,\"column_start\":20,\"column_end\":20,\"is_primary\":true,\"text\":[{\"text\":\"    pub fn ranges(&self) -> FdtResult<impl Iterator<Item = PciRange> + 'a> {\",\"highlight_start\":20,\"highlight_end\":20}],\"label\":null,\"suggested_replacement\":\"'_ \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null},{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":600,\"byte_end\":600,\"line_start\":25,\"line_end\":25,\"column_start\":39,\"column_end\":39,\"is_primary\":true,\"text\":[{\"text\":\"    pub fn ranges(&self) -> FdtResult<impl Iterator<Item = PciRange> + 'a> {\",\"highlight_start\":39,\"highlight_end\":39}],\"label\":null,\"suggested_replacement\":\"'_, \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[33mwarning\\u001b[0m\\u001b[0m\\u001b[1m: lifetime flowing from input to output with different syntax can be confusing\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0mfdt-parser/src/pci.rs:25:19\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m25\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m    pub fn ranges(&self) -> FdtResult<impl Iterator<Item = PciRange> + 'a> {\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33m^^^^^\\u001b[0m\\u001b[0m     \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m----------------------------------------------\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12mthe lifetime gets resolved as `'_`\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33m|\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33mthis lifetime flows to the output\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: `#[warn(mismatched_lifetime_syntaxes)]` on by default\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: one option is to remove the lifetime for references and use the anonymous lifetime for paths\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m25\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0m    pub fn ranges(&self) -> FdtResult<\\u001b[0m\\u001b[0m\\u001b[38;5;10m'_, \\u001b[0m\\u001b[0mimpl Iterator<Item = PciRange> + 'a> {\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                                       \\u001b[0m\\u001b[0m\\u001b[38;5;10m+++\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"lifetime flowing from input to output with different syntax can be confusing\",\"code\":{\"code\":\"mismatched_lifetime_syntaxes\",\"explanation\":null},\"level\":\"warning\",\"spans\":[{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":875,\"byte_end\":880,\"line_start\":37,\"line_end\":37,\"column_start\":9,\"column_end\":14,\"is_primary\":true,\"text\":[{\"text\":\"        &self,\",\"highlight_start\":9,\"highlight_end\":14}],\"label\":\"this lifetime flows to the output\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":968,\"byte_end\":994,\"line_start\":42,\"line_end\":42,\"column_start\":10,\"column_end\":36,\"is_primary\":false,\"text\":[{\"text\":\"    ) -> FdtResult<PciChildIrq<'a>> {\",\"highlight_start\":10,\"highlight_end\":36}],\"label\":\"the lifetime gets resolved as `'_`\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"one option is to remove the lifetime for references and use the anonymous lifetime for paths\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":978,\"byte_end\":978,\"line_start\":42,\"line_end\":42,\"column_start\":20,\"column_end\":20,\"is_primary\":true,\"text\":[{\"text\":\"    ) -> FdtResult<PciChildIrq<'a>> {\",\"highlight_start\":20,\"highlight_end\":20}],\"label\":null,\"suggested_replacement\":\"'_, \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"one option is to consistently use `'_`\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":876,\"byte_end\":876,\"line_start\":37,\"line_end\":37,\"column_start\":10,\"column_end\":10,\"is_primary\":true,\"text\":[{\"text\":\"        &self,\",\"highlight_start\":10,\"highlight_end\":10}],\"label\":null,\"suggested_replacement\":\"'_ \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null},{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":978,\"byte_end\":978,\"line_start\":42,\"line_end\":42,\"column_start\":20,\"column_end\":20,\"is_primary\":true,\"text\":[{\"text\":\"    ) -> FdtResult<PciChildIrq<'a>> {\",\"highlight_start\":20,\"highlight_end\":20}],\"label\":null,\"suggested_replacement\":\"'_, \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[33mwarning\\u001b[0m\\u001b[0m\\u001b[1m: lifetime flowing from input to output with different syntax can be confusing\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0mfdt-parser/src/pci.rs:37:9\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m37\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m        &self,\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m         \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33m^^^^^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33mthis lifetime flows to the output\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m...\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m42\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m    ) -> FdtResult<PciChildIrq<'a>> {\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m          \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--------------------------\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12mthe lifetime gets resolved as `'_`\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: one option is to remove the lifetime for references and use the anonymous lifetime for paths\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m42\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0m    ) -> FdtResult<\\u001b[0m\\u001b[0m\\u001b[38;5;10m'_, \\u001b[0m\\u001b[0mPciChildIrq<'a>> {\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                    \\u001b[0m\\u001b[0m\\u001b[38;5;10m+++\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"lifetime flowing from input to output with different syntax can be confusing\",\"code\":{\"code\":\"mismatched_lifetime_syntaxes\",\"explanation\":null},\"level\":\"warning\",\"spans\":[{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":2792,\"byte_end\":2797,\"line_start\":101,\"line_end\":101,\"column_start\":27,\"column_end\":32,\"is_primary\":true,\"text\":[{\"text\":\"    fn interrupt_map_mask(&self) -> FdtResult<[u32; 4]> {\",\"highlight_start\":27,\"highlight_end\":32}],\"label\":\"this lifetime flows to the output\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":2802,\"byte_end\":2821,\"line_start\":101,\"line_end\":101,\"column_start\":37,\"column_end\":56,\"is_primary\":false,\"text\":[{\"text\":\"    fn interrupt_map_mask(&self) -> FdtResult<[u32; 4]> {\",\"highlight_start\":37,\"highlight_end\":56}],\"label\":\"the lifetime gets resolved as `'_`\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"one option is to remove the lifetime for references and use the anonymous lifetime for paths\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":2812,\"byte_end\":2812,\"line_start\":101,\"line_end\":101,\"column_start\":47,\"column_end\":47,\"is_primary\":true,\"text\":[{\"text\":\"    fn interrupt_map_mask(&self) -> FdtResult<[u32; 4]> {\",\"highlight_start\":47,\"highlight_end\":47}],\"label\":null,\"suggested_replacement\":\"'_, \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"one option is to consistently use `'_`\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":2793,\"byte_end\":2793,\"line_start\":101,\"line_end\":101,\"column_start\":28,\"column_end\":28,\"is_primary\":true,\"text\":[{\"text\":\"    fn interrupt_map_mask(&self) -> FdtResult<[u32; 4]> {\",\"highlight_start\":28,\"highlight_end\":28}],\"label\":null,\"suggested_replacement\":\"'_ \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null},{\"file_name\":\"fdt-parser/src/pci.rs\",\"byte_start\":2812,\"byte_end\":2812,\"line_start\":101,\"line_end\":101,\"column_start\":47,\"column_end\":47,\"is_primary\":true,\"text\":[{\"text\":\"    fn interrupt_map_mask(&self) -> FdtResult<[u32; 4]> {\",\"highlight_start\":47,\"highlight_end\":47}],\"label\":null,\"suggested_replacement\":\"'_, \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[33mwarning\\u001b[0m\\u001b[0m\\u001b[1m: lifetime flowing from input to output with different syntax can be confusing\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0mfdt-parser/src/pci.rs:101:27\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m101\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m    fn interrupt_map_mask(&self) -> FdtResult<[u32; 4]> {\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                           \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33m^^^^^\\u001b[0m\\u001b[0m     \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m-------------------\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12mthe lifetime gets resolved as `'_`\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                           \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33m|\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                           \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33mthis lifetime flows to the output\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: one option is to remove the lifetime for references and use the anonymous lifetime for paths\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m101\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0m    fn interrupt_map_mask(&self) -> FdtResult<\\u001b[0m\\u001b[0m\\u001b[38;5;10m'_, \\u001b[0m\\u001b[0m[u32; 4]> {\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                                               \\u001b[0m\\u001b[0m\\u001b[38;5;10m+++\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps/libfdt_parser-0cbcf60ded0258f4.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"4 warnings emitted\",\"code\":null,\"level\":\"warning\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[33mwarning\\u001b[0m\\u001b[0m\\u001b[1m: 4 warnings emitted\\u001b[0m\\n\\n\"}\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.40s\n    Scanning done\nWARNING: Dependency file was never scanned: /home/runner/check/batch_7/qclic/fdt-parser/fdt-parser/README.md\nerror: Found 1 warnings\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=fdt-parser, checker=Mirai\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_7/qclic/fdt-parser/fdt-parser\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-06-28 11:57:15.33295875 +08:00:00\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.05s\n   Compiling memchr v2.7.5\n   Compiling regex-syntax v0.8.5\n   Compiling utf8parse v0.2.2\n   Compiling anstyle v1.0.11\n   Compiling anstyle-parse v0.2.7\n   Compiling anstyle-query v1.1.3\n   Compiling log v0.4.27\n   Compiling colorchoice v1.0.4\n   Compiling is_terminal_polyfill v1.70.1\n   Compiling anstream v0.6.19\n   Compiling jiff v0.2.15\n   Compiling aho-corasick v1.1.3\n   Compiling fdt-parser v0.4.17 (/home/runner/check/batch_7/qclic/fdt-parser/fdt-parser)\n   Compiling regex-automata v0.4.9\n   Compiling regex v1.11.1\n   Compiling env_filter v0.1.3\n   Compiling env_logger v0.11.8\nerror: could not compile `fdt-parser` (test \"node\")\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.cargo/bin/cargo-mirai /home/runner/.rustup/toolchains/nightly-2025-01-10-x86_64-unknown-linux-gnu/bin/rustc --crate-name node --edition=2021 fdt-parser/tests/node.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --test --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=69ec8e79313136f5 -C extra-filename=-364046b70cad90f7 --out-dir /home/runner/check/batch_7/qclic/fdt-parser/target/x86_64-unknown-linux-gnu/debug/deps --target x86_64-unknown-linux-gnu -L dependency=/home/runner/check/batch_7/qclic/fdt-parser/target/x86_64-unknown-linux-gnu/debug/deps -L dependency=/home/runner/check/batch_7/qclic/fdt-parser/target/debug/deps --extern env_logger=/home/runner/check/batch_7/qclic/fdt-parser/target/x86_64-unknown-linux-gnu/debug/deps/libenv_logger-01e5aee01808d49a.rlib --extern fdt_parser=/home/runner/check/batch_7/qclic/fdt-parser/target/x86_64-unknown-linux-gnu/debug/deps/libfdt_parser-a386edc1183b3fc0.rlib --extern log=/home/runner/check/batch_7/qclic/fdt-parser/target/x86_64-unknown-linux-gnu/debug/deps/liblog-c8f058ee999d27ad.rlib --cfg mirai -Z always_encode_mir` (exit status: 1)\n"
            ]
          }
        },
        {
          "file": "[Geiger] Unsafe code statistics",
          "features": "",
          "count": 1,
          "kinds": {
            "Geiger": [
              "pkg=fdt-parser, checker=Geiger\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_7/qclic/fdt-parser/fdt-parser\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\ntimestamp=2025-06-28 11:59:11.746705407 +08:00:00\n\n\nMetric output format: x/y\n    x = unsafe code used by the build\n    y = total unsafe code found in the crate\n\nSymbols:\n    :) = No `unsafe` usage found, declares #![forbid(unsafe_code)]\n    ?  = No `unsafe` usage found, missing #![forbid(unsafe_code)]\n    !  = `unsafe` usage found\n\nFunctions  Expressions  Impls  Traits  Methods  Dependency\n\n0/0        15/15        0/0    0/0     0/0      !  fdt-parser 0.4.17\n\n0/0        15/15        0/0    0/0     0/0\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "rcore-os",
      "repo": "serial-async",
      "pkg": "serial-async",
      "count": 3,
      "raw_reports": [
        {
          "file": "[Geiger] Unsafe code statistics",
          "features": "",
          "count": 1,
          "kinds": {
            "Geiger": [
              "pkg=serial-async, checker=Geiger\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_5/rcore-os/serial-async\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\ntimestamp=2025-07-09 18:15:26.890938164 +08:00:00\n\n\nMetric output format: x/y\n    x = unsafe code used by the build\n    y = total unsafe code found in the crate\n\nSymbols:\n    :) = No `unsafe` usage found, declares #![forbid(unsafe_code)]\n    ?  = No `unsafe` usage found, missing #![forbid(unsafe_code)]\n    !  = `unsafe` usage found\n\nFunctions  Expressions  Impls  Traits  Methods  Dependency\n\n0/0        22/24        4/4    0/0     3/3      !  serial-async 0.2.0\n0/0        0/0          0/0    0/0     0/0      ?  |-- futures 0.3.31\n0/0        10/81        2/8    0/0     0/3      !  |   |-- futures-channel 0.3.31\n0/0        36/36        2/2    0/0     0/0      !  |   |   |-- futures-core 0.3.31\n0/0        2/2          0/0    0/0     0/0      !  |   |   `-- futures-sink 0.3.31\n0/0        36/36        2/2    0/0     0/0      !  |   |-- futures-core 0.3.31\n0/0        0/0          0/0    0/0     0/0      ?  |   |-- futures-io 0.3.31\n0/0        2/2          0/0    0/0     0/0      !  |   |-- futures-sink 0.3.31\n9/9        79/79        12/12  1/1     11/11    !  |   |-- futures-task 0.3.31\n6/11       412/550      15/30  0/0     5/10     !  |   `-- futures-util 0.3.31\n0/0        10/81        2/8    0/0     0/3      !  |       |-- futures-channel 0.3.31\n0/0        36/36        2/2    0/0     0/0      !  |       |-- futures-core 0.3.31\n0/0        0/0          0/0    0/0     0/0      ?  |       |-- futures-io 0.3.31\n0/0        2/2          0/0    0/0     0/0      !  |       |-- futures-sink 0.3.31\n9/9        79/79        12/12  1/1     11/11    !  |       |-- futures-task 0.3.31\n0/41       0/2421       0/2    0/0     0/147    ?  |       |-- memchr 2.7.4\n0/0        11/191       0/0    0/0     2/2      !  |       |-- pin-project-lite 0.2.16\n0/0        0/0          0/0    0/0     0/0      ?  |       `-- pin-utils 0.1.0\n0/0        0/0          0/0    0/0     0/0      ?  `-- rdif-serial 0.1.3\n0/0        0/0          0/0    0/0     0/0      ?      |-- futures 0.3.31\n0/0        18/18        2/2    0/0     1/1      !      |-- rdif-base 0.3.3\n0/0        0/0          0/0    0/0     0/0      ?      |   `-- thiserror 2.0.12\n0/0        0/0          0/0    0/0     0/0      ?      |       `-- thiserror-impl 2.0.12\n0/0        14/14        0/0    0/0     3/3      !      |           |-- proc-macro2 1.0.95\n0/0        4/4          0/0    0/0     0/0      !      |           |   `-- unicode-ident 1.0.18\n0/0        0/0          0/0    0/0     0/0      ?      |           |-- quote 1.0.40\n0/0        14/14        0/0    0/0     3/3      !      |           |   `-- proc-macro2 1.0.95\n0/0        88/88        3/3    0/0     2/2      !      |           `-- syn 2.0.101\n0/0        14/14        0/0    0/0     3/3      !      |               |-- proc-macro2 1.0.95\n0/0        0/0          0/0    0/0     0/0      ?      |               |-- quote 1.0.40\n0/0        4/4          0/0    0/0     0/0      !      |               `-- unicode-ident 1.0.18\n4/4        3/3          0/0    0/0     0/0      !      `-- spin_on 0.1.1\n0/0        0/0          0/0    0/0     0/0      ?          `-- pin-utils 0.1.0\n\n19/65      699/3511     40/63  1/1     27/182\n\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=serial-async, checker=Outdated\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_5/rcore-os/serial-async\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-07-09 18:15:09.974754833 +08:00:00\n\nName         Project  Compat  Latest  Kind         Platform\n----         -------  ------  ------  ----         --------\nrdif-serial  0.1.3    ---     0.4.0   Normal       ---\ntokio        1.45.1   1.46.1  1.46.1  Development  ---\n"
            ]
          }
        },
        {
          "file": "tests/test.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Mirai": [
              "warning: [MIRAI] tx fifo overflow\n  --> tests/test.rs:92:13\n   |\n92 |             panic!(\"tx fifo overflow\");\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "sysones",
      "repo": "rcore-tutorial-v3-with-hal-component",
      "pkg": "",
      "count": 1,
      "raw_reports": [
        {
          "file": "batch_10/sysones/rcore-tutorial-v3-with-hal-component",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "\n   0: 无法解析 `batch_10/sysones/rcore-tutorial-v3-with-hal-component` 内的 Rust 项目布局\n   1: 无法从 /home/runner/check/batch_10/sysones/rcore-tutorial-v3-with-hal-component/os/Cargo.toml 中读取 cargo metadata 的结果：\n      `cargo metadata` exited with an error:     Updating crates.io index\n          Updating git repository `https://github.com/Byte-OS/polyhal.git`\n          Updating git repository `https://github.com/rcore-os/virtio-drivers`\n      error: failed to select a version for `polyhal`.\n          ... required by package `os v0.1.0 (/home/runner/check/batch_10/sysones/rcore-tutorial-v3-with-hal-component/os)`\n      versions that meet the requirements `*` are: 0.4.0\n\n      package `os` depends on `polyhal` with feature `kcontext` but `polyhal` does not have that feature.\n\n\n      failed to select a version for `polyhal` which could resolve this conflict\n   1: \n\nLocation:\n   src/layout/mod.rs:68\n\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ SPANTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n   0: os_checker::run_checker::run with user=\"sysones\" repo=\"rcore-tutorial-v3-with-hal-component\"\n      at src/run_checker/mod.rs:254\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets."
            ]
          }
        }
      ]
    },
    {
      "user": "rcore-os",
      "repo": "rboot",
      "pkg": "",
      "count": 1,
      "raw_reports": [
        {
          "file": "/home/runner/check/batch_7/rcore-os/rboot",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "\n   0: 在 \"/home/runner/check/batch_7/rcore-os/rboot\" 目录下安装如下 targets [] 失败\n      stderr=error: the following required arguments were not provided:\n        <TARGET>...\n\n      Usage: rustup[EXE] target add <TARGET>...\n\n      For more information, try '--help'.\n   0: \n\nLocation:\n   src/utils/installation.rs:62\n\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ SPANTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n   0: os_checker::run_checker::run with user=\"rcore-os\" repo=\"rboot\"\n      at src/run_checker/mod.rs:254\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets."
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Atomvchecker",
    "Outdated",
    "Geiger",
    "Unused Deps",
    "Unformatted"
  ]
}