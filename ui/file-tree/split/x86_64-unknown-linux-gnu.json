{"data":[{"user":"yuoo655","repo":"ext4_rs","pkg":"ext4_rs","count":374,"raw_reports":[{"file":"src/ext4_impls/extents.rs","count":69,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 226 to 226)\n-        if left_ext.first_block >= 0x20000{\n+        if left_ext.first_block >= 0x20000 {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 229 to 229)\n-            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>() + core::mem::size_of::<Ext4Extent>() * (node.position);\n+            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>()\n+                + core::mem::size_of::<Ext4Extent>() * (node.position);\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 231 to 231)\n-            let left_ext:&mut Ext4Extent = ext4block.read_offset_as_mut(new_ex_offset);\n+            let left_ext: &mut Ext4Extent = ext4block.read_offset_as_mut(new_ex_offset);\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 236 to 236)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 261 to 261)\n-            log::trace!(\"insert newex at pos {:x?} current entry_count {:x?} ex {:x?}\", node.position + 1 , header.entries_count, new_extent);\n+            log::trace!(\n+                \"insert newex at pos {:x?} current entry_count {:x?} ex {:x?}\",\n+                node.position + 1,\n+                header.entries_count,\n+                new_extent\n+            );\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 265 to 265)\n-        }else{\n+        } else {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 267 to 267)\n-            log::trace!(\"insert newex at pos {:x?} current entry_count {:x?} ex {:x?}\", node.position + 1 , header.entries_count, new_extent);\n+            log::trace!(\n+                \"insert newex at pos {:x?} current entry_count {:x?} ex {:x?}\",\n+                node.position + 1,\n+                header.entries_count,\n+                new_extent\n+            );\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 272 to 273)\n-            Block::load(self.block_device.clone(), node_block as usize * BLOCK_SIZE);\n-            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>() + core::mem::size_of::<Ext4Extent>() * (node.position + 1);\n+                Block::load(self.block_device.clone(), node_block as usize * BLOCK_SIZE);\n+            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>()\n+                + core::mem::size_of::<Ext4Extent>() * (node.position + 1);\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 280 to 280)\n-            // update entry count \n+            // update entry count\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 306 to 306)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 309 to 309)\n-    \n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 314 to 314)\n-    fn ext_grow_indepth(&self, inode_ref: &mut Ext4InodeRef) -> Result<()>{\n+    fn ext_grow_indepth(&self, inode_ref: &mut Ext4InodeRef) -> Result<()> {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 325 to 326)\n-        unsafe{core::ptr::copy_nonoverlapping(data_to_copy, new_ext4block.data.as_mut_ptr(), 60)};\n-        \n+        unsafe {\n+            core::ptr::copy_nonoverlapping(data_to_copy, new_ext4block.data.as_mut_ptr(), 60)\n+        };\n+\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 333 to 333)\n-        let space = (BLOCK_SIZE - core::mem::size_of::<Ext4ExtentHeader>()) / core::mem::size_of::<Ext4Extent>();\n+        let space = (BLOCK_SIZE - core::mem::size_of::<Ext4ExtentHeader>())\n+            / core::mem::size_of::<Ext4Extent>();\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 335 to 335)\n-        \n+\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 350 to 350)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 354 to 354)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 357 to 357)\n-    \n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 226 to 226)\n-        if left_ext.first_block >= 0x20000{\n+        if left_ext.first_block >= 0x20000 {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 229 to 229)\n-            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>() + core::mem::size_of::<Ext4Extent>() * (node.position);\n+            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>()\n+                + core::mem::size_of::<Ext4Extent>() * (node.position);\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 231 to 231)\n-            let left_ext:&mut Ext4Extent = ext4block.read_offset_as_mut(new_ex_offset);\n+            let left_ext: &mut Ext4Extent = ext4block.read_offset_as_mut(new_ex_offset);\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 236 to 236)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 261 to 261)\n-            log::trace!(\"insert newex at pos {:x?} current entry_count {:x?} ex {:x?}\", node.position + 1 , header.entries_count, new_extent);\n+            log::trace!(\n+                \"insert newex at pos {:x?} current entry_count {:x?} ex {:x?}\",\n+                node.position + 1,\n+                header.entries_count,\n+                new_extent\n+            );\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 265 to 265)\n-        }else{\n+        } else {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 267 to 267)\n-            log::trace!(\"insert newex at pos {:x?} current entry_count {:x?} ex {:x?}\", node.position + 1 , header.entries_count, new_extent);\n+            log::trace!(\n+                \"insert newex at pos {:x?} current entry_count {:x?} ex {:x?}\",\n+                node.position + 1,\n+                header.entries_count,\n+                new_extent\n+            );\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 272 to 273)\n-            Block::load(self.block_device.clone(), node_block as usize * BLOCK_SIZE);\n-            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>() + core::mem::size_of::<Ext4Extent>() * (node.position + 1);\n+                Block::load(self.block_device.clone(), node_block as usize * BLOCK_SIZE);\n+            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>()\n+                + core::mem::size_of::<Ext4Extent>() * (node.position + 1);\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 280 to 280)\n-            // update entry count \n+            // update entry count\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 306 to 306)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 309 to 309)\n-    \n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 314 to 314)\n-    fn ext_grow_indepth(&self, inode_ref: &mut Ext4InodeRef) -> Result<()>{\n+    fn ext_grow_indepth(&self, inode_ref: &mut Ext4InodeRef) -> Result<()> {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 325 to 326)\n-        unsafe{core::ptr::copy_nonoverlapping(data_to_copy, new_ext4block.data.as_mut_ptr(), 60)};\n-        \n+        unsafe {\n+            core::ptr::copy_nonoverlapping(data_to_copy, new_ext4block.data.as_mut_ptr(), 60)\n+        };\n+\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 333 to 333)\n-        let space = (BLOCK_SIZE - core::mem::size_of::<Ext4ExtentHeader>()) / core::mem::size_of::<Ext4Extent>();\n+        let space = (BLOCK_SIZE - core::mem::size_of::<Ext4ExtentHeader>())\n+            / core::mem::size_of::<Ext4Extent>();\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 335 to 335)\n-        \n+\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 350 to 350)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 354 to 354)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 357 to 357)\n-    \n"],"Clippy(Warn)":["warning: redundant field names in struct initialization\n  --> src/ext4_impls/extents.rs:42:21\n   |\n42 |                     pblock_of_node: pblock_of_node,\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `pblock_of_node`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n   = note: `#[warn(clippy::redundant_field_names)]` on by default\n\n","warning: redundant field names in struct initialization\n  --> src/ext4_impls/extents.rs:66:17\n   |\n66 |                 pblock_of_node: pblock_of_node,\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `pblock_of_node`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","warning: redundant field names in struct initialization\n  --> src/ext4_impls/extents.rs:78:17\n   |\n78 |                 pblock_of_node: pblock_of_node,\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `pblock_of_node`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","warning: unneeded `return` statement\n  --> src/ext4_impls/extents.rs:80:13\n   |\n80 |             return Ok(search_path);\n   |             ^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n   |\n80 -             return Ok(search_path);\n80 +             Ok(search_path)\n   |\n\n","warning: using `clone` on type `Ext4ExtentHeader` which implements the `Copy` trait\n  --> src/ext4_impls/extents.rs:37:29\n   |\n37 |                     header: node.header.clone(),\n   |                             ^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `node.header`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n","warning: using `clone` on type `Ext4ExtentHeader` which implements the `Copy` trait\n  --> src/ext4_impls/extents.rs:61:25\n   |\n61 |                 header: node.header.clone(),\n   |                         ^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `node.header`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: using `clone` on type `Ext4ExtentHeader` which implements the `Copy` trait\n  --> src/ext4_impls/extents.rs:73:25\n   |\n73 |                 header: node.header.clone(),\n   |                         ^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `node.header`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: using `clone` on type `Ext4ExtentHeader` which implements the `Copy` trait\n  --> src/ext4_impls/extents.rs:98:22\n   |\n98 |         let header = node.header.clone();\n   |                      ^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `node.header`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/extents.rs:119:36\n    |\n119 |             if self.can_merge(&ex, &newex) {\n    |                                    ^^^^^^ help: change this to: `newex`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/extents.rs:120:58\n    |\n120 |                 self.merge_extent(&search_path, &mut ex, &newex)?;\n    |                                                          ^^^^^^ help: change this to: `newex`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/extents.rs:139:70\n    |\n139 |                 if let Some(next_extent) = self.get_extent_from_node(&node, pos + 1) {\n    |                                                                      ^^^^^ help: change this to: `node`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/extents.rs:140:53\n    |\n140 |                     if self.can_merge(&next_extent, &newex) {\n    |                                                     ^^^^^^ help: change this to: `newex`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/extents.rs:155:74\n    |\n155 |                 if let Some(mut prev_extent) = self.get_extent_from_node(&node, pos - 1) {\n    |                                                                          ^^^^^ help: change this to: `node`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/extents.rs:156:53\n    |\n156 |                     if self.can_merge(&prev_extent, &newex) {\n    |                                                     ^^^^^^ help: change this to: `newex`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/extents.rs:157:75\n    |\n157 |                         self.merge_extent(&search_path, &mut prev_extent, &newex)?;\n    |                                                                           ^^^^^^ help: change this to: `newex`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: casting to the same type is unnecessary (`u16` -> `u16`)\n   --> src/ext4_impls/extents.rs:205:48\n    |\n205 |         if ex1.block_count + ex2.block_count > EXT_INIT_MAX_LEN as u16 {\n    |                                                ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `EXT_INIT_MAX_LEN`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: casting to the same type is unnecessary (`u16` -> `u16`)\n   --> src/ext4_impls/extents.rs:210:70\n    |\n210 |         if ex1.is_unwritten() && ex1.block_count + ex2.block_count > EXT_UNWRITTEN_MAX_LEN as u16 {\n    |                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `EXT_UNWRITTEN_MAX_LEN`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: using `clone` on type `Ext4ExtentHeader` which implements the `Copy` trait\n   --> src/ext4_impls/extents.rs:248:22\n    |\n248 |         let header = node.header.clone();\n    |                      ^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `node.header`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: deref which would be done by auto-deref\n   --> src/ext4_impls/extents.rs:255:17\n    |\n255 |                 (*inode_ref.inode.root_extent_header_mut()).entries_count += 1;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `inode_ref.inode.root_extent_header_mut()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref\n    = note: `#[warn(clippy::explicit_auto_deref)]` on by default\n\n","warning: deref which would be done by auto-deref\n   --> src/ext4_impls/extents.rs:263:13\n    |\n263 |             (*inode_ref.inode.root_extent_header_mut()).entries_count += 1;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `inode_ref.inode.root_extent_header_mut()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref\n\n","warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/ext4_impls/extents.rs:272:52\n    |\n272 |             Block::load(self.block_device.clone(), node_block as usize * BLOCK_SIZE);\n    |                                                    ^^^^^^^^^^^^^^^^^^^ help: try: `node_block`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: using `clone` on type `Option<Ext4Extent>` which implements the `Copy` trait\n   --> src/ext4_impls/extents.rs:396:22\n    |\n396 |         let mut ex = search_path.path[depth].extent.clone().unwrap();\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `search_path.path[depth].extent`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: this operation has no effect\n   --> src/ext4_impls/extents.rs:412:30\n    |\n412 |             newex.start_lo = newblock as u32 & 0xffffffff;\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `newblock as u32`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/ext4_impls/extents.rs:412:30\n    |\n412 |             newex.start_lo = newblock as u32 & 0xffffffff;\n    |                              ^^^^^^^^^^^^^^^ help: try: `newblock`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/ext4_impls/extents.rs:413:32\n    |\n413 |             newex.start_hi = (((newblock as u32) << 31) << 1) as u16;\n    |                                ^^^^^^^^^^^^^^^^^ help: try: `newblock`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: using `clone` on type `Ext4ExtentHeader` which implements the `Copy` trait\n   --> src/ext4_impls/extents.rs:450:30\n    |\n450 |                 let header = search_path.path[i as usize].header.clone();\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `search_path.path[i as usize].header`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/ext4_impls/extents.rs:473:60\n    |\n473 |                     Block::load(self.block_device.clone(), node_pblock as usize * BLOCK_SIZE);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^ help: try: `node_pblock`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: using `clone` on type `Ext4ExtentHeader` which implements the `Copy` trait\n   --> src/ext4_impls/extents.rs:475:30\n    |\n475 |                 let header = search_path.path[i as usize].header.clone();\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `search_path.path[i as usize].header`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: using `clone` on type `Ext4ExtentHeader` which implements the `Copy` trait\n   --> src/ext4_impls/extents.rs:530:26\n    |\n530 |             let header = search_path.path[i as usize].header.clone();\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `search_path.path[i as usize].header`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: casting to the same type is unnecessary (`isize` -> `isize`)\n   --> src/ext4_impls/extents.rs:545:27\n    |\n545 |                 let idx = i as isize;\n    |                           ^^^^^^^^^^ help: try: `i`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: casting to the same type is unnecessary (`u64` -> `u64`)\n   --> src/ext4_impls/extents.rs:666:33\n    |\n666 |                 ex.store_pblock(newblock as u64);\n    |                                 ^^^^^^^^^^^^^^^ help: try: `newblock`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/ext4_impls/extents.rs:775:33\n    |\n775 |             let node_disk_pos = path.path[i].pblock_of_node as usize * BLOCK_SIZE;\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `path.path[i].pblock_of_node`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: using `clone` on type `Ext4ExtentHeader` which implements the `Copy` trait\n   --> src/ext4_impls/extents.rs:889:22\n    |\n889 |         let header = path.header.clone();\n    |                      ^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `path.header`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"]}},{"file":"src/fuse_interface/mod.rs","count":40,"kinds":{"Clippy(Error)":["error: &-masking with zero\n   --> src/fuse_interface/mod.rs:308:12\n    |\n308 |         if (flags & O_RDONLY != 0) || (flags & O_RDWR != 0) {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n    = note: `#[deny(clippy::bad_bit_mask)]` on by default\n\n","error: &-masking with zero\n   --> src/fuse_interface/mod.rs:450:16\n    |\n450 |             if (flags & O_RDONLY != 0) || (flags & O_RDWR != 0) {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n\n"],"Unformatted":["file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 9 to 10)\n-pub use crate::ext4_defs::Ext4;\n-pub use crate::ext4_defs::BLOCK_SIZE;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 12 to 12)\n+pub use crate::ext4_defs::Ext4;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 13 to 13)\n+pub use crate::ext4_defs::BLOCK_SIZE;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 120 to 120)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 139 to 139)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 148 to 148)\n-        uid: u32, \n+        uid: u32,\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 156 to 156)\n-        let inode_ref = self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n+        let inode_ref =\n+            self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 177 to 178)\n-    pub fn fuse_mkdir_with_attr(&mut self, parent: u64, name: &str, mode: u32, umask: u32, uid:u32, gid:u32) -> Result<Ext4InodeRef> {\n-\n+    pub fn fuse_mkdir_with_attr(\n+        &mut self,\n+        parent: u64,\n+        name: &str,\n+        mode: u32,\n+        umask: u32,\n+        uid: u32,\n+        gid: u32,\n+    ) -> Result<Ext4InodeRef> {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 191 to 191)\n-        let inode_ref = self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n+        let inode_ref =\n+            self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 342 to 342)\n-        ) -> Result<Vec<u8>> {\n+    ) -> Result<Vec<u8>> {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 478 to 478)\n-    /// \n+    ///\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 9 to 10)\n-pub use crate::ext4_defs::Ext4;\n-pub use crate::ext4_defs::BLOCK_SIZE;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 12 to 12)\n+pub use crate::ext4_defs::Ext4;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 13 to 13)\n+pub use crate::ext4_defs::BLOCK_SIZE;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 120 to 120)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 139 to 139)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 148 to 148)\n-        uid: u32, \n+        uid: u32,\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 156 to 156)\n-        let inode_ref = self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n+        let inode_ref =\n+            self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 177 to 178)\n-    pub fn fuse_mkdir_with_attr(&mut self, parent: u64, name: &str, mode: u32, umask: u32, uid:u32, gid:u32) -> Result<Ext4InodeRef> {\n-\n+    pub fn fuse_mkdir_with_attr(\n+        &mut self,\n+        parent: u64,\n+        name: &str,\n+        mode: u32,\n+        umask: u32,\n+        uid: u32,\n+        gid: u32,\n+    ) -> Result<Ext4InodeRef> {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 191 to 191)\n-        let inode_ref = self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n+        let inode_ref =\n+            self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 342 to 342)\n-        ) -> Result<Vec<u8>> {\n+    ) -> Result<Vec<u8>> {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 478 to 478)\n-    /// \n+    ///\n"],"Clippy(Warn)":["warning: this `if` statement can be collapsed\n   --> src/fuse_interface/mod.rs:301:9\n    |\n301 | /         if (flags & O_WRONLY != 0) || (flags & O_RDWR != 0) {\n302 | |             if !can_write {\n303 | |                 return_errno_with_message!(Errno::EACCES, \"Permission denied can not write\");\n304 | |             }\n305 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n301 ~         if ((flags & O_WRONLY != 0) || (flags & O_RDWR != 0)) && !can_write {\n302 +             return_errno_with_message!(Errno::EACCES, \"Permission denied can not write\");\n303 +         }\n    |\n\n","warning: this `if` statement can be collapsed\n   --> src/fuse_interface/mod.rs:308:9\n    |\n308 | /         if (flags & O_RDONLY != 0) || (flags & O_RDWR != 0) {\n309 | |             if !can_read {\n310 | |                 return_errno_with_message!(Errno::EACCES, \"Permission denied can not read\");\n311 | |             }\n312 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n    |\n308 ~         if ((flags & O_RDONLY != 0) || (flags & O_RDWR != 0)) && !can_read {\n309 +             return_errno_with_message!(Errno::EACCES, \"Permission denied can not read\");\n310 +         }\n    |\n\n","warning: this `if` statement can be collapsed\n   --> src/fuse_interface/mod.rs:315:9\n    |\n315 | /         if (flags & O_EXCL != 0) || (flags & O_RDWR != 0) {\n316 | |             if !can_execute {\n317 | |                 return_errno_with_message!(Errno::EACCES, \"Permission denied can not exec\");\n318 | |             }\n319 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n    |\n315 ~         if ((flags & O_EXCL != 0) || (flags & O_RDWR != 0)) && !can_execute {\n316 +             return_errno_with_message!(Errno::EACCES, \"Permission denied can not exec\");\n317 +         }\n    |\n\n","warning: this `if` statement can be collapsed\n   --> src/fuse_interface/mod.rs:443:13\n    |\n443 | /             if (flags & O_WRONLY != 0) || (flags & O_RDWR != 0) {\n444 | |                 if !can_write {\n445 | |                     return_errno_with_message!(Errno::EACCES, \"Permission denied can not write\");\n446 | |                 }\n447 | |             }\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n    |\n443 ~             if ((flags & O_WRONLY != 0) || (flags & O_RDWR != 0)) && !can_write {\n444 +                 return_errno_with_message!(Errno::EACCES, \"Permission denied can not write\");\n445 +             }\n    |\n\n","warning: this `if` statement can be collapsed\n   --> src/fuse_interface/mod.rs:450:13\n    |\n450 | /             if (flags & O_RDONLY != 0) || (flags & O_RDWR != 0) {\n451 | |                 if !can_read {\n452 | |                     return_errno_with_message!(Errno::EACCES, \"Permission denied can not read\");\n453 | |                 }\n454 | |             }\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n    |\n450 ~             if ((flags & O_RDONLY != 0) || (flags & O_RDWR != 0)) && !can_read {\n451 +                 return_errno_with_message!(Errno::EACCES, \"Permission denied can not read\");\n452 +             }\n    |\n\n","warning: this `if` statement can be collapsed\n   --> src/fuse_interface/mod.rs:457:13\n    |\n457 | /             if (flags & O_EXCL != 0) || (flags & O_RDWR != 0) {\n458 | |                 if !can_execute {\n459 | |                     return_errno_with_message!(Errno::EACCES, \"Permission denied can not exec\");\n460 | |                 }\n461 | |             }\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n    |\n457 ~             if ((flags & O_EXCL != 0) || (flags & O_RDWR != 0)) && !can_execute {\n458 +                 return_errno_with_message!(Errno::EACCES, \"Permission denied can not exec\");\n459 +             }\n    |\n\n","warning: this function has too many arguments (14/7)\n  --> src/fuse_interface/mod.rs:38:5\n   |\n38 | /     pub fn fuse_setattr(\n39 | |         &self,\n40 | |         ino: u64,\n41 | |         mode: Option<u32>,\n...  |\n52 | |         flags: Option<u32>,\n53 | |     ) {\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n   = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n","warning: this function has too many arguments (8/7)\n   --> src/fuse_interface/mod.rs:141:5\n    |\n141 | /     pub fn fuse_mknod_with_attr(\n142 | |         &self,\n143 | |         parent: u64,\n144 | |         name: &str,\n...   |\n149 | |         gid: u32,\n150 | |     ) -> Result<Ext4InodeRef> {\n    | |_____________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n","warning: casting to the same type is unnecessary (`u16` -> `u16`)\n   --> src/fuse_interface/mod.rs:191:68\n    |\n191 |         let inode_ref = self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n    |                                                                    ^^^^^^^^^^^ help: try: `mode`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/fuse_interface/mod.rs:222:18\n    |\n222 |             &p[..len as usize],\n    |                  ^^^^^^^^^^^^ help: try: `len`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: unneeded `return` statement\n   --> src/fuse_interface/mod.rs:247:9\n    |\n247 |         return Ok(EOK);\n    |         ^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n247 -         return Ok(EOK);\n247 +         Ok(EOK)\n    |\n\n","warning: casting to the same type is unnecessary (`u16` -> `u16`)\n   --> src/fuse_interface/mod.rs:261:63\n    |\n261 |         let inode_ref = self.create(parent as u32, link_name, mode as u16)?;\n    |                                                               ^^^^^^^^^^^ help: try: `mode`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: this function has too many arguments (8/7)\n   --> src/fuse_interface/mod.rs:361:5\n    |\n361 | /     pub fn fuse_write(\n362 | |         &self,\n363 | |         ino: u64,\n364 | |         fh: u64,\n...   |\n369 | |         lock_owner: Option<u64>,\n370 | |     ) -> Result<usize> {\n    | |______________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n","warning: this function has too many arguments (8/7)\n   --> src/fuse_interface/mod.rs:606:5\n    |\n606 | /     fn fuse_getlk(\n607 | |         &mut self,\n608 | |         ino: u64,\n609 | |         fh: u64,\n...   |\n614 | |         pid: u32,\n615 | |     ) {\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n","warning: this function has too many arguments (9/7)\n   --> src/fuse_interface/mod.rs:626:5\n    |\n626 | /     fn fuse_setlk(\n627 | |         &mut self,\n628 | |         ino: u64,\n629 | |         fh: u64,\n...   |\n635 | |         sleep: bool,\n636 | |     ) {\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n","warning: this function has too many arguments (9/7)\n   --> src/fuse_interface/mod.rs:683:5\n    |\n683 | /     fn fuse_copy_file_range(\n684 | |         &mut self,\n685 | |         ino_in: u64,\n686 | |         fh_in: u64,\n...   |\n692 | |         flags: u32,\n693 | |     ) {\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n"]}},{"file":"src/ext4_impls/balloc.rs","count":34,"kinds":{"Clippy(Warn)":["warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:105:69\n    |\n105 |                 Ext4BlockGroup::load_new(self.block_device.clone(), &super_block, bgid as usize);\n    |                                                                     ^^^^^^^^^^^^ help: change this to: `super_block`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:129:66\n    |\n129 |             let bmp_blk_adr = block_group.get_block_bitmap_block(&super_block);\n    |                                                                  ^^^^^^^^^^^^ help: change this to: `super_block`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:136:64\n    |\n136 |                 block_group.set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n    |                                                                ^^^^^^^^^^^^ help: change this to: `super_block`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/ext4_impls/balloc.rs:147:29\n    |\n147 |             let blk_in_bg = blocks_per_group as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `blocks_per_group`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:153:68\n    |\n153 |                     block_group.set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n    |                                                                    ^^^^^^^^^^^^ help: change this to: `super_block`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:166:64\n    |\n166 |                 block_group.set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n    |                                                                ^^^^^^^^^^^^ help: change this to: `super_block`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:209:69\n    |\n209 |                 Ext4BlockGroup::load_new(self.block_device.clone(), &super_block, bgid as usize);\n    |                                                                     ^^^^^^^^^^^^ help: change this to: `super_block`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:233:66\n    |\n233 |             let bmp_blk_adr = block_group.get_block_bitmap_block(&super_block);\n    |                                                                  ^^^^^^^^^^^^ help: change this to: `super_block`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:240:64\n    |\n240 |                 block_group.set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n    |                                                                ^^^^^^^^^^^^ help: change this to: `super_block`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/ext4_impls/balloc.rs:253:29\n    |\n253 |             let blk_in_bg = blocks_per_group as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `blocks_per_group`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:259:68\n    |\n259 |                     block_group.set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n    |                                                                    ^^^^^^^^^^^^ help: change this to: `super_block`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:274:64\n    |\n274 |                 block_group.set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n    |                                                                ^^^^^^^^^^^^ help: change this to: `super_block`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/ext4_impls/balloc.rs:351:16\n    |\n351 |             if count as usize > free_cnt {\n    |                ^^^^^^^^^^^^^^ help: try: `count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/ext4_impls/balloc.rs:353:28\n    |\n353 |                 free_cnt = count as usize;\n    |                            ^^^^^^^^^^^^^^ help: try: `count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:356:33\n    |\n356 |             ext4_bmap_bits_free(&mut data, idx_in_bg as u32, free_cnt as u32);\n    |                                 ^^^^^^^^^ help: change this to: `data`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:361:65\n    |\n361 |             bg.set_block_group_balloc_bitmap_csum(&super_block, &data);\n    |                                                                 ^^^^^ help: change this to: `data`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:363:73\n    |\n363 |                 .write_offset(block_bitmap_block as usize * BLOCK_SIZE, &data);\n    |                                                                         ^^^^^ help: change this to: `data`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/ext4_impls/balloc.rs:375:30\n    |\n375 |             inode_blocks -= (free_cnt as usize * (BLOCK_SIZE / EXT4_INODE_BLOCK_SIZE)) as u64;\n    |                              ^^^^^^^^^^^^^^^^^ help: try: `free_cnt`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"],"Unformatted":["file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 71 to 71)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 115 to 115)\n-                    return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+                    return_errno_with_message!(\n+                        Errno::ENOSPC,\n+                        \"No free blocks available in all block groups\"\n+                    );\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 153 to 153)\n-                    block_group.set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n+                    block_group\n+                        .set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 179 to 179)\n-        return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+        return_errno_with_message!(\n+            Errno::ENOSPC,\n+            \"No free blocks available in all block groups\"\n+        );\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 202 to 202)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 219 to 219)\n-                    return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+                    return_errno_with_message!(\n+                        Errno::ENOSPC,\n+                        \"No free blocks available in all block groups\"\n+                    );\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 259 to 259)\n-                    block_group.set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n+                    block_group\n+                        .set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 289 to 289)\n-        return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+        return_errno_with_message!(\n+            Errno::ENOSPC,\n+            \"No free blocks available in all block groups\"\n+        );\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 71 to 71)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 115 to 115)\n-                    return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+                    return_errno_with_message!(\n+                        Errno::ENOSPC,\n+                        \"No free blocks available in all block groups\"\n+                    );\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 153 to 153)\n-                    block_group.set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n+                    block_group\n+                        .set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 179 to 179)\n-        return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+        return_errno_with_message!(\n+            Errno::ENOSPC,\n+            \"No free blocks available in all block groups\"\n+        );\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 202 to 202)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 219 to 219)\n-                    return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+                    return_errno_with_message!(\n+                        Errno::ENOSPC,\n+                        \"No free blocks available in all block groups\"\n+                    );\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 259 to 259)\n-                    block_group.set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n+                    block_group\n+                        .set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 289 to 289)\n-        return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+        return_errno_with_message!(\n+            Errno::ENOSPC,\n+            \"No free blocks available in all block groups\"\n+        );\n"]}},{"file":"src/ext4_defs/direntry.rs","count":32,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 31 to 31)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 40 to 40)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 60 to 63)\n-pub struct Ext4DirSearchResult{\n-    pub dentry: Ext4DirEntry, \n-    pub pblock_id: usize, // disk block id\n-    pub offset: usize, // offset in block\n+pub struct Ext4DirSearchResult {\n+    pub dentry: Ext4DirEntry,\n+    pub pblock_id: usize,   // disk block id\n+    pub offset: usize,      // offset in block\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 67 to 67)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 79 to 79)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 122 to 122)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 135 to 136)\n-        if self.name_len as usize == name.len(){\n-            return &self.name[..name.len()] == name.as_bytes()\n+        if self.name_len as usize == name.len() {\n+            return &self.name[..name.len()] == name.as_bytes();\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 171 to 171)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 181 to 182)\n-    \n-    pub fn write_entry(&mut self, entry_len: u16, inode: u32, name: &str, de_type:DirEntryType) {\n+    pub fn write_entry(&mut self, entry_len: u16, inode: u32, name: &str, de_type: DirEntryType) {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 189 to 189)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 193 to 193)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 237 to 238)\n-\n-impl Ext4DirEntryTail{\n+impl Ext4DirEntryTail {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 262 to 265)\n-        let offset = BLOCK_SIZE - core::mem::size_of::<Ext4DirEntryTail>();\n-        let de_ptr = self as *const Ext4DirEntryTail as *const u8;\n-        let array_ptr = array as *mut [u8] as *mut u8;\n-        let count = core::mem::size_of::<Ext4DirEntryTail>();\n+            let offset = BLOCK_SIZE - core::mem::size_of::<Ext4DirEntryTail>();\n+            let de_ptr = self as *const Ext4DirEntryTail as *const u8;\n+            let array_ptr = array as *mut [u8] as *mut u8;\n+            let count = core::mem::size_of::<Ext4DirEntryTail>();\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 270 to 270)\n+\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 31 to 31)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 40 to 40)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 60 to 63)\n-pub struct Ext4DirSearchResult{\n-    pub dentry: Ext4DirEntry, \n-    pub pblock_id: usize, // disk block id\n-    pub offset: usize, // offset in block\n+pub struct Ext4DirSearchResult {\n+    pub dentry: Ext4DirEntry,\n+    pub pblock_id: usize,   // disk block id\n+    pub offset: usize,      // offset in block\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 67 to 67)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 79 to 79)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 122 to 122)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 135 to 136)\n-        if self.name_len as usize == name.len(){\n-            return &self.name[..name.len()] == name.as_bytes()\n+        if self.name_len as usize == name.len() {\n+            return &self.name[..name.len()] == name.as_bytes();\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 171 to 171)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 181 to 182)\n-    \n-    pub fn write_entry(&mut self, entry_len: u16, inode: u32, name: &str, de_type:DirEntryType) {\n+    pub fn write_entry(&mut self, entry_len: u16, inode: u32, name: &str, de_type: DirEntryType) {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 189 to 189)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 193 to 193)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 237 to 238)\n-\n-impl Ext4DirEntryTail{\n+impl Ext4DirEntryTail {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 262 to 265)\n-        let offset = BLOCK_SIZE - core::mem::size_of::<Ext4DirEntryTail>();\n-        let de_ptr = self as *const Ext4DirEntryTail as *const u8;\n-        let array_ptr = array as *mut [u8] as *mut u8;\n-        let count = core::mem::size_of::<Ext4DirEntryTail>();\n+            let offset = BLOCK_SIZE - core::mem::size_of::<Ext4DirEntryTail>();\n+            let de_ptr = self as *const Ext4DirEntryTail as *const u8;\n+            let array_ptr = array as *mut [u8] as *mut u8;\n+            let count = core::mem::size_of::<Ext4DirEntryTail>();\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 270 to 270)\n+\n"],"Clippy(Error)":["error: redundant redefinition of a binding `data`\n   --> src/ext4_defs/direntry.rs:115:9\n    |\n115 |         let data = data;\n    |         ^^^^^^^^^^^^^^^^\n    |\nhelp: `data` is initially defined here\n   --> src/ext4_defs/direntry.rs:114:17\n    |\n114 |     fn try_from(data: &[T]) -> core::result::Result<Self, u64> {\n    |                 ^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_locals\n    = note: `#[deny(clippy::redundant_locals)]` on by default\n\n"],"Clippy(Warn)":["warning: returning the result of a `let` binding from a block\n   --> src/ext4_defs/direntry.rs:149:9\n    |\n148 |         let de_type = unsafe { self.inner.inode_type } as u8;\n    |         ----------------------------------------------------- unnecessary `let` binding\n149 |         de_type\n    |         ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n148 ~         \n149 ~         unsafe { self.inner.inode_type } as u8\n    |\n\n","warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> src/ext4_defs/direntry.rs:148:23\n    |\n148 |         let de_type = unsafe { self.inner.inode_type } as u8;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `unsafe { self.inner.inode_type }`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: returning the result of a `let` binding from a block\n   --> src/ext4_defs/direntry.rs:163:9\n    |\n162 |         let name_len = self.name_len as usize;\n    |         -------------------------------------- unnecessary `let` binding\n163 |         name_len\n    |         ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n162 ~         \n163 ~         self.name_len as usize\n    |\n\n"]}},{"file":"src/ext4_defs/extents.rs","count":26,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 227 to 227)\n-            let mut header = *Ext4ExtentHeader::load_from_u8_mut(&mut data[..size_of::<Ext4ExtentHeader>()]);\n+            let mut header =\n+                *Ext4ExtentHeader::load_from_u8_mut(&mut data[..size_of::<Ext4ExtentHeader>()]);\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 260 to 260)\n-                    if lblock >= ext.first_block && lblock <= ext.first_block + ext.get_actual_len() as u32 {\n+                    if lblock >= ext.first_block\n+                        && lblock <= ext.first_block + ext.get_actual_len() as u32\n+                    {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 274 to 274)\n-                    if (lblock < ext.first_block){\n+                    if (lblock < ext.first_block) {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 276 to 276)\n-                    }else{\n+                    } else {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 548 to 548)\n-        assert!(result.is_err(), \"Expected error for invalid root node data length\");\n+        assert!(\n+            result.is_err(),\n+            \"Expected error for invalid root node data length\"\n+        );\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 553 to 553)\n-        assert!(result.is_err(), \"Expected error for invalid internal node data length\");\n+        assert!(\n+            result.is_err(),\n+            \"Expected error for invalid internal node data length\"\n+        );\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 697 to 697)\n-        let index = node.get_index(0).expect(\"Failed to get index at position 0\");\n+        let index = node\n+            .get_index(0)\n+            .expect(\"Failed to get index at position 0\");\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 703 to 703)\n-        let index = node.get_index(1).expect(\"Failed to get index at position 1\");\n+        let index = node\n+            .get_index(1)\n+            .expect(\"Failed to get index at position 1\");\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 744 to 744)\n-        let extent = node.get_extent(0).expect(\"Failed to get extent at position 0\");\n+        let extent = node\n+            .get_extent(0)\n+            .expect(\"Failed to get extent at position 0\");\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 749 to 749)\n-        let extent = node.get_extent(1).expect(\"Failed to get extent at position 1\");\n+        let extent = node\n+            .get_extent(1)\n+            .expect(\"Failed to get extent at position 1\");\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 227 to 227)\n-            let mut header = *Ext4ExtentHeader::load_from_u8_mut(&mut data[..size_of::<Ext4ExtentHeader>()]);\n+            let mut header =\n+                *Ext4ExtentHeader::load_from_u8_mut(&mut data[..size_of::<Ext4ExtentHeader>()]);\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 260 to 260)\n-                    if lblock >= ext.first_block && lblock <= ext.first_block + ext.get_actual_len() as u32 {\n+                    if lblock >= ext.first_block\n+                        && lblock <= ext.first_block + ext.get_actual_len() as u32\n+                    {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 274 to 274)\n-                    if (lblock < ext.first_block){\n+                    if (lblock < ext.first_block) {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 276 to 276)\n-                    }else{\n+                    } else {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 548 to 548)\n-        assert!(result.is_err(), \"Expected error for invalid root node data length\");\n+        assert!(\n+            result.is_err(),\n+            \"Expected error for invalid root node data length\"\n+        );\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 553 to 553)\n-        assert!(result.is_err(), \"Expected error for invalid internal node data length\");\n+        assert!(\n+            result.is_err(),\n+            \"Expected error for invalid internal node data length\"\n+        );\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 697 to 697)\n-        let index = node.get_index(0).expect(\"Failed to get index at position 0\");\n+        let index = node\n+            .get_index(0)\n+            .expect(\"Failed to get index at position 0\");\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 703 to 703)\n-        let index = node.get_index(1).expect(\"Failed to get index at position 1\");\n+        let index = node\n+            .get_index(1)\n+            .expect(\"Failed to get index at position 1\");\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 744 to 744)\n-        let extent = node.get_extent(0).expect(\"Failed to get extent at position 0\");\n+        let extent = node\n+            .get_extent(0)\n+            .expect(\"Failed to get extent at position 0\");\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 749 to 749)\n-        let extent = node.get_extent(1).expect(\"Failed to get extent at position 1\");\n+        let extent = node\n+            .get_extent(1)\n+            .expect(\"Failed to get extent at position 1\");\n"],"Clippy(Error)":["error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> src/ext4_defs/extents.rs:448:17\n    |\n448 |                 self.get_actual_len() + next.get_actual_len() <= EXT_UNWRITTEN_MAX_LEN\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: because `EXT_UNWRITTEN_MAX_LEN` is the maximum value for this type, this comparison is always true\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons\n    = note: `#[deny(clippy::absurd_extreme_comparisons)]` on by default\n\n","error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> src/ext4_defs/extents.rs:458:17\n    |\n458 |                 self.get_actual_len() + prev.get_actual_len() <= EXT_UNWRITTEN_MAX_LEN\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: because `EXT_UNWRITTEN_MAX_LEN` is the maximum value for this type, this comparison is always true\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons\n\n"],"Clippy(Warn)":["warning: unneeded `return` statement\n   --> src/ext4_defs/extents.rs:283:17\n    |\n283 |                 return Some((ext, l - 1));\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n283 -                 return Some((ext, l - 1));\n283 +                 Some((ext, l - 1))\n    |\n\n","warning: this operation has no effect\n   --> src/ext4_defs/extents.rs:401:24\n    |\n401 |         self.leaf_lo = pblock as u32 & 0xffffffff;\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `pblock as u32`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n","warning: this operation has no effect\n   --> src/ext4_defs/extents.rs:426:25\n    |\n426 |         self.start_lo = pblock as u32 & 0xffffffff;\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `pblock as u32`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: you should consider adding a `Default` implementation for `SearchPath`\n   --> src/ext4_defs/extents.rs:517:5\n    |\n517 | /     pub fn new() -> Self {\n518 | |         SearchPath {\n519 | |             depth: 0,\n520 | |             maxdepth: 4,\n521 | |             path: vec![],\n522 | |         }\n523 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n516 + impl Default for SearchPath {\n517 +     fn default() -> Self {\n518 +         Self::new()\n519 +     }\n520 + }\n    |\n\n"]}},{"file":"src/ext4_impls/file.rs","count":26,"kinds":{"Clippy(Error)":["error: redundant redefinition of a binding `extra_size`\n   --> src/ext4_impls/file.rs:104:13\n    |\n104 |             let extra_size = extra_size;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nhelp: `extra_size` is initially defined here\n   --> src/ext4_impls/file.rs:102:13\n    |\n102 |         let extra_size = self.super_block.extra_size();\n    |             ^^^^^^^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_locals\n\n"],"Unformatted":["file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 1 to 1)\n+use crate::ext4_defs::*;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 4 to 4)\n-use crate::ext4_defs::*;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 83 to 83)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 120 to 120)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 131 to 131)\n-    pub fn create_with_attr(&self, parent: u32, name: &str, inode_mode: u16, uid:u16, gid: u16) -> Result<Ext4InodeRef> {\n+    pub fn create_with_attr(\n+        &self,\n+        parent: u32,\n+        name: &str,\n+        inode_mode: u16,\n+        uid: u16,\n+        gid: u16,\n+    ) -> Result<Ext4InodeRef> {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 301 to 301)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 333 to 336)\n-            let len = min(\n-                fblock_count as usize * BLOCK_SIZE,\n-                write_buf_len - written,\n-            );\n+            let len = min(fblock_count as usize * BLOCK_SIZE, write_buf_len - written);\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 375 to 377)\n-            inode_ref\n-                .inode\n-                .set_size((offset + write_buf_len) as u64);\n+            inode_ref.inode.set_size((offset + write_buf_len) as u64);\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 419 to 419)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 445 to 445)\n-        if diff_blocks_cnt > 0{\n+        if diff_blocks_cnt > 0 {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 1 to 1)\n+use crate::ext4_defs::*;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 4 to 4)\n-use crate::ext4_defs::*;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 83 to 83)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 120 to 120)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 131 to 131)\n-    pub fn create_with_attr(&self, parent: u32, name: &str, inode_mode: u16, uid:u16, gid: u16) -> Result<Ext4InodeRef> {\n+    pub fn create_with_attr(\n+        &self,\n+        parent: u32,\n+        name: &str,\n+        inode_mode: u16,\n+        uid: u16,\n+        gid: u16,\n+    ) -> Result<Ext4InodeRef> {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 301 to 301)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 333 to 336)\n-            let len = min(\n-                fblock_count as usize * BLOCK_SIZE,\n-                write_buf_len - written,\n-            );\n+            let len = min(fblock_count as usize * BLOCK_SIZE, write_buf_len - written);\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 375 to 377)\n-            inode_ref\n-                .inode\n-                .set_size((offset + write_buf_len) as u64);\n+            inode_ref.inode.set_size((offset + write_buf_len) as u64);\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 419 to 419)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 445 to 445)\n-        if diff_blocks_cnt > 0{\n+        if diff_blocks_cnt > 0 {\n"],"Clippy(Warn)":["warning: redundant field names in struct initialization\n   --> src/ext4_impls/file.rs:113:13\n    |\n113 |             inode_num: inode_num,\n    |             ^^^^^^^^^^^^^^^^^^^^ help: replace it with: `inode_num`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","warning: redundant field names in struct initialization\n   --> src/ext4_impls/file.rs:114:13\n    |\n114 |             inode: inode,\n    |             ^^^^^^^^^^^^ help: replace it with: `inode`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","warning: using `clone` on type `Ext4Inode` which implements the `Copy` trait\n  --> src/ext4_impls/file.rs:33:24\n   |\n33 |                 inode: child.inode.clone(),\n   |                        ^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `child.inode`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/ext4_impls/file.rs:416:18\n    |\n416 |             &p[..len as usize],\n    |                  ^^^^^^^^^^^^ help: try: `len`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/ext4_impls/file.rs:446:65\n    |\n446 |             self.extent_remove_space(inode_ref, new_blocks_cnt, EXT_MAX_BLOCKS as u32)?;\n    |                                                                 ^^^^^^^^^^^^^^^^^^^^^ help: try: `EXT_MAX_BLOCKS`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"]}},{"file":"src/ext4_defs/mod.rs","count":20,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 1 to 1)\n-pub mod consts;\n+pub mod block;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 3 to 3)\n+pub mod consts;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 4 to 5)\n-pub mod block;\n-pub mod file;\n+pub mod ext4;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 7 to 7)\n+pub mod file;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 10 to 10)\n-pub mod ext4;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 12 to 14)\n-\n-\n-pub use consts::*;\n+pub use block::*;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 16 to 16)\n+pub use consts::*;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 17 to 18)\n-pub use block::*;\n-pub use file::*;\n+pub use ext4::*;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 20 to 20)\n+pub use file::*;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 23 to 23)\n-pub use ext4::*;\n+\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 1 to 1)\n-pub mod consts;\n+pub mod block;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 3 to 3)\n+pub mod consts;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 4 to 5)\n-pub mod block;\n-pub mod file;\n+pub mod ext4;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 7 to 7)\n+pub mod file;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 10 to 10)\n-pub mod ext4;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 12 to 14)\n-\n-\n-pub use consts::*;\n+pub use block::*;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 16 to 16)\n+pub use consts::*;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 17 to 18)\n-pub use block::*;\n-pub use file::*;\n+pub use ext4::*;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 20 to 20)\n+pub use file::*;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 23 to 23)\n-pub use ext4::*;\n+\n"]}},{"file":"src/ext4_impls/ext4.rs","count":13,"kinds":{"Clippy(Warn)":["warning: useless conversion to the same type: `utils::errors::Errno`\n  --> src/ext4_impls/ext4.rs:56:33\n   |\n56 |                 if e.error() != Errno::ENOENT.into() || !create {\n   |                                 ^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `Errno::ENOENT`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n   = note: `#[warn(clippy::useless_conversion)]` on by default\n\n"],"Unformatted":["file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 35 to 35)\n-        \n+\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 71 to 71)\n-                \n+\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 75 to 75)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 78 to 78)\n-            }else{\n+            } else {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 97 to 97)\n-        \n+\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 99 to 99)\n-        \n+\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 35 to 35)\n-        \n+\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 71 to 71)\n-                \n+\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 75 to 75)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 78 to 78)\n-            }else{\n+            } else {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 97 to 97)\n-        \n+\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 99 to 99)\n-        \n+\n"]}},{"file":"src/ext4_impls/dir.rs","count":12,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 412 to 412)\n-        if self.dir_has_entry(child_inode_ref.inode_num){\n+        if self.dir_has_entry(child_inode_ref.inode_num) {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 415 to 415)\n-        \n+\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 412 to 412)\n-        if self.dir_has_entry(child_inode_ref.inode_num){\n+        if self.dir_has_entry(child_inode_ref.inode_num) {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 415 to 415)\n-        \n+\n"],"Clippy(Warn)":["warning: the method `dir_find_in_block` doesn't need a mutable reference\n  --> src/ext4_impls/dir.rs:51:48\n   |\n51 |                 let r = self.dir_find_in_block(&mut ext4block, name, result);\n   |                                                ^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n   = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/dir.rs:190:46\n    |\n190 |             let pblock = self.get_pblock_idx(&parent, iblock as u32)?;\n    |                                              ^^^^^^^ help: change this to: `parent`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/ext4_impls/dir.rs:267:69\n    |\n267 |             let mut sz = core::mem::size_of::<Ext4FakeDirEntry>() + used_len as usize;\n    |                                                                     ^^^^^^^^^^^^^^^^^ help: try: `used_len`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: deref which would be done by auto-deref\n   --> src/ext4_impls/dir.rs:341:9\n    |\n341 |         (*pde).entry_len += de_del_entry_len;\n    |         ^^^^^^ help: try: `pde`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref\n\n","warning: deref which would be done by auto-deref\n   --> src/ext4_impls/dir.rs:345:9\n    |\n345 |         (*de_del).inode = 0;\n    |         ^^^^^^^^^ help: try: `de_del`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref\n\n","warning: manual implementation of an assign operation\n   --> src/ext4_impls/dir.rs:386:21\n    |\n386 |                     offset = offset + de.entry_len as usize;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `offset += de.entry_len as usize`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n    = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n","warning: unneeded `return` statement\n   --> src/ext4_impls/dir.rs:427:9\n    |\n427 |         return Ok(EOK);\n    |         ^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n427 -         return Ok(EOK);\n427 +         Ok(EOK)\n    |\n\n","warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/ext4_impls/dir.rs:407:37\n    |\n407 |         let r = self.dir_find_entry(parent as u32, path, &mut search_result)?;\n    |                                     ^^^^^^^^^^^^^ help: try: `parent`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"]}},{"file":"src/ext4_impls/mod.rs","count":12,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 1 to 3)\n-pub mod extents;\n-pub mod ext4;\n-pub mod inode;\n+pub mod balloc;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 5 to 5)\n+pub mod ext4;\n+pub mod extents;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 7 to 7)\n-pub mod balloc;\n+pub mod inode;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 9 to 11)\n-pub use extents::*;\n-pub use ext4::*;\n-pub use inode::*;\n+pub use balloc::*;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 13 to 13)\n+pub use ext4::*;\n+pub use extents::*;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 15 to 15)\n-pub use balloc::*;\n+pub use inode::*;\n+\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 1 to 3)\n-pub mod extents;\n-pub mod ext4;\n-pub mod inode;\n+pub mod balloc;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 5 to 5)\n+pub mod ext4;\n+pub mod extents;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 7 to 7)\n-pub mod balloc;\n+pub mod inode;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 9 to 11)\n-pub use extents::*;\n-pub use ext4::*;\n-pub use inode::*;\n+pub use balloc::*;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 13 to 13)\n+pub use ext4::*;\n+pub use extents::*;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 15 to 15)\n-pub use balloc::*;\n+pub use inode::*;\n+\n"]}},{"file":"src/ext4_defs/block.rs","count":10,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 25 to 27)\n-        let data_bytes: &[u8; 60] = unsafe {\n-            core::mem::transmute(data)\n-        };\n+        let data_bytes: &[u8; 60] = unsafe { core::mem::transmute(data) };\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 29 to 29)\n-            disk_offset: 0, \n+            disk_offset: 0,\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 80 to 82)\n-\n-impl Block{\n-    pub fn sync_blk_to_disk(&self, block_device: Arc<dyn BlockDevice>){\n+impl Block {\n+    pub fn sync_blk_to_disk(&self, block_device: Arc<dyn BlockDevice>) {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 86 to 86)\n+\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 25 to 27)\n-        let data_bytes: &[u8; 60] = unsafe {\n-            core::mem::transmute(data)\n-        };\n+        let data_bytes: &[u8; 60] = unsafe { core::mem::transmute(data) };\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 29 to 29)\n-            disk_offset: 0, \n+            disk_offset: 0,\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 80 to 82)\n-\n-impl Block{\n-    pub fn sync_blk_to_disk(&self, block_device: Arc<dyn BlockDevice>){\n+impl Block {\n+    pub fn sync_blk_to_disk(&self, block_device: Arc<dyn BlockDevice>) {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 86 to 86)\n+\n"],"Clippy(Warn)":["warning: returning the result of a `let` binding from a block\n  --> src/ext4_defs/block.rs:39:13\n   |\n38 |             let value = ptr.read_unaligned();\n   |             --------------------------------- unnecessary `let` binding\n39 |             value\n   |             ^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n   |\n38 ~             \n39 ~             ptr.read_unaligned()\n   |\n\n","warning: returning the result of a `let` binding from a block\n  --> src/ext4_defs/block.rs:48:13\n   |\n47 |             let value = ptr.read_unaligned();\n   |             --------------------------------- unnecessary `let` binding\n48 |             value\n   |             ^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n   |\n47 ~             \n48 ~             ptr.read_unaligned()\n   |\n\n"]}},{"file":"src/ext4_impls/inode.rs","count":10,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/inode.rs (original lines from 178 to 178)\n-    pub fn append_inode_pblk_from(&self, inode_ref: &mut Ext4InodeRef, start_bgid: &mut u32) -> Result<Ext4Fsblk> {\n+    pub fn append_inode_pblk_from(\n+        &self,\n+        inode_ref: &mut Ext4InodeRef,\n+        start_bgid: &mut u32,\n+    ) -> Result<Ext4Fsblk> {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_impls/inode.rs (original lines from 178 to 178)\n-    pub fn append_inode_pblk_from(&self, inode_ref: &mut Ext4InodeRef, start_bgid: &mut u32) -> Result<Ext4Fsblk> {\n+    pub fn append_inode_pblk_from(\n+        &self,\n+        inode_ref: &mut Ext4InodeRef,\n+        start_bgid: &mut u32,\n+    ) -> Result<Ext4Fsblk> {\n"],"Clippy(Warn)":["warning: redundant field names in struct initialization\n  --> src/ext4_impls/inode.rs:42:13\n   |\n42 |             inode_num: inode_num,\n   |             ^^^^^^^^^^^^^^^^^^^^ help: replace it with: `inode_num`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","warning: returning the result of a `let` binding from a block\n  --> src/ext4_impls/inode.rs:30:9\n   |\n27 | /         let offset =\n28 | |             inode_table_blk_num as usize * BLOCK_SIZE + index as usize * inode_size as usize;\n   | |_____________________________________________________________________________________________- unnecessary `let` binding\n29 |\n30 |           offset\n   |           ^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n   |\n27 ~         \n28 |\n29 ~         inode_table_blk_num as usize * BLOCK_SIZE + index as usize * inode_size as usize\n   |\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/ext4_impls/inode.rs:78:44\n   |\n78 |         let search_path = self.find_extent(&inode_ref, lblock);\n   |                                            ^^^^^^^^^^ help: change this to: `inode_ref`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: casting integer literal to `u32` is unnecessary\n   --> src/ext4_impls/inode.rs:109:31\n    |\n109 |         let mut rel_blk_idx = 0 as u32;\n    |                               ^^^^^^^^ help: try: `0_u32`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/ext4_impls/inode.rs:111:38\n    |\n111 |         ext4_bmap_bit_find_clr(data, index as u32, 0x8000, &mut rel_blk_idx);\n    |                                      ^^^^^^^^^^^^ help: try: `index`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/inode.rs:112:27\n    |\n112 |         ext4_bmap_bit_set(&mut data, rel_blk_idx);\n    |                           ^^^^^^^^^ help: change this to: `data`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/inode.rs:114:70\n    |\n114 |         block_group.set_block_group_balloc_bitmap_csum(&super_block, &data);\n    |                                                                      ^^^^^ help: change this to: `data`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/inode.rs:116:69\n    |\n116 |             .write_offset(block_bitmap_block as usize * BLOCK_SIZE, &data);\n    |                                                                     ^^^^^ help: change this to: `data`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"]}},{"file":"src/utils/mod.rs","count":10,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 3 to 3)\n-pub mod path;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 5 to 5)\n+pub mod path;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 6 to 7)\n-\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 10 to 10)\n-pub use path::*;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 12 to 12)\n+pub use path::*;\n+\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 3 to 3)\n-pub mod path;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 5 to 5)\n+pub mod path;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 6 to 7)\n-\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 10 to 10)\n-pub use path::*;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 12 to 12)\n+pub use path::*;\n+\n"]}},{"file":"src/lib.rs","count":9,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/lib.rs (original lines from 7 to 7)\n-pub mod utils;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/lib.rs (original lines from 9 to 9)\n+pub mod utils;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/lib.rs (original lines from 10 to 10)\n-pub use utils::*;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/lib.rs (original lines from 12 to 12)\n+pub use utils::*;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/lib.rs (original lines from 13 to 13)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/lib.rs (original lines from 17 to 18)\n-\n-pub mod simple_interface;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/lib.rs (original lines from 20 to 20)\n+pub mod simple_interface;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/lib.rs (original lines from 21 to 22)\n-\n-pub use simple_interface::*;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/lib.rs (original lines from 24 to 24)\n+pub use simple_interface::*;\n"]}},{"file":"src/ext4_defs/super_block.rs","count":6,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/super_block.rs (original lines from 149 to 149)\n-    pub fn first_data_block(&self) -> u32{\n+    pub fn first_data_block(&self) -> u32 {\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/super_block.rs (original lines from 149 to 149)\n-    pub fn first_data_block(&self) -> u32{\n+    pub fn first_data_block(&self) -> u32 {\n"],"Clippy(Warn)":["warning: unneeded `return` statement\n   --> src/ext4_defs/super_block.rs:176:13\n    |\n176 |             return EXT4_MIN_BLOCK_GROUP_DESCRIPTOR_SIZE as u16;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n176 -             return EXT4_MIN_BLOCK_GROUP_DESCRIPTOR_SIZE as u16;\n176 +             EXT4_MIN_BLOCK_GROUP_DESCRIPTOR_SIZE as u16\n    |\n\n","warning: casting to the same type is unnecessary (`u16` -> `u16`)\n   --> src/ext4_defs/super_block.rs:176:20\n    |\n176 |             return EXT4_MIN_BLOCK_GROUP_DESCRIPTOR_SIZE as u16;\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `EXT4_MIN_BLOCK_GROUP_DESCRIPTOR_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_defs/super_block.rs:223:53\n    |\n223 |         let checksum = ext4_crc32c(EXT4_CRC32_INIT, &data, 0x3fc);\n    |                                                     ^^^^^ help: change this to: `data`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n","warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/ext4_defs/super_block.rs:240:42\n    |\n240 |         csum = ext4_crc32c(csum, bitmap, (blocks_per_group / 8) as u32);\n    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(blocks_per_group / 8)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"]}},{"file":"src/main.rs","count":6,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/main.rs (original lines from 112 to 112)\n-    let mut read_buf = vec![0u8;  READ_SIZE as usize];\n+    let mut read_buf = vec![0u8; READ_SIZE as usize];\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/main.rs (original lines from 118 to 119)\n-\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/main.rs (original lines from 121 to 121)\n-    let mut read_buf = vec![0u8;  READ_SIZE as usize];\n+    let mut read_buf = vec![0u8; READ_SIZE as usize];\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/main.rs (original lines from 161 to 161)\n-    let inode_ref = ext4.create(ROOT_INODE, \"4G.txt\", inode_mode | inode_perm).unwrap();\n+    let inode_ref = ext4\n+        .create(ROOT_INODE, \"4G.txt\", inode_mode | inode_perm)\n+        .unwrap();\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/main.rs (original lines from 169 to 169)\n-    let mut read_buf = vec![0u8;  WRITE_SIZE as usize];\n+    let mut read_buf = vec![0u8; WRITE_SIZE as usize];\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/main.rs (original lines from 174 to 174)\n-\n"]}},{"file":"src/ext4_defs/consts.rs","count":5,"kinds":{"Clippy(Warn)":["warning: usage of a legacy numeric constant\n  --> src/ext4_defs/consts.rs:25:38\n   |\n25 | pub const EXT_MAX_BLOCKS: Ext4Lblk = core::u32::MAX;\n   |                                      ^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: `#[warn(clippy::legacy_numeric_constants)]` on by default\nhelp: use the associated constant instead\n   |\n25 | pub const EXT_MAX_BLOCKS: Ext4Lblk = u32::MAX;\n   |                                      ~~~~~~~~\n\n"],"Unformatted":["file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/consts.rs (original lines from 11 to 14)\n-pub const ROOT_INODE: u32 = 2;                      // 根目录 inode\n-pub const JOURNAL_INODE: u32 = 8;                   // 日志文件 inode\n-pub const UNDEL_DIR_INODE: u32 = 6;                 // 未删除目录 inode\n-pub const LOST_AND_FOUND_INODE: u32 = 11;           // lost+found 目录 inode\n+pub const ROOT_INODE: u32 = 2; // 根目录 inode\n+pub const JOURNAL_INODE: u32 = 8; // 日志文件 inode\n+pub const UNDEL_DIR_INODE: u32 = 6; // 未删除目录 inode\n+pub const LOST_AND_FOUND_INODE: u32 = 11; // lost+found 目录 inode\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/consts.rs (original lines from 63 to 63)\n+\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/consts.rs (original lines from 11 to 14)\n-pub const ROOT_INODE: u32 = 2;                      // 根目录 inode\n-pub const JOURNAL_INODE: u32 = 8;                   // 日志文件 inode\n-pub const UNDEL_DIR_INODE: u32 = 6;                 // 未删除目录 inode\n-pub const LOST_AND_FOUND_INODE: u32 = 11;           // lost+found 目录 inode\n+pub const ROOT_INODE: u32 = 2; // 根目录 inode\n+pub const JOURNAL_INODE: u32 = 8; // 日志文件 inode\n+pub const UNDEL_DIR_INODE: u32 = 6; // 未删除目录 inode\n+pub const LOST_AND_FOUND_INODE: u32 = 11; // lost+found 目录 inode\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/consts.rs (original lines from 63 to 63)\n+\n"]}},{"file":"src/ext4_defs/inode.rs","count":5,"kinds":{"Clippy(Warn)":["warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/ext4_defs/inode.rs:426:25\n    |\n426 |         let ino_index = inode_id as u32;\n    |                         ^^^^^^^^^^^^^^^ help: try: `inode_id`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"],"Unformatted":["file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/inode.rs (original lines from 602 to 602)\n-    \n+\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/inode.rs (original lines from 634 to 634)\n-        assert_eq!(inode.mode, InodeFileType::S_IFREG.bits() | (InodePerm::S_IREAD | InodePerm::S_IWRITE | InodePerm::S_IEXEC).bits()); // Regular file with rwx permissions\n+        assert_eq!(\n+            inode.mode,\n+            InodeFileType::S_IFREG.bits()\n+                | (InodePerm::S_IREAD | InodePerm::S_IWRITE | InodePerm::S_IEXEC).bits()\n+        ); // Regular file with rwx permissions\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/inode.rs (original lines from 602 to 602)\n-    \n+\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/inode.rs (original lines from 634 to 634)\n-        assert_eq!(inode.mode, InodeFileType::S_IFREG.bits() | (InodePerm::S_IREAD | InodePerm::S_IWRITE | InodePerm::S_IEXEC).bits()); // Regular file with rwx permissions\n+        assert_eq!(\n+            inode.mode,\n+            InodeFileType::S_IFREG.bits()\n+                | (InodePerm::S_IREAD | InodePerm::S_IWRITE | InodePerm::S_IEXEC).bits()\n+        ); // Regular file with rwx permissions\n"]}},{"file":"src/ext4_impls/ialloc.rs","count":5,"kinds":{"Clippy(Warn)":["warning: casting integer literal to `u32` is unnecessary\n  --> src/ext4_impls/ialloc.rs:34:37\n   |\n34 |                 let mut idx_in_bg = 0 as u32;\n   |                                     ^^^^^^^^ help: try: `0_u32`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/ext4_impls/ialloc.rs:37:35\n   |\n37 |                 ext4_bmap_bit_set(&mut bitmap_data, idx_in_bg);\n   |                                   ^^^^^^^^^^^^^^^^ help: change this to: `bitmap_data`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/ext4_impls/ialloc.rs:41:77\n   |\n41 |                     .write_offset(inode_bitmap_block as usize * BLOCK_SIZE, &bitmap_data);\n   |                                                                             ^^^^^^^^^^^^ help: change this to: `bitmap_data`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/ext4_impls/ialloc.rs:43:69\n   |\n43 |                 bg.set_block_group_ialloc_bitmap_csum(&super_block, &bitmap_data);\n   |                                                                     ^^^^^^^^^^^^ help: change this to: `bitmap_data`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: casting to the same type is unnecessary (`u32` -> `u32`)\n  --> src/ext4_impls/ialloc.rs:57:43\n   |\n57 |                 let free = inodes_in_bg - unused as u32;\n   |                                           ^^^^^^^^^^^^^ help: try: `unused`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"]}},{"file":"src/ext4_defs/block_group.rs","count":4,"kinds":{"Clippy(Warn)":["warning: returning the result of a `let` binding from a block\n   --> src/ext4_defs/block_group.rs:166:9\n    |\n164 |         let crc = (checksum & 0xFFFF) as u16;\n    |         ------------------------------------- unnecessary `let` binding\n165 |\n166 |         crc\n    |         ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n    = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n    |\n164 ~         \n165 |\n166 ~         (checksum & 0xFFFF) as u16\n    |\n\n","warning: casting integer literal to `usize` is unnecessary\n   --> src/ext4_defs/block_group.rs:157:81\n    |\n157 |             unsafe { core::slice::from_raw_parts(self as *const _ as *const u8, 0x40 as usize) };\n    |                                                                                 ^^^^^^^^^^^^^ help: try: `0x40_usize`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"],"Unformatted":["file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 239 to 239)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 239 to 239)\n-\n"]}},{"file":"src/prelude.rs","count":4,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/prelude.rs (original lines from 19 to 19)\n+pub(crate) use core::cmp::min;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/prelude.rs (original lines from 22 to 23)\n-pub(crate) use core::cmp::min;\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/prelude.rs (original lines from 19 to 19)\n+pub(crate) use core::cmp::min;\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/prelude.rs (original lines from 22 to 23)\n-pub(crate) use core::cmp::min;\n-\n"]}},{"file":"src/utils/crc.rs","count":4,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/utils/crc.rs (original lines from 53 to 53)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/utils/crc.rs (original lines from 79 to 79)\n+\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/utils/crc.rs (original lines from 53 to 53)\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/utils/crc.rs (original lines from 79 to 79)\n+\n"]}},{"file":"src/utils/errors.rs","count":4,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/utils/errors.rs (original lines from 1 to 2)\n-\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/utils/errors.rs (original lines from 37 to 37)\n-    ENOTSUP   = 95,   /* Not supported */\n+    ENOTSUP = 95,      /* Not supported */\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/utils/errors.rs (original lines from 1 to 2)\n-\n-\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/utils/errors.rs (original lines from 37 to 37)\n-    ENOTSUP   = 95,   /* Not supported */\n+    ENOTSUP = 95,      /* Not supported */\n"]}},{"file":"src/simple_interface/mod.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 1 to 1)\n+\n+\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 1 to 1)\n+\n+\n"]}},{"file":"src/utils/bitmap.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/utils/bitmap.rs (original lines from 90 to 90)\n+\n","file: /home/runner/check/repos-default/yuoo655/ext4_rs/src/utils/bitmap.rs (original lines from 90 to 90)\n+\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=ext4_rs, checker=Clippy\n// toolchain=nightly-2024-06-01, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/yuoo655/ext4_rs\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking log v0.4.21\n    Checking bitflags v2.5.0\n    Checking ext4_rs v1.1.0 (/home/runner/check/repos-default/yuoo655/ext4_rs)\nerror: could not compile `ext4_rs` (lib) due to 7 previous errors; 112 warnings emitted\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=ext4_rs, checker=Mirai\n// toolchain=nightly-2024-06-01, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_14/yuoo655/ext4_rs\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking bitflags v2.5.0\n    Checking log v0.4.21\n    Checking ext4_rs v1.1.0 (/home/runner/check/batch_14/yuoo655/ext4_rs)\nerror: could not compile `ext4_rs` (lib)\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-09-28T16:18:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T16:18:08Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/utils/path.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unneeded `return` statement\n  --> src/utils/path.rs:27:5\n   |\n27 |     return path.len();\n   |     ^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n   = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n   |\n27 -     return path.len();\n27 +     path.len()\n   |\n\n"]}}]},{"user":"kern-crates","repo":"CSpace","pkg":"cspace","count":211,"raw_reports":[{"file":"src/cte.rs","count":80,"kinds":{"Clippy(Error)":["error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/cte.rs:508:11\n    |\n508 |         (*slot).delete_one()\n    |           ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"],"Unformatted":["file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 1 to 1)\n-use core::intrinsics::{unlikely, likely};\n+use core::intrinsics::{likely, unlikely};\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 3 to 3)\n-use common::{structures::exception_t, utils::{convert_to_type_ref, convert_to_mut_type_ref}, MASK, sel4_config::wordRadix};\n+use common::{\n+    sel4_config::wordRadix,\n+    structures::exception_t,\n+    utils::{convert_to_mut_type_ref, convert_to_type_ref},\n+    MASK,\n+};\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 5 to 7)\n-use crate::{cap::{cap_t, CapTag, same_region_as, same_object_as, is_cap_revocable, zombie::capCyclicZombie}, mdb::mdb_node_t,\n-    utils::{MAX_FREE_INDEX, resolveAddressBits_ret_t}, structures::finaliseSlot_ret,\n-    deps::{finaliseCap, preemptionPoint, post_cap_deletion}};\n+use crate::{\n+    cap::{\n+        cap_t, is_cap_revocable, same_object_as, same_region_as, zombie::capCyclicZombie, CapTag,\n+    },\n+    deps::{finaliseCap, post_cap_deletion, preemptionPoint},\n+    mdb::mdb_node_t,\n+    structures::finaliseSlot_ret,\n+    utils::{resolveAddressBits_ret_t, MAX_FREE_INDEX},\n+};\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 123 to 124)\n-                return badge == next.cap.get_ep_badge() &&\n-                    !(next.cteMDBNode.get_first_badged() != 0);\n+                return badge == next.cap.get_ep_badge()\n+                    && !(next.cteMDBNode.get_first_badged() != 0);\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 132 to 133)\n-                return badge == next.cap.get_nf_badge() &&\n-                    !(next.cteMDBNode.get_first_badged() != 0);\n+                return badge == next.cap.get_nf_badge()\n+                    && !(next.cteMDBNode.get_first_badged() != 0);\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 135 to 135)\n-            _ => true\n+            _ => true,\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 204 to 204)\n-\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 206 to 206)\n-    \n+\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 222 to 222)\n-                cap_removable(&fc_ret.remainder, self) && fc_ret.cleanupInfo.get_cap_type() == CapTag::CapNullCap\n+                cap_removable(&fc_ret.remainder, self)\n+                    && fc_ret.cleanupInfo.get_cap_type() == CapTag::CapNullCap\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 237 to 237)\n-    \n+\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 241 to 241)\n-                let first_badged = ((next_node.cteMDBNode.get_first_badged() != 0) || (mdb_node.get_first_badged() != 0)) as usize;\n+                let first_badged = ((next_node.cteMDBNode.get_first_badged() != 0)\n+                    || (mdb_node.get_first_badged() != 0))\n+                    as usize;\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 269 to 269)\n-                    if ptr == ptr2 && self.cap.get_zombie_number() == n && self.cap.get_zombie_type() == zombie_type {\n+                    if ptr == ptr2\n+                        && self.cap.get_zombie_number() == n\n+                        && self.cap.get_zombie_type() == zombie_type\n+                    {\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 273 to 273)\n-                        \n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 293 to 293)\n-       let mut next_ptr = self.cteMDBNode.get_next();\n+        let mut next_ptr = self.cteMDBNode.get_next();\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 318 to 318)\n-/// \n+///\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 335 to 335)\n-    \n+\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 338 to 338)\n-    src_slot.cteMDBNode.set_next(dest_slot as *const cte_t as usize);\n+    src_slot\n+        .cteMDBNode\n+        .set_next(dest_slot as *const cte_t as usize);\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 341 to 341)\n-        cte_ref.cteMDBNode.set_prev(dest_slot as *const cte_t as usize);\n+        cte_ref\n+            .cteMDBNode\n+            .set_prev(dest_slot as *const cte_t as usize);\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 348 to 349)\n-    slot.cteMDBNode = mdb_node_t::new(next as usize, 1usize, 1usize,\n-        parent as *const cte_t as usize);\n+    slot.cteMDBNode = mdb_node_t::new(\n+        next as usize,\n+        1usize,\n+        1usize,\n+        parent as *const cte_t as usize,\n+    );\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 358 to 358)\n-/// \n+///\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 364 to 367)\n-    assert!(\n-        dest_slot.cteMDBNode.get_next() == 0\n-            && dest_slot.cteMDBNode.get_prev() == 0\n-    );\n+    assert!(dest_slot.cteMDBNode.get_next() == 0 && dest_slot.cteMDBNode.get_prev() == 0);\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 377 to 377)\n-        prev_ref.cteMDBNode.set_next(dest_slot as *const cte_t as usize);\n+        prev_ref\n+            .cteMDBNode\n+            .set_next(dest_slot as *const cte_t as usize);\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 382 to 382)\n-        next_ref.cteMDBNode.set_prev(dest_slot as *const cte_t as usize);\n+        next_ref\n+            .cteMDBNode\n+            .set_prev(dest_slot as *const cte_t as usize);\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 393 to 393)\n-            convert_to_mut_type_ref::<cte_t>(prev_ptr).cteMDBNode.set_next(slot2 as *const cte_t as usize);\n+            convert_to_mut_type_ref::<cte_t>(prev_ptr)\n+                .cteMDBNode\n+                .set_next(slot2 as *const cte_t as usize);\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 397 to 397)\n-            convert_to_mut_type_ref::<cte_t>(next_ptr).cteMDBNode.set_prev(slot2 as *const cte_t as usize);\n+            convert_to_mut_type_ref::<cte_t>(next_ptr)\n+                .cteMDBNode\n+                .set_prev(slot2 as *const cte_t as usize);\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 410 to 410)\n-            convert_to_mut_type_ref::<cte_t>(prev_ptr).cteMDBNode.set_next(slot1 as *const cte_t as usize);\n+            convert_to_mut_type_ref::<cte_t>(prev_ptr)\n+                .cteMDBNode\n+                .set_next(slot1 as *const cte_t as usize);\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 414 to 414)\n-            convert_to_mut_type_ref::<cte_t>(next_ptr).cteMDBNode.set_prev(slot1 as *const cte_t as usize);\n+            convert_to_mut_type_ref::<cte_t>(next_ptr)\n+                .cteMDBNode\n+                .set_prev(slot1 as *const cte_t as usize);\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 419 to 419)\n-\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 438 to 438)\n-\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 447 to 449)\n-            srcSlot.cap.set_untyped_free_index(\n-                MAX_FREE_INDEX(srcCap.get_untyped_block_size())\n-            );\n+            srcSlot\n+                .cap\n+                .set_untyped_free_index(MAX_FREE_INDEX(srcCap.get_untyped_block_size()));\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 455 to 455)\n-/// \n+///\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 458 to 458)\n-pub fn resolve_address_bits(node_cap: &cap_t, cap_ptr: usize, _n_bits: usize) -> resolveAddressBits_ret_t {\n+pub fn resolve_address_bits(\n+    node_cap: &cap_t,\n+    cap_ptr: usize,\n+    _n_bits: usize,\n+) -> resolveAddressBits_ret_t {\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 503 to 504)\n-\n-\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 507 to 509)\n-    unsafe {\n-        (*slot).delete_one()\n-    }\n+    unsafe { (*slot).delete_one() }\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 511 to 511)\n+\n"],"Mirai":["warning:  Invalid arch cap type : {}\n  --> src/cte.rs:92:17\n   |\n92 |                 panic!(\" Invalid arch cap type : {}\", cap.get_cap_type() as usize);\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: Cannot find finaliseCap!\n   --> src/cte.rs:173:26\n    |\n173 |             let fc_ret = finaliseCap(&self.cap, self.is_final_cap(), false);\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nnote: related location\n   --> src/deps.rs:23:5\n    |\n23  |     panic!(\"Cannot find finaliseCap!\")\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: Cannot find finaliseCap!\n   --> src/cte.rs:220:26\n    |\n220 |             let fc_ret = finaliseCap(&self.cap, self.is_final_cap(), true);\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nnote: related location\n   --> src/deps.rs:23:5\n    |\n23  |     panic!(\"Cannot find finaliseCap!\")\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: Cannot find postCapDeletion!\n   --> src/cte.rs:246:13\n    |\n246 |             post_cap_deletion(cleanup_info);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nnote: related location\n   --> src/deps.rs:9:5\n    |\n9   |     panic!(\"Cannot find postCapDeletion!\")\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: assertion failed\n   --> src/cte.rs:251:9\n    |\n251 |         assert_eq!(self.cap.get_cap_type(), CapTag::CapZombieCap);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: assertion failed: n > 0\n   --> src/cte.rs:256:9\n    |\n256 |         assert!(n > 0);\n    |         ^^^^^^^^^^^^^^\n\n","warning: Cannot find preemptionPoint!\n   --> src/cte.rs:301:26\n    |\n301 |                 status = preemptionPoint();\n    |                          ^^^^^^^^^^^^^^^^^\n    |\nnote: related location\n   --> src/deps.rs:16:5\n    |\n16  |     panic!(\"Cannot find preemptionPoint!\")\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: assertion failed\n   --> src/cte.rs:330:5\n    |\n330 |     assert_eq!(dest_slot.cap.get_cap_type(), CapTag::CapNullCap);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: assertion failed\n   --> src/cte.rs:362:5\n    |\n362 |     assert_eq!(dest_slot.cap.get_cap_type(), CapTag::CapNullCap);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: Invalid cap type , finaliseCap should only return Zombie or NullCap\n   --> src/cte.rs:433:13\n    |\n433 |             panic!(\"Invalid cap type , finaliseCap should only return Zombie or NullCap\");\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: assertion failed\n   --> src/cte.rs:443:9\n    |\n443 |         assert_eq!(srcSlot.cap.get_cap_type(), CapTag::CapUntypedCap);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: assertion failed: levelBits != 0\n   --> src/cte.rs:473:9\n    |\n473 |         assert!(levelBits != 0);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to shift right with overflow\n   --> src/cte.rs:475:21\n    |\n475 |         let guard = (cap_ptr >> ((n_bits - guardBits) & MASK!(wordRadix))) & MASK!(guardBits);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to subtract with overflow\n   --> src/cte.rs:475:34\n    |\n475 |         let guard = (cap_ptr >> ((n_bits - guardBits) & MASK!(wordRadix))) & MASK!(guardBits);\n    |                                  ^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to shift right with overflow\n   --> src/cte.rs:484:22\n    |\n484 |         let offset = (cap_ptr >> (n_bits - levelBits)) & MASK!(radixBits);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"],"Clippy(Warn)":["warning: this `else { if .. }` block can be collapsed\n   --> src/cte.rs:150:16\n    |\n150 |           } else {\n    |  ________________^\n151 | |             if mdb.get_next() == 0 {\n152 | |                 true\n153 | |             } else {\n...   |\n156 | |             }\n157 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\n    = note: `#[warn(clippy::collapsible_else_if)]` on by default\nhelp: collapse nested if block\n    |\n150 ~         } else if mdb.get_next() == 0 {\n151 +             true\n152 +         } else {\n153 +             let next = convert_to_type_ref::<cte_t>(mdb.get_next());\n154 +             return !same_object_as(&self.cap, &next.cap);\n155 +         }\n    |\n\n","warning: using `clone` on type `cap_t` which implements the `Copy` trait\n  --> src/cte.rs:51:31\n   |\n51 |                     ret.cap = cap.clone();\n   |                               ^^^^^^^^^^^ help: try dereferencing it: `*cap`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: using `clone` on type `cap_t` which implements the `Copy` trait\n  --> src/cte.rs:61:27\n   |\n61 |                 ret.cap = cap.clone();\n   |                           ^^^^^^^^^^^ help: try dereferencing it: `*cap`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: using `clone` on type `cap_t` which implements the `Copy` trait\n  --> src/cte.rs:75:31\n   |\n75 |                     ret.cap = cap.clone();\n   |                               ^^^^^^^^^^^ help: try dereferencing it: `*cap`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: using `clone` on type `cap_t` which implements the `Copy` trait\n  --> src/cte.rs:83:34\n   |\n83 |                 let mut newCap = cap.clone();\n   |                                  ^^^^^^^^^^^ help: try dereferencing it: `*cap`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: using `clone` on type `cap_t` which implements the `Copy` trait\n  --> src/cte.rs:89:27\n   |\n89 |                 ret.cap = cap.clone();\n   |                           ^^^^^^^^^^^ help: try dereferencing it: `*cap`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: unneeded `return` statement\n   --> src/cte.rs:105:9\n    |\n105 |         return exception_t::EXCEPTION_NONE;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n105 -         return exception_t::EXCEPTION_NONE;\n105 +         exception_t::EXCEPTION_NONE\n    |\n\n","warning: this boolean expression can be simplified\n   --> src/cte.rs:109:12\n    |\n109 |         if !(self.cteMDBNode.get_revocable() != 0) {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.cteMDBNode.get_revocable() == 0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n","warning: this boolean expression can be simplified\n   --> src/cte.rs:124:21\n    |\n124 |                     !(next.cteMDBNode.get_first_badged() != 0);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `next.cteMDBNode.get_first_badged() == 0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n","warning: this boolean expression can be simplified\n   --> src/cte.rs:133:21\n    |\n133 |                     !(next.cteMDBNode.get_first_badged() != 0);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `next.cteMDBNode.get_first_badged() == 0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n","warning: unneeded `return` statement\n   --> src/cte.rs:123:17\n    |\n123 | /                 return badge == next.cap.get_ep_badge() &&\n124 | |                     !(next.cteMDBNode.get_first_badged() != 0);\n    | |______________________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n123 ~                 badge == next.cap.get_ep_badge() &&\n124 ~                     !(next.cteMDBNode.get_first_badged() != 0)\n    |\n\n","warning: unneeded `return` statement\n   --> src/cte.rs:132:17\n    |\n132 | /                 return badge == next.cap.get_nf_badge() &&\n133 | |                     !(next.cteMDBNode.get_first_badged() != 0);\n    | |______________________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n132 ~                 badge == next.cap.get_nf_badge() &&\n133 ~                     !(next.cteMDBNode.get_first_badged() != 0)\n    |\n\n","warning: unneeded `return` statement\n   --> src/cte.rs:155:17\n    |\n155 |                 return !same_object_as(&self.cap, &next.cap);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n155 -                 return !same_object_as(&self.cap, &next.cap);\n155 +                 !same_object_as(&self.cap, &next.cap)\n    |\n\n","warning: match expression looks like `matches!` macro\n   --> src/cte.rs:164:9\n    |\n164 | /         match self.cap.get_cap_type() {\n165 | |             CapTag::CapThreadCap | CapTag::CapZombieCap | CapTag::CapCNodeCap => true,\n166 | |             _ => false,\n167 | |         }\n    | |_________^ help: try: `matches!(self.cap.get_cap_type(), CapTag::CapThreadCap | CapTag::CapZombieCap | CapTag::CapCNodeCap)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro\n\n","warning: unneeded `return` statement\n   --> src/cte.rs:215:9\n    |\n215 |         return exception_t::EXCEPTION_NONE;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n215 -         return exception_t::EXCEPTION_NONE;\n215 +         exception_t::EXCEPTION_NONE\n    |\n\n","warning: unneeded `return` statement\n   --> src/cte.rs:313:9\n    |\n313 |         return exception_t::EXCEPTION_NONE;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n313 -         return exception_t::EXCEPTION_NONE;\n313 +         exception_t::EXCEPTION_NONE\n    |\n\n","warning: using `clone` on type `mdb_node_t` which implements the `Copy` trait\n   --> src/cte.rs:323:22\n    |\n323 |     let mut newMDB = srcMDB.clone();\n    |                      ^^^^^^^^^^^^^^ help: try dereferencing it: `*srcMDB`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cte.rs:336:24\n    |\n336 |     (*dest_slot).cap = new_cap.clone();\n    |                        ^^^^^^^^^^^^^^^ help: try dereferencing it: `*new_cap`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: deref which would be done by auto-deref\n   --> src/cte.rs:336:5\n    |\n336 |     (*dest_slot).cap = new_cap.clone();\n    |     ^^^^^^^^^^^^ help: try: `dest_slot`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref\n    = note: `#[warn(clippy::explicit_auto_deref)]` on by default\n\n","warning: deref which would be done by auto-deref\n   --> src/cte.rs:337:5\n    |\n337 |     (*dest_slot).cteMDBNode = newMDB;\n    |     ^^^^^^^^^^^^ help: try: `dest_slot`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref\n\n","warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cte.rs:347:16\n    |\n347 |     slot.cap = cap.clone();\n    |                ^^^^^^^^^^^ help: try dereferencing it: `*cap`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/cte.rs:348:39\n    |\n348 |     slot.cteMDBNode = mdb_node_t::new(next as usize, 1usize, 1usize,\n    |                                       ^^^^^^^^^^^^^ help: try: `next`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n","warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cte.rs:369:21\n    |\n369 |     dest_slot.cap = new_cap.clone();\n    |                     ^^^^^^^^^^^^^^^ help: try dereferencing it: `*new_cap`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cte.rs:401:17\n    |\n401 |     slot1.cap = cap2.clone();\n    |                 ^^^^^^^^^^^^ help: try dereferencing it: `*cap2`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cte.rs:404:17\n    |\n404 |     slot2.cap = cap1.clone();\n    |                 ^^^^^^^^^^^^ help: try dereferencing it: `*cap1`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: unneeded `return` statement\n   --> src/cte.rs:424:13\n    |\n424 |             return true;\n    |             ^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n424 -             return true;\n424 +             true\n    |\n\n","warning: unneeded `return` statement\n   --> src/cte.rs:430:13\n    |\n430 |             return n == 0 || (n == 1 && slot == z_slot);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n430 -             return n == 0 || (n == 1 && slot == z_slot);\n430 +             n == 0 || (n == 1 && slot == z_slot)\n    |\n\n","warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cte.rs:462:23\n    |\n462 |     let mut nodeCap = node_cap.clone();\n    |                       ^^^^^^^^^^^^^^^^ help: try dereferencing it: `*node_cap`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cte.rs:493:28\n    |\n493 |         nodeCap = unsafe { (*slot).cap.clone() };\n    |                            ^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `(*slot).cap`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"]}},{"file":"src/cap/mod.rs","count":34,"kinds":{"Clippy(Warn)":["warning: unused doc comment\n  --> src/cap/mod.rs:51:1\n   |\n51 | / /// cap_t 表示一个capability，由两个机器字组成，包含了类型、对象元数据以及指向内核对象的指针。\n52 | | /// 每个类型的capability的每个字段都实现了get和set方法。\n   | |_-------------------------------------------------------^\n   |   |\n   |   rustdoc does not generate documentation for macro invocations\n   |\n   = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\n   = note: `#[warn(unused_doc_comments)]` on by default\n\n","warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cap/mod.rs:125:20\n    |\n125 |             return self.clone();\n    |                    ^^^^^^^^^^^^ help: try dereferencing it: `*self`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n    = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n","warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cap/mod.rs:130:39\n    |\n130 |                     let mut new_cap = self.clone();\n    |                                       ^^^^^^^^^^^^ help: try dereferencing it: `*self`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cap/mod.rs:140:39\n    |\n140 |                     let mut new_cap = self.clone();\n    |                                       ^^^^^^^^^^^^ help: try dereferencing it: `*self`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cap/mod.rs:155:35\n    |\n155 |                 let mut new_cap = self.clone();\n    |                                   ^^^^^^^^^^^^ help: try dereferencing it: `*self`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cap/mod.rs:160:20\n    |\n160 |             _ => { self.clone() }\n    |                    ^^^^^^^^^^^^ help: try dereferencing it: `*self`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: match expression looks like `matches!` macro\n   --> src/cap/mod.rs:200:9\n    |\n200 | / ...   match self.get_cap_type() {\n201 | | ...       CapTag::CapUntypedCap | CapTag::CapEndpointCap | CapTag::CapNotificationCap | CapTag::CapCNodeCap | CapTag::CapFrameCap | CapTa...\n202 | | ...       CapTag::CapPageTableCap | CapTag::CapZombieCap | CapTag::CapThreadCap => true,\n203 | | ...       _ => false,\n204 | | ...   }\n    | |_______^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro\n    = note: `#[warn(clippy::match_like_matches_macro)]` on by default\nhelp: try\n    |\n200 ~         matches!(self.get_cap_type(), CapTag::CapUntypedCap | CapTag::CapEndpointCap | CapTag::CapNotificationCap | CapTag::CapCNodeCap | CapTag::CapFrameCap | CapTag::CapASIDPoolCap |\n201 +             CapTag::CapPageTableCap | CapTag::CapZombieCap | CapTag::CapThreadCap)\n    |\n\n","warning: unneeded `return` statement\n   --> src/cap/mod.rs:224:13\n    |\n224 |             return false;\n    |             ^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n224 -             return false;\n224 +             false\n    |\n\n","warning: unneeded `return` statement\n   --> src/cap/mod.rs:271:13\n    |\n271 |             return false;\n    |             ^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n271 -             return false;\n271 +             false\n    |\n\n","warning: match expression looks like `matches!` macro\n   --> src/cap/mod.rs:257:13\n    |\n257 | /             match cap2.get_cap_type() {\n258 | |                 CapTag::CapIrqControlCap | CapTag::CapIrqHandlerCap => {\n259 | |                     true\n260 | |                 }\n261 | |                 _ => false\n262 | |             }\n    | |_____________^ help: try: `matches!(cap2.get_cap_type(), CapTag::CapIrqControlCap | CapTag::CapIrqHandlerCap)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro\n\n","warning: unneeded `return` statement\n   --> src/cap/mod.rs:307:13\n    |\n307 |             return derived_cap.get_ep_badge() != src_cap.get_ep_badge();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n307 -             return derived_cap.get_ep_badge() != src_cap.get_ep_badge();\n307 +             derived_cap.get_ep_badge() != src_cap.get_ep_badge()\n    |\n\n","warning: unneeded `return` statement\n   --> src/cap/mod.rs:312:13\n    |\n312 |             return derived_cap.get_nf_badge() != src_cap.get_nf_badge();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n312 -             return derived_cap.get_nf_badge() != src_cap.get_nf_badge();\n312 +             derived_cap.get_nf_badge() != src_cap.get_nf_badge()\n    |\n\n","warning: unneeded `return` statement\n   --> src/cap/mod.rs:316:13\n    |\n316 |             return src_cap.get_cap_type() == CapTag::CapIrqControlCap;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n316 -             return src_cap.get_cap_type() == CapTag::CapIrqControlCap;\n316 +             src_cap.get_cap_type() == CapTag::CapIrqControlCap\n    |\n\n","warning: unneeded `return` statement\n   --> src/cap/mod.rs:320:13\n    |\n320 |             return true;\n    |             ^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n320 -             return true;\n320 +             true\n    |\n\n"],"Unformatted":["file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 1 to 1)\n-use common::{sel4_config::*, MASK, utils::pageBitsForSize, plus_define_bitfield};\n+use common::{plus_define_bitfield, sel4_config::*, utils::pageBitsForSize, MASK};\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 48 to 48)\n-    CapASIDPoolCap = 13\n+    CapASIDPoolCap = 13,\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 160 to 160)\n-            _ => { self.clone() }\n+            _ => self.clone(),\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 165 to 167)\n-        unsafe {\n-            core::mem::transmute::<u8, CapTag>(self.get_type() as u8)\n-        }\n+        unsafe { core::mem::transmute::<u8, CapTag>(self.get_type() as u8) }\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 181 to 183)\n-            _ => {\n-                0\n-            }\n+            _ => 0,\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 201 to 202)\n-            CapTag::CapUntypedCap | CapTag::CapEndpointCap | CapTag::CapNotificationCap | CapTag::CapCNodeCap | CapTag::CapFrameCap | CapTag::CapASIDPoolCap |\n-            CapTag::CapPageTableCap | CapTag::CapZombieCap | CapTag::CapThreadCap => true,\n+            CapTag::CapUntypedCap\n+            | CapTag::CapEndpointCap\n+            | CapTag::CapNotificationCap\n+            | CapTag::CapCNodeCap\n+            | CapTag::CapFrameCap\n+            | CapTag::CapASIDPoolCap\n+            | CapTag::CapPageTableCap\n+            | CapTag::CapZombieCap\n+            | CapTag::CapThreadCap => true,\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 234 to 234)\n-            false \n+            false\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 236 to 237)\n-        CapTag::CapEndpointCap | CapTag::CapNotificationCap | CapTag::CapPageTableCap | CapTag::CapASIDPoolCap \n-            | CapTag::CapThreadCap => {\n+        CapTag::CapEndpointCap\n+        | CapTag::CapNotificationCap\n+        | CapTag::CapPageTableCap\n+        | CapTag::CapASIDPoolCap\n+        | CapTag::CapThreadCap => {\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 256 to 263)\n-        CapTag::CapIrqControlCap => {\n-            match cap2.get_cap_type() {\n-                CapTag::CapIrqControlCap | CapTag::CapIrqHandlerCap => {\n-                    true\n-                }\n-                _ => false\n-            }\n-        }\n+        CapTag::CapIrqControlCap => match cap2.get_cap_type() {\n+            CapTag::CapIrqControlCap | CapTag::CapIrqHandlerCap => true,\n+            _ => false,\n+        },\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 281 to 281)\n-    if cap1.get_cap_type() == CapTag::CapIrqControlCap && cap2.get_cap_type() == CapTag::CapIrqHandlerCap {\n+    if cap1.get_cap_type() == CapTag::CapIrqControlCap\n+        && cap2.get_cap_type() == CapTag::CapIrqHandlerCap\n+    {\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 294 to 294)\n-            && (cap1.get_frame_is_device() == 0) == (cap2.get_frame_is_device() == 0)\n+            && (cap1.get_frame_is_device() == 0) == (cap2.get_frame_is_device() == 0);\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 322 to 323)\n-        \n-        _ => false\n+\n+        _ => false,\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 326 to 326)\n+\n"],"Mirai":["warning: unused doc comment\n  --> src/cap/mod.rs:51:1\n   |\n51 | / /// cap_t 表示一个capability，由两个机器字组成，包含了类型、对象元数据以及指向内核对象的指针。\n52 | | /// 每个类型的capability的每个字段都实现了get和set方法。\n   | |_-------------------------------------------------------^\n   |   |\n   |   rustdoc does not generate documentation for macro invocations\n   |\n   = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\n   = note: `#[warn(unused_doc_comments)]` on by default\n\n","warning: possible attempt to add with overflow\n   --> src/cap/mod.rs:192:36\n    |\n192 |             CapTag::CapCNodeCap => self.get_cnode_radix() + seL4_SlotBits,\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to add with overflow\n   --> src/cap/mod.rs:220:28\n    |\n220 |                 let bTop = bBase + MASK!(cap2.get_cap_size_bits());\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to add with overflow\n   --> src/cap/mod.rs:230:28\n    |\n230 |                 let topA = botA + MASK!(pageBitsForSize(cap1.get_frame_size()));\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to add with overflow\n   --> src/cap/mod.rs:231:28\n    |\n231 |                 let topB = botB + MASK!(pageBitsForSize(cap2.get_frame_size()));\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: assertion failed\n   --> src/cap/mod.rs:306:13\n    |\n306 |             assert_eq!(src_cap.get_cap_type(), CapTag::CapEndpointCap);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: assertion failed\n   --> src/cap/mod.rs:311:13\n    |\n311 |             assert_eq!(src_cap.get_cap_type(), CapTag::CapNotificationCap);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/rel4_comm-d61007d13971bef8/74acf0c/src/utils.rs","count":21,"kinds":{"Mirai":["warning: possible attempt to shift left with overflow\n  --> src/cap/zombie.rs:25:40\n   |\n25 |         return self.get_zombie_id() & !MASK!(radix + 1);\n   |                                        ^^^^^^^^^^^^^^^^\n   |\n   = note: this warning originates in the macro `MASK` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to shift left with overflow\n  --> src/cap/zombie.rs:31:39\n   |\n31 |         return self.get_zombie_id() & MASK!(radix + 1);\n   |                                       ^^^^^^^^^^^^^^^^\n   |\n   = note: this warning originates in the macro `MASK` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to shift left with overflow\n  --> src/cap/zombie.rs:37:43\n   |\n37 |         let ptr = self.get_zombie_id() & !MASK!(radix + 1);\n   |                                           ^^^^^^^^^^^^^^^^\n   |\n   = note: this warning originates in the macro `MASK` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to shift left with overflow\n  --> src/cap/zombie.rs:55:16\n   |\n55 |     return n & MASK!(wordRadix);\n   |                ^^^^^^^^^^^^^^^^\n   |\n   = note: this warning originates in the macro `MASK` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to shift left with overflow\n   --> src/cap/mod.rs:220:36\n    |\n220 |                 let bTop = bBase + MASK!(cap2.get_cap_size_bits());\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the macro `MASK` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to shift left with overflow\n   --> src/cap/mod.rs:230:35\n    |\n230 |                 let topA = botA + MASK!(pageBitsForSize(cap1.get_frame_size()));\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the macro `MASK` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to shift left with overflow\n   --> src/cap/mod.rs:231:35\n    |\n231 |                 let topB = botB + MASK!(pageBitsForSize(cap2.get_frame_size()));\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the macro `MASK` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to shift left with overflow\n   --> src/cte.rs:475:57\n    |\n475 |         let guard = (cap_ptr >> ((n_bits - guardBits) & MASK!(wordRadix))) & MASK!(guardBits);\n    |                                                         ^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the macro `MASK` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to subtract with overflow\n  --> src/cap/zombie.rs:25:40\n   |\n25 |         return self.get_zombie_id() & !MASK!(radix + 1);\n   |                                        ^^^^^^^^^^^^^^^^\n   |\n   = note: this warning originates in the macro `MASK` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to subtract with overflow\n  --> src/cap/zombie.rs:31:39\n   |\n31 |         return self.get_zombie_id() & MASK!(radix + 1);\n   |                                       ^^^^^^^^^^^^^^^^\n   |\n   = note: this warning originates in the macro `MASK` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to subtract with overflow\n  --> src/cap/zombie.rs:37:43\n   |\n37 |         let ptr = self.get_zombie_id() & !MASK!(radix + 1);\n   |                                           ^^^^^^^^^^^^^^^^\n   |\n   = note: this warning originates in the macro `MASK` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to subtract with overflow\n  --> src/cap/zombie.rs:55:16\n   |\n55 |     return n & MASK!(wordRadix);\n   |                ^^^^^^^^^^^^^^^^\n   |\n   = note: this warning originates in the macro `MASK` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to subtract with overflow\n   --> src/cap/mod.rs:154:45\n    |\n154 |                 let guard = w.get_guard() & MASK!(guard_size);\n    |                                             ^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the macro `MASK` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to subtract with overflow\n   --> src/cap/mod.rs:219:36\n    |\n219 |                 let aTop = aBase + MASK!(cap1.get_untyped_block_size());\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the macro `MASK` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to subtract with overflow\n   --> src/cap/mod.rs:220:36\n    |\n220 |                 let bTop = bBase + MASK!(cap2.get_cap_size_bits());\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the macro `MASK` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to subtract with overflow\n   --> src/cap/mod.rs:230:35\n    |\n230 |                 let topA = botA + MASK!(pageBitsForSize(cap1.get_frame_size()));\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the macro `MASK` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to subtract with overflow\n   --> src/cap/mod.rs:231:35\n    |\n231 |                 let topB = botB + MASK!(pageBitsForSize(cap2.get_frame_size()));\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the macro `MASK` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to subtract with overflow\n   --> src/cte.rs:475:57\n    |\n475 |         let guard = (cap_ptr >> ((n_bits - guardBits) & MASK!(wordRadix))) & MASK!(guardBits);\n    |                                                         ^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the macro `MASK` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to subtract with overflow\n   --> src/cte.rs:475:78\n    |\n475 |         let guard = (cap_ptr >> ((n_bits - guardBits) & MASK!(wordRadix))) & MASK!(guardBits);\n    |                                                                              ^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the macro `MASK` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to subtract with overflow\n   --> src/cte.rs:484:58\n    |\n484 |         let offset = (cap_ptr >> (n_bits - levelBits)) & MASK!(radixBits);\n    |                                                          ^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the macro `MASK` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to shift left with overflow\n --> src/utils.rs:7:5\n  |\n7 |     BIT!(bits - seL4_MinUntypedBits)\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: this warning originates in the macro `BIT` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"src/compatibility.rs","count":19,"kinds":{"Unformatted":["file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 1 to 3)\n-\n-\n-use crate::{cap::{CapTag, cap_t}, interface::{cte_t, cte_insert}, cte::deriveCap_ret};\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 5 to 6)\n-  cap_endpoint_cap_get_capCanGrant, cap_endpoint_cap_get_capCanGrantReply, cap_endpoint_cap_get_capCanReceive,\n-  cap_endpoint_cap_get_capCanSend, cap_endpoint_cap_get_capEPPtr,\n+    cap_endpoint_cap_get_capCanGrant, cap_endpoint_cap_get_capCanGrantReply,\n+    cap_endpoint_cap_get_capCanReceive, cap_endpoint_cap_get_capCanSend,\n+    cap_endpoint_cap_get_capEPPtr,\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 8 to 11)\n-\n-pub use super::cap::zombie::{\n-  Zombie_new,\n-  ZombieType_ZombieTCB\n+use crate::{\n+    cap::{cap_t, CapTag},\n+    cte::deriveCap_ret,\n+    interface::{cte_insert, cte_t},\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 14 to 14)\n+pub use super::cap::zombie::{ZombieType_ZombieTCB, Zombie_new};\n+\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 15 to 16)\n-  cap_reply_cap_get_capReplyCanGrant, cap_reply_cap_get_capReplyMaster, cap_reply_cap_get_capTCBPtr, cap_reply_cap_new,\n-  cap_reply_cap_set_capReplyCanGrant,\n+    cap_reply_cap_get_capReplyCanGrant, cap_reply_cap_get_capReplyMaster,\n+    cap_reply_cap_get_capTCBPtr, cap_reply_cap_new, cap_reply_cap_set_capReplyCanGrant,\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 20 to 21)\n-  cap_notification_cap_get_capNtfnCanSend,\n-  cap_notification_cap_get_capNtfnPtr,\n+    cap_notification_cap_get_capNtfnCanSend, cap_notification_cap_get_capNtfnPtr,\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 24 to 24)\n-\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 27 to 27)\n-\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 53 to 53)\n-  panic!(\"should not be invoked!\")\n+    panic!(\"should not be invoked!\")\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 56 to 56)\n-\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 59 to 61)\n-    unsafe {\n-        cte_insert(newCap, &mut *srcSlot, &mut *destSlot)\n-    }\n+    unsafe { cte_insert(newCap, &mut *srcSlot, &mut *destSlot) }\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 67 to 69)\n-    unsafe {\n-        (&mut *slot).derive_cap(cap)\n-    }\n+    unsafe { (&mut *slot).derive_cap(cap) }\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 71 to 71)\n-\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 77 to 77)\n+\n"],"Clippy(Error)":["error: this public function might dereference a raw pointer but is not marked `unsafe`\n  --> src/compatibility.rs:60:34\n   |\n60 |         cte_insert(newCap, &mut *srcSlot, &mut *destSlot)\n   |                                  ^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n\n","error: this public function might dereference a raw pointer but is not marked `unsafe`\n  --> src/compatibility.rs:60:49\n   |\n60 |         cte_insert(newCap, &mut *srcSlot, &mut *destSlot)\n   |                                                 ^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n\n","error: this public function might dereference a raw pointer but is not marked `unsafe`\n  --> src/compatibility.rs:68:16\n   |\n68 |         (&mut *slot).derive_cap(cap)\n   |                ^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n\n"],"Clippy(Warn)":["warning: this expression borrows a value the compiler would automatically borrow\n  --> src/compatibility.rs:68:9\n   |\n68 |         (&mut *slot).derive_cap(cap)\n   |         ^^^^^^^^^^^^ help: change this to: `(*slot)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"],"Mirai":["warning: should not be invoked!\n  --> src/compatibility.rs:53:3\n   |\n53 |   panic!(\"should not be invoked!\")\n   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"src/cap/zombie.rs","count":11,"kinds":{"Mirai":["warning: possible attempt to shift left with overflow\n --> src/cap/zombie.rs:8:41\n  |\n8 | pub const ZombieType_ZombieTCB: usize = 1usize << wordRadix;\n  |                                         ^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to add with overflow\n  --> src/cap/zombie.rs:49:22\n   |\n49 |         mask = MASK!(_type + 1);\n   |                      ^^^^^^^^^\n\n"],"Unformatted":["file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/zombie.rs (original lines from 3 to 3)\n-\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/zombie.rs (original lines from 40 to 40)\n-\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/zombie.rs (original lines from 64 to 64)\n+\n"],"Clippy(Warn)":["warning: unneeded `return` statement\n  --> src/cap/zombie.rs:19:9\n   |\n19 |         return ZombieType_ZombieCNode(_type);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n   = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n   |\n19 -         return ZombieType_ZombieCNode(_type);\n19 +         ZombieType_ZombieCNode(_type)\n   |\n\n","warning: unneeded `return` statement\n  --> src/cap/zombie.rs:25:9\n   |\n25 |         return self.get_zombie_id() & !MASK!(radix + 1);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n   |\n25 -         return self.get_zombie_id() & !MASK!(radix + 1);\n25 +         self.get_zombie_id() & !MASK!(radix + 1)\n   |\n\n","warning: unneeded `return` statement\n  --> src/cap/zombie.rs:31:9\n   |\n31 |         return self.get_zombie_id() & MASK!(radix + 1);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n   |\n31 -         return self.get_zombie_id() & MASK!(radix + 1);\n31 +         self.get_zombie_id() & MASK!(radix + 1)\n   |\n\n","warning: unneeded `return` statement\n  --> src/cap/zombie.rs:51:5\n   |\n51 |     return cap_t::new_zombie_cap((ptr & !mask) | (number & mask), _type);\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n   |\n51 -     return cap_t::new_zombie_cap((ptr & !mask) | (number & mask), _type);\n51 +     cap_t::new_zombie_cap((ptr & !mask) | (number & mask), _type)\n   |\n\n","warning: unneeded late initialization\n  --> src/cap/zombie.rs:45:5\n   |\n45 |     let mask: usize;\n   |     ^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init\n   = note: `#[warn(clippy::needless_late_init)]` on by default\nhelp: move the declaration `mask` here and remove the assignments from the branches\n   |\n45 ~     \n46 ~     let mask: usize = if _type == ZombieType_ZombieTCB {\n47 ~         MASK!(TCB_CNODE_RADIX + 1)\n48 |     } else {\n49 ~         MASK!(_type + 1)\n50 ~     };\n   |\n\n","warning: unneeded `return` statement\n  --> src/cap/zombie.rs:55:5\n   |\n55 |     return n & MASK!(wordRadix);\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n   |\n55 -     return n & MASK!(wordRadix);\n55 +     n & MASK!(wordRadix)\n   |\n\n"]}},{"file":"src/lib.rs","count":9,"kinds":{"Unformatted":["file: /home/runner/check/batch_2/kern-crates/CSpace/src/lib.rs (original lines from 33 to 33)\n-\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/lib.rs (original lines from 36 to 38)\n-mod utils;\n-mod mdb;\n-mod cte;\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/lib.rs (original lines from 40 to 40)\n+mod cte;\n+mod mdb;\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/lib.rs (original lines from 41 to 41)\n+mod utils;\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/lib.rs (original lines from 42 to 44)\n-\n-/// 暴露给外部的接口\n-pub mod interface;\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/lib.rs (original lines from 47 to 47)\n+/// 暴露给外部的接口\n+pub mod interface;\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/lib.rs (original lines from 50 to 50)\n+\n"],"Mirai":["warning: the feature `core_intrinsics` is internal to the compiler or standard library\n --> src/lib.rs:1:12\n  |\n1 | #![feature(core_intrinsics)]\n  |            ^^^^^^^^^^^^^^^\n  |\n  = note: using it is strongly discouraged\n  = note: `#[warn(internal_features)]` on by default\n\n"],"Clippy(Warn)":["warning: the feature `core_intrinsics` is internal to the compiler or standard library\n --> src/lib.rs:1:12\n  |\n1 | #![feature(core_intrinsics)]\n  |            ^^^^^^^^^^^^^^^\n  |\n  = note: using it is strongly discouraged\n  = note: `#[warn(internal_features)]` on by default\n\n"]}},{"file":"src/cap/endpoint.rs","count":5,"kinds":{"Unformatted":["file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/endpoint.rs (original lines from 1 to 1)\n-\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/endpoint.rs (original lines from 4 to 4)\n-\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/endpoint.rs (original lines from 6 to 6)\n-pub fn cap_endpoint_cap_get_capCanGrantReply(cap: & cap_t) -> usize {\n+pub fn cap_endpoint_cap_get_capCanGrantReply(cap: &cap_t) -> usize {\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/endpoint.rs (original lines from 9 to 9)\n-\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/endpoint.rs (original lines from 30 to 30)\n+\n"]}},{"file":"src/mdb.rs","count":5,"kinds":{"Unformatted":["file: /home/runner/check/batch_2/kern-crates/CSpace/src/mdb.rs (original lines from 3 to 3)\n-\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/mdb.rs (original lines from 5 to 5)\n-/// \n+///\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/mdb.rs (original lines from 7 to 7)\n-/// \n+///\n"],"Clippy(Warn)":["warning: unused doc comment\n --> src/mdb.rs:4:1\n  |\n4 | / /// 两个机器字组成，维护一个双向链表，其中还有revocable和firstbadged两个标志位字段。\n5 | | /// \n6 | | /// revocable：可以在不通知对象持有者的情况下被删除或撤销。\n7 | | /// \n8 | | /// firstbadged：表示此能力是否是具有相同对象和相同类型的一组能力中的第一个被赋予badge的能力。\n  | |_---------------------------------------------------------------------------------------------^\n  |   |\n  |   rustdoc does not generate documentation for macro invocations\n  |\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\n\n"],"Mirai":["warning: unused doc comment\n --> src/mdb.rs:4:1\n  |\n4 | / /// 两个机器字组成，维护一个双向链表，其中还有revocable和firstbadged两个标志位字段。\n5 | | /// \n6 | | /// revocable：可以在不通知对象持有者的情况下被删除或撤销。\n7 | | /// \n8 | | /// firstbadged：表示此能力是否是具有相同对象和相同类型的一组能力中的第一个被赋予badge的能力。\n  | |_---------------------------------------------------------------------------------------------^\n  |   |\n  |   rustdoc does not generate documentation for macro invocations\n  |\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\n\n"]}},{"file":"src/cap_rights.rs","count":4,"kinds":{"Clippy(Warn)":["warning: casting to the same type is unnecessary (`usize` -> `usize`)\n  --> src/cap_rights.rs:26:9\n   |\n26 |         self.words[0] as usize & MASK!(seL4_CapRightsBits)\n   |         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.words[0]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"],"Unformatted":["file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap_rights.rs (original lines from 1 to 1)\n-use common::{MASK, plus_define_bitfield};\n+use common::{plus_define_bitfield, MASK};\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap_rights.rs (original lines from 15 to 15)\n-\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap_rights.rs (original lines from 19 to 21)\n-        Self {\n-            words: [word]\n-        }\n+        Self { words: [word] }\n"]}},{"file":"src/deps.rs","count":4,"kinds":{"Mirai":["warning: Cannot find postCapDeletion!\n --> src/deps.rs:9:5\n  |\n9 |     panic!(\"Cannot find postCapDeletion!\")\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: Cannot find preemptionPoint!\n  --> src/deps.rs:16:5\n   |\n16 |     panic!(\"Cannot find preemptionPoint!\")\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: Cannot find finaliseCap!\n  --> src/deps.rs:23:5\n   |\n23 |     panic!(\"Cannot find finaliseCap!\")\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"],"Unformatted":["file: /home/runner/check/batch_2/kern-crates/CSpace/src/deps.rs (original lines from 25 to 25)\n+\n"]}},{"file":"src/interface.rs","count":4,"kinds":{"Unformatted":["file: /home/runner/check/batch_2/kern-crates/CSpace/src/interface.rs (original lines from 1 to 1)\n-\n+pub use crate::cap::CapTag;\n+pub use crate::cap::{cap_t, same_object_as};\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/interface.rs (original lines from 4 to 5)\n-pub use crate::cap::{cap_t, same_object_as};\n-pub use crate::cap::CapTag;\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/interface.rs (original lines from 7 to 7)\n+pub use super::cte::{cte_insert, cte_move, cte_swap, cte_t, insert_new_cap, resolve_address_bits};\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/interface.rs (original lines from 8 to 8)\n-pub use super::cte::{resolve_address_bits, cte_insert, cte_t, cte_move, cte_swap, insert_new_cap};\n"]}},{"file":"src/structures.rs","count":4,"kinds":{"Unformatted":["file: /home/runner/check/batch_2/kern-crates/CSpace/src/structures.rs (original lines from 5 to 5)\n-\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/structures.rs (original lines from 23 to 23)\n-\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/structures.rs (original lines from 40 to 40)\n+\n"],"Clippy(Warn)":["warning: this `impl` can be derived\n  --> src/structures.rs:32:1\n   |\n32 | / impl Default for finaliseCap_ret {\n33 | |     fn default() -> Self {\n34 | |         finaliseCap_ret {\n35 | |             remainder: cap_t::default(),\n...  |\n38 | |     }\n39 | | }\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n   = note: `#[warn(clippy::derivable_impls)]` on by default\n   = help: remove the manual implementation...\nhelp: ...and instead derive it\n   |\n27 + #[derive(Default)]\n28 | pub struct finaliseCap_ret {\n   |\n\n"]}},{"file":"src/utils.rs","count":4,"kinds":{"Clippy(Warn)":["warning: `0 as *mut _` detected\n  --> src/utils.rs:22:19\n   |\n22 |             slot: 0 as *mut cte_t,\n   |                   ^^^^^^^^^^^^^^^ help: try: `core::ptr::null_mut::<cte_t>()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr\n   = note: `#[warn(clippy::zero_ptr)]` on by default\n\n"],"Mirai":["warning: possible attempt to subtract with overflow\n --> src/utils.rs:7:10\n  |\n7 |     BIT!(bits - seL4_MinUntypedBits)\n  |          ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"],"Unformatted":["file: /home/runner/check/batch_2/kern-crates/CSpace/src/utils.rs (original lines from 1 to 1)\n-use common::{sel4_config::seL4_MinUntypedBits, BIT, structures::exception_t};\n+use common::{sel4_config::seL4_MinUntypedBits, structures::exception_t, BIT};\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/utils.rs (original lines from 4 to 4)\n-\n"]}},{"file":"src/cap/notification.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/notification.rs (original lines from 3 to 3)\n-\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/notification.rs (original lines from 8 to 8)\n-\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/notification.rs (original lines from 14 to 14)\n+\n"]}},{"file":"src/cap/reply.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/reply.rs (original lines from 4 to 4)\n-pub fn cap_reply_cap_new(capReplyCanGrant: usize, capReplyMaster: usize, capTCBPtr: usize) -> cap_t {\n+pub fn cap_reply_cap_new(\n+    capReplyCanGrant: usize,\n+    capReplyMaster: usize,\n+    capTCBPtr: usize,\n+) -> cap_t {\n","file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/reply.rs (original lines from 27 to 27)\n+\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=cspace, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_2/kern-crates/CSpace\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/CtrlZ233/rel4_comm.git`\n    Updating crates.io index\n    Updating git repository `https://gitee.com/rcore-os/riscv`\n     Locking 16 packages to latest compatible versions\n Downloading crates ...\n  Downloaded semver v0.9.0\n  Downloaded semver-parser v0.7.0\n  Downloaded rustc_version v0.2.3\n  Downloaded bare-metal v0.2.5\n  Downloaded riscv-target v0.1.2\n   Compiling memchr v2.7.4\n   Compiling semver-parser v0.7.0\n   Compiling regex-syntax v0.8.5\n   Compiling lazy_static v1.5.0\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling semver v0.9.0\n   Compiling rustc_version v0.2.3\n    Checking log v0.4.22\n   Compiling aho-corasick v1.1.3\n   Compiling bare-metal v0.2.5\n   Compiling regex-automata v0.4.8\n   Compiling regex v1.11.0\n   Compiling riscv-target v0.1.2\n   Compiling riscv v0.6.0 (https://gitee.com/rcore-os/riscv#11d43cf7)\n    Checking common v0.1.0 (https://github.com/CtrlZ233/rel4_comm.git?branch=main#74acf0cc)\n    Checking cspace v0.1.0 (/home/runner/check/batch_2/kern-crates/CSpace)\nerror: could not compile `cspace` (lib) due to 4 previous errors; 55 warnings emitted\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:03:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:03:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-01T02:03:55Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:03:55Z WARN  lockbud::callbacks] crate riscv_target contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-usb-synopsys-otg","count":143,"raw_reports":[{"file":"src/otg_v1.rs","count":130,"kinds":{"Clippy(Error)":["error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n","error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"],"Clippy(Warn)":["warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"]}},{"file":"src/lib.rs","count":12,"kinds":{"Clippy(Warn)":["warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n","warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n","warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n","warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n","warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n","warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n","warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n","warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n","warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n","warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n","warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n","warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-core v0.3.30\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n    Checking pin-utils v0.1.0\n    Checking embedded-io v0.6.1\n    Checking futures-task v0.3.30\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking critical-section v1.1.3\n    Checking futures-util v0.3.30\n    Checking hash32 v0.3.1\n    Checking cfg-if v1.0.0\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"]}}]},{"user":"Byte-OS","repo":"lose-net-stack","pkg":"lose-net-stack","count":126,"raw_reports":[{"file":"src/lib.rs","count":21,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 3 to 3)\n-mod net;\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 6 to 6)\n+mod net;\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 20 to 20)\n-pub use net::TcpFlags;\n+use consts::*;\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 24 to 24)\n+pub use net::TcpFlags;\n+use net::IP_LEN;\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 27 to 27)\n-use net::IP_LEN;\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 32 to 32)\n-use consts::*;\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 37 to 38)\n-    pub ip:  IPv4,\n-    pub mac: MacAddress\n+    pub ip: IPv4,\n+    pub mac: MacAddress,\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 43 to 46)\n-        Self {\n-            ip,\n-            mac\n-        }\n+        Self { ip, mac }\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 49 to 51)\n-    fn analysis_udp(&self, mut data_ptr_iter: UnsafeRefIter, ip_header: &Ip, eth_header: &Eth) -> Packet {\n-        let udp_header = unsafe{data_ptr_iter.next::<UDP>()}.unwrap();\n-        let data = unsafe{data_ptr_iter.get_curr_arr()};\n+    fn analysis_udp(\n+        &self,\n+        mut data_ptr_iter: UnsafeRefIter,\n+        ip_header: &Ip,\n+        eth_header: &Eth,\n+    ) -> Packet {\n+        let udp_header = unsafe { data_ptr_iter.next::<UDP>() }.unwrap();\n+        let data = unsafe { data_ptr_iter.get_curr_arr() };\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 54 to 62)\n-        Packet::UDP(packets::udp::UDPPacket { \n-            source_ip: IPv4::from_u32(ip_header.src.to_be()), \n-            source_mac: MacAddress::new(eth_header.shost), \n-            source_port: udp_header.sport.to_be(), \n-            dest_ip: IPv4::from_u32(ip_header.dst.to_be()), \n-            dest_mac: MacAddress::new(eth_header.dhost), \n-            dest_port: udp_header.dport.to_be(), \n-            data_len, \n-            data: &data[..data_len]\n+        Packet::UDP(packets::udp::UDPPacket {\n+            source_ip: IPv4::from_u32(ip_header.src.to_be()),\n+            source_mac: MacAddress::new(eth_header.shost),\n+            source_port: udp_header.sport.to_be(),\n+            dest_ip: IPv4::from_u32(ip_header.dst.to_be()),\n+            dest_mac: MacAddress::new(eth_header.dhost),\n+            dest_port: udp_header.dport.to_be(),\n+            data_len,\n+            data: &data[..data_len],\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 66 to 67)\n-    fn analysis_tcp(&self, mut data_ptr_iter: UnsafeRefIter, ip_header: &Ip, eth_header: &Eth) -> Packet {\n-        let tcp_header = unsafe{data_ptr_iter.next::<TCP>()}.unwrap();\n+    fn analysis_tcp(\n+        &self,\n+        mut data_ptr_iter: UnsafeRefIter,\n+        ip_header: &Ip,\n+        eth_header: &Eth,\n+    ) -> Packet {\n+        let tcp_header = unsafe { data_ptr_iter.next::<TCP>() }.unwrap();\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 69 to 69)\n-        let data = &unsafe{data_ptr_iter.get_curr_arr()}[offset..];\n+        let data = &unsafe { data_ptr_iter.get_curr_arr() }[offset..];\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 73 to 78)\n-            source_ip: IPv4::from_u32(ip_header.src.to_be()), \n-            source_mac: MacAddress::new(eth_header.shost), \n-            source_port: tcp_header.sport.to_be(), \n-            dest_ip: IPv4::from_u32(ip_header.dst.to_be()), \n-            dest_mac: MacAddress::new(eth_header.dhost), \n-            dest_port: tcp_header.dport.to_be(), \n+            source_ip: IPv4::from_u32(ip_header.src.to_be()),\n+            source_mac: MacAddress::new(eth_header.shost),\n+            source_port: tcp_header.sport.to_be(),\n+            dest_ip: IPv4::from_u32(ip_header.dst.to_be()),\n+            dest_mac: MacAddress::new(eth_header.dhost),\n+            dest_port: tcp_header.dport.to_be(),\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 89 to 90)\n-    fn analysis_icmp(&self, data_ptr_iter: UnsafeRefIter, _ip_header: &Ip, _eth_header: &Eth) -> Packet {\n-        let _data = unsafe{data_ptr_iter.get_curr_arr()};\n+    fn analysis_icmp(\n+        &self,\n+        data_ptr_iter: UnsafeRefIter,\n+        _ip_header: &Ip,\n+        _eth_header: &Eth,\n+    ) -> Packet {\n+        let _data = unsafe { data_ptr_iter.get_curr_arr() };\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 96 to 96)\n-        let ip_header = unsafe{data_ptr_iter.next::<Ip>()}.unwrap();\n+        let ip_header = unsafe { data_ptr_iter.next::<Ip>() }.unwrap();\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 99 to 99)\n-            return Packet::None\n+            return Packet::None;\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 103 to 103)\n-            return Packet::None\n+            return Packet::None;\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 115 to 115)\n-        let arp_header = unsafe{data_ptr_iter.next::<Arp>()}.unwrap();\n+        let arp_header = unsafe { data_ptr_iter.next::<Arp>() }.unwrap();\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 122 to 126)\n-                IPv4::from_u32(arp_header.spa.to_be()), \n-                MacAddress::new(arp_header.sha), \n-                IPv4::from_u32(arp_header.tpa.to_be()), \n-                MacAddress::new(arp_header.tha), \n-                rtype\n+                IPv4::from_u32(arp_header.spa.to_be()),\n+                MacAddress::new(arp_header.sha),\n+                IPv4::from_u32(arp_header.tpa.to_be()),\n+                MacAddress::new(arp_header.tha),\n+                rtype,\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 133 to 133)\n-        let eth_header = unsafe{data_ptr_iter.next::<Eth>()}.unwrap();\n+        let eth_header = unsafe { data_ptr_iter.next::<Eth>() }.unwrap();\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 137 to 137)\n-            _ => Packet::None // Unsupported type\n+            _ => Packet::None, // Unsupported type\n"]}},{"file":"src/packets/arp.rs","count":21,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 3 to 3)\n+use crate::consts::{\n+    ARP_ETHADDR_LEN, ARP_HRD_ETHER, ARP_OP_REPLY, ARP_OP_REQUEST, BROADCAST_MAC, ETH_RTYPE_ARP,\n+    ETH_RTYPE_IP,\n+};\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 5 to 7)\n-use crate::consts::{ARP_OP_REQUEST, ARP_OP_REPLY, ARP_HRD_ETHER, ETH_RTYPE_IP, ARP_ETHADDR_LEN, ETH_RTYPE_ARP, BROADCAST_MAC};\n-use crate::MacAddress;\n-use crate::IPv4;\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 9 to 9)\n+use crate::IPv4;\n+use crate::MacAddress;\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 14 to 14)\n-    Unsupported\n+    Unsupported,\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 22 to 22)\n-            _ => ArpType::Unsupported\n+            _ => ArpType::Unsupported,\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 41 to 41)\n-    pub rtype: ArpType\n+    pub rtype: ArpType,\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 45 to 46)\n-    pub fn new(sender_ip: IPv4, sender_mac: MacAddress, target_ip: IPv4, target_mac: MacAddress, rtype: ArpType) -> Self {\n-        ArpPacket { sender_ip, sender_mac, target_ip, target_mac, rtype }\n+    pub fn new(\n+        sender_ip: IPv4,\n+        sender_mac: MacAddress,\n+        target_ip: IPv4,\n+        target_mac: MacAddress,\n+        rtype: ArpType,\n+    ) -> Self {\n+        ArpPacket {\n+            sender_ip,\n+            sender_mac,\n+            target_ip,\n+            target_mac,\n+            rtype,\n+        }\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 55 to 55)\n-        let mut eth_header = unsafe{ data_ptr_iter.next_mut::<Eth>() }.unwrap();\n+        let mut eth_header = unsafe { data_ptr_iter.next_mut::<Eth>() }.unwrap();\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 64 to 65)\n-        arp_header.hlen = ARP_ETHADDR_LEN as u8;    // mac address len\n-        arp_header.plen = 4;    // ipv4\n+        arp_header.hlen = ARP_ETHADDR_LEN as u8; // mac address len\n+        arp_header.plen = 4; // ipv4\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 67 to 67)\n-        \n+\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 70 to 70)\n-    \n+\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 76 to 76)\n-    pub fn reply_packet(&self, local_ip: IPv4, local_mac: MacAddress) -> Result<Self, NetStackErrors> {\n+    pub fn reply_packet(\n+        &self,\n+        local_ip: IPv4,\n+        local_mac: MacAddress,\n+    ) -> Result<Self, NetStackErrors> {\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 80 to 84)\n-                    local_ip, \n-                    local_mac, \n-                    self.sender_ip, \n-                    self.sender_mac, \n-                    ArpType::Reply\n+                    local_ip,\n+                    local_mac,\n+                    self.sender_ip,\n+                    self.sender_mac,\n+                    ArpType::Reply,\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 89 to 89)\n-            _ => Err(NetStackErrors::NotRequiredReplyArp)\n+            _ => Err(NetStackErrors::NotRequiredReplyArp),\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 93 to 93)\n+\n"],"Mirai":["warning: variable does not need to be mutable\n  --> src/packets/arp.rs:55:13\n   |\n55 |         let mut eth_header = unsafe{ data_ptr_iter.next_mut::<Eth>() }.unwrap();\n   |             ----^^^^^^^^^^\n   |             |\n   |             help: remove this `mut`\n   |\n   = note: `#[warn(unused_mut)]` on by default\n\n","warning: variable does not need to be mutable\n  --> src/packets/arp.rs:61:13\n   |\n61 |         let mut arp_header = unsafe { data_ptr_iter.next_mut::<Arp>() }.unwrap();\n   |             ----^^^^^^^^^^\n   |             |\n   |             help: remove this `mut`\n\n","warning: possible called `Option::unwrap()` on a `None` value\n  --> src/packets/arp.rs:55:30\n   |\n55 |         let mut eth_header = unsafe{ data_ptr_iter.next_mut::<Eth>() }.unwrap();\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible called `Option::unwrap()` on a `None` value\n  --> src/packets/arp.rs:61:30\n   |\n61 |         let mut arp_header = unsafe { data_ptr_iter.next_mut::<Arp>() }.unwrap();\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"],"Clippy(Warn)":["warning: variable does not need to be mutable\n  --> src/packets/arp.rs:55:13\n   |\n55 |         let mut eth_header = unsafe{ data_ptr_iter.next_mut::<Eth>() }.unwrap();\n   |             ----^^^^^^^^^^\n   |             |\n   |             help: remove this `mut`\n   |\n   = note: `#[warn(unused_mut)]` on by default\n\n","warning: variable does not need to be mutable\n  --> src/packets/arp.rs:61:13\n   |\n61 |         let mut arp_header = unsafe { data_ptr_iter.next_mut::<Arp>() }.unwrap();\n   |             ----^^^^^^^^^^\n   |             |\n   |             help: remove this `mut`\n\n"]}},{"file":"src/net.rs","count":16,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 3 to 3)\n-\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 9 to 9)\n-    pub(crate) rtype: u16      // packet type, arp or ip\n+    pub(crate) rtype: u16,     // packet type, arp or ip\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 15 to 23)\n-    pub(crate) httype: u16, // Hardware type\n-    pub(crate) pttype: u16, // Protocol type, For IPv4, this has the value 0x0800.\n-    pub(crate) hlen: u8,    // Hardware length: Ethernet address length is 6.\n-    pub(crate) plen: u8,    // Protocol length: IPv4 address length is 4.\n-    pub(crate) op: u16,     // Operation: 1 for request, 2 for reply.\n-    pub(crate) sha: [u8; 6],// Sender hardware address\n-    pub(crate) spa: u32,    // Sender protocol address\n-    pub(crate) tha: [u8; 6],// Target hardware address\n-    pub(crate) tpa: u32     // Target protocol address\n+    pub(crate) httype: u16,  // Hardware type\n+    pub(crate) pttype: u16,  // Protocol type, For IPv4, this has the value 0x0800.\n+    pub(crate) hlen: u8,     // Hardware length: Ethernet address length is 6.\n+    pub(crate) plen: u8,     // Protocol length: IPv4 address length is 4.\n+    pub(crate) op: u16,      // Operation: 1 for request, 2 for reply.\n+    pub(crate) sha: [u8; 6], // Sender hardware address\n+    pub(crate) spa: u32,     // Sender protocol address\n+    pub(crate) tha: [u8; 6], // Target hardware address\n+    pub(crate) tpa: u32,     // Target protocol address\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 30 to 39)\n-    pub(crate) vhl: u8,    // version << 4 | header length >> 2\n-    pub(crate) tos: u8,    // type of service\n-    pub(crate) len: u16,   // total length, packet length\n-    pub(crate) id: u16,    // identification, can combine all packets\n-    pub(crate) off: u16,   // fragment offset field, packet from\n-    pub(crate) ttl: u8,    // time to live\n-    pub(crate) pro: u8,    // protocol， ICMP(1)、IGMP(2)、TCP(6)、UDP(17)\n-    pub(crate) sum: u16,   // checksum,\n-    pub(crate) src: u32,   // souce ip\n-    pub(crate) dst: u32    // destination ip\n+    pub(crate) vhl: u8,  // version << 4 | header length >> 2\n+    pub(crate) tos: u8,  // type of service\n+    pub(crate) len: u16, // total length, packet length\n+    pub(crate) id: u16,  // identification, can combine all packets\n+    pub(crate) off: u16, // fragment offset field, packet from\n+    pub(crate) ttl: u8,  // time to live\n+    pub(crate) pro: u8,  // protocol， ICMP(1)、IGMP(2)、TCP(6)、UDP(17)\n+    pub(crate) sum: u16, // checksum,\n+    pub(crate) src: u32, // souce ip\n+    pub(crate) dst: u32, // destination ip\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 49 to 49)\n-    pub(crate) sum: u16    // checksum\n+    pub(crate) sum: u16,   // checksum\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 69 to 73)\n-    pub(crate) sport: u16, // souce port\n-    pub(crate) dport: u16, // destination port\n-    pub(crate) seq: u32, // sequence number\n-    pub(crate) ack: u32, // acknowledgement number\n-    pub(crate) offset: u8, // offset, first 4 bytes are tcp header length\n+    pub(crate) sport: u16,      // souce port\n+    pub(crate) dport: u16,      // destination port\n+    pub(crate) seq: u32,        // sequence number\n+    pub(crate) ack: u32,        // acknowledgement number\n+    pub(crate) offset: u8,      // offset, first 4 bytes are tcp header length\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 75 to 77)\n-    pub(crate) win: u16,    // window size\n-    pub(crate) sum: u16,    // checksum\n-    pub(crate) urg: u16,    // urgent pointer\n+    pub(crate) win: u16,        // window size\n+    pub(crate) sum: u16,        // checksum\n+    pub(crate) urg: u16,        // urgent pointer\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 93 to 93)\n-pub(crate) const IP_LEN:  usize = size_of::<Ip>();\n+pub(crate) const IP_LEN: usize = size_of::<Ip>();\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 102 to 102)\n-00 00 00 00 00 00 0a 00 02 0f                         ..........                  \n+00 00 00 00 00 00 0a 00 02 0f                         ..........\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 108 to 108)\n-52 55 0a 00 02 02 0a 00 02 02                         RU........                  \n+52 55 0a 00 02 02 0a 00 02 02                         RU........\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 117 to 117)\n-73 20 61 20 70 69 6e 67 21                            s a ping!                     \n+73 20 61 20 70 69 6e 67 21                            s a ping!\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 121 to 121)\n-74 68 69 73 20 69 73 20 61 20 70 69 6e 67 21          this is a ping!   \n+74 68 69 73 20 69 73 20 61 20 70 69 6e 67 21          this is a ping!\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 125 to 125)\n+\n"],"Clippy(Warn)":["warning: name `UDP` contains a capitalized acronym\n  --> src/net.rs:45:12\n   |\n45 | pub struct UDP {\n   |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Udp`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n","warning: name `TCP` contains a capitalized acronym\n  --> src/net.rs:68:12\n   |\n68 | pub struct TCP {\n   |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Tcp`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ICMP` contains a capitalized acronym\n  --> src/net.rs:83:12\n   |\n83 | pub struct ICMP {\n   |            ^^^^ help: consider making the acronym lowercase, except the initial letter: `Icmp`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"]}},{"file":"src/packets/tcp.rs","count":16,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 4 to 4)\n-use crate::utils::{UnsafeRefIter, check_sum};\n+use crate::net::{Eth, Ip, TcpFlags, ETH_LEN, IP_LEN, TCP, TCP_LEN};\n+use crate::utils::{check_sum, UnsafeRefIter};\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 7 to 7)\n-use crate::net::{TCP_LEN, IP_LEN, ETH_LEN, Eth, Ip, TCP, TcpFlags};\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 19 to 24)\n-    pub seq: u32,           // sequence number\n-    pub ack: u32,           // acknowledgement number\n-    pub flags: TcpFlags,    // flags, last 6 are flags(U, A, P, R, S, F)\n-    pub win: u16,           // window size\n-    pub urg: u16,           // urgent pointer\n-    pub data: &'a [u8]      // data buffer\n+    pub seq: u32,        // sequence number\n+    pub ack: u32,        // acknowledgement number\n+    pub flags: TcpFlags, // flags, last 6 are flags(U, A, P, R, S, F)\n+    pub win: u16,        // window size\n+    pub urg: u16,        // urgent pointer\n+    pub data: &'a [u8],  // data buffer\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 27 to 27)\n-impl<'a> TCPPacket<'a>  {\n+impl<'a> TCPPacket<'a> {\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 33 to 36)\n-        let eth_header = unsafe{data_ptr_iter.next_mut::<Eth>()}.unwrap();\n-        let ip_header = unsafe{data_ptr_iter.next_mut::<Ip>()}.unwrap();\n-        let tcp_header = unsafe{data_ptr_iter.next_mut::<TCP>()}.unwrap();\n-        let tcp_data = unsafe {data_ptr_iter.get_curr_arr_mut()};\n+        let eth_header = unsafe { data_ptr_iter.next_mut::<Eth>() }.unwrap();\n+        let ip_header = unsafe { data_ptr_iter.next_mut::<Ip>() }.unwrap();\n+        let tcp_header = unsafe { data_ptr_iter.next_mut::<TCP>() }.unwrap();\n+        let tcp_data = unsafe { data_ptr_iter.get_curr_arr_mut() };\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 38 to 38)\n-\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 42 to 42)\n-        \n+\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 48 to 48)\n-        ip_header.id  = 0; // packet identified, use 0 as default\n+        ip_header.id = 0; // packet identified, use 0 as default\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 64 to 64)\n-        \n+\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 69 to 69)\n-        tcp_header.sum = check_sum(tcp_header as *mut _ as *mut u8, (TCP_LEN + self.data_len) as _, sum); // tcp checksum. zero means no checksum is provided.\n+        tcp_header.sum = check_sum(\n+            tcp_header as *mut _ as *mut u8,\n+            (TCP_LEN + self.data_len) as _,\n+            sum,\n+        ); // tcp checksum. zero means no checksum is provided.\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 74 to 74)\n-    pub fn reply(&self, data: &'a[u8]) -> Self {\n+    pub fn reply(&self, data: &'a [u8]) -> Self {\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 90 to 90)\n-        \n+\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 108 to 108)\n-            data: TCP_EMPTY_DATA\n+            data: TCP_EMPTY_DATA,\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 112 to 112)\n+\n"],"Mirai":["warning: possible attempt to add with overflow\n  --> src/packets/tcp.rs:51:27\n   |\n51 |         ip_header.len = ((self.data_len + TCP_LEN + IP_LEN) as u16).to_be(); // toal len\n   |                           ^^^^^^^^^^^^^^^^^^^^^^^\n\n"],"Clippy(Warn)":["warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/packets/tcp.rs:63:34\n   |\n63 |         tcp_data.copy_from_slice(&self.data);\n   |                                  ^^^^^^^^^^ help: change this to: `self.data`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"]}},{"file":"src/utils.rs","count":16,"kinds":{"Mirai":["warning: possible attempt to add with overflow\n  --> src/utils.rs:57:9\n   |\n57 |         sum += unsafe{ *w as u32 };\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to add with overflow\n  --> src/utils.rs:62:19\n   |\n62 |             sum = (sum & 0xFFFF) + (sum >> 16);\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to add with overflow\n  --> src/utils.rs:63:19\n   |\n63 |             sum = sum + (sum >> 16);\n   |                   ^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to add with overflow\n  --> src/utils.rs:68:9\n   |\n68 |         sum += unsafe { *(w as *const u8) as u32};\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"],"Unformatted":["file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 5 to 5)\n-    end: usize\n+    end: usize,\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 11 to 13)\n-        Self { \n-            ptr: data.as_ptr() as usize, \n-            end: data.as_ptr() as usize + data.len()\n+        Self {\n+            ptr: data.as_ptr() as usize,\n+            end: data.as_ptr() as usize + data.len(),\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 40 to 40)\n-    pub unsafe fn get_curr_arr(&self) -> &'static [u8]{\n+    pub unsafe fn get_curr_arr(&self) -> &'static [u8] {\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 45 to 45)\n-    pub unsafe fn get_curr_arr_mut(&self) -> &'static mut [u8]{\n+    pub unsafe fn get_curr_arr_mut(&self) -> &'static mut [u8] {\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 51 to 52)\n-pub fn check_sum(addr:*mut u8, len:u32, sum: u32) -> u16 {\n-    let mut sum:u32 = sum;\n+pub fn check_sum(addr: *mut u8, len: u32, sum: u32) -> u16 {\n+    let mut sum: u32 = sum;\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 55 to 57)\n-    \n-     while nleft > 1 {\n-        sum += unsafe{ *w as u32 };\n+\n+    while nleft > 1 {\n+        sum += unsafe { *w as u32 };\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 65 to 65)\n-     }\n+    }\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 67 to 69)\n-     if nleft == 1 {\n-        sum += unsafe { *(w as *const u8) as u32};\n-     }\n+    if nleft == 1 {\n+        sum += unsafe { *(w as *const u8) as u32 };\n+    }\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 71 to 71)\n+    sum = (sum & 0xFFFF) + (sum >> 16);\n+    sum = sum + (sum >> 16);\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 72 to 73)\n-     sum = (sum & 0xFFFF) + (sum >> 16);\n-     sum = sum + (sum >> 16);\n+    let answer: u16 = !sum as u16;\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 75 to 77)\n-     let answer:u16 = !sum as u16;\n-\n-     answer\n+    answer\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 79 to 79)\n+\n"]}},{"file":"src/packets/udp.rs","count":15,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 3 to 4)\n-use crate::consts::{ETH_RTYPE_IP, IP_PROTOCAL_UDP, IP_HEADER_VHL};\n-use crate::net::{UDP, Eth, Ip, UDP_LEN, IP_LEN, ETH_LEN};\n+use crate::consts::{ETH_RTYPE_IP, IP_HEADER_VHL, IP_PROTOCAL_UDP};\n+use crate::net::{Eth, Ip, ETH_LEN, IP_LEN, UDP, UDP_LEN};\n+use crate::utils::{check_sum, UnsafeRefIter};\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 7 to 7)\n-use crate::utils::{UnsafeRefIter, check_sum};\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 18 to 18)\n-    pub data: &'a [u8]\n+    pub data: &'a [u8],\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 22 to 24)\n-    pub fn new(source_ip: IPv4, source_mac: MacAddress, source_port: u16, \n-        dest_ip: IPv4, dest_mac: MacAddress, dest_port: u16, \n-        data_len: usize, data: &'a [u8]) -> Self {\n+    pub fn new(\n+        source_ip: IPv4,\n+        source_mac: MacAddress,\n+        source_port: u16,\n+        dest_ip: IPv4,\n+        dest_mac: MacAddress,\n+        dest_port: u16,\n+        data_len: usize,\n+        data: &'a [u8],\n+    ) -> Self {\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 33 to 33)\n-            data\n+            data,\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 42 to 45)\n-        let eth_header = unsafe{data_ptr_iter.next_mut::<Eth>()}.unwrap();\n-        let ip_header = unsafe{data_ptr_iter.next_mut::<Ip>()}.unwrap();\n-        let udp_header = unsafe{data_ptr_iter.next_mut::<UDP>()}.unwrap();\n-        let udp_data = unsafe {data_ptr_iter.get_curr_arr_mut()};\n+        let eth_header = unsafe { data_ptr_iter.next_mut::<Eth>() }.unwrap();\n+        let ip_header = unsafe { data_ptr_iter.next_mut::<Ip>() }.unwrap();\n+        let udp_header = unsafe { data_ptr_iter.next_mut::<UDP>() }.unwrap();\n+        let udp_data = unsafe { data_ptr_iter.get_curr_arr_mut() };\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 47 to 47)\n-\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 51 to 51)\n-        \n+\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 57 to 57)\n-        ip_header.id  = 0; // packet identified, use 0 as default\n+        ip_header.id = 0; // packet identified, use 0 as default\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 65 to 66)\n-        udp_header.sum   = 0; // udp checksum   zero means no checksum is provided.\n-        udp_header.ulen  = ((self.data_len + UDP_LEN) as u16).to_be();\n+        udp_header.sum = 0; // udp checksum   zero means no checksum is provided.\n+        udp_header.ulen = ((self.data_len + UDP_LEN) as u16).to_be();\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 75 to 82)\n-            self.dest_ip, \n-            self.dest_mac, \n-            self.dest_port, \n-            self.source_ip, \n-            self.source_mac, \n-            self.source_port, \n-            data.len(), \n-            data\n+            self.dest_ip,\n+            self.dest_mac,\n+            self.dest_port,\n+            self.source_ip,\n+            self.source_mac,\n+            self.source_port,\n+            data.len(),\n+            data,\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 86 to 86)\n+\n"],"Clippy(Warn)":["warning: this function has too many arguments (8/7)\n  --> src/packets/udp.rs:22:5\n   |\n22 | /     pub fn new(source_ip: IPv4, source_mac: MacAddress, source_port: u16, \n23 | |         dest_ip: IPv4, dest_mac: MacAddress, dest_port: u16, \n24 | |         data_len: usize, data: &'a [u8]) -> Self {\n   | |________________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n   = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/packets/udp.rs:68:34\n   |\n68 |         udp_data.copy_from_slice(&self.data);\n   |                                  ^^^^^^^^^^ help: change this to: `self.data`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"],"Mirai":["warning: possible attempt to add with overflow\n  --> src/packets/udp.rs:60:27\n   |\n60 |         ip_header.len = ((self.data_len + UDP_LEN + IP_LEN) as u16).to_be(); // toal len\n   |                           ^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"src/addr.rs","count":8,"kinds":{"Clippy(Error)":["error: type `addr::IPv4` implements inherent method `to_string(&self) -> String` which shadows the implementation of `Display`\n  --> src/addr.rs:17:5\n   |\n17 | /     pub fn to_string(&self) -> String {\n18 | |         format!(\"{}.{}.{}.{}\", (self.0 >> 24) & 0xff, (self.0 >> 16) & 0xff, (self.0 >> 8) & 0xff, self.0 & 0xff)\n19 | |     }\n   | |_____^\n   |\n   = help: remove the inherent method from type `addr::IPv4`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inherent_to_string_shadow_display\n   = note: `#[deny(clippy::inherent_to_string_shadow_display)]` on by default\n\n","error: type `addr::MacAddress` implements inherent method `to_string(&self) -> String` which shadows the implementation of `Display`\n  --> src/addr.rs:49:5\n   |\n49 | /     pub fn to_string(&self) -> String {\n50 | |         format!(\"{:x}:{:x}:{:x}:{:x}:{:x}:{:x}\", self.0[0], self.0[1], self.0[2], self.0[3], self.0[4], self.0[5])\n51 | |     }\n   | |_____^\n   |\n   = help: remove the inherent method from type `addr::MacAddress`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inherent_to_string_shadow_display\n\n"],"Unformatted":["file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 1 to 1)\n-use core::fmt::{Display, Debug};\n+use core::fmt::{Debug, Display};\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 3 to 3)\n-use alloc::{string::String, format};\n+use alloc::{format, string::String};\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 18 to 18)\n-        format!(\"{}.{}.{}.{}\", (self.0 >> 24) & 0xff, (self.0 >> 16) & 0xff, (self.0 >> 8) & 0xff, self.0 & 0xff)\n+        format!(\n+            \"{}.{}.{}.{}\",\n+            (self.0 >> 24) & 0xff,\n+            (self.0 >> 16) & 0xff,\n+            (self.0 >> 8) & 0xff,\n+            self.0 & 0xff\n+        )\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 50 to 50)\n-        format!(\"{:x}:{:x}:{:x}:{:x}:{:x}:{:x}\", self.0[0], self.0[1], self.0[2], self.0[3], self.0[4], self.0[5])\n+        format!(\n+            \"{:x}:{:x}:{:x}:{:x}:{:x}:{:x}\",\n+            self.0[0], self.0[1], self.0[2], self.0[3], self.0[4], self.0[5]\n+        )\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 62 to 62)\n-        f.debug_tuple(\"MacAddress\").field(&self.to_string()).finish()\n+        f.debug_tuple(\"MacAddress\")\n+            .field(&self.to_string())\n+            .finish()\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 65 to 65)\n+\n"]}},{"file":"src/consts.rs","count":6,"kinds":{"Clippy(Warn)":["warning: constant `ARP_PTYPE_ETHTYPE_IP` is never used\n  --> src/consts.rs:10:18\n   |\n10 | pub(crate) const ARP_PTYPE_ETHTYPE_IP: u16 = 0x0800;\n   |                  ^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n","warning: constant `IP_PROTOCAL_IGMP` is never used\n  --> src/consts.rs:17:18\n   |\n17 | pub(crate) const IP_PROTOCAL_IGMP: u8 = 2;\n   |                  ^^^^^^^^^^^^^^^^\n\n"],"Mirai":["warning: constant `ARP_PTYPE_ETHTYPE_IP` is never used\n  --> src/consts.rs:10:18\n   |\n10 | pub(crate) const ARP_PTYPE_ETHTYPE_IP: u16 = 0x0800;\n   |                  ^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n","warning: constant `IP_PROTOCAL_IGMP` is never used\n  --> src/consts.rs:17:18\n   |\n17 | pub(crate) const IP_PROTOCAL_IGMP: u8 = 2;\n   |                  ^^^^^^^^^^^^^^^^\n\n"],"Unformatted":["file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/consts.rs (original lines from 5 to 5)\n-pub(crate) const ETH_RTYPE_IP: u16 =  0x0800; // Internet protocol\n+pub(crate) const ETH_RTYPE_IP: u16 = 0x0800; // Internet protocol\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/consts.rs (original lines from 24 to 24)\n+\n"]}},{"file":"src/results.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/results.rs (original lines from 1 to 1)\n-use crate::packets::{udp::UDPPacket, arp::ArpPacket, tcp::TCPPacket};\n+use crate::packets::{arp::ArpPacket, tcp::TCPPacket, udp::UDPPacket};\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/results.rs (original lines from 11 to 11)\n-    None\n+    None,\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/results.rs (original lines from 18 to 18)\n+\n"]}},{"file":"src/packets/mod.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/mod.rs (original lines from 1 to 1)\n-pub mod udp;\n","file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/mod.rs (original lines from 4 to 4)\n+pub mod udp;\n+\n"]}},{"file":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-1.3.2/src/lib.rs","count":1,"kinds":{"Clippy(Error)":["error: &-masking with zero\n  --> src/net.rs:52:1\n   |\n52 | / bitflags! {\n53 | |     // #[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n54 | |     pub struct TcpFlags: u8 {\n55 | |         const NONE = 0;\n...  |\n62 | |     }\n63 | | }\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n   = note: `#[deny(clippy::bad_bit_mask)]` on by default\n   = note: this error originates in the macro `__impl_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=lose-net-stack, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/lose-net-stack\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking bitflags v1.3.2\n    Checking lose-net-stack v0.1.0 (/home/runner/check/batch_1/Byte-OS/lose-net-stack)\nerror: could not compile `lose-net-stack` (lib) due to 3 previous errors; 10 warnings emitted\n"]}}]},{"user":"kern-crates","repo":"sel4_task","pkg":"sel4_task","count":123,"raw_reports":[{"file":"src/scheduler.rs","count":55,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 1 to 1)\n+#[cfg(feature = \"ENABLE_SMP\")]\n+use crate::deps::{doMaskReschedule, kernel_stack_alloc, ksIdleThreadTCB};\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 3 to 5)\n-use sel4_common::{BIT, MASK};\n-use sel4_common::registers::{FaultIP, NextIP, sp, SSTATUS, SSTATUS_SPIE, SSTATUS_SPP};\n-use sel4_common::sel4_config::{CONFIG_KERNEL_STACK_BITS, CONFIG_MAX_NUM_NODES, CONFIG_NUM_DOMAINS, CONFIG_NUM_PRIORITIES, CONFIG_TIME_SLICE, L2_BITMAP_SIZE, NUM_READY_QUEUES, seL4_TCBBits, TCB_OFFSET, wordBits, wordRadix};\n+use sel4_common::registers::{sp, FaultIP, NextIP, SSTATUS, SSTATUS_SPIE, SSTATUS_SPP};\n+use sel4_common::sel4_config::{\n+    seL4_TCBBits, wordBits, wordRadix, CONFIG_KERNEL_STACK_BITS, CONFIG_MAX_NUM_NODES,\n+    CONFIG_NUM_DOMAINS, CONFIG_NUM_PRIORITIES, CONFIG_TIME_SLICE, L2_BITMAP_SIZE, NUM_READY_QUEUES,\n+    TCB_OFFSET,\n+};\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 7 to 8)\n-#[cfg(feature = \"ENABLE_SMP\")]\n-use crate::deps::{doMaskReschedule, ksIdleThreadTCB, kernel_stack_alloc};\n+use sel4_common::{BIT, MASK};\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 10 to 11)\n-#[cfg(feature = \"ENABLE_SMP\")]\n-use sel4_common::utils::cpu_id;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 15 to 15)\n+#[cfg(feature = \"ENABLE_SMP\")]\n+use sel4_common::utils::cpu_id;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 16 to 16)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 29 to 29)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 36 to 36)\n-    ksReadyQueues: [tcb_queue_t {head: 0, tail: 0}; CONFIG_NUM_DOMAINS * CONFIG_NUM_PRIORITIES],\n+    ksReadyQueues: [tcb_queue_t { head: 0, tail: 0 }; CONFIG_NUM_DOMAINS * CONFIG_NUM_PRIORITIES],\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 45 to 45)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 57 to 57)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 77 to 80)\n-pub static mut ksReadyQueues: [tcb_queue_t; NUM_READY_QUEUES] = [tcb_queue_t {\n-    head: 0,\n-    tail: 0,\n-}; NUM_READY_QUEUES];\n+pub static mut ksReadyQueues: [tcb_queue_t; NUM_READY_QUEUES] =\n+    [tcb_queue_t { head: 0, tail: 0 }; NUM_READY_QUEUES];\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 101 to 101)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 105 to 105)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 108 to 108)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 117 to 117)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 120 to 120)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 132 to 132)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 135 to 135)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 144 to 144)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 147 to 147)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 156 to 156)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 159 to 159)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 168 to 168)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 171 to 171)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 177 to 177)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 181 to 181)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 184 to 184)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 190 to 190)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 233 to 233)\n-        let l1index = wordBits - 1 - ksSMP[cpu_id()].ksReadyQueuesL1Bitmap[dom].leading_zeros() as usize;\n+        let l1index =\n+            wordBits - 1 - ksSMP[cpu_id()].ksReadyQueuesL1Bitmap[dom].leading_zeros() as usize;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 235 to 236)\n-        let l2index =\n-            wordBits - 1 - (ksSMP[cpu_id()].ksReadyQueuesL2Bitmap[dom])[l1index_inverted].leading_zeros() as usize;\n+        let l2index = wordBits\n+            - 1\n+            - (ksSMP[cpu_id()].ksReadyQueuesL2Bitmap[dom])[l1index_inverted].leading_zeros()\n+                as usize;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 243 to 243)\n-    #[cfg(feature = \"ENABLE_SMP\")] {\n+    #[cfg(feature = \"ENABLE_SMP\")]\n+    {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 246 to 246)\n-    #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+    #[cfg(not(feature = \"ENABLE_SMP\"))]\n+    {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 256 to 258)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n-            ksSMP[_cpu].ksReadyQueuesL1Bitmap[dom]|= BIT!(l1index);\n-            ksSMP[_cpu].ksReadyQueuesL2Bitmap[dom][l1index_inverted] |= BIT!(prio & MASK!(wordRadix));\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n+            ksSMP[_cpu].ksReadyQueuesL1Bitmap[dom] |= BIT!(l1index);\n+            ksSMP[_cpu].ksReadyQueuesL2Bitmap[dom][l1index_inverted] |=\n+                BIT!(prio & MASK!(wordRadix));\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 260 to 260)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 272 to 273)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n-            ksSMP[_cpu].ksReadyQueuesL2Bitmap[dom][l1index_inverted] &= !BIT!(prio & MASK!(wordRadix));\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n+            ksSMP[_cpu].ksReadyQueuesL2Bitmap[dom][l1index_inverted] &=\n+                !BIT!(prio & MASK!(wordRadix));\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 278 to 278)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 301 to 301)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 319 to 319)\n-            #[cfg(feature = \"ENABLE_SMP\")] {\n+            #[cfg(feature = \"ENABLE_SMP\")]\n+            {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 322 to 322)\n-            #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+            #[cfg(not(feature = \"ENABLE_SMP\"))]\n+            {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 329 to 329)\n-                #[cfg(feature = \"ENABLE_SMP\")] {\n+                #[cfg(feature = \"ENABLE_SMP\")]\n+                {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 332 to 332)\n-                #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+                #[cfg(not(feature = \"ENABLE_SMP\"))]\n+                {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 335 to 335)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 380 to 382)\n-            } else if was_runnable\n-                && candidate.tcbPriority == get_currenct_thread().tcbPriority\n-            {\n+            } else if was_runnable && candidate.tcbPriority == get_currenct_thread().tcbPriority {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 393 to 393)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 397 to 397)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 462 to 462)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 465 to 465)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 479 to 481)\n-        ThreadState::ThreadStateIdleThreadState => return {\n-\n-        },\n+        ThreadState::ThreadStateIdleThreadState => return {},\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 489 to 489)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 496 to 496)\n-    use crate::deps::{ksIdleThreadTCB, kernel_stack_alloc};\n+    use crate::deps::{kernel_stack_alloc, ksIdleThreadTCB};\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 505 to 505)\n-        tcb.set_register(sp, kernel_stack_alloc as usize + BIT!(CONFIG_KERNEL_STACK_BITS));\n+        tcb.set_register(\n+            sp,\n+            kernel_stack_alloc as usize + BIT!(CONFIG_KERNEL_STACK_BITS),\n+        );\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 515 to 515)\n-            let pptr = (ksIdleThreadTCB as usize + i * BIT!(seL4_TCBBits))as *mut usize;\n+            let pptr = (ksIdleThreadTCB as usize + i * BIT!(seL4_TCBBits)) as *mut usize;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 521 to 521)\n-            tcb.set_register(sp, kernel_stack_alloc as usize + (i + 1) * BIT!(CONFIG_KERNEL_STACK_BITS));\n+            tcb.set_register(\n+                sp,\n+                kernel_stack_alloc as usize + (i + 1) * BIT!(CONFIG_KERNEL_STACK_BITS),\n+            );\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 527 to 528)\n-\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 538 to 538)\n+\n"]}},{"file":"src/tcb.rs","count":44,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 4 to 4)\n-use sel4_common::{BIT, MASK};\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 6 to 9)\n-use sel4_common::registers::{fault_messages, FaultIP, msgInfoRegister, msgRegister, n_contextRegisters, n_exceptionMessage, n_msgRegisters, n_syscallMessage, NextIP, SSTATUS};\n-use sel4_common::utils::{pageBitsForSize, convert_to_mut_type_ref};\n-use sel4_cspace::interface::{cte_t, resolve_address_bits, CapTag, cap_t, mdb_node_t, cte_insert};\n-use sel4_vspace::{set_vm_root, pptr_t, VMReadWrite, VMReadOnly};\n+use sel4_common::registers::{\n+    fault_messages, msgInfoRegister, msgRegister, n_contextRegisters, n_exceptionMessage,\n+    n_msgRegisters, n_syscallMessage, FaultIP, NextIP, SSTATUS,\n+};\n+use sel4_common::utils::{convert_to_mut_type_ref, pageBitsForSize};\n+use sel4_common::{BIT, MASK};\n+use sel4_cspace::interface::{cap_t, cte_insert, cte_t, mdb_node_t, resolve_address_bits, CapTag};\n+use sel4_vspace::{pptr_t, set_vm_root, VMReadOnly, VMReadWrite};\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 11 to 12)\n-use sel4_common::sel4_config::*;\n-use sel4_common::structures::{seL4_IPCBuffer, exception_t};\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 14 to 14)\n+use sel4_common::sel4_config::*;\n+use sel4_common::structures::{exception_t, seL4_IPCBuffer};\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 15 to 16)\n-\n-use super::scheduler::{addToBitmap, get_currenct_thread, possible_switch_to, ready_queues_index, removeFromBitmap, rescheduleRequired, schedule_tcb, set_current_thread};\n+use super::scheduler::{\n+    addToBitmap, get_currenct_thread, possible_switch_to, ready_queues_index, removeFromBitmap,\n+    rescheduleRequired, schedule_tcb, set_current_thread,\n+};\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 21 to 21)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 32 to 32)\n-        Self {registers }\n+        Self { registers }\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 88 to 89)\n-            ThreadState::ThreadStateInactive | ThreadState::ThreadStateBlockedOnNotification | ThreadState::ThreadStateBlockedOnReceive\n-            | ThreadState::ThreadStateBlockedOnReply | ThreadState::ThreadStateBlockedOnSend => true,\n+            ThreadState::ThreadStateInactive\n+            | ThreadState::ThreadStateBlockedOnNotification\n+            | ThreadState::ThreadStateBlockedOnReceive\n+            | ThreadState::ThreadStateBlockedOnReply\n+            | ThreadState::ThreadStateBlockedOnSend => true,\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 91 to 91)\n-            _ => false\n+            _ => false,\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 98 to 99)\n-            ThreadState::ThreadStateRunning | ThreadState::ThreadStateRestart   => true,\n-            _                                                                   => false,\n+            ThreadState::ThreadStateRunning | ThreadState::ThreadStateRestart => true,\n+            _ => false,\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 183 to 183)\n-    pub fn get_sched_queue(&mut self, index: usize) ->  &'static mut tcb_queue_t {\n+    pub fn get_sched_queue(&mut self, index: usize) -> &'static mut tcb_queue_t {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 185 to 185)\n-            #[cfg(feature = \"ENABLE_SMP\")] {\n+            #[cfg(feature = \"ENABLE_SMP\")]\n+            {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 189 to 189)\n-            #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+            #[cfg(not(feature = \"ENABLE_SMP\"))]\n+            {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 198 to 198)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 201 to 201)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 213 to 213)\n-                convert_to_mut_type_ref::<tcb_t>(self.tcbSchedPrev).tcbSchedNext = self.tcbSchedNext;\n+                convert_to_mut_type_ref::<tcb_t>(self.tcbSchedPrev).tcbSchedNext =\n+                    self.tcbSchedNext;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 221 to 221)\n-                convert_to_mut_type_ref::<tcb_t>(self.tcbSchedNext).tcbSchedPrev = self.tcbSchedPrev;\n+                convert_to_mut_type_ref::<tcb_t>(self.tcbSchedNext).tcbSchedPrev =\n+                    self.tcbSchedPrev;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 260 to 261)\n-        use super::scheduler::{ksSMP, ksCurDomain};\n-        use sel4_common::utils::{cpu_id, convert_to_type_ref};\n+        use super::scheduler::{ksCurDomain, ksSMP};\n+        use sel4_common::utils::{convert_to_type_ref, cpu_id};\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 264 to 265)\n-                let target_current = convert_to_type_ref::<tcb_t>(ksSMP[self.tcbAffinity].ksCurThread);\n-                if ksSMP[self.tcbAffinity].ksIdleThread == ksSMP[self.tcbAffinity].ksCurThread || self.tcbPriority > target_current.tcbPriority {\n+                let target_current =\n+                    convert_to_type_ref::<tcb_t>(ksSMP[self.tcbAffinity].ksCurThread);\n+                if ksSMP[self.tcbAffinity].ksIdleThread == ksSMP[self.tcbAffinity].ksCurThread\n+                    || self.tcbPriority > target_current.tcbPriority\n+                {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 272 to 272)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 298 to 298)\n-        lookupSlot_raw_ret_t { status: res_ret.status, slot: res_ret.slot }\n+        lookupSlot_raw_ret_t {\n+            status: res_ret.status,\n+            slot: res_ret.slot,\n+        }\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 344 to 345)\n-        cte_insert(&cap_t::new_reply_cap(can_grant as usize, 0, sender.get_ptr()),\n-                   reply_slot, caller_slot);\n+        cte_insert(\n+            &cap_t::new_reply_cap(can_grant as usize, 0, sender.get_ptr()),\n+            reply_slot,\n+            caller_slot,\n+        );\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 369 to 369)\n-            return Some(convert_to_mut_type_ref::<seL4_IPCBuffer>(base_ptr + (w_buffer_ptr & MASK!(page_bits))));\n+            return Some(convert_to_mut_type_ref::<seL4_IPCBuffer>(\n+                base_ptr + (w_buffer_ptr & MASK!(page_bits)),\n+            ));\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 374 to 374)\n-    pub fn lookup_extra_caps(&self, res: &mut [pptr_t; seL4_MsgMaxExtraCaps]) -> Result<(), seL4_Fault_t>{\n+    pub fn lookup_extra_caps(\n+        &self,\n+        res: &mut [pptr_t; seL4_MsgMaxExtraCaps],\n+    ) -> Result<(), seL4_Fault_t> {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 382 to 382)\n-                if unlikely(lu_ret.status != exception_t::EXCEPTION_NONE)  {\n+                if unlikely(lu_ret.status != exception_t::EXCEPTION_NONE) {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 395 to 395)\n-    pub fn lookup_extra_caps_with_buf(&self, res: &mut [pptr_t; seL4_MsgMaxExtraCaps], buf: Option<&seL4_IPCBuffer>) -> Result<(), seL4_Fault_t>{\n+    pub fn lookup_extra_caps_with_buf(\n+        &self,\n+        res: &mut [pptr_t; seL4_MsgMaxExtraCaps],\n+        buf: Option<&seL4_IPCBuffer>,\n+    ) -> Result<(), seL4_Fault_t> {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 403 to 403)\n-                if unlikely(lu_ret.status != exception_t::EXCEPTION_NONE)  {\n+                if unlikely(lu_ret.status != exception_t::EXCEPTION_NONE) {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 416 to 416)\n-    pub fn lookup_mut_ipc_buffer(&mut self, is_receiver: bool) -> Option<&'static mut seL4_IPCBuffer> {\n+    pub fn lookup_mut_ipc_buffer(\n+        &mut self,\n+        is_receiver: bool,\n+    ) -> Option<&'static mut seL4_IPCBuffer> {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 427 to 427)\n-            return Some(convert_to_mut_type_ref::<seL4_IPCBuffer>(base_ptr + (w_buffer_ptr & MASK!(page_bits))));\n+            return Some(convert_to_mut_type_ref::<seL4_IPCBuffer>(\n+                base_ptr + (w_buffer_ptr & MASK!(page_bits)),\n+            ));\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 447 to 447)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 463 to 463)\n-            },\n+            }\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 467 to 467)\n-            },\n+            }\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 478 to 478)\n-            let cptr= buffer.receiveCNode;\n+            let cptr = buffer.receiveCNode;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 485 to 485)\n-            if unlikely(lus_ret.status != exception_t::EXCEPTION_NONE || lus_ret.bitsRemaining != 0) {\n+            if unlikely(lus_ret.status != exception_t::EXCEPTION_NONE || lus_ret.bitsRemaining != 0)\n+            {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 488 to 488)\n-            return Some(convert_to_mut_type_ref::<cte_t>(lus_ret.slot as usize))\n+            return Some(convert_to_mut_type_ref::<cte_t>(lus_ret.slot as usize));\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 490 to 490)\n-        return None\n+        return None;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 500 to 500)\n-        if let (Some(send_buffer), Some(recv_buffer)) = (self.lookup_ipc_buffer(false), receiver.lookup_mut_ipc_buffer(true)) {\n+        if let (Some(send_buffer), Some(recv_buffer)) = (\n+            self.lookup_ipc_buffer(false),\n+            receiver.lookup_mut_ipc_buffer(true),\n+        ) {\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 569 to 571)\n-                receiver.set_mr(seL4_CapFault_InRecvPhase, self.tcbFault.cap_fault_get_in_receive_phase());\n-                receiver.set_lookup_fault_mrs(seL4_CapFault_LookupFailureType, &self.tcbLookupFailure)\n-            },\n+                receiver.set_mr(\n+                    seL4_CapFault_InRecvPhase,\n+                    self.tcbFault.cap_fault_get_in_receive_phase(),\n+                );\n+                receiver\n+                    .set_lookup_fault_mrs(seL4_CapFault_LookupFailureType, &self.tcbLookupFailure)\n+            }\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 574 to 575)\n-                receiver.set_mr(n_syscallMessage, self.tcbFault.unknown_syscall_get_syscall_number())\n-            },\n+                receiver.set_mr(\n+                    n_syscallMessage,\n+                    self.tcbFault.unknown_syscall_get_syscall_number(),\n+                )\n+            }\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 578 to 580)\n-                receiver.set_mr(n_exceptionMessage, self.tcbFault.user_exeception_get_number());\n-                receiver.set_mr(n_exceptionMessage + 1, self.tcbFault.user_exeception_get_code())\n-            },\n+                receiver.set_mr(\n+                    n_exceptionMessage,\n+                    self.tcbFault.user_exeception_get_number(),\n+                );\n+                receiver.set_mr(\n+                    n_exceptionMessage + 1,\n+                    self.tcbFault.user_exeception_get_code(),\n+                )\n+            }\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 584 to 584)\n-                receiver.set_mr(seL4_VMFault_PrefetchFault, self.tcbFault.vm_fault_get_instruction_fault());\n+                receiver.set_mr(\n+                    seL4_VMFault_PrefetchFault,\n+                    self.tcbFault.vm_fault_get_instruction_fault(),\n+                );\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 586 to 586)\n-            },\n+            }\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 592 to 592)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 600 to 600)\n+\n"]}},{"file":"/home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs","count":8,"kinds":{"Clippy(Error)":["error: invalid register `x10`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:18:9\n   |\n18 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","error: invalid register `x11`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:19:9\n   |\n19 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\n","error: invalid register `x12`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:20:9\n   |\n20 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\n","error: invalid register `x17`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:21:9\n   |\n21 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\n"],"Mirai":["error: invalid register `x10`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:18:9\n   |\n18 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","error: invalid register `x11`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:19:9\n   |\n19 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\n","error: invalid register `x12`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:20:9\n   |\n20 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\n","error: invalid register `x17`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:21:9\n   |\n21 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\n"]}},{"file":"src/lib.rs","count":5,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_task/src/lib.rs (original lines from 7 to 11)\n-mod thread_state;\n-mod tcb_queue;\n-pub mod tcb;\n-mod structures;\n-mod scheduler;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/lib.rs (original lines from 13 to 13)\n+mod scheduler;\n+mod structures;\n+pub mod tcb;\n+mod tcb_queue;\n+mod thread_state;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/lib.rs (original lines from 14 to 14)\n-pub use tcb::*;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/lib.rs (original lines from 16 to 17)\n-pub use thread_state::*;\n-pub use tcb_queue::*;\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/lib.rs (original lines from 19 to 19)\n+pub use tcb::*;\n+pub use tcb_queue::*;\n+pub use thread_state::*;\n+\n"]}},{"file":"src/deps.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_task/src/deps.rs (original lines from 1 to 1)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/deps.rs (original lines from 7 to 7)\n+\n"]}},{"file":"src/tcb_queue.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb_queue.rs (original lines from 5 to 5)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb_queue.rs (original lines from 42 to 42)\n-        return self.head == 0\n+        return self.head == 0;\n"]}},{"file":"src/thread_state.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_task/src/thread_state.rs (original lines from 32 to 34)\n-        unsafe {\n-            core::mem::transmute::<u8, ThreadState>(self.get_ts_type() as u8)\n-        }\n+        unsafe { core::mem::transmute::<u8, ThreadState>(self.get_ts_type() as u8) }\n","file: /home/runner/check/batch_10/kern-crates/sel4_task/src/thread_state.rs (original lines from 37 to 37)\n+\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=sel4_task, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_task\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://github.com/rel4team/sel4_common.git`\n    Updating git repository `https://github.com/rel4team/sel4_cspace.git`\n    Updating git repository `https://github.com/rel4team/sel4_vspace.git`\n    Updating git repository `https://gitee.com/rcore-os/riscv`\n    Updating git repository `https://github.com/rcore-os/riscv`\n    Updating git repository `https://github.com/rel4team/sel4_common.git`\n    Updating git repository `https://github.com/rel4team/driver-collect.git`\n    Updating git repository `https://github.com/rel4team/serial-frame.git`\n    Updating git repository `https://github.com/rel4team/serial-impl-pl011.git`\n    Updating git repository `https://github.com/rel4team/serial-impl-sbi.git`\n     Locking 30 packages to latest compatible versions\n   Compiling memchr v2.7.4\n   Compiling regex-syntax v0.8.5\n   Compiling semver-parser v0.7.0\n   Compiling lazy_static v1.5.0\n   Compiling autocfg v1.4.0\n   Compiling semver v0.9.0\n   Compiling aho-corasick v1.1.3\n   Compiling rustc_version v0.2.3\n   Compiling bare-metal v0.2.5\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n    Checking serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n    Checking tock-registers v0.9.0\n    Checking serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n    Checking serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\n    Checking spin v0.9.8\nerror: could not compile `serial-impl-sbi` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=sel4_task, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_task\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling memchr v2.7.4\n   Compiling regex-syntax v0.8.5\n   Compiling semver-parser v0.7.0\n   Compiling lazy_static v1.5.0\n   Compiling autocfg v1.4.0\n   Compiling semver v0.9.0\n   Compiling aho-corasick v1.1.3\n   Compiling rustc_version v0.2.3\n   Compiling bare-metal v0.2.5\n   Compiling lock_api v0.4.12\n   Compiling serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n   Compiling log v0.4.22\n   Compiling scopeguard v1.2.0\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n[2024-10-01T02:18:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:18:52Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling tock-registers v0.9.0\n   Compiling serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n   Compiling spin v0.9.8\n   Compiling serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\nerror: invalid register `x10`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:18:9\n   |\n18 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x11`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:19:9\n   |\n19 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x12`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:20:9\n   |\n20 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x17`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:21:9\n   |\n21 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\nerror: could not compile `serial-impl-sbi` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=sel4_task, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_task\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling memchr v2.7.4\n   Compiling regex-syntax v0.8.5\n   Compiling lazy_static v1.5.0\n   Compiling semver-parser v0.7.0\n   Compiling autocfg v1.4.0\n   Compiling semver v0.9.0\n   Compiling aho-corasick v1.1.3\n   Compiling rustc_version v0.2.3\n   Compiling lock_api v0.4.12\n   Compiling bare-metal v0.2.5\n    Checking log v0.4.22\n    Checking scopeguard v1.2.0\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n    Checking serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n    Checking tock-registers v0.9.0\n   Compiling regex-automata v0.4.8\n    Checking spin v0.9.8\n    Checking serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n    Checking serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\nerror: could not compile `serial-impl-sbi` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:18:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:18:52Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/structures.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_task/src/structures.rs (original lines from 36 to 36)\n+\n"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-net-enc28j60","count":78,"raw_reports":[{"file":"src/bank0.rs","count":25,"kinds":{"Clippy(Warn)":["warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n","warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"]}},{"file":"src/bank2.rs","count":13,"kinds":{"Clippy(Warn)":["warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n","warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"]}},{"file":"src/bank3.rs","count":11,"kinds":{"Clippy(Warn)":["warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"]}},{"file":"src/lib.rs","count":11,"kinds":{"Clippy(Warn)":["warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n","warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n","warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"],"Unformatted":["file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 638 to 638)\n-    type RxToken<'a> = RxToken<'a>\n+    type RxToken<'a>\n+        = RxToken<'a>\n","file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 642 to 642)\n-    type TxToken<'a> = TxToken<'a, S, O>\n+    type TxToken<'a>\n+        = TxToken<'a, S, O>\n"]}},{"file":"src/bank1.rs","count":8,"kinds":{"Clippy(Warn)":["warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n","warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"]}},{"file":"src/common.rs","count":7,"kinds":{"Clippy(Warn)":["warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n","warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"]}},{"file":"src/phy.rs","count":3,"kinds":{"Clippy(Warn)":["warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"]}}]},{"user":"kern-crates","repo":"sel4_vspace","pkg":"sel4_vspace","count":62,"raw_reports":[{"file":"src/interface.rs","count":14,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 2 to 2)\n-use sel4_cspace::interface::{cap_t, CapTag};\n+use super::pte::pte_t;\n+use super::utils::{\n+    kpptr_to_paddr, RISCV_GET_LVL_PGSIZE, RISCV_GET_LVL_PGSIZE_BITS, RISCV_GET_PT_INDEX,\n+};\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 4 to 4)\n-use sel4_common::{BIT, ROUND_DOWN};\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 6 to 6)\n-use sel4_common::sel4_config::{KERNEL_ELF_BASE, KERNEL_ELF_PADDR_BASE, PADDR_BASE, PPTR_BASE, PPTR_BASE_OFFSET, PPTR_TOP, PT_INDEX_BITS, seL4_PageBits};\n+use sel4_common::sel4_config::{\n+    seL4_PageBits, KERNEL_ELF_BASE, KERNEL_ELF_PADDR_BASE, PADDR_BASE, PPTR_BASE, PPTR_BASE_OFFSET,\n+    PPTR_TOP, PT_INDEX_BITS,\n+};\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 9 to 10)\n-use super::pte::pte_t;\n-use super::utils::{RISCV_GET_PT_INDEX, RISCV_GET_LVL_PGSIZE, RISCV_GET_LVL_PGSIZE_BITS, kpptr_to_paddr};\n+use sel4_common::{BIT, ROUND_DOWN};\n+use sel4_cspace::interface::{cap_t, CapTag};\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 12 to 12)\n-use super::{satp::{setVSpaceRoot, sfence}, asid::{find_vspace_for_asid, asid_t}, utils::pptr_to_paddr, structures::{vptr_t, pptr_t}};\n+use super::{\n+    asid::{asid_t, find_vspace_for_asid},\n+    satp::{setVSpaceRoot, sfence},\n+    structures::{pptr_t, vptr_t},\n+    utils::pptr_to_paddr,\n+};\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 24 to 24)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 81 to 81)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 94 to 94)\n-        find_ret.status != exception_t::EXCEPTION_NONE || find_ret.vspace_root.is_none() || find_ret.vspace_root.unwrap() != lvl1pt,\n+        find_ret.status != exception_t::EXCEPTION_NONE\n+            || find_ret.vspace_root.is_none()\n+            || find_ret.vspace_root.unwrap() != lvl1pt,\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 107 to 107)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 109 to 109)\n-pub fn unmapPage(page_size: usize, asid: asid_t, vptr: vptr_t, pptr: pptr_t) -> Result<(), lookup_fault_t> {\n+pub fn unmapPage(\n+    page_size: usize,\n+    asid: asid_t,\n+    vptr: vptr_t,\n+    pptr: pptr_t,\n+) -> Result<(), lookup_fault_t> {\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 115 to 115)\n-    let lu_ret = unsafe {(*find_ret.vspace_root.unwrap()).lookup_pt_slot(vptr)};\n+    let lu_ret = unsafe { (*find_ret.vspace_root.unwrap()).lookup_pt_slot(vptr) };\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 121 to 121)\n-    let slot = unsafe {&(*lu_ret.ptSlot)};\n+    let slot = unsafe { &(*lu_ret.ptSlot) };\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 123 to 123)\n-    if slot.get_vaild() == 0 || slot.is_pte_table() || slot.get_ppn() << seL4_PageBits != pptr_to_paddr(pptr) {\n+    if slot.get_vaild() == 0\n+        || slot.is_pte_table()\n+        || slot.get_ppn() << seL4_PageBits != pptr_to_paddr(pptr)\n+    {\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 134 to 134)\n+\n"]}},{"file":"src/pte.rs","count":9,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 2 to 3)\n-use sel4_common::MASK;\n-use sel4_common::sel4_config::{CONFIG_PT_LEVELS, PT_INDEX_BITS, seL4_PageBits, seL4_PageTableBits};\n+use sel4_common::sel4_config::{\n+    seL4_PageBits, seL4_PageTableBits, CONFIG_PT_LEVELS, PT_INDEX_BITS,\n+};\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 6 to 6)\n+use sel4_common::MASK;\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 7 to 9)\n-\n-use super::{structures::vptr_t, satp::sfence};\n-use super::utils::{paddr_to_pptr, RISCV_GET_PT_INDEX};\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 11 to 11)\n-use super::vm_rights::{RISCVGetWriteFromVMRights, RISCVGetReadFromVMRights};\n+use super::utils::{paddr_to_pptr, RISCV_GET_PT_INDEX};\n+use super::vm_rights::{RISCVGetReadFromVMRights, RISCVGetWriteFromVMRights};\n+use super::{satp::sfence, structures::vptr_t};\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 33 to 35)\n-    pub fn new(ppn: usize, sw: usize, dirty: usize, accessed: usize, global: usize, user: usize, execute: usize, write: usize,\n-               read: usize, valid: usize) -> Self {\n-\n+    pub fn new(\n+        ppn: usize,\n+        sw: usize,\n+        dirty: usize,\n+        accessed: usize,\n+        global: usize,\n+        user: usize,\n+        execute: usize,\n+        write: usize,\n+        read: usize,\n+        valid: usize,\n+    ) -> Self {\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 80 to 81)\n-            ppn, 0, is_leaf as usize, is_leaf as usize, 1,\n-            0, exec as usize, write as usize,read as usize, 1\n+            ppn,\n+            0,\n+            is_leaf as usize,\n+            is_leaf as usize,\n+            1,\n+            0,\n+            exec as usize,\n+            write as usize,\n+            read as usize,\n+            1,\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 124 to 124)\n-        self.get_vaild() != 0 && !(self.get_read() != 0 ||self.get_write() != 0 || self.get_execute() != 0)\n+        self.get_vaild() != 0\n+            && !(self.get_read() != 0 || self.get_write() != 0 || self.get_execute() != 0)\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 147 to 147)\n-        while unsafe {(*ret.ptSlot).is_pte_table()} && level > 0 {\n+        while unsafe { (*ret.ptSlot).is_pte_table() } && level > 0 {\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 150 to 150)\n-            pt = unsafe {(*ret.ptSlot).get_pte_from_ppn_mut() as *mut pte_t};\n+            pt = unsafe { (*ret.ptSlot).get_pte_from_ppn_mut() as *mut pte_t };\n"]}},{"file":"/home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs","count":8,"kinds":{"Mirai":["error: invalid register `x10`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:18:9\n   |\n18 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","error: invalid register `x11`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:19:9\n   |\n19 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\n","error: invalid register `x12`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:20:9\n   |\n20 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\n","error: invalid register `x17`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:21:9\n   |\n21 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\n"],"Clippy(Error)":["error: invalid register `x10`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:18:9\n   |\n18 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","error: invalid register `x11`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:19:9\n   |\n19 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\n","error: invalid register `x12`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:20:9\n   |\n20 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\n","error: invalid register `x17`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:21:9\n   |\n21 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\n"]}},{"file":"src/asid.rs","count":8,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/asid.rs (original lines from 4 to 5)\n-use sel4_common::{structures::exception_t, sel4_config::*, utils::convert_to_option_mut_type_ref, fault::*, BIT, MASK};\n-use sel4_cspace::interface::cap_t;\n+use super::{interface::set_vm_root, pte::pte_t};\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/asid.rs (original lines from 7 to 7)\n-use super::{pte::pte_t, interface::set_vm_root};\n+use sel4_common::{\n+    fault::*, sel4_config::*, structures::exception_t, utils::convert_to_option_mut_type_ref, BIT,\n+    MASK,\n+};\n+use sel4_cspace::interface::cap_t;\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/asid.rs (original lines from 52 to 52)\n-        return convert_to_option_mut_type_ref::<asid_pool_t>(riscvKSASIDTable[index] as usize)\n+        return convert_to_option_mut_type_ref::<asid_pool_t>(riscvKSASIDTable[index] as usize);\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/asid.rs (original lines from 71 to 73)\n-    let poolPtr =  unsafe {\n-        riscvKSASIDTable[asid >> asidLowBits]\n-    };\n+    let poolPtr = unsafe { riscvKSASIDTable[asid >> asidLowBits] };\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/asid.rs (original lines from 80 to 82)\n-    let vspace_root = unsafe {\n-        (*poolPtr).array[asid & MASK!(asidLowBits)]\n-    };\n+    let vspace_root = unsafe { (*poolPtr).array[asid & MASK!(asidLowBits)] };\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/asid.rs (original lines from 107 to 107)\n-pub fn delete_asid_pool(asid_base: asid_t, pool: *mut asid_pool_t, default_vspace_cap: &cap_t) -> Result<(), lookup_fault_t> {\n+pub fn delete_asid_pool(\n+    asid_base: asid_t,\n+    pool: *mut asid_pool_t,\n+    default_vspace_cap: &cap_t,\n+) -> Result<(), lookup_fault_t> {\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/asid.rs (original lines from 118 to 118)\n-pub fn delete_asid(asid: asid_t, vspace: *mut pte_t, default_vspace_cap: &cap_t) -> Result<(), lookup_fault_t> {\n+pub fn delete_asid(\n+    asid: asid_t,\n+    vspace: *mut pte_t,\n+    default_vspace_cap: &cap_t,\n+) -> Result<(), lookup_fault_t> {\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/asid.rs (original lines from 130 to 130)\n-\n"]}},{"file":"src/lib.rs","count":6,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/lib.rs (original lines from 7 to 11)\n-mod structures;\n-mod vm_rights;\n-mod satp;\n-mod utils;\n-mod pte;\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/lib.rs (original lines from 14 to 14)\n+mod pte;\n+mod satp;\n+mod structures;\n+mod utils;\n+mod vm_rights;\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/lib.rs (original lines from 15 to 17)\n-pub use structures::*;\n-pub use interface::{activate_kernel_vspace, rust_map_kernel_window, copyGlobalMappings, set_vm_root, unmapPage};\n-pub use vm_rights::{VMReadWrite, VMReadOnly, maskVMRights};\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/lib.rs (original lines from 19 to 20)\n-    asid_t, asid_pool_t, riscvKSASIDTable, delete_asid_pool, delete_asid,\n-    find_vspace_for_asid, get_asid_pool_by_index, set_asid_pool_by_index\n+    asid_pool_t, asid_t, delete_asid, delete_asid_pool, find_vspace_for_asid,\n+    get_asid_pool_by_index, riscvKSASIDTable, set_asid_pool_by_index,\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/lib.rs (original lines from 22 to 22)\n-pub use utils::{pptr_to_paddr, paddr_to_pptr, kpptr_to_paddr, RISCV_GET_LVL_PGSIZE_BITS, RISCV_GET_LVL_PGSIZE, checkVPAlignment};\n+pub use interface::{\n+    activate_kernel_vspace, copyGlobalMappings, rust_map_kernel_window, set_vm_root, unmapPage,\n+};\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/lib.rs (original lines from 24 to 24)\n-pub use satp::{sfence, setVSpaceRoot};\n+pub use satp::{setVSpaceRoot, sfence};\n+pub use structures::*;\n+pub use utils::{\n+    checkVPAlignment, kpptr_to_paddr, paddr_to_pptr, pptr_to_paddr, RISCV_GET_LVL_PGSIZE,\n+    RISCV_GET_LVL_PGSIZE_BITS,\n+};\n+pub use vm_rights::{maskVMRights, VMReadOnly, VMReadWrite};\n+\n"]}},{"file":"src/satp.rs","count":4,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/satp.rs (original lines from 1 to 1)\n+use super::structures::paddr_t;\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/satp.rs (original lines from 3 to 3)\n-use super::structures::paddr_t;\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/satp.rs (original lines from 50 to 50)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/satp.rs (original lines from 62 to 62)\n+\n"]}},{"file":"src/structures.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/structures.rs (original lines from 11 to 11)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/structures.rs (original lines from 20 to 22)\n-        Self {\n-            words: [w]\n-        }\n+        Self { words: [w] }\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/structures.rs (original lines from 34 to 34)\n+\n"]}},{"file":"src/utils.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/utils.rs (original lines from 1 to 3)\n-use sel4_common::{BIT, MASK};\n-use sel4_common::sel4_config::{CONFIG_PT_LEVELS, KERNEL_ELF_BASE_OFFSET, PPTR_BASE_OFFSET, PT_INDEX_BITS, seL4_PageBits};\n-use sel4_common::utils::pageBitsForSize;\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/utils.rs (original lines from 5 to 5)\n-\n+use sel4_common::sel4_config::{\n+    seL4_PageBits, CONFIG_PT_LEVELS, KERNEL_ELF_BASE_OFFSET, PPTR_BASE_OFFSET, PT_INDEX_BITS,\n+};\n+use sel4_common::utils::pageBitsForSize;\n+use sel4_common::{BIT, MASK};\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/utils.rs (original lines from 43 to 43)\n+\n"]}},{"file":"src/vm_rights.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/vm_rights.rs (original lines from 7 to 7)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/vm_rights.rs (original lines from 26 to 26)\n-        }\n+        };\n","file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/vm_rights.rs (original lines from 30 to 30)\n+\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=sel4_vspace, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_vspace\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://gitee.com/rcore-os/riscv`\n    Updating git repository `https://github.com/rel4team/sel4_common.git`\n    Updating git repository `https://github.com/rel4team/sel4_cspace.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/rcore-os/riscv`\n    Updating git repository `https://github.com/rel4team/sel4_common.git`\n    Updating git repository `https://github.com/rel4team/driver-collect.git`\n    Updating git repository `https://github.com/rel4team/serial-frame.git`\n    Updating git repository `https://github.com/rel4team/serial-impl-pl011.git`\n    Updating git repository `https://github.com/rel4team/serial-impl-sbi.git`\n     Locking 29 packages to latest compatible versions\n   Compiling memchr v2.7.4\n   Compiling regex-syntax v0.8.5\n   Compiling semver-parser v0.7.0\n   Compiling lazy_static v1.5.0\n   Compiling autocfg v1.4.0\n   Compiling semver v0.9.0\n   Compiling aho-corasick v1.1.3\n   Compiling rustc_version v0.2.3\n   Compiling bare-metal v0.2.5\n   Compiling lock_api v0.4.12\n    Checking log v0.4.22\n    Checking serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n    Checking bit_field v0.10.2\n    Checking scopeguard v1.2.0\n    Checking bitflags v1.3.2\n    Checking tock-registers v0.9.0\n    Checking serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n    Checking serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\n    Checking spin v0.9.8\nerror: could not compile `serial-impl-sbi` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=sel4_vspace, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_vspace\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling memchr v2.7.4\n   Compiling regex-syntax v0.8.5\n   Compiling lazy_static v1.5.0\n   Compiling semver-parser v0.7.0\n   Compiling autocfg v1.4.0\n   Compiling semver v0.9.0\n   Compiling aho-corasick v1.1.3\n   Compiling rustc_version v0.2.3\n   Compiling bare-metal v0.2.5\n   Compiling lock_api v0.4.12\n   Compiling log v0.4.22\n   Compiling serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n[2024-10-01T02:19:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:19:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling scopeguard v1.2.0\n   Compiling tock-registers v0.9.0\n   Compiling serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n   Compiling serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\nerror: invalid register `x10`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:18:9\n   |\n18 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x11`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:19:9\n   |\n19 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x12`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:20:9\n   |\n20 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x17`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:21:9\n   |\n21 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\nerror: could not compile `serial-impl-sbi` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=sel4_vspace, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_vspace\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling memchr v2.7.4\n   Compiling regex-syntax v0.8.5\n   Compiling semver-parser v0.7.0\n   Compiling lazy_static v1.5.0\n   Compiling autocfg v1.4.0\n   Compiling semver v0.9.0\n   Compiling aho-corasick v1.1.3\n   Compiling rustc_version v0.2.3\n   Compiling lock_api v0.4.12\n   Compiling bare-metal v0.2.5\n    Checking bit_field v0.10.2\n    Checking serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n    Checking bitflags v1.3.2\n    Checking log v0.4.22\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.9.0\n    Checking serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n   Compiling regex-automata v0.4.8\n    Checking spin v0.9.8\n    Checking serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\nerror: could not compile `serial-impl-sbi` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:19:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:19:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"sel4_common","pkg":"sel4_common","count":58,"raw_reports":[{"file":"src/sbi.rs","count":11,"kinds":{"Clippy(Error)":["error: invalid register `x10`: unknown register\n  --> src/sbi.rs:20:9\n   |\n20 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","error: invalid register `x11`: unknown register\n  --> src/sbi.rs:21:9\n   |\n21 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\n","error: invalid register `x12`: unknown register\n  --> src/sbi.rs:22:9\n   |\n22 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\n","error: invalid register `x17`: unknown register\n  --> src/sbi.rs:23:9\n   |\n23 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\n"],"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_common/src/sbi.rs (original lines from 12 to 12)\n-const SYSCALL_WRITE:usize =64;\n+const SYSCALL_WRITE: usize = 64;\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/sbi.rs (original lines from 29 to 30)\n-\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/sbi.rs (original lines from 54 to 54)\n-\n"],"Mirai":["error: invalid register `x10`: unknown register\n  --> src/sbi.rs:20:9\n   |\n20 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","error: invalid register `x11`: unknown register\n  --> src/sbi.rs:21:9\n   |\n21 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\n","error: invalid register `x12`: unknown register\n  --> src/sbi.rs:22:9\n   |\n22 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\n","error: invalid register `x17`: unknown register\n  --> src/sbi.rs:23:9\n   |\n23 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\n"]}},{"file":"src/utils.rs","count":7,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_common/src/utils.rs (original lines from 83 to 83)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/utils.rs (original lines from 101 to 103)\n-    unsafe {\n-        & *(addr as *mut T)\n-    }\n+    unsafe { &*(addr as *mut T) }\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/utils.rs (original lines from 109 to 111)\n-    unsafe {\n-        &mut *(addr as *mut T)\n-    }\n+    unsafe { &mut *(addr as *mut T) }\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/utils.rs (original lines from 116 to 118)\n-    unsafe {\n-        &mut *(addr as *mut T)\n-    }\n+    unsafe { &mut *(addr as *mut T) }\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/utils.rs (original lines from 139 to 139)\n-    #[cfg(feature = \"ENABLE_SMP\")] {\n+    #[cfg(feature = \"ENABLE_SMP\")]\n+    {\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/utils.rs (original lines from 143 to 143)\n-    #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+    #[cfg(not(feature = \"ENABLE_SMP\"))]\n+    {\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/utils.rs (original lines from 158 to 158)\n+\n"]}},{"file":"src/fault.rs","count":5,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_common/src/fault.rs (original lines from 36 to 38)\n-        unsafe {\n-            core::mem::transmute::<u8, FaultType>(self.get_type() as u8)\n-        }\n+        unsafe { core::mem::transmute::<u8, FaultType>(self.get_type() as u8) }\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/fault.rs (original lines from 42 to 42)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/fault.rs (original lines from 65 to 67)\n-\n-\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/fault.rs (original lines from 82 to 82)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/fault.rs (original lines from 103 to 105)\n-        unsafe {\n-            core::mem::transmute::<u8, LookupFaultType>(self.get_type() as u8)\n-        }\n+        unsafe { core::mem::transmute::<u8, LookupFaultType>(self.get_type() as u8) }\n"]}},{"file":"src/object.rs","count":5,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_common/src/object.rs (original lines from 18 to 18)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/object.rs (original lines from 49 to 51)\n-        unsafe {\n-            Some(core::mem::transmute::<u8, ObjectType>(value as u8))\n-        }\n+        unsafe { Some(core::mem::transmute::<u8, ObjectType>(value as u8)) }\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/object.rs (original lines from 57 to 57)\n-            _ => false\n+            _ => false,\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/object.rs (original lines from 60 to 60)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/object.rs (original lines from 62 to 62)\n+\n"]}},{"file":"src/sel4_config.rs","count":5,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_common/src/sel4_config.rs (original lines from 31 to 31)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/sel4_config.rs (original lines from 51 to 51)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/sel4_config.rs (original lines from 91 to 91)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/sel4_config.rs (original lines from 101 to 101)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/sel4_config.rs (original lines from 105 to 105)\n-\n"]}},{"file":"src/smp.rs","count":5,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_common/src/smp.rs (original lines from 1 to 2)\n-use core::arch::asm;\n-use crate::BIT;\n+use super::sel4_config::{CONFIG_KERNEL_STACK_BITS, CONFIG_MAX_NUM_NODES};\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/smp.rs (original lines from 4 to 4)\n-use super::sel4_config::{CONFIG_MAX_NUM_NODES, CONFIG_KERNEL_STACK_BITS};\n+use crate::BIT;\n+use core::arch::asm;\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/smp.rs (original lines from 6 to 6)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/smp.rs (original lines from 9 to 11)\n-    unsafe {\n-        &*(coreMap as usize as *const [usize; CONFIG_MAX_NUM_NODES])\n-    }\n+    unsafe { &*(coreMap as usize as *const [usize; CONFIG_MAX_NUM_NODES]) }\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/smp.rs (original lines from 27 to 27)\n-\n"]}},{"file":"src/lib.rs","count":4,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_common/src/lib.rs (original lines from 6 to 12)\n-#[cfg(feature = \"ENABLE_SMP\")]\n-pub mod smp;\n-mod deps;\n-pub mod sel4_config;\n-pub mod structures;\n-pub mod utils;\n-pub mod sbi;\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/lib.rs (original lines from 14 to 14)\n+mod deps;\n+pub mod fault;\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/lib.rs (original lines from 17 to 17)\n-pub mod fault;\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/lib.rs (original lines from 19 to 19)\n+pub mod sbi;\n+pub mod sel4_config;\n+#[cfg(feature = \"ENABLE_SMP\")]\n+pub mod smp;\n+pub mod structures;\n+pub mod utils;\n+\n"]}},{"file":"src/deps.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_common/src/deps.rs (original lines from 1 to 1)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/deps.rs (original lines from 5 to 6)\n-\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/deps.rs (original lines from 12 to 12)\n+\n"]}},{"file":"src/logging.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_common/src/logging.rs (original lines from 9 to 9)\n-use crate::println;\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/logging.rs (original lines from 11 to 11)\n+use crate::println;\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/logging.rs (original lines from 58 to 58)\n+\n"]}},{"file":"src/message_info.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_common/src/message_info.rs (original lines from 6 to 6)\n-    InvalidInvocation                       = 0,\n+    InvalidInvocation = 0,\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/message_info.rs (original lines from 63 to 65)\n-        Self {\n-            words: [w]\n-        }\n+        Self { words: [w] }\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/message_info.rs (original lines from 84 to 86)\n-        unsafe {\n-            core::mem::transmute::<u8, MessageLabel>(self.get_usize_label() as u8)\n-        }\n+        unsafe { core::mem::transmute::<u8, MessageLabel>(self.get_usize_label() as u8) }\n"]}},{"file":"src/structures.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_common/src/structures.rs (original lines from 14 to 14)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_common/src/structures.rs (original lines from 32 to 32)\n+\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=sel4_common, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_common\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://gitee.com/rcore-os/riscv`\n     Locking 19 packages to latest compatible versions\n   Compiling memchr v2.7.4\n   Compiling regex-syntax v0.8.5\n   Compiling semver-parser v0.7.0\n   Compiling autocfg v1.4.0\n   Compiling semver v0.9.0\n   Compiling aho-corasick v1.1.3\n   Compiling rustc_version v0.2.3\n   Compiling lazy_static v1.5.0\n   Compiling bare-metal v0.2.5\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n    Checking log v0.4.22\n    Checking spin v0.9.8\n   Compiling regex-automata v0.4.8\n   Compiling regex v1.11.0\n   Compiling riscv-target v0.1.2\n   Compiling riscv v0.6.0 (https://gitee.com/rcore-os/riscv#11d43cf7)\n    Checking sel4_common v0.1.0 (/home/runner/check/batch_10/kern-crates/sel4_common)\nerror: could not compile `sel4_common` (lib) due to 4 previous errors\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=sel4_common, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_common\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling memchr v2.7.4\n   Compiling semver-parser v0.7.0\n   Compiling regex-syntax v0.8.5\n   Compiling autocfg v1.4.0\n   Compiling semver v0.9.0\n   Compiling aho-corasick v1.1.3\n   Compiling rustc_version v0.2.3\n   Compiling lazy_static v1.5.0\n   Compiling bare-metal v0.2.5\n   Compiling lock_api v0.4.12\n   Compiling scopeguard v1.2.0\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling log v0.4.22\n   Compiling spin v0.9.8\n[2024-10-01T02:18:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:18:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling regex-automata v0.4.8\n   Compiling regex v1.11.0\n   Compiling riscv-target v0.1.2\n[2024-10-01T02:18:06Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:18:06Z WARN  lockbud::callbacks] crate riscv_target contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling riscv v0.6.0 (https://gitee.com/rcore-os/riscv#11d43cf7)\n   Compiling sel4_common v0.1.0 (/home/runner/check/batch_10/kern-crates/sel4_common)\nerror: invalid register `x10`: unknown register\n  --> src/sbi.rs:20:9\n   |\n20 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x11`: unknown register\n  --> src/sbi.rs:21:9\n   |\n21 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x12`: unknown register\n  --> src/sbi.rs:22:9\n   |\n22 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x17`: unknown register\n  --> src/sbi.rs:23:9\n   |\n23 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\nerror: could not compile `sel4_common` (lib) due to 4 previous errors\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=sel4_common, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_common\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling memchr v2.7.4\n   Compiling semver-parser v0.7.0\n   Compiling regex-syntax v0.8.5\n   Compiling autocfg v1.4.0\n   Compiling semver v0.9.0\n   Compiling aho-corasick v1.1.3\n   Compiling rustc_version v0.2.3\n   Compiling lazy_static v1.5.0\n   Compiling bare-metal v0.2.5\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking bitflags v1.3.2\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n    Checking spin v0.9.8\n   Compiling regex-automata v0.4.8\n   Compiling regex v1.11.0\n   Compiling riscv-target v0.1.2\n   Compiling riscv v0.6.0 (https://gitee.com/rcore-os/riscv#11d43cf7)\n    Checking sel4_common v0.1.0 (/home/runner/check/batch_10/kern-crates/sel4_common)\nerror: could not compile `sel4_common` (lib) due to 5 previous errors\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:18:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:18:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-01T02:18:06Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:18:06Z WARN  lockbud::callbacks] crate riscv_target contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/console.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_common/src/console.rs (original lines from 36 to 36)\n+\n"]}}]},{"user":"kern-crates","repo":"sel4_ipc","pkg":"sel4_ipc","count":56,"raw_reports":[{"file":"src/transfer.rs","count":23,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 6 to 7)\n-use sel4_common::structures::*;\n-use sel4_common::sel4_config::*;\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 10 to 10)\n-use sel4_common::registers::{badgeRegister, FaultIP, msgInfoRegister, n_exceptionMessage, n_syscallMessage};\n+use sel4_common::registers::{\n+    badgeRegister, msgInfoRegister, n_exceptionMessage, n_syscallMessage, FaultIP,\n+};\n+use sel4_common::sel4_config::*;\n+use sel4_common::structures::*;\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 19 to 19)\n-    fn set_transfer_caps(&mut self, endpoint: Option<&endpoint_t>, info: &mut seL4_MessageInfo_t, current_extra_caps: &[pptr_t; seL4_MsgMaxExtraCaps]);\n+    fn set_transfer_caps(\n+        &mut self,\n+        endpoint: Option<&endpoint_t>,\n+        info: &mut seL4_MessageInfo_t,\n+        current_extra_caps: &[pptr_t; seL4_MsgMaxExtraCaps],\n+    );\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 21 to 21)\n-    fn set_transfer_caps_with_buf(&mut self, endpoint: Option<&endpoint_t>, info: &mut seL4_MessageInfo_t, current_extra_caps: &[pptr_t; seL4_MsgMaxExtraCaps], ipc_buffer: Option<&mut seL4_IPCBuffer>);\n+    fn set_transfer_caps_with_buf(\n+        &mut self,\n+        endpoint: Option<&endpoint_t>,\n+        info: &mut seL4_MessageInfo_t,\n+        current_extra_caps: &[pptr_t; seL4_MsgMaxExtraCaps],\n+        ipc_buffer: Option<&mut seL4_IPCBuffer>,\n+    );\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 25 to 25)\n-    fn do_normal_transfer(&self, receiver: &mut tcb_t, endpoint: Option<&endpoint_t>, badge: usize, can_grant: bool);\n+    fn do_normal_transfer(\n+        &self,\n+        receiver: &mut tcb_t,\n+        endpoint: Option<&endpoint_t>,\n+        badge: usize,\n+        can_grant: bool,\n+    );\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 31 to 31)\n-    fn do_ipc_transfer(&self, receiver: &mut tcb_t, endpoint: Option<&endpoint_t>, badge: usize, grant: bool);\n+    fn do_ipc_transfer(\n+        &self,\n+        receiver: &mut tcb_t,\n+        endpoint: Option<&endpoint_t>,\n+        badge: usize,\n+        grant: bool,\n+    );\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 62 to 62)\n-    fn set_transfer_caps(&mut self, endpoint: Option<&endpoint_t>, info: &mut seL4_MessageInfo_t, current_extra_caps: &[pptr_t; seL4_MsgMaxExtraCaps]) {\n+    fn set_transfer_caps(\n+        &mut self,\n+        endpoint: Option<&endpoint_t>,\n+        info: &mut seL4_MessageInfo_t,\n+        current_extra_caps: &[pptr_t; seL4_MsgMaxExtraCaps],\n+    ) {\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 75 to 75)\n-            if cap.get_cap_type() == CapTag::CapEndpointCap && endpoint.is_some() && cap.get_ep_ptr() == endpoint.unwrap().get_ptr() {\n+            if cap.get_cap_type() == CapTag::CapEndpointCap\n+                && endpoint.is_some()\n+                && cap.get_ep_ptr() == endpoint.unwrap().get_ptr()\n+            {\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 84 to 84)\n-                    if dc_ret.status != exception_t::EXCEPTION_NONE || dc_ret.cap.get_cap_type() == CapTag::CapNullCap {\n+                    if dc_ret.status != exception_t::EXCEPTION_NONE\n+                        || dc_ret.cap.get_cap_type() == CapTag::CapNullCap\n+                    {\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 95 to 95)\n-    fn set_transfer_caps_with_buf(&mut self, endpoint: Option<&endpoint_t>, info: &mut seL4_MessageInfo_t, current_extra_caps: &[pptr_t; seL4_MsgMaxExtraCaps], ipc_buffer: Option<&mut seL4_IPCBuffer>) {\n+    fn set_transfer_caps_with_buf(\n+        &mut self,\n+        endpoint: Option<&endpoint_t>,\n+        info: &mut seL4_MessageInfo_t,\n+        current_extra_caps: &[pptr_t; seL4_MsgMaxExtraCaps],\n+        ipc_buffer: Option<&mut seL4_IPCBuffer>,\n+    ) {\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 108 to 108)\n-            if cap.get_cap_type() == CapTag::CapEndpointCap && endpoint.is_some() && cap.get_ep_ptr() == endpoint.unwrap().get_ptr() {\n+            if cap.get_cap_type() == CapTag::CapEndpointCap\n+                && endpoint.is_some()\n+                && cap.get_ep_ptr() == endpoint.unwrap().get_ptr()\n+            {\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 117 to 117)\n-                    if dc_ret.status != exception_t::EXCEPTION_NONE || dc_ret.cap.get_cap_type() == CapTag::CapNullCap {\n+                    if dc_ret.status != exception_t::EXCEPTION_NONE\n+                        || dc_ret.cap.get_cap_type() == CapTag::CapNullCap\n+                    {\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 133 to 135)\n-                receiver.set_mr(seL4_CapFault_InRecvPhase, self.tcbFault.cap_fault_get_in_receive_phase());\n-                receiver.set_lookup_fault_mrs(seL4_CapFault_LookupFailureType, &self.tcbLookupFailure)\n-            },\n+                receiver.set_mr(\n+                    seL4_CapFault_InRecvPhase,\n+                    self.tcbFault.cap_fault_get_in_receive_phase(),\n+                );\n+                receiver\n+                    .set_lookup_fault_mrs(seL4_CapFault_LookupFailureType, &self.tcbLookupFailure)\n+            }\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 138 to 139)\n-                receiver.set_mr(n_syscallMessage, self.tcbFault.unknown_syscall_get_syscall_number())\n-            },\n+                receiver.set_mr(\n+                    n_syscallMessage,\n+                    self.tcbFault.unknown_syscall_get_syscall_number(),\n+                )\n+            }\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 142 to 144)\n-                receiver.set_mr(n_exceptionMessage, self.tcbFault.user_exeception_get_number());\n-                receiver.set_mr(n_exceptionMessage + 1, self.tcbFault.user_exeception_get_code())\n-            },\n+                receiver.set_mr(\n+                    n_exceptionMessage,\n+                    self.tcbFault.user_exeception_get_number(),\n+                );\n+                receiver.set_mr(\n+                    n_exceptionMessage + 1,\n+                    self.tcbFault.user_exeception_get_code(),\n+                )\n+            }\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 148 to 148)\n-                receiver.set_mr(seL4_VMFault_PrefetchFault, self.tcbFault.vm_fault_get_instruction_fault());\n+                receiver.set_mr(\n+                    seL4_VMFault_PrefetchFault,\n+                    self.tcbFault.vm_fault_get_instruction_fault(),\n+                );\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 150 to 150)\n-            },\n+            }\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 160 to 160)\n-    fn do_normal_transfer(&self, receiver: &mut tcb_t, endpoint: Option<&endpoint_t>, badge: usize, can_grant: bool) {\n+    fn do_normal_transfer(\n+        &self,\n+        receiver: &mut tcb_t,\n+        endpoint: Option<&endpoint_t>,\n+        badge: usize,\n+        can_grant: bool,\n+    ) {\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 179 to 179)\n-                self.copy_fault_mrs_for_reply(receiver, MessageID_Syscall, core::cmp::min(length, n_syscallMessage));\n+                self.copy_fault_mrs_for_reply(\n+                    receiver,\n+                    MessageID_Syscall,\n+                    core::cmp::min(length, n_syscallMessage),\n+                );\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 183 to 183)\n-                self.copy_fault_mrs_for_reply(receiver, MessageID_Exception, core::cmp::min(length, n_exceptionMessage));\n+                self.copy_fault_mrs_for_reply(\n+                    receiver,\n+                    MessageID_Exception,\n+                    core::cmp::min(length, n_exceptionMessage),\n+                );\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 186 to 186)\n-            _ => true\n+            _ => true,\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 191 to 191)\n-        if let Some(ntfn) = convert_to_option_mut_type_ref::<notification_t>(self.tcbBoundNotification) {\n+        if let Some(ntfn) =\n+            convert_to_option_mut_type_ref::<notification_t>(self.tcbBoundNotification)\n+        {\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 201 to 201)\n-    fn do_ipc_transfer(&self, receiver: &mut tcb_t, endpoint: Option<&endpoint_t>, badge: usize, grant: bool) {\n+    fn do_ipc_transfer(\n+        &self,\n+        receiver: &mut tcb_t,\n+        endpoint: Option<&endpoint_t>,\n+        badge: usize,\n+        grant: bool,\n+    ) {\n"]}},{"file":"src/endpoint.rs","count":11,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/endpoint.rs (original lines from 1 to 1)\n+use crate::transfer::Transfer;\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/endpoint.rs (original lines from 4 to 4)\n-use sel4_task::{possible_switch_to, rescheduleRequired, schedule_tcb, set_thread_state, tcb_queue_t, tcb_t, ThreadState};\n+use sel4_task::{\n+    possible_switch_to, rescheduleRequired, schedule_tcb, set_thread_state, tcb_queue_t, tcb_t,\n+    ThreadState,\n+};\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/endpoint.rs (original lines from 6 to 6)\n-use crate::transfer::Transfer;\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/endpoint.rs (original lines from 8 to 8)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/endpoint.rs (original lines from 38 to 40)\n-        unsafe {\n-            core::mem::transmute::<u8, EPState>(self.get_usize_state() as u8)\n-        }\n+        unsafe { core::mem::transmute::<u8, EPState>(self.get_usize_state() as u8) }\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/endpoint.rs (original lines from 45 to 45)\n-        tcb_queue_t { head: self.get_queue_head(), tail: self.get_queue_tail() }\n+        tcb_queue_t {\n+            head: self.get_queue_head(),\n+            tail: self.get_queue_tail(),\n+        }\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/endpoint.rs (original lines from 111 to 112)\n-    pub fn send_ipc(&mut self, src_thread: &mut tcb_t, blocking: bool,\n-                    do_call: bool, can_grant: bool, badge: usize, can_grant_reply: bool) {\n+    pub fn send_ipc(\n+        &mut self,\n+        src_thread: &mut tcb_t,\n+        blocking: bool,\n+        do_call: bool,\n+        can_grant: bool,\n+        badge: usize,\n+        can_grant_reply: bool,\n+    ) {\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/endpoint.rs (original lines from 116 to 116)\n-                    src_thread.tcbState.set_ts_type(ThreadState::ThreadStateBlockedOnSend as usize);\n+                    src_thread\n+                        .tcbState\n+                        .set_ts_type(ThreadState::ThreadStateBlockedOnSend as usize);\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/endpoint.rs (original lines from 118 to 118)\n-                    src_thread.tcbState.set_blocking_ipc_can_grant(can_grant as usize);\n+                    src_thread\n+                        .tcbState\n+                        .set_blocking_ipc_can_grant(can_grant as usize);\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/endpoint.rs (original lines from 120 to 121)\n-                    src_thread.tcbState.set_blocking_ipc_can_grant_reply(can_grant_reply as usize);\n-                    src_thread.tcbState.set_blocking_ipc_is_call(do_call as usize);\n+                    src_thread\n+                        .tcbState\n+                        .set_blocking_ipc_can_grant_reply(can_grant_reply as usize);\n+                    src_thread\n+                        .tcbState\n+                        .set_blocking_ipc_is_call(do_call as usize);\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/endpoint.rs (original lines from 201 to 201)\n-\n"]}},{"file":"src/notification.rs","count":9,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/notification.rs (original lines from 1 to 1)\n+use crate::transfer::Transfer;\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/notification.rs (original lines from 4 to 5)\n-use sel4_task::{possible_switch_to, rescheduleRequired, set_thread_state, tcb_queue_t, tcb_t, ThreadState};\n-use crate::transfer::Transfer;\n+use sel4_task::{\n+    possible_switch_to, rescheduleRequired, set_thread_state, tcb_queue_t, tcb_t, ThreadState,\n+};\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/notification.rs (original lines from 7 to 7)\n-\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/notification.rs (original lines from 30 to 32)\n-        unsafe {\n-            core::mem::transmute::<u8, NtfnState>(self.get_usize_state() as u8)\n-        }\n+        unsafe { core::mem::transmute::<u8, NtfnState>(self.get_usize_state() as u8) }\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/notification.rs (original lines from 37 to 37)\n-        tcb_queue_t { head: self.get_queue_head(), tail: self.get_queue_tail() }\n+        tcb_queue_t {\n+            head: self.get_queue_head(),\n+            tail: self.get_queue_tail(),\n+        }\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/notification.rs (original lines from 65 to 65)\n-        if self.get_state() ==  NtfnState::Waiting {\n+        if self.get_state() == NtfnState::Waiting {\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/notification.rs (original lines from 70 to 70)\n-            while let Some(thread) =  op_thread {\n+            while let Some(thread) = op_thread {\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/notification.rs (original lines from 108 to 108)\n-                    if tcb.get_state() == ThreadState::ThreadStateBlockedOnReceive{\n+                    if tcb.get_state() == ThreadState::ThreadStateBlockedOnReceive {\n","file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/notification.rs (original lines from 165 to 165)\n+\n"]}},{"file":"/home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs","count":8,"kinds":{"Mirai":["error: invalid register `x10`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:18:9\n   |\n18 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","error: invalid register `x11`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:19:9\n   |\n19 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\n","error: invalid register `x12`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:20:9\n   |\n20 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\n","error: invalid register `x17`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:21:9\n   |\n21 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\n"],"Clippy(Error)":["error: invalid register `x10`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:18:9\n   |\n18 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","error: invalid register `x11`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:19:9\n   |\n19 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\n","error: invalid register `x12`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:20:9\n   |\n20 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\n","error: invalid register `x17`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:21:9\n   |\n21 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=sel4_ipc, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_ipc\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/rel4team/sel4_common.git`\n    Updating git repository `https://github.com/rel4team/sel4_cspace.git`\n    Updating git repository `https://github.com/rel4team/sel4_task.git`\n    Updating git repository `https://github.com/rel4team/sel4_vspace.git`\n    Updating crates.io index\n    Updating git repository `https://gitee.com/rcore-os/riscv`\n    Updating git repository `https://github.com/rcore-os/riscv`\n    Updating git repository `https://github.com/rel4team/sel4_common.git`\n    Updating git repository `https://github.com/rel4team/driver-collect.git`\n    Updating git repository `https://github.com/rel4team/serial-frame.git`\n    Updating git repository `https://github.com/rel4team/serial-impl-pl011.git`\n    Updating git repository `https://github.com/rel4team/serial-impl-sbi.git`\n     Locking 31 packages to latest compatible versions\n   Compiling memchr v2.7.4\n   Compiling regex-syntax v0.8.5\n   Compiling lazy_static v1.5.0\n   Compiling semver-parser v0.7.0\n   Compiling autocfg v1.4.0\n   Compiling semver v0.9.0\n   Compiling aho-corasick v1.1.3\n   Compiling rustc_version v0.2.3\n   Compiling bare-metal v0.2.5\n   Compiling lock_api v0.4.12\n    Checking bit_field v0.10.2\n    Checking log v0.4.22\n    Checking serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n    Checking scopeguard v1.2.0\n    Checking bitflags v1.3.2\n    Checking tock-registers v0.9.0\n    Checking serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n    Checking serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\n    Checking spin v0.9.8\nerror: could not compile `serial-impl-sbi` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=sel4_ipc, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_ipc\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling memchr v2.7.4\n   Compiling regex-syntax v0.8.5\n   Compiling semver-parser v0.7.0\n   Compiling lazy_static v1.5.0\n   Compiling autocfg v1.4.0\n   Compiling semver v0.9.0\n   Compiling aho-corasick v1.1.3\n   Compiling rustc_version v0.2.3\n   Compiling bare-metal v0.2.5\n   Compiling lock_api v0.4.12\n   Compiling serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n   Compiling log v0.4.22\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n[2024-10-01T02:18:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:18:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling scopeguard v1.2.0\n   Compiling tock-registers v0.9.0\n   Compiling serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n   Compiling serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\nerror: invalid register `x10`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:18:9\n   |\n18 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x11`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:19:9\n   |\n19 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x12`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:20:9\n   |\n20 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x17`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:21:9\n   |\n21 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\n   Compiling spin v0.9.8\nerror: could not compile `serial-impl-sbi` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=sel4_ipc, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_ipc\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling memchr v2.7.4\n   Compiling regex-syntax v0.8.5\n   Compiling lazy_static v1.5.0\n   Compiling semver-parser v0.7.0\n   Compiling autocfg v1.4.0\n   Compiling semver v0.9.0\n   Compiling aho-corasick v1.1.3\n   Compiling rustc_version v0.2.3\n   Compiling lock_api v0.4.12\n   Compiling bare-metal v0.2.5\n    Checking serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n    Checking scopeguard v1.2.0\n    Checking bitflags v1.3.2\n    Checking tock-registers v0.9.0\n   Compiling regex-automata v0.4.8\n    Checking spin v0.9.8\n    Checking serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n    Checking serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\nerror: could not compile `serial-impl-sbi` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:18:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:18:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/lib.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/lib.rs (original lines from 14 to 14)\n+\n"]}}]},{"user":"kern-crates","repo":"safe-virtio-drivers","pkg":"virtio-drivers","count":55,"raw_reports":[{"file":"virtio-drivers/src/device/gpu/ty.rs","count":14,"kinds":{"Clippy(Warn)":["warning: constant `EVENT_DISPLAY` is never used\n  --> virtio-drivers/src/device/gpu/ty.rs:22:7\n   |\n22 | const EVENT_DISPLAY: u32 = 1 << 0;\n   |       ^^^^^^^^^^^^^\n\n","warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: constant `GPU_FLAG_FENCE` is never used\n  --> virtio-drivers/src/device/gpu/ty.rs:87:7\n   |\n87 | const GPU_FLAG_FENCE: u32 = 1 << 0;\n   |       ^^^^^^^^^^^^^^\n\n","warning: this `impl` can be derived\n  --> virtio-drivers/src/device/gpu/ty.rs:81:1\n   |\n81 | / impl Default for Command {\n82 | |     fn default() -> Self {\n83 | |         Command(0)\n84 | |     }\n85 | | }\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n   = note: `#[warn(clippy::derivable_impls)]` on by default\n   = help: remove the manual implementation...\nhelp: ...and instead derive it\n   |\n52 + #[derive(Default)]\n53 | pub struct Command(u32);\n   |\n\n"]}},{"file":"virtio-drivers/src/device/block/ty.rs","count":10,"kinds":{"Clippy(Warn)":["warning: variants `GetLifetime`, `Discard`, `WriteZeroes`, and `SecureErase` are never constructed\n  --> virtio-drivers/src/device/block/ty.rs:71:5\n   |\n64 | pub enum BlkReqType {\n   |          ---------- variants in this enum\n...\n71 |     GetLifetime = 10,\n   |     ^^^^^^^^^^^\n72 |     Discard = 11,\n   |     ^^^^^^^\n73 |     WriteZeroes = 13,\n   |     ^^^^^^^^^^^\n74 |     SecureErase = 14,\n   |     ^^^^^^^^^^^\n   |\n   = note: `BlkReqType` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\n\n","warning: variants `GetLifetime`, `Discard`, `WriteZeroes`, and `SecureErase` are never constructed\n  --> virtio-drivers/src/device/block/ty.rs:71:5\n   |\n64 | pub enum BlkReqType {\n   |          ---------- variants in this enum\n...\n71 |     GetLifetime = 10,\n   |     ^^^^^^^^^^^\n72 |     Discard = 11,\n   |     ^^^^^^^\n73 |     WriteZeroes = 13,\n   |     ^^^^^^^^^^^\n74 |     SecureErase = 14,\n   |     ^^^^^^^^^^^\n   |\n   = note: `BlkReqType` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\n\n","warning: variants `GetLifetime`, `Discard`, `WriteZeroes`, and `SecureErase` are never constructed\n  --> virtio-drivers/src/device/block/ty.rs:71:5\n   |\n64 | pub enum BlkReqType {\n   |          ---------- variants in this enum\n...\n71 |     GetLifetime = 10,\n   |     ^^^^^^^^^^^\n72 |     Discard = 11,\n   |     ^^^^^^^\n73 |     WriteZeroes = 13,\n   |     ^^^^^^^^^^^\n74 |     SecureErase = 14,\n   |     ^^^^^^^^^^^\n   |\n   = note: `BlkReqType` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\n\n","warning: variants `GetLifetime`, `Discard`, `WriteZeroes`, and `SecureErase` are never constructed\n  --> virtio-drivers/src/device/block/ty.rs:71:5\n   |\n64 | pub enum BlkReqType {\n   |          ---------- variants in this enum\n...\n71 |     GetLifetime = 10,\n   |     ^^^^^^^^^^^\n72 |     Discard = 11,\n   |     ^^^^^^^\n73 |     WriteZeroes = 13,\n   |     ^^^^^^^^^^^\n74 |     SecureErase = 14,\n   |     ^^^^^^^^^^^\n   |\n   = note: `BlkReqType` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\n\n","warning: fields `size_max`, `seg_max`, `geometry`, `blk_size`, `topology`, and `opt_io_size` are never read\n   --> virtio-drivers/src/device/block/ty.rs:131:16\n    |\n128 | pub struct BlkConfig {\n    |            --------- fields in this struct\n...\n131 |     pub(super) size_max: ReadWrite<{ CONFIG_OFFSET + 0x8 }, u32>,\n    |                ^^^^^^^^\n132 |     pub(super) seg_max: ReadWrite<{ CONFIG_OFFSET + 0xc }, u32>,\n    |                ^^^^^^^\n...\n136 |     pub(super) geometry: ReadWrite<{ CONFIG_OFFSET + 0x10 }, u32>,\n    |                ^^^^^^^^\n137 |     pub(super) blk_size: ReadWrite<{ CONFIG_OFFSET + 0x14 }, u32>,\n    |                ^^^^^^^^\n...\n141 |     pub(super) topology: ReadWrite<{ CONFIG_OFFSET + 0x18 }, u32>,\n    |                ^^^^^^^^\n142 |     pub(super) opt_io_size: ReadWrite<{ CONFIG_OFFSET + 0x1c }, u32>,\n    |                ^^^^^^^^^^^\n    |\n    = note: `BlkConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n","warning: fields `size_max`, `seg_max`, `geometry`, `blk_size`, `topology`, and `opt_io_size` are never read\n   --> virtio-drivers/src/device/block/ty.rs:131:16\n    |\n128 | pub struct BlkConfig {\n    |            --------- fields in this struct\n...\n131 |     pub(super) size_max: ReadWrite<{ CONFIG_OFFSET + 0x8 }, u32>,\n    |                ^^^^^^^^\n132 |     pub(super) seg_max: ReadWrite<{ CONFIG_OFFSET + 0xc }, u32>,\n    |                ^^^^^^^\n...\n136 |     pub(super) geometry: ReadWrite<{ CONFIG_OFFSET + 0x10 }, u32>,\n    |                ^^^^^^^^\n137 |     pub(super) blk_size: ReadWrite<{ CONFIG_OFFSET + 0x14 }, u32>,\n    |                ^^^^^^^^\n...\n141 |     pub(super) topology: ReadWrite<{ CONFIG_OFFSET + 0x18 }, u32>,\n    |                ^^^^^^^^\n142 |     pub(super) opt_io_size: ReadWrite<{ CONFIG_OFFSET + 0x1c }, u32>,\n    |                ^^^^^^^^^^^\n    |\n    = note: `BlkConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n","warning: fields `size_max`, `seg_max`, `geometry`, `blk_size`, `topology`, and `opt_io_size` are never read\n   --> virtio-drivers/src/device/block/ty.rs:131:16\n    |\n128 | pub struct BlkConfig {\n    |            --------- fields in this struct\n...\n131 |     pub(super) size_max: ReadWrite<{ CONFIG_OFFSET + 0x8 }, u32>,\n    |                ^^^^^^^^\n132 |     pub(super) seg_max: ReadWrite<{ CONFIG_OFFSET + 0xc }, u32>,\n    |                ^^^^^^^\n...\n136 |     pub(super) geometry: ReadWrite<{ CONFIG_OFFSET + 0x10 }, u32>,\n    |                ^^^^^^^^\n137 |     pub(super) blk_size: ReadWrite<{ CONFIG_OFFSET + 0x14 }, u32>,\n    |                ^^^^^^^^\n...\n141 |     pub(super) topology: ReadWrite<{ CONFIG_OFFSET + 0x18 }, u32>,\n    |                ^^^^^^^^\n142 |     pub(super) opt_io_size: ReadWrite<{ CONFIG_OFFSET + 0x1c }, u32>,\n    |                ^^^^^^^^^^^\n    |\n    = note: `BlkConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n","warning: fields `size_max`, `seg_max`, `geometry`, `blk_size`, `topology`, and `opt_io_size` are never read\n   --> virtio-drivers/src/device/block/ty.rs:131:16\n    |\n128 | pub struct BlkConfig {\n    |            --------- fields in this struct\n...\n131 |     pub(super) size_max: ReadWrite<{ CONFIG_OFFSET + 0x8 }, u32>,\n    |                ^^^^^^^^\n132 |     pub(super) seg_max: ReadWrite<{ CONFIG_OFFSET + 0xc }, u32>,\n    |                ^^^^^^^\n...\n136 |     pub(super) geometry: ReadWrite<{ CONFIG_OFFSET + 0x10 }, u32>,\n    |                ^^^^^^^^\n137 |     pub(super) blk_size: ReadWrite<{ CONFIG_OFFSET + 0x14 }, u32>,\n    |                ^^^^^^^^\n...\n141 |     pub(super) topology: ReadWrite<{ CONFIG_OFFSET + 0x18 }, u32>,\n    |                ^^^^^^^^\n142 |     pub(super) opt_io_size: ReadWrite<{ CONFIG_OFFSET + 0x1c }, u32>,\n    |                ^^^^^^^^^^^\n    |\n    = note: `BlkConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n","warning: fields `size_max`, `seg_max`, `geometry`, `blk_size`, `topology`, and `opt_io_size` are never read\n   --> virtio-drivers/src/device/block/ty.rs:131:16\n    |\n128 | pub struct BlkConfig {\n    |            --------- fields in this struct\n...\n131 |     pub(super) size_max: ReadWrite<{ CONFIG_OFFSET + 0x8 }, u32>,\n    |                ^^^^^^^^\n132 |     pub(super) seg_max: ReadWrite<{ CONFIG_OFFSET + 0xc }, u32>,\n    |                ^^^^^^^\n...\n136 |     pub(super) geometry: ReadWrite<{ CONFIG_OFFSET + 0x10 }, u32>,\n    |                ^^^^^^^^\n137 |     pub(super) blk_size: ReadWrite<{ CONFIG_OFFSET + 0x14 }, u32>,\n    |                ^^^^^^^^\n...\n141 |     pub(super) topology: ReadWrite<{ CONFIG_OFFSET + 0x18 }, u32>,\n    |                ^^^^^^^^\n142 |     pub(super) opt_io_size: ReadWrite<{ CONFIG_OFFSET + 0x1c }, u32>,\n    |                ^^^^^^^^^^^\n    |\n    = note: `BlkConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n","warning: fields `size_max`, `seg_max`, `geometry`, `blk_size`, `topology`, and `opt_io_size` are never read\n   --> virtio-drivers/src/device/block/ty.rs:131:16\n    |\n128 | pub struct BlkConfig {\n    |            --------- fields in this struct\n...\n131 |     pub(super) size_max: ReadWrite<{ CONFIG_OFFSET + 0x8 }, u32>,\n    |                ^^^^^^^^\n132 |     pub(super) seg_max: ReadWrite<{ CONFIG_OFFSET + 0xc }, u32>,\n    |                ^^^^^^^\n...\n136 |     pub(super) geometry: ReadWrite<{ CONFIG_OFFSET + 0x10 }, u32>,\n    |                ^^^^^^^^\n137 |     pub(super) blk_size: ReadWrite<{ CONFIG_OFFSET + 0x14 }, u32>,\n    |                ^^^^^^^^\n...\n141 |     pub(super) topology: ReadWrite<{ CONFIG_OFFSET + 0x18 }, u32>,\n    |                ^^^^^^^^\n142 |     pub(super) opt_io_size: ReadWrite<{ CONFIG_OFFSET + 0x1c }, u32>,\n    |                ^^^^^^^^^^^\n    |\n    = note: `BlkConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"]}},{"file":"virtio-drivers/src/transport/mmio.rs","count":8,"kinds":{"Clippy(Warn)":["warning: field `config_generation` is never read\n   --> virtio-drivers/src/transport/mmio.rs:155:5\n    |\n17  | pub struct VirtIOHeader {\n    |            ------------ field in this struct\n...\n155 |     config_generation: ReadOnly<0xfc, u32>,\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: `VirtIOHeader` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n","warning: empty line after doc comment\n  --> virtio-drivers/src/transport/mmio.rs:38:5\n   |\n38 | /     /// Reserved\n39 | |     // __r1: [ReadOnly<0>; 2],\n40 | |\n   | |_\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n   = help: if the empty line is unintentional remove it\nhelp: if the doc comment should not document `driver_features` comment it out\n   |\n38 |     // /// Reserved\n   |     ++\n\n","warning: empty line after doc comment\n  --> virtio-drivers/src/transport/mmio.rs:55:5\n   |\n55 | /     /// Reserved\n56 | |     // __r2: ReadOnly<0>,\n57 | |\n   | |_\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n   = help: if the empty line is unintentional remove it\nhelp: if the doc comment should not document `queue_sel` comment it out\n   |\n55 |     // /// Reserved\n   |     ++\n\n","warning: empty line after doc comment\n   --> virtio-drivers/src/transport/mmio.rs:104:5\n    |\n104 | /     /// Reserved\n105 | |     // __r3: [ReadOnly<0>; 2],\n106 | |\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n    = help: if the empty line is unintentional remove it\nhelp: if the doc comment should not document `queue_notify` comment it out\n    |\n104 |     // /// Reserved\n    |     ++\n\n","warning: empty line after doc comment\n   --> virtio-drivers/src/transport/mmio.rs:110:5\n    |\n110 | /     /// Reserved\n111 | |     // __r4: [ReadOnly<0>; 3],\n112 | |\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n    = help: if the empty line is unintentional remove it\nhelp: if the doc comment should not document `interrupt_status` comment it out\n    |\n110 |     // /// Reserved\n    |     ++\n\n","warning: empty line after doc comment\n   --> virtio-drivers/src/transport/mmio.rs:119:5\n    |\n119 | /     /// Reserved\n120 | |     // __r5: [ReadOnly<0>; 2],\n121 | |\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n    = help: if the empty line is unintentional remove it\nhelp: if the doc comment should not document `status` comment it out\n    |\n119 |     // /// Reserved\n    |     ++\n\n","warning: empty line after doc comment\n   --> virtio-drivers/src/transport/mmio.rs:131:5\n    |\n131 | /     /// Reserved\n132 | |     // __r6: [ReadOnly<0>; 3],\n133 | |\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n    = help: if the empty line is unintentional remove it\nhelp: if the doc comment should not document `queue_desc` comment it out\n    |\n131 |     // /// Reserved\n    |     ++\n\n","warning: empty line after doc comment\n   --> virtio-drivers/src/transport/mmio.rs:151:5\n    |\n151 | /     /// Reserved\n152 | |     // __r9: [ReadOnly<0>; 21],\n153 | |\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n    = help: if the empty line is unintentional remove it\nhelp: if the doc comment should not document `config_generation` comment it out\n    |\n151 |     // /// Reserved\n    |     ++\n\n"]}},{"file":"virtio-drivers/src/device/net/ty.rs","count":6,"kinds":{"Clippy(Warn)":["warning: constant `MAX_BUFFER_LEN` is never used\n --> virtio-drivers/src/device/net/ty.rs:9:11\n  |\n9 | pub const MAX_BUFFER_LEN: usize = 65535;\n  |           ^^^^^^^^^^^^^^\n\n","warning: associated constants `NONE`, `TCPV4`, `UDP`, `TCPV6`, and `ECN` are never used\n   --> virtio-drivers/src/device/net/ty.rs:172:11\n    |\n171 | impl GsoType {\n    | ------------ associated constants in this implementation\n172 |     const NONE: GsoType = GsoType(0);\n    |           ^^^^\n173 |     const TCPV4: GsoType = GsoType(1);\n    |           ^^^^^\n174 |     const UDP: GsoType = GsoType(3);\n    |           ^^^\n175 |     const TCPV6: GsoType = GsoType(4);\n    |           ^^^^^\n176 |     const ECN: GsoType = GsoType(0x80);\n    |           ^^^\n\n","warning: associated constants `NONE`, `TCPV4`, `UDP`, `TCPV6`, and `ECN` are never used\n   --> virtio-drivers/src/device/net/ty.rs:172:11\n    |\n171 | impl GsoType {\n    | ------------ associated constants in this implementation\n172 |     const NONE: GsoType = GsoType(0);\n    |           ^^^^\n173 |     const TCPV4: GsoType = GsoType(1);\n    |           ^^^^^\n174 |     const UDP: GsoType = GsoType(3);\n    |           ^^^\n175 |     const TCPV6: GsoType = GsoType(4);\n    |           ^^^^^\n176 |     const ECN: GsoType = GsoType(0x80);\n    |           ^^^\n\n","warning: associated constants `NONE`, `TCPV4`, `UDP`, `TCPV6`, and `ECN` are never used\n   --> virtio-drivers/src/device/net/ty.rs:172:11\n    |\n171 | impl GsoType {\n    | ------------ associated constants in this implementation\n172 |     const NONE: GsoType = GsoType(0);\n    |           ^^^^\n173 |     const TCPV4: GsoType = GsoType(1);\n    |           ^^^^^\n174 |     const UDP: GsoType = GsoType(3);\n    |           ^^^\n175 |     const TCPV6: GsoType = GsoType(4);\n    |           ^^^^^\n176 |     const ECN: GsoType = GsoType(0x80);\n    |           ^^^\n\n","warning: associated constants `NONE`, `TCPV4`, `UDP`, `TCPV6`, and `ECN` are never used\n   --> virtio-drivers/src/device/net/ty.rs:172:11\n    |\n171 | impl GsoType {\n    | ------------ associated constants in this implementation\n172 |     const NONE: GsoType = GsoType(0);\n    |           ^^^^\n173 |     const TCPV4: GsoType = GsoType(1);\n    |           ^^^^^\n174 |     const UDP: GsoType = GsoType(3);\n    |           ^^^\n175 |     const TCPV6: GsoType = GsoType(4);\n    |           ^^^^^\n176 |     const ECN: GsoType = GsoType(0x80);\n    |           ^^^\n\n","warning: associated constants `NONE`, `TCPV4`, `UDP`, `TCPV6`, and `ECN` are never used\n   --> virtio-drivers/src/device/net/ty.rs:172:11\n    |\n171 | impl GsoType {\n    | ------------ associated constants in this implementation\n172 |     const NONE: GsoType = GsoType(0);\n    |           ^^^^\n173 |     const TCPV4: GsoType = GsoType(1);\n    |           ^^^^^\n174 |     const UDP: GsoType = GsoType(3);\n    |           ^^^\n175 |     const TCPV6: GsoType = GsoType(4);\n    |           ^^^^^\n176 |     const ECN: GsoType = GsoType(0x80);\n    |           ^^^\n\n"]}},{"file":"virtio-drivers/src/queue.rs","count":4,"kinds":{"Clippy(Warn)":["warning: field `queue_page` is never read\n  --> virtio-drivers/src/queue.rs:14:5\n   |\n13 | pub struct VirtIoQueue<H: Hal<SIZE>, const SIZE: usize> {\n   |            ----------- field in this struct\n14 |     queue_page: Box<dyn QueuePage<SIZE>>,\n   |     ^^^^^^^^^^\n\n","warning: associated constant `DESCRIPTOR_TABLE_OFFSET` is never used\n  --> virtio-drivers/src/queue.rs:27:11\n   |\n25 | impl<H: Hal<SIZE>, const SIZE: usize> VirtIoQueue<H, SIZE> {\n   | ---------------------------------------------------------- associated constant in this implementation\n26 |     const AVAIL_RING_OFFSET: usize = size_of::<Descriptor>() * SIZE;\n27 |     const DESCRIPTOR_TABLE_OFFSET: usize = 0;\n   |           ^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: associated constant `INDIRECT` is never used\n   --> virtio-drivers/src/queue.rs:297:11\n    |\n293 | impl DescFlag {\n    | ------------- associated constant in this implementation\n...\n297 |     const INDIRECT: u16 = 4;\n    |           ^^^^^^^^\n\n","warning: this `impl` can be derived\n   --> virtio-drivers/src/queue.rs:272:1\n    |\n272 | / impl Default for Descriptor {\n273 | |     fn default() -> Self {\n274 | |         Self {\n275 | |             addr: Default::default(),\n...   |\n280 | |     }\n281 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n266 + #[derive(Default)]\n267 | pub struct Descriptor {\n    |\n\n"]}},{"file":"virtio-drivers/src/device/net/raw.rs","count":3,"kinds":{"Clippy(Warn)":["warning: empty lines after doc comment\n  --> virtio-drivers/src/device/net/raw.rs:60:5\n   |\n60 | /     /// Disable interrupts.\n61 | |     // pub fn disable_interrupts(&mut self) -> VirtIoResult<()> {\n62 | |     //     self.send_queue.set_dev_notify(false)?;\n63 | |     //     self.recv_queue.set_dev_notify(false)?;\n...  |\n70 | |     // }\n71 | |\n   | |_\n72 |       /// Get MAC address.\n73 |       pub fn mac_address(&self) -> VirtIoResult<[u8; 6]> {\n   |       -------------------------------------------------- the comment documents this method\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n   = note: `#[warn(clippy::empty_line_after_doc_comments)]` on by default\n   = help: if the empty lines are unintentional remove them\nhelp: if the doc comment should not document `mac_address` comment it out\n   |\n60 ~     // /// Disable interrupts.\n61 |     // pub fn disable_interrupts(&mut self) -> VirtIoResult<()> {\n...\n65 |\n66 ~     // /// Enable interrupts.\n   |\n\n","warning: redundant pattern matching, consider using `is_none()`\n  --> virtio-drivers/src/device/net/raw.rs:84:16\n   |\n84 |         if let None = token {\n   |         -------^^^^-------- help: try: `if token.is_none()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching\n   = note: `#[warn(clippy::redundant_pattern_matching)]` on by default\n\n","warning: unneeded late initialization\n   --> virtio-drivers/src/device/net/raw.rs:259:9\n    |\n259 |         let v;\n    |         ^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init\n    = note: `#[warn(clippy::needless_late_init)]` on by default\nhelp: move the declaration `v` here and remove the assignments from the branches\n    |\n259 ~         \n260 ~         let v = if !tx_buf.is_empty() {\n261 |             // Special case sending an empty packet, to avoid adding an empty buffer to the\n...\n267 |             );\n268 ~             vec![header_desc, desc]\n269 |         } else {\n270 ~             vec![header_desc]\n271 ~         };\n    |\n\n"]}},{"file":"virtio-drivers/src/device/gpu/mod.rs","count":2,"kinds":{"Clippy(Warn)":["warning: field `config` is never read\n  --> virtio-drivers/src/device/gpu/mod.rs:35:5\n   |\n24 | pub struct VirtIOGpu<H: Hal<QUEUE_SIZE>, T: Transport> {\n   |            --------- field in this struct\n...\n35 |     config: GpuConfig,\n   |     ^^^^^^\n\n","warning: this function has too many arguments (8/7)\n   --> virtio-drivers/src/device/gpu/mod.rs:257:5\n    |\n257 | /     fn update_cursor(\n258 | |         &mut self,\n259 | |         resource_id: u32,\n260 | |         scanout_id: u32,\n...   |\n265 | |         is_move: bool,\n266 | |     ) -> VirtIoResult<()> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"]}},{"file":"virtio-drivers/src/device/input/ty.rs","count":2,"kinds":{"Clippy(Warn)":["warning: struct `AbsInfo` is never constructed\n  --> virtio-drivers/src/device/input/ty.rs:34:8\n   |\n34 | struct AbsInfo {\n   |        ^^^^^^^\n\n","warning: struct `DevIDs` is never constructed\n  --> virtio-drivers/src/device/input/ty.rs:44:8\n   |\n44 | struct DevIDs {\n   |        ^^^^^^\n\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:17:16Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:17:16Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"virtio-drivers/src/device/console/ty.rs","count":1,"kinds":{"Clippy(Warn)":["warning: field `emerg_wr` is never read\n --> virtio-drivers/src/device/console/ty.rs:9:16\n  |\n5 | pub struct ConsoleConfig {\n  |            ------------- field in this struct\n...\n9 |     pub(super) emerg_wr: WriteOnly<{ CONFIG_OFFSET + 8 }, u32>,\n  |                ^^^^^^^^\n  |\n  = note: `ConsoleConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"]}},{"file":"virtio-drivers/src/device/input/mod.rs","count":1,"kinds":{"Clippy(Warn)":["warning: field `status_queue` is never read\n  --> virtio-drivers/src/device/input/mod.rs:29:5\n   |\n26 | pub struct VirtIOInput<H: Hal<QUEUE_SIZE>, T: Transport> {\n   |            ----------- field in this struct\n...\n29 |     status_queue: VirtIoQueue<H, QUEUE_SIZE>,\n   |     ^^^^^^^^^^^^\n\n"]}},{"file":"virtio-drivers/src/device/net/mod.rs","count":1,"kinds":{"Clippy(Warn)":["warning: empty lines after doc comment\n  --> virtio-drivers/src/device/net/mod.rs:55:5\n   |\n55 | /     /// Disable interrupts.\n56 | |     // pub fn disable_interrupts(&mut self) -> VirtIoResult<()> {\n57 | |     //     self.inner.disable_interrupts()\n58 | |     // }\n...  |\n63 | |     // }\n64 | |\n   | |_\n65 |       /// Get MAC address.\n66 |       pub fn mac_address(&self) -> VirtIoResult<[u8; 6]> {\n   |       -------------------------------------------------- the comment documents this method\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n   = help: if the empty lines are unintentional remove them\nhelp: if the doc comment should not document `mac_address` comment it out\n   |\n55 ~     // /// Disable interrupts.\n56 |     // pub fn disable_interrupts(&mut self) -> VirtIoResult<()> {\n...\n59 |\n60 ~     // /// Enable interrupts.\n   |\n\n"]}},{"file":"virtio-drivers/src/lib.rs","count":1,"kinds":{"Clippy(Warn)":["warning: manually reimplementing `div_ceil`\n  --> virtio-drivers/src/lib.rs:20:5\n   |\n20 |     (size + PAGE_SIZE - 1) / PAGE_SIZE\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.div_ceil()`: `size.div_ceil(PAGE_SIZE)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_div_ceil\n   = note: `#[warn(clippy::manual_div_ceil)]` on by default\n\n"]}},{"file":"virtio-drivers/src/volatile.rs","count":1,"kinds":{"Clippy(Warn)":["warning: the loop variable `i` is used to index `res`\n  --> virtio-drivers/src/volatile.rs:36:18\n   |\n36 |         for i in 0..SIZE {\n   |                  ^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n   = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n   |\n36 |         for (i, <item>) in res.iter_mut().enumerate().take(SIZE) {\n   |             ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"]}}]},{"user":"kern-crates","repo":"rCoreloongArch","pkg":"kernel","count":47,"raw_reports":[{"file":"easy-fs/src/layout.rs","count":9,"kinds":{"Mirai":["warning: possible attempt to subtract with overflow\n   --> easy-fs/src/layout.rs:138:9\n    |\n138 |         Self::total_blocks(new_size) - Self::total_blocks(self.size)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible index out of bounds\n   --> easy-fs/src/layout.rs:221:25\n    |\n221 |                         indirect2[a0] = new_blocks.next().unwrap();\n    |                         ^^^^^^^^^^^^^\n\n","warning: called `Option::unwrap()` on a `None` value\n   --> easy-fs/src/layout.rs:224:21\n    |\n224 | /                     get_block_cache(indirect2[a0] as usize, Arc::clone(block_device))\n225 | |                         .lock()\n226 | |                         .modify(0, |indirect1: &mut IndirectBlock| {\n227 | |                             indirect1[b0] = new_blocks.next().unwrap();\n228 | |                         });\n    | |__________________________^\n    |\nnote: related location\n   --> easy-fs/src/block_cache.rs:61:9\n    |\n61  |         f(self.get_mut(offset))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\nnote: related location\n   --> easy-fs/src/layout.rs:227:45\n    |\n227 | ...                   indirect1[b0] = new_blocks.next().unwrap();\n    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible index out of bounds\n   --> easy-fs/src/layout.rs:224:37\n    |\n224 |                     get_block_cache(indirect2[a0] as usize, Arc::clone(block_device))\n    |                                     ^^^^^^^^^^^^^\n\n","warning: possible attempt to add with overflow\n   --> easy-fs/src/layout.rs:230:21\n    |\n230 |                     b0 += 1;\n    |                     ^^^^^^^\n\n","warning: possible attempt to subtract with overflow\n   --> easy-fs/src/layout.rs:331:35\n    |\n331 |             let block_read_size = end_current_block - start;\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to add with overflow\n   --> easy-fs/src/layout.rs:332:43\n    |\n332 |             let dst = &mut buf[read_size..read_size + block_read_size];\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to subtract with overflow\n   --> easy-fs/src/layout.rs:370:36\n    |\n370 |             let block_write_size = end_current_block - start;\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to add with overflow\n   --> easy-fs/src/layout.rs:381:13\n    |\n381 |             write_size += block_write_size;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"src/trap/mod.rs","count":7,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 2 to 2)\n-use crate::config::{TICKS_PER_SEC};\n+use crate::config::TICKS_PER_SEC;\n","file: /home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 8 to 8)\n+use crate::println;\n","file: /home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 11 to 11)\n-use crate::{println};\n","file: /home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 16 to 16)\n-use loongarch64::register::*;\n","file: /home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 19 to 19)\n+use loongarch64::register::*;\n","file: /home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 102 to 102)\n-    ecfg::set_lie(LineBasedInterrupt::TIMER|LineBasedInterrupt::HWI0);\n+    ecfg::set_lie(LineBasedInterrupt::TIMER | LineBasedInterrupt::HWI0);\n","file: /home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel/src/trap/mod.rs (original lines from 162 to 162)\n-        Trap::Interrupt( Interrupt::Timer) => {\n+        Trap::Interrupt(Interrupt::Timer) => {\n"]}},{"file":"/home/runner/.cargo/git/checkouts/loongarch64-1c364f4d86ee311b/92d9355/src/iocsr.rs","count":4,"kinds":{"Mirai":["error: type `u8` cannot be used with this register class\n  --> /home/runner/.cargo/git/checkouts/loongarch64-1c364f4d86ee311b/92d9355/src/iocsr.rs:24:41\n   |\n24 |         asm!(\"iocsrwr.b {},{}\", in(reg) value, in(reg) reg);\n   |                                         ^^^^^\n   |\n   = note: register class `reg` supports these types: i16, i32, i64, f32, f64\n   = help: consider using the `reg_byte` register class instead\n\n","error: type `u8` cannot be used with this register class\n  --> /home/runner/.cargo/git/checkouts/loongarch64-1c364f4d86ee311b/92d9355/src/iocsr.rs:32:41\n   |\n32 |         asm!(\"iocsrrd.b {},{}\",out(reg) val, in(reg) reg);\n   |                                         ^^^\n   |\n   = note: register class `reg` supports these types: i16, i32, i64, f32, f64\n   = help: consider using the `reg_byte` register class instead\n\n"],"Clippy(Error)":["error: type `u8` cannot be used with this register class\n  --> /home/runner/.cargo/git/checkouts/loongarch64-1c364f4d86ee311b/92d9355/src/iocsr.rs:24:41\n   |\n24 |         asm!(\"iocsrwr.b {},{}\", in(reg) value, in(reg) reg);\n   |                                         ^^^^^\n   |\n   = note: register class `reg` supports these types: i16, i32, i64, f32, f64\n   = help: consider using the `reg_byte` register class instead\n\n","error: type `u8` cannot be used with this register class\n  --> /home/runner/.cargo/git/checkouts/loongarch64-1c364f4d86ee311b/92d9355/src/iocsr.rs:32:41\n   |\n32 |         asm!(\"iocsrrd.b {},{}\",out(reg) val, in(reg) reg);\n   |                                         ^^^\n   |\n   = note: register class `reg` supports these types: i16, i32, i64, f32, f64\n   = help: consider using the `reg_byte` register class instead\n\n"]}},{"file":"isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs","count":4,"kinds":{"Mirai":["warning: the type `[&mut [net::ethernet::intel::ixgbe::IXGBESendDesc]; 4]` does not permit being left uninitialized\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:500:22\n    |\n500 |             unsafe { MaybeUninit::uninit().assume_init() };\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                      |\n    |                      this code causes undefined behavior when executed\n    |                      help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n    = note: references must be non-null\n    = note: `#[warn(invalid_value)]` on by default\n\n","warning: the type `[&mut [net::ethernet::intel::ixgbe::IXGBESendDesc]; 4]` does not permit being left uninitialized\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:500:22\n    |\n500 |             unsafe { MaybeUninit::uninit().assume_init() };\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                      |\n    |                      this code causes undefined behavior when executed\n    |                      help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n    = note: references must be non-null\n    = note: `#[warn(invalid_value)]` on by default\n\n"],"Clippy(Warn)":["warning: the type `[&mut [net::ethernet::intel::ixgbe::IXGBESendDesc]; 4]` does not permit being left uninitialized\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:500:22\n    |\n500 |             unsafe { MaybeUninit::uninit().assume_init() };\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                      |\n    |                      this code causes undefined behavior when executed\n    |                      help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n    = note: references must be non-null\n    = note: `#[warn(invalid_value)]` on by default\n\n","warning: the type `[&mut [net::ethernet::intel::ixgbe::IXGBESendDesc]; 4]` does not permit being left uninitialized\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:500:22\n    |\n500 |             unsafe { MaybeUninit::uninit().assume_init() };\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                      |\n    |                      this code causes undefined behavior when executed\n    |                      help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n    = note: references must be non-null\n    = note: `#[warn(invalid_value)]` on by default\n\n"]}},{"file":"src/loongarch/driver/mod.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel/src/loongarch/driver/mod.rs (original lines from 5 to 5)\n-mod vbe;\n","file: /home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel/src/loongarch/driver/mod.rs (original lines from 7 to 7)\n+mod vbe;\n","file: /home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel/src/loongarch/driver/mod.rs (original lines from 19 to 19)\n-\n"]}},{"file":"src/main.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel/src/main.rs (original lines from 34 to 34)\n+use crate::loongarch::{\n+    ahci_init, extioi_init, i8042_init, ls7a_intc_init, rtc_init, rtc_time_read, vbe_test,\n+};\n","file: /home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel/src/main.rs (original lines from 35 to 35)\n-use crate::loongarch::{ahci_init, extioi_init, i8042_init, ls7a_intc_init, rtc_init, rtc_time_read, vbe_test};\n","file: /home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel/src/main.rs (original lines from 48 to 52)\n-pub fn main(\n-    argc: usize,\n-    argv: *const *const u8,\n-    boot_params_interface: *const (),\n-) {\n+pub fn main(argc: usize, argv: *const *const u8, boot_params_interface: *const ()) {\n"]}},{"file":"src/trap/context.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel/src/trap/context.rs (original lines from 3 to 3)\n-use loongarch64::register::{CpuMode, prmd};\n+use loongarch64::register::{prmd, CpuMode};\n","file: /home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel/src/trap/context.rs (original lines from 24 to 24)\n-\n","file: /home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel/src/trap/context.rs (original lines from 34 to 34)\n-            prmd:prmd::read().raw(),\n+            prmd: prmd::read().raw(),\n"]}},{"file":"src/loongarch/rtc.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel/src/loongarch/rtc.rs (original lines from 1 to 1)\n+use crate::loongarch::driver::rtc::RtcTime;\n","file: /home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel/src/loongarch/rtc.rs (original lines from 4 to 4)\n-use crate::loongarch::driver::rtc::RtcTime;\n"]}},{"file":"src/syscall/process.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel/src/syscall/process.rs (original lines from 1 to 1)\n+use crate::fs::{open_file, OpenFlags};\n","file: /home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel/src/syscall/process.rs (original lines from 8 to 8)\n-use crate::fs::{open_file, OpenFlags};\n"]}},{"file":"src/timer.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel/src/timer.rs (original lines from 9 to 9)\n-\n","file: /home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel/src/timer.rs (original lines from 39 to 39)\n-static TIMERS:Lazy<Mutex<BinaryHeap<TimerCondVar>>> = Lazy::new(||Mutex::new(BinaryHeap::<TimerCondVar>::new()));\n+static TIMERS: Lazy<Mutex<BinaryHeap<TimerCondVar>>> =\n+    Lazy::new(|| Mutex::new(BinaryHeap::<TimerCondVar>::new()));\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=kernel, checker=Clippy\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling lock_api v0.4.12\n   Compiling num-traits v0.2.19\n   Compiling az v1.2.1\n   Compiling memchr v2.3.4\n   Compiling nom v6.2.2\n    Checking micromath v1.1.1\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking zero v0.1.3\n    Checking xmas-elf v0.8.0\n    Checking rlibc v1.0.0\n    Checking float-cmp v0.8.0\n    Checking virtio-input-decoder v0.1.4\n    Checking rustc-demangle v0.1.24\n    Checking spin v0.7.1\n    Checking embedded-graphics-core v0.3.3\n    Checking oorandom v11.1.4\n    Checking isomorphic_drivers v0.1.0 (/home/runner/check/repos-default/kern-crates/rCoreloongArch/isomorphic_drivers)\n    Checking stack_trace v0.1.0 (/home/runner/check/repos-default/kern-crates/rCoreloongArch/stack_trace)\n    Checking buddy_system_allocator v0.6.0\n   Compiling kernel v0.1.0 (/home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel)\n    Checking easy-fs v0.1.0 (/home/runner/check/repos-default/kern-crates/rCoreloongArch/easy-fs)\n    Checking loongArch64 v0.2.4 (https://github.com/Godones/loongArch64#92d93554)\n    Checking pci v0.0.1 (/home/runner/check/repos-default/kern-crates/rCoreloongArch/pci)\n    Checking embedded-graphics v0.7.1\nerror: could not compile `loongArch64` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=kernel, checker=Lockbud\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling lock_api v0.4.12\n   Compiling num-traits v0.2.19\n   Compiling az v1.2.1\n   Compiling memchr v2.3.4\n   Compiling nom v6.2.2\n   Compiling spin v0.9.8\n   Compiling micromath v1.1.1\n[2024-09-28T16:03:20Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T16:03:20Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling lazy_static v1.5.0\n   Compiling zero v0.1.3\n   Compiling xmas-elf v0.8.0\n   Compiling float-cmp v0.8.0\n   Compiling spin v0.7.1\n   Compiling oorandom v11.1.4\n   Compiling embedded-graphics-core v0.3.3\n   Compiling virtio-input-decoder v0.1.4\n   Compiling rlibc v1.0.0\n   Compiling rustc-demangle v0.1.24\n   Compiling isomorphic_drivers v0.1.0 (/home/runner/check/repos-default/kern-crates/rCoreloongArch/isomorphic_drivers)\nwarning: the type `[&mut [net::ethernet::intel::ixgbe::IXGBESendDesc]; 4]` does not permit being left uninitialized\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:500:22\n    |\n500 |             unsafe { MaybeUninit::uninit().assume_init() };\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                      |\n    |                      this code causes undefined behavior when executed\n    |                      help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n    = note: references must be non-null\n    = note: `#[warn(invalid_value)]` on by default\n\n   Compiling embedded-graphics v0.7.1\n   Compiling stack_trace v0.1.0 (/home/runner/check/repos-default/kern-crates/rCoreloongArch/stack_trace)\nwarning: `isomorphic_drivers` (lib) generated 1 warning\n   Compiling kernel v0.1.0 (/home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel)\n   Compiling buddy_system_allocator v0.6.0\nerror: invalid instruction mnemonic 'move'\n  --> stack_trace/src/trace.rs:38:15\n   |\n38 |         asm!(\"move {},$sp\",out(reg)t);\n   |               ^\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:2:2\n   |\n2  |     move rax,sp\n   |     ^^^^\n\nerror: could not compile `stack_trace` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=kernel, checker=Mirai\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling num-traits v0.2.19\n   Compiling az v1.2.1\n   Compiling memchr v2.3.4\n   Compiling version_check v0.9.5\n   Compiling nom v6.2.2\n    Checking micromath v1.1.1\n    Checking zero v0.1.3\n    Checking xmas-elf v0.8.0\n    Checking rlibc v1.0.0\n    Checking rustc-demangle v0.1.24\n    Checking embedded-graphics-core v0.3.3\n    Checking spin v0.7.1\n    Checking virtio-input-decoder v0.1.4\n    Checking oorandom v11.1.4\n   Compiling kernel v0.1.0 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/kernel)\n    Checking buddy_system_allocator v0.6.0\n    Checking float-cmp v0.8.0\n    Checking stack_trace v0.1.0 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/stack_trace)\n    Checking embedded-graphics v0.7.1\n    Checking loongArch64 v0.2.4 (https://github.com/Godones/loongArch64#92d93554)\n    Checking pci v0.0.1 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/pci)\nerror: could not compile `loongArch64` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-09-28T16:03:20Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T16:03:20Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"easy-fs/src/efs.rs","count":1,"kinds":{"Mirai":["warning: possible attempt to add with overflow\n   --> easy-fs/src/efs.rs:135:9\n    |\n135 |         self.data_bitmap.alloc(&self.block_device).unwrap() as u32 + self.data_area_start_block\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"src/config.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel/src/config.rs (original lines from 12 to 12)\n-// pub const KERNEL_STACK_SIZE: usize = PAGE_SIZE; //内核栈大小\n+                                              // pub const KERNEL_STACK_SIZE: usize = PAGE_SIZE; //内核栈大小\n"]}},{"file":"src/loongarch/driver/rtc.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel/src/loongarch/driver/rtc.rs (original lines from 32 to 32)\n+\n"]}},{"file":"src/print.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rCoreloongArch/kernel/src/print.rs (original lines from 31 to 31)\n-pub static CONSOLE: Lazy< Mutex<Console>> = Lazy::new(||Mutex::new(Console::new(UART)));\n+pub static CONSOLE: Lazy<Mutex<Console>> = Lazy::new(|| Mutex::new(Console::new(UART)));\n"]}}]},{"user":"kern-crates","repo":"visionfive2-sd","pkg":"visionfive2-sd","count":47,"raw_reports":[{"file":"src/register.rs","count":43,"kinds":{"Mirai":["warning: value out of bounds\n  --> src/register.rs:72:1\n   |\n72 | #[bitfield(u32,order = Msb)]\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to subtract with overflow\n  --> src/register.rs:72:1\n   |\n72 | #[bitfield(u32,order = Msb)]\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: this warning originates in the attribute macro `bitfield` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to shift right with overflow\n  --> src/register.rs:72:1\n   |\n72 | #[bitfield(u32,order = Msb)]\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: this warning originates in the attribute macro `bitfield` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: value out of bounds\n   --> src/register.rs:140:1\n    |\n140 | #[bitfield(u32,order = Msb)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to subtract with overflow\n   --> src/register.rs:140:1\n    |\n140 | #[bitfield(u32,order = Msb)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the attribute macro `bitfield` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to shift right with overflow\n   --> src/register.rs:140:1\n    |\n140 | #[bitfield(u32,order = Msb)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the attribute macro `bitfield` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: value out of bounds\n   --> src/register.rs:158:1\n    |\n158 | #[bitfield(u32,order = Msb)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to subtract with overflow\n   --> src/register.rs:158:1\n    |\n158 | #[bitfield(u32,order = Msb)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the attribute macro `bitfield` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to shift right with overflow\n   --> src/register.rs:158:1\n    |\n158 | #[bitfield(u32,order = Msb)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the attribute macro `bitfield` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: value out of bounds\n   --> src/register.rs:178:1\n    |\n178 | #[bitfield(u32,order = Msb)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to subtract with overflow\n   --> src/register.rs:178:1\n    |\n178 | #[bitfield(u32,order = Msb)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the attribute macro `bitfield` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to shift right with overflow\n   --> src/register.rs:178:1\n    |\n178 | #[bitfield(u32,order = Msb)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the attribute macro `bitfield` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: value out of bounds\n   --> src/register.rs:190:1\n    |\n190 | #[bitfield(u32,order = Msb)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to subtract with overflow\n   --> src/register.rs:190:1\n    |\n190 | #[bitfield(u32,order = Msb)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the attribute macro `bitfield` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to shift right with overflow\n   --> src/register.rs:190:1\n    |\n190 | #[bitfield(u32,order = Msb)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the attribute macro `bitfield` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: value out of bounds\n   --> src/register.rs:204:1\n    |\n204 | #[bitfield(u32,order = Msb)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to subtract with overflow\n   --> src/register.rs:204:1\n    |\n204 | #[bitfield(u32,order = Msb)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the attribute macro `bitfield` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to shift right with overflow\n   --> src/register.rs:204:1\n    |\n204 | #[bitfield(u32,order = Msb)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the attribute macro `bitfield` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: value out of bounds\n   --> src/register.rs:231:1\n    |\n231 | #[bitfield(u32,order = Msb)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to subtract with overflow\n   --> src/register.rs:231:1\n    |\n231 | #[bitfield(u32,order = Msb)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the attribute macro `bitfield` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to shift right with overflow\n   --> src/register.rs:231:1\n    |\n231 | #[bitfield(u32,order = Msb)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the attribute macro `bitfield` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: value out of bounds\n   --> src/register.rs:266:1\n    |\n266 | #[bitfield(u32,order = Msb)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to subtract with overflow\n   --> src/register.rs:266:1\n    |\n266 | #[bitfield(u32,order = Msb)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the attribute macro `bitfield` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to shift right with overflow\n   --> src/register.rs:266:1\n    |\n266 | #[bitfield(u32,order = Msb)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the attribute macro `bitfield` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: value out of bounds\n   --> src/register.rs:367:1\n    |\n367 | #[bitfield(u16,order = Msb)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to subtract with overflow\n   --> src/register.rs:367:1\n    |\n367 | #[bitfield(u16,order = Msb)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the attribute macro `bitfield` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: possible attempt to shift right with overflow\n   --> src/register.rs:367:1\n    |\n367 | #[bitfield(u16,order = Msb)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the attribute macro `bitfield` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"],"Clippy(Warn)":["warning: this operation has no effect\n --> src/register.rs:6:29\n  |\n6 | pub const CTRL_REG: usize = SDIO_BASE + 0x00;\n  |                             ^^^^^^^^^^^^^^^^ help: consider reducing it to: `SDIO_BASE`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n  = note: `#[warn(clippy::identity_op)]` on by default\n\n","warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/register.rs:29:9\n   |\n29 |         impl Into<u32> for $name {\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n...\n50 | impl_into_u32!(CmdArg);\n   | ---------------------- in this macro invocation\n   |\n   = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n           https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n   = help: replace the `Into` implementation with `From<register::CmdArg>`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: this warning originates in the macro `impl_into_u32` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/register.rs:29:9\n   |\n29 |         impl Into<u32> for $name {\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n...\n56 | impl_into_u32!(ByteCountReg);\n   | ---------------------------- in this macro invocation\n   |\n   = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n           https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n   = help: replace the `Into` implementation with `From<register::ByteCountReg>`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: this warning originates in the macro `impl_into_u32` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/register.rs:29:9\n   |\n29 |         impl Into<u32> for $name {\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n...\n60 | impl_into_u32!(BlkSizeReg);\n   | -------------------------- in this macro invocation\n   |\n   = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n           https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n   = help: replace the `Into` implementation with `From<register::BlkSizeReg>`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: this warning originates in the macro `impl_into_u32` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/register.rs:29:9\n   |\n29 |         impl Into<u32> for $name {\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n...\n65 | impl_into_u32!(PowerReg);\n   | ------------------------ in this macro invocation\n   |\n   = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n           https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n   = help: replace the `Into` implementation with `From<register::PowerReg>`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: this warning originates in the macro `impl_into_u32` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/register.rs:29:9\n   |\n29 |         impl Into<u32> for $name {\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n...\n70 | impl_into_u32!(CDetectReg);\n   | -------------------------- in this macro invocation\n   |\n   = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n           https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n   = help: replace the `Into` implementation with `From<register::CDetectReg>`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: this warning originates in the macro `impl_into_u32` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: returning the result of a `let` binding from a block\n   --> src/register.rs:506:9\n    |\n498 | /         let cmd = CmdReg::new()\n499 | |             .with_start_cmd(true)\n500 | |             .with_use_hold_reg(true)\n501 | |             .with_response_expect(true)\n...   |\n504 | |             .with_card_number(card_number as u16)\n505 | |             .with_cmd_index(cmd_number as u16);\n    | |_______________________________________________- unnecessary `let` binding\n506 |           cmd\n    |           ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n    = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n    |\n498 ~         \n499 ~         CmdReg::new()\n500 +             .with_start_cmd(true)\n501 +             .with_use_hold_reg(true)\n502 +             .with_response_expect(true)\n503 +             .with_wait_prvdata_complete(true)\n504 +             .with_check_response_crc(true)\n505 +             .with_card_number(card_number as u16)\n506 +             .with_cmd_index(cmd_number as u16)\n    |\n\n","warning: returning the result of a `let` binding from a block\n   --> src/register.rs:510:9\n    |\n509 |         let cmd = CmdReg::default(card_number, cmd_number);\n    |         --------------------------------------------------- unnecessary `let` binding\n510 |         cmd\n    |         ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n509 ~         \n510 ~         CmdReg::default(card_number, cmd_number)\n    |\n\n","warning: returning the result of a `let` binding from a block\n   --> src/register.rs:515:9\n    |\n514 |         let cmd = CmdReg::default(card_number, cmd_number).with_data_expected(true);\n    |         ---------------------------------------------------------------------------- unnecessary `let` binding\n515 |         cmd\n    |         ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n514 ~         \n515 ~         CmdReg::default(card_number, cmd_number).with_data_expected(true)\n    |\n\n","warning: returning the result of a `let` binding from a block\n   --> src/register.rs:524:17\n    |\n523 |                 let cmd0 = CmdReg::with_no_data(0, value.into()).with_send_initialization(true);\n    |                 -------------------------------------------------------------------------------- unnecessary `let` binding\n524 |                 cmd0\n    |                 ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n523 ~                 \n524 ~                 CmdReg::with_no_data(0, value.into()).with_send_initialization(true)\n    |\n\n","warning: returning the result of a `let` binding from a block\n   --> src/register.rs:528:17\n    |\n527 |                 let cmd = CmdReg::with_no_data(0, value.into());\n    |                 ------------------------------------------------ unnecessary `let` binding\n528 |                 cmd\n    |                 ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n527 ~                 \n528 ~                 CmdReg::with_no_data(0, value.into())\n    |\n\n","warning: returning the result of a `let` binding from a block\n   --> src/register.rs:532:17\n    |\n531 |                 let cmd41 = CmdReg::with_no_data(0, value.into()).with_check_response_crc(false);\n    |                 --------------------------------------------------------------------------------- unnecessary `let` binding\n532 |                 cmd41\n    |                 ^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n531 ~                 \n532 ~                 CmdReg::with_no_data(0, value.into()).with_check_response_crc(false)\n    |\n\n","warning: returning the result of a `let` binding from a block\n   --> src/register.rs:536:17\n    |\n535 |                 let cmd9 = CmdReg::with_no_data(0, value.into()).with_check_response_crc(false);\n    |                 -------------------------------------------------------------------------------- unnecessary `let` binding\n536 |                 cmd9\n    |                 ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n535 ~                 \n536 ~                 CmdReg::with_no_data(0, value.into()).with_check_response_crc(false)\n    |\n\n","warning: returning the result of a `let` binding from a block\n   --> src/register.rs:542:17\n    |\n539 | /                 let cmd2 = CmdReg::with_no_data(0, value.into())\n540 | |                     .with_check_response_crc(false)\n541 | |                     .with_response_length(true);\n    | |________________________________________________- unnecessary `let` binding\n542 |                   cmd2\n    |                   ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n539 ~                 \n540 ~                 CmdReg::with_no_data(0, value.into())\n541 +                     .with_check_response_crc(false)\n542 +                     .with_response_length(true)\n    |\n\n","warning: returning the result of a `let` binding from a block\n   --> src/register.rs:546:17\n    |\n545 |                 let cmd = CmdReg::with_data(0, value.into());\n    |                 --------------------------------------------- unnecessary `let` binding\n546 |                 cmd\n    |                 ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n545 ~                 \n546 ~                 CmdReg::with_data(0, value.into())\n    |\n\n","warning: returning the result of a `let` binding from a block\n   --> src/register.rs:550:17\n    |\n549 |                 let cmd = CmdReg::with_data(0, value.into()).with_transfer_dir(true);\n    |                 --------------------------------------------------------------------- unnecessary `let` binding\n550 |                 cmd\n    |                 ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n549 ~                 \n550 ~                 CmdReg::with_data(0, value.into()).with_transfer_dir(true)\n    |\n\n"]}},{"file":"src/cmd.rs","count":3,"kinds":{"Clippy(Warn)":["warning: variant name ends with the enum's name\n  --> src/cmd.rs:22:5\n   |\n22 |     AppCmd,\n   |     ^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#enum_variant_names\n   = note: `#[warn(clippy::enum_variant_names)]` on by default\n\n","warning: variant name ends with the enum's name\n  --> src/cmd.rs:23:5\n   |\n23 |     GenCmd,\n   |     ^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#enum_variant_names\n\n","warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/cmd.rs:34:1\n   |\n34 | impl Into<u8> for Cmd {\n   | ^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n           https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<cmd::Cmd>`\n   |\n34 ~ impl From<Cmd> for u8 {\n35 ~     fn from(val: Cmd) -> Self {\n36 ~         match val {\n37 |             Cmd::GoIdleState => 0,\n...\n65 |             _ => {\n66 ~                 panic!(\"Not implemented for cmd {:?}\", val);\n   |\n\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:01:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:01:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"deptool","count":45,"raw_reports":[{"file":"src/cmd_parser.rs","count":17,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 1 to 2)\n-use std::{fs, path::Path};\n-use clap::{Arg, ArgAction, Command};\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 4 to 4)\n+use clap::{Arg, ArgAction, Command};\n+use std::{fs, path::Path};\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 10 to 10)\n-\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 18 to 18)\n-            Arg::new(\"no-default\").short('d').long(\"no-default\").action(ArgAction::SetFalse)\n+            Arg::new(\"no-default\")\n+                .short('d')\n+                .long(\"no-default\")\n+                .action(ArgAction::SetFalse),\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 21 to 21)\n-            Arg::new(\"features\").short('f').long(\"name\").action(ArgAction::Append)\n+            Arg::new(\"features\")\n+                .short('f')\n+                .long(\"name\")\n+                .action(ArgAction::Append),\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 24 to 24)\n-            Arg::new(\"format\").short('o').long(\"format\").default_value(\"mermaid\")\n+            Arg::new(\"format\")\n+                .short('o')\n+                .long(\"format\")\n+                .default_value(\"mermaid\"),\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 26 to 26)\n+        .arg(Arg::new(\"target\").short('t').long(\"target\").required(true))\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 27 to 27)\n-            Arg::new(\"target\").short('t').long(\"target\").required(true)\n+            Arg::new(\"save-path\")\n+                .short('s')\n+                .long(\"save-path\")\n+                .default_value(\"out.txt\"),\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 29 to 31)\n-        .arg(\n-            Arg::new(\"save-path\").short('s').long(\"save-path\").default_value(\"out.txt\")\n-        )\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 35 to 35)\n-    let features = matches.get_many::<String>(\"features\").unwrap_or_default()\n+    let features = matches\n+        .get_many::<String>(\"features\")\n+        .unwrap_or_default()\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 40 to 40)\n-        _ => GraphFormat::Mermaid\n+        _ => GraphFormat::Mermaid,\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 59 to 59)\n-fn gen_config(is_default: bool, features: Vec::<String>, format: GraphFormat, loc: String, output_loc: String) -> Config {\n+fn gen_config(\n+    is_default: bool,\n+    features: Vec<String>,\n+    format: GraphFormat,\n+    loc: String,\n+    output_loc: String,\n+) -> Config {\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 65 to 65)\n-    crates.into_iter().map(|p| p.unwrap().file_name()).any(|n| n.to_str().unwrap() == name)\n+    crates\n+        .into_iter()\n+        .map(|p| p.unwrap().file_name())\n+        .any(|n| n.to_str().unwrap() == name)\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 70 to 70)\n-    crates.into_iter().map(|p| p.unwrap().file_name()).any(|n| n.to_str().unwrap() == name)\n+    crates\n+        .into_iter()\n+        .map(|p| p.unwrap().file_name())\n+        .any(|n| n.to_str().unwrap() == name)\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 82 to 82)\n-    check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n+    check_crate_name(&name)\n+        || check_module_name(&name)\n+        || check_app_name(name)\n+        || check_lib_name(name)\n"],"Clippy(Warn)":["warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/cmd_parser.rs:82:22\n   |\n82 |     check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n   |                      ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/cmd_parser.rs:82:50\n   |\n82 |     check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n   |                                                  ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"]}},{"file":"src/lib.rs","count":17,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 1 to 1)\n-mod cmd_parser;\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 3 to 3)\n-mod mermaid_generator;\n+mod cmd_parser;\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 5 to 5)\n+mod mermaid_generator;\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 6 to 6)\n-use std::process::Command;\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 9 to 9)\n+use std::process::Command;\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 11 to 11)\n-pub use cmd_parser::{parse_cmd, build_loc};\n+pub use cmd_parser::{build_loc, parse_cmd};\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 17 to 18)\n-   Mermaid,\n-   D2,\n+    Mermaid,\n+    D2,\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 25 to 25)\n-    pub features: Vec::<String>,\n+    pub features: Vec<String>,\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 27 to 27)\n-    output_loc: String\n+    output_loc: String,\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 31 to 32)\n-    pub fn build(no_default: bool, features: Vec::<String>, format: GraphFormat, loc: String, output_loc: String) -> Config {\n-        Config { no_default, format, features, loc, output_loc }\n+    pub fn build(\n+        no_default: bool,\n+        features: Vec<String>,\n+        format: GraphFormat,\n+        loc: String,\n+        output_loc: String,\n+    ) -> Config {\n+        Config {\n+            no_default,\n+            format,\n+            features,\n+            loc,\n+            output_loc,\n+        }\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 41 to 43)\n-                .args(cmds)\n-                .output()\n-                .expect(\"failed to execute process\")\n+            .args(cmds)\n+            .output()\n+            .expect(\"failed to execute process\")\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 46 to 48)\n-                .args(cmds)\n-                .output()\n-                .expect(\"failed to execute process\")\n+            .args(cmds)\n+            .output()\n+            .expect(\"failed to execute process\")\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 56 to 56)\n-    let mut rst = vec!();\n+    let mut rst = vec![];\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 83 to 83)\n-        _ => generate_mermaid(config)\n+        _ => generate_mermaid(config),\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 97 to 98)\n-        Ok(()) => {},\n-        Err(error) => println!(\"Error during writing file {}, {}\", config.output_loc, error)\n+        Ok(()) => {}\n+        Err(error) => println!(\"Error during writing file {}, {}\", config.output_loc, error),\n"],"Clippy(Warn)":["warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/lib.rs:37:39\n   |\n37 |     let cmd_ct = build_cargo_tree_cmd(&cfg);\n   |                                       ^^^^ help: change this to: `cfg`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/lib.rs:55:21\n   |\n55 | fn parse_deps(deps: &String) -> Vec<(i32, String)> {\n   |                     ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n"]}},{"file":"src/d2_generator.rs","count":4,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/d2_generator.rs (original lines from 3 to 3)\n-use crate::{parse_deps, cmd_parser::is_arceos_crate};\n+use crate::{cmd_parser::is_arceos_crate, parse_deps};\n"],"Clippy(Warn)":["warning: this expression creates a reference which is immediately dereferenced by the compiler\n --> src/d2_generator.rs:8:34\n  |\n8 |     let deps_parsed = parse_deps(&deps);\n  |                                  ^^^^^ help: change this to: `deps`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/d2_generator.rs:18:29\n   |\n18 |         if !is_arceos_crate(&name) {\n   |                             ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/d2_generator.rs:34:32\n   |\n34 |             parsed_crates.push(&name);\n   |                                ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"]}},{"file":"src/mermaid_generator.rs","count":4,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/mermaid_generator.rs (original lines from 3 to 3)\n-use crate::{parse_deps, cmd_parser::is_arceos_crate};\n+use crate::{cmd_parser::is_arceos_crate, parse_deps};\n"],"Clippy(Warn)":["warning: this expression creates a reference which is immediately dereferenced by the compiler\n --> src/mermaid_generator.rs:6:34\n  |\n6 |     let deps_parsed = parse_deps(&deps);\n  |                                  ^^^^^ help: change this to: `deps`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/mermaid_generator.rs:16:29\n   |\n16 |         if !is_arceos_crate(&name) {\n   |                             ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/mermaid_generator.rs:32:32\n   |\n32 |             parsed_crates.push(&name);\n   |                                ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"]}},{"file":"src/cmd_builder.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_builder.rs (original lines from 6 to 6)\n-        false => \"--no-default-features\"\n+        false => \"--no-default-features\",\n","file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_builder.rs (original lines from 11 to 11)\n-        _ => \"-F \".to_string() + cfg.features.join(\" \").as_str()\n+        _ => \"-F \".to_string() + cfg.features.join(\" \").as_str(),\n"]}},{"file":"src/main.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/main.rs (original lines from 1 to 1)\n-use deptool::{run, parse_cmd};\n+use deptool::{parse_cmd, run};\n"]}}]},{"user":"Starry-OS","repo":"Starry","pkg":"deptool","count":45,"raw_reports":[{"file":"src/cmd_parser.rs","count":17,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 1 to 2)\n-use std::{fs, path::Path};\n-use clap::{Arg, ArgAction, Command};\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 4 to 4)\n+use clap::{Arg, ArgAction, Command};\n+use std::{fs, path::Path};\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 10 to 10)\n-\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 18 to 18)\n-            Arg::new(\"no-default\").short('d').long(\"no-default\").action(ArgAction::SetFalse)\n+            Arg::new(\"no-default\")\n+                .short('d')\n+                .long(\"no-default\")\n+                .action(ArgAction::SetFalse),\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 21 to 21)\n-            Arg::new(\"features\").short('f').long(\"name\").action(ArgAction::Append)\n+            Arg::new(\"features\")\n+                .short('f')\n+                .long(\"name\")\n+                .action(ArgAction::Append),\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 24 to 24)\n-            Arg::new(\"format\").short('o').long(\"format\").default_value(\"mermaid\")\n+            Arg::new(\"format\")\n+                .short('o')\n+                .long(\"format\")\n+                .default_value(\"mermaid\"),\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 26 to 26)\n+        .arg(Arg::new(\"target\").short('t').long(\"target\").required(true))\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 27 to 27)\n-            Arg::new(\"target\").short('t').long(\"target\").required(true)\n+            Arg::new(\"save-path\")\n+                .short('s')\n+                .long(\"save-path\")\n+                .default_value(\"out.txt\"),\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 29 to 31)\n-        .arg(\n-            Arg::new(\"save-path\").short('s').long(\"save-path\").default_value(\"out.txt\")\n-        )\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 35 to 35)\n-    let features = matches.get_many::<String>(\"features\").unwrap_or_default()\n+    let features = matches\n+        .get_many::<String>(\"features\")\n+        .unwrap_or_default()\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 40 to 40)\n-        _ => GraphFormat::Mermaid\n+        _ => GraphFormat::Mermaid,\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 59 to 59)\n-fn gen_config(is_default: bool, features: Vec::<String>, format: GraphFormat, loc: String, output_loc: String) -> Config {\n+fn gen_config(\n+    is_default: bool,\n+    features: Vec<String>,\n+    format: GraphFormat,\n+    loc: String,\n+    output_loc: String,\n+) -> Config {\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 65 to 65)\n-    crates.into_iter().map(|p| p.unwrap().file_name()).any(|n| n.to_str().unwrap() == name)\n+    crates\n+        .into_iter()\n+        .map(|p| p.unwrap().file_name())\n+        .any(|n| n.to_str().unwrap() == name)\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 70 to 70)\n-    crates.into_iter().map(|p| p.unwrap().file_name()).any(|n| n.to_str().unwrap() == name)\n+    crates\n+        .into_iter()\n+        .map(|p| p.unwrap().file_name())\n+        .any(|n| n.to_str().unwrap() == name)\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 82 to 82)\n-    check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n+    check_crate_name(&name)\n+        || check_module_name(&name)\n+        || check_app_name(name)\n+        || check_lib_name(name)\n"],"Clippy(Warn)":["warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/cmd_parser.rs:82:22\n   |\n82 |     check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n   |                      ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/cmd_parser.rs:82:50\n   |\n82 |     check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n   |                                                  ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"]}},{"file":"src/lib.rs","count":17,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 1 to 1)\n-mod cmd_parser;\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 3 to 3)\n-mod mermaid_generator;\n+mod cmd_parser;\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 5 to 5)\n+mod mermaid_generator;\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 6 to 6)\n-use std::process::Command;\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 9 to 9)\n+use std::process::Command;\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 11 to 11)\n-pub use cmd_parser::{parse_cmd, build_loc};\n+pub use cmd_parser::{build_loc, parse_cmd};\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 17 to 18)\n-   Mermaid,\n-   D2,\n+    Mermaid,\n+    D2,\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 25 to 25)\n-    pub features: Vec::<String>,\n+    pub features: Vec<String>,\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 27 to 27)\n-    output_loc: String\n+    output_loc: String,\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 31 to 32)\n-    pub fn build(no_default: bool, features: Vec::<String>, format: GraphFormat, loc: String, output_loc: String) -> Config {\n-        Config { no_default, format, features, loc, output_loc }\n+    pub fn build(\n+        no_default: bool,\n+        features: Vec<String>,\n+        format: GraphFormat,\n+        loc: String,\n+        output_loc: String,\n+    ) -> Config {\n+        Config {\n+            no_default,\n+            format,\n+            features,\n+            loc,\n+            output_loc,\n+        }\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 41 to 43)\n-                .args(cmds)\n-                .output()\n-                .expect(\"failed to execute process\")\n+            .args(cmds)\n+            .output()\n+            .expect(\"failed to execute process\")\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 46 to 48)\n-                .args(cmds)\n-                .output()\n-                .expect(\"failed to execute process\")\n+            .args(cmds)\n+            .output()\n+            .expect(\"failed to execute process\")\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 56 to 56)\n-    let mut rst = vec!();\n+    let mut rst = vec![];\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 83 to 83)\n-        _ => generate_mermaid(config)\n+        _ => generate_mermaid(config),\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 97 to 98)\n-        Ok(()) => {},\n-        Err(error) => println!(\"Error during writing file {}, {}\", config.output_loc, error)\n+        Ok(()) => {}\n+        Err(error) => println!(\"Error during writing file {}, {}\", config.output_loc, error),\n"],"Clippy(Warn)":["warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/lib.rs:37:39\n   |\n37 |     let cmd_ct = build_cargo_tree_cmd(&cfg);\n   |                                       ^^^^ help: change this to: `cfg`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/lib.rs:55:21\n   |\n55 | fn parse_deps(deps: &String) -> Vec<(i32, String)> {\n   |                     ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n"]}},{"file":"src/d2_generator.rs","count":4,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/d2_generator.rs (original lines from 3 to 3)\n-use crate::{parse_deps, cmd_parser::is_arceos_crate};\n+use crate::{cmd_parser::is_arceos_crate, parse_deps};\n"],"Clippy(Warn)":["warning: this expression creates a reference which is immediately dereferenced by the compiler\n --> src/d2_generator.rs:8:34\n  |\n8 |     let deps_parsed = parse_deps(&deps);\n  |                                  ^^^^^ help: change this to: `deps`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/d2_generator.rs:18:29\n   |\n18 |         if !is_arceos_crate(&name) {\n   |                             ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/d2_generator.rs:34:32\n   |\n34 |             parsed_crates.push(&name);\n   |                                ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"]}},{"file":"src/mermaid_generator.rs","count":4,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/mermaid_generator.rs (original lines from 3 to 3)\n-use crate::{parse_deps, cmd_parser::is_arceos_crate};\n+use crate::{cmd_parser::is_arceos_crate, parse_deps};\n"],"Clippy(Warn)":["warning: this expression creates a reference which is immediately dereferenced by the compiler\n --> src/mermaid_generator.rs:6:34\n  |\n6 |     let deps_parsed = parse_deps(&deps);\n  |                                  ^^^^^ help: change this to: `deps`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/mermaid_generator.rs:16:29\n   |\n16 |         if !is_arceos_crate(&name) {\n   |                             ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/mermaid_generator.rs:32:32\n   |\n32 |             parsed_crates.push(&name);\n   |                                ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"]}},{"file":"src/cmd_builder.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_builder.rs (original lines from 6 to 6)\n-        false => \"--no-default-features\"\n+        false => \"--no-default-features\",\n","file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_builder.rs (original lines from 11 to 11)\n-        _ => \"-F \".to_string() + cfg.features.join(\" \").as_str()\n+        _ => \"-F \".to_string() + cfg.features.join(\" \").as_str(),\n"]}},{"file":"src/main.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/main.rs (original lines from 1 to 1)\n-use deptool::{run, parse_cmd};\n+use deptool::{parse_cmd, run};\n"]}}]},{"user":"kern-crates","repo":"lwext4","pkg":"lwext4-rs","count":33,"raw_reports":[{"file":"lwext4-rs/src/block.rs","count":12,"kinds":{"Clippy(Warn)":["warning: transmute from a reference to a pointer\n  --> lwext4-rs/src/block.rs:41:25\n   |\n41 |                 p_user: transmute(Box::leak(Box::new(interface))),\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `Box::leak(Box::new(interface)) as *mut T as *mut std::ffi::c_void`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute\n   = note: `#[warn(clippy::useless_transmute)]` on by default\n\n","warning: transmute from a pointer type (`*mut std::ffi::c_void`) to a reference type (`&T`)\n  --> lwext4-rs/src/block.rs:81:18\n   |\n81 |         unsafe { transmute((*self.raw.bdif).p_user) }\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*((*self.raw.bdif).p_user as *const T)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n   = note: `#[warn(clippy::transmute_ptr_to_ref)]` on by default\n\n","warning: transmute from a pointer type (`*mut std::ffi::c_void`) to a reference type (`&mut T`)\n  --> lwext4-rs/src/block.rs:86:18\n   |\n86 |         unsafe { transmute((*self.raw.bdif).p_user) }\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&mut *((*self.raw.bdif).p_user as *mut T)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n\n","warning: transmute from a reference to a pointer\n   --> lwext4-rs/src/block.rs:120:50\n    |\n120 |             errno_to_result(ext4_device_register(transmute(&bdev.raw), c_name.as_ptr()))?;\n    |                                                  ^^^^^^^^^^^^^^^^^^^^ help: try: `&bdev.raw as *const lwext4_sys::ext4::ext4_blockdev as *mut lwext4_sys::ext4::ext4_blockdev`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute\n\n","warning: transmute from a pointer type (`*mut lwext4_sys::ext4::ext4_blockdev`) to a reference type (`&mut block::BlockDevice<T>`)\n   --> lwext4-rs/src/block.rs:234:47\n    |\n234 |             let device: &mut BlockDevice<T> = transmute(bdev);\n    |                                               ^^^^^^^^^^^^^^^ help: try: `&mut *(bdev as *mut block::BlockDevice<T>)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n\n","warning: transmute from a pointer type (`*mut lwext4_sys::ext4::ext4_blockdev`) to a reference type (`&mut block::BlockDevice<T>`)\n   --> lwext4-rs/src/block.rs:252:47\n    |\n252 |             let device: &mut BlockDevice<T> = transmute(bdev);\n    |                                               ^^^^^^^^^^^^^^^ help: try: `&mut *(bdev as *mut block::BlockDevice<T>)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n\n","warning: transmute used without annotations\n   --> lwext4-rs/src/block.rs:256:36\n    |\n256 |                 from_raw_parts_mut(transmute(buf), (blk_cnt * bsize) as usize),\n    |                                    ^^^^^^^^^ help: consider adding missing annotations: `transmute::<*mut std::ffi::c_void, *mut u8>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n    = note: `#[warn(clippy::missing_transmute_annotations)]` on by default\n\n","warning: transmute from a pointer type (`*mut lwext4_sys::ext4::ext4_blockdev`) to a reference type (`&mut block::BlockDevice<T>`)\n   --> lwext4-rs/src/block.rs:271:47\n    |\n271 |             let device: &mut BlockDevice<T> = transmute(bdev);\n    |                                               ^^^^^^^^^^^^^^^ help: try: `&mut *(bdev as *mut block::BlockDevice<T>)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n\n","warning: transmute used without annotations\n   --> lwext4-rs/src/block.rs:275:32\n    |\n275 |                 from_raw_parts(transmute(buf), (blk_cnt * bsize) as usize),\n    |                                ^^^^^^^^^ help: consider adding missing annotations: `transmute::<*const std::ffi::c_void, *const u8>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n","warning: transmute from a pointer type (`*mut lwext4_sys::ext4::ext4_blockdev`) to a reference type (`&mut block::BlockDevice<T>`)\n   --> lwext4-rs/src/block.rs:285:47\n    |\n285 |             let device: &mut BlockDevice<T> = transmute(bdev);\n    |                                               ^^^^^^^^^^^^^^^ help: try: `&mut *(bdev as *mut block::BlockDevice<T>)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n\n","warning: transmute from a pointer type (`*mut lwext4_sys::ext4::ext4_blockdev`) to a reference type (`&mut block::BlockDevice<T>`)\n   --> lwext4-rs/src/block.rs:293:47\n    |\n293 |             let device: &mut BlockDevice<T> = transmute(bdev);\n    |                                               ^^^^^^^^^^^^^^^ help: try: `&mut *(bdev as *mut block::BlockDevice<T>)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n\n","warning: transmute from a pointer type (`*mut lwext4_sys::ext4::ext4_blockdev`) to a reference type (`&mut block::BlockDevice<T>`)\n   --> lwext4-rs/src/block.rs:301:47\n    |\n301 |             let device: &mut BlockDevice<T> = transmute(bdev);\n    |                                               ^^^^^^^^^^^^^^^ help: try: `&mut *(bdev as *mut block::BlockDevice<T>)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n\n"]}},{"file":"lwext4-rs/src/mkfs.rs","count":5,"kinds":{"Clippy(Warn)":["warning: transmute from a reference to a pointer\n  --> lwext4-rs/src/mkfs.rs:68:27\n   |\n68 |                     bdev: transmute(&bdev.raw),\n   |                           ^^^^^^^^^^^^^^^^^^^^ help: try: `&bdev.raw as *const lwext4_sys::ext4::ext4_blockdev as *mut lwext4_sys::ext4::ext4_blockdev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute\n\n","warning: you should consider adding a `Default` implementation for `FsBuilder`\n   --> lwext4-rs/src/mkfs.rs:181:5\n    |\n181 | /     pub fn new() -> Self {\n182 | |         Self {\n183 | |             block_size: 1024,\n184 | |             ty: None,\n...   |\n187 | |         }\n188 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n180 + impl Default for FsBuilder {\n181 +     fn default() -> Self {\n182 +         Self::new()\n183 +     }\n184 + }\n    |\n\n","warning: transmute from a reference to a pointer\n   --> lwext4-rs/src/mkfs.rs:251:17\n    |\n251 |                 transmute(&fs.device.raw),\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&fs.device.raw as *const lwext4_sys::ext4::ext4_blockdev as *mut lwext4_sys::ext4::ext4_blockdev`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute\n\n","warning: transmute from a reference to a pointer\n   --> lwext4-rs/src/mkfs.rs:267:17\n    |\n267 |                 transmute(&self.device.raw),\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&self.device.raw as *const lwext4_sys::ext4::ext4_blockdev as *mut lwext4_sys::ext4::ext4_blockdev`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute\n\n","warning: transmute from a reference to a pointer\n   --> lwext4-rs/src/mkfs.rs:268:17\n    |\n268 |                 transmute(&self.raw_info),\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&self.raw_info as *const lwext4_sys::ext4::ext4_mkfs_info as *mut lwext4_sys::ext4::ext4_mkfs_info`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute\n\n"]}},{"file":"lwext4-rs/src/dir.rs","count":4,"kinds":{"Clippy(Warn)":["warning: using `clone` on type `ext4_file` which implements the `Copy` trait\n  --> lwext4-rs/src/dir.rs:37:19\n   |\n37 |         File::new(self.raw.f.clone(), self.path.clone())\n   |                   ^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.raw.f`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n","warning: using `clone` on type `ext4_direntry` which implements the `Copy` trait\n   --> lwext4-rs/src/dir.rs:108:26\n    |\n108 |                     raw: (*transmute::<_, &ext4_direntry>(result)).clone(),\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `(*transmute::<_, &ext4_direntry>(result))`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n","warning: transmute from a pointer type (`*const lwext4_sys::ext4::ext4_direntry`) to a reference type (`&lwext4_sys::ext4::ext4_direntry`)\n   --> lwext4-rs/src/dir.rs:108:28\n    |\n108 |                     raw: (*transmute::<_, &ext4_direntry>(result)).clone(),\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*result.cast::<ext4_direntry>()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n\n","warning: transmute used without annotations\n   --> lwext4-rs/src/dir.rs:108:28\n    |\n108 |                     raw: (*transmute::<_, &ext4_direntry>(result)).clone(),\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider adding missing annotations: `transmute::<*const lwext4_sys::ext4::ext4_direntry, &lwext4_sys::ext4::ext4_direntry>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n"]}},{"file":"lwext4-rs/src/types.rs","count":4,"kinds":{"Clippy(Warn)":["warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> lwext4-rs/src/types.rs:102:27\n    |\n102 |     pub(super) fn to_ext4(&self) -> u8 {\n    |                           ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n","warning: you should consider adding a `Default` implementation for `MountStats`\n   --> lwext4-rs/src/types.rs:121:5\n    |\n121 | /     pub fn new() -> Self {\n122 | |         Self(ext4_mount_stats {\n123 | |             inodes_count: 0,\n124 | |             free_inodes_count: 0,\n...   |\n132 | |         })\n133 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n120 + impl Default for MountStats {\n121 +     fn default() -> Self {\n122 +         Self::new()\n123 +     }\n124 + }\n    |\n\n","warning: struct `Metadata` has a public `len` method, but no `is_empty` method\n   --> lwext4-rs/src/types.rs:379:5\n    |\n379 |     pub fn len(&self) -> u64 {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_without_is_empty\n    = note: `#[warn(clippy::len_without_is_empty)]` on by default\n\n","warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> lwext4-rs/src/types.rs:517:1\n    |\n517 | impl Into<u32> for Time {\n    | ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<types::Time>`\n    |\n517 ~ impl From<Time> for u32 {\n518 ~     fn from(val: Time) -> Self {\n519 ~         val.epoch_secs as u32\n    |\n\n"]}},{"file":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-1.3.2/src/lib.rs","count":1,"kinds":{"Clippy(Error)":["error: &-masking with zero\n   --> lwext4-rs/src/types.rs:166:1\n    |\n166 | / bitflags! {\n167 | |     pub struct OpenFlags:u32{\n168 | |         const RDONLY = O_RDONLY;\n169 | |         const WRONLY = O_WRONLY;\n...   |\n175 | |     }\n176 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n    = note: `#[deny(clippy::bad_bit_mask)]` on by default\n    = note: this error originates in the macro `__impl_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=lwext4-rs, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_8/kern-crates/lwext4/lwext4-rs\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling glob v0.3.1\n   Compiling prettyplease v0.2.22\n   Compiling libc v0.2.159\n   Compiling rustix v0.38.37\n   Compiling memchr v2.7.4\n   Compiling linux-raw-sys v0.4.14\n   Compiling clang-sys v1.8.1\n   Compiling quote v1.0.37\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v2.6.0\n   Compiling minimal-lexical v0.2.1\n   Compiling regex-syntax v0.8.5\n   Compiling nom v7.1.3\n   Compiling syn v2.0.79\n   Compiling regex-automata v0.4.8\n   Compiling libloading v0.8.5\n   Compiling bindgen v0.65.1\n   Compiling either v1.13.0\n   Compiling home v0.5.9\n   Compiling which v4.4.2\n   Compiling regex v1.11.0\n   Compiling cexpr v0.6.0\n   Compiling bitflags v1.3.2\n   Compiling shlex v1.3.0\n   Compiling peeking_take_while v0.1.2\n   Compiling log v0.4.22\n   Compiling lazy_static v1.5.0\n   Compiling rustc-hash v1.1.0\n   Compiling lazycell v1.3.0\n   Compiling lwext4-sys v0.1.0 (/home/runner/check/batch_8/kern-crates/lwext4/lwext4-sys)\n    Checking lwext4-rs v0.1.0 (/home/runner/check/batch_8/kern-crates/lwext4/lwext4-rs)\nerror: could not compile `lwext4-rs` (lib) due to 1 previous error; 29 warnings emitted\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=lwext4-rs, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_8/kern-crates/lwext4/lwext4-rs\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling clang-sys v1.8.1\n   Compiling quote v1.0.37\n   Compiling prettyplease v0.2.22\n   Compiling libc v0.2.159\n   Compiling rustix v0.38.37\nerror: failed to run custom build command for `libc v0.2.159`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_8/kern-crates/lwext4/target/debug/build/libc-2b5100b9da3f0ae3/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.159/build.rs:253:9:\n  Failed to get rustc version\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:13:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:13:52Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-01T02:13:19Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:13:19Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-01T02:13:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:13:56Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"lwext4-rs/src/error.rs","count":1,"kinds":{"Clippy(Warn)":["warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> lwext4-rs/src/error.rs:103:1\n    |\n103 | impl Into<std::io::Error> for Error {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n    = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<error::Error>`\n    |\n103 ~ impl From<Error> for std::io::Error {\n104 ~     fn from(val: Error) -> Self {\n105 ~         std::io::Error::from_raw_os_error(val as i32)\n    |\n\n"]}},{"file":"lwext4-rs/src/fs.rs","count":1,"kinds":{"Clippy(Warn)":["warning: length comparison to zero\n   --> lwext4-rs/src/fs.rs:230:16\n    |\n230 |             if x.len() > 0 {\n    |                ^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!x.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n"]}},{"file":"lwext4-rs/src/lib.rs","count":1,"kinds":{"Clippy(Warn)":["warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> lwext4-rs/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"]}},{"file":"lwext4-rs/src/standard.rs","count":1,"kinds":{"Clippy(Warn)":["warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> lwext4-rs/src/standard.rs:28:27\n   |\n28 |         self.0.read_exact(&mut buf).unwrap();\n   |                           ^^^^^^^^ help: change this to: `buf`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"]}}]},{"user":"kern-crates","repo":"rcore-tutorial-v3-with-hal-component","pkg":"os","count":32,"raw_reports":[{"file":"src/mm/memory_set.rs","count":5,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/mm/memory_set.rs (original lines from 7 to 8)\n-use polyhal::pagetable::{MappingFlags, MappingSize, PageTable, PageTableWrapper};\n-use polyhal::addr::{PhysPage, VirtAddr, VirtPage};\n","file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/mm/memory_set.rs (original lines from 10 to 10)\n+use polyhal::addr::{PhysPage, VirtAddr, VirtPage};\n+use polyhal::pagetable::{MappingFlags, MappingSize, PageTable, PageTableWrapper};\n","file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/mm/memory_set.rs (original lines from 115 to 115)\n-        //*self = Self::new_bare(); \n+        //*self = Self::new_bare();\n","file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/mm/memory_set.rs (original lines from 156 to 156)\n-            page_table.map_page(vpn, p_tracker.ppn, self.map_perm.into(), MappingSize::Page4KB);\n+            page_table.map_page(\n+                vpn,\n+                p_tracker.ppn,\n+                self.map_perm.into(),\n+                MappingSize::Page4KB,\n+            );\n","file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/mm/memory_set.rs (original lines from 195 to 195)\n-//  Identical, not used now\n+    //  Identical, not used now\n"]}},{"file":"src/syscall/mod.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/syscall/mod.rs (original lines from 22 to 22)\n+use crate::task::SignalAction;\n","file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/syscall/mod.rs (original lines from 23 to 23)\n-use process::*;\n","file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/syscall/mod.rs (original lines from 25 to 25)\n-use crate::task::SignalAction;\n+use process::*;\n"]}},{"file":"src/drivers/block/virtio_blk.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/drivers/block/virtio_blk.rs (original lines from 7 to 8)\n-use polyhal::addr::{PhysAddr, PhysPage};\n-use polyhal::VIRT_ADDR_START;\n","file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/drivers/block/virtio_blk.rs (original lines from 11 to 11)\n+use polyhal::addr::{PhysAddr, PhysPage};\n+use polyhal::VIRT_ADDR_START;\n"]}},{"file":"src/lang_items.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/lang_items.rs (original lines from 1 to 1)\n-use polyhal::shutdown;\n","file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/lang_items.rs (original lines from 4 to 4)\n+use polyhal::shutdown;\n"]}},{"file":"src/logging.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/logging.rs (original lines from 3 to 3)\n-use polyhal::debug::DebugConsole;\n","file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/logging.rs (original lines from 5 to 5)\n+use polyhal::debug::DebugConsole;\n"]}},{"file":"src/main.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/main.rs (original lines from 15 to 15)\n-use polyhal::addr::PhysPage;\n","file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/main.rs (original lines from 17 to 17)\n+use polyhal::addr::PhysPage;\n"]}},{"file":"src/mm/frame_allocator.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/mm/frame_allocator.rs (original lines from 3 to 4)\n-use polyhal::{PAGE_SIZE, VIRT_ADDR_START};\n-use polyhal::addr::{PhysAddr, PhysPage};\n","file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/mm/frame_allocator.rs (original lines from 10 to 10)\n+use polyhal::addr::{PhysAddr, PhysPage};\n+use polyhal::{PAGE_SIZE, VIRT_ADDR_START};\n"]}},{"file":"src/mm/page_table.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/mm/page_table.rs (original lines from 4 to 4)\n-use polyhal::pagetable::PageTable;\n","file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/mm/page_table.rs (original lines from 7 to 7)\n+use polyhal::pagetable::PageTable;\n"]}},{"file":"src/syscall/process.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/syscall/process.rs (original lines from 10 to 10)\n+use log::info;\n","file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/syscall/process.rs (original lines from 12 to 12)\n-use log::info;\n"]}},{"file":"src/task/mod.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/task/mod.rs (original lines from 11 to 13)\n-use polyhal::shutdown;\n-use polyhal::KContext;\n-use polyhal::TrapFrameArgs;\n","file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/task/mod.rs (original lines from 18 to 18)\n+use polyhal::shutdown;\n+use polyhal::KContext;\n+use polyhal::TrapFrameArgs;\n"]}},{"file":"src/task/processor.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/task/processor.rs (original lines from 5 to 6)\n-use polyhal::pagetable::PageTable;\n-use polyhal::{kernel_page_table, KContext, context_switch_pt};\n","file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/task/processor.rs (original lines from 9 to 9)\n+use polyhal::pagetable::PageTable;\n+use polyhal::{context_switch_pt, kernel_page_table, KContext};\n"]}},{"file":"src/task/task.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/task/task.rs (original lines from 11 to 14)\n-use polyhal::pagetable::PageTable;\n-use polyhal::{\n-    read_current_tp, run_user_task, KContext, KContextArgs, TrapFrame, TrapFrameArgs,\n-};\n","file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/task/task.rs (original lines from 17 to 17)\n+use polyhal::pagetable::PageTable;\n+use polyhal::{read_current_tp, run_user_task, KContext, KContextArgs, TrapFrame, TrapFrameArgs};\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=os, checker=Clippy\n// toolchain=nightly-2023-12-01, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://github.com/Byte-OS/polyhal.git`\n    Updating git repository `https://github.com/rcore-os/virtio-drivers`\nerror: failed to select a version for `polyhal`.\n    ... required by package `os v0.1.0 (/home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os)`\nversions that meet the requirements `*` are: 0.1.3\n\nthe package `os` depends on `polyhal`, with features: `kcontext` but `polyhal` does not have these features.\n\n\nfailed to select a version for `polyhal` which could resolve this conflict\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=os, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n    Updating crates.io index\n    Updating git repository `https://github.com/Byte-OS/polyhal.git`\n    Updating git repository `https://github.com/rcore-os/virtio-drivers`\nerror: failed to select a version for `polyhal`.\n    ... required by package `os v0.1.0 (/home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os)`\nversions that meet the requirements `*` are: 0.1.3\n\nthe package `os` depends on `polyhal`, with features: `kcontext` but `polyhal` does not have these features.\n\n\nfailed to select a version for `polyhal` which could resolve this conflict\n"]}},{"file":"src/drivers/block/ram_blk.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/drivers/block/ram_blk.rs (original lines from 62 to 65)\n-        Self {\n-            start,\n-            size,\n-        }\n+        Self { start, size }\n"]}},{"file":"src/fs/pipe.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/os/src/fs/pipe.rs (original lines from 159 to 159)\n-                    ring_buffer.write_byte( *byte_ref );\n+                    ring_buffer.write_byte(*byte_ref);\n"]}}]},{"user":"shilei-massclouds","repo":"axdtb","pkg":"axdtb","count":30,"raw_reports":[{"file":"src/lib.rs","count":16,"kinds":{"Clippy(Warn)":["warning: very complex type used. Consider factoring parts into `type` definitions\n  --> src/lib.rs:64:13\n   |\n64 |         cb: &mut dyn FnMut(String, usize, usize, Vec<(String, Vec<u8>)>)\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity\n   = note: `#[warn(clippy::type_complexity)]` on by default\n\n","warning: useless conversion to the same type: `usize`\n   --> src/lib.rs:133:31\n    |\n133 |     let dt = DeviceTree::init(dtb_va.into()).unwrap();\n    |                               ^^^^^^^^^^^^^ help: consider removing `.into()`: `dtb_va`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n"],"Unformatted":["file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 3 to 3)\n-use core::str;\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 5 to 5)\n+use core::str;\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 12 to 12)\n-const MAGIC_NUMBER     : u32 = 0xd00dfeed;\n+const MAGIC_NUMBER: u32 = 0xd00dfeed;\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 14 to 16)\n-const OF_DT_BEGIN_NODE : u32 = 0x00000001;\n-const OF_DT_END_NODE   : u32 = 0x00000002;\n-const OF_DT_PROP       : u32 = 0x00000003;\n+const OF_DT_BEGIN_NODE: u32 = 0x00000001;\n+const OF_DT_END_NODE: u32 = 0x00000002;\n+const OF_DT_PROP: u32 = 0x00000003;\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 38 to 40)\n-        let buf = unsafe {\n-            core::slice::from_raw_parts(ptr as *const u8, 24)\n-        };\n+        let buf = unsafe { core::slice::from_raw_parts(ptr as *const u8, 24) };\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 43 to 43)\n-            return Err(DeviceTreeError::BadMagicNumber)\n+            return Err(DeviceTreeError::BadMagicNumber);\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 53 to 55)\n-        Ok(\n-            Self {ptr, totalsize, off_struct, off_strings}\n-        )\n+        Ok(Self {\n+            ptr,\n+            totalsize,\n+            off_struct,\n+            off_strings,\n+        })\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 61 to 61)\n-        &self, mut pos: usize,\n+        &self,\n+        mut pos: usize,\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 64 to 64)\n-        cb: &mut dyn FnMut(String, usize, usize, Vec<(String, Vec<u8>)>)\n+        cb: &mut dyn FnMut(String, usize, usize, Vec<(String, Vec<u8>)>),\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 66 to 68)\n-        let buf = unsafe {\n-            core::slice::from_raw_parts(self.ptr as *const u8, self.totalsize)\n-        };\n+        let buf = unsafe { core::slice::from_raw_parts(self.ptr as *const u8, self.totalsize) };\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 72 to 72)\n-            return Err(DeviceTreeError::ParseError(pos))\n+            return Err(DeviceTreeError::ParseError(pos));\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 82 to 83)\n-            let val_size = buf.read_be_u32(pos+4)? as usize;\n-            let name_offset = buf.read_be_u32(pos+8)? as usize;\n+            let val_size = buf.read_be_u32(pos + 4)? as usize;\n+            let name_offset = buf.read_be_u32(pos + 8)? as usize;\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 115 to 115)\n-            return Err(DeviceTreeError::ParseError(pos))\n+            return Err(DeviceTreeError::ParseError(pos));\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 131 to 131)\n-where F: FnMut(String, usize, usize, Vec<(String, Vec<u8>)>)\n+where\n+    F: FnMut(String, usize, usize, Vec<(String, Vec<u8>)>),\n"]}},{"file":"src/util.rs","count":8,"kinds":{"Clippy(Warn)":["warning: this boolean expression can be simplified\n  --> src/util.rs:13:12\n   |\n13 |         if ! (pos+4 <= self.len()) {\n   |            ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `pos+4 > self.len()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n   = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n","warning: this boolean expression can be simplified\n  --> src/util.rs:40:12\n   |\n40 |         if ! (end < self.len()) {\n   |            ^^^^^^^^^^^^^^^^^^^^ help: try: `end >= self.len()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"],"Unformatted":["file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/src/util.rs (original lines from 1 to 1)\n-use crate::{DeviceTreeResult, DeviceTreeError};\n+use crate::{DeviceTreeError, DeviceTreeResult};\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/src/util.rs (original lines from 13 to 14)\n-        if ! (pos+4 <= self.len()) {\n-            return Err(DeviceTreeError::SliceReadError)\n+        if !(pos + 4 <= self.len()) {\n+            return Err(DeviceTreeError::SliceReadError);\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/src/util.rs (original lines from 17 to 22)\n-        Ok(\n-            (self[pos] as u32) << 24\n-            | (self[pos+1] as u32) << 16\n-            | (self[pos+2] as u32) << 8\n-            | (self[pos+3] as u32)\n-        )\n+        Ok((self[pos] as u32) << 24\n+            | (self[pos + 1] as u32) << 16\n+            | (self[pos + 2] as u32) << 8\n+            | (self[pos + 3] as u32))\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/src/util.rs (original lines from 26 to 26)\n-        let lo: u64 = self.read_be_u32(pos+4)?.into();\n+        let lo: u64 = self.read_be_u32(pos + 4)?.into();\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/src/util.rs (original lines from 33 to 33)\n-                return Ok(&self[pos..cur])\n+                return Ok(&self[pos..cur]);\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/src/util.rs (original lines from 40 to 41)\n-        if ! (end < self.len()) {\n-            return Err(DeviceTreeError::SliceReadError)\n+        if !(end < self.len()) {\n+            return Err(DeviceTreeError::SliceReadError);\n"]}},{"file":"tests/test_dtb.rs","count":6,"kinds":{"Unformatted":["file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/tests/test_dtb.rs (original lines from 1 to 2)\n-use std::str;\n-use std::io::Read;\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/tests/test_dtb.rs (original lines from 4 to 4)\n+use std::io::Read;\n+use std::str;\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/tests/test_dtb.rs (original lines from 11 to 18)\n-    let mut cb = |name: String, addr_cells: usize, size_cells: usize, props: Vec<(String, Vec<u8>)>| {\n-        match name.as_str() {\n-            \"\" => {\n-                assert_eq!(addr_cells, 2);\n-                assert_eq!(size_cells, 2);\n-                for prop in &props {\n-                    if prop.0.as_str() == \"compatible\" {\n-                        assert_eq!(str::from_utf8(&(prop.1)), Ok(\"riscv-virtio\\0\"));\n+    let mut cb =\n+        |name: String, addr_cells: usize, size_cells: usize, props: Vec<(String, Vec<u8>)>| {\n+            match name.as_str() {\n+                \"\" => {\n+                    assert_eq!(addr_cells, 2);\n+                    assert_eq!(size_cells, 2);\n+                    for prop in &props {\n+                        if prop.0.as_str() == \"compatible\" {\n+                            assert_eq!(str::from_utf8(&(prop.1)), Ok(\"riscv-virtio\\0\"));\n+                        }\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/tests/test_dtb.rs (original lines from 21 to 27)\n-            },\n-            \"soc\" => {\n-                assert_eq!(addr_cells, 2);\n-                assert_eq!(size_cells, 2);\n-                for prop in &props {\n-                    if prop.0.as_str() == \"compatible\" {\n-                        assert_eq!(str::from_utf8(&(prop.1)), Ok(\"simple-bus\\0\"));\n+                \"soc\" => {\n+                    assert_eq!(addr_cells, 2);\n+                    assert_eq!(size_cells, 2);\n+                    for prop in &props {\n+                        if prop.0.as_str() == \"compatible\" {\n+                            assert_eq!(str::from_utf8(&(prop.1)), Ok(\"simple-bus\\0\"));\n+                        }\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/tests/test_dtb.rs (original lines from 30 to 40)\n-            },\n-            \"virtio_mmio@10001000\" => {\n-                assert_eq!(addr_cells, 2);\n-                assert_eq!(size_cells, 2);\n-                for prop in &props {\n-                    if prop.0.as_str() == \"compatible\" {\n-                        assert_eq!(str::from_utf8(&(prop.1)), Ok(\"virtio,mmio\\0\"));\n-                    } else if prop.0.as_str() == \"reg\" {\n-                        let reg = &(prop.1);\n-                        assert_eq!(reg.as_slice().read_be_u64(0).unwrap(), 0x10001000);\n-                        assert_eq!(reg.as_slice().read_be_u64(8).unwrap(), 0x1000);\n+                \"virtio_mmio@10001000\" => {\n+                    assert_eq!(addr_cells, 2);\n+                    assert_eq!(size_cells, 2);\n+                    for prop in &props {\n+                        if prop.0.as_str() == \"compatible\" {\n+                            assert_eq!(str::from_utf8(&(prop.1)), Ok(\"virtio,mmio\\0\"));\n+                        } else if prop.0.as_str() == \"reg\" {\n+                            let reg = &(prop.1);\n+                            assert_eq!(reg.as_slice().read_be_u64(0).unwrap(), 0x10001000);\n+                            assert_eq!(reg.as_slice().read_be_u64(8).unwrap(), 0x1000);\n+                        }\n","file: /home/runner/check/batch_13/shilei-massclouds/axdtb/axdtb/tests/test_dtb.rs (original lines from 43 to 46)\n-            },\n-            _ => {}\n-        }\n-    };\n+                _ => {}\n+            }\n+        };\n"]}}]},{"user":"kern-crates","repo":"axdriver","pkg":"axdriver","count":29,"raw_reports":[{"file":"src/drivers.rs","count":9,"kinds":{"Clippy(Warn)":["warning: unexpected `cfg` condition name: `net_dev`\n  --> src/drivers.rs:36:7\n   |\n36 | #[cfg(net_dev = \"virtio-net\")]\n   |       ^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(net_dev, values(\"virtio-net\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(net_dev, values(\\\"virtio-net\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: unexpected `cfg` condition name: `block_dev`\n  --> src/drivers.rs:42:7\n   |\n42 | #[cfg(block_dev = \"virtio-blk\")]\n   |       ^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(block_dev, values(\"virtio-blk\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(block_dev, values(\\\"virtio-blk\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: unexpected `cfg` condition name: `display_dev`\n  --> src/drivers.rs:48:7\n   |\n48 | #[cfg(display_dev = \"virtio-gpu\")]\n   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(display_dev, values(\"virtio-gpu\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(display_dev, values(\\\"virtio-gpu\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: unexpected `cfg` condition name: `block_dev`\n  --> src/drivers.rs:55:14\n   |\n55 |     if #[cfg(block_dev = \"ramdisk\")] {\n   |              ^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(block_dev, values(\"ramdisk\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(block_dev, values(\\\"ramdisk\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: unexpected `cfg` condition name: `block_dev`\n  --> src/drivers.rs:71:14\n   |\n71 |     if #[cfg(block_dev = \"bcm2835-sdhci\")]{\n   |              ^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(block_dev, values(\"bcm2835-sdhci\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(block_dev, values(\\\"bcm2835-sdhci\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: unexpected `cfg` condition name: `net_dev`\n  --> src/drivers.rs:85:14\n   |\n85 |     if #[cfg(net_dev = \"ixgbe\")] {\n   |              ^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(net_dev, values(\"ixgbe\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(net_dev, values(\\\"ixgbe\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: unexpected `cfg` condition name: `bus`\n  --> src/drivers.rs:21:11\n   |\n21 |     #[cfg(bus = \"mmio\")]\n   |           ^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(bus, values(\"mmio\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(bus, values(\\\"mmio\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: unexpected `cfg` condition name: `bus`\n  --> src/drivers.rs:26:11\n   |\n26 |     #[cfg(bus = \"pci\")]\n   |           ^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(bus, values(\"pci\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(bus, values(\\\"pci\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: trait `DriverProbe` is never used\n  --> src/drivers.rs:16:11\n   |\n16 | pub trait DriverProbe {\n   |           ^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"]}},{"file":"src/lib.rs","count":8,"kinds":{"Clippy(Warn)":["warning: doc list item without indentation\n  --> src/lib.rs:19:5\n   |\n19 | //!  time by corresponding cargo features. For example, [`AxNetDevice`] will be\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\n   = note: `#[warn(clippy::doc_lazy_continuation)]` on by default\nhelp: indent this line\n   |\n19 | //!   time by corresponding cargo features. For example, [`AxNetDevice`] will be\n   |      +\n\n","warning: doc list item without indentation\n  --> src/lib.rs:20:5\n   |\n20 | //! an alias of [`VirtioNetDev`] if the `virtio-net` feature is enabled. This\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n20 | //!   an alias of [`VirtioNetDev`] if the `virtio-net` feature is enabled. This\n   |     ++\n\n","warning: doc list item without indentation\n  --> src/lib.rs:21:5\n   |\n21 | //! model provides the best performance as it avoids dynamic dispatch. But on\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n21 | //!   model provides the best performance as it avoids dynamic dispatch. But on\n   |     ++\n\n","warning: doc list item without indentation\n  --> src/lib.rs:22:5\n   |\n22 | //! limitation, only one device instance is supported for each device category.\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n22 | //!   limitation, only one device instance is supported for each device category.\n   |     ++\n\n","warning: doc list item without indentation\n  --> src/lib.rs:24:5\n   |\n24 | //! `Box<dyn Trait>`. For example, [`AxNetDevice`] will be [`Box<dyn NetDriverOps>`].\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n24 | //!   `Box<dyn Trait>`. For example, [`AxNetDevice`] will be [`Box<dyn NetDriverOps>`].\n   |     ++\n\n","warning: doc list item without indentation\n  --> src/lib.rs:25:5\n   |\n25 | //! When call a method provided by the device, it uses [dynamic dispatch][dyn]\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n25 | //!   When call a method provided by the device, it uses [dynamic dispatch][dyn]\n   |     ++\n\n","warning: doc list item without indentation\n  --> src/lib.rs:26:5\n   |\n26 | //! that may introduce a little overhead. But on the other hand, it is more\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n26 | //!   that may introduce a little overhead. But on the other hand, it is more\n   |     ++\n\n","warning: doc list item without indentation\n  --> src/lib.rs:27:5\n   |\n27 | //! flexible, multiple instances of each device category are supported.\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n27 | //!   flexible, multiple instances of each device category are supported.\n   |     ++\n\n"]}},{"file":"src/macros.rs","count":6,"kinds":{"Clippy(Warn)":["warning: unexpected `cfg` condition name: `net_dev`\n   --> src/macros.rs:37:15\n    |\n37  |           #[cfg(net_dev = \"virtio-net\")]\n    |                 ^^^^^^^^^^^^^^^^^^^^^^\n    |\n   ::: src/lib.rs:125:9\n    |\n125 | /         for_each_drivers!(type Driver, {\n126 | |             if let Some(dev) = Driver::probe_global() {\n127 | |                 info!(\n128 | |                     \"registered a new {:?} device: {:?}\",\n...   |\n133 | |             }\n134 | |         });\n    | |__________- in this macro invocation\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(net_dev, values(\"virtio-net\"))'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(net_dev, values(\\\"virtio-net\\\"))\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: this warning originates in the macro `for_each_drivers` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: unexpected `cfg` condition name: `block_dev`\n   --> src/macros.rs:42:15\n    |\n42  |           #[cfg(block_dev = \"virtio-blk\")]\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n   ::: src/lib.rs:125:9\n    |\n125 | /         for_each_drivers!(type Driver, {\n126 | |             if let Some(dev) = Driver::probe_global() {\n127 | |                 info!(\n128 | |                     \"registered a new {:?} device: {:?}\",\n...   |\n133 | |             }\n134 | |         });\n    | |__________- in this macro invocation\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(block_dev, values(\"virtio-blk\"))'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(block_dev, values(\\\"virtio-blk\\\"))\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: this warning originates in the macro `for_each_drivers` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: unexpected `cfg` condition name: `display_dev`\n   --> src/macros.rs:47:15\n    |\n47  |           #[cfg(display_dev = \"virtio-gpu\")]\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n   ::: src/lib.rs:125:9\n    |\n125 | /         for_each_drivers!(type Driver, {\n126 | |             if let Some(dev) = Driver::probe_global() {\n127 | |                 info!(\n128 | |                     \"registered a new {:?} device: {:?}\",\n...   |\n133 | |             }\n134 | |         });\n    | |__________- in this macro invocation\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(display_dev, values(\"virtio-gpu\"))'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(display_dev, values(\\\"virtio-gpu\\\"))\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: this warning originates in the macro `for_each_drivers` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: unexpected `cfg` condition name: `block_dev`\n   --> src/macros.rs:52:15\n    |\n52  |           #[cfg(block_dev = \"ramdisk\")]\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n    |\n   ::: src/lib.rs:125:9\n    |\n125 | /         for_each_drivers!(type Driver, {\n126 | |             if let Some(dev) = Driver::probe_global() {\n127 | |                 info!(\n128 | |                     \"registered a new {:?} device: {:?}\",\n...   |\n133 | |             }\n134 | |         });\n    | |__________- in this macro invocation\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(block_dev, values(\"ramdisk\"))'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(block_dev, values(\\\"ramdisk\\\"))\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: this warning originates in the macro `for_each_drivers` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: unexpected `cfg` condition name: `block_dev`\n   --> src/macros.rs:57:15\n    |\n57  |           #[cfg(block_dev = \"bcm2835-sdhci\")]\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n   ::: src/lib.rs:125:9\n    |\n125 | /         for_each_drivers!(type Driver, {\n126 | |             if let Some(dev) = Driver::probe_global() {\n127 | |                 info!(\n128 | |                     \"registered a new {:?} device: {:?}\",\n...   |\n133 | |             }\n134 | |         });\n    | |__________- in this macro invocation\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(block_dev, values(\"bcm2835-sdhci\"))'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(block_dev, values(\\\"bcm2835-sdhci\\\"))\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: this warning originates in the macro `for_each_drivers` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: unexpected `cfg` condition name: `net_dev`\n   --> src/macros.rs:62:15\n    |\n62  |           #[cfg(net_dev = \"ixgbe\")]\n    |                 ^^^^^^^^^^^^^^^^^\n    |\n   ::: src/lib.rs:125:9\n    |\n125 | /         for_each_drivers!(type Driver, {\n126 | |             if let Some(dev) = Driver::probe_global() {\n127 | |                 info!(\n128 | |                     \"registered a new {:?} device: {:?}\",\n...   |\n133 | |             }\n134 | |         });\n    | |__________- in this macro invocation\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(net_dev, values(\"ixgbe\"))'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(net_dev, values(\\\"ixgbe\\\"))\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: this warning originates in the macro `for_each_drivers` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"src/dummy.rs","count":3,"kinds":{"Clippy(Warn)":["warning: unexpected `cfg` condition name: `net_dev`\n  --> src/dummy.rs:10:14\n   |\n10 |     if #[cfg(net_dev = \"dummy\")] {\n   |              ^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(net_dev, values(\"dummy\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(net_dev, values(\\\"dummy\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: unexpected `cfg` condition name: `block_dev`\n  --> src/dummy.rs:38:14\n   |\n38 |     if #[cfg(block_dev = \"dummy\")] {\n   |              ^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(block_dev, values(\"dummy\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(block_dev, values(\\\"dummy\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: unexpected `cfg` condition name: `display_dev`\n  --> src/dummy.rs:73:14\n   |\n73 |     if #[cfg(display_dev = \"dummy\")] {\n   |              ^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(display_dev, values(\"dummy\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(display_dev, values(\\\"dummy\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"]}},{"file":"src/bus/mod.rs","count":2,"kinds":{"Clippy(Warn)":["warning: unexpected `cfg` condition name: `bus`\n --> src/bus/mod.rs:1:7\n  |\n1 | #[cfg(bus = \"mmio\")]\n  |       ^^^^^^^^^^^^\n  |\n  = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `fmt_debug`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`\n  = help: consider using a Cargo feature instead\n  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n           [lints.rust]\n           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(bus, values(\"mmio\"))'] }\n  = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(bus, values(\\\"mmio\\\"))\");` to the top of the `build.rs`\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n  = note: `#[warn(unexpected_cfgs)]` on by default\n\n","warning: unexpected `cfg` condition name: `bus`\n --> src/bus/mod.rs:3:7\n  |\n3 | #[cfg(bus = \"pci\")]\n  |       ^^^^^^^^^^^\n  |\n  = help: consider using a Cargo feature instead\n  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n           [lints.rust]\n           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(bus, values(\"pci\"))'] }\n  = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(bus, values(\\\"pci\\\"))\");` to the top of the `build.rs`\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:11:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:11:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"rCoreloongArch","pkg":"isomorphic_drivers","count":27,"raw_reports":[{"file":"isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs","count":14,"kinds":{"Clippy(Warn)":["warning: the loop variable `i` is only used to index `ixgbe`\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:385:18\n    |\n385 |         for i in IXGBE_PFUTA..IXGBE_PFUTA_END {\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n385 |         for <item> in ixgbe.iter_mut().take(IXGBE_PFUTA_END).skip(IXGBE_PFUTA) {\n    |             ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","warning: the loop variable `i` is only used to index `ixgbe`\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:389:18\n    |\n389 |         for i in IXGBE_VFTA..IXGBE_VFTA_END {\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n389 |         for <item> in ixgbe.iter_mut().take(IXGBE_VFTA_END).skip(IXGBE_VFTA) {\n    |             ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","warning: the loop variable `i` is only used to index `ixgbe`\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:393:18\n    |\n393 |         for i in IXGBE_PFVLVF..IXGBE_PFVLVF_END {\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n393 |         for <item> in ixgbe.iter_mut().take(IXGBE_PFVLVF_END).skip(IXGBE_PFVLVF) {\n    |             ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","warning: the loop variable `i` is only used to index `ixgbe`\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:397:18\n    |\n397 |         for i in IXGBE_MPSAR..IXGBE_MPSAR_END {\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n397 |         for <item> in ixgbe.iter_mut().take(IXGBE_MPSAR_END).skip(IXGBE_MPSAR) {\n    |             ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","warning: the loop variable `i` is only used to index `ixgbe`\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:401:18\n    |\n401 |         for i in IXGBE_PFVLVFB..IXGBE_PFVLVFB_END {\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n401 |         for <item> in ixgbe.iter_mut().take(IXGBE_PFVLVFB_END).skip(IXGBE_PFVLVFB) {\n    |             ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","warning: the loop variable `i` is only used to index `ixgbe`\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:405:18\n    |\n405 |         for i in IXGBE_MTA..IXGBE_MTA_END {\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n405 |         for <item> in ixgbe.iter_mut().take(IXGBE_MTA_END).skip(IXGBE_MTA) {\n    |             ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","warning: this operation has no effect\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:441:32\n    |\n441 |             *x = (*x & !0xf) | (8 << 0) | (1 << 28);\n    |                                ^^^^^^^^ help: consider reducing it to: `8`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n","warning: the loop variable `i` is used to index `send_queue`\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:508:22\n    |\n508 |             for i in 0..IXGBE_SEND_DESC_NUM {\n    |                      ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator and enumerate()\n    |\n508 |             for (i, <item>) in send_queue.iter_mut().enumerate().take(IXGBE_SEND_DESC_NUM) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","warning: the type `[&mut [net::ethernet::intel::ixgbe::IXGBESendDesc]; 4]` does not permit being left uninitialized\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:500:22\n    |\n500 |             unsafe { MaybeUninit::uninit().assume_init() };\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                      |\n    |                      this code causes undefined behavior when executed\n    |                      help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n    = note: references must be non-null\n    = note: `#[warn(invalid_value)]` on by default\n\n","warning: the type `[&mut [net::ethernet::intel::ixgbe::IXGBESendDesc]; 4]` does not permit being left uninitialized\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:500:22\n    |\n500 |             unsafe { MaybeUninit::uninit().assume_init() };\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                      |\n    |                      this code causes undefined behavior when executed\n    |                      help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n    = note: references must be non-null\n    = note: `#[warn(invalid_value)]` on by default\n\n"],"Clippy(Error)":["error: this operation will always return zero. This is likely not the intended outcome\n  --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:95:27\n   |\n95 | const IXGBE_CTRL: usize = 0x00000 / 4;\n   |                           ^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n   = note: `#[deny(clippy::erasing_op)]` on by default\n\n","error: this call for this type may be undefined behavior\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:500:22\n    |\n500 |             unsafe { MaybeUninit::uninit().assume_init() };\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninit_assumed_init\n    = note: `#[deny(clippy::uninit_assumed_init)]` on by default\n\n"],"Mirai":["warning: the type `[&mut [net::ethernet::intel::ixgbe::IXGBESendDesc]; 4]` does not permit being left uninitialized\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:500:22\n    |\n500 |             unsafe { MaybeUninit::uninit().assume_init() };\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                      |\n    |                      this code causes undefined behavior when executed\n    |                      help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n    = note: references must be non-null\n    = note: `#[warn(invalid_value)]` on by default\n\n","warning: the type `[&mut [net::ethernet::intel::ixgbe::IXGBESendDesc]; 4]` does not permit being left uninitialized\n   --> isomorphic_drivers/src/net/ethernet/intel/ixgbe.rs:500:22\n    |\n500 |             unsafe { MaybeUninit::uninit().assume_init() };\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                      |\n    |                      this code causes undefined behavior when executed\n    |                      help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n    = note: references must be non-null\n    = note: `#[warn(invalid_value)]` on by default\n\n"]}},{"file":"isomorphic_drivers/src/net/ethernet/intel/e1000.rs","count":6,"kinds":{"Clippy(Warn)":["warning: the loop variable `i` is only used to index `send_queue`\n   --> isomorphic_drivers/src/net/ethernet/intel/e1000.rs:117:18\n    |\n117 |         for i in 0..send_queue.len() {\n    |                  ^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n117 |         for <item> in &mut send_queue {\n    |             ~~~~~~    ~~~~~~~~~~~~~~~\n\n","warning: manual implementation of an assign operation\n   --> isomorphic_drivers/src/net/ethernet/intel/e1000.rs:132:13\n    |\n132 |             ral = ral | (mac.as_bytes()[i] as u32) << (i * 8);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `ral |= (mac.as_bytes()[i] as u32) << (i * 8)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n    = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n","warning: manual implementation of an assign operation\n   --> isomorphic_drivers/src/net/ethernet/intel/e1000.rs:135:13\n    |\n135 |             rah = rah | (mac.as_bytes()[i + 4] as u32) << (i * 8);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `rah |= (mac.as_bytes()[i + 4] as u32) << (i * 8)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n\n","warning: the loop variable `i` is only used to index `e1000`\n   --> isomorphic_drivers/src/net/ethernet/intel/e1000.rs:143:18\n    |\n143 |         for i in E1000_MTA..E1000_RAL {\n    |                  ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n143 |         for <item> in e1000.iter_mut().take(E1000_RAL).skip(E1000_MTA) {\n    |             ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","warning: the loop variable `i` is only used to index `recv_queue`\n   --> isomorphic_drivers/src/net/ethernet/intel/e1000.rs:161:18\n    |\n161 |         for i in 0..recv_queue.len() {\n    |                  ^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n161 |         for <item> in &mut recv_queue {\n    |             ~~~~~~    ~~~~~~~~~~~~~~~\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> isomorphic_drivers/src/net/ethernet/intel/e1000.rs:255:32\n    |\n255 |         target.copy_from_slice(&buffer);\n    |                                ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"]}},{"file":"isomorphic_drivers/src/block/ahci.rs","count":5,"kinds":{"Clippy(Warn)":["warning: this operation has no effect\n   --> isomorphic_drivers/src/block/ahci.rs:282:22\n    |\n282 |         self.lba_0 = (lba >> 0) as u8;\n    |                      ^^^^^^^^^^ help: consider reducing it to: `lba`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n","warning: unneeded `return` statement\n   --> isomorphic_drivers/src/block/ahci.rs:517:5\n    |\n517 |     return String::from_utf8(swapped_data).unwrap();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n517 -     return String::from_utf8(swapped_data).unwrap();\n517 +     String::from_utf8(swapped_data).unwrap()\n    |\n\n"],"Clippy(Error)":["error: incompatible bit mask: `_ | 32768` can never be equal to `1`\n   --> isomorphic_drivers/src/block/ahci.rs:332:19\n    |\n332 |             while port.command.read() | (1 << 15) == 1 {}\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n    = note: `#[deny(clippy::bad_bit_mask)]` on by default\n\n","error: incompatible bit mask: `_ | 16384` can never be equal to `1`\n   --> isomorphic_drivers/src/block/ahci.rs:339:19\n    |\n339 |             while port.command.read() | (1 << 14) == 1 {}\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n\n","error: incompatible bit mask: `_ | 1` can never be equal to `0`\n   --> isomorphic_drivers/src/block/ahci.rs:403:19\n    |\n403 |             while port.command.read() | (1 << 0) == 0 {}\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=isomorphic_drivers, checker=Clippy\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/kern-crates/rCoreloongArch/isomorphic_drivers\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking volatile v0.3.0\n    Checking bit_field v0.10.2\n   Compiling lock_api v0.4.12\n    Checking log v0.4.22\n    Checking spin v0.9.8\n    Checking isomorphic_drivers v0.1.0 (/home/runner/check/repos-default/kern-crates/rCoreloongArch/isomorphic_drivers)\nerror: could not compile `isomorphic_drivers` (lib) due to 6 previous errors; 17 warnings emitted\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-09-28T16:03:20Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T16:03:20Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"elliott10","repo":"lwext4_rust","pkg":"lwext4_rust","count":27,"raw_reports":[{"file":"examples/src/boot/sbi.rs","count":11,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 3 to 4)\n-pub fn console_putchar(ch: usize){\n-\tsbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n+pub fn console_putchar(ch: usize) {\n+    sbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n","file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 8 to 8)\n-\treturn sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n+    return sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n","file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 11 to 23)\n-pub fn console_putchar_u8(ch: u8){\n-\tlet ret: isize;\n-\t//let arg0: char = ch as char;\n-\tlet arg0: u8 = ch;\n-\tlet arg1: usize = 0;\n-\tlet arg2: usize = 0;\n-\tlet which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n-\tunsafe{\n-\t\tasm!(\"ecall\",\n-\t\t     lateout(\"x10\") ret,\n-\t\t     in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-             );\n-\t}\n+pub fn console_putchar_u8(ch: u8) {\n+    let ret: isize;\n+    //let arg0: char = ch as char;\n+    let arg0: u8 = ch;\n+    let arg1: usize = 0;\n+    let arg2: usize = 0;\n+    let which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n+    unsafe {\n+        asm!(\"ecall\",\n+        lateout(\"x10\") ret,\n+        in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n","file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 26 to 28)\n-fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize{\n-\tlet ret: isize;\n-\tunsafe{\n+fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize {\n+    let ret: isize;\n+    unsafe {\n","file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 30 to 34)\n-             lateout(\"x10\") ret,\n-             in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-            );\n-\t}\n-\tret\n+         lateout(\"x10\") ret,\n+         in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n+    ret\n","file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 37 to 39)\n-pub fn set_timer(stime_value: u64){\n-\t#[cfg(target_pointer_width = \"32\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n+pub fn set_timer(stime_value: u64) {\n+    #[cfg(target_pointer_width = \"32\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n","file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 41 to 42)\n-\t#[cfg(target_pointer_width = \"64\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n+    #[cfg(target_pointer_width = \"64\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n","file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 44 to 45)\n-pub fn clear_ipi(){\n-\tsbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n+pub fn clear_ipi() {\n+    sbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n","file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 48 to 49)\n-pub fn send_ipi(sipi_value: usize){\n-\tsbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n+pub fn send_ipi(sipi_value: usize) {\n+    sbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n","file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 52 to 53)\n-pub fn set_s_insn(entry: usize){\n-\tsbi_call(SBI_SET_SINSN, entry, 0, 0);\n+pub fn set_s_insn(entry: usize) {\n+    sbi_call(SBI_SET_SINSN, entry, 0, 0);\n","file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 56 to 57)\n-pub fn shutdown(){\n-\tsbi_call(SBI_SHUTDOWN, 0, 0, 0);\n+pub fn shutdown() {\n+    sbi_call(SBI_SHUTDOWN, 0, 0, 0);\n"]}},{"file":"build.rs","count":5,"kinds":{"Clippy(Warn)":["warning: the borrowed expression implements the required traits\n  --> build.rs:16:19\n   |\n16 |             .args(&[\"submodule\", \"update\", \"--init\", \"--recursive\"])\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `[\"submodule\", \"update\", \"--init\", \"--recursive\"]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n   = note: `#[warn(clippy::needless_borrows_for_generic_args)]` on by default\n\n","warning: spawned process is never `wait()`ed on\n  --> build.rs:22:9\n   |\n22 | /         Command::new(\"git\")\n23 | |             .args(&[\"apply\", lwext4_patch.to_str().unwrap()])\n24 | |             .current_dir(c_path.clone())\n25 | |             .spawn()\n26 | |             .expect(\"failed to execute process: git apply patch\");\n   | |                                                                 ^- help: try: `.wait()`\n   | |_________________________________________________________________|\n   |\n   |\n   = note: not doing so might leave behind zombie processes\n   = note: see https://doc.rust-lang.org/stable/std/process/struct.Child.html#warning\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zombie_processes\n   = note: `#[warn(clippy::zombie_processes)]` on by default\n\n","warning: the borrowed expression implements the required traits\n  --> build.rs:23:19\n   |\n23 |             .args(&[\"apply\", lwext4_patch.to_str().unwrap()])\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `[\"apply\", lwext4_patch.to_str().unwrap()]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n\n","warning: the borrowed expression implements the required traits\n  --> build.rs:40:19\n   |\n40 |               .args(&[\n   |  ___________________^\n41 | |                 \"musl-generic\",\n42 | |                 \"-C\",\n43 | |                 c_path.to_str().expect(\"invalid path of lwext4\"),\n44 | |             ])\n   | |_____________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\nhelp: change this to\n   |\n40 ~             .args([\n41 +                 \"musl-generic\",\n42 +                 \"-C\",\n43 +                 c_path.to_str().expect(\"invalid path of lwext4\"),\n44 ~             ])\n   |\n\n","warning: the borrowed expression implements the required traits\n  --> build.rs:45:18\n   |\n45 |             .arg(&format!(\"ARCH={}\", arch))\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `format!(\"ARCH={}\", arch)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n\n"]}},{"file":"examples/src/boot/lang_items.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/lang_items.rs (original lines from 4 to 7)\n-fn panic(info: &PanicInfo) -> !{\n-\tprintln!(\"{}\", info);\n-\tcrate::boot::sbi::shutdown();\n-\tunreachable!()\n+fn panic(info: &PanicInfo) -> ! {\n+    println!(\"{}\", info);\n+    crate::boot::sbi::shutdown();\n+    unreachable!()\n","file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/lang_items.rs (original lines from 11 to 12)\n-pub extern \"C\" fn abort() -> !{\n-\tpanic!(\"abort!\");\n+pub extern \"C\" fn abort() -> ! {\n+    panic!(\"abort!\");\n","file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/lang_items.rs (original lines from 14 to 14)\n-\n"]}},{"file":"examples/src/pci_impl.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/pci_impl.rs (original lines from 2 to 2)\n-use pci::{PortOps, CSpaceAccessMethod};\n+use pci::{CSpaceAccessMethod, PortOps};\n","file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/pci_impl.rs (original lines from 9 to 9)\n-pub const PCI_COMMAND_INTX_DISABLE:u16 = 0x400;\n+pub const PCI_COMMAND_INTX_DISABLE: u16 = 0x400;\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=lwext4_rust, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/elliott10/lwext4_rust\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n Downloading crates ...\n  Downloaded printf-compat v0.1.1\n  Downloaded log v0.4.21\n  Downloaded itertools v0.9.0\n  Downloaded either v1.10.0\n  Downloaded cty v0.2.2\n  Downloaded cstr_core v0.2.6\n    Checking either v1.10.0\n    Checking memchr v2.7.2\n    Checking cty v0.2.2\n    Checking bitflags v1.3.2\n   Compiling lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)\n    Checking log v0.4.21\n    Checking itertools v0.9.0\n    Checking cstr_core v0.2.6\n    Checking printf-compat v0.1.1\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/elliott10/lwext4_rust/target/debug/build/lwext4_rust-22c51495e4231bf5/build-script-build` (exit status: 101)\n  --- stdout\n  Retrieve lwext4 source code\n  To patch lwext4 src\n  make: Entering directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make: Leaving directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      x86_64-linux-musl-cc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make: *** [Makefile:37: musl-generic] Error 1\n  thread 'main' panicked at build.rs:48:9:\n  assertion failed: status.success()\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=lwext4_rust, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/elliott10/lwext4_rust\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling memchr v2.7.2\n   Compiling either v1.10.0\n   Compiling cty v0.2.2\n   Compiling bitflags v1.3.2\n   Compiling lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)\n   Compiling log v0.4.21\n[2024-10-01T01:55:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:55:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling itertools v0.9.0\n   Compiling cstr_core v0.2.6\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/elliott10/lwext4_rust/target/debug/build/lwext4_rust-909890d5bbd2200e/build-script-build` (exit status: 101)\n  --- stdout\n  make: Entering directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make: Leaving directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      x86_64-linux-musl-cc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make: *** [Makefile:37: musl-generic] Error 1\n  thread 'main' panicked at build.rs:48:9:\n  assertion failed: status.success()\n  stack backtrace:\n     0:     0x5617a08a1e65 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x5617a08a1e65 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x5617a08a1e65 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x5617a08a1e65 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x5617a08c477b - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x5617a08c477b - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x5617a089f73f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x5617a08a1c3e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x5617a08a1c3e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x5617a08a2fa9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x5617a08a2ced - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x5617a08a3463 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x5617a08a330b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x5617a08a2329 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x5617a08a3077 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x5617a08c3913 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x5617a08c39bc - core::panicking::panic::h6eb78686f8ac2d4f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:146:5\n    17:     0x5617a0881dc9 - build_script_build::main::hb79145acecc10057\n                                 at /home/runner/check/batch_1/elliott10/lwext4_rust/build.rs:48:9\n    18:     0x5617a0879fab - core::ops::function::FnOnce::call_once::h84e42131003e39e5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    19:     0x5617a087d8ee - std::sys_common::backtrace::__rust_begin_short_backtrace::h19d6e1177e7662f4\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    20:     0x5617a087e011 - std::rt::lang_start::{{closure}}::hc791113ae1b869f5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    21:     0x5617a089c5fd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    22:     0x5617a089c5fd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    23:     0x5617a089c5fd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    24:     0x5617a089c5fd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    25:     0x5617a089c5fd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    26:     0x5617a089c5fd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    27:     0x5617a089c5fd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    28:     0x5617a089c5fd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    29:     0x5617a089c5fd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    30:     0x5617a087dfea - std::rt::lang_start::h456336f111e3970b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    31:     0x5617a088264e - main\n    32:     0x7f60ac029d90 - <unknown>\n    33:     0x7f60ac029e40 - __libc_start_main\n    34:     0x5617a08785a5 - _start\n    35:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=lwext4_rust, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/elliott10/lwext4_rust\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking cty v0.2.2\n    Checking memchr v2.7.2\n    Checking either v1.10.0\n   Compiling lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)\n    Checking bitflags v1.3.2\n    Checking log v0.4.21\n    Checking itertools v0.9.0\n    Checking cstr_core v0.2.6\n    Checking printf-compat v0.1.1\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/elliott10/lwext4_rust/target/debug/build/lwext4_rust-909890d5bbd2200e/build-script-build` (exit status: 101)\n  --- stdout\n  Retrieve lwext4 source code\n  To patch lwext4 src\n  make: Entering directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make: Leaving directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      x86_64-linux-musl-cc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make: *** [Makefile:37: musl-generic] Error 1\n  thread 'main' panicked at build.rs:48:9:\n  assertion failed: status.success()\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T01:55:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:55:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"examples/src/ext4fs.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/ext4fs.rs (original lines from 96 to 96)\n-\n"]}},{"file":"src/lib.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/elliott10/lwext4_rust/src/lib.rs (original lines from 5 to 5)\n-\n"]}}]},{"user":"kern-crates","repo":"axbacktrace","pkg":"axbacktrace","count":24,"raw_reports":[{"file":"src/aarch64.rs","count":7,"kinds":{"Unformatted":["file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/aarch64.rs (original lines from 1 to 1)\n-use core::arch::asm;\n","file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/aarch64.rs (original lines from 3 to 3)\n+use core::arch::asm;\n","file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/aarch64.rs (original lines from 5 to 5)\n-    init_curr: bool, \n+    init_curr: bool,\n","file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/aarch64.rs (original lines from 39 to 39)\n-\n","file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/aarch64.rs (original lines from 53 to 53)\n-        Unwind{init_curr: true, pc: 0, fp: 0, stack_info}\n+        Unwind {\n+            init_curr: true,\n+            pc: 0,\n+            fp: 0,\n+            stack_info,\n+        }\n","file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/aarch64.rs (original lines from 56 to 57)\n-    fn new(pc:usize, fp:usize, stack_info: StackInfo) -> Self {\n-        Unwind{init_curr: false, pc,fp,stack_info}\n+    fn new(pc: usize, fp: usize, stack_info: StackInfo) -> Self {\n+        Unwind {\n+            init_curr: false,\n+            pc,\n+            fp,\n+            stack_info,\n+        }\n","file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/aarch64.rs (original lines from 69 to 69)\n-            error!(\"unwind init fp: {:#016x} is invalid\",self.fp);\n+            error!(\"unwind init fp: {:#016x} is invalid\", self.fp);\n"]}},{"file":"src/riscv.rs","count":7,"kinds":{"Unformatted":["file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/riscv.rs (original lines from 1 to 1)\n-use core::arch::asm;\n","file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/riscv.rs (original lines from 3 to 3)\n+use core::arch::asm;\n","file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/riscv.rs (original lines from 35 to 36)\n-            let stack: *const StackFrame = \n-                (self.fp as *const StackFrame).sub(1);\n+            let stack: *const StackFrame = (self.fp as *const StackFrame).sub(1);\n","file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/riscv.rs (original lines from 44 to 46)\n-            let stack: *const StackFrame = \n-                (self.fp as *const StackFrame).sub(1);\n-            self.pc = (*stack).ra;   \n+            let stack: *const StackFrame = (self.fp as *const StackFrame).sub(1);\n+            self.pc = (*stack).ra;\n","file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/riscv.rs (original lines from 64 to 66)\n-    fn new(pc:usize, fp: usize, stack_info: StackInfo)\n-        -> Self {\n-        Unwind{init_curr: false, pc, fp, stack_info}\n+    fn new(pc: usize, fp: usize, stack_info: StackInfo) -> Self {\n+        Unwind {\n+            init_curr: false,\n+            pc,\n+            fp,\n+            stack_info,\n+        }\n","file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/riscv.rs (original lines from 69 to 71)\n-    fn new_from_cur_ctx(stack_info: StackInfo) \n-        -> Self {\n-        Unwind{init_curr: true, pc: 0, fp: 0, stack_info}\n+    fn new_from_cur_ctx(stack_info: StackInfo) -> Self {\n+        Unwind {\n+            init_curr: true,\n+            pc: 0,\n+            fp: 0,\n+            stack_info,\n+        }\n","file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/riscv.rs (original lines from 83 to 83)\n-            error!(\"unwind init sp: {:#016x} is invalid\",self.fp);\n+            error!(\"unwind init sp: {:#016x} is invalid\", self.fp);\n"]}},{"file":"src/x86.rs","count":6,"kinds":{"Unformatted":["file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/x86.rs (original lines from 1 to 1)\n-use core::arch::asm;\n","file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/x86.rs (original lines from 3 to 3)\n+use core::arch::asm;\n","file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/x86.rs (original lines from 66 to 68)\n-    fn new(pc:usize, fp: usize, stack_info: StackInfo)\n-        -> Self {\n-        Unwind{init_curr: false, pc, fp, stack_info}\n+    fn new(pc: usize, fp: usize, stack_info: StackInfo) -> Self {\n+        Unwind {\n+            init_curr: false,\n+            pc,\n+            fp,\n+            stack_info,\n+        }\n","file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/x86.rs (original lines from 71 to 73)\n-    fn new_from_cur_ctx(stack_info: StackInfo)\n-        -> Self {\n-        Unwind{init_curr: true, pc: 0, fp: 0, stack_info}\n+    fn new_from_cur_ctx(stack_info: StackInfo) -> Self {\n+        Unwind {\n+            init_curr: true,\n+            pc: 0,\n+            fp: 0,\n+            stack_info,\n+        }\n","file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/x86.rs (original lines from 85 to 85)\n-            error!(\"unwind init sp: {:#016x} is invalid\",self.fp);\n+            error!(\"unwind init sp: {:#016x} is invalid\", self.fp);\n"],"Mirai":["warning: Inline assembly code cannot be analyzed by MIRAI.\n  --> src/x86.rs:59:9\n   |\n59 |         asm!(\"mov {ptr}, rbp\", ptr = out(reg) fp);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"src/lib.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/lib.rs (original lines from 27 to 27)\n-        Self {low, high}\n+        Self { low, high }\n","file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/lib.rs (original lines from 31 to 31)\n-         fp < self.high && fp > self.low\n+        fp < self.high && fp > self.low\n","file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/lib.rs (original lines from 37 to 37)\n-    fn new(pc:usize, fp:usize, stack_info: StackInfo) -> Self;\n+    fn new(pc: usize, fp: usize, stack_info: StackInfo) -> Self;\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:10:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:10:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"loongArch64","pkg":"loongArch64","count":24,"raw_reports":[{"file":"src/iocsr.rs","count":12,"kinds":{"Mirai":["warning: formatting may not be suitable for sub-register argument\n --> src/iocsr.rs:6:25\n  |\n6 |         asm!(\"iocsrwr.w {},{}\", in(reg) value, in(reg) reg);\n  |                         ^^              ----- for this argument\n  |\n  = help: use `{0:e}` to have the register formatted as `eax`\n  = help: or use `{0:r}` to keep the default formatting of `rax`\n  = note: `#[warn(asm_sub_register)]` on by default\n\n","warning: formatting may not be suitable for sub-register argument\n  --> src/iocsr.rs:18:25\n   |\n18 |         asm!(\"iocsrwr.h {},{}\", in(reg) value, in(reg) reg);\n   |                         ^^              ----- for this argument\n   |\n   = help: use `{0:x}` to have the register formatted as `ax`\n   = help: or use `{0:r}` to keep the default formatting of `rax`\n\n","error: type `u8` cannot be used with this register class\n  --> src/iocsr.rs:24:41\n   |\n24 |         asm!(\"iocsrwr.b {},{}\", in(reg) value, in(reg) reg);\n   |                                         ^^^^^\n   |\n   = note: register class `reg` supports these types: i16, i32, i64, f32, f64\n   = help: consider using the `reg_byte` register class instead\n\n","error: type `u8` cannot be used with this register class\n  --> src/iocsr.rs:32:41\n   |\n32 |         asm!(\"iocsrrd.b {},{}\",out(reg) val, in(reg) reg);\n   |                                         ^^^\n   |\n   = note: register class `reg` supports these types: i16, i32, i64, f32, f64\n   = help: consider using the `reg_byte` register class instead\n\n","warning: formatting may not be suitable for sub-register argument\n  --> src/iocsr.rs:41:25\n   |\n41 |         asm!(\"iocsrrd.h {},{}\",out(reg) val, in(reg) reg);\n   |                         ^^              --- for this argument\n   |\n   = help: use `{0:x}` to have the register formatted as `ax`\n   = help: or use `{0:r}` to keep the default formatting of `rax`\n\n","warning: formatting may not be suitable for sub-register argument\n  --> src/iocsr.rs:50:25\n   |\n50 |         asm!(\"iocsrrd.w {},{}\",out(reg) val, in(reg) reg);\n   |                         ^^              --- for this argument\n   |\n   = help: use `{0:e}` to have the register formatted as `eax`\n   = help: or use `{0:r}` to keep the default formatting of `rax`\n\n"],"Clippy(Warn)":["warning: formatting may not be suitable for sub-register argument\n --> src/iocsr.rs:6:25\n  |\n6 |         asm!(\"iocsrwr.w {},{}\", in(reg) value, in(reg) reg);\n  |                         ^^              ----- for this argument\n  |\n  = help: use `{0:e}` to have the register formatted as `eax` (for 32-bit values)\n  = help: or use `{0:r}` to keep the default formatting of `rax` (for 64-bit values)\n  = note: `#[warn(asm_sub_register)]` on by default\n\n","warning: formatting may not be suitable for sub-register argument\n  --> src/iocsr.rs:18:25\n   |\n18 |         asm!(\"iocsrwr.h {},{}\", in(reg) value, in(reg) reg);\n   |                         ^^              ----- for this argument\n   |\n   = help: use `{0:x}` to have the register formatted as `ax` (for 16-bit values)\n   = help: or use `{0:r}` to keep the default formatting of `rax` (for 64-bit values)\n\n","warning: formatting may not be suitable for sub-register argument\n  --> src/iocsr.rs:41:25\n   |\n41 |         asm!(\"iocsrrd.h {},{}\",out(reg) val, in(reg) reg);\n   |                         ^^              --- for this argument\n   |\n   = help: use `{0:x}` to have the register formatted as `ax` (for 16-bit values)\n   = help: or use `{0:r}` to keep the default formatting of `rax` (for 64-bit values)\n\n","warning: formatting may not be suitable for sub-register argument\n  --> src/iocsr.rs:50:25\n   |\n50 |         asm!(\"iocsrrd.w {},{}\",out(reg) val, in(reg) reg);\n   |                         ^^              --- for this argument\n   |\n   = help: use `{0:e}` to have the register formatted as `eax` (for 32-bit values)\n   = help: or use `{0:r}` to keep the default formatting of `rax` (for 64-bit values)\n\n"],"Clippy(Error)":["error: type `u8` cannot be used with this register class\n  --> src/iocsr.rs:24:41\n   |\n24 |         asm!(\"iocsrwr.b {},{}\", in(reg) value, in(reg) reg);\n   |                                         ^^^^^\n   |\n   = note: register class `reg` supports these types: i16, i32, i64, f16, f32, f64\n   = help: consider using the `reg_byte` register class instead\n\n","error: type `u8` cannot be used with this register class\n  --> src/iocsr.rs:32:41\n   |\n32 |         asm!(\"iocsrrd.b {},{}\",out(reg) val, in(reg) reg);\n   |                                         ^^^\n   |\n   = note: register class `reg` supports these types: i16, i32, i64, f16, f32, f64\n   = help: consider using the `reg_byte` register class instead\n\n"]}},{"file":"src/ipi.rs","count":4,"kinds":{"Clippy(Warn)":["warning: formatting may not be suitable for sub-register argument\n --> src/ipi.rs:7:25\n  |\n7 |         asm!(\"iocsrwr.w {},{}\", in(reg) value,in(reg) addr);\n  |                         ^^              ----- for this argument\n  |\n  = help: use `{0:e}` to have the register formatted as `eax` (for 32-bit values)\n  = help: or use `{0:r}` to keep the default formatting of `rax` (for 64-bit values)\n\n","warning: formatting may not be suitable for sub-register argument\n  --> src/ipi.rs:13:25\n   |\n13 |         asm!(\"iocsrrd.w {},{}\", out(reg) value, in(reg) addr);\n   |                         ^^               ----- for this argument\n   |\n   = help: use `{0:e}` to have the register formatted as `eax` (for 32-bit values)\n   = help: or use `{0:r}` to keep the default formatting of `rax` (for 64-bit values)\n\n"],"Mirai":["warning: formatting may not be suitable for sub-register argument\n --> src/ipi.rs:7:25\n  |\n7 |         asm!(\"iocsrwr.w {},{}\", in(reg) value,in(reg) addr);\n  |                         ^^              ----- for this argument\n  |\n  = help: use `{0:e}` to have the register formatted as `eax`\n  = help: or use `{0:r}` to keep the default formatting of `rax`\n\n","warning: formatting may not be suitable for sub-register argument\n  --> src/ipi.rs:13:25\n   |\n13 |         asm!(\"iocsrrd.w {},{}\", out(reg) value, in(reg) addr);\n   |                         ^^               ----- for this argument\n   |\n   = help: use `{0:e}` to have the register formatted as `eax`\n   = help: or use `{0:r}` to keep the default formatting of `rax`\n\n"]}},{"file":"src/lib.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/batch_8/kern-crates/loongArch64/src/lib.rs (original lines from 5 to 5)\n+pub mod consts;\n","file: /home/runner/check/batch_8/kern-crates/loongArch64/src/lib.rs (original lines from 10 to 10)\n-pub mod consts;\n"],"Clippy(Warn)":["warning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> src/lib.rs:2:12\n  |\n2 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"]}},{"file":"src/register/base/ecfg.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_8/kern-crates/loongArch64/src/register/base/ecfg.rs (original lines from 1 to 1)\n-use core::fmt::Debug;\n","file: /home/runner/check/batch_8/kern-crates/loongArch64/src/register/base/ecfg.rs (original lines from 5 to 5)\n+use core::fmt::Debug;\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=loongArch64, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_8/kern-crates/loongArch64\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n     Locking 2 packages to latest compatible versions\n      Adding bitflags v1.3.2 (available: v2.6.0)\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n    Checking loongArch64 v0.2.4 (/home/runner/check/batch_8/kern-crates/loongArch64)\nerror: could not compile `loongArch64` (lib) due to 2 previous errors; 7 warnings emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=loongArch64, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_8/kern-crates/loongArch64\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling bit_field v0.10.2\n   Compiling bitflags v1.3.2\n   Compiling loongArch64 v0.2.4 (/home/runner/check/batch_8/kern-crates/loongArch64)\nwarning: formatting may not be suitable for sub-register argument\n --> src/iocsr.rs:6:25\n  |\n6 |         asm!(\"iocsrwr.w {},{}\", in(reg) value, in(reg) reg);\n  |                         ^^              ----- for this argument\n  |\n  = help: use `{0:e}` to have the register formatted as `eax` (for 32-bit values)\n  = help: or use `{0:r}` to keep the default formatting of `rax` (for 64-bit values)\n  = note: `#[warn(asm_sub_register)]` on by default\n\nwarning: formatting may not be suitable for sub-register argument\n  --> src/iocsr.rs:18:25\n   |\n18 |         asm!(\"iocsrwr.h {},{}\", in(reg) value, in(reg) reg);\n   |                         ^^              ----- for this argument\n   |\n   = help: use `{0:x}` to have the register formatted as `ax` (for 16-bit values)\n   = help: or use `{0:r}` to keep the default formatting of `rax` (for 64-bit values)\n\nerror: type `u8` cannot be used with this register class\n  --> src/iocsr.rs:24:41\n   |\n24 |         asm!(\"iocsrwr.b {},{}\", in(reg) value, in(reg) reg);\n   |                                         ^^^^^\n   |\n   = note: register class `reg` supports these types: i16, i32, i64, f32, f64\n   = help: consider using the `reg_byte` register class instead\n\nerror: type `u8` cannot be used with this register class\n  --> src/iocsr.rs:32:41\n   |\n32 |         asm!(\"iocsrrd.b {},{}\",out(reg) val, in(reg) reg);\n   |                                         ^^^\n   |\n   = note: register class `reg` supports these types: i16, i32, i64, f32, f64\n   = help: consider using the `reg_byte` register class instead\n\nwarning: formatting may not be suitable for sub-register argument\n  --> src/iocsr.rs:41:25\n   |\n41 |         asm!(\"iocsrrd.h {},{}\",out(reg) val, in(reg) reg);\n   |                         ^^              --- for this argument\n   |\n   = help: use `{0:x}` to have the register formatted as `ax` (for 16-bit values)\n   = help: or use `{0:r}` to keep the default formatting of `rax` (for 64-bit values)\n\nwarning: formatting may not be suitable for sub-register argument\n  --> src/iocsr.rs:50:25\n   |\n50 |         asm!(\"iocsrrd.w {},{}\",out(reg) val, in(reg) reg);\n   |                         ^^              --- for this argument\n   |\n   = help: use `{0:e}` to have the register formatted as `eax` (for 32-bit values)\n   = help: or use `{0:r}` to keep the default formatting of `rax` (for 64-bit values)\n\nwarning: formatting may not be suitable for sub-register argument\n --> src/ipi.rs:7:25\n  |\n7 |         asm!(\"iocsrwr.w {},{}\", in(reg) value,in(reg) addr);\n  |                         ^^              ----- for this argument\n  |\n  = help: use `{0:e}` to have the register formatted as `eax` (for 32-bit values)\n  = help: or use `{0:r}` to keep the default formatting of `rax` (for 64-bit values)\n\nwarning: formatting may not be suitable for sub-register argument\n  --> src/ipi.rs:13:25\n   |\n13 |         asm!(\"iocsrrd.w {},{}\", out(reg) value, in(reg) addr);\n   |                         ^^               ----- for this argument\n   |\n   = help: use `{0:e}` to have the register formatted as `eax` (for 32-bit values)\n   = help: or use `{0:r}` to keep the default formatting of `rax` (for 64-bit values)\n\nwarning: `loongArch64` (lib) generated 6 warnings\nerror: could not compile `loongArch64` (lib) due to 2 previous errors; 6 warnings emitted\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=loongArch64, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_8/kern-crates/loongArch64\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n    Checking loongArch64 v0.2.4 (/home/runner/check/batch_8/kern-crates/loongArch64)\nerror: could not compile `loongArch64` (lib) due to 3 previous errors; 6 warnings emitted\n"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-net","count":22,"raw_reports":[{"file":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs","count":7,"kinds":{"Clippy(Error)":["error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n","error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n","error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n","error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n","error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n","error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n","error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"]}},{"file":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs","count":6,"kinds":{"Mirai":["error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"],"Clippy(Error)":["error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs","count":4,"kinds":{"Mirai":["error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n","error[E0392]: parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"],"Clippy(Error)":["error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n","error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n    Checking cfg-if v1.0.0\n    Checking futures-task v0.3.30\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.30\n    Checking embedded-io v0.6.1\n    Checking pin-project-lite v0.2.14\n   Compiling embedded-hal-async v1.0.0\n    Checking futures-util v0.3.30\n    Checking hash32 v0.3.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking nb v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking void v1.0.2\n    Checking embedded-hal v1.0.0\n    Checking no-std-net v0.6.0\n    Checking critical-section v1.1.3\n   Compiling smoltcp v0.11.0\n    Checking embedded-nal v0.8.0\n   Compiling embedded-nal-async v0.7.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking embedded-hal v0.2.7\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-core v0.3.30\n   Compiling cfg-if v1.0.0\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.30\n   Compiling embedded-io v0.6.1\n   Compiling pin-project-lite v0.2.14\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling hash32 v0.3.1\n   Compiling futures-util v0.3.30\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling nb v0.1.3\n   Compiling embedded-hal-async v1.0.0\n   Compiling void v1.0.2\n   Compiling no-std-net v0.6.0\n   Compiling critical-section v1.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-nal v0.8.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-nal-async v0.7.1\n   Compiling smoltcp v0.11.0\n   Compiling embedded-hal v0.2.7\n   Compiling bitflags v1.3.2\n   Compiling managed v0.8.0\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=embassy-net, checker=Mirai\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking nb v1.1.0\n   Compiling heapless v0.8.0\n    Checking byteorder v1.5.0\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-hal-async v1.0.0\n    Checking hash32 v0.3.1\n    Checking futures-core v0.3.30\n    Checking pin-utils v0.1.0\n   Compiling litrs v0.4.1\n    Checking cfg-if v1.0.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-task v0.3.30\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking embedded-io v0.6.1\n    Checking futures-util v0.3.30\n    Checking nb v0.1.3\n   Compiling smoltcp v0.11.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling document-features v0.2.10\n    Checking critical-section v1.1.3\n    Checking embedded-hal v1.0.0\n    Checking void v1.0.2\n   Compiling embedded-nal-async v0.7.1\n    Checking no-std-net v0.6.0\n    Checking embedded-nal v0.8.0\n    Checking embedded-hal v0.2.7\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\n    Checking bitflags v1.3.2\n    Checking managed v0.8.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"src/device.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net/src/device.rs (original lines from 21 to 22)\n-    type RxToken<'a> = RxTokenAdapter<T::RxToken<'a>> where Self: 'a;\n-    type TxToken<'a> = TxTokenAdapter<T::TxToken<'a>> where Self: 'a;\n+    type RxToken<'a>\n+        = RxTokenAdapter<T::RxToken<'a>>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxTokenAdapter<T::TxToken<'a>>\n+    where\n+        Self: 'a;\n"]}},{"file":"src/tcp.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net/src/tcp.rs (original lines from 644 to 644)\n-        type Connection<'m> = TcpConnection<'m, N, TX_SZ, RX_SZ> where Self: 'm;\n+        type Connection<'m>\n+            = TcpConnection<'m, N, TX_SZ, RX_SZ>\n+        where\n+            Self: 'm;\n"]}}]},{"user":"shilei-massclouds","repo":"early_console","pkg":"early_console","count":20,"raw_reports":[{"file":"src/lib.rs","count":5,"kinds":{"Clippy(Error)":["error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n --> src/lib.rs:6:20\n  |\n6 | pub use platform::{getchar, putchar};\n  |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n  |                    |\n  |                    no `getchar` in `platform`\n\n","error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n --> src/lib.rs:6:20\n  |\n6 | pub use platform::{getchar, putchar};\n  |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n  |                    |\n  |                    no `getchar` in `platform`\n\n","error[E0425]: cannot find function `console_init` in module `platform`\n  --> src/lib.rs:10:15\n   |\n10 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\n","error[E0425]: cannot find function `putchar` in module `platform`\n  --> src/lib.rs:16:19\n   |\n16 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n16 -         platform::putchar(*c);\n16 +         putchar(*c);\n   |\n\n","error[E0425]: cannot find function `getchar` in module `platform`\n  --> src/lib.rs:23:36\n   |\n23 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n23 -         if let Some(c) = platform::getchar() {\n23 +         if let Some(c) = getchar() {\n   |\n\n"]}},{"file":"src/platform/mod.rs","count":5,"kinds":{"Clippy(Warn)":["warning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:10:42\n   |\n10 |     if #[cfg(all(target_arch = \"x86_64\", platform_family = \"x86-pc\"))] {\n   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `fmt_debug`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"x86-pc\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"x86-pc\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   = note: `#[warn(unexpected_cfgs)]` on by default\n\n","warning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:13:50\n   |\n13 |     } else if #[cfg(all(target_arch = \"riscv64\", platform_family = \"riscv64-qemu-virt\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"riscv64-qemu-virt\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"riscv64-qemu-virt\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:16:50\n   |\n16 |     } else if #[cfg(all(target_arch = \"aarch64\", platform_family = \"aarch64-qemu-virt\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-qemu-virt\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-qemu-virt\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:19:50\n   |\n19 |     } else if #[cfg(all(target_arch = \"aarch64\", platform_family = \"aarch64-raspi\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-raspi\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-raspi\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:22:50\n   |\n22 |     } else if #[cfg(all(target_arch = \"aarch64\", platform_family = \"aarch64-bsta1000b\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-bsta1000b\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-bsta1000b\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"]}},{"file":"src/platform/dummy/mod.rs","count":4,"kinds":{"Clippy(Error)":["error[E0433]: failed to resolve: unresolved import\n  --> src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\n"],"Clippy(Warn)":["warning: unexpected `cfg` condition value: `smp`\n  --> src/platform/dummy/mod.rs:23:7\n   |\n23 | #[cfg(feature = \"smp\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `smp` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: unexpected `cfg` condition value: `irq`\n  --> src/platform/dummy/mod.rs:58:7\n   |\n58 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `irq` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: unexpected `cfg` condition value: `smp`\n  --> src/platform/dummy/mod.rs:86:7\n   |\n86 | #[cfg(feature = \"smp\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `smp` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"]}},{"file":"src/time.rs","count":2,"kinds":{"Clippy(Warn)":["warning: unexpected `cfg` condition value: `irq`\n  --> src/time.rs:13:7\n   |\n13 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `irq` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: unexpected `cfg` condition value: `irq`\n  --> src/time.rs:15:7\n   |\n15 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `irq` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=early_console, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_14/shilei-massclouds/early_console/early_console\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axconfig.git`\n    Updating crates.io index\n    Updating git repository `ssh://git@github.com/shilei-massclouds/spinbase.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/kernel_guard_base`\n     Locking 32 packages to latest compatible versions\n      Adding riscv v0.10.1 (available: v0.11.1)\n      Adding sbi-rt v0.0.2 (available: v0.0.3)\n      Adding x86_64 v0.14.12 (available: v0.15.1)\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling rustversion v1.0.17\n    Checking cfg-if v1.0.0\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling indexmap v2.5.0\n    Checking volatile v0.4.6\n    Checking bitflags v2.6.0\n    Checking bit_field v0.10.2\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n    Checking x86_64 v0.14.12\n    Checking log v0.4.22\n   Compiling toml_edit v0.19.15\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n   Compiling early_console v0.1.0 (/home/runner/check/batch_14/shilei-massclouds/early_console/early_console)\nerror: could not compile `early_console` (lib) due to 5 previous errors; 10 warnings emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=early_console, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_14/shilei-massclouds/early_console/early_console\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.14.5\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling rustversion v1.0.17\n   Compiling cfg-if v1.0.0\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling indexmap v2.5.0\n   Compiling volatile v0.4.6\n   Compiling bit_field v0.10.2\n   Compiling bitflags v2.6.0\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling x86_64 v0.14.12\n   Compiling log v0.4.22\n[2024-10-01T02:06:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:06:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling toml_edit v0.19.15\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n   Compiling early_console v0.1.0 (/home/runner/check/batch_14/shilei-massclouds/early_console/early_console)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n --> src/lib.rs:6:20\n  |\n6 | pub use platform::{getchar, putchar};\n  |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n  |                    |\n  |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> src/lib.rs:10:15\n   |\n10 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> src/lib.rs:16:19\n   |\n16 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n16 -         platform::putchar(*c);\n16 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> src/lib.rs:23:36\n   |\n23 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n23 -         if let Some(c) = platform::getchar() {\n23 +         if let Some(c) = getchar() {\n   |\n\nwarning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:10:42\n   |\n10 |     if #[cfg(all(target_arch = \"x86_64\", platform_family = \"x86-pc\"))] {\n   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, `windows`\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"x86-pc\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"x86-pc\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   = note: `#[warn(unexpected_cfgs)]` on by default\n\nwarning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:13:50\n   |\n13 |     } else if #[cfg(all(target_arch = \"riscv64\", platform_family = \"riscv64-qemu-virt\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"riscv64-qemu-virt\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"riscv64-qemu-virt\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:16:50\n   |\n16 |     } else if #[cfg(all(target_arch = \"aarch64\", platform_family = \"aarch64-qemu-virt\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-qemu-virt\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-qemu-virt\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:19:50\n   |\n19 |     } else if #[cfg(all(target_arch = \"aarch64\", platform_family = \"aarch64-raspi\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-raspi\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-raspi\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:22:50\n   |\n22 |     } else if #[cfg(all(target_arch = \"aarch64\", platform_family = \"aarch64-bsta1000b\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-bsta1000b\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-bsta1000b\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `smp`\n  --> src/platform/dummy/mod.rs:23:7\n   |\n23 | #[cfg(feature = \"smp\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `smp` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `irq`\n  --> src/platform/dummy/mod.rs:58:7\n   |\n58 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `irq` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `smp`\n  --> src/platform/dummy/mod.rs:86:7\n   |\n86 | #[cfg(feature = \"smp\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `smp` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `irq`\n  --> src/time.rs:13:7\n   |\n13 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `irq` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `irq`\n  --> src/time.rs:15:7\n   |\n15 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `irq` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `early_console` (lib) generated 10 warnings\nerror: could not compile `early_console` (lib) due to 5 previous errors; 10 warnings emitted\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=early_console, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_14/shilei-massclouds/early_console/early_console\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling rustversion v1.0.17\n   Compiling indexmap v2.5.0\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_14/shilei-massclouds/early_console/early_console/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:06:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:06:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"zcore-kernel-hal","pkg":"kernel-hal","count":19,"raw_reports":[{"file":"src/common/ipi.rs","count":9,"kinds":{"Clippy(Error)":["error: empty line after doc comment\n  --> src/common/ipi.rs:53:1\n   |\n53 | / ///\n54 | |\n   | |_\n55 |   const TYPE_SHIFT: usize = 60;\n   |   ----------------------- the comment documents this constant\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n   = note: `#[deny(clippy::empty_line_after_doc_comments)]` implied by `#[deny(warnings)]`\n   = help: if the empty line is unintentional remove it\n\n","error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:20:30\n   |\n20 |         IRQueue::new(unsafe {&mut IPI_REASON0} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n20 |         IRQueue::new(unsafe {&raw mut IPI_REASON0} ),\n   |                              ~~~~~~~~\n\n","error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:21:30\n   |\n21 |         IRQueue::new(unsafe {&mut IPI_REASON1} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n21 |         IRQueue::new(unsafe {&raw mut IPI_REASON1} ),\n   |                              ~~~~~~~~\n\n","error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:22:30\n   |\n22 |         IRQueue::new(unsafe {&mut IPI_REASON2} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n22 |         IRQueue::new(unsafe {&raw mut IPI_REASON2} ),\n   |                              ~~~~~~~~\n\n","error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:23:30\n   |\n23 |         IRQueue::new(unsafe {&mut IPI_REASON3} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n23 |         IRQueue::new(unsafe {&raw mut IPI_REASON3} ),\n   |                              ~~~~~~~~\n\n","error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:24:30\n   |\n24 |         IRQueue::new(unsafe {&mut IPI_REASON4} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n24 |         IRQueue::new(unsafe {&raw mut IPI_REASON4} ),\n   |                              ~~~~~~~~\n\n","error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:25:30\n   |\n25 |         IRQueue::new(unsafe {&mut IPI_REASON5} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n25 |         IRQueue::new(unsafe {&raw mut IPI_REASON5} ),\n   |                              ~~~~~~~~\n\n","error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:26:30\n   |\n26 |         IRQueue::new(unsafe {&mut IPI_REASON6} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n26 |         IRQueue::new(unsafe {&raw mut IPI_REASON6} ),\n   |                              ~~~~~~~~\n\n","error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:27:30\n   |\n27 |         IRQueue::new(unsafe {&mut IPI_REASON7} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n27 |         IRQueue::new(unsafe {&raw mut IPI_REASON7} ),\n   |                              ~~~~~~~~\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=kernel-hal, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zcore-kernel-hal\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n    Updating git repository `https://github.com/DeathWish5/kernel-sync`\n    Updating git repository `https://github.com/smoltcp-rs/smoltcp`\n    Updating git repository `https://github.com/kern-crates/zcore-drivers.git`\n    Updating git repository `https://github.com/rcore-os/x86-smpboot`\n    Updating git repository `https://github.com/DeathWish5/PreemptiveScheduler`\n    Updating git repository `https://github.com/rust-embedded/riscv`\n    Updating git repository `https://github.com/rcore-os/device_tree-rs`\n    Updating git repository `https://github.com/rcore-os/isomorphic_drivers`\n    Updating git repository `https://github.com/elliott10/pci-rs`\n    Updating git repository `https://github.com/rcore-os/rcore-console`\n    Updating git repository `https://github.com/rcore-os/virtio-drivers`\n    Updating git repository `https://github.com/pleasewhy/unicycle`\n    Updating git repository `https://github.com/pleasewhy/uniset`\n     Locking 151 packages to latest compatible versions\n      Adding bitflags v1.3.2 (available: v2.6.0)\n      Adding cortex-a v7.5.0 (available: v8.1.1)\n      Adding nix v0.23.2 (available: v0.29.0)\n      Adding raw-cpuid v9.1.1 (available: v11.1.0)\n      Adding riscv v0.10.1 (available: v0.11.1)\n      Adding sbi-rt v0.0.2 (available: v0.0.3)\n      Adding tock-registers v0.7.0 (available: v0.9.0)\n      Adding trapframe v0.9.0 (available: v0.10.0)\n      Adding uefi v0.16.1 (available: v0.32.0)\n      Adding x86 v0.46.0 (available: v0.52.0)\n      Adding x86_64 v0.14.12 (available: v0.15.1)\n Downloading crates ...\n  Downloaded async-channel v2.3.1\n  Downloaded memoffset v0.6.5\n  Downloaded fastrand v2.1.1\n  Downloaded version-compare v0.0.10\n  Downloaded tempfile v3.13.0\n  Downloaded value-bag v1.9.0\n  Downloaded kv-log-macro v1.0.7\n  Downloaded futures-io v0.3.30\n  Downloaded event-listener-strategy v0.5.2\n  Downloaded nix v0.23.2\n  Downloaded event-listener v2.5.3\n  Downloaded cfg-if v0.1.10\n  Downloaded async-std v1.13.0\n  Downloaded piper v0.2.4\n  Downloaded trapframe v0.9.0\n  Downloaded sdl2-sys v0.34.5\n  Downloaded git-version v0.3.9\n  Downloaded futures-lite v2.3.0\n  Downloaded event-listener v5.3.1\n  Downloaded atomic-waker v1.1.2\n  Downloaded sdl2 v0.34.5\n  Downloaded async-task v4.7.1\n  Downloaded async-io v2.3.4\n  Downloaded async-executor v1.13.1\n  Downloaded async-channel v1.9.0\n  Downloaded parking v2.2.1\n  Downloaded git-version-macro v0.3.9\n  Downloaded concurrent-queue v2.5.0\n  Downloaded blocking v1.6.1\n  Downloaded async-global-executor v2.4.1\n  Downloaded async-lock v3.4.0\n  Downloaded x86 v0.46.0\n   Compiling autocfg v1.4.0\n   Compiling crossbeam-utils v0.8.20\n    Checking pin-project-lite v0.2.14\n    Checking bitflags v1.3.2\n    Checking bitflags v2.6.0\n    Checking parking v2.2.1\n    Checking value-bag v1.9.0\n    Checking bit_field v0.10.2\n    Checking fastrand v2.1.1\n    Checking log v0.4.22\n    Checking futures-core v0.3.30\n    Checking futures-io v0.3.30\n    Checking cfg-if v1.0.0\n   Compiling rustix v0.38.37\n   Compiling rustversion v1.0.17\n    Checking concurrent-queue v2.5.0\n   Compiling lock_api v0.4.12\n    Checking event-listener v5.3.1\n   Compiling slab v0.4.9\n    Checking linux-raw-sys v0.4.14\n    Checking scopeguard v1.2.0\n    Checking event-listener-strategy v0.5.2\n    Checking futures-lite v2.3.0\n   Compiling libc v0.2.159\n   Compiling version-compare v0.0.10\n    Checking tracing-core v0.1.32\n   Compiling proc-macro2 v1.0.86\n   Compiling cfg-if v0.1.10\n   Compiling sdl2-sys v0.34.5\n    Checking tracing v0.1.40\n    Checking spin v0.9.8\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.13\n    Checking async-task v4.7.1\n    Checking volatile v0.4.6\n    Checking atomic-waker v1.1.2\n    Checking piper v0.2.4\n    Checking x86_64 v0.14.12\n    Checking async-channel v2.3.1\n    Checking async-lock v3.4.0\n   Compiling paste v1.0.15\n    Checking once_cell v1.20.1\n    Checking blocking v1.6.1\n   Compiling quote v1.0.37\n    Checking async-executor v1.13.1\n   Compiling memoffset v0.6.5\n    Checking event-listener v2.5.3\n   Compiling sdl2 v0.34.5\n    Checking volatile v0.3.0\n    Checking async-channel v1.9.0\n   Compiling syn v2.0.79\n    Checking lazy_static v1.5.0\n    Checking rsdp v2.0.1\n    Checking kv-log-macro v1.0.7\n    Checking memchr v2.7.4\n    Checking pin-utils v0.1.0\n    Checking byteorder v1.5.0\n    Checking managed v0.8.0\n   Compiling trapframe v0.9.0\n   Compiling x86 v0.46.0\n    Checking polling v3.7.3\n    Checking bit v0.1.1\n    Checking x2apic v0.4.3\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking async-io v2.3.4\n    Checking acpi v4.1.1\n    Checking async-global-executor v2.4.1\n    Checking async-std v1.13.0\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking numeric-enum-macro v0.2.0\n    Checking nix v0.23.2\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n    Checking tempfile v3.13.0\n   Compiling git-version-macro v0.3.9\n    Checking git-version v0.3.9\n    Checking kernel-hal v0.1.0 (/home/runner/check/batch_12/kern-crates/zcore-kernel-hal)\nerror: could not compile `kernel-hal` (lib) due to 14 previous errors\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=kernel-hal, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zcore-kernel-hal\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling autocfg v1.4.0\n   Compiling crossbeam-utils v0.8.20\n   Compiling pin-project-lite v0.2.14\n   Compiling bitflags v1.3.2\n   Compiling bitflags v2.6.0\n   Compiling parking v2.2.1\n   Compiling value-bag v1.9.0\n   Compiling bit_field v0.10.2\n   Compiling fastrand v2.1.1\n   Compiling log v0.4.22\n   Compiling futures-core v0.3.30\n   Compiling lock_api v0.4.12\n[2024-10-01T02:02:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:02:53Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling futures-io v0.3.30\n   Compiling concurrent-queue v2.5.0\n   Compiling rustix v0.38.37\n   Compiling cfg-if v1.0.0\n   Compiling event-listener v5.3.1\n   Compiling slab v0.4.9\n   Compiling scopeguard v1.2.0\n   Compiling linux-raw-sys v0.4.14\n   Compiling rustversion v1.0.17\n   Compiling event-listener-strategy v0.5.2\n   Compiling futures-lite v2.3.0\n   Compiling version-compare v0.0.10\n   Compiling tracing-core v0.1.32\n   Compiling libc v0.2.159\n   Compiling proc-macro2 v1.0.86\n   Compiling cfg-if v0.1.10\n   Compiling sdl2-sys v0.34.5\n   Compiling tracing v0.1.40\n   Compiling spin v0.9.8\n   Compiling raw-cpuid v10.7.0\n   Compiling volatile v0.4.6\n   Compiling async-task v4.7.1\n   Compiling atomic-waker v1.1.2\n   Compiling unicode-ident v1.0.13\n   Compiling x86_64 v0.14.12\n   Compiling piper v0.2.4\n   Compiling async-channel v2.3.1\n   Compiling async-lock v3.4.0\n   Compiling paste v1.0.15\n   Compiling once_cell v1.20.1\n[2024-10-01T02:02:57Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.1/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.1/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.1/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.1/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-01T02:02:57Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling blocking v1.6.1\n   Compiling quote v1.0.37\n[2024-10-01T02:02:57Z WARN  lockbud::callbacks] [\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:254:25: 254:51 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:240:13: 240:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:54: 264:59 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:240:13: 240:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:265:21: 265:25 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:18: 264:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:54: 264:59 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"CondvarDeadlock\": {\n          \"bug_kind\": \"Deadlock before Condvar::wait and notify\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"condvar_wait_type\": \"std::sync::Condvar::wait\",\n            \"condvar_wait_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:31: 264:69 (#0)\",\n            \"condvar_notify_type\": \"std::sync::Condvar::notify\",\n            \"condvar_notify_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:319:13: 319:35 (#0)\",\n            \"deadlocks\": [\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\"\n              },\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\"\n              }\n            ]\n          },\n          \"explanation\": \"The same lock before Condvar::wait and notify\"\n        }\n      },\n      {\n        \"CondvarDeadlock\": {\n          \"bug_kind\": \"Deadlock before Condvar::wait and notify\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"condvar_wait_type\": \"std::sync::Condvar::wait\",\n            \"condvar_wait_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:31: 264:69 (#0)\",\n            \"condvar_notify_type\": \"std::sync::Condvar::notify\",\n            \"condvar_notify_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:288:9: 288:31 (#0)\",\n            \"deadlocks\": [\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:284:13: 284:22 (#0)\"\n              },\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:284:13: 284:22 (#0)\"\n              }\n            ]\n          },\n          \"explanation\": \"The same lock before Condvar::wait and notify\"\n        }\n      }\n    ]\n[2024-10-01T02:02:57Z WARN  lockbud::callbacks] crate blocking contains bugs: { probably: 4, possibly: 4 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 2 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling async-executor v1.13.1\n   Compiling memoffset v0.6.5\n   Compiling event-listener v2.5.3\n[2024-10-01T02:02:58Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:02:58Z WARN  lockbud::callbacks] crate async_executor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling volatile v0.3.0\n   Compiling sdl2 v0.34.5\n   Compiling async-channel v1.9.0\n   Compiling syn v2.0.79\n   Compiling lazy_static v1.5.0\n   Compiling polling v3.7.3\n   Compiling kv-log-macro v1.0.7\n   Compiling rsdp v2.0.1\n   Compiling x86 v0.46.0\n   Compiling async-io v2.3.4\n   Compiling trapframe v0.9.0\n   Compiling memchr v2.7.4\n[2024-10-01T02:02:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:02:59Z WARN  lockbud::callbacks] crate async_io contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling async-global-executor v2.4.1\n   Compiling pin-utils v0.1.0\n   Compiling bit v0.1.1\n   Compiling byteorder v1.5.0\n   Compiling managed v0.8.0\n[2024-10-01T02:03:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:03:00Z WARN  lockbud::callbacks] crate async_global_executor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 3 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling async-std v1.13.0\n   Compiling smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n   Compiling x2apic v0.4.3\n   Compiling acpi v4.1.1\n[2024-10-01T02:03:03Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:858:6: 858:6 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:854:13: 854:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:850:58: 850:67 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:854:13: 854:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/hint.rs:93:27: 93:41 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/hint.rs:111:1: 111:2 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/joystick.rs:432:39: 432:61 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/joystick.rs:438:5: 438:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/keyboard/keycode.rs:520:37: 520:52 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/keyboard/keycode.rs:527:17: 527:18 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:210:39: 210:51 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:214:13: 214:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:285:41: 285:55 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:289:13: 289:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-01T02:03:03Z WARN  lockbud::callbacks] crate sdl2 contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 7 }\n   Compiling virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n   Compiling isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n   Compiling lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n   Compiling pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n   Compiling device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n   Compiling numeric-enum-macro v0.2.0\n   Compiling nix v0.23.2\n   Compiling zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n   Compiling git-version-macro v0.3.9\n   Compiling git-version v0.3.9\n   Compiling tempfile v3.13.0\n[2024-10-01T02:03:06Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"file::imp::unix::persist\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tempfile-3.13.0/src/file/imp/unix.rs:125:17: 125:36 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tempfile-3.13.0/src/file/imp/unix.rs:128:42: 128:68 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:03:06Z WARN  lockbud::callbacks] crate tempfile contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-01T02:03:07Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:865:50: 865:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:868:9: 868:10 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:874:50: 874:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:877:9: 877:10 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2725:23: 2725:28 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2719:9: 2752:10 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2706:25: 2706:29 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2706:25: 2706:29 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2724:21: 2724:24 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2719:9: 2752:10 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-01T02:03:07Z WARN  lockbud::callbacks] crate nix contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 8 }\n   Compiling kernel-hal v0.1.0 (/home/runner/check/batch_12/kern-crates/zcore-kernel-hal)\nerror: private item shadows public glob re-export\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\n   |\nnote: the name `config` in the type namespace is supposed to be publicly re-exported here\n  --> src/lib.rs:49:5\n   |\n49 |     *,\n   |     ^\nnote: but the private item here shadows it\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\nnote: the lint level is defined here\n  --> src/lib.rs:9:9\n   |\n9  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(hidden_glob_reexports)]` implied by `#[deny(warnings)]`\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:20:30\n   |\n20 |         IRQueue::new(unsafe {&mut IPI_REASON0} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\n   = note: this will be a hard error in the 2024 edition\n   = note: this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\nhelp: use `addr_of_mut!` instead to create a raw pointer\n   |\n20 |         IRQueue::new(unsafe {addr_of_mut!(IPI_REASON0)} ),\n   |                              ~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:21:30\n   |\n21 |         IRQueue::new(unsafe {&mut IPI_REASON1} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\n   = note: this will be a hard error in the 2024 edition\n   = note: this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior\nhelp: use `addr_of_mut!` instead to create a raw pointer\n   |\n21 |         IRQueue::new(unsafe {addr_of_mut!(IPI_REASON1)} ),\n   |                              ~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:22:30\n   |\n22 |         IRQueue::new(unsafe {&mut IPI_REASON2} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\n   = note: this will be a hard error in the 2024 edition\n   = note: this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior\nhelp: use `addr_of_mut!` instead to create a raw pointer\n   |\n22 |         IRQueue::new(unsafe {addr_of_mut!(IPI_REASON2)} ),\n   |                              ~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:23:30\n   |\n23 |         IRQueue::new(unsafe {&mut IPI_REASON3} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\n   = note: this will be a hard error in the 2024 edition\n   = note: this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior\nhelp: use `addr_of_mut!` instead to create a raw pointer\n   |\n23 |         IRQueue::new(unsafe {addr_of_mut!(IPI_REASON3)} ),\n   |                              ~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:24:30\n   |\n24 |         IRQueue::new(unsafe {&mut IPI_REASON4} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\n   = note: this will be a hard error in the 2024 edition\n   = note: this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior\nhelp: use `addr_of_mut!` instead to create a raw pointer\n   |\n24 |         IRQueue::new(unsafe {addr_of_mut!(IPI_REASON4)} ),\n   |                              ~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:25:30\n   |\n25 |         IRQueue::new(unsafe {&mut IPI_REASON5} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\n   = note: this will be a hard error in the 2024 edition\n   = note: this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior\nhelp: use `addr_of_mut!` instead to create a raw pointer\n   |\n25 |         IRQueue::new(unsafe {addr_of_mut!(IPI_REASON5)} ),\n   |                              ~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:26:30\n   |\n26 |         IRQueue::new(unsafe {&mut IPI_REASON6} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\n   = note: this will be a hard error in the 2024 edition\n   = note: this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior\nhelp: use `addr_of_mut!` instead to create a raw pointer\n   |\n26 |         IRQueue::new(unsafe {addr_of_mut!(IPI_REASON6)} ),\n   |                              ~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:27:30\n   |\n27 |         IRQueue::new(unsafe {&mut IPI_REASON7} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\n   = note: this will be a hard error in the 2024 edition\n   = note: this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior\nhelp: use `addr_of_mut!` instead to create a raw pointer\n   |\n27 |         IRQueue::new(unsafe {addr_of_mut!(IPI_REASON7)} ),\n   |                              ~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: could not compile `kernel-hal` (lib) due to 9 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=kernel-hal, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zcore-kernel-hal\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling autocfg v1.4.0\n   Compiling crossbeam-utils v0.8.20\n    Checking pin-project-lite v0.2.14\n    Checking bitflags v1.3.2\n    Checking parking v2.2.1\n    Checking bitflags v2.6.0\n    Checking value-bag v1.9.0\n    Checking bit_field v0.10.2\n    Checking futures-core v0.3.30\n    Checking log v0.4.22\n    Checking fastrand v2.1.1\n    Checking cfg-if v1.0.0\n    Checking futures-io v0.3.30\n   Compiling lock_api v0.4.12\n   Compiling rustix v0.38.37\n   Compiling slab v0.4.9\n    Checking concurrent-queue v2.5.0\n    Checking event-listener v5.3.1\n    Checking linux-raw-sys v0.4.14\n    Checking scopeguard v1.2.0\n   Compiling rustversion v1.0.17\n    Checking event-listener-strategy v0.5.2\n    Checking futures-lite v2.3.0\n    Checking tracing-core v0.1.32\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_12/kern-crates/zcore-kernel-hal/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:02:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:02:53Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-01T02:02:57Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.1/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.1/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.1/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.1/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-01T02:02:57Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-10-01T02:02:57Z WARN  lockbud::callbacks] [\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:254:25: 254:51 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:240:13: 240:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:54: 264:59 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:240:13: 240:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:265:21: 265:25 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:18: 264:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:54: 264:59 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"CondvarDeadlock\": {\n          \"bug_kind\": \"Deadlock before Condvar::wait and notify\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"condvar_wait_type\": \"std::sync::Condvar::wait\",\n            \"condvar_wait_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:31: 264:69 (#0)\",\n            \"condvar_notify_type\": \"std::sync::Condvar::notify\",\n            \"condvar_notify_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:319:13: 319:35 (#0)\",\n            \"deadlocks\": [\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\"\n              },\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\"\n              }\n            ]\n          },\n          \"explanation\": \"The same lock before Condvar::wait and notify\"\n        }\n      },\n      {\n        \"CondvarDeadlock\": {\n          \"bug_kind\": \"Deadlock before Condvar::wait and notify\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"condvar_wait_type\": \"std::sync::Condvar::wait\",\n            \"condvar_wait_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:31: 264:69 (#0)\",\n            \"condvar_notify_type\": \"std::sync::Condvar::notify\",\n            \"condvar_notify_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:288:9: 288:31 (#0)\",\n            \"deadlocks\": [\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:284:13: 284:22 (#0)\"\n              },\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:284:13: 284:22 (#0)\"\n              }\n            ]\n          },\n          \"explanation\": \"The same lock before Condvar::wait and notify\"\n        }\n      }\n    ]\n[2024-10-01T02:02:57Z WARN  lockbud::callbacks] crate blocking contains bugs: { probably: 4, possibly: 4 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 2 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-01T02:02:58Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:02:58Z WARN  lockbud::callbacks] crate async_executor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-01T02:02:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:02:59Z WARN  lockbud::callbacks] crate async_io contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-01T02:03:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:03:00Z WARN  lockbud::callbacks] crate async_global_executor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 3 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-01T02:03:03Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:858:6: 858:6 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:854:13: 854:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:850:58: 850:67 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:854:13: 854:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/hint.rs:93:27: 93:41 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/hint.rs:111:1: 111:2 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/joystick.rs:432:39: 432:61 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/joystick.rs:438:5: 438:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/keyboard/keycode.rs:520:37: 520:52 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/keyboard/keycode.rs:527:17: 527:18 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:210:39: 210:51 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:214:13: 214:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:285:41: 285:55 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:289:13: 289:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-01T02:03:03Z WARN  lockbud::callbacks] crate sdl2 contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 7 }\n[2024-10-01T02:03:06Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"file::imp::unix::persist\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tempfile-3.13.0/src/file/imp/unix.rs:125:17: 125:36 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tempfile-3.13.0/src/file/imp/unix.rs:128:42: 128:68 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:03:06Z WARN  lockbud::callbacks] crate tempfile contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-01T02:03:07Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:865:50: 865:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:868:9: 868:10 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:874:50: 874:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:877:9: 877:10 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2725:23: 2725:28 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2719:9: 2752:10 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2706:25: 2706:29 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2706:25: 2706:29 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2724:21: 2724:24 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2719:9: 2752:10 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-01T02:03:07Z WARN  lockbud::callbacks] crate nix contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 8 }"]}},{"file":"src/bare/arch/riscv/trap.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_12/kern-crates/zcore-kernel-hal/src/bare/arch/riscv/trap.rs (original lines from 54 to 54)\n-        other => panic!(\"Undefined trap: {:x?} = {:#x}\\n{:#x?}\", other, scause.bits(), tf),\n+        other => panic!(\n+            \"Undefined trap: {:x?} = {:#x}\\n{:#x?}\",\n+            other,\n+            scause.bits(),\n+            tf\n+        ),\n"]}},{"file":"src/common/future.rs","count":1,"kinds":{"Clippy(Error)":["error: usage of a legacy numeric method\n  --> src/common/future.rs:47:44\n   |\n47 |         if self.deadline.as_nanos() < i64::max_value() as u128 {\n   |                                            ^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: `#[deny(clippy::legacy_numeric_constants)]` implied by `#[deny(warnings)]`\nhelp: use the associated constant instead\n   |\n47 |         if self.deadline.as_nanos() < i64::MAX as u128 {\n   |                                            ~~~\n\n"]}},{"file":"src/common/vdso.rs","count":1,"kinds":{"Clippy(Error)":["error: first doc comment paragraph is too long\n --> src/common/vdso.rs:4:1\n  |\n4 | / /// This struct contains constants that are initialized by the kernel\n5 | | /// once at boot time.  From the vDSO code's perspective, they are\n6 | | /// read-only data that can never change.  Hence, no synchronization is\n7 | | /// required to read them.\n  | |_\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n  = note: `#[deny(clippy::too_long_first_doc_paragraph)]` implied by `#[deny(warnings)]`\n\n"]}},{"file":"src/lib.rs","count":1,"kinds":{"Clippy(Error)":["error: private item shadows public glob re-export\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\n   |\nnote: the name `config` in the type namespace is supposed to be publicly re-exported here\n  --> src/lib.rs:49:5\n   |\n49 |     *,\n   |     ^\nnote: but the private item here shadows it\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\nnote: the lint level is defined here\n  --> src/lib.rs:9:9\n   |\n9  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(hidden_glob_reexports)]` implied by `#[deny(warnings)]`\n\n"]}},{"file":"src/libos/mem.rs","count":1,"kinds":{"Clippy(Error)":["error: a `Vec` of `Range` that is only one element\n  --> src/libos/mem.rs:35:13\n   |\n35 |             vec![PAGE_SIZE..PMEM_SIZE]\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_range_in_vec_init\n   = note: `#[deny(clippy::single_range_in_vec_init)]` implied by `#[deny(warnings)]`\nhelp: if you wanted a `Vec` that contains the entire range, try\n   |\n35 |             (PAGE_SIZE..PMEM_SIZE).collect::<std::vec::Vec<usize>>()\n   |\n\n"]}},{"file":"src/utils/lazy_init.rs","count":1,"kinds":{"Clippy(Error)":["error: you should consider adding a `Default` implementation for `LazyInit<T>`\n  --> src/utils/lazy_init.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             inited: AtomicBool::new(false),\n20 | |             data: UnsafeCell::new(MaybeUninit::uninit()),\n21 | |         }\n22 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[deny(clippy::new_without_default)]` implied by `#[deny(warnings)]`\nhelp: try adding this\n   |\n16 + impl<T> Default for LazyInit<T> {\n17 +     fn default() -> Self {\n18 +         Self::new()\n19 +     }\n20 + }\n   |\n\n"]}}]},{"user":"kern-crates","repo":"zCore","pkg":"zcore","count":19,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs","count":3,"kinds":{"Clippy(Error)":["error[E0432]: unresolved import `naive_timer`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs:7:5\n  |\n7 | use naive_timer::Timer;\n  |     ^^^^^^^^^^^ use of undeclared crate or module `naive_timer`\n\n","error[E0599]: no method named `lock` found for struct `NAIVE_TIMER` in the current scope\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs:28:25\n   |\n12 | / lazy_static::lazy_static! {\n13 | |     static ref NAIVE_TIMER:Mutex<Timer> = Mutex::new(Timer::default());\n14 | | }\n   | |_- method `lock` not found for this struct\n...\n28 |               NAIVE_TIMER.lock().add(deadline, callback);\n   |                           ^^^^ method not found in `NAIVE_TIMER`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `lock`, perhaps you need to implement it:\n           candidate #1: `lock_api::mutex::RawMutex`\n\n","error[E0599]: no method named `lock` found for struct `NAIVE_TIMER` in the current scope\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs:32:25\n   |\n12 | / lazy_static::lazy_static! {\n13 | |     static ref NAIVE_TIMER:Mutex<Timer> = Mutex::new(Timer::default());\n14 | | }\n   | |_- method `lock` not found for this struct\n...\n32 |               NAIVE_TIMER.lock().expire(timer_now());\n   |                           ^^^^ method not found in `NAIVE_TIMER`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `lock`, perhaps you need to implement it:\n           candidate #1: `lock_api::mutex::RawMutex`\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/config.rs","count":2,"kinds":{"Clippy(Error)":["error[E0433]: failed to resolve: use of undeclared crate or module `uefi`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/config.rs:3:5\n  |\n3 | use uefi::proto::console::gop::ModeInfo;\n  |     ^^^^ use of undeclared crate or module `uefi`\n\n","error[E0433]: failed to resolve: use of undeclared crate or module `uefi`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/config.rs:4:5\n  |\n4 | use uefi::table::boot::MemoryDescriptor;\n  |     ^^^^ use of undeclared crate or module `uefi`\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/trap.rs","count":2,"kinds":{"Clippy(Error)":["error[E0432]: unresolved import `trapframe::TrapFrame`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/trap.rs:2:5\n  |\n2 | use trapframe::TrapFrame;\n  |     ^^^^^^^^^^^^^^^^^^^^ no `TrapFrame` in the root\n\n","error[E0433]: failed to resolve: use of undeclared crate or module `executor`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/trap.rs:41:17\n   |\n41 |                 executor::handle_timeout();\n   |                 ^^^^^^^^ use of undeclared crate or module `executor`\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/boot.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find function `init` in crate `trapframe`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/boot.rs:24:33\n   |\n24 |             unsafe { trapframe::init() };\n   |                                 ^^^^ not found in `trapframe`\n   |\nhelp: consider importing one of these items\n   |\n3  | use crate::imp::arch::timer::init;\n   |\n3  | use crate::net::init;\n   |\n3  | use zcore_drivers::bus::pci::init;\n   |\n3  | use zcore_drivers::net::e1000::init;\n   |\nhelp: if you import `init`, refer to it directly\n   |\n24 -             unsafe { trapframe::init() };\n24 +             unsafe { init() };\n   |\n\n","error[E0425]: cannot find function `init` in crate `trapframe`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/boot.rs:31:33\n   |\n31 |             unsafe { trapframe::init() };\n   |                                 ^^^^ not found in `trapframe`\n   |\nhelp: consider importing one of these items\n   |\n3  | use crate::imp::arch::timer::init;\n   |\n3  | use crate::net::init;\n   |\n3  | use zcore_drivers::bus::pci::init;\n   |\n3  | use zcore_drivers::net::e1000::init;\n   |\nhelp: if you import `init`, refer to it directly\n   |\n31 -             unsafe { trapframe::init() };\n31 +             unsafe { init() };\n   |\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/cpu.rs","count":1,"kinds":{"Clippy(Error)":["error[E0432]: unresolved import `raw_cpuid`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/cpu.rs:3:5\n  |\n3 | use raw_cpuid::CpuId;\n  |     ^^^^^^^^^ use of undeclared crate or module `raw_cpuid`\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/drivers.rs","count":1,"kinds":{"Clippy(Error)":["error[E0433]: failed to resolve: use of undeclared crate or module `x2apic`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/drivers.rs:36:9\n   |\n36 |     use x2apic::lapic::{TimerDivide, TimerMode};\n   |         ^^^^^^ use of undeclared crate or module `x2apic`\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mem.rs","count":1,"kinds":{"Clippy(Error)":["error[E0433]: failed to resolve: use of undeclared crate or module `uefi`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mem.rs:5:5\n  |\n5 | use uefi::table::boot::MemoryType;\n  |     ^^^^ use of undeclared crate or module `uefi`\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mod.rs","count":1,"kinds":{"Clippy(Error)":["error[E0433]: failed to resolve: use of undeclared crate or module `x86_smpboot`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mod.rs:51:9\n   |\n51 |         x86_smpboot::start_application_processors(\n   |         ^^^^^^^^^^^ use of undeclared crate or module `x86_smpboot`\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/thread.rs","count":1,"kinds":{"Clippy(Error)":["error[E0433]: failed to resolve: use of undeclared crate or module `executor`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/thread.rs:17:13\n   |\n17 |             executor::spawn(future);\n   |             ^^^^^^^^ use of undeclared crate or module `executor`\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/common/context.rs","count":1,"kinds":{"Clippy(Error)":["error[E0599]: no method named `run` found for struct `trapframe::UserContext` in the current scope\n   --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/common/context.rs:232:24\n    |\n232 |                 self.0.run()\n    |                        ^^^ method not found in `trapframe::UserContext`\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=zcore, checker=Clippy\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/kern-crates/zCore\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/elliott10/rcore-fs`\n    Updating git repository `https://github.com/DeathWish5/PreemptiveScheduler`\n    Updating git repository `https://github.com/kern-crates/zcore-kernel-hal.git`\n    Updating git repository `https://github.com/kern-crates/zcore-linux-object.git`\n    Updating git repository `https://github.com/DeathWish5/kernel-sync`\n    Updating git repository `https://github.com/kern-crates/zcore-loader.git`\n    Updating git repository `https://github.com/kern-crates/zcore-zircon-object.git`\n    Updating git repository `https://github.com/Luchangcheng2333/rayboot`\n    Updating git repository `https://github.com/rcore-os/rboot.git`\n    Updating git repository `https://github.com/pleasewhy/unicycle`\n    Updating git repository `https://github.com/smoltcp-rs/smoltcp`\n    Updating git repository `https://github.com/kern-crates/zcore-drivers.git`\n    Updating git repository `https://github.com/rcore-os/x86-smpboot`\n    Updating git repository `https://github.com/rust-embedded/riscv`\n    Updating git repository `https://github.com/kern-crates/zcore-linux-syscall.git`\n    Updating git repository `https://github.com/kern-crates/zcore-zircon-syscall.git`\n    Updating git repository `https://github.com/rzswh/region-allocator`\n    Updating git repository `https://github.com/pleasewhy/uniset`\n    Updating git repository `https://github.com/rcore-os/isomorphic_drivers`\n    Updating git repository `https://github.com/rcore-os/rcore-console`\n Downloading crates ...\n  Downloaded futures-macro v0.3.30\n  Downloaded futures-core v0.3.30\n  Downloaded lock_api v0.4.12\n  Downloaded futures v0.3.30\n  Downloaded git-version v0.3.9\n  Downloaded paste v1.0.15\n  Downloaded autocfg v1.3.0\n  Downloaded futures-task v0.3.30\n  Downloaded quote v1.0.36\n  Downloaded scopeguard v1.2.0\n  Downloaded bit-iter v1.2.0\n  Downloaded managed v0.8.0\n  Downloaded git-version-macro v0.3.9\n  Downloaded log v0.4.21\n  Downloaded lazy_static v1.5.0\n  Downloaded futures-io v0.3.30\n  Downloaded pin-project-lite v0.2.14\n  Downloaded byteorder v1.5.0\n  Downloaded rsdp v2.0.1\n  Downloaded downcast-rs v1.2.1\n  Downloaded futures-channel v0.3.30\n  Downloaded pin-utils v0.1.0\n  Downloaded futures-sink v0.3.30\n  Downloaded hashbrown v0.9.1\n  Downloaded ahash v0.4.8\n  Downloaded x2apic v0.4.3\n  Downloaded acpi v4.1.1\n  Downloaded unicode-ident v1.0.12\n  Downloaded spin v0.9.8\n  Downloaded raw-cpuid v10.7.0\n  Downloaded syn v2.0.68\n  Downloaded futures-util v0.3.30\n  Downloaded woke v0.0.2\n  Downloaded xmas-elf v0.7.0\n  Downloaded trapframe v0.9.0\n  Downloaded numeric-enum-macro v0.2.0\n  Downloaded customizable-buddy v0.0.3\n  Downloaded bit v0.1.1\n  Downloaded x86 v0.46.0\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling autocfg v1.3.0\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.12\n    Checking log v0.4.21\n   Compiling rustversion v1.0.17\n    Checking scopeguard v1.2.0\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling quote v1.0.36\n    Checking bitflags v2.6.0\n    Checking volatile v0.4.6\n   Compiling syn v2.0.68\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n    Checking volatile v0.3.0\n    Checking x86_64 v0.14.12\n    Checking cfg-if v1.0.0\n    Checking lazy_static v1.5.0\n    Checking rsdp v2.0.1\n    Checking managed v0.8.0\n   Compiling x86 v0.46.0\n    Checking byteorder v1.5.0\n    Checking futures-core v0.3.30\n   Compiling trapframe v0.9.0\n    Checking bit v0.1.1\n    Checking futures-sink v0.3.30\n    Checking x2apic v0.4.3\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking acpi v4.1.1\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking pin-project-lite v0.2.14\n    Checking futures-task v0.3.30\n    Checking numeric-enum-macro v0.2.0\n    Checking pin-utils v0.1.0\n    Checking futures-channel v0.3.30\n    Checking futures-io v0.3.30\n    Checking uniset v0.2.0 (https://github.com/pleasewhy/uniset?rev=40edbd7506979daa1d49f935b568873a6a21c5c0#40edbd75)\n    Checking ahash v0.4.8\n    Checking zero v0.1.3\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n    Checking xmas-elf v0.7.0\n    Checking hashbrown v0.9.1\n    Checking unicycle v0.7.1 (https://github.com/pleasewhy/unicycle?rev=904f1c061d4784a5642e092d308cf523a9270c6e#904f1c06)\n    Checking region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\n    Checking woke v0.0.2\n    Checking bit-iter v1.2.0\n    Checking downcast-rs v1.2.1\n   Compiling zcore v0.1.0 (/home/runner/check/repos-default/kern-crates/zCore)\n    Checking customizable-buddy v0.0.3\n    Checking executor v0.1.0 (https://github.com/DeathWish5/PreemptiveScheduler?rev=e8cd353#e8cd3531)\n   Compiling git-version-macro v0.3.9\n   Compiling futures-macro v0.3.30\n    Checking git-version v0.3.9\n    Checking kernel-hal v0.1.0 (https://github.com/kern-crates/zcore-kernel-hal.git?rev=eae409f2#eae409f2)\n    Checking futures-util v0.3.30\nerror: could not compile `kernel-hal` due to 16 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=zcore, checker=Lockbud\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/kern-crates/zCore\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n    Updating crates.io index\n Downloading crates ...\n  Downloaded acpi v4.1.1\n  Downloaded futures v0.3.30\n  Downloaded rsdp v2.0.1\n  Downloaded numeric-enum-macro v0.2.0\n  Downloaded hashbrown v0.9.1\n  Downloaded syn v2.0.68\n  Downloaded git-version v0.3.9\n  Downloaded futures-sink v0.3.30\n  Downloaded futures-io v0.3.30\n  Downloaded futures-channel v0.3.30\n  Downloaded ahash v0.4.8\n  Downloaded git-version-macro v0.3.9\n  Downloaded bit-iter v1.2.0\n  Downloaded customizable-buddy v0.0.3\n  Downloaded trapframe v0.9.0\n  Downloaded woke v0.0.2\n  Downloaded xmas-elf v0.7.0\n  Downloaded x86 v0.46.0\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n   Compiling autocfg v1.3.0\n   Compiling rustversion v1.0.17\n   Compiling log v0.4.21\n[2024-09-28T16:13:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T16:13:24Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling unicode-ident v1.0.12\n   Compiling scopeguard v1.2.0\n   Compiling raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling quote v1.0.36\n   Compiling bitflags v2.6.0\n   Compiling volatile v0.4.6\n   Compiling syn v2.0.68\n   Compiling x86_64 v0.14.12\n   Compiling spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling volatile v0.3.0\n   Compiling cfg-if v1.0.0\n   Compiling lazy_static v1.5.0\n   Compiling rsdp v2.0.1\n   Compiling trapframe v0.9.0\n   Compiling managed v0.8.0\n   Compiling x86 v0.46.0\n   Compiling byteorder v1.5.0\n   Compiling futures-core v0.3.30\n   Compiling bit v0.1.1\n   Compiling futures-sink v0.3.30\n   Compiling smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n   Compiling acpi v4.1.1\n   Compiling lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n   Compiling x2apic v0.4.3\n   Compiling isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n   Compiling virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n   Compiling pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n   Compiling pin-project-lite v0.2.14\n   Compiling device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n   Compiling numeric-enum-macro v0.2.0\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.30\n   Compiling futures-channel v0.3.30\n   Compiling futures-io v0.3.30\n   Compiling ahash v0.4.8\n   Compiling uniset v0.2.0 (https://github.com/pleasewhy/uniset?rev=40edbd7506979daa1d49f935b568873a6a21c5c0#40edbd75)\n   Compiling zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n   Compiling zero v0.1.3\n   Compiling xmas-elf v0.7.0\n   Compiling unicycle v0.7.1 (https://github.com/pleasewhy/unicycle?rev=904f1c061d4784a5642e092d308cf523a9270c6e#904f1c06)\n   Compiling hashbrown v0.9.1\n   Compiling woke v0.0.2\n   Compiling bit-iter v1.2.0\n   Compiling downcast-rs v1.2.1\n   Compiling region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\n   Compiling executor v0.1.0 (https://github.com/DeathWish5/PreemptiveScheduler?rev=e8cd353#e8cd3531)\nerror[E0557]: feature has been removed\n --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/lib.rs:4:12\n  |\n4 | #![feature(generators, generator_trait)]\n  |            ^^^^^^^^^^ feature has been removed\n  |\n  = note: renamed to `coroutines`\n\nerror[E0635]: unknown feature `btree_drain_filter`\n --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:2:12\n  |\n2 | #![feature(btree_drain_filter)]\n  |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `core::ops::Generator`, `core::ops::GeneratorState`\n --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs:6:17\n  |\n6 | use core::ops::{Generator, GeneratorState};\n  |                 ^^^^^^^^^  ^^^^^^^^^^^^^^ no `GeneratorState` in `ops`\n  |                 |\n  |                 no `Generator` in `ops`\n\nerror[E0658]: yield syntax is experimental\n   --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs:227:33\n    |\n227 | ...                   yield found_key;\n    |                       ^^^^^^^^^^^^^^^\n    |\n    = note: see issue #43122 <https://github.com/rust-lang/rust/issues/43122> for more information\n    = help: add `#![feature(coroutines)]` to the crate attributes to enable\n    = note: this compiler was built on 2024-05-20; consider upgrading it if it is out of date\n\nerror[E0658]: yield syntax is experimental\n   --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs:244:17\n    |\n244 |                 yield None;\n    |                 ^^^^^^^^^^\n    |\n    = note: see issue #43122 <https://github.com/rust-lang/rust/issues/43122> for more information\n    = help: add `#![feature(coroutines)]` to the crate attributes to enable\n    = note: this compiler was built on 2024-05-20; consider upgrading it if it is out of date\n\nerror: `yield` can only be used in `#[coroutine]` closures, or `gen` blocks\n   --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs:227:33\n    |\n227 | ...                   yield found_key;\n    |                       ^^^^^^^^^^^^^^^\n    |\nhelp: use `#[coroutine]` to make this closure a coroutine\n    |\n212 |         #[coroutine] static move || {\n    |         ++++++++++++\n\nerror[E0635]: unknown feature `generator_trait`\n --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/lib.rs:4:24\n  |\n4 | #![feature(generators, generator_trait)]\n  |                        ^^^^^^^^^^^^^^^\n\nerror[E0635]: unknown feature `atomic_mut_ptr`\n --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/lib.rs:6:12\n  |\n6 | #![feature(atomic_mut_ptr)]\n  |            ^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `drain_filter` found for struct `alloc::collections::BTreeSet` in the current scope\n   --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:120:14\n    |\n119 | /         self.regions\n120 | |             .drain_filter(|r| {\n    | |             -^^^^^^^^^^^^ method not found in `BTreeSet<Region>`\n    | |_____________|\n    |\n\nSome errors have detailed explanations: E0432, E0557, E0635, E0658.\nFor more information about an error, try `rustc --explain E0432`.\nSome errors have detailed explanations: E0599, E0635.\nFor more information about an error, try `rustc --explain E0599`.\nerror: could not compile `region-alloc` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `executor` (lib) due to 7 previous errors\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=zcore, checker=Mirai\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zCore\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n   Compiling autocfg v1.3.0\n   Compiling rustversion v1.0.17\n   Compiling unicode-ident v1.0.12\n    Checking log v0.4.21\n    Checking scopeguard v1.2.0\n    Checking raw-cpuid v10.7.0\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_12/kern-crates/zCore/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-09-28T16:13:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T16:13:24Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"rcore-tutorial-v3-with-hal-component","pkg":"user_lib","count":18,"raw_reports":[{"file":"src/lib.rs","count":6,"kinds":{"Mirai":["warning: Heap allocation error, layout = {}\n  --> src/lib.rs:29:5\n   |\n29 |     panic!(\"Heap allocation error, layout = {:?}\", layout);\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: sys_exit never returns!\n   --> src/lib.rs:91:5\n    |\n91  |     sys_exit(exit_code);\n    |     ^^^^^^^^^^^^^^^^^^^\n    |\nnote: related location\n   --> src/syscall.rs:118:5\n    |\n118 |     panic!(\"sys_exit never returns!\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to add with overflow\n   --> src/lib.rs:138:28\n    |\n138 |     while sys_get_time() < start + period_ms as isize {\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: Heap allocation error, layout = {}\n  --> src/lib.rs:29:5\n   |\n29 |     panic!(\"Heap allocation error, layout = {:?}\", layout);\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: sys_exit never returns!\n   --> src/lib.rs:91:5\n    |\n91  |     sys_exit(exit_code);\n    |     ^^^^^^^^^^^^^^^^^^^\n    |\nnote: related location\n   --> src/syscall.rs:118:5\n    |\n118 |     panic!(\"sys_exit never returns!\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to add with overflow\n   --> src/lib.rs:138:28\n    |\n138 |     while sys_get_time() < start + period_ms as isize {\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"src/syscall.rs","count":4,"kinds":{"Mirai":["warning: Inline assembly code cannot be analyzed by MIRAI.\n  --> src/syscall.rs:57:9\n   |\n57 | /         asm!(\n58 | |             \"\n59 | |                 push r11\n60 | |                 push rcx\n...  |\n68 | |             inlateout(\"rax\") id => ret\n69 | |         );\n   | |_________^\n\n","warning: sys_exit never returns!\n   --> src/syscall.rs:118:5\n    |\n118 |     panic!(\"sys_exit never returns!\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: Inline assembly code cannot be analyzed by MIRAI.\n  --> src/syscall.rs:57:9\n   |\n57 | /         asm!(\n58 | |             \"\n59 | |                 push r11\n60 | |                 push rcx\n...  |\n68 | |             inlateout(\"rax\") id => ret\n69 | |         );\n   | |_________^\n\n","warning: sys_exit never returns!\n   --> src/syscall.rs:118:5\n    |\n118 |     panic!(\"sys_exit never returns!\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-1.3.2/src/lib.rs","count":1,"kinds":{"Clippy(Error)":["error: &-masking with zero\n  --> src/lib.rs:62:1\n   |\n62 | / bitflags! {\n63 | |     pub struct OpenFlags: u32 {\n64 | |         const RDONLY = 0;\n65 | |         const WRONLY = 1 << 0;\n...  |\n69 | |     }\n70 | | }\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n   = note: `#[deny(clippy::bad_bit_mask)]` on by default\n   = note: this error originates in the macro `__impl_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=user_lib, checker=Clippy\n// toolchain=nightly-2023-12-01, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/user\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://github.com/rcore-os/riscv`\n   Compiling memchr v2.7.4\n   Compiling regex-syntax v0.8.4\n   Compiling semver-parser v0.7.0\n   Compiling lazy_static v1.5.0\n    Checking bitflags v1.3.2\n    Checking spin v0.7.1\n   Compiling semver v0.9.0\n   Compiling rustc_version v0.2.3\n   Compiling aho-corasick v1.1.3\n   Compiling bare-metal v0.2.5\n    Checking bit_field v0.10.2\n    Checking log v0.4.22\n    Checking buddy_system_allocator v0.6.0\n   Compiling regex-automata v0.4.7\n   Compiling regex v1.10.6\n   Compiling riscv-target v0.1.2\n   Compiling riscv v0.6.0 (https://github.com/rcore-os/riscv#11d43cf7)\n    Checking user_lib v0.1.0 (/home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/user)\nerror: could not compile `user_lib` (lib) due to 2 previous errors\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=user_lib, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/user\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\nwarning: `/home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\n   Compiling memchr v2.7.4\n   Compiling regex-syntax v0.8.4\n   Compiling semver-parser v0.7.0\n   Compiling lazy_static v1.5.0\n   Compiling bit_field v0.10.2\n   Compiling log v0.4.22\n[2024-09-28T16:05:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T16:05:14Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling semver v0.9.0\n   Compiling bitflags v1.3.2\n   Compiling spin v0.7.1\n   Compiling rustc_version v0.2.3\n   Compiling aho-corasick v1.1.3\n   Compiling bare-metal v0.2.5\n   Compiling buddy_system_allocator v0.6.0\n   Compiling regex-automata v0.4.7\n   Compiling regex v1.10.6\n   Compiling riscv-target v0.1.2\n[2024-09-28T16:05:18Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T16:05:18Z WARN  lockbud::callbacks] crate riscv_target contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling riscv v0.6.0 (https://github.com/rcore-os/riscv#11d43cf7)\n   Compiling user_lib v0.1.0 (/home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/user)\nerror: unwinding panics are not supported without std\n  |\n  = help: using nightly cargo, use -Zbuild-std with panic=\"abort\" to avoid unwinding\n  = note: since the core library is usually precompiled with panic=\"unwind\", rebuilding your crate with panic=\"abort\" may not be enough to fix the problem\n\nerror: could not compile `user_lib` (bin \"forktest_simple\") due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `user_lib` (bin \"count_lines\") due to 1 previous error\nerror: could not compile `user_lib` (bin \"fantastic_text\") due to 1 previous error\nerror: could not compile `user_lib` (bin \"pipe_large_test\") due to 1 previous error\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=user_lib, checker=Mirai\n// toolchain=nightly-2023-12-01, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/user\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling memchr v2.7.4\n   Compiling regex-syntax v0.8.5\n   Compiling semver-parser v0.7.0\n   Compiling lazy_static v1.5.0\n    Checking spin v0.7.1\n   Compiling semver v0.9.0\n    Checking log v0.4.22\n   Compiling aho-corasick v1.1.3\n   Compiling rustc_version v0.2.3\n   Compiling bare-metal v0.2.5\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n    Checking buddy_system_allocator v0.6.0\n   Compiling regex-automata v0.4.8\n   Compiling regex v1.11.0\n   Compiling riscv-target v0.1.2\n   Compiling riscv v0.6.0 (https://github.com/rcore-os/riscv#11d43cf7)\n    Checking user_lib v0.1.0 (/home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/user)\n    Finished dev [unoptimized + debuginfo] target(s) in 7.13s\n    Checking user_lib v0.1.0 (/home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/user)\nerror: could not compile `user_lib` (bin \"forktree\") due to 2 previous errors\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-09-28T16:05:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T16:05:14Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-28T16:05:18Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T16:05:18Z WARN  lockbud::callbacks] crate riscv_target contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/bin/sig_tests.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/user/src/bin/sig_tests.rs (original lines from 131 to 131)\n-        loop {yield_();}\n+        loop {\n+            yield_();\n+        }\n"]}},{"file":"src/bin/usertests.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/repos-default/kern-crates/rcore-tutorial-v3-with-hal-component/user/src/bin/usertests.rs (original lines from 102 to 102)\n-    \n+\n"]}},{"file":"unkonwn-but-maybe-important","count":1,"kinds":{"Mirai":["error: language item required, but not found: `eh_personality`\n  |\n  = note: this can occur when a binary crate with `#![no_std]` is compiled for a target where `eh_personality` is defined in the standard library\n  = help: you may be able to compile for a target that doesn't need `eh_personality`, specify a target with `--target` or in `.cargo/config`\n\n"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-embedded-hal","count":17,"raw_reports":[{"file":"src/shared_bus/blocking/i2c.rs","count":11,"kinds":{"Clippy(Warn)":["warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n","warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n","warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n","warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n","warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n","warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n","warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n","warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n","warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n","warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n","warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"]}},{"file":"src/adapter/blocking_async.rs","count":2,"kinds":{"Clippy(Warn)":["warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n","warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"]}},{"file":"src/shared_bus/asynch/spi.rs","count":2,"kinds":{"Clippy(Warn)":["warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n","warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"]}},{"file":"src/shared_bus/blocking/spi.rs","count":2,"kinds":{"Clippy(Warn)":["warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n","warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"]}}]},{"user":"kern-crates","repo":"pconst","pkg":"pconst","count":16,"raw_reports":[{"file":"src/signal/mod.rs","count":6,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `SignalHandlers`\n  --> src/signal/mod.rs:30:5\n   |\n30 | /     pub fn new() -> Self {\n31 | |         Self {\n32 | |             actions: [None; SIGSET_SIZE_IN_BIT],\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl Default for SignalHandlers {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n","warning: this lifetime isn't used in the function definition\n  --> src/signal/mod.rs:44:23\n   |\n44 |     pub fn get_action<'a>(&self, signum: usize, action_pos: &mut SigAction) {\n   |                       ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n","warning: you should consider adding a `Default` implementation for `SignalReceivers`\n  --> src/signal/mod.rs:80:5\n   |\n80 | /     pub fn new() -> Self {\n81 | |         Self {\n82 | |             mask: SimpleBitSet::default(),\n83 | |             sig_received: SimpleBitSet::default(),\n84 | |         }\n85 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n78 + impl Default for SignalReceivers {\n79 +     fn default() -> Self {\n80 +         Self::new()\n81 +     }\n82 + }\n   |\n\n","warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> src/signal/mod.rs:165:1\n    |\n165 | impl Into<Vec<SignalNumber>> for SimpleBitSet {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n    = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<signal::SimpleBitSet>`\n    |\n165 ~ impl From<SimpleBitSet> for Vec<SignalNumber> {\n166 ~     fn from(val: SimpleBitSet) -> Self {\n167 |         let mut ans = Vec::new();\n168 |         for i in 0..64 {\n169 ~             if val.0 & (1 << i) != 0 {\n    |\n\n","warning: suspicious use of `|` in `Add` impl\n   --> src/signal/mod.rs:201:21\n    |\n201 |         Self(self.0 | rhs.0)\n    |                     ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_arithmetic_impl\n    = note: `#[warn(clippy::suspicious_arithmetic_impl)]` on by default\n\n","warning: suspicious use of `|` in `AddAssign` impl\n   --> src/signal/mod.rs:207:16\n    |\n207 |         self.0 |= rhs.0;\n    |                ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_op_assign_impl\n    = note: `#[warn(clippy::suspicious_op_assign_impl)]` on by default\n\n"]}},{"file":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-1.3.2/src/lib.rs","count":4,"kinds":{"Clippy(Error)":["error: &-masking with zero\n   --> src/io.rs:176:1\n    |\n176 | / bitflags! {\n177 | |     pub struct FaccessatMode: u32 {\n178 | |         const F_OK = 0;\n179 | |         const R_OK = 4;\n...   |\n186 | |     }\n187 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n    = note: `#[deny(clippy::bad_bit_mask)]` on by default\n    = note: this error originates in the macro `__impl_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: &-masking with zero\n   --> src/io.rs:345:1\n    |\n345 | / bitflags::bitflags! {\n346 | |     pub struct OpenFlags: usize {\n347 | |         // reserve 3 bits for the access mode\n348 | |         const O_RDONLY      = 0;\n...   |\n371 | |     }\n372 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n    = note: this error originates in the macro `__impl_bitflags` which comes from the expansion of the macro `bitflags::bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: &-masking with zero\n   --> src/io.rs:612:1\n    |\n612 | / bitflags! {\n613 | |      /// renameat flag\n614 | |     pub struct Renameat2Flags: u32 {\n615 | |         /// Go back to renameat\n...   |\n623 | |     }\n624 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n    = note: this error originates in the macro `__impl_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","error: &-masking with zero\n   --> src/io.rs:625:1\n    |\n625 | / bitflags! {\n626 | |     pub struct ProtFlags: u32 {\n627 | |         const PROT_NONE = 0x0;\n628 | |         const PROT_READ = 0x1;\n...   |\n631 | |     }\n632 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n    = note: this error originates in the macro `__impl_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"src/io.rs","count":4,"kinds":{"Clippy(Warn)":["warning: this `impl` can be derived\n   --> src/io.rs:93:1\n    |\n93  | / impl Default for FsStat {\n94  | |     fn default() -> Self {\n95  | |         Self {\n96  | |             f_type: 0,\n...   |\n109 | |     }\n110 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n66  + #[derive(Default)]\n67  | pub struct FsStat {\n    |\n\n","warning: struct `Dirent64` has a public `len` method, but no `is_empty` method\n   --> src/io.rs:456:5\n    |\n456 |     pub fn len(&self) -> usize {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_without_is_empty\n    = note: `#[warn(clippy::len_without_is_empty)]` on by default\n\n"],"Mirai":["error[E0658]: use of unstable library feature 'offset_of'\n   --> src/io.rs:453:9\n    |\n453 |         offset_of!(Self, name)\n    |         ^^^^^^^^^\n    |\n    = note: see issue #106655 <https://github.com/rust-lang/rust/issues/106655> for more information\n    = help: add `#![feature(offset_of)]` to the crate attributes to enable\n\n","error[E0658]: use of unstable library feature 'offset_of'\n --> src/io.rs:1:24\n  |\n1 | use core::{fmt::Debug, mem::offset_of};\n  |                        ^^^^^^^^^^^^^^\n  |\n  = note: see issue #106655 <https://github.com/rust-lang/rust/issues/106655> for more information\n  = help: add `#![feature(offset_of)]` to the crate attributes to enable\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=pconst, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_8/kern-crates/pconst\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://github.com/asterinas/pod`\n    Updating git repository `https://github.com/os-module/syscall-table.git`\n    Updating git repository `https://github.com/os-module/inventory`\n     Locking 16 packages to latest compatible versions\n      Adding bitflags v1.3.2 (available: v2.6.0)\n Downloading crates ...\n  Downloaded int-enum v1.1.2\n  Downloaded yansi v1.0.1\n  Downloaded proc-macro2-diagnostics v0.10.1\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling version_check v0.9.5\n   Compiling syn v1.0.109\n   Compiling yansi v1.0.1\n    Checking bitflags v1.3.2\n   Compiling proc-macro2-diagnostics v0.10.1\n   Compiling int-enum v1.1.2\n   Compiling quote v1.0.37\n   Compiling syn v2.0.79\n   Compiling pod-derive v0.1.0 (https://github.com/asterinas/pod?rev=d7dba56#d7dba56c)\n    Checking pod v0.1.0 (https://github.com/asterinas/pod?rev=d7dba56#d7dba56c)\n    Checking pconst v0.1.0 (/home/runner/check/batch_8/kern-crates/pconst)\nerror: could not compile `pconst` (lib) due to 4 previous errors; 8 warnings emitted\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=pconst, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_8/kern-crates/pconst\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling version_check v0.9.5\n   Compiling syn v1.0.109\n   Compiling yansi v1.0.1\n    Checking bitflags v1.3.2\n   Compiling proc-macro2-diagnostics v0.10.1\n   Compiling int-enum v1.1.2\n   Compiling quote v1.0.37\n   Compiling syn v2.0.79\n   Compiling pod-derive v0.1.0 (https://github.com/asterinas/pod?rev=d7dba56#d7dba56c)\n    Checking pod v0.1.0 (https://github.com/asterinas/pod?rev=d7dba56#d7dba56c)\n    Checking pconst v0.1.0 (/home/runner/check/batch_8/kern-crates/pconst)\nerror: could not compile `pconst` (lib) due to 3 previous errors\n"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-boot","count":15,"raw_reports":[{"file":"src/boot_loader.rs","count":7,"kinds":{"Clippy(Warn)":["warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n","warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"]}},{"file":"src/firmware_updater/blocking.rs","count":5,"kinds":{"Clippy(Warn)":["warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"]}},{"file":"src/firmware_updater/asynch.rs","count":3,"kinds":{"Clippy(Warn)":["warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"]}}]},{"user":"Starry-OS","repo":"Starry","pkg":"mingo","count":15,"raw_reports":[{"file":"src/main.rs","count":6,"kinds":{"Mirai":["error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n","error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n","error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"],"Clippy(Error)":["error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n","error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n","error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"]}},{"file":"src/cpu.rs","count":2,"kinds":{"Clippy(Error)":["error[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\n"],"Mirai":["error[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\n"]}},{"file":"src/panic_wait.rs","count":2,"kinds":{"Clippy(Error)":["error: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"],"Mirai":["error: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"unkonwn-but-maybe-important","count":2,"kinds":{"Clippy(Error)":["error: unwinding panics are not supported without std\n  |\n  = help: using nightly cargo, use -Zbuild-std with panic=\"abort\" to avoid unwinding\n  = note: since the core library is usually precompiled with panic=\"unwind\", rebuilding your crate with panic=\"abort\" may not be enough to fix the problem\n\n"],"Mirai":["error: language item required, but not found: `eh_personality`\n  |\n  = note: this can occur when a binary crate with `#![no_std]` is compiled for a target where `eh_personality` is defined in the standard library\n  = help: you may be able to compile for a target that doesn't need `eh_personality`, specify a target with `--target` or in `.cargo/config`\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=mingo, checker=Clippy\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/Starry-OS/Starry/tools/raspi4/chainloader\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling mingo v0.6.0 (/home/runner/check/repos-default/Starry-OS/Starry/tools/raspi4/chainloader)\nerror: could not compile `mingo` (bin \"kernel\") due to 7 previous errors\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=mingo, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/Starry-OS/Starry/tools/raspi4/chainloader\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling mingo v0.6.0 (/home/runner/check/repos-default/Starry-OS/Starry/tools/raspi4/chainloader)\nerror: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\nerror[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\nerror[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\nerror[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\nerror: unwinding panics are not supported without std\n  |\n  = help: using nightly cargo, use -Zbuild-std with panic=\"abort\" to avoid unwinding\n  = note: since the core library is usually precompiled with panic=\"unwind\", rebuilding your crate with panic=\"abort\" may not be enough to fix the problem\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `mingo` (bin \"kernel\") due to 6 previous errors\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=mingo, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry/tools/raspi4/chainloader\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/Starry-OS/Starry/tools/raspi4/chainloader)\nerror: could not compile `mingo` (bin \"kernel\") due to 7 previous errors\n"]}}]},{"user":"guoweikang","repo":"osl","pkg":"osl","count":15,"raw_reports":[{"file":"src/error.rs","count":6,"kinds":{"Clippy(Error)":["error[E0412]: cannot find type `Error` in this scope\n  --> src/error.rs:58:46\n   |\n58 | pub type Result<T> = core::result::Result<T, Error>;\n   |                                              ^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n\n","error[E0412]: cannot find type `Error` in this scope\n  --> src/error.rs:62:14\n   |\n62 |     Err::<T, Error>(Error::from(errno))\n   |              ^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n\n","error[E0433]: failed to resolve: use of undeclared type `Error`\n  --> src/error.rs:62:21\n   |\n62 |     Err::<T, Error>(Error::from(errno))\n   |                     ^^^^^ use of undeclared type `Error`\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n\n"],"Mirai":["error[E0412]: cannot find type `Error` in this scope\n  --> src/error.rs:58:46\n   |\n58 | pub type Result<T> = core::result::Result<T, Error>;\n   |                                              ^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n35 + use derive_builder::export::core::error::Error;\n   |\n35 + use derive_builder::export::core::fmt::Error;\n   |\n\n","error[E0412]: cannot find type `Error` in this scope\n  --> src/error.rs:62:14\n   |\n62 |     Err::<T, Error>(Error::from(errno))\n   |              ^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n35 + use derive_builder::export::core::error::Error;\n   |\n35 + use derive_builder::export::core::fmt::Error;\n   |\n\n","error[E0433]: failed to resolve: use of undeclared type `Error`\n  --> src/error.rs:62:21\n   |\n62 |     Err::<T, Error>(Error::from(errno))\n   |                     ^^^^^ use of undeclared type `Error`\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n35 + use derive_builder::export::core::error::Error;\n   |\n35 + use derive_builder::export::core::fmt::Error;\n   |\n\n"]}},{"file":"src/driver/irq.rs","count":4,"kinds":{"Clippy(Error)":["error[E0412]: cannot find type `Return` in this scope\n  --> src/driver/irq.rs:40:42\n   |\n40 | pub fn to_irq_return(val: ReturnEnum) -> Return {\n   |                                          ^^^^^^ not found in this scope\n\n","error[E0433]: failed to resolve: use of undeclared type `Return`\n  --> src/driver/irq.rs:41:5\n   |\n41 |     Return::from(val)\n   |     ^^^^^^ use of undeclared type `Return`\n\n"],"Mirai":["error[E0412]: cannot find type `Return` in this scope\n  --> src/driver/irq.rs:40:42\n   |\n40 | pub fn to_irq_return(val: ReturnEnum) -> Return {\n   |                                          ^^^^^^ not found in this scope\n\n","error[E0433]: failed to resolve: use of undeclared type `Return`\n  --> src/driver/irq.rs:41:5\n   |\n41 |     Return::from(val)\n   |     ^^^^^^ use of undeclared type `Return`\n\n"]}},{"file":"src/sync.rs","count":2,"kinds":{"Mirai":["error[E0412]: cannot find type `Arc` in this scope\n  --> src/sync.rs:33:24\n   |\n33 |     fn new() -> Result<Arc<Self>>;\n   |                        ^^^ not found in this scope\n\n"],"Clippy(Error)":["error[E0412]: cannot find type `Arc` in this scope\n  --> src/sync.rs:33:24\n   |\n33 |     fn new() -> Result<Arc<Self>>;\n   |                        ^^^ not found in this scope\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=osl, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/guoweikang/osl\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/axsync.git`\n    Updating git repository `https://github.com/Starry-OS/axtask.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/kern-crates/axbacktrace.git`\n    Updating git repository `https://github.com/Starry-OS/axsignal.git`\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n     Locking 77 packages to latest compatible versions\n Downloading crates ...\n  Downloaded derive_builder_macro v0.20.1\n  Downloaded ident_case v1.0.1\n  Downloaded darling_macro v0.20.10\n  Downloaded darling v0.20.10\n  Downloaded strsim v0.11.1\n  Downloaded derive_builder v0.20.1\n  Downloaded darling_core v0.20.10\n  Downloaded derive_builder_core v0.20.1\n  Downloaded fnv v1.0.7\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling strsim v0.11.1\n   Compiling fnv v1.0.7\n   Compiling ident_case v1.0.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling quote v1.0.37\n   Compiling syn v2.0.79\n   Compiling darling_core v0.20.10\n   Compiling darling_macro v0.20.10\n   Compiling darling v0.20.10\n   Compiling derive_builder_core v0.20.1\n   Compiling derive_builder_macro v0.20.1\n    Checking derive_builder v0.20.1\n    Checking osl v0.1.0 (/home/runner/check/batch_1/guoweikang/osl)\nerror: could not compile `osl` (lib) due to 6 previous errors\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=osl, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/guoweikang/osl\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling ident_case v1.0.1\n   Compiling strsim v0.11.1\n   Compiling fnv v1.0.7\n   Compiling bitflags v2.6.0\n   Compiling cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling syn v2.0.79\n   Compiling darling_core v0.20.10\n   Compiling darling_macro v0.20.10\n   Compiling darling v0.20.10\n   Compiling derive_builder_core v0.20.1\n   Compiling derive_builder_macro v0.20.1\n   Compiling derive_builder v0.20.1\n   Compiling osl v0.1.0 (/home/runner/check/batch_1/guoweikang/osl)\nerror[E0412]: cannot find type `Error` in this scope\n  --> src/error.rs:58:46\n   |\n58 | pub type Result<T> = core::result::Result<T, Error>;\n   |                                              ^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n\nerror[E0412]: cannot find type `Error` in this scope\n  --> src/error.rs:62:14\n   |\n62 |     Err::<T, Error>(Error::from(errno))\n   |              ^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n\nerror[E0433]: failed to resolve: use of undeclared type `Error`\n  --> src/error.rs:62:21\n   |\n62 |     Err::<T, Error>(Error::from(errno))\n   |                     ^^^^^ use of undeclared type `Error`\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n\nerror[E0412]: cannot find type `Arc` in this scope\n  --> src/sync.rs:33:24\n   |\n33 |     fn new() -> Result<Arc<Self>>;\n   |                        ^^^ not found in this scope\n\nerror[E0412]: cannot find type `Return` in this scope\n  --> src/driver/irq.rs:40:42\n   |\n40 | pub fn to_irq_return(val: ReturnEnum) -> Return {\n   |                                          ^^^^^^ not found in this scope\n\nerror[E0433]: failed to resolve: use of undeclared type `Return`\n  --> src/driver/irq.rs:41:5\n   |\n41 |     Return::from(val)\n   |     ^^^^^^ use of undeclared type `Return`\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\nerror: could not compile `osl` (lib) due to 6 previous errors\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=osl, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/guoweikang/osl\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling ident_case v1.0.1\n   Compiling fnv v1.0.7\n   Compiling strsim v0.11.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling quote v1.0.37\n   Compiling syn v2.0.79\n   Compiling darling_core v0.20.10\n   Compiling darling_macro v0.20.10\n   Compiling darling v0.20.10\n   Compiling derive_builder_core v0.20.1\n   Compiling derive_builder_macro v0.20.1\n    Checking derive_builder v0.20.1\n    Checking osl v0.1.0 (/home/runner/check/batch_1/guoweikang/osl)\nerror: could not compile `osl` (lib) due to 7 previous errors\n"]}}]},{"user":"kern-crates","repo":"rCoreloongArch","pkg":"vbe","count":15,"raw_reports":[{"file":"vbe/src/old_impl/vbe.rs","count":3,"kinds":{"Clippy(Warn)":["warning: operator precedence can trip the unwary\n   --> vbe/src/old_impl/vbe.rs:221:28\n    |\n221 |                     tabs = (self.x_position + 8) & !(8 - 1) - self.x_position;\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(self.x_position + 8) & (!(8 - 1) - self.x_position)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n    = note: `#[warn(clippy::precedence)]` on by default\n\n","warning: casting to the same type is unnecessary (`usize` -> `usize`)\n  --> vbe/src/old_impl/vbe.rs:99:54\n   |\n99 |                     let addr = frame_buffer_addr.add(((y + i) * weight + x + j) as usize);\n   |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `((y + i) * weight + x + j)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> vbe/src/old_impl/vbe.rs:131:46\n    |\n131 |             let addr = frame_buffer_addr.add((y * weight + x) as usize);\n    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(y * weight + x)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"]}},{"file":"vbe/src/gui/basic/icon.rs","count":2,"kinds":{"Clippy(Warn)":["warning: manual implementation of an assign operation\n  --> vbe/src/gui/basic/icon.rs:72:17\n   |\n72 |                 x = x + 70;\n   |                 ^^^^^^^^^^ help: replace it with: `x += 70`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n   = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n","warning: manual implementation of an assign operation\n  --> vbe/src/gui/basic/icon.rs:75:17\n   |\n75 |                 y = y + 90;\n   |                 ^^^^^^^^^^ help: replace it with: `y += 90`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n\n"]}},{"file":"vbe/src/gui/basic/window.rs","count":2,"kinds":{"Clippy(Warn)":["warning: returning the result of a `let` binding from a block\n   --> vbe/src/gui/basic/window.rs:109:9\n    |\n79  | /         let window = Arc::new(Self {\n80  | |             id,\n81  | |             inner: unsafe {\n82  | |                 Mutex::new(WindowsInner {\n...   |\n98  | |             },\n99  | |         });\n    | |___________- unnecessary `let` binding\n...\n109 |           window\n    |           ^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n    = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n    |\n79  ~         \n80  |         // use log::info;\n  ...\n88  |         // );\n89  ~         Arc::new(Self {\n90  +             id,\n91  +             inner: unsafe {\n92  +                 Mutex::new(WindowsInner {\n93  +                     event: VecDeque::new(),\n94  +                     name: \"\".to_string(),\n95  +                     component: {\n96  +                         let mut v: VecDeque<Arc<dyn Component>> = VecDeque::new();\n97  +                         v.push_back(bar);\n98  +                         v.push_back(windows.clone());\n99  +                         v\n100 +                     },\n101 +                     graphic: Graphics {\n102 +                         size,\n103 +                         point,\n104 +                         drv: VBE_DEVICE.clone(),\n105 +                     },\n106 +                     panel: windows.clone(),\n107 +                 })\n108 +             },\n109 +         })\n    |\n\n","warning: returning the result of a `let` binding from a block\n   --> vbe/src/gui/basic/window.rs:135:9\n    |\n134 |         let event = inner.event.pop_front();\n    |         ------------------------------------ unnecessary `let` binding\n135 |         event\n    |         ^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n134 ~         \n135 ~         inner.event.pop_front()\n    |\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=vbe, checker=Clippy\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/kern-crates/rCoreloongArch/vbe\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling num-traits v0.2.19\n   Compiling az v1.2.1\n   Compiling memchr v2.3.4\n   Compiling lock_api v0.4.12\n   Compiling nom v6.2.2\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking float-cmp v0.8.0\n    Checking embedded-graphics-core v0.3.3\n    Checking embedded-graphics v0.7.1\n    Checking tinybmp v0.3.3\n    Checking vbe v0.1.0 (/home/runner/check/repos-default/kern-crates/rCoreloongArch/vbe)\nerror: could not compile `vbe` (lib) due to 2 previous errors; 11 warnings emitted\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=vbe, checker=Mirai\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/rCoreloongArch/vbe\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking tinybmp v0.3.3\n    Checking lazy_static v1.5.0\n    Checking vbe v0.1.0 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/vbe)\nerror: could not compile `vbe` (lib)\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-09-28T16:03:20Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T16:03:20Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"vbe/src/driver/mod.rs","count":1,"kinds":{"Clippy(Error)":["error: mutable borrow from immutable input(s)\n  --> vbe/src/driver/mod.rs:14:35\n   |\n14 |     fn get_frame_buffer(&self) -> &mut [u8];\n   |                                   ^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> vbe/src/driver/mod.rs:14:25\n   |\n14 |     fn get_frame_buffer(&self) -> &mut [u8];\n   |                         ^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"]}},{"file":"vbe/src/gui/basic/image.rs","count":1,"kinds":{"Clippy(Warn)":["warning: casting raw pointers to the same type and constness is unnecessary (`*const u8` -> `*const u8`)\n  --> vbe/src/gui/basic/image.rs:52:23\n   |\n52 |             let ptr = inner.image.as_ptr() as *const u8;\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `inner.image.as_ptr()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n   = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"]}},{"file":"vbe/src/gui/basic/manager.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `Screen`\n  --> vbe/src/gui/basic/manager.rs:32:5\n   |\n32 | /     pub fn new() -> Self {\n33 | |         Self {\n34 | |             inner: unsafe {\n35 | |                 Mutex::new(ScreenInner {\n...  |\n40 | |         }\n41 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n31 + impl Default for Screen {\n32 +     fn default() -> Self {\n33 +         Self::new()\n34 +     }\n35 + }\n   |\n\n"]}},{"file":"vbe/src/gui/basic/panel.rs","count":1,"kinds":{"Clippy(Warn)":["warning: useless conversion to the same type: `core::ops::Range<usize>`\n  --> vbe/src/gui/basic/panel.rs:55:9\n   |\n55 |         (0..len).into_iter().for_each(|i| {\n   |         ^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `(0..len)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n   = note: `#[warn(clippy::useless_conversion)]` on by default\n\n"]}},{"file":"vbe/src/id_allocator.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `RecycleAllocator`\n  --> vbe/src/id_allocator.rs:9:5\n   |\n9  | /     pub fn new() -> Self {\n10 | |         RecycleAllocator {\n11 | |             current: 0,\n12 | |             recycled: Vec::new(),\n13 | |         }\n14 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n8  + impl Default for RecycleAllocator {\n9  +     fn default() -> Self {\n10 +         Self::new()\n11 +     }\n12 + }\n   |\n\n"]}}]},{"user":"shilei-massclouds","repo":"arch_boot","pkg":"arch_boot","count":14,"raw_reports":[{"file":"src/platform/mod.rs","count":4,"kinds":{"Clippy(Warn)":["warning: unexpected `cfg` condition name: `platform_family`\n --> src/platform/mod.rs:4:38\n  |\n4 | if #[cfg(all(target_arch = \"x86_64\", platform_family = \"x86-pc\"))] {\n  |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `fmt_debug`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`\n  = help: consider using a Cargo feature instead\n  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n           [lints.rust]\n           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"x86-pc\"))'] }\n  = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"x86-pc\\\"))\");` to the top of the `build.rs`\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n  = note: `#[warn(unexpected_cfgs)]` on by default\n\n","warning: unexpected `cfg` condition name: `platform_family`\n --> src/platform/mod.rs:6:46\n  |\n6 | } else if #[cfg(all(target_arch = \"riscv64\", platform_family = \"riscv64-qemu-virt\"))] {\n  |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: consider using a Cargo feature instead\n  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n           [lints.rust]\n           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"riscv64-qemu-virt\"))'] }\n  = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"riscv64-qemu-virt\\\"))\");` to the top of the `build.rs`\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: unexpected `cfg` condition name: `platform_family`\n --> src/platform/mod.rs:8:46\n  |\n8 | } else if #[cfg(all(target_arch = \"aarch64\", platform_family = \"aarch64-qemu-virt\"))] {\n  |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: consider using a Cargo feature instead\n  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n           [lints.rust]\n           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-qemu-virt\"))'] }\n  = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-qemu-virt\\\"))\");` to the top of the `build.rs`\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:10:50\n   |\n10 | } else if #[cfg(all(target_arch = \"loongarch64\", platform_family = \"loongarch64-qemu-virt\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"loongarch64-qemu-virt\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"loongarch64-qemu-virt\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"]}},{"file":"src/platform/aarch64_qemu_virt/boot.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/batch_13/shilei-massclouds/arch_boot/arch_boot/src/platform/aarch64_qemu_virt/boot.rs (original lines from 1 to 1)\n+use super::desc::{DescriptorAttr, MappingFlags, MemAttr};\n","file: /home/runner/check/batch_13/shilei-massclouds/arch_boot/arch_boot/src/platform/aarch64_qemu_virt/boot.rs (original lines from 2 to 2)\n-use tock_registers::interfaces::{ReadWriteable, Readable, Writeable};\n","file: /home/runner/check/batch_13/shilei-massclouds/arch_boot/arch_boot/src/platform/aarch64_qemu_virt/boot.rs (original lines from 4 to 4)\n-use super::desc::{DescriptorAttr, MappingFlags, MemAttr};\n+use tock_registers::interfaces::{ReadWriteable, Readable, Writeable};\n"]}},{"file":"src/lib.rs","count":2,"kinds":{"Clippy(Warn)":["warning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> src/lib.rs:3:12\n  |\n3 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n","warning: empty `loop {}` wastes CPU cycles\n  --> src/lib.rs:10:5\n   |\n10 |     loop {}\n   |     ^^^^^^^\n   |\n   = help: you should either use `panic!()` or add a call pausing or sleeping the thread to the loop body\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_loop\n   = note: `#[warn(clippy::empty_loop)]` on by default\n\n"]}},{"file":"src/platform/riscv64_qemu_virt/boot.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_13/shilei-massclouds/arch_boot/arch_boot/src/platform/riscv64_qemu_virt/boot.rs (original lines from 1 to 1)\n-use riscv::register::satp;\n","file: /home/runner/check/batch_13/shilei-massclouds/arch_boot/arch_boot/src/platform/riscv64_qemu_virt/boot.rs (original lines from 3 to 3)\n+use riscv::register::satp;\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=arch_boot, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_13/shilei-massclouds/arch_boot/arch_boot\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.14.5\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling rustversion v1.0.17\n   Compiling indexmap v2.5.0\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_13/shilei-massclouds/arch_boot/arch_boot/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:10:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:10:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/platform/x86_pc/boot.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_13/shilei-massclouds/arch_boot/arch_boot/src/platform/x86_pc/boot.rs (original lines from 26 to 26)\n-    | Cr4Flags::OSFXSR.bits() | Cr4Flags::OSXMMEXCPT_ENABLE.bits();\n+    | Cr4Flags::OSFXSR.bits()\n+    | Cr4Flags::OSXMMEXCPT_ENABLE.bits();\n"]}}]},{"user":"kern-crates","repo":"rCoreloongArch","pkg":"easy-fs","count":14,"raw_reports":[{"file":"easy-fs/src/layout.rs","count":10,"kinds":{"Clippy(Warn)":["warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> easy-fs/src/layout.rs:121:25\n    |\n121 |         let mut total = data_blocks as usize;\n    |                         ^^^^^^^^^^^^^^^^^^^^ help: try: `data_blocks`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"],"Mirai":["warning: possible attempt to subtract with overflow\n   --> easy-fs/src/layout.rs:138:9\n    |\n138 |         Self::total_blocks(new_size) - Self::total_blocks(self.size)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible index out of bounds\n   --> easy-fs/src/layout.rs:221:25\n    |\n221 |                         indirect2[a0] = new_blocks.next().unwrap();\n    |                         ^^^^^^^^^^^^^\n\n","warning: called `Option::unwrap()` on a `None` value\n   --> easy-fs/src/layout.rs:224:21\n    |\n224 | /                     get_block_cache(indirect2[a0] as usize, Arc::clone(block_device))\n225 | |                         .lock()\n226 | |                         .modify(0, |indirect1: &mut IndirectBlock| {\n227 | |                             indirect1[b0] = new_blocks.next().unwrap();\n228 | |                         });\n    | |__________________________^\n    |\nnote: related location\n   --> easy-fs/src/block_cache.rs:61:9\n    |\n61  |         f(self.get_mut(offset))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\nnote: related location\n   --> easy-fs/src/layout.rs:227:45\n    |\n227 | ...                   indirect1[b0] = new_blocks.next().unwrap();\n    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible index out of bounds\n   --> easy-fs/src/layout.rs:224:37\n    |\n224 |                     get_block_cache(indirect2[a0] as usize, Arc::clone(block_device))\n    |                                     ^^^^^^^^^^^^^\n\n","warning: possible attempt to add with overflow\n   --> easy-fs/src/layout.rs:230:21\n    |\n230 |                     b0 += 1;\n    |                     ^^^^^^^\n\n","warning: possible attempt to subtract with overflow\n   --> easy-fs/src/layout.rs:331:35\n    |\n331 |             let block_read_size = end_current_block - start;\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to add with overflow\n   --> easy-fs/src/layout.rs:332:43\n    |\n332 |             let dst = &mut buf[read_size..read_size + block_read_size];\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to subtract with overflow\n   --> easy-fs/src/layout.rs:370:36\n    |\n370 |             let block_write_size = end_current_block - start;\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to add with overflow\n   --> easy-fs/src/layout.rs:381:13\n    |\n381 |             write_size += block_write_size;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"easy-fs/src/bitmap.rs","count":2,"kinds":{"Clippy(Warn)":["warning: casting to the same type is unnecessary (`usize` -> `usize`)\n  --> easy-fs/src/bitmap.rs:32:28\n   |\n32 |                 block_id + self.start_block_id as usize,\n   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.start_block_id`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n   = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n","warning: casting to the same type is unnecessary (`usize` -> `usize`)\n  --> easy-fs/src/bitmap.rs:45:68\n   |\n45 |                     Some(block_id * BLOCK_BITS + bits64_pos * 64 + inner_pos as usize)\n   |                                                                    ^^^^^^^^^^^^^^^^^^ help: try: `inner_pos`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"]}},{"file":"easy-fs/src/efs.rs","count":1,"kinds":{"Mirai":["warning: possible attempt to add with overflow\n   --> easy-fs/src/efs.rs:135:9\n    |\n135 |         self.data_bitmap.alloc(&self.block_device).unwrap() as u32 + self.data_area_start_block\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"easy-fs/src/vfs.rs","count":1,"kinds":{"Clippy(Warn)":["warning: casting to the same type is unnecessary (`u32` -> `u32`)\n  --> easy-fs/src/vfs.rs:56:29\n   |\n56 |                 return Some(dirent.inode_number() as u32);\n   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `dirent.inode_number()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"]}}]},{"user":"kern-crates","repo":"syscall-table","pkg":"syscall-table","count":14,"raw_reports":[{"file":"src/lib.rs","count":10,"kinds":{"Clippy(Warn)":["warning: unexpected `cfg` condition value: `test`\n  --> src/lib.rs:39:17\n   |\n39 | #![cfg_attr(not(feature = \"test\"), no_std)]\n   |                 ^^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `test` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   = note: `#[warn(unexpected_cfgs)]` on by default\n\n","warning: `crate` references the macro call's crate\n   --> src/lib.rs:421:13\n    |\n421 |             crate::paste!{\n    |             ^^^^^ help: to reference the macro definition's crate, use: `$crate`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#crate_in_macro_def\n    = note: `#[warn(clippy::crate_in_macro_def)]` on by default\n\n","warning: `crate` references the macro call's crate\n   --> src/lib.rs:448:17\n    |\n448 |             use crate::{iter,ServiceWrapper,ToUsize};\n    |                 ^^^^^ help: to reference the macro definition's crate, use: `$crate`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#crate_in_macro_def\n\n","warning: length comparison to one\n   --> src/lib.rs:227:12\n    |\n227 |         if args.len() >= 1 {\n    |            ^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!args.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n","warning: length comparison to one\n   --> src/lib.rs:238:12\n    |\n238 |         if args.len() >= 1 {\n    |            ^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!args.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","warning: very complex type used. Consider factoring parts into `type` definitions\n   --> src/lib.rs:299:14\n    |\n299 |     service: Box<dyn Fn(&[usize]) -> isize>,\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity\n    = note: `#[warn(clippy::type_complexity)]` on by default\n\n","warning: you should consider adding a `Default` implementation for `Table`\n   --> src/lib.rs:337:5\n    |\n337 | /     pub const fn new() -> Self {\n338 | |         Self {\n339 | |             map: BTreeMap::new(),\n340 | |         }\n341 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n335 + impl Default for Table {\n336 +     fn default() -> Self {\n337 +         Self::new()\n338 +     }\n339 + }\n    |\n\n","warning: returning the result of a `let` binding from a block\n   --> src/lib.rs:398:5\n    |\n397 |     let handler = SysCallHandler::new(func);\n    |     ---------------------------------------- unnecessary `let` binding\n398 |     handler\n    |     ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n    = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n    |\n397 ~     \n398 ~     SysCallHandler::new(func)\n    |\n\n"],"Unformatted":["file: /home/runner/check/batch_11/kern-crates/syscall-table/src/lib.rs (original lines from 133 to 133)\n-impl ToIsize for (){\n+impl ToIsize for () {\n","file: /home/runner/check/batch_11/kern-crates/syscall-table/src/lib.rs (original lines from 149 to 149)\n-impl<T:ToIsize, E: ToIsize> ToIsize for Result<T, E> {\n+impl<T: ToIsize, E: ToIsize> ToIsize for Result<T, E> {\n"]}},{"file":"examples/test.rs","count":4,"kinds":{"Unformatted":["file: /home/runner/check/batch_11/kern-crates/syscall-table/examples/test.rs (original lines from 71 to 71)\n-\n","file: /home/runner/check/batch_11/kern-crates/syscall-table/examples/test.rs (original lines from 85 to 85)\n-\n","file: /home/runner/check/batch_11/kern-crates/syscall-table/examples/test.rs (original lines from 100 to 100)\n-    assert_eq!(r,3);\n+    assert_eq!(r, 3);\n","file: /home/runner/check/batch_11/kern-crates/syscall-table/examples/test.rs (original lines from 108 to 108)\n-    assert_eq!(res,1)\n+    assert_eq!(res, 1)\n"]}}]},{"user":"kern-crates","repo":"zcore-drivers","pkg":"zcore-drivers","count":14,"raw_reports":[{"file":"src/nvme/interface.rs","count":5,"kinds":{"Clippy(Error)":["error: transmute used without annotations\n   --> src/nvme/interface.rs:108:46\n    |\n108 |         let common_cmd = unsafe { core::mem::transmute(cmd) };\n    |                                              ^^^^^^^^^ help: consider adding missing annotations: `transmute::<nvme::interface::NvmeIdentify, nvme::interface::NvmeCommonCommand>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n    = note: `#[deny(clippy::missing_transmute_annotations)]` implied by `#[deny(warnings)]`\n\n","error: transmute used without annotations\n   --> src/nvme/interface.rs:174:46\n    |\n174 |         let common_cmd = unsafe { core::mem::transmute(cmd) };\n    |                                              ^^^^^^^^^ help: consider adding missing annotations: `transmute::<nvme::interface::NvmeCreateCq, nvme::interface::NvmeCommonCommand>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n","error: transmute used without annotations\n   --> src/nvme/interface.rs:207:46\n    |\n207 |         let common_cmd = unsafe { core::mem::transmute(cmd) };\n    |                                              ^^^^^^^^^ help: consider adding missing annotations: `transmute::<nvme::interface::NvmeCreateSq, nvme::interface::NvmeCommonCommand>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n","error: transmute used without annotations\n   --> src/nvme/interface.rs:268:46\n    |\n268 |         let common_cmd = unsafe { core::mem::transmute(cmd) };\n    |                                              ^^^^^^^^^ help: consider adding missing annotations: `transmute::<nvme::interface::NvmeRWCommand, nvme::interface::NvmeCommonCommand>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n","error: transmute used without annotations\n   --> src/nvme/interface.rs:321:46\n    |\n321 |         let common_cmd = unsafe { core::mem::transmute(cmd) };\n    |                                              ^^^^^^^^^ help: consider adding missing annotations: `transmute::<nvme::interface::NvmeRWCommand, nvme::interface::NvmeCommonCommand>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n"]}},{"file":"src/input/mouse.rs","count":2,"kinds":{"Clippy(Error)":["error: clamp-like pattern without using clamp function\n  --> src/input/mouse.rs:38:18\n   |\n38 |         let dx = self.dx.max(-127).min(127);\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `self.dx.clamp(-127, 127)`\n   |\n   = note: clamp will panic if max < min\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_clamp\n   = note: `#[deny(clippy::manual_clamp)]` implied by `#[deny(warnings)]`\n\n","error: clamp-like pattern without using clamp function\n  --> src/input/mouse.rs:39:18\n   |\n39 |         let dy = self.dy.max(-127).min(127);\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `self.dy.clamp(-127, 127)`\n   |\n   = note: clamp will panic if max < min\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_clamp\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=zcore-drivers, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zcore-drivers\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator`\n    Updating git repository `https://github.com/rcore-os/device_tree-rs`\n    Updating git repository `https://github.com/rcore-os/isomorphic_drivers`\n    Updating git repository `https://github.com/DeathWish5/kernel-sync`\n    Updating git repository `https://github.com/elliott10/pci-rs`\n    Updating git repository `https://github.com/rcore-os/rcore-console`\n    Updating git repository `https://github.com/smoltcp-rs/smoltcp`\n    Updating git repository `https://github.com/rcore-os/virtio-drivers`\n    Updating git repository `https://github.com/rust-embedded/riscv`\n     Locking 126 packages to latest compatible versions\n      Adding acpi v4.1.1 (available: v5.0.0)\n      Adding bitflags v1.3.2 (available: v2.6.0)\n      Adding d1-pac v0.0.27 (available: v0.0.32)\n      Adding riscv v0.10.1 (available: v0.11.1)\n      Adding sdl2 v0.34.5 (available: v0.37.0)\n      Adding volatile v0.3.0 (available: v0.6.1)\n      Adding x86_64 v0.14.12 (available: v0.15.1)\n Downloading crates ...\n  Downloaded volatile v0.3.0\n  Downloaded rsdp v2.0.1\n  Downloaded acpi v4.1.1\n  Downloaded numeric-enum-macro v0.2.0\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling autocfg v1.4.0\n   Compiling rustversion v1.0.17\n    Checking log v0.4.22\n    Checking scopeguard v1.2.0\n    Checking bitflags v2.6.0\n    Checking volatile v0.4.6\n   Compiling paste v1.0.15\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n    Checking spin v0.9.8\n    Checking rsdp v2.0.1\n    Checking x86_64 v0.14.12\n    Checking cfg-if v1.0.0\n    Checking bit v0.1.1\n    Checking volatile v0.3.0\n    Checking byteorder v1.5.0\n    Checking managed v0.8.0\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking acpi v4.1.1\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n    Checking numeric-enum-macro v0.2.0\n    Checking lazy_static v1.5.0\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking x2apic v0.4.3\n    Checking zcore-drivers v0.1.0 (/home/runner/check/batch_12/kern-crates/zcore-drivers)\nerror: could not compile `zcore-drivers` (lib) due to 10 previous errors\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=zcore-drivers, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zcore-drivers\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling autocfg v1.4.0\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling rustversion v1.0.17\n   Compiling log v0.4.22\n   Compiling scopeguard v1.2.0\n[2024-10-01T02:02:31Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:02:31Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling volatile v0.4.6\n   Compiling bitflags v2.6.0\n   Compiling paste v1.0.15\n   Compiling raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling spin v0.9.8\n   Compiling rsdp v2.0.1\n   Compiling x86_64 v0.14.12\n   Compiling bit v0.1.1\n   Compiling cfg-if v1.0.0\n   Compiling managed v0.8.0\n   Compiling volatile v0.3.0\n   Compiling byteorder v1.5.0\n   Compiling smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n   Compiling isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n   Compiling acpi v4.1.1\n   Compiling pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n   Compiling numeric-enum-macro v0.2.0\n   Compiling lazy_static v1.5.0\n   Compiling device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n   Compiling x2apic v0.4.3\n   Compiling lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n   Compiling zcore-drivers v0.1.0 (/home/runner/check/batch_12/kern-crates/zcore-drivers)\nerror: unexpected `cfg` condition value: `board_malta`\n  --> src/bus/pci.rs:56:7\n   |\n56 | #[cfg(feature = \"board_malta\")]\n   |       ^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `feature` are: `allwinner`, `async-std`, `board-qemu`, `d1-pac`, `fu740`, `graphic`, `loopback`, `mock`, `no-pci`, `rcore-console`, `sdl2`, `virtio`, `virtio-drivers`\n   = help: consider adding `board_malta` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\nnote: the lint level is defined here\n  --> src/lib.rs:4:9\n   |\n4  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(unexpected_cfgs)]` implied by `#[deny(warnings)]`\n\nerror: could not compile `zcore-drivers` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=zcore-drivers, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zcore-drivers\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking bitflags v1.3.2\n   Compiling autocfg v1.4.0\n    Checking bit_field v0.10.2\n    Checking log v0.4.22\n   Compiling rustversion v1.0.17\n    Checking scopeguard v1.2.0\n    Checking bitflags v2.6.0\n    Checking volatile v0.4.6\n   Compiling paste v1.0.15\n    Checking raw-cpuid v10.7.0\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_12/kern-crates/zcore-drivers/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:02:31Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:02:31Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/bus/pci.rs","count":1,"kinds":{"Clippy(Error)":["error: unexpected `cfg` condition value: `board_malta`\n  --> src/bus/pci.rs:56:7\n   |\n56 | #[cfg(feature = \"board_malta\")]\n   |       ^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `feature` are: `allwinner`, `async-std`, `board-qemu`, `d1-pac`, `fu740`, `graphic`, `loopback`, `mock`, `no-pci`, `rcore-console`, `sdl2`, `virtio`, and `virtio-drivers`\n   = help: consider adding `board_malta` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\nnote: the lint level is defined here\n  --> src/lib.rs:4:9\n   |\n4  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(unexpected_cfgs)]` implied by `#[deny(warnings)]`\n\n"]}},{"file":"src/irq/x86_apic/lapic.rs","count":1,"kinds":{"Clippy(Error)":["error: creating a mutable reference to mutable static is discouraged\n  --> src/irq/x86_apic/lapic.rs:16:9\n   |\n16 | /         LOCAL_APIC\n17 | |             .as_mut()\n   | |_____________________^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\n\n"]}},{"file":"src/utils/devicetree.rs","count":1,"kinds":{"Clippy(Error)":["error: parameter is only used in recursion\n  --> src/utils/devicetree.rs:47:23\n   |\n47 |     fn walk_inner<F>(&self, node: &Node, props: InheritProps, device_node_op: &mut F)\n   |                       ^^^^\n   |\nnote: parameter used here\n  --> src/utils/devicetree.rs:64:13\n   |\n64 |             self.walk_inner(child, props, device_node_op);\n   |             ^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\n   = note: `#[deny(clippy::only_used_in_recursion)]` implied by `#[deny(warnings)]`\n\n"]}}]},{"user":"kern-crates","repo":"axtask","pkg":"axtask","count":13,"raw_reports":[{"file":"src/processor.rs","count":4,"kinds":{"Unformatted":["file: /home/runner/check/batch_5/kern-crates/axtask/src/processor.rs (original lines from 7 to 7)\n-use spinlock::{SpinNoIrq, SpinNoIrqOnlyGuard, SpinNoIrqOnly};\n+use spinlock::{SpinNoIrq, SpinNoIrqOnly, SpinNoIrqOnlyGuard};\n","file: /home/runner/check/batch_5/kern-crates/axtask/src/processor.rs (original lines from 16 to 16)\n-static PROCESSORS: SpinNoIrqOnly<VecDeque<&'static Processor>> = \n+static PROCESSORS: SpinNoIrqOnly<VecDeque<&'static Processor>> =\n","file: /home/runner/check/batch_5/kern-crates/axtask/src/processor.rs (original lines from 188 to 188)\n-        PROCESSORS.lock()\n+        PROCESSORS\n+            .lock()\n","file: /home/runner/check/batch_5/kern-crates/axtask/src/processor.rs (original lines from 253 to 253)\n-    unsafe { CurrentTask::init_current(main_task)}\n+    unsafe { CurrentTask::init_current(main_task) }\n"]}},{"file":"/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs","count":1,"kinds":{"Clippy(Error)":["error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axtask, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_5/kern-crates/axtask\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/axsignal.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/scheduler.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/timer_list.git`\n    Updating git repository `https://github.com/Starry-OS/axtask.git`\n    Updating git repository `https://github.com/Starry-OS/axalloc.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_ramfs.git`\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n    Updating git repository `https://github.com/kern-crates/axbacktrace.git`\n    Updating git repository `https://github.com/Starry-OS/allocator.git`\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_vfs.git`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n     Locking 91 packages to latest compatible versions\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.4.0\n   Compiling unicode-ident v1.0.13\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking cfg-if v1.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking bitflags v2.6.0\n    Checking scopeguard v1.2.0\n   Compiling syn v2.0.79\n    Checking volatile v0.4.6\n    Checking log v0.4.22\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.14.12\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axtask, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_5/kern-crates/axtask\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling bit_field v0.10.2\n   Compiling bitflags v1.3.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n   Compiling raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling bitflags v2.6.0\n   Compiling cfg-if v1.0.0\n   Compiling scopeguard v1.2.0\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.79\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling log v0.4.22\n[2024-10-01T02:22:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:22:53Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling static_assertions v1.1.0\n   Compiling volatile v0.4.6\n   Compiling spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling lazy_static v1.5.0\n   Compiling x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=axtask, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_5/kern-crates/axtask\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_5/kern-crates/axtask/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:22:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:22:53Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/api.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_5/kern-crates/axtask/src/api.rs (original lines from 84 to 85)\n-    if curr.get_preempt_pending() && curr.can_preempt() &&\n-        !curr.is_exited() && !curr.is_blocking(){\n+    if curr.get_preempt_pending() && curr.can_preempt() && !curr.is_exited() && !curr.is_blocking()\n+    {\n"]}},{"file":"src/schedule.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_5/kern-crates/axtask/src/schedule.rs (original lines from 210 to 210)\n-\n"]}},{"file":"src/timers.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_5/kern-crates/axtask/src/timers.rs (original lines from 7 to 7)\n-use crate::{AxTaskRef,TaskState};\n+use crate::{AxTaskRef, TaskState};\n"]}},{"file":"src/wait_queue.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_5/kern-crates/axtask/src/wait_queue.rs (original lines from 111 to 111)\n-        // TODO: \n+        // TODO:\n"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-time","count":13,"raw_reports":[{"file":"src/duration.rs","count":11,"kinds":{"Clippy(Warn)":["warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"],"Mirai":["warning: possible attempt to multiply with overflow\n  --> src/duration.rs:37:9\n   |\n37 |         self.ticks * (1_000_000 / GCD_1M) / (TICK_HZ / GCD_1M)\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to divide by zero\n  --> src/duration.rs:37:9\n   |\n37 |         self.ticks * (1_000_000 / GCD_1M) / (TICK_HZ / GCD_1M)\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to divide by zero\n  --> src/duration.rs:37:22\n   |\n37 |         self.ticks * (1_000_000 / GCD_1M) / (TICK_HZ / GCD_1M)\n   |                      ^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to multiply with overflow\n  --> src/duration.rs:47:27\n   |\n47 |         Duration { ticks: secs * TICK_HZ }\n   |                           ^^^^^^^^^^^^^^\n\n","warning: possible attempt to multiply with overflow\n  --> src/duration.rs:53:29\n   |\n53 |             ticks: div_ceil(millis * (TICK_HZ / GCD_1K), 1000 / GCD_1K),\n   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to divide by zero\n  --> src/duration.rs:53:38\n   |\n53 |             ticks: div_ceil(millis * (TICK_HZ / GCD_1K), 1000 / GCD_1K),\n   |                                      ^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to multiply with overflow\n  --> src/duration.rs:61:29\n   |\n61 |             ticks: div_ceil(micros * (TICK_HZ / GCD_1M), 1_000_000 / GCD_1M),\n   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to divide by zero\n  --> src/duration.rs:61:38\n   |\n61 |             ticks: div_ceil(micros * (TICK_HZ / GCD_1M), 1_000_000 / GCD_1M),\n   |                                      ^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to multiply with overflow\n  --> src/duration.rs:69:29\n   |\n69 |             ticks: div_ceil(micros * (TICK_HZ / GCD_1G), 1_000_000_000 / GCD_1G),\n   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to divide by zero\n  --> src/duration.rs:69:38\n   |\n69 |             ticks: div_ceil(micros * (TICK_HZ / GCD_1G), 1_000_000_000 / GCD_1G),\n   |                                      ^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"src/instant.rs","count":1,"kinds":{"Clippy(Warn)":["warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"]}},{"file":"src/timer.rs","count":1,"kinds":{"Clippy(Warn)":["warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"]}}]},{"user":"kern-crates","repo":"rvfs","pkg":"lwext4-vfs","count":11,"raw_reports":[{"file":"lwext4-vfs/src/inode/dir.rs","count":5,"kinds":{"Clippy(Warn)":["warning: returning the result of a `let` binding from a block\n  --> lwext4-vfs/src/inode/dir.rs:81:9\n   |\n78 | /         let perm = file.metadata().map_or(VfsNodePerm::default_dir(), |meta| {\n79 | |             VfsNodePerm::from_bits_truncate(meta.permissions().mode() as u16)\n80 | |         });\n   | |___________- unnecessary `let` binding\n81 |           perm\n   |           ^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n   = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n   |\n78 ~         \n79 ~         file.metadata().map_or(VfsNodePerm::default_dir(), |meta| {\n80 +             VfsNodePerm::from_bits_truncate(meta.permissions().mode() as u16)\n81 +         })\n   |\n\n","warning: question mark operator is useless here\n   --> lwext4-vfs/src/inode/dir.rs:193:9\n    |\n193 |         Ok(self.lookup(name)?)\n    |         ^^^^^^^^^^^^^^^^^^^^^^ help: try removing question mark and `Ok()`: `self.lookup(name)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_question_mark\n    = note: `#[warn(clippy::needless_question_mark)]` on by default\n\n","warning: the borrowed expression implements the required traits\n   --> lwext4-vfs/src/inode/dir.rs:191:25\n    |\n191 |         sb.fs.soft_link(&sy_name, &path).map_err(into_vfs)?;\n    |                         ^^^^^^^^ help: change this to: `sy_name`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n    = note: `#[warn(clippy::needless_borrows_for_generic_args)]` on by default\n\n","warning: unneeded `return` statement\n   --> lwext4-vfs/src/inode/dir.rs:227:21\n    |\n227 |                     return Ok(Arc::new(dir) as Arc<dyn VfsInode>);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n227 -                     return Ok(Arc::new(dir) as Arc<dyn VfsInode>);\n227 +                     Ok(Arc::new(dir) as Arc<dyn VfsInode>)\n    |\n\n","warning: comparison to empty slice\n   --> lwext4-vfs/src/inode/dir.rs:230:31\n    |\n230 |                     return if p_path == \"\" {\n    |                               ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `p_path.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n    = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n"]}},{"file":"vfscore/src/lib.rs","count":2,"kinds":{"Clippy(Warn)":["warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n","warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=lwext4-vfs, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/rvfs/lwext4-vfs\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling libc v0.2.159\n   Compiling regex-syntax v0.8.5\n   Compiling minimal-lexical v0.2.1\nerror: failed to run custom build command for `libc v0.2.159`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_10/kern-crates/rvfs/target/debug/build/libc-2b5100b9da3f0ae3/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.159/build.rs:253:9:\n  Failed to get rustc version\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:16:42Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:16:42Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-01T02:16:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:16:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-01T02:16:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:16:46Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"lwext4-vfs/src/blk.rs","count":1,"kinds":{"Clippy(Warn)":["warning: using `clone` on type `BlockDeviceConfig` which implements the `Copy` trait\n  --> lwext4-vfs/src/blk.rs:34:12\n   |\n34 |         Ok(self.config.clone())\n   |            ^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.config`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"]}},{"file":"lwext4-vfs/src/inode/file.rs","count":1,"kinds":{"Clippy(Warn)":["warning: returning the result of a `let` binding from a block\n  --> lwext4-vfs/src/inode/file.rs:88:9\n   |\n85 | /         let perm = file.metadata().map_or(VfsNodePerm::default_dir(), |meta| {\n86 | |             VfsNodePerm::from_bits_truncate(meta.permissions().mode() as u16)\n87 | |         });\n   | |___________- unnecessary `let` binding\n88 |           perm\n   |           ^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n   |\n85 ~         \n86 ~         file.metadata().map_or(VfsNodePerm::default_dir(), |meta| {\n87 +             VfsNodePerm::from_bits_truncate(meta.permissions().mode() as u16)\n88 +         })\n   |\n\n"]}}]},{"user":"kern-crates","repo":"lwext4","pkg":"lwext4-sys","count":10,"raw_reports":[{"file":"lwext4-sys/build.rs","count":5,"kinds":{"Clippy(Warn)":["warning: used `assert_eq!` with a literal bool\n  --> lwext4-sys/build.rs:17:9\n   |\n17 |         assert_eq!(cp.success(), true);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison\n   = note: `#[warn(clippy::bool_assert_comparison)]` on by default\nhelp: replace it with `assert!(..)`\n   |\n17 -         assert_eq!(cp.success(), true);\n17 +         assert!(cp.success());\n   |\n\n","warning: the borrowed expression implements the required traits\n  --> lwext4-sys/build.rs:34:22\n   |\n34 |         .current_dir(&lwext4)\n   |                      ^^^^^^^ help: change this to: `lwext4`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n   = note: `#[warn(clippy::needless_borrows_for_generic_args)]` on by default\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> lwext4-sys/build.rs:52:28\n   |\n52 |         generates_bindings(&lwext4, \"build_generic\");\n   |                            ^^^^^^^ help: change this to: `lwext4`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> lwext4-sys/build.rs:76:28\n   |\n76 |         generates_bindings(&lwext4, \"build_musl-generic\");\n   |                            ^^^^^^^ help: change this to: `lwext4`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do\n  --> lwext4-sys/build.rs:85:31\n   |\n85 | fn generates_bindings(lwext4: &PathBuf, build_dir: &str) {\n   |                               ^^^^^^^^ help: change this to: `&Path`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n"]}},{"file":"lwext4-sys/src/ext4.rs","count":2,"kinds":{"Clippy(Warn)":["warning: unsafe function's docs are missing a `# Safety` section\n --> lwext4-sys/src/ext4.rs:3:453\n  |\n3 | ...self as * mut _ as * mut T } # [inline] pub unsafe fn as_slice (& self , len : usize) -> & [T] { :: core :: slice :: from_raw_parts (s...\n  |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n  = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n","warning: unsafe function's docs are missing a `# Safety` section\n --> lwext4-sys/src/ext4.rs:3:583\n  |\n3 | ...f . as_ptr () , len) } # [inline] pub unsafe fn as_mut_slice (& mut self , len : usize) -> & mut [T] { :: core :: slice :: from_raw_pa...\n  |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=lwext4-sys, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_8/kern-crates/lwext4/lwext4-sys\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling clang-sys v1.8.1\n   Compiling libc v0.2.159\n   Compiling linux-raw-sys v0.4.14\n   Compiling regex-syntax v0.8.5\n   Compiling memchr v2.7.4\nerror: failed to run custom build command for `libc v0.2.159`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_8/kern-crates/lwext4/target/debug/build/libc-2b5100b9da3f0ae3/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.159/build.rs:253:9:\n  Failed to get rustc version\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:14:18Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:14:18Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-01T02:14:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:14:23Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/ext4.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_8/kern-crates/lwext4/lwext4-sys/src/ext4.rs (original lines from 3 to 3)\n-# [repr (C)] # [derive (Default)] pub struct __IncompleteArrayField < T > (:: core :: marker :: PhantomData < T > , [T ; 0]) ; impl < T > __IncompleteArrayField < T > { # [inline] pub const fn new () -> Self { __IncompleteArrayField (:: core :: marker :: PhantomData , []) } # [inline] pub fn as_ptr (& self) -> * const T { self as * const _ as * const T } # [inline] pub fn as_mut_ptr (& mut self) -> * mut T { self as * mut _ as * mut T } # [inline] pub unsafe fn as_slice (& self , len : usize) -> & [T] { :: core :: slice :: from_raw_parts (self . as_ptr () , len) } # [inline] pub unsafe fn as_mut_slice (& mut self , len : usize) -> & mut [T] { :: core :: slice :: from_raw_parts_mut (self . as_mut_ptr () , len) } } impl < T > :: core :: fmt :: Debug for __IncompleteArrayField < T > { fn fmt (& self , fmt : & mut :: core :: fmt :: Formatter < '_ >) -> :: core :: fmt :: Result { fmt . write_str (\"__IncompleteArrayField\") } } pub const _STDINT_H : u32 = 1 ; pub const _FEATURES_H : u32 = 1 ; pub const _DEFAULT_SOURCE : u32 = 1 ; pub const __GLIBC_USE_ISOC2X : u32 = 0 ; pub const __USE_ISOC11 : u32 = 1 ; pub const __USE_ISOC99 : u32 = 1 ; pub const __USE_ISOC95 : u32 = 1 ; pub const __USE_POSIX_IMPLICITLY : u32 = 1 ; pub const _POSIX_SOURCE : u32 = 1 ; pub const _POSIX_C_SOURCE : u32 = 200809 ; pub const __USE_POSIX : u32 = 1 ; pub const __USE_POSIX2 : u32 = 1 ; pub const __USE_POSIX199309 : u32 = 1 ; pub const __USE_POSIX199506 : u32 = 1 ; pub const __USE_XOPEN2K : u32 = 1 ; pub const __USE_XOPEN2K8 : u32 = 1 ; pub const _ATFILE_SOURCE : u32 = 1 ; pub const __WORDSIZE : u32 = 64 ; pub const __WORDSIZE_TIME64_COMPAT32 : u32 = 1 ; pub const __SYSCALL_WORDSIZE : u32 = 64 ; pub const __TIMESIZE : u32 = 64 ; pub const __USE_MISC : u32 = 1 ; pub const __USE_ATFILE : u32 = 1 ; pub const __USE_FORTIFY_LEVEL : u32 = 0 ; pub const __GLIBC_USE_DEPRECATED_GETS : u32 = 0 ; pub const __GLIBC_USE_DEPRECATED_SCANF : u32 = 0 ; pub const _STDC_PREDEF_H : u32 = 1 ; pub const __STDC_IEC_559__ : u32 = 1 ; pub const __STDC_IEC_60559_BFP__ : u32 = 201404 ; pub const __STDC_IEC_559_COMPLEX__ : u32 = 1 ; pub const __STDC_IEC_60559_COMPLEX__ : u32 = 201404 ; pub const __STDC_ISO_10646__ : u32 = 201706 ; pub const __GNU_LIBRARY__ : u32 = 6 ; pub const __GLIBC__ : u32 = 2 ; pub const __GLIBC_MINOR__ : u32 = 35 ; pub const _SYS_CDEFS_H : u32 = 1 ; pub const __glibc_c99_flexarr_available : u32 = 1 ; pub const __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI : u32 = 0 ; pub const __HAVE_GENERIC_SELECTION : u32 = 1 ; pub const __GLIBC_USE_LIB_EXT2 : u32 = 0 ; pub const __GLIBC_USE_IEC_60559_BFP_EXT : u32 = 0 ; pub const __GLIBC_USE_IEC_60559_BFP_EXT_C2X : u32 = 0 ; pub const __GLIBC_USE_IEC_60559_EXT : u32 = 0 ; pub const __GLIBC_USE_IEC_60559_FUNCS_EXT : u32 = 0 ; pub const __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X : u32 = 0 ; pub const __GLIBC_USE_IEC_60559_TYPES_EXT : u32 = 0 ; pub const _BITS_TYPES_H : u32 = 1 ; pub const _BITS_TYPESIZES_H : u32 = 1 ; pub const __OFF_T_MATCHES_OFF64_T : u32 = 1 ; pub const __INO_T_MATCHES_INO64_T : u32 = 1 ; pub const __RLIM_T_MATCHES_RLIM64_T : u32 = 1 ; pub const __STATFS_MATCHES_STATFS64 : u32 = 1 ; pub const __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64 : u32 = 1 ; pub const __FD_SETSIZE : u32 = 1024 ; pub const _BITS_TIME64_H : u32 = 1 ; pub const _BITS_WCHAR_H : u32 = 1 ; pub const _BITS_STDINT_INTN_H : u32 = 1 ; pub const _BITS_STDINT_UINTN_H : u32 = 1 ; pub const INT8_MIN : i32 = - 128 ; pub const INT16_MIN : i32 = - 32768 ; pub const INT32_MIN : i32 = - 2147483648 ; pub const INT8_MAX : u32 = 127 ; pub const INT16_MAX : u32 = 32767 ; pub const INT32_MAX : u32 = 2147483647 ; pub const UINT8_MAX : u32 = 255 ; pub const UINT16_MAX : u32 = 65535 ; pub const UINT32_MAX : u32 = 4294967295 ; pub const INT_LEAST8_MIN : i32 = - 128 ; pub const INT_LEAST16_MIN : i32 = - 32768 ; pub const INT_LEAST32_MIN : i32 = - 2147483648 ; pub const INT_LEAST8_MAX : u32 = 127 ; pub const INT_LEAST16_MAX : u32 = 32767 ; pub const INT_LEAST32_MAX : u32 = 2147483647 ; pub const UINT_LEAST8_MAX : u32 = 255 ; pub const UINT_LEAST16_MAX : u32 = 65535 ; pub const UINT_LEAST32_MAX : u32 = 4294967295 ; pub const INT_FAST8_MIN : i32 = - 128 ; pub const INT_FAST16_MIN : i64 = - 9223372036854775808 ; pub const INT_FAST32_MIN : i64 = - 9223372036854775808 ; pub const INT_FAST8_MAX : u32 = 127 ; pub const INT_FAST16_MAX : u64 = 9223372036854775807 ; pub const INT_FAST32_MAX : u64 = 9223372036854775807 ; pub const UINT_FAST8_MAX : u32 = 255 ; pub const UINT_FAST16_MAX : i32 = - 1 ; pub const UINT_FAST32_MAX : i32 = - 1 ; pub const INTPTR_MIN : i64 = - 9223372036854775808 ; pub const INTPTR_MAX : u64 = 9223372036854775807 ; pub const UINTPTR_MAX : i32 = - 1 ; pub const PTRDIFF_MIN : i64 = - 9223372036854775808 ; pub const PTRDIFF_MAX : u64 = 9223372036854775807 ; pub const SIG_ATOMIC_MIN : i32 = - 2147483648 ; pub const SIG_ATOMIC_MAX : u32 = 2147483647 ; pub const SIZE_MAX : i32 = - 1 ; pub const WINT_MIN : u32 = 0 ; pub const WINT_MAX : u32 = 4294967295 ; pub const CONFIG_USE_DEFAULT_CONFIG : u32 = 0 ; pub const CONFIG_DEBUG_PRINTF : u32 = 1 ; pub const CONFIG_HAVE_OWN_OFLAGS : u32 = 1 ; pub const CONFIG_HAVE_OWN_ERRNO : u32 = 1 ; pub const CONFIG_HAVE_OWN_ASSERT : u32 = 1 ; pub const CONFIG_BLOCK_DEV_CACHE_SIZE : u32 = 16 ; pub const F_SET_EXT2 : u32 = 2 ; pub const F_SET_EXT3 : u32 = 3 ; pub const F_SET_EXT4 : u32 = 4 ; pub const CONFIG_EXT_FEATURE_SET_LVL : u32 = 4 ; pub const CONFIG_JOURNALING_ENABLE : u32 = 1 ; pub const CONFIG_XATTR_ENABLE : u32 = 1 ; pub const CONFIG_EXTENTS_ENABLE : u32 = 1 ; pub const CONFIG_DEBUG_ASSERT : u32 = 1 ; pub const CONFIG_BLOCK_DEV_ENABLE_STATS : u32 = 1 ; pub const CONFIG_EXT4_MAX_BLOCKDEV_NAME : u32 = 32 ; pub const CONFIG_EXT4_BLOCKDEVS_COUNT : u32 = 2 ; pub const CONFIG_EXT4_MAX_MP_NAME : u32 = 32 ; pub const CONFIG_EXT4_MOUNTPOINTS_COUNT : u32 = 2 ; pub const CONFIG_MAX_TRUNCATE_SIZE : u32 = 16777216 ; pub const CONFIG_UNALIGNED_ACCESS : u32 = 0 ; pub const CONFIG_USE_USER_MALLOC : u32 = 0 ; pub const true_ : u32 = 1 ; pub const false_ : u32 = 0 ; pub const __bool_true_false_are_defined : u32 = 1 ; pub const SPLAY_NEGINF : i32 = - 1 ; pub const SPLAY_INF : u32 = 1 ; pub const RB_BLACK : u32 = 0 ; pub const RB_RED : u32 = 1 ; pub const RB_NEGINF : i32 = - 1 ; pub const RB_INF : u32 = 1 ; pub const EXT4_CHECKSUM_CRC32C : u32 = 1 ; pub const UUID_SIZE : u32 = 16 ; pub const EXT4_SUPERBLOCK_MAGIC : u32 = 61267 ; pub const EXT4_SUPERBLOCK_SIZE : u32 = 1024 ; pub const EXT4_SUPERBLOCK_OFFSET : u32 = 1024 ; pub const EXT4_SUPERBLOCK_OS_LINUX : u32 = 0 ; pub const EXT4_SUPERBLOCK_OS_HURD : u32 = 1 ; pub const EXT4_SUPERBLOCK_FLAGS_SIGNED_HASH : u32 = 1 ; pub const EXT4_SUPERBLOCK_FLAGS_UNSIGNED_HASH : u32 = 2 ; pub const EXT4_SUPERBLOCK_FLAGS_TEST_FILESYS : u32 = 4 ; pub const EXT4_SUPERBLOCK_STATE_VALID_FS : u32 = 1 ; pub const EXT4_SUPERBLOCK_STATE_ERROR_FS : u32 = 2 ; pub const EXT4_SUPERBLOCK_STATE_ORPHAN_FS : u32 = 4 ; pub const EXT4_SUPERBLOCK_ERRORS_CONTINUE : u32 = 1 ; pub const EXT4_SUPERBLOCK_ERRORS_RO : u32 = 2 ; pub const EXT4_SUPERBLOCK_ERRORS_PANIC : u32 = 3 ; pub const EXT4_FCOM_DIR_PREALLOC : u32 = 1 ; pub const EXT4_FCOM_IMAGIC_INODES : u32 = 2 ; pub const EXT4_FCOM_HAS_JOURNAL : u32 = 4 ; pub const EXT4_FCOM_EXT_ATTR : u32 = 8 ; pub const EXT4_FCOM_RESIZE_INODE : u32 = 16 ; pub const EXT4_FCOM_DIR_INDEX : u32 = 32 ; pub const EXT4_FRO_COM_SPARSE_SUPER : u32 = 1 ; pub const EXT4_FRO_COM_LARGE_FILE : u32 = 2 ; pub const EXT4_FRO_COM_BTREE_DIR : u32 = 4 ; pub const EXT4_FRO_COM_HUGE_FILE : u32 = 8 ; pub const EXT4_FRO_COM_GDT_CSUM : u32 = 16 ; pub const EXT4_FRO_COM_DIR_NLINK : u32 = 32 ; pub const EXT4_FRO_COM_EXTRA_ISIZE : u32 = 64 ; pub const EXT4_FRO_COM_QUOTA : u32 = 256 ; pub const EXT4_FRO_COM_BIGALLOC : u32 = 512 ; pub const EXT4_FRO_COM_METADATA_CSUM : u32 = 1024 ; pub const EXT4_FINCOM_COMPRESSION : u32 = 1 ; pub const EXT4_FINCOM_FILETYPE : u32 = 2 ; pub const EXT4_FINCOM_RECOVER : u32 = 4 ; pub const EXT4_FINCOM_JOURNAL_DEV : u32 = 8 ; pub const EXT4_FINCOM_META_BG : u32 = 16 ; pub const EXT4_FINCOM_EXTENTS : u32 = 64 ; pub const EXT4_FINCOM_64BIT : u32 = 128 ; pub const EXT4_FINCOM_MMP : u32 = 256 ; pub const EXT4_FINCOM_FLEX_BG : u32 = 512 ; pub const EXT4_FINCOM_EA_INODE : u32 = 1024 ; pub const EXT4_FINCOM_DIRDATA : u32 = 4096 ; pub const EXT4_FINCOM_BG_USE_META_CSUM : u32 = 8192 ; pub const EXT4_FINCOM_LARGEDIR : u32 = 16384 ; pub const EXT4_FINCOM_INLINE_DATA : u32 = 32768 ; pub const EXT2_SUPPORTED_FCOM : u32 = 0 ; pub const EXT2_SUPPORTED_FINCOM : u32 = 18 ; pub const EXT2_SUPPORTED_FRO_COM : u32 = 3 ; pub const EXT3_SUPPORTED_FCOM : u32 = 32 ; pub const EXT3_SUPPORTED_FINCOM : u32 = 18 ; pub const EXT3_SUPPORTED_FRO_COM : u32 = 3 ; pub const EXT4_SUPPORTED_FCOM : u32 = 32 ; pub const EXT4_SUPPORTED_FINCOM : u32 = 722 ; pub const EXT4_SUPPORTED_FRO_COM : u32 = 1147 ; pub const EXT_FINCOM_IGNORED : u32 = 260 ; pub const EXT4_BLOCK_GROUP_INODE_UNINIT : u32 = 1 ; pub const EXT4_BLOCK_GROUP_BLOCK_UNINIT : u32 = 2 ; pub const EXT4_BLOCK_GROUP_ITABLE_ZEROED : u32 = 4 ; pub const EXT4_MIN_BLOCK_GROUP_DESCRIPTOR_SIZE : u32 = 32 ; pub const EXT4_MAX_BLOCK_GROUP_DESCRIPTOR_SIZE : u32 = 64 ; pub const EXT4_MIN_BLOCK_SIZE : u32 = 1024 ; pub const EXT4_MAX_BLOCK_SIZE : u32 = 65536 ; pub const EXT4_REV0_INODE_SIZE : u32 = 128 ; pub const EXT4_INODE_BLOCK_SIZE : u32 = 512 ; pub const EXT4_INODE_DIRECT_BLOCK_COUNT : u32 = 12 ; pub const EXT4_INODE_INDIRECT_BLOCK : u32 = 12 ; pub const EXT4_INODE_DOUBLE_INDIRECT_BLOCK : u32 = 13 ; pub const EXT4_INODE_TRIPPLE_INDIRECT_BLOCK : u32 = 14 ; pub const EXT4_INODE_BLOCKS : u32 = 15 ; pub const EXT4_INODE_INDIRECT_BLOCK_COUNT : u32 = 3 ; pub const EXT4_INODE_MODE_FIFO : u32 = 4096 ; pub const EXT4_INODE_MODE_CHARDEV : u32 = 8192 ; pub const EXT4_INODE_MODE_DIRECTORY : u32 = 16384 ; pub const EXT4_INODE_MODE_BLOCKDEV : u32 = 24576 ; pub const EXT4_INODE_MODE_FILE : u32 = 32768 ; pub const EXT4_INODE_MODE_SOFTLINK : u32 = 40960 ; pub const EXT4_INODE_MODE_SOCKET : u32 = 49152 ; pub const EXT4_INODE_MODE_TYPE_MASK : u32 = 61440 ; pub const EXT4_INODE_FLAG_SECRM : u32 = 1 ; pub const EXT4_INODE_FLAG_UNRM : u32 = 2 ; pub const EXT4_INODE_FLAG_COMPR : u32 = 4 ; pub const EXT4_INODE_FLAG_SYNC : u32 = 8 ; pub const EXT4_INODE_FLAG_IMMUTABLE : u32 = 16 ; pub const EXT4_INODE_FLAG_APPEND : u32 = 32 ; pub const EXT4_INODE_FLAG_NODUMP : u32 = 64 ; pub const EXT4_INODE_FLAG_NOATIME : u32 = 128 ; pub const EXT4_INODE_FLAG_DIRTY : u32 = 256 ; pub const EXT4_INODE_FLAG_COMPRBLK : u32 = 512 ; pub const EXT4_INODE_FLAG_NOCOMPR : u32 = 1024 ; pub const EXT4_INODE_FLAG_ECOMPR : u32 = 2048 ; pub const EXT4_INODE_FLAG_INDEX : u32 = 4096 ; pub const EXT4_INODE_FLAG_IMAGIC : u32 = 8192 ; pub const EXT4_INODE_FLAG_JOURNAL_DATA : u32 = 16384 ; pub const EXT4_INODE_FLAG_NOTAIL : u32 = 32768 ; pub const EXT4_INODE_FLAG_DIRSYNC : u32 = 65536 ; pub const EXT4_INODE_FLAG_TOPDIR : u32 = 131072 ; pub const EXT4_INODE_FLAG_HUGE_FILE : u32 = 262144 ; pub const EXT4_INODE_FLAG_EXTENTS : u32 = 524288 ; pub const EXT4_INODE_FLAG_EA_INODE : u32 = 2097152 ; pub const EXT4_INODE_FLAG_EOFBLOCKS : u32 = 4194304 ; pub const EXT4_INODE_FLAG_RESERVED : u32 = 2147483648 ; pub const EXT4_INODE_ROOT_INDEX : u32 = 2 ; pub const EXT4_DIRECTORY_FILENAME_LEN : u32 = 255 ; pub const EXT4_DIRENTRY_DIR_CSUM : u32 = 222 ; pub const EXT4_ERR_BAD_DX_DIR : i32 = - 25000 ; pub const EXT4_LINK_MAX : u32 = 65000 ; pub const EXT4_BAD_INO : u32 = 1 ; pub const EXT4_ROOT_INO : u32 = 2 ; pub const EXT4_BOOT_LOADER_INO : u32 = 5 ; pub const EXT4_UNDEL_DIR_INO : u32 = 6 ; pub const EXT4_RESIZE_INO : u32 = 7 ; pub const EXT4_JOURNAL_INO : u32 = 8 ; pub const EXT4_GOOD_OLD_FIRST_INO : u32 = 11 ; pub const EXT2_HTREE_LEGACY : u32 = 0 ; pub const EXT2_HTREE_HALF_MD4 : u32 = 1 ; pub const EXT2_HTREE_TEA : u32 = 2 ; pub const EXT2_HTREE_LEGACY_UNSIGNED : u32 = 3 ; pub const EXT2_HTREE_HALF_MD4_UNSIGNED : u32 = 4 ; pub const EXT2_HTREE_TEA_UNSIGNED : u32 = 5 ; pub const EXT2_HTREE_EOF : u32 = 2147483647 ; pub const EXT4_GOOD_OLD_INODE_SIZE : u32 = 128 ; pub const JBD_MAGIC_NUMBER : u32 = 3225106840 ; pub const JBD_DESCRIPTOR_BLOCK : u32 = 1 ; pub const JBD_COMMIT_BLOCK : u32 = 2 ; pub const JBD_SUPERBLOCK : u32 = 3 ; pub const JBD_SUPERBLOCK_V2 : u32 = 4 ; pub const JBD_REVOKE_BLOCK : u32 = 5 ; pub const JBD_CRC32_CHKSUM : u32 = 1 ; pub const JBD_MD5_CHKSUM : u32 = 2 ; pub const JBD_SHA1_CHKSUM : u32 = 3 ; pub const JBD_CRC32C_CHKSUM : u32 = 4 ; pub const JBD_CRC32_CHKSUM_SIZE : u32 = 4 ; pub const JBD_FLAG_ESCAPE : u32 = 1 ; pub const JBD_FLAG_SAME_UUID : u32 = 2 ; pub const JBD_FLAG_DELETED : u32 = 4 ; pub const JBD_FLAG_LAST_TAG : u32 = 8 ; pub const JBD_USERS_MAX : u32 = 48 ; pub const JBD_USERS_SIZE : u32 = 768 ; pub const JBD_FEATURE_COMPAT_CHECKSUM : u32 = 1 ; pub const JBD_FEATURE_INCOMPAT_REVOKE : u32 = 1 ; pub const JBD_FEATURE_INCOMPAT_64BIT : u32 = 2 ; pub const JBD_FEATURE_INCOMPAT_ASYNC_COMMIT : u32 = 4 ; pub const JBD_FEATURE_INCOMPAT_CSUM_V2 : u32 = 8 ; pub const JBD_FEATURE_INCOMPAT_CSUM_V3 : u32 = 16 ; pub const JBD_KNOWN_COMPAT_FEATURES : u32 = 0 ; pub const JBD_KNOWN_ROCOMPAT_FEATURES : u32 = 0 ; pub const JBD_KNOWN_INCOMPAT_FEATURES : u32 = 31 ; pub const EXT4_CRC32_INIT : u32 = 4294967295 ; pub const EPERM : u32 = 1 ; pub const ENOENT : u32 = 2 ; pub const EIO : u32 = 5 ; pub const ENXIO : u32 = 6 ; pub const E2BIG : u32 = 7 ; pub const ENOMEM : u32 = 12 ; pub const EACCES : u32 = 13 ; pub const EFAULT : u32 = 14 ; pub const EEXIST : u32 = 17 ; pub const ENODEV : u32 = 19 ; pub const ENOTDIR : u32 = 20 ; pub const EISDIR : u32 = 21 ; pub const EINVAL : u32 = 22 ; pub const EFBIG : u32 = 27 ; pub const ENOSPC : u32 = 28 ; pub const EROFS : u32 = 30 ; pub const EMLINK : u32 = 31 ; pub const ERANGE : u32 = 34 ; pub const ENOTEMPTY : u32 = 39 ; pub const ENODATA : u32 = 61 ; pub const ENOTSUP : u32 = 95 ; pub const EOK : u32 = 0 ; pub const O_RDONLY : u32 = 0 ; pub const O_WRONLY : u32 = 1 ; pub const O_RDWR : u32 = 2 ; pub const O_CREAT : u32 = 64 ; pub const O_EXCL : u32 = 128 ; pub const O_TRUNC : u32 = 512 ; pub const O_APPEND : u32 = 1024 ; pub const SEEK_SET : u32 = 0 ; pub const SEEK_CUR : u32 = 1 ; pub const SEEK_END : u32 = 2 ; pub const _INTTYPES_H : u32 = 1 ; pub const ____gwchar_t_defined : u32 = 1 ; pub const __PRI64_PREFIX : & [u8 ; 2usize] = b\"l\\0\" ; pub const __PRIPTR_PREFIX : & [u8 ; 2usize] = b\"l\\0\" ; pub const PRId8 : & [u8 ; 2usize] = b\"d\\0\" ; pub const PRId16 : & [u8 ; 2usize] = b\"d\\0\" ; pub const PRId32 : & [u8 ; 2usize] = b\"d\\0\" ; pub const PRId64 : & [u8 ; 3usize] = b\"ld\\0\" ; pub const PRIdLEAST8 : & [u8 ; 2usize] = b\"d\\0\" ; pub const PRIdLEAST16 : & [u8 ; 2usize] = b\"d\\0\" ; pub const PRIdLEAST32 : & [u8 ; 2usize] = b\"d\\0\" ; pub const PRIdLEAST64 : & [u8 ; 3usize] = b\"ld\\0\" ; pub const PRIdFAST8 : & [u8 ; 2usize] = b\"d\\0\" ; pub const PRIdFAST16 : & [u8 ; 3usize] = b\"ld\\0\" ; pub const PRIdFAST32 : & [u8 ; 3usize] = b\"ld\\0\" ; pub const PRIdFAST64 : & [u8 ; 3usize] = b\"ld\\0\" ; pub const PRIi8 : & [u8 ; 2usize] = b\"i\\0\" ; pub const PRIi16 : & [u8 ; 2usize] = b\"i\\0\" ; pub const PRIi32 : & [u8 ; 2usize] = b\"i\\0\" ; pub const PRIi64 : & [u8 ; 3usize] = b\"li\\0\" ; pub const PRIiLEAST8 : & [u8 ; 2usize] = b\"i\\0\" ; pub const PRIiLEAST16 : & [u8 ; 2usize] = b\"i\\0\" ; pub const PRIiLEAST32 : & [u8 ; 2usize] = b\"i\\0\" ; pub const PRIiLEAST64 : & [u8 ; 3usize] = b\"li\\0\" ; pub const PRIiFAST8 : & [u8 ; 2usize] = b\"i\\0\" ; pub const PRIiFAST16 : & [u8 ; 3usize] = b\"li\\0\" ; pub const PRIiFAST32 : & [u8 ; 3usize] = b\"li\\0\" ; pub const PRIiFAST64 : & [u8 ; 3usize] = b\"li\\0\" ; pub const PRIo8 : & [u8 ; 2usize] = b\"o\\0\" ; pub const PRIo16 : & [u8 ; 2usize] = b\"o\\0\" ; pub const PRIo32 : & [u8 ; 2usize] = b\"o\\0\" ; pub const PRIo64 : & [u8 ; 3usize] = b\"lo\\0\" ; pub const PRIoLEAST8 : & [u8 ; 2usize] = b\"o\\0\" ; pub const PRIoLEAST16 : & [u8 ; 2usize] = b\"o\\0\" ; pub const PRIoLEAST32 : & [u8 ; 2usize] = b\"o\\0\" ; pub const PRIoLEAST64 : & [u8 ; 3usize] = b\"lo\\0\" ; pub const PRIoFAST8 : & [u8 ; 2usize] = b\"o\\0\" ; pub const PRIoFAST16 : & [u8 ; 3usize] = b\"lo\\0\" ; pub const PRIoFAST32 : & [u8 ; 3usize] = b\"lo\\0\" ; pub const PRIoFAST64 : & [u8 ; 3usize] = b\"lo\\0\" ; pub const PRIu8 : & [u8 ; 2usize] = b\"u\\0\" ; pub const PRIu16 : & [u8 ; 2usize] = b\"u\\0\" ; pub const PRIu32 : & [u8 ; 2usize] = b\"u\\0\" ; pub const PRIu64 : & [u8 ; 3usize] = b\"lu\\0\" ; pub const PRIuLEAST8 : & [u8 ; 2usize] = b\"u\\0\" ; pub const PRIuLEAST16 : & [u8 ; 2usize] = b\"u\\0\" ; pub const PRIuLEAST32 : & [u8 ; 2usize] = b\"u\\0\" ; pub const PRIuLEAST64 : & [u8 ; 3usize] = b\"lu\\0\" ; pub const PRIuFAST8 : & [u8 ; 2usize] = b\"u\\0\" ; pub const PRIuFAST16 : & [u8 ; 3usize] = b\"lu\\0\" ; pub const PRIuFAST32 : & [u8 ; 3usize] = b\"lu\\0\" ; pub const PRIuFAST64 : & [u8 ; 3usize] = b\"lu\\0\" ; pub const PRIx8 : & [u8 ; 2usize] = b\"x\\0\" ; pub const PRIx16 : & [u8 ; 2usize] = b\"x\\0\" ; pub const PRIx32 : & [u8 ; 2usize] = b\"x\\0\" ; pub const PRIx64 : & [u8 ; 3usize] = b\"lx\\0\" ; pub const PRIxLEAST8 : & [u8 ; 2usize] = b\"x\\0\" ; pub const PRIxLEAST16 : & [u8 ; 2usize] = b\"x\\0\" ; pub const PRIxLEAST32 : & [u8 ; 2usize] = b\"x\\0\" ; pub const PRIxLEAST64 : & [u8 ; 3usize] = b\"lx\\0\" ; pub const PRIxFAST8 : & [u8 ; 2usize] = b\"x\\0\" ; pub const PRIxFAST16 : & [u8 ; 3usize] = b\"lx\\0\" ; pub const PRIxFAST32 : & [u8 ; 3usize] = b\"lx\\0\" ; pub const PRIxFAST64 : & [u8 ; 3usize] = b\"lx\\0\" ; pub const PRIX8 : & [u8 ; 2usize] = b\"X\\0\" ; pub const PRIX16 : & [u8 ; 2usize] = b\"X\\0\" ; pub const PRIX32 : & [u8 ; 2usize] = b\"X\\0\" ; pub const PRIX64 : & [u8 ; 3usize] = b\"lX\\0\" ; pub const PRIXLEAST8 : & [u8 ; 2usize] = b\"X\\0\" ; pub const PRIXLEAST16 : & [u8 ; 2usize] = b\"X\\0\" ; pub const PRIXLEAST32 : & [u8 ; 2usize] = b\"X\\0\" ; pub const PRIXLEAST64 : & [u8 ; 3usize] = b\"lX\\0\" ; pub const PRIXFAST8 : & [u8 ; 2usize] = b\"X\\0\" ; pub const PRIXFAST16 : & [u8 ; 3usize] = b\"lX\\0\" ; pub const PRIXFAST32 : & [u8 ; 3usize] = b\"lX\\0\" ; pub const PRIXFAST64 : & [u8 ; 3usize] = b\"lX\\0\" ; pub const PRIdMAX : & [u8 ; 3usize] = b\"ld\\0\" ; pub const PRIiMAX : & [u8 ; 3usize] = b\"li\\0\" ; pub const PRIoMAX : & [u8 ; 3usize] = b\"lo\\0\" ; pub const PRIuMAX : & [u8 ; 3usize] = b\"lu\\0\" ; pub const PRIxMAX : & [u8 ; 3usize] = b\"lx\\0\" ; pub const PRIXMAX : & [u8 ; 3usize] = b\"lX\\0\" ; pub const PRIdPTR : & [u8 ; 3usize] = b\"ld\\0\" ; pub const PRIiPTR : & [u8 ; 3usize] = b\"li\\0\" ; pub const PRIoPTR : & [u8 ; 3usize] = b\"lo\\0\" ; pub const PRIuPTR : & [u8 ; 3usize] = b\"lu\\0\" ; pub const PRIxPTR : & [u8 ; 3usize] = b\"lx\\0\" ; pub const PRIXPTR : & [u8 ; 3usize] = b\"lX\\0\" ; pub const SCNd8 : & [u8 ; 4usize] = b\"hhd\\0\" ; pub const SCNd16 : & [u8 ; 3usize] = b\"hd\\0\" ; pub const SCNd32 : & [u8 ; 2usize] = b\"d\\0\" ; pub const SCNd64 : & [u8 ; 3usize] = b\"ld\\0\" ; pub const SCNdLEAST8 : & [u8 ; 4usize] = b\"hhd\\0\" ; pub const SCNdLEAST16 : & [u8 ; 3usize] = b\"hd\\0\" ; pub const SCNdLEAST32 : & [u8 ; 2usize] = b\"d\\0\" ; pub const SCNdLEAST64 : & [u8 ; 3usize] = b\"ld\\0\" ; pub const SCNdFAST8 : & [u8 ; 4usize] = b\"hhd\\0\" ; pub const SCNdFAST16 : & [u8 ; 3usize] = b\"ld\\0\" ; pub const SCNdFAST32 : & [u8 ; 3usize] = b\"ld\\0\" ; pub const SCNdFAST64 : & [u8 ; 3usize] = b\"ld\\0\" ; pub const SCNi8 : & [u8 ; 4usize] = b\"hhi\\0\" ; pub const SCNi16 : & [u8 ; 3usize] = b\"hi\\0\" ; pub const SCNi32 : & [u8 ; 2usize] = b\"i\\0\" ; pub const SCNi64 : & [u8 ; 3usize] = b\"li\\0\" ; pub const SCNiLEAST8 : & [u8 ; 4usize] = b\"hhi\\0\" ; pub const SCNiLEAST16 : & [u8 ; 3usize] = b\"hi\\0\" ; pub const SCNiLEAST32 : & [u8 ; 2usize] = b\"i\\0\" ; pub const SCNiLEAST64 : & [u8 ; 3usize] = b\"li\\0\" ; pub const SCNiFAST8 : & [u8 ; 4usize] = b\"hhi\\0\" ; pub const SCNiFAST16 : & [u8 ; 3usize] = b\"li\\0\" ; pub const SCNiFAST32 : & [u8 ; 3usize] = b\"li\\0\" ; pub const SCNiFAST64 : & [u8 ; 3usize] = b\"li\\0\" ; pub const SCNu8 : & [u8 ; 4usize] = b\"hhu\\0\" ; pub const SCNu16 : & [u8 ; 3usize] = b\"hu\\0\" ; pub const SCNu32 : & [u8 ; 2usize] = b\"u\\0\" ; pub const SCNu64 : & [u8 ; 3usize] = b\"lu\\0\" ; pub const SCNuLEAST8 : & [u8 ; 4usize] = b\"hhu\\0\" ; pub const SCNuLEAST16 : & [u8 ; 3usize] = b\"hu\\0\" ; pub const SCNuLEAST32 : & [u8 ; 2usize] = b\"u\\0\" ; pub const SCNuLEAST64 : & [u8 ; 3usize] = b\"lu\\0\" ; pub const SCNuFAST8 : & [u8 ; 4usize] = b\"hhu\\0\" ; pub const SCNuFAST16 : & [u8 ; 3usize] = b\"lu\\0\" ; pub const SCNuFAST32 : & [u8 ; 3usize] = b\"lu\\0\" ; pub const SCNuFAST64 : & [u8 ; 3usize] = b\"lu\\0\" ; pub const SCNo8 : & [u8 ; 4usize] = b\"hho\\0\" ; pub const SCNo16 : & [u8 ; 3usize] = b\"ho\\0\" ; pub const SCNo32 : & [u8 ; 2usize] = b\"o\\0\" ; pub const SCNo64 : & [u8 ; 3usize] = b\"lo\\0\" ; pub const SCNoLEAST8 : & [u8 ; 4usize] = b\"hho\\0\" ; pub const SCNoLEAST16 : & [u8 ; 3usize] = b\"ho\\0\" ; pub const SCNoLEAST32 : & [u8 ; 2usize] = b\"o\\0\" ; pub const SCNoLEAST64 : & [u8 ; 3usize] = b\"lo\\0\" ; pub const SCNoFAST8 : & [u8 ; 4usize] = b\"hho\\0\" ; pub const SCNoFAST16 : & [u8 ; 3usize] = b\"lo\\0\" ; pub const SCNoFAST32 : & [u8 ; 3usize] = b\"lo\\0\" ; pub const SCNoFAST64 : & [u8 ; 3usize] = b\"lo\\0\" ; pub const SCNx8 : & [u8 ; 4usize] = b\"hhx\\0\" ; pub const SCNx16 : & [u8 ; 3usize] = b\"hx\\0\" ; pub const SCNx32 : & [u8 ; 2usize] = b\"x\\0\" ; pub const SCNx64 : & [u8 ; 3usize] = b\"lx\\0\" ; pub const SCNxLEAST8 : & [u8 ; 4usize] = b\"hhx\\0\" ; pub const SCNxLEAST16 : & [u8 ; 3usize] = b\"hx\\0\" ; pub const SCNxLEAST32 : & [u8 ; 2usize] = b\"x\\0\" ; pub const SCNxLEAST64 : & [u8 ; 3usize] = b\"lx\\0\" ; pub const SCNxFAST8 : & [u8 ; 4usize] = b\"hhx\\0\" ; pub const SCNxFAST16 : & [u8 ; 3usize] = b\"lx\\0\" ; pub const SCNxFAST32 : & [u8 ; 3usize] = b\"lx\\0\" ; pub const SCNxFAST64 : & [u8 ; 3usize] = b\"lx\\0\" ; pub const SCNdMAX : & [u8 ; 3usize] = b\"ld\\0\" ; pub const SCNiMAX : & [u8 ; 3usize] = b\"li\\0\" ; pub const SCNoMAX : & [u8 ; 3usize] = b\"lo\\0\" ; pub const SCNuMAX : & [u8 ; 3usize] = b\"lu\\0\" ; pub const SCNxMAX : & [u8 ; 3usize] = b\"lx\\0\" ; pub const SCNdPTR : & [u8 ; 3usize] = b\"ld\\0\" ; pub const SCNiPTR : & [u8 ; 3usize] = b\"li\\0\" ; pub const SCNoPTR : & [u8 ; 3usize] = b\"lo\\0\" ; pub const SCNuPTR : & [u8 ; 3usize] = b\"lu\\0\" ; pub const SCNxPTR : & [u8 ; 3usize] = b\"lx\\0\" ; pub const DEBUG_BALLOC : u32 = 1 ; pub const DEBUG_BCACHE : u32 = 2 ; pub const DEBUG_BITMAP : u32 = 4 ; pub const DEBUG_BLOCK_GROUP : u32 = 8 ; pub const DEBUG_BLOCKDEV : u32 = 16 ; pub const DEBUG_DIR_IDX : u32 = 32 ; pub const DEBUG_DIR : u32 = 64 ; pub const DEBUG_EXTENT : u32 = 128 ; pub const DEBUG_FS : u32 = 256 ; pub const DEBUG_HASH : u32 = 512 ; pub const DEBUG_IALLOC : u32 = 1024 ; pub const DEBUG_INODE : u32 = 2048 ; pub const DEBUG_SUPER : u32 = 4096 ; pub const DEBUG_XATTR : u32 = 8192 ; pub const DEBUG_MKFS : u32 = 16384 ; pub const DEBUG_EXT4 : u32 = 32768 ; pub const DEBUG_JBD : u32 = 65536 ; pub const DEBUG_MBR : u32 = 131072 ; pub const DEBUG_NOPREFIX : u32 = 2147483648 ; pub const DEBUG_ALL : u32 = 4294967295 ; pub const DBG_NONE : & [u8 ; 1usize] = b\"\\0\" ; pub const DBG_INFO : & [u8 ; 9usize] = b\"[info]  \\0\" ; pub const DBG_WARN : & [u8 ; 9usize] = b\"[warn]  \\0\" ; pub const DBG_ERROR : & [u8 ; 9usize] = b\"[error] \\0\" ; pub const _STDIO_H : u32 = 1 ; pub const __GNUC_VA_LIST : u32 = 1 ; pub const _____fpos_t_defined : u32 = 1 ; pub const ____mbstate_t_defined : u32 = 1 ; pub const _____fpos64_t_defined : u32 = 1 ; pub const ____FILE_defined : u32 = 1 ; pub const __FILE_defined : u32 = 1 ; pub const __struct_FILE_defined : u32 = 1 ; pub const _IO_EOF_SEEN : u32 = 16 ; pub const _IO_ERR_SEEN : u32 = 32 ; pub const _IO_USER_LOCK : u32 = 32768 ; pub const _IOFBF : u32 = 0 ; pub const _IOLBF : u32 = 1 ; pub const _IONBF : u32 = 2 ; pub const BUFSIZ : u32 = 8192 ; pub const EOF : i32 = - 1 ; pub const P_tmpdir : & [u8 ; 5usize] = b\"/tmp\\0\" ; pub const _BITS_STDIO_LIM_H : u32 = 1 ; pub const L_tmpnam : u32 = 20 ; pub const TMP_MAX : u32 = 238328 ; pub const FILENAME_MAX : u32 = 4096 ; pub const L_ctermid : u32 = 9 ; pub const FOPEN_MAX : u32 = 16 ; pub const __HAVE_FLOAT128 : u32 = 0 ; pub const __HAVE_DISTINCT_FLOAT128 : u32 = 0 ; pub const __HAVE_FLOAT64X : u32 = 1 ; pub const __HAVE_FLOAT64X_LONG_DOUBLE : u32 = 1 ; pub const __HAVE_FLOAT16 : u32 = 0 ; pub const __HAVE_FLOAT32 : u32 = 1 ; pub const __HAVE_FLOAT64 : u32 = 1 ; pub const __HAVE_FLOAT32X : u32 = 1 ; pub const __HAVE_FLOAT128X : u32 = 0 ; pub const __HAVE_DISTINCT_FLOAT16 : u32 = 0 ; pub const __HAVE_DISTINCT_FLOAT32 : u32 = 0 ; pub const __HAVE_DISTINCT_FLOAT64 : u32 = 0 ; pub const __HAVE_DISTINCT_FLOAT32X : u32 = 0 ; pub const __HAVE_DISTINCT_FLOAT64X : u32 = 0 ; pub const __HAVE_DISTINCT_FLOAT128X : u32 = 0 ; pub const __HAVE_FLOATN_NOT_TYPEDEF : u32 = 0 ; pub type __u_char = :: core :: ffi :: c_uchar ; pub type __u_short = :: core :: ffi :: c_ushort ; pub type __u_int = :: core :: ffi :: c_uint ; pub type __u_long = :: core :: ffi :: c_ulong ; pub type __int8_t = :: core :: ffi :: c_schar ; pub type __uint8_t = :: core :: ffi :: c_uchar ; pub type __int16_t = :: core :: ffi :: c_short ; pub type __uint16_t = :: core :: ffi :: c_ushort ; pub type __int32_t = :: core :: ffi :: c_int ; pub type __uint32_t = :: core :: ffi :: c_uint ; pub type __int64_t = :: core :: ffi :: c_long ; pub type __uint64_t = :: core :: ffi :: c_ulong ; pub type __int_least8_t = __int8_t ; pub type __uint_least8_t = __uint8_t ; pub type __int_least16_t = __int16_t ; pub type __uint_least16_t = __uint16_t ; pub type __int_least32_t = __int32_t ; pub type __uint_least32_t = __uint32_t ; pub type __int_least64_t = __int64_t ; pub type __uint_least64_t = __uint64_t ; pub type __quad_t = :: core :: ffi :: c_long ; pub type __u_quad_t = :: core :: ffi :: c_ulong ; pub type __intmax_t = :: core :: ffi :: c_long ; pub type __uintmax_t = :: core :: ffi :: c_ulong ; pub type __dev_t = :: core :: ffi :: c_ulong ; pub type __uid_t = :: core :: ffi :: c_uint ; pub type __gid_t = :: core :: ffi :: c_uint ; pub type __ino_t = :: core :: ffi :: c_ulong ; pub type __ino64_t = :: core :: ffi :: c_ulong ; pub type __mode_t = :: core :: ffi :: c_uint ; pub type __nlink_t = :: core :: ffi :: c_ulong ; pub type __off_t = :: core :: ffi :: c_long ; pub type __off64_t = :: core :: ffi :: c_long ; pub type __pid_t = :: core :: ffi :: c_int ; # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct __fsid_t { pub __val : [:: core :: ffi :: c_int ; 2usize] , } pub type __clock_t = :: core :: ffi :: c_long ; pub type __rlim_t = :: core :: ffi :: c_ulong ; pub type __rlim64_t = :: core :: ffi :: c_ulong ; pub type __id_t = :: core :: ffi :: c_uint ; pub type __time_t = :: core :: ffi :: c_long ; pub type __useconds_t = :: core :: ffi :: c_uint ; pub type __suseconds_t = :: core :: ffi :: c_long ; pub type __suseconds64_t = :: core :: ffi :: c_long ; pub type __daddr_t = :: core :: ffi :: c_int ; pub type __key_t = :: core :: ffi :: c_int ; pub type __clockid_t = :: core :: ffi :: c_int ; pub type __timer_t = * mut :: core :: ffi :: c_void ; pub type __blksize_t = :: core :: ffi :: c_long ; pub type __blkcnt_t = :: core :: ffi :: c_long ; pub type __blkcnt64_t = :: core :: ffi :: c_long ; pub type __fsblkcnt_t = :: core :: ffi :: c_ulong ; pub type __fsblkcnt64_t = :: core :: ffi :: c_ulong ; pub type __fsfilcnt_t = :: core :: ffi :: c_ulong ; pub type __fsfilcnt64_t = :: core :: ffi :: c_ulong ; pub type __fsword_t = :: core :: ffi :: c_long ; pub type __ssize_t = :: core :: ffi :: c_long ; pub type __syscall_slong_t = :: core :: ffi :: c_long ; pub type __syscall_ulong_t = :: core :: ffi :: c_ulong ; pub type __loff_t = __off64_t ; pub type __caddr_t = * mut :: core :: ffi :: c_char ; pub type __intptr_t = :: core :: ffi :: c_long ; pub type __socklen_t = :: core :: ffi :: c_uint ; pub type __sig_atomic_t = :: core :: ffi :: c_int ; pub type int_least8_t = __int_least8_t ; pub type int_least16_t = __int_least16_t ; pub type int_least32_t = __int_least32_t ; pub type int_least64_t = __int_least64_t ; pub type uint_least8_t = __uint_least8_t ; pub type uint_least16_t = __uint_least16_t ; pub type uint_least32_t = __uint_least32_t ; pub type uint_least64_t = __uint_least64_t ; pub type int_fast8_t = :: core :: ffi :: c_schar ; pub type int_fast16_t = :: core :: ffi :: c_long ; pub type int_fast32_t = :: core :: ffi :: c_long ; pub type int_fast64_t = :: core :: ffi :: c_long ; pub type uint_fast8_t = :: core :: ffi :: c_uchar ; pub type uint_fast16_t = :: core :: ffi :: c_ulong ; pub type uint_fast32_t = :: core :: ffi :: c_ulong ; pub type uint_fast64_t = :: core :: ffi :: c_ulong ; pub type intmax_t = __intmax_t ; pub type uintmax_t = __uintmax_t ; pub type wchar_t = :: core :: ffi :: c_int ; # [repr (C)] # [repr (align (16))] # [derive (Debug , Copy , Clone)] pub struct max_align_t { pub __clang_max_align_nonce1 : :: core :: ffi :: c_longlong , pub __bindgen_padding_0 : u64 , pub __clang_max_align_nonce2 : u128 , } # [doc = \"@brief   Single block descriptor\"] # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct ext4_block { # [doc = \"@brief   Logical block ID\"] pub lb_id : u64 , # [doc = \"@brief   Buffer\"] pub buf : * mut ext4_buf , # [doc = \"@brief   Data buffer.\"] pub data : * mut u8 , } # [doc = \"@brief   Single block descriptor\"] # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct ext4_buf { # [doc = \"@brief   Flags\"] pub flags : :: core :: ffi :: c_int , # [doc = \"@brief   Logical block address\"] pub lba : u64 , # [doc = \"@brief   Data buffer.\"] pub data : * mut u8 , # [doc = \"@brief   LRU priority. (unused)\"] pub lru_prio : u32 , # [doc = \"@brief   LRU id.\"] pub lru_id : u32 , # [doc = \"@brief   Reference count table\"] pub refctr : u32 , # [doc = \"@brief   The block cache this buffer belongs to.\"] pub bc : * mut ext4_bcache , # [doc = \"@brief   Whether or not buffer is on dirty list.\"] pub on_dirty_list : bool , # [doc = \"@brief   LBA tree node\"] pub lba_node : ext4_buf__bindgen_ty_1 , # [doc = \"@brief   LRU tree node\"] pub lru_node : ext4_buf__bindgen_ty_2 , # [doc = \"@brief   Dirty list node\"] pub dirty_node : ext4_buf__bindgen_ty_3 , # [doc = \"@brief   Callback routine after a disk-write operation.\\n @param   bc block cache descriptor\\n @param   buf buffer descriptor\\n @param   standard error code returned by bdev->bwrite()\\n @param   arg argument passed to this routine\"] pub end_write : :: core :: option :: Option < unsafe extern \"C\" fn (bc : * mut ext4_bcache , buf : * mut ext4_buf , res : :: core :: ffi :: c_int , arg : * mut :: core :: ffi :: c_void) > , # [doc = \"@brief   argument passed to end_write() callback.\"] pub end_write_arg : * mut :: core :: ffi :: c_void , } # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct ext4_buf__bindgen_ty_1 { pub rbe_left : * mut ext4_buf , pub rbe_right : * mut ext4_buf , pub rbe_parent : * mut ext4_buf , pub rbe_color : :: core :: ffi :: c_int , } # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct ext4_buf__bindgen_ty_2 { pub rbe_left : * mut ext4_buf , pub rbe_right : * mut ext4_buf , pub rbe_parent : * mut ext4_buf , pub rbe_color : :: core :: ffi :: c_int , } # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct ext4_buf__bindgen_ty_3 { pub sle_next : * mut ext4_buf , } # [doc = \"@brief   Block cache descriptor\"] # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct ext4_bcache { # [doc = \"@brief   Item count in block cache\"] pub cnt : u32 , # [doc = \"@brief   Item size in block cache\"] pub itemsize : u32 , # [doc = \"@brief   Last recently used counter\"] pub lru_ctr : u32 , # [doc = \"@brief   Currently referenced datablocks\"] pub ref_blocks : u32 , # [doc = \"@brief   Maximum referenced datablocks\"] pub max_ref_blocks : u32 , # [doc = \"@brief   The blockdev binded to this block cache\"] pub bdev : * mut ext4_blockdev , # [doc = \"@brief   The cache should not be shaked\"] pub dont_shake : bool , # [doc = \"@brief   A tree holding all bufs\"] pub lba_root : ext4_bcache_ext4_buf_lba , # [doc = \"@brief   A tree holding unreferenced bufs\"] pub lru_root : ext4_bcache_ext4_buf_lru , # [doc = \"@brief   A singly-linked list holding dirty buffers\"] pub dirty_list : ext4_bcache_ext4_buf_dirty , } # [doc = \"@brief   A tree holding all bufs\"] # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct ext4_bcache_ext4_buf_lba { pub rbh_root : * mut ext4_buf , } # [doc = \"@brief   A tree holding unreferenced bufs\"] # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct ext4_bcache_ext4_buf_lru { pub rbh_root : * mut ext4_buf , } # [doc = \"@brief   A singly-linked list holding dirty buffers\"] # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct ext4_bcache_ext4_buf_dirty { pub slh_first : * mut ext4_buf , } pub const bcache_state_bits_BC_UPTODATE : bcache_state_bits = 0 ; pub const bcache_state_bits_BC_DIRTY : bcache_state_bits = 1 ; pub const bcache_state_bits_BC_FLUSH : bcache_state_bits = 2 ; pub const bcache_state_bits_BC_TMP : bcache_state_bits = 3 ; # [doc = \"@brief buffer state bits\\n\\n  - BC♡UPTODATE: Buffer contains valid data.\\n  - BC_DIRTY: Buffer is dirty.\\n  - BC_FLUSH: Buffer will be immediately flushed,\\n              when no one references it.\\n  - BC_TMP: Buffer will be dropped once its refctr\\n            reaches zero.\"] pub type bcache_state_bits = :: core :: ffi :: c_uint ; extern \"C\" { # [doc = \"@brief   Dynamic initialization of block cache.\\n @param   bc block cache descriptor\\n @param   cnt items count in block cache\\n @param   itemsize single item size (in bytes)\\n @return  standard error code\"] pub fn ext4_bcache_init_dynamic (bc : * mut ext4_bcache , cnt : u32 , itemsize : u32) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Do cleanup works on block cache.\\n @param   bc block cache descriptor.\"] pub fn ext4_bcache_cleanup (bc : * mut ext4_bcache) ; } extern \"C\" { # [doc = \"@brief   Dynamic de-initialization of block cache.\\n @param   bc block cache descriptor\\n @return  standard error code\"] pub fn ext4_bcache_fini_dynamic (bc : * mut ext4_bcache) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Get a buffer with the lowest LRU counter in bcache.\\n @param   bc block cache descriptor\\n @return  buffer with the lowest LRU counter\"] pub fn ext4_buf_lowest_lru (bc : * mut ext4_bcache) -> * mut ext4_buf ; } extern \"C\" { # [doc = \"@brief   Drop unreferenced buffer from bcache.\\n @param   bc block cache descriptor\\n @param   buf buffer\"] pub fn ext4_bcache_drop_buf (bc : * mut ext4_bcache , buf : * mut ext4_buf) ; } extern \"C\" { # [doc = \"@brief   Invalidate a buffer.\\n @param   bc block cache descriptor\\n @param   buf buffer\"] pub fn ext4_bcache_invalidate_buf (bc : * mut ext4_bcache , buf : * mut ext4_buf) ; } extern \"C\" { # [doc = \"@brief   Invalidate a range of buffers.\\n @param   bc block cache descriptor\\n @param   from starting lba\\n @param   cnt block counts\"] pub fn ext4_bcache_invalidate_lba (bc : * mut ext4_bcache , from : u64 , cnt : u32) ; } extern \"C\" { # [doc = \"@brief   Find existing buffer from block cache memory.\\n          Unreferenced block allocation is based on LRU\\n          (Last Recently Used) algorithm.\\n @param   bc block cache descriptor\\n @param   b block to alloc\\n @param   lba logical block address\\n @return  block cache buffer\"] pub fn ext4_bcache_find_get (bc : * mut ext4_bcache , b : * mut ext4_block , lba : u64) -> * mut ext4_buf ; } extern \"C\" { # [doc = \"@brief   Allocate block from block cache memory.\\n          Unreferenced block allocation is based on LRU\\n          (Last Recently Used) algorithm.\\n @param   bc block cache descriptor\\n @param   b block to alloc\\n @param   is_new block is new (needs to be read)\\n @return  standard error code\"] pub fn ext4_bcache_alloc (bc : * mut ext4_bcache , b : * mut ext4_block , is_new : * mut bool) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Free block from cache memory (decrement reference counter).\\n @param   bc block cache descriptor\\n @param   b block to free\\n @return  standard error code\"] pub fn ext4_bcache_free (bc : * mut ext4_bcache , b : * mut ext4_block) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Return a full status of block cache.\\n @param   bc block cache descriptor\\n @return  full status\"] pub fn ext4_bcache_is_full (bc : * mut ext4_bcache) -> bool ; } # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct ext4_blockdev_iface { # [doc = \"@brief   Open device function\\n @param   bdev block device.\"] pub open : :: core :: option :: Option < unsafe extern \"C\" fn (bdev : * mut ext4_blockdev) -> :: core :: ffi :: c_int > , # [doc = \"@brief   Block read function.\\n @param   bdev block device\\n @param   buf output buffer\\n @param   blk_id block id\\n @param   blk_cnt block count\"] pub bread : :: core :: option :: Option < unsafe extern \"C\" fn (bdev : * mut ext4_blockdev , buf : * mut :: core :: ffi :: c_void , blk_id : u64 , blk_cnt : u32) -> :: core :: ffi :: c_int > , # [doc = \"@brief   Block write function.\\n @param   buf input buffer\\n @param   blk_id block id\\n @param   blk_cnt block count\"] pub bwrite : :: core :: option :: Option < unsafe extern \"C\" fn (bdev : * mut ext4_blockdev , buf : * const :: core :: ffi :: c_void , blk_id : u64 , blk_cnt : u32) -> :: core :: ffi :: c_int > , # [doc = \"@brief   Close device function.\\n @param   bdev block device.\"] pub close : :: core :: option :: Option < unsafe extern \"C\" fn (bdev : * mut ext4_blockdev) -> :: core :: ffi :: c_int > , # [doc = \"@brief   Lock block device. Required in multi partition mode\\n          operations. Not mandatory field.\\n @param   bdev block device.\"] pub lock : :: core :: option :: Option < unsafe extern \"C\" fn (bdev : * mut ext4_blockdev) -> :: core :: ffi :: c_int > , # [doc = \"@brief   Unlock block device. Required in multi partition mode\\n          operations. Not mandatory field.\\n @param   bdev block device.\"] pub unlock : :: core :: option :: Option < unsafe extern \"C\" fn (bdev : * mut ext4_blockdev) -> :: core :: ffi :: c_int > , # [doc = \"@brief   Block size (bytes): physical\"] pub ph_bsize : u32 , # [doc = \"@brief   Block count: physical\"] pub ph_bcnt : u64 , # [doc = \"@brief   Block size buffer: physical\"] pub ph_bbuf : * mut u8 , # [doc = \"@brief   Reference counter to block device interface\"] pub ph_refctr : u32 , # [doc = \"@brief   Physical read counter\"] pub bread_ctr : u32 , # [doc = \"@brief   Physical write counter\"] pub bwrite_ctr : u32 , # [doc = \"@brief   User data pointer\"] pub p_user : * mut :: core :: ffi :: c_void , } # [doc = \"@brief   Definition of the simple block device.\"] # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct ext4_blockdev { # [doc = \"@brief Block device interface\"] pub bdif : * mut ext4_blockdev_iface , # [doc = \"@brief Offset in bdif. For multi partition mode.\"] pub part_offset : u64 , # [doc = \"@brief Part size in bdif. For multi partition mode.\"] pub part_size : u64 , # [doc = \"@brief   Block cache.\"] pub bc : * mut ext4_bcache , # [doc = \"@brief   Block size (bytes) logical\"] pub lg_bsize : u32 , # [doc = \"@brief   Block count: logical\"] pub lg_bcnt : u64 , # [doc = \"@brief   Cache write back mode reference counter\"] pub cache_write_back : u32 , # [doc = \"@brief   The filesystem this block device belongs to.\"] pub fs : * mut ext4_fs , pub journal : * mut :: core :: ffi :: c_void , } extern \"C\" { # [doc = \"@brief   Block device initialization.\\n @param   bdev block device descriptor\\n @return  standard error code\"] pub fn ext4_block_init (bdev : * mut ext4_blockdev) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Binds a bcache to block device.\\n @param   bdev block device descriptor\\n @param   bc block cache descriptor\\n @return  standard error code\"] pub fn ext4_block_bind_bcache (bdev : * mut ext4_blockdev , bc : * mut ext4_bcache) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Close block device\\n @param   bdev block device descriptor\\n @return  standard error code\"] pub fn ext4_block_fini (bdev : * mut ext4_blockdev) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Flush data in given buffer to disk.\\n @param   bdev block device descriptor\\n @param   buf buffer\\n @return  standard error code\"] pub fn ext4_block_flush_buf (bdev : * mut ext4_blockdev , buf : * mut ext4_buf) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Flush data in buffer of given lba to disk,\\n          if that buffer exists in block cache.\\n @param   bdev block device descriptor\\n @param   lba logical block address\\n @return  standard error code\"] pub fn ext4_block_flush_lba (bdev : * mut ext4_blockdev , lba : u64) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Set logical block size in block device.\\n @param   bdev block device descriptor\\n @param   lb_bsize logical block size (in bytes)\"] pub fn ext4_block_set_lb_size (bdev : * mut ext4_blockdev , lb_bsize : u32) ; } extern \"C\" { # [doc = \"@brief   Block get function (through cache, don't read).\\n @param   bdev block device descriptor\\n @param   b block descriptor\\n @param   lba logical block address\\n @return  standard error code\"] pub fn ext4_block_get_noread (bdev : * mut ext4_blockdev , b : * mut ext4_block , lba : u64) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Block get function (through cache).\\n @param   bdev block device descriptor\\n @param   b block descriptor\\n @param   lba logical block address\\n @return  standard error code\"] pub fn ext4_block_get (bdev : * mut ext4_blockdev , b : * mut ext4_block , lba : u64) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Block set procedure (through cache).\\n @param   bdev block device descriptor\\n @param   b block descriptor\\n @return  standard error code\"] pub fn ext4_block_set (bdev : * mut ext4_blockdev , b : * mut ext4_block) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Block read procedure (without cache)\\n @param   bdev block device descriptor\\n @param   buf output buffer\\n @param   lba logical block address\\n @return  standard error code\"] pub fn ext4_blocks_get_direct (bdev : * mut ext4_blockdev , buf : * mut :: core :: ffi :: c_void , lba : u64 , cnt : u32) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Block write procedure (without cache)\\n @param   bdev block device descriptor\\n @param   buf output buffer\\n @param   lba logical block address\\n @return  standard error code\"] pub fn ext4_blocks_set_direct (bdev : * mut ext4_blockdev , buf : * const :: core :: ffi :: c_void , lba : u64 , cnt : u32) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Write to block device (by direct address).\\n @param   bdev block device descriptor\\n @param   off byte offset in block device\\n @param   buf input buffer\\n @param   len length of the write buffer\\n @return  standard error code\"] pub fn ext4_block_writebytes (bdev : * mut ext4_blockdev , off : u64 , buf : * const :: core :: ffi :: c_void , len : u32) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Read freom block device (by direct address).\\n @param   bdev block device descriptor\\n @param   off byte offset in block device\\n @param   buf input buffer\\n @param   len length of the write buffer\\n @return  standard error code\"] pub fn ext4_block_readbytes (bdev : * mut ext4_blockdev , off : u64 , buf : * mut :: core :: ffi :: c_void , len : u32) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Flush all dirty buffers to disk\\n @param   bdev block device descriptor\\n @return  standard error code\"] pub fn ext4_block_cache_flush (bdev : * mut ext4_blockdev) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Enable/disable write back cache mode\\n @param   bdev block device descriptor\\n @param   on_off\\n              !0 - ENABLE\\n               0 - DISABLE (all delayed cache buffers will be flushed)\\n @return  standard error code\"] pub fn ext4_block_cache_write_back (bdev : * mut ext4_blockdev , on_off : u8) -> :: core :: ffi :: c_int ; } pub type ext4_lblk_t = u32 ; pub type ext4_fsblk_t = u64 ; # [repr (C , packed)] # [derive (Debug , Copy , Clone)] pub struct ext4_sblock { pub inodes_count : u32 , pub blocks_count_lo : u32 , pub reserved_blocks_count_lo : u32 , pub free_blocks_count_lo : u32 , pub free_inodes_count : u32 , pub first_data_block : u32 , pub log_block_size : u32 , pub log_cluster_size : u32 , pub blocks_per_group : u32 , pub frags_per_group : u32 , pub inodes_per_group : u32 , pub mount_time : u32 , pub write_time : u32 , pub mount_count : u16 , pub max_mount_count : u16 , pub magic : u16 , pub state : u16 , pub errors : u16 , pub minor_rev_level : u16 , pub last_check_time : u32 , pub check_interval : u32 , pub creator_os : u32 , pub rev_level : u32 , pub def_resuid : u16 , pub def_resgid : u16 , pub first_inode : u32 , pub inode_size : u16 , pub block_group_index : u16 , pub features_compatible : u32 , pub features_incompatible : u32 , pub features_read_only : u32 , pub uuid : [u8 ; 16usize] , pub volume_name : [:: core :: ffi :: c_char ; 16usize] , pub last_mounted : [:: core :: ffi :: c_char ; 64usize] , pub algorithm_usage_bitmap : u32 , pub s_prealloc_blocks : u8 , pub s_prealloc_dir_blocks : u8 , pub s_reserved_gdt_blocks : u16 , pub journal_uuid : [u8 ; 16usize] , pub journal_inode_number : u32 , pub journal_dev : u32 , pub last_orphan : u32 , pub hash_seed : [u32 ; 4usize] , pub default_hash_version : u8 , pub journal_backup_type : u8 , pub desc_size : u16 , pub default_mount_opts : u32 , pub first_meta_bg : u32 , pub mkfs_time : u32 , pub journal_blocks : [u32 ; 17usize] , pub blocks_count_hi : u32 , pub reserved_blocks_count_hi : u32 , pub free_blocks_count_hi : u32 , pub min_extra_isize : u16 , pub want_extra_isize : u16 , pub flags : u32 , pub raid_stride : u16 , pub mmp_interval : u16 , pub mmp_block : u64 , pub raid_stripe_width : u32 , pub log_groups_per_flex : u8 , pub checksum_type : u8 , pub reserved_pad : u16 , pub kbytes_written : u64 , pub snapshot_inum : u32 , pub snapshot_id : u32 , pub snapshot_r_blocks_count : u64 , pub snapshot_list : u32 , pub error_count : u32 , pub first_error_time : u32 , pub first_error_ino : u32 , pub first_error_block : u64 , pub first_error_func : [u8 ; 32usize] , pub first_error_line : u32 , pub last_error_time : u32 , pub last_error_ino : u32 , pub last_error_line : u32 , pub last_error_block : u64 , pub last_error_func : [u8 ; 32usize] , pub mount_opts : [u8 ; 64usize] , pub usr_quota_inum : u32 , pub grp_quota_inum : u32 , pub overhead_clusters : u32 , pub backup_bgs : [u32 ; 2usize] , pub encrypt_algos : [u8 ; 4usize] , pub encrypt_pw_salt : [u8 ; 16usize] , pub lpf_ino : u32 , pub padding : [u32 ; 100usize] , pub checksum : u32 , } # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct ext4_bgroup { pub block_bitmap_lo : u32 , pub inode_bitmap_lo : u32 , pub inode_table_first_block_lo : u32 , pub free_blocks_count_lo : u16 , pub free_inodes_count_lo : u16 , pub used_dirs_count_lo : u16 , pub flags : u16 , pub exclude_bitmap_lo : u32 , pub block_bitmap_csum_lo : u16 , pub inode_bitmap_csum_lo : u16 , pub itable_unused_lo : u16 , pub checksum : u16 , pub block_bitmap_hi : u32 , pub inode_bitmap_hi : u32 , pub inode_table_first_block_hi : u32 , pub free_blocks_count_hi : u16 , pub free_inodes_count_hi : u16 , pub used_dirs_count_hi : u16 , pub itable_unused_hi : u16 , pub exclude_bitmap_hi : u32 , pub block_bitmap_csum_hi : u16 , pub inode_bitmap_csum_hi : u16 , pub reserved : u32 , } # [repr (C , packed)] # [derive (Copy , Clone)] pub struct ext4_inode { pub mode : u16 , pub uid : u16 , pub size_lo : u32 , pub access_time : u32 , pub change_inode_time : u32 , pub modification_time : u32 , pub deletion_time : u32 , pub gid : u16 , pub links_count : u16 , pub blocks_count_lo : u32 , pub flags : u32 , pub unused_osd1 : u32 , pub blocks : [u32 ; 15usize] , pub generation : u32 , pub file_acl_lo : u32 , pub size_hi : u32 , pub obso_faddr : u32 , pub osd2 : ext4_inode__bindgen_ty_1 , pub extra_isize : u16 , pub checksum_hi : u16 , pub ctime_extra : u32 , pub mtime_extra : u32 , pub atime_extra : u32 , pub crtime : u32 , pub crtime_extra : u32 , pub version_hi : u32 , } # [repr (C)] # [derive (Copy , Clone)] pub union ext4_inode__bindgen_ty_1 { pub linux2 : ext4_inode__bindgen_ty_1__bindgen_ty_1 , pub hurd2 : ext4_inode__bindgen_ty_1__bindgen_ty_2 , } # [repr (C , packed)] # [derive (Debug , Copy , Clone)] pub struct ext4_inode__bindgen_ty_1__bindgen_ty_1 { pub blocks_high : u16 , pub file_acl_high : u16 , pub uid_high : u16 , pub gid_high : u16 , pub checksum_lo : u16 , pub reserved2 : u16 , } # [repr (C , packed)] # [derive (Debug , Copy , Clone)] pub struct ext4_inode__bindgen_ty_1__bindgen_ty_2 { pub reserved1 : u16 , pub mode_high : u16 , pub uid_high : u16 , pub gid_high : u16 , pub author : u32 , } pub const EXT4_DE_UNKNOWN : _bindgen_ty_1 = 0 ; pub const EXT4_DE_REG_FILE : _bindgen_ty_1 = 1 ; pub const EXT4_DE_DIR : _bindgen_ty_1 = 2 ; pub const EXT4_DE_CHRDEV : _bindgen_ty_1 = 3 ; pub const EXT4_DE_BLKDEV : _bindgen_ty_1 = 4 ; pub const EXT4_DE_FIFO : _bindgen_ty_1 = 5 ; pub const EXT4_DE_SOCK : _bindgen_ty_1 = 6 ; pub const EXT4_DE_SYMLINK : _bindgen_ty_1 = 7 ; # [doc = \"@brief   Directory entry types.\"] pub type _bindgen_ty_1 = :: core :: ffi :: c_uint ; # [repr (C)] # [derive (Copy , Clone)] pub union ext4_dir_en_internal { pub name_length_high : u8 , pub inode_type : u8 , } # [doc = \" Linked list directory entry structure\"] # [repr (C , packed)] pub struct ext4_dir_en { pub inode : u32 , pub entry_len : u16 , pub name_len : u8 , pub in_ : ext4_dir_en_internal , pub name : __IncompleteArrayField < u8 > , } # [repr (C , packed)] # [derive (Debug , Copy , Clone)] pub struct ext4_dir_idx_climit { pub limit : u16 , pub count : u16 , } # [repr (C , packed)] # [derive (Debug , Copy , Clone)] pub struct ext4_dir_idx_dot_en { pub inode : u32 , pub entry_length : u16 , pub name_length : u8 , pub inode_type : u8 , pub name : [u8 ; 4usize] , } # [repr (C , packed)] # [derive (Debug , Copy , Clone)] pub struct ext4_dir_idx_rinfo { pub reserved_zero : u32 , pub hash_version : u8 , pub info_length : u8 , pub indirect_levels : u8 , pub unused_flags : u8 , } # [repr (C , packed)] # [derive (Debug , Copy , Clone)] pub struct ext4_dir_idx_entry { pub hash : u32 , pub block : u32 , } # [repr (C)] # [derive (Debug)] pub struct ext4_dir_idx_root { pub dots : [ext4_dir_idx_dot_en ; 2usize] , pub info : ext4_dir_idx_rinfo , pub en : __IncompleteArrayField < ext4_dir_idx_entry > , } # [repr (C , packed)] # [derive (Debug , Copy , Clone)] pub struct ext4_fake_dir_entry { pub inode : u32 , pub entry_length : u16 , pub name_length : u8 , pub inode_type : u8 , } # [repr (C)] # [derive (Debug)] pub struct ext4_dir_idx_node { pub fake : ext4_fake_dir_entry , pub entries : __IncompleteArrayField < ext4_dir_idx_entry > , } # [repr (C , packed)] # [derive (Debug , Copy , Clone)] pub struct ext4_dir_idx_tail { pub reserved : u32 , pub checksum : u32 , } # [repr (C , packed)] # [derive (Debug , Copy , Clone)] pub struct ext4_dir_entry_tail { pub reserved_zero1 : u32 , pub rec_len : u16 , pub reserved_zero2 : u8 , pub reserved_ft : u8 , pub checksum : u32 , } # [repr (C , packed)] # [derive (Debug , Copy , Clone)] pub struct jbd_bhdr { pub magic : u32 , pub blocktype : u32 , pub sequence : u32 , } # [repr (C , packed)] # [derive (Debug , Copy , Clone)] pub struct jbd_commit_header { pub header : jbd_bhdr , pub chksum_type : u8 , pub chksum_size : u8 , pub padding : [u8 ; 2usize] , pub chksum : [u32 ; 8usize] , pub commit_sec : u64 , pub commit_nsec : u32 , } # [repr (C , packed)] # [derive (Debug , Copy , Clone)] pub struct jbd_block_tag3 { pub blocknr : u32 , pub flags : u32 , pub blocknr_high : u32 , pub checksum : u32 , } # [repr (C , packed)] # [derive (Debug , Copy , Clone)] pub struct jbd_block_tag { pub blocknr : u32 , pub checksum : u16 , pub flags : u16 , pub blocknr_high : u32 , } # [repr (C , packed)] # [derive (Debug , Copy , Clone)] pub struct jbd_block_tail { pub checksum : u32 , } # [repr (C , packed)] # [derive (Debug , Copy , Clone)] pub struct jbd_revoke_header { pub header : jbd_bhdr , pub count : u32 , } # [repr (C , packed)] # [derive (Debug , Copy , Clone)] pub struct jbd_revoke_tail { pub checksum : u32 , } # [repr (C , packed)] # [derive (Debug , Copy , Clone)] pub struct jbd_sb { pub header : jbd_bhdr , pub blocksize : u32 , pub maxlen : u32 , pub first : u32 , pub sequence : u32 , pub start : u32 , pub error_val : i32 , pub feature_compat : u32 , pub feature_incompat : u32 , pub feature_ro_compat : u32 , pub uuid : [u8 ; 16usize] , pub nr_users : u32 , pub dynsuper : u32 , pub max_transaction : u32 , pub max_trandata : u32 , pub checksum_type : u8 , pub padding2 : [u8 ; 3usize] , pub padding : [u32 ; 42usize] , pub checksum : u32 , pub users : [u8 ; 768usize] , } pub type __gwchar_t = :: core :: ffi :: c_int ; # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct imaxdiv_t { pub quot : :: core :: ffi :: c_long , pub rem : :: core :: ffi :: c_long , } extern \"C\" { pub fn imaxabs (__n : intmax_t) -> intmax_t ; } extern \"C\" { pub fn imaxdiv (__numer : intmax_t , __denom : intmax_t) -> imaxdiv_t ; } extern \"C\" { pub fn strtoimax (__nptr : * const :: core :: ffi :: c_char , __endptr : * mut * mut :: core :: ffi :: c_char , __base : :: core :: ffi :: c_int) -> intmax_t ; } extern \"C\" { pub fn strtoumax (__nptr : * const :: core :: ffi :: c_char , __endptr : * mut * mut :: core :: ffi :: c_char , __base : :: core :: ffi :: c_int) -> uintmax_t ; } extern \"C\" { pub fn wcstoimax (__nptr : * const __gwchar_t , __endptr : * mut * mut __gwchar_t , __base : :: core :: ffi :: c_int) -> intmax_t ; } extern \"C\" { pub fn wcstoumax (__nptr : * const __gwchar_t , __endptr : * mut * mut __gwchar_t , __base : :: core :: ffi :: c_int) -> uintmax_t ; } extern \"C\" { # [doc = \"@brief   Global mask debug set.\\n @param   m new debug mask.\"] pub fn ext4_dmask_set (m : u32) ; } extern \"C\" { # [doc = \"@brief   Global mask debug clear.\\n @param   m new debug mask.\"] pub fn ext4_dmask_clr (m : u32) ; } extern \"C\" { # [doc = \"@brief   Global debug mask get.\\n @return  debug mask\"] pub fn ext4_dmask_get () -> u32 ; } pub type va_list = __builtin_va_list ; pub type __gnuc_va_list = __builtin_va_list ; # [repr (C)] # [derive (Copy , Clone)] pub struct __mbstate_t { pub __count : :: core :: ffi :: c_int , pub __value : __mbstate_t__bindgen_ty_1 , } # [repr (C)] # [derive (Copy , Clone)] pub union __mbstate_t__bindgen_ty_1 { pub __wch : :: core :: ffi :: c_uint , pub __wchb : [:: core :: ffi :: c_char ; 4usize] , } # [repr (C)] # [derive (Copy , Clone)] pub struct _G_fpos_t { pub __pos : __off_t , pub __state : __mbstate_t , } pub type __fpos_t = _G_fpos_t ; # [repr (C)] # [derive (Copy , Clone)] pub struct _G_fpos64_t { pub __pos : __off64_t , pub __state : __mbstate_t , } pub type __fpos64_t = _G_fpos64_t ; pub type __FILE = _IO_FILE ; pub type FILE = _IO_FILE ; # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct _IO_marker { _unused : [u8 ; 0] , } # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct _IO_codecvt { _unused : [u8 ; 0] , } # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct _IO_wide_data { _unused : [u8 ; 0] , } pub type _IO_lock_t = :: core :: ffi :: c_void ; # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct _IO_FILE { pub _flags : :: core :: ffi :: c_int , pub _IO_read_ptr : * mut :: core :: ffi :: c_char , pub _IO_read_end : * mut :: core :: ffi :: c_char , pub _IO_read_base : * mut :: core :: ffi :: c_char , pub _IO_write_base : * mut :: core :: ffi :: c_char , pub _IO_write_ptr : * mut :: core :: ffi :: c_char , pub _IO_write_end : * mut :: core :: ffi :: c_char , pub _IO_buf_base : * mut :: core :: ffi :: c_char , pub _IO_buf_end : * mut :: core :: ffi :: c_char , pub _IO_save_base : * mut :: core :: ffi :: c_char , pub _IO_backup_base : * mut :: core :: ffi :: c_char , pub _IO_save_end : * mut :: core :: ffi :: c_char , pub _markers : * mut _IO_marker , pub _chain : * mut _IO_FILE , pub _fileno : :: core :: ffi :: c_int , pub _flags2 : :: core :: ffi :: c_int , pub _old_offset : __off_t , pub _cur_column : :: core :: ffi :: c_ushort , pub _vtable_offset : :: core :: ffi :: c_schar , pub _shortbuf : [:: core :: ffi :: c_char ; 1usize] , pub _lock : * mut _IO_lock_t , pub _offset : __off64_t , pub _codecvt : * mut _IO_codecvt , pub _wide_data : * mut _IO_wide_data , pub _freeres_list : * mut _IO_FILE , pub _freeres_buf : * mut :: core :: ffi :: c_void , pub __pad5 : usize , pub _mode : :: core :: ffi :: c_int , pub _unused2 : [:: core :: ffi :: c_char ; 20usize] , } pub type off_t = __off_t ; pub type fpos_t = __fpos_t ; extern \"C\" { pub static mut stdin : * mut FILE ; } extern \"C\" { pub static mut stdout : * mut FILE ; } extern \"C\" { pub static mut stderr : * mut FILE ; } extern \"C\" { pub fn remove (__filename : * const :: core :: ffi :: c_char) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn rename (__old : * const :: core :: ffi :: c_char , __new : * const :: core :: ffi :: c_char) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn renameat (__oldfd : :: core :: ffi :: c_int , __old : * const :: core :: ffi :: c_char , __newfd : :: core :: ffi :: c_int , __new : * const :: core :: ffi :: c_char) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn fclose (__stream : * mut FILE) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn tmpfile () -> * mut FILE ; } extern \"C\" { pub fn tmpnam (arg1 : * mut :: core :: ffi :: c_char) -> * mut :: core :: ffi :: c_char ; } extern \"C\" { pub fn tmpnam_r (__s : * mut :: core :: ffi :: c_char) -> * mut :: core :: ffi :: c_char ; } extern \"C\" { pub fn tempnam (__dir : * const :: core :: ffi :: c_char , __pfx : * const :: core :: ffi :: c_char) -> * mut :: core :: ffi :: c_char ; } extern \"C\" { pub fn fflush (__stream : * mut FILE) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn fflush_unlocked (__stream : * mut FILE) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn fopen (__filename : * const :: core :: ffi :: c_char , __modes : * const :: core :: ffi :: c_char) -> * mut FILE ; } extern \"C\" { pub fn freopen (__filename : * const :: core :: ffi :: c_char , __modes : * const :: core :: ffi :: c_char , __stream : * mut FILE) -> * mut FILE ; } extern \"C\" { pub fn fdopen (__fd : :: core :: ffi :: c_int , __modes : * const :: core :: ffi :: c_char) -> * mut FILE ; } extern \"C\" { pub fn fmemopen (__s : * mut :: core :: ffi :: c_void , __len : usize , __modes : * const :: core :: ffi :: c_char) -> * mut FILE ; } extern \"C\" { pub fn open_memstream (__bufloc : * mut * mut :: core :: ffi :: c_char , __sizeloc : * mut usize) -> * mut FILE ; } extern \"C\" { pub fn setbuf (__stream : * mut FILE , __buf : * mut :: core :: ffi :: c_char) ; } extern \"C\" { pub fn setvbuf (__stream : * mut FILE , __buf : * mut :: core :: ffi :: c_char , __modes : :: core :: ffi :: c_int , __n : usize) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn setbuffer (__stream : * mut FILE , __buf : * mut :: core :: ffi :: c_char , __size : usize) ; } extern \"C\" { pub fn setlinebuf (__stream : * mut FILE) ; } extern \"C\" { pub fn fprintf (__stream : * mut FILE , __format : * const :: core :: ffi :: c_char , ...) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn printf (__format : * const :: core :: ffi :: c_char , ...) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn sprintf (__s : * mut :: core :: ffi :: c_char , __format : * const :: core :: ffi :: c_char , ...) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn vfprintf (__s : * mut FILE , __format : * const :: core :: ffi :: c_char , __arg : * mut __va_list_tag) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn vprintf (__format : * const :: core :: ffi :: c_char , __arg : * mut __va_list_tag) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn vsprintf (__s : * mut :: core :: ffi :: c_char , __format : * const :: core :: ffi :: c_char , __arg : * mut __va_list_tag) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn snprintf (__s : * mut :: core :: ffi :: c_char , __maxlen : :: core :: ffi :: c_ulong , __format : * const :: core :: ffi :: c_char , ...) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn vsnprintf (__s : * mut :: core :: ffi :: c_char , __maxlen : :: core :: ffi :: c_ulong , __format : * const :: core :: ffi :: c_char , __arg : * mut __va_list_tag) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn vdprintf (__fd : :: core :: ffi :: c_int , __fmt : * const :: core :: ffi :: c_char , __arg : * mut __va_list_tag) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn dprintf (__fd : :: core :: ffi :: c_int , __fmt : * const :: core :: ffi :: c_char , ...) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn fscanf (__stream : * mut FILE , __format : * const :: core :: ffi :: c_char , ...) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn scanf (__format : * const :: core :: ffi :: c_char , ...) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn sscanf (__s : * const :: core :: ffi :: c_char , __format : * const :: core :: ffi :: c_char , ...) -> :: core :: ffi :: c_int ; } pub type _Float32 = f32 ; pub type _Float64 = f64 ; pub type _Float32x = f64 ; pub type _Float64x = u128 ; extern \"C\" { # [link_name = \"\\u{1}__isoc99_fscanf\"] pub fn fscanf1 (__stream : * mut FILE , __format : * const :: core :: ffi :: c_char , ...) -> :: core :: ffi :: c_int ; } extern \"C\" { # [link_name = \"\\u{1}__isoc99_scanf\"] pub fn scanf1 (__format : * const :: core :: ffi :: c_char , ...) -> :: core :: ffi :: c_int ; } extern \"C\" { # [link_name = \"\\u{1}__isoc99_sscanf\"] pub fn sscanf1 (__s : * const :: core :: ffi :: c_char , __format : * const :: core :: ffi :: c_char , ...) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn vfscanf (__s : * mut FILE , __format : * const :: core :: ffi :: c_char , __arg : * mut __va_list_tag) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn vscanf (__format : * const :: core :: ffi :: c_char , __arg : * mut __va_list_tag) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn vsscanf (__s : * const :: core :: ffi :: c_char , __format : * const :: core :: ffi :: c_char , __arg : * mut __va_list_tag) -> :: core :: ffi :: c_int ; } extern \"C\" { # [link_name = \"\\u{1}__isoc99_vfscanf\"] pub fn vfscanf1 (__s : * mut FILE , __format : * const :: core :: ffi :: c_char , __arg : * mut __va_list_tag) -> :: core :: ffi :: c_int ; } extern \"C\" { # [link_name = \"\\u{1}__isoc99_vscanf\"] pub fn vscanf1 (__format : * const :: core :: ffi :: c_char , __arg : * mut __va_list_tag) -> :: core :: ffi :: c_int ; } extern \"C\" { # [link_name = \"\\u{1}__isoc99_vsscanf\"] pub fn vsscanf1 (__s : * const :: core :: ffi :: c_char , __format : * const :: core :: ffi :: c_char , __arg : * mut __va_list_tag) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn fgetc (__stream : * mut FILE) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn getc (__stream : * mut FILE) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn getchar () -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn getc_unlocked (__stream : * mut FILE) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn getchar_unlocked () -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn fgetc_unlocked (__stream : * mut FILE) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn fputc (__c : :: core :: ffi :: c_int , __stream : * mut FILE) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn putc (__c : :: core :: ffi :: c_int , __stream : * mut FILE) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn putchar (__c : :: core :: ffi :: c_int) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn fputc_unlocked (__c : :: core :: ffi :: c_int , __stream : * mut FILE) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn putc_unlocked (__c : :: core :: ffi :: c_int , __stream : * mut FILE) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn putchar_unlocked (__c : :: core :: ffi :: c_int) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn getw (__stream : * mut FILE) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn putw (__w : :: core :: ffi :: c_int , __stream : * mut FILE) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn fgets (__s : * mut :: core :: ffi :: c_char , __n : :: core :: ffi :: c_int , __stream : * mut FILE) -> * mut :: core :: ffi :: c_char ; } extern \"C\" { pub fn __getdelim (__lineptr : * mut * mut :: core :: ffi :: c_char , __n : * mut usize , __delimiter : :: core :: ffi :: c_int , __stream : * mut FILE) -> __ssize_t ; } extern \"C\" { pub fn getdelim (__lineptr : * mut * mut :: core :: ffi :: c_char , __n : * mut usize , __delimiter : :: core :: ffi :: c_int , __stream : * mut FILE) -> __ssize_t ; } extern \"C\" { pub fn getline (__lineptr : * mut * mut :: core :: ffi :: c_char , __n : * mut usize , __stream : * mut FILE) -> __ssize_t ; } extern \"C\" { pub fn fputs (__s : * const :: core :: ffi :: c_char , __stream : * mut FILE) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn puts (__s : * const :: core :: ffi :: c_char) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn ungetc (__c : :: core :: ffi :: c_int , __stream : * mut FILE) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn fread (__ptr : * mut :: core :: ffi :: c_void , __size : :: core :: ffi :: c_ulong , __n : :: core :: ffi :: c_ulong , __stream : * mut FILE) -> :: core :: ffi :: c_ulong ; } extern \"C\" { pub fn fwrite (__ptr : * const :: core :: ffi :: c_void , __size : :: core :: ffi :: c_ulong , __n : :: core :: ffi :: c_ulong , __s : * mut FILE) -> :: core :: ffi :: c_ulong ; } extern \"C\" { pub fn fread_unlocked (__ptr : * mut :: core :: ffi :: c_void , __size : usize , __n : usize , __stream : * mut FILE) -> usize ; } extern \"C\" { pub fn fwrite_unlocked (__ptr : * const :: core :: ffi :: c_void , __size : usize , __n : usize , __stream : * mut FILE) -> usize ; } extern \"C\" { pub fn fseek (__stream : * mut FILE , __off : :: core :: ffi :: c_long , __whence : :: core :: ffi :: c_int) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn ftell (__stream : * mut FILE) -> :: core :: ffi :: c_long ; } extern \"C\" { pub fn rewind (__stream : * mut FILE) ; } extern \"C\" { pub fn fseeko (__stream : * mut FILE , __off : __off_t , __whence : :: core :: ffi :: c_int) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn ftello (__stream : * mut FILE) -> __off_t ; } extern \"C\" { pub fn fgetpos (__stream : * mut FILE , __pos : * mut fpos_t) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn fsetpos (__stream : * mut FILE , __pos : * const fpos_t) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn clearerr (__stream : * mut FILE) ; } extern \"C\" { pub fn feof (__stream : * mut FILE) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn ferror (__stream : * mut FILE) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn clearerr_unlocked (__stream : * mut FILE) ; } extern \"C\" { pub fn feof_unlocked (__stream : * mut FILE) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn ferror_unlocked (__stream : * mut FILE) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn perror (__s : * const :: core :: ffi :: c_char) ; } extern \"C\" { pub fn fileno (__stream : * mut FILE) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn fileno_unlocked (__stream : * mut FILE) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn pclose (__stream : * mut FILE) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn popen (__command : * const :: core :: ffi :: c_char , __modes : * const :: core :: ffi :: c_char) -> * mut FILE ; } extern \"C\" { pub fn ctermid (__s : * mut :: core :: ffi :: c_char) -> * mut :: core :: ffi :: c_char ; } extern \"C\" { pub fn flockfile (__stream : * mut FILE) ; } extern \"C\" { pub fn ftrylockfile (__stream : * mut FILE) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn funlockfile (__stream : * mut FILE) ; } extern \"C\" { pub fn __uflow (arg1 : * mut FILE) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn __overflow (arg1 : * mut FILE , arg2 : :: core :: ffi :: c_int) -> :: core :: ffi :: c_int ; } # [doc = \"@brief   OS dependent lock interface.\"] # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct ext4_lock { # [doc = \"@brief   Lock access to mount point.\"] pub lock : :: core :: option :: Option < unsafe extern \"C\" fn () > , # [doc = \"@brief   Unlock access to mount point.\"] pub unlock : :: core :: option :: Option < unsafe extern \"C\" fn () > , } # [doc = \"@brief   File descriptor.\"] # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct ext4_file { # [doc = \"@brief   Mount point handle.\"] pub mp : * mut ext4_mountpoint , # [doc = \"@brief   File inode id.\"] pub inode : u32 , # [doc = \"@brief   Open flags.\"] pub flags : u32 , # [doc = \"@brief   File size.\"] pub fsize : u64 , # [doc = \"@brief   Actual file position.\"] pub fpos : u64 , } # [doc = \"@brief   Directory entry descriptor.\"] # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct ext4_direntry { pub inode : u32 , pub entry_length : u16 , pub name_length : u8 , pub inode_type : u8 , pub name : [u8 ; 255usize] , } # [doc = \"@brief   Directory descriptor.\"] # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct ext4_dir { # [doc = \"@brief   File descriptor.\"] pub f : ext4_file , # [doc = \"@brief   Current directory entry.\"] pub de : ext4_direntry , # [doc = \"@brief   Next entry offset.\"] pub next_off : u64 , } extern \"C\" { # [doc = \"@brief   Register block device.\\n\\n @param   bd Block device.\\n @param   dev_name Block device name.\\n\\n @return  Standard error code.\"] pub fn ext4_device_register (bd : * mut ext4_blockdev , dev_name : * const :: core :: ffi :: c_char) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Un-register block device.\\n\\n @param   dev_name Block device name.\\n\\n @return  Standard error code.\"] pub fn ext4_device_unregister (dev_name : * const :: core :: ffi :: c_char) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Un-register all block devices.\\n\\n @return  Standard error code.\"] pub fn ext4_device_unregister_all () -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Mount a block device with EXT4 partition to the mount point.\\n\\n @param   dev_name Block device name (@ref ext4_device_register).\\n @param   mount_point Mount point, for example:\\n          -   /\\n          -   /my_partition/\\n          -   /my_second_partition/\\n @param   read_only mount as read-only mode.\\n\\n @return Standard error code\"] pub fn ext4_mount (dev_name : * const :: core :: ffi :: c_char , mount_point : * const :: core :: ffi :: c_char , read_only : bool) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Umount operation.\\n\\n @param   mount_point Mount point.\\n\\n @return  Standard error code\"] pub fn ext4_umount (mount_point : * const :: core :: ffi :: c_char) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Starts journaling. Journaling start/stop functions are transparent\\n          and might be used on filesystems without journaling support.\\n @warning Usage:\\n              ext4_mount(\\\"sda1\\\", \\\"/\\\");\\n              ext4_journal_start(\\\"/\\\");\\n\\n              //File operations here...\\n\\n              ext4_journal_stop(\\\"/\\\");\\n              ext4_umount(\\\"/\\\");\\n @param   mount_point Mount point.\\n\\n @return  Standard error code.\"] pub fn ext4_journal_start (mount_point : * const :: core :: ffi :: c_char) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Stops journaling. Journaling start/stop functions are transparent\\n          and might be used on filesystems without journaling support.\\n\\n @param   mount_point Mount point name.\\n\\n @return  Standard error code.\"] pub fn ext4_journal_stop (mount_point : * const :: core :: ffi :: c_char) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Journal recovery.\\n @warning Must be called after @ref ext4_mount.\\n\\n @param   mount_point Mount point.\\n\\n @return Standard error code.\"] pub fn ext4_recover (mount_point : * const :: core :: ffi :: c_char) -> :: core :: ffi :: c_int ; } # [doc = \"@brief   Some of the filesystem stats.\"] # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct ext4_mount_stats { pub inodes_count : u32 , pub free_inodes_count : u32 , pub blocks_count : u64 , pub free_blocks_count : u64 , pub block_size : u32 , pub block_group_count : u32 , pub blocks_per_group : u32 , pub inodes_per_group : u32 , pub volume_name : [:: core :: ffi :: c_char ; 16usize] , } extern \"C\" { # [doc = \"@brief   Get file mount point stats.\\n\\n @param   mount_point Mount point.\\n @param   stats Filesystem stats.\\n\\n @return Standard error code.\"] pub fn ext4_mount_point_stats (mount_point : * const :: core :: ffi :: c_char , stats : * mut ext4_mount_stats) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Setup OS lock routines.\\n\\n @param   mount_point Mount point.\\n @param   locks  Lock and unlock functions\\n\\n @return Standard error code.\"] pub fn ext4_mount_setup_locks (mount_point : * const :: core :: ffi :: c_char , locks : * const ext4_lock) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Acquire the filesystem superblock pointer of a mp.\\n\\n @param   mount_point Mount point.\\n @param   sb Superblock handle\\n\\n @return Standard error code.\"] pub fn ext4_get_sblock (mount_point : * const :: core :: ffi :: c_char , sb : * mut * mut ext4_sblock) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Enable/disable write back cache mode.\\n @warning Default model of cache is write trough. It means that when You do:\\n\\n          ext4_fopen(...);\\n          ext4_fwrite(...);\\n                           < --- data is flushed to physical drive\\n\\n          When you do:\\n          ext4_cache_write_back(..., 1);\\n          ext4_fopen(...);\\n          ext4_fwrite(...);\\n                           < --- data is NOT flushed to physical drive\\n          ext4_cache_write_back(..., 0);\\n                           < --- when write back mode is disabled all\\n                                 cache data will be flushed\\n To enable write back mode permanently just call this function\\n once after ext4_mount (and disable before ext4_umount).\\n\\n Some of the function use write back cache mode internally.\\n If you enable write back mode twice you have to disable it twice\\n to flush all data:\\n\\n      ext4_cache_write_back(..., 1);\\n      ext4_cache_write_back(..., 1);\\n\\n      ext4_cache_write_back(..., 0);\\n      ext4_cache_write_back(..., 0);\\n\\n Write back mode is useful when you want to create a lot of empty\\n files/directories.\\n\\n @param   path Mount point.\\n @param   on Enable/disable cache writeback mode.\\n\\n @return Standard error code.\"] pub fn ext4_cache_write_back (path : * const :: core :: ffi :: c_char , on : bool) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Force cache flush.\\n\\n @param   path Mount point.\\n\\n @return  Standard error code.\"] pub fn ext4_cache_flush (path : * const :: core :: ffi :: c_char) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Remove file by path.\\n\\n @param   path Path to file.\\n\\n @return  Standard error code.\"] pub fn ext4_fremove (path : * const :: core :: ffi :: c_char) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Create a hardlink for a file.\\n\\n @param   path Path to file.\\n @param   hardlink_path Path of hardlink.\\n\\n @return  Standard error code.\"] pub fn ext4_flink (path : * const :: core :: ffi :: c_char , hardlink_path : * const :: core :: ffi :: c_char) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Rename file.\\n @param path Source.\\n @param new_path Destination.\\n @return  Standard error code.\"] pub fn ext4_frename (path : * const :: core :: ffi :: c_char , new_path : * const :: core :: ffi :: c_char) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   File open function.\\n\\n @param   file  File handle.\\n @param   path  File path, has to start from mount point:/my_partition/file.\\n @param   flags File open flags.\\n  |---------------------------------------------------------------|\\n  |   r or rb                 O_RDONLY                            |\\n  |---------------------------------------------------------------|\\n  |   w or wb                 O_WRONLY|O_CREAT|O_TRUNC            |\\n  |---------------------------------------------------------------|\\n  |   a or ab                 O_WRONLY|O_CREAT|O_APPEND           |\\n  |---------------------------------------------------------------|\\n  |   r+ or rb+ or r+b        O_RDWR                              |\\n  |---------------------------------------------------------------|\\n  |   w+ or wb+ or w+b        O_RDWR|O_CREAT|O_TRUNC              |\\n  |---------------------------------------------------------------|\\n  |   a+ or ab+ or a+b        O_RDWR|O_CREAT|O_APPEND             |\\n  |---------------------------------------------------------------|\\n\\n @return  Standard error code.\"] pub fn ext4_fopen (file : * mut ext4_file , path : * const :: core :: ffi :: c_char , flags : * const :: core :: ffi :: c_char) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Alternate file open function.\\n\\n @param   file  File handle.\\n @param   path  File path, has to start from mount point:/my_partition/file.\\n @param   flags File open flags.\\n\\n @return  Standard error code.\"] pub fn ext4_fopen2 (file : * mut ext4_file , path : * const :: core :: ffi :: c_char , flags : :: core :: ffi :: c_int) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   File close function.\\n\\n @param   file File handle.\\n\\n @return  Standard error code.\"] pub fn ext4_fclose (file : * mut ext4_file) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   File truncate function.\\n\\n @param   file File handle.\\n @param   size New file size.\\n\\n @return  Standard error code.\"] pub fn ext4_ftruncate (file : * mut ext4_file , size : u64) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Read data from file.\\n\\n @param   file File handle.\\n @param   buf  Output buffer.\\n @param   size Bytes to read.\\n @param   rcnt Bytes read (NULL allowed).\\n\\n @return  Standard error code.\"] pub fn ext4_fread (file : * mut ext4_file , buf : * mut :: core :: ffi :: c_void , size : usize , rcnt : * mut usize) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Write data to file.\\n\\n @param   file File handle.\\n @param   buf  Data to write\\n @param   size Write length..\\n @param   wcnt Bytes written (NULL allowed).\\n\\n @return  Standard error code.\"] pub fn ext4_fwrite (file : * mut ext4_file , buf : * const :: core :: ffi :: c_void , size : usize , wcnt : * mut usize) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   File seek operation.\\n\\n @param   file File handle.\\n @param   offset Offset to seek.\\n @param   origin Seek type:\\n              @ref SEEK_SET\\n              @ref SEEK_CUR\\n              @ref SEEK_END\\n\\n @return  Standard error code.\"] pub fn ext4_fseek (file : * mut ext4_file , offset : i64 , origin : u32) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Get file position.\\n\\n @param   file File handle.\\n\\n @return  Actual file position\"] pub fn ext4_ftell (file : * mut ext4_file) -> u64 ; } extern \"C\" { # [doc = \"@brief   Get file size.\\n\\n @param   file File handle.\\n\\n @return  File size.\"] pub fn ext4_fsize (file : * mut ext4_file) -> u64 ; } extern \"C\" { # [doc = \"@brief Get inode of file/directory/link.\\n\\n @param path    Parh to file/dir/link.\\n @param ret_ino Inode number.\\n @param inode   Inode internals.\\n\\n @return  Standard error code.\"] pub fn ext4_raw_inode_fill (path : * const :: core :: ffi :: c_char , ret_ino : * mut u32 , inode : * mut ext4_inode) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Check if inode exists.\\n\\n @param path    Parh to file/dir/link.\\n @param type    Inode type.\\n                @ref EXT4_DIRENTRY_UNKNOWN\\n                @ref EXT4_DE_REG_FILE\\n                @ref EXT4_DE_DIR\\n                @ref EXT4_DE_CHRDEV\\n                @ref EXT4_DE_BLKDEV\\n                @ref EXT4_DE_FIFO\\n                @ref EXT4_DE_SOCK\\n                @ref EXT4_DE_SYMLINK\\n\\n @return  Standard error code.\"] pub fn ext4_inode_exist (path : * const :: core :: ffi :: c_char , type_ : :: core :: ffi :: c_int) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Change file/directory/link mode bits.\\n\\n @param path Path to file/dir/link.\\n @param mode New mode bits (for example 0777).\\n\\n @return  Standard error code.\"] pub fn ext4_mode_set (path : * const :: core :: ffi :: c_char , mode : u32) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Get file/directory/link mode bits.\\n\\n @param path Path to file/dir/link.\\n @param mode New mode bits (for example 0777).\\n\\n @return  Standard error code.\"] pub fn ext4_mode_get (path : * const :: core :: ffi :: c_char , mode : * mut u32) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Change file owner and group.\\n\\n @param path Path to file/dir/link.\\n @param uid  User id.\\n @param gid  Group id.\\n\\n @return  Standard error code.\"] pub fn ext4_owner_set (path : * const :: core :: ffi :: c_char , uid : u32 , gid : u32) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Get file/directory/link owner and group.\\n\\n @param path Path to file/dir/link.\\n @param uid  User id.\\n @param gid  Group id.\\n\\n @return  Standard error code.\"] pub fn ext4_owner_get (path : * const :: core :: ffi :: c_char , uid : * mut u32 , gid : * mut u32) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Set file/directory/link access time.\\n\\n @param path  Path to file/dir/link.\\n @param atime Access timestamp.\\n\\n @return  Standard error code.\"] pub fn ext4_atime_set (path : * const :: core :: ffi :: c_char , atime : u32) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Set file/directory/link modify time.\\n\\n @param path  Path to file/dir/link.\\n @param mtime Modify timestamp.\\n\\n @return  Standard error code.\"] pub fn ext4_mtime_set (path : * const :: core :: ffi :: c_char , mtime : u32) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Set file/directory/link change time.\\n\\n @param path  Path to file/dir/link.\\n @param ctime Change timestamp.\\n\\n @return  Standard error code.\"] pub fn ext4_ctime_set (path : * const :: core :: ffi :: c_char , ctime : u32) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Get file/directory/link access time.\\n\\n @param path  Path to file/dir/link.\\n @param atime Access timestamp.\\n\\n @return  Standard error code.\"] pub fn ext4_atime_get (path : * const :: core :: ffi :: c_char , atime : * mut u32) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Get file/directory/link modify time.\\n\\n @param path  Path to file/dir/link.\\n @param mtime Modify timestamp.\\n\\n @return  Standard error code.\"] pub fn ext4_mtime_get (path : * const :: core :: ffi :: c_char , mtime : * mut u32) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Get file/directory/link change time.\\n\\n @param path  Pathto file/dir/link.\\n @param ctime Change timestamp.\\n\\n @return  standard error code\"] pub fn ext4_ctime_get (path : * const :: core :: ffi :: c_char , ctime : * mut u32) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Create symbolic link.\\n\\n @param target Destination entry path.\\n @param path   Source entry path.\\n\\n @return  Standard error code.\"] pub fn ext4_fsymlink (target : * const :: core :: ffi :: c_char , path : * const :: core :: ffi :: c_char) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Create special file.\\n @param path     Path to new special file.\\n @param filetype Filetype of the new special file.\\n \\t           (that must not be regular file, directory, or unknown type)\\n @param dev      If filetype is char device or block device,\\n \\t           the device number will become the payload in the inode.\\n @return  Standard error code.\"] pub fn ext4_mknod (path : * const :: core :: ffi :: c_char , filetype : :: core :: ffi :: c_int , dev : u32) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Read symbolic link payload.\\n\\n @param path    Path to symlink.\\n @param buf     Output buffer.\\n @param bufsize Output buffer max size.\\n @param rcnt    Bytes read.\\n\\n @return  Standard error code.\"] pub fn ext4_readlink (path : * const :: core :: ffi :: c_char , buf : * mut :: core :: ffi :: c_char , bufsize : usize , rcnt : * mut usize) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Set extended attribute.\\n\\n @param path      Path to file/directory\\n @param name      Name of the entry to add.\\n @param name_len  Length of @name in bytes.\\n @param data      Data of the entry to add.\\n @param data_size Size of data to add.\\n\\n @return  Standard error code.\"] pub fn ext4_setxattr (path : * const :: core :: ffi :: c_char , name : * const :: core :: ffi :: c_char , name_len : usize , data : * const :: core :: ffi :: c_void , data_size : usize) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Get extended attribute.\\n\\n @param path      Path to file/directory.\\n @param name      Name of the entry to get.\\n @param name_len  Length of @name in bytes.\\n @param buf      Data of the entry to get.\\n @param buf_size Size of data to get.\\n\\n @return  Standard error code.\"] pub fn ext4_getxattr (path : * const :: core :: ffi :: c_char , name : * const :: core :: ffi :: c_char , name_len : usize , buf : * mut :: core :: ffi :: c_void , buf_size : usize , data_size : * mut usize) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief List extended attributes.\\n\\n @param path     Path to file/directory.\\n @param list     List to hold the name of entries.\\n @param size     Size of @list in bytes.\\n @param ret_size Used bytes of @list.\\n\\n @return  Standard error code.\"] pub fn ext4_listxattr (path : * const :: core :: ffi :: c_char , list : * mut :: core :: ffi :: c_char , size : usize , ret_size : * mut usize) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Remove extended attribute.\\n\\n @param path     Path to file/directory.\\n @param name     Name of the entry to remove.\\n @param name_len Length of @name in bytes.\\n\\n @return  Standard error code.\"] pub fn ext4_removexattr (path : * const :: core :: ffi :: c_char , name : * const :: core :: ffi :: c_char , name_len : usize) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Recursive directory remove.\\n\\n @param   path Directory path to remove\\n\\n @return  Standard error code.\"] pub fn ext4_dir_rm (path : * const :: core :: ffi :: c_char) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Rename/move directory.\\n\\n @param path     Source path.\\n @param new_path Destination path.\\n\\n @return  Standard error code.\"] pub fn ext4_dir_mv (path : * const :: core :: ffi :: c_char , new_path : * const :: core :: ffi :: c_char) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Create new directory.\\n\\n @param   path Directory name.\\n\\n @return  Standard error code.\"] pub fn ext4_dir_mk (path : * const :: core :: ffi :: c_char) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Directory open.\\n\\n @param   dir  Directory handle.\\n @param   path Directory path.\\n\\n @return  Standard error code.\"] pub fn ext4_dir_open (dir : * mut ext4_dir , path : * const :: core :: ffi :: c_char) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Directory close.\\n\\n @param   dir directory handle.\\n\\n @return  Standard error code.\"] pub fn ext4_dir_close (dir : * mut ext4_dir) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Return next directory entry.\\n\\n @param   dir Directory handle.\\n\\n @return  Directory entry id (NULL if no entry)\"] pub fn ext4_dir_entry_next (dir : * mut ext4_dir) -> * const ext4_direntry ; } extern \"C\" { # [doc = \"@brief   Rewine directory entry offset.\\n\\n @param   dir Directory handle.\"] pub fn ext4_dir_entry_rewind (dir : * mut ext4_dir) ; } # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct ext4_fs { pub read_only : bool , pub bdev : * mut ext4_blockdev , pub sb : ext4_sblock , pub inode_block_limits : [u64 ; 4usize] , pub inode_blocks_per_level : [u64 ; 4usize] , pub last_inode_bg_id : u32 , pub jbd_fs : * mut jbd_fs , pub jbd_journal : * mut jbd_journal , pub curr_trans : * mut jbd_trans , } # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct ext4_block_group_ref { pub block : ext4_block , pub block_group : * mut ext4_bgroup , pub fs : * mut ext4_fs , pub index : u32 , pub dirty : bool , } # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct ext4_inode_ref { pub block : ext4_block , pub inode : * mut ext4_inode , pub fs : * mut ext4_fs , pub index : u32 , pub dirty : bool , } extern \"C\" { # [doc = \"@brief Initialize filesystem and read all needed data.\\n @param fs Filesystem instance to be initialized\\n @param bdev Identifier if device with the filesystem\\n @param read_only Mark the filesystem as read-only.\\n @return Error code\"] pub fn ext4_fs_init (fs : * mut ext4_fs , bdev : * mut ext4_blockdev , read_only : bool) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Destroy filesystem instance (used by unmount operation).\\n @param fs Filesystem to be destroyed\\n @return Error code\"] pub fn ext4_fs_fini (fs : * mut ext4_fs) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Check filesystem's features, if supported by this driver\\n Function can return EOK and set read_only flag. It mean's that\\n there are some not-supported features, that can cause problems\\n during some write operations.\\n @param fs        Filesystem to be checked\\n @param read_only Flag if filesystem should be mounted only for reading\\n @return Error code\"] pub fn ext4_fs_check_features (fs : * mut ext4_fs , read_only : * mut bool) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Get reference to block group specified by index.\\n @param fs   Filesystem to find block group on\\n @param bgid Index of block group to load\\n @param ref  Output pointer for reference\\n @return Error code\"] pub fn ext4_fs_get_block_group_ref (fs : * mut ext4_fs , bgid : u32 , ref_ : * mut ext4_block_group_ref) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Put reference to block group.\\n @param ref Pointer for reference to be put back\\n @return Error code\"] pub fn ext4_fs_put_block_group_ref (ref_ : * mut ext4_block_group_ref) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Get reference to i-node specified by index.\\n @param fs    Filesystem to find i-node on\\n @param index Index of i-node to load\\n @param ref   Output pointer for reference\\n @return Error code\"] pub fn ext4_fs_get_inode_ref (fs : * mut ext4_fs , index : u32 , ref_ : * mut ext4_inode_ref) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Reset blocks field of i-node.\\n @param fs        Filesystem to reset blocks field of i-inode on\\n @param inode_ref ref Pointer for inode to be operated on\"] pub fn ext4_fs_inode_blocks_init (fs : * mut ext4_fs , inode_ref : * mut ext4_inode_ref) ; } extern \"C\" { # [doc = \"@brief Put reference to i-node.\\n @param ref Pointer for reference to be put back\\n @return Error code\"] pub fn ext4_fs_put_inode_ref (ref_ : * mut ext4_inode_ref) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Convert filetype to inode mode.\\n @param filetype File type\\n @return inode mode\"] pub fn ext4_fs_correspond_inode_mode (filetype : :: core :: ffi :: c_int) -> u32 ; } extern \"C\" { # [doc = \"@brief Allocate new i-node in the filesystem.\\n @param fs        Filesystem to allocated i-node on\\n @param inode_ref Output pointer to return reference to allocated i-node\\n @param filetype  File type of newly created i-node\\n @return Error code\"] pub fn ext4_fs_alloc_inode (fs : * mut ext4_fs , inode_ref : * mut ext4_inode_ref , filetype : :: core :: ffi :: c_int) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Release i-node and mark it as free.\\n @param inode_ref I-node to be released\\n @return Error code\"] pub fn ext4_fs_free_inode (inode_ref : * mut ext4_inode_ref) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Truncate i-node data blocks.\\n @param inode_ref I-node to be truncated\\n @param new_size  New size of inode (must be < current size)\\n @return Error code\"] pub fn ext4_fs_truncate_inode (inode_ref : * mut ext4_inode_ref , new_size : u64) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Compute 'goal' for inode index\\n @param inode_ref Reference to inode, to allocate block for\\n @return goal\"] pub fn ext4_fs_inode_to_goal_block (inode_ref : * mut ext4_inode_ref) -> ext4_fsblk_t ; } extern \"C\" { # [doc = \"@brief Compute 'goal' for allocation algorithm (For blockmap).\\n @param inode_ref Reference to inode, to allocate block for\\n @return error code\"] pub fn ext4_fs_indirect_find_goal (inode_ref : * mut ext4_inode_ref , goal : * mut ext4_fsblk_t) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Get physical block address by logical index of the block.\\n @param inode_ref I-node to read block address from\\n @param iblock            Logical index of block\\n @param fblock            Output pointer for return physical\\n                          block address\\n @param support_unwritten Indicate whether unwritten block range\\n                          is supported under the current context\\n @return Error code\"] pub fn ext4_fs_get_inode_dblk_idx (inode_ref : * mut ext4_inode_ref , iblock : ext4_lblk_t , fblock : * mut ext4_fsblk_t , support_unwritten : bool) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Initialize a part of unwritten range of the inode.\\n @param inode_ref I-node to proceed on.\\n @param iblock    Logical index of block\\n @param fblock    Output pointer for return physical block address\\n @return Error code\"] pub fn ext4_fs_init_inode_dblk_idx (inode_ref : * mut ext4_inode_ref , iblock : ext4_lblk_t , fblock : * mut ext4_fsblk_t) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief Append following logical block to the i-node.\\n @param inode_ref I-node to append block to\\n @param fblock    Output physical block address of newly allocated block\\n @param iblock    Output logical number of newly allocated block\\n @return Error code\"] pub fn ext4_fs_append_inode_dblk (inode_ref : * mut ext4_inode_ref , fblock : * mut ext4_fsblk_t , iblock : * mut ext4_lblk_t) -> :: core :: ffi :: c_int ; } extern \"C\" { # [doc = \"@brief   Increment inode link count.\\n @param   inode_ref none handle\"] pub fn ext4_fs_inode_links_count_inc (inode_ref : * mut ext4_inode_ref) ; } extern \"C\" { # [doc = \"@brief   Decrement inode link count.\\n @param   inode_ref none handle\"] pub fn ext4_fs_inode_links_count_dec (inode_ref : * mut ext4_inode_ref) ; } # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct ext4_mkfs_info { pub len : u64 , pub block_size : u32 , pub blocks_per_group : u32 , pub inodes_per_group : u32 , pub inode_size : u32 , pub inodes : u32 , pub journal_blocks : u32 , pub feat_ro_compat : u32 , pub feat_compat : u32 , pub feat_incompat : u32 , pub bg_desc_reserve_blocks : u32 , pub dsc_size : u16 , pub uuid : [u8 ; 16usize] , pub journal : bool , pub label : * const :: core :: ffi :: c_char , } extern \"C\" { pub fn ext4_mkfs_read_info (bd : * mut ext4_blockdev , info : * mut ext4_mkfs_info) -> :: core :: ffi :: c_int ; } extern \"C\" { pub fn ext4_mkfs (fs : * mut ext4_fs , bd : * mut ext4_blockdev , info : * mut ext4_mkfs_info , fs_type : :: core :: ffi :: c_int) -> :: core :: ffi :: c_int ; } # [doc = \"@brief   Mount point descriptor.\"] # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct ext4_mountpoint { # [doc = \"@brief   Mount done flag.\"] pub mounted : bool , # [doc = \"@brief   Mount point name (@ref ext4_mount)\"] pub name : [:: core :: ffi :: c_char ; 33usize] , # [doc = \"@brief   OS dependent lock/unlock functions.\"] pub os_locks : * const ext4_lock , # [doc = \"@brief   Ext4 filesystem internals.\"] pub fs : ext4_fs , } pub type __builtin_va_list = [__va_list_tag ; 1usize] ; # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct __va_list_tag { pub gp_offset : :: core :: ffi :: c_uint , pub fp_offset : :: core :: ffi :: c_uint , pub overflow_arg_area : * mut :: core :: ffi :: c_void , pub reg_save_area : * mut :: core :: ffi :: c_void , } # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct jbd_fs { pub _address : u8 , } # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct jbd_journal { pub _address : u8 , } # [repr (C)] # [derive (Debug , Copy , Clone)] pub struct jbd_trans { pub _address : u8 , }\n+#[repr(C)]\n+#[derive(Default)]\n+pub struct __IncompleteArrayField<T>(::core::marker::PhantomData<T>, [T; 0]);\n+impl<T> __IncompleteArrayField<T> {\n+    #[inline]\n+    pub const fn new() -> Self {\n+        __IncompleteArrayField(::core::marker::PhantomData, [])\n+    }\n+    #[inline]\n+    pub fn as_ptr(&self) -> *const T {\n+        self as *const _ as *const T\n+    }\n+    #[inline]\n+    pub fn as_mut_ptr(&mut self) -> *mut T {\n+        self as *mut _ as *mut T\n+    }\n+    #[inline]\n+    pub unsafe fn as_slice(&self, len: usize) -> &[T] {\n+        ::core::slice::from_raw_parts(self.as_ptr(), len)\n+    }\n+    #[inline]\n+    pub unsafe fn as_mut_slice(&mut self, len: usize) -> &mut [T] {\n+        ::core::slice::from_raw_parts_mut(self.as_mut_ptr(), len)\n+    }\n+}\n+impl<T> ::core::fmt::Debug for __IncompleteArrayField<T> {\n+    fn fmt(&self, fmt: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {\n+        fmt.write_str(\"__IncompleteArrayField\")\n+    }\n+}\n+pub const _STDINT_H: u32 = 1;\n+pub const _FEATURES_H: u32 = 1;\n+pub const _DEFAULT_SOURCE: u32 = 1;\n+pub const __GLIBC_USE_ISOC2X: u32 = 0;\n+pub const __USE_ISOC11: u32 = 1;\n+pub const __USE_ISOC99: u32 = 1;\n+pub const __USE_ISOC95: u32 = 1;\n+pub const __USE_POSIX_IMPLICITLY: u32 = 1;\n+pub const _POSIX_SOURCE: u32 = 1;\n+pub const _POSIX_C_SOURCE: u32 = 200809;\n+pub const __USE_POSIX: u32 = 1;\n+pub const __USE_POSIX2: u32 = 1;\n+pub const __USE_POSIX199309: u32 = 1;\n+pub const __USE_POSIX199506: u32 = 1;\n+pub const __USE_XOPEN2K: u32 = 1;\n+pub const __USE_XOPEN2K8: u32 = 1;\n+pub const _ATFILE_SOURCE: u32 = 1;\n+pub const __WORDSIZE: u32 = 64;\n+pub const __WORDSIZE_TIME64_COMPAT32: u32 = 1;\n+pub const __SYSCALL_WORDSIZE: u32 = 64;\n+pub const __TIMESIZE: u32 = 64;\n+pub const __USE_MISC: u32 = 1;\n+pub const __USE_ATFILE: u32 = 1;\n+pub const __USE_FORTIFY_LEVEL: u32 = 0;\n+pub const __GLIBC_USE_DEPRECATED_GETS: u32 = 0;\n+pub const __GLIBC_USE_DEPRECATED_SCANF: u32 = 0;\n+pub const _STDC_PREDEF_H: u32 = 1;\n+pub const __STDC_IEC_559__: u32 = 1;\n+pub const __STDC_IEC_60559_BFP__: u32 = 201404;\n+pub const __STDC_IEC_559_COMPLEX__: u32 = 1;\n+pub const __STDC_IEC_60559_COMPLEX__: u32 = 201404;\n+pub const __STDC_ISO_10646__: u32 = 201706;\n+pub const __GNU_LIBRARY__: u32 = 6;\n+pub const __GLIBC__: u32 = 2;\n+pub const __GLIBC_MINOR__: u32 = 35;\n+pub const _SYS_CDEFS_H: u32 = 1;\n+pub const __glibc_c99_flexarr_available: u32 = 1;\n+pub const __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI: u32 = 0;\n+pub const __HAVE_GENERIC_SELECTION: u32 = 1;\n+pub const __GLIBC_USE_LIB_EXT2: u32 = 0;\n+pub const __GLIBC_USE_IEC_60559_BFP_EXT: u32 = 0;\n+pub const __GLIBC_USE_IEC_60559_BFP_EXT_C2X: u32 = 0;\n+pub const __GLIBC_USE_IEC_60559_EXT: u32 = 0;\n+pub const __GLIBC_USE_IEC_60559_FUNCS_EXT: u32 = 0;\n+pub const __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X: u32 = 0;\n+pub const __GLIBC_USE_IEC_60559_TYPES_EXT: u32 = 0;\n+pub const _BITS_TYPES_H: u32 = 1;\n+pub const _BITS_TYPESIZES_H: u32 = 1;\n+pub const __OFF_T_MATCHES_OFF64_T: u32 = 1;\n+pub const __INO_T_MATCHES_INO64_T: u32 = 1;\n+pub const __RLIM_T_MATCHES_RLIM64_T: u32 = 1;\n+pub const __STATFS_MATCHES_STATFS64: u32 = 1;\n+pub const __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64: u32 = 1;\n+pub const __FD_SETSIZE: u32 = 1024;\n+pub const _BITS_TIME64_H: u32 = 1;\n+pub const _BITS_WCHAR_H: u32 = 1;\n+pub const _BITS_STDINT_INTN_H: u32 = 1;\n+pub const _BITS_STDINT_UINTN_H: u32 = 1;\n+pub const INT8_MIN: i32 = -128;\n+pub const INT16_MIN: i32 = -32768;\n+pub const INT32_MIN: i32 = -2147483648;\n+pub const INT8_MAX: u32 = 127;\n+pub const INT16_MAX: u32 = 32767;\n+pub const INT32_MAX: u32 = 2147483647;\n+pub const UINT8_MAX: u32 = 255;\n+pub const UINT16_MAX: u32 = 65535;\n+pub const UINT32_MAX: u32 = 4294967295;\n+pub const INT_LEAST8_MIN: i32 = -128;\n+pub const INT_LEAST16_MIN: i32 = -32768;\n+pub const INT_LEAST32_MIN: i32 = -2147483648;\n+pub const INT_LEAST8_MAX: u32 = 127;\n+pub const INT_LEAST16_MAX: u32 = 32767;\n+pub const INT_LEAST32_MAX: u32 = 2147483647;\n+pub const UINT_LEAST8_MAX: u32 = 255;\n+pub const UINT_LEAST16_MAX: u32 = 65535;\n+pub const UINT_LEAST32_MAX: u32 = 4294967295;\n+pub const INT_FAST8_MIN: i32 = -128;\n+pub const INT_FAST16_MIN: i64 = -9223372036854775808;\n+pub const INT_FAST32_MIN: i64 = -9223372036854775808;\n+pub const INT_FAST8_MAX: u32 = 127;\n+pub const INT_FAST16_MAX: u64 = 9223372036854775807;\n+pub const INT_FAST32_MAX: u64 = 9223372036854775807;\n+pub const UINT_FAST8_MAX: u32 = 255;\n+pub const UINT_FAST16_MAX: i32 = -1;\n+pub const UINT_FAST32_MAX: i32 = -1;\n+pub const INTPTR_MIN: i64 = -9223372036854775808;\n+pub const INTPTR_MAX: u64 = 9223372036854775807;\n+pub const UINTPTR_MAX: i32 = -1;\n+pub const PTRDIFF_MIN: i64 = -9223372036854775808;\n+pub const PTRDIFF_MAX: u64 = 9223372036854775807;\n+pub const SIG_ATOMIC_MIN: i32 = -2147483648;\n+pub const SIG_ATOMIC_MAX: u32 = 2147483647;\n+pub const SIZE_MAX: i32 = -1;\n+pub const WINT_MIN: u32 = 0;\n+pub const WINT_MAX: u32 = 4294967295;\n+pub const CONFIG_USE_DEFAULT_CONFIG: u32 = 0;\n+pub const CONFIG_DEBUG_PRINTF: u32 = 1;\n+pub const CONFIG_HAVE_OWN_OFLAGS: u32 = 1;\n+pub const CONFIG_HAVE_OWN_ERRNO: u32 = 1;\n+pub const CONFIG_HAVE_OWN_ASSERT: u32 = 1;\n+pub const CONFIG_BLOCK_DEV_CACHE_SIZE: u32 = 16;\n+pub const F_SET_EXT2: u32 = 2;\n+pub const F_SET_EXT3: u32 = 3;\n+pub const F_SET_EXT4: u32 = 4;\n+pub const CONFIG_EXT_FEATURE_SET_LVL: u32 = 4;\n+pub const CONFIG_JOURNALING_ENABLE: u32 = 1;\n+pub const CONFIG_XATTR_ENABLE: u32 = 1;\n+pub const CONFIG_EXTENTS_ENABLE: u32 = 1;\n+pub const CONFIG_DEBUG_ASSERT: u32 = 1;\n+pub const CONFIG_BLOCK_DEV_ENABLE_STATS: u32 = 1;\n+pub const CONFIG_EXT4_MAX_BLOCKDEV_NAME: u32 = 32;\n+pub const CONFIG_EXT4_BLOCKDEVS_COUNT: u32 = 2;\n+pub const CONFIG_EXT4_MAX_MP_NAME: u32 = 32;\n+pub const CONFIG_EXT4_MOUNTPOINTS_COUNT: u32 = 2;\n+pub const CONFIG_MAX_TRUNCATE_SIZE: u32 = 16777216;\n+pub const CONFIG_UNALIGNED_ACCESS: u32 = 0;\n+pub const CONFIG_USE_USER_MALLOC: u32 = 0;\n+pub const true_: u32 = 1;\n+pub const false_: u32 = 0;\n+pub const __bool_true_false_are_defined: u32 = 1;\n+pub const SPLAY_NEGINF: i32 = -1;\n+pub const SPLAY_INF: u32 = 1;\n+pub const RB_BLACK: u32 = 0;\n+pub const RB_RED: u32 = 1;\n+pub const RB_NEGINF: i32 = -1;\n+pub const RB_INF: u32 = 1;\n+pub const EXT4_CHECKSUM_CRC32C: u32 = 1;\n+pub const UUID_SIZE: u32 = 16;\n+pub const EXT4_SUPERBLOCK_MAGIC: u32 = 61267;\n+pub const EXT4_SUPERBLOCK_SIZE: u32 = 1024;\n+pub const EXT4_SUPERBLOCK_OFFSET: u32 = 1024;\n+pub const EXT4_SUPERBLOCK_OS_LINUX: u32 = 0;\n+pub const EXT4_SUPERBLOCK_OS_HURD: u32 = 1;\n+pub const EXT4_SUPERBLOCK_FLAGS_SIGNED_HASH: u32 = 1;\n+pub const EXT4_SUPERBLOCK_FLAGS_UNSIGNED_HASH: u32 = 2;\n+pub const EXT4_SUPERBLOCK_FLAGS_TEST_FILESYS: u32 = 4;\n+pub const EXT4_SUPERBLOCK_STATE_VALID_FS: u32 = 1;\n+pub const EXT4_SUPERBLOCK_STATE_ERROR_FS: u32 = 2;\n+pub const EXT4_SUPERBLOCK_STATE_ORPHAN_FS: u32 = 4;\n+pub const EXT4_SUPERBLOCK_ERRORS_CONTINUE: u32 = 1;\n+pub const EXT4_SUPERBLOCK_ERRORS_RO: u32 = 2;\n+pub const EXT4_SUPERBLOCK_ERRORS_PANIC: u32 = 3;\n+pub const EXT4_FCOM_DIR_PREALLOC: u32 = 1;\n+pub const EXT4_FCOM_IMAGIC_INODES: u32 = 2;\n+pub const EXT4_FCOM_HAS_JOURNAL: u32 = 4;\n+pub const EXT4_FCOM_EXT_ATTR: u32 = 8;\n+pub const EXT4_FCOM_RESIZE_INODE: u32 = 16;\n+pub const EXT4_FCOM_DIR_INDEX: u32 = 32;\n+pub const EXT4_FRO_COM_SPARSE_SUPER: u32 = 1;\n+pub const EXT4_FRO_COM_LARGE_FILE: u32 = 2;\n+pub const EXT4_FRO_COM_BTREE_DIR: u32 = 4;\n+pub const EXT4_FRO_COM_HUGE_FILE: u32 = 8;\n+pub const EXT4_FRO_COM_GDT_CSUM: u32 = 16;\n+pub const EXT4_FRO_COM_DIR_NLINK: u32 = 32;\n+pub const EXT4_FRO_COM_EXTRA_ISIZE: u32 = 64;\n+pub const EXT4_FRO_COM_QUOTA: u32 = 256;\n+pub const EXT4_FRO_COM_BIGALLOC: u32 = 512;\n+pub const EXT4_FRO_COM_METADATA_CSUM: u32 = 1024;\n+pub const EXT4_FINCOM_COMPRESSION: u32 = 1;\n+pub const EXT4_FINCOM_FILETYPE: u32 = 2;\n+pub const EXT4_FINCOM_RECOVER: u32 = 4;\n+pub const EXT4_FINCOM_JOURNAL_DEV: u32 = 8;\n+pub const EXT4_FINCOM_META_BG: u32 = 16;\n+pub const EXT4_FINCOM_EXTENTS: u32 = 64;\n+pub const EXT4_FINCOM_64BIT: u32 = 128;\n+pub const EXT4_FINCOM_MMP: u32 = 256;\n+pub const EXT4_FINCOM_FLEX_BG: u32 = 512;\n+pub const EXT4_FINCOM_EA_INODE: u32 = 1024;\n+pub const EXT4_FINCOM_DIRDATA: u32 = 4096;\n+pub const EXT4_FINCOM_BG_USE_META_CSUM: u32 = 8192;\n+pub const EXT4_FINCOM_LARGEDIR: u32 = 16384;\n+pub const EXT4_FINCOM_INLINE_DATA: u32 = 32768;\n+pub const EXT2_SUPPORTED_FCOM: u32 = 0;\n+pub const EXT2_SUPPORTED_FINCOM: u32 = 18;\n+pub const EXT2_SUPPORTED_FRO_COM: u32 = 3;\n+pub const EXT3_SUPPORTED_FCOM: u32 = 32;\n+pub const EXT3_SUPPORTED_FINCOM: u32 = 18;\n+pub const EXT3_SUPPORTED_FRO_COM: u32 = 3;\n+pub const EXT4_SUPPORTED_FCOM: u32 = 32;\n+pub const EXT4_SUPPORTED_FINCOM: u32 = 722;\n+pub const EXT4_SUPPORTED_FRO_COM: u32 = 1147;\n+pub const EXT_FINCOM_IGNORED: u32 = 260;\n+pub const EXT4_BLOCK_GROUP_INODE_UNINIT: u32 = 1;\n+pub const EXT4_BLOCK_GROUP_BLOCK_UNINIT: u32 = 2;\n+pub const EXT4_BLOCK_GROUP_ITABLE_ZEROED: u32 = 4;\n+pub const EXT4_MIN_BLOCK_GROUP_DESCRIPTOR_SIZE: u32 = 32;\n+pub const EXT4_MAX_BLOCK_GROUP_DESCRIPTOR_SIZE: u32 = 64;\n+pub const EXT4_MIN_BLOCK_SIZE: u32 = 1024;\n+pub const EXT4_MAX_BLOCK_SIZE: u32 = 65536;\n+pub const EXT4_REV0_INODE_SIZE: u32 = 128;\n+pub const EXT4_INODE_BLOCK_SIZE: u32 = 512;\n+pub const EXT4_INODE_DIRECT_BLOCK_COUNT: u32 = 12;\n+pub const EXT4_INODE_INDIRECT_BLOCK: u32 = 12;\n+pub const EXT4_INODE_DOUBLE_INDIRECT_BLOCK: u32 = 13;\n+pub const EXT4_INODE_TRIPPLE_INDIRECT_BLOCK: u32 = 14;\n+pub const EXT4_INODE_BLOCKS: u32 = 15;\n+pub const EXT4_INODE_INDIRECT_BLOCK_COUNT: u32 = 3;\n+pub const EXT4_INODE_MODE_FIFO: u32 = 4096;\n+pub const EXT4_INODE_MODE_CHARDEV: u32 = 8192;\n+pub const EXT4_INODE_MODE_DIRECTORY: u32 = 16384;\n+pub const EXT4_INODE_MODE_BLOCKDEV: u32 = 24576;\n+pub const EXT4_INODE_MODE_FILE: u32 = 32768;\n+pub const EXT4_INODE_MODE_SOFTLINK: u32 = 40960;\n+pub const EXT4_INODE_MODE_SOCKET: u32 = 49152;\n+pub const EXT4_INODE_MODE_TYPE_MASK: u32 = 61440;\n+pub const EXT4_INODE_FLAG_SECRM: u32 = 1;\n+pub const EXT4_INODE_FLAG_UNRM: u32 = 2;\n+pub const EXT4_INODE_FLAG_COMPR: u32 = 4;\n+pub const EXT4_INODE_FLAG_SYNC: u32 = 8;\n+pub const EXT4_INODE_FLAG_IMMUTABLE: u32 = 16;\n+pub const EXT4_INODE_FLAG_APPEND: u32 = 32;\n+pub const EXT4_INODE_FLAG_NODUMP: u32 = 64;\n+pub const EXT4_INODE_FLAG_NOATIME: u32 = 128;\n+pub const EXT4_INODE_FLAG_DIRTY: u32 = 256;\n+pub const EXT4_INODE_FLAG_COMPRBLK: u32 = 512;\n+pub const EXT4_INODE_FLAG_NOCOMPR: u32 = 1024;\n+pub const EXT4_INODE_FLAG_ECOMPR: u32 = 2048;\n+pub const EXT4_INODE_FLAG_INDEX: u32 = 4096;\n+pub const EXT4_INODE_FLAG_IMAGIC: u32 = 8192;\n+pub const EXT4_INODE_FLAG_JOURNAL_DATA: u32 = 16384;\n+pub const EXT4_INODE_FLAG_NOTAIL: u32 = 32768;\n+pub const EXT4_INODE_FLAG_DIRSYNC: u32 = 65536;\n+pub const EXT4_INODE_FLAG_TOPDIR: u32 = 131072;\n+pub const EXT4_INODE_FLAG_HUGE_FILE: u32 = 262144;\n+pub const EXT4_INODE_FLAG_EXTENTS: u32 = 524288;\n+pub const EXT4_INODE_FLAG_EA_INODE: u32 = 2097152;\n+pub const EXT4_INODE_FLAG_EOFBLOCKS: u32 = 4194304;\n+pub const EXT4_INODE_FLAG_RESERVED: u32 = 2147483648;\n+pub const EXT4_INODE_ROOT_INDEX: u32 = 2;\n+pub const EXT4_DIRECTORY_FILENAME_LEN: u32 = 255;\n+pub const EXT4_DIRENTRY_DIR_CSUM: u32 = 222;\n+pub const EXT4_ERR_BAD_DX_DIR: i32 = -25000;\n+pub const EXT4_LINK_MAX: u32 = 65000;\n+pub const EXT4_BAD_INO: u32 = 1;\n+pub const EXT4_ROOT_INO: u32 = 2;\n+pub const EXT4_BOOT_LOADER_INO: u32 = 5;\n+pub const EXT4_UNDEL_DIR_INO: u32 = 6;\n+pub const EXT4_RESIZE_INO: u32 = 7;\n+pub const EXT4_JOURNAL_INO: u32 = 8;\n+pub const EXT4_GOOD_OLD_FIRST_INO: u32 = 11;\n+pub const EXT2_HTREE_LEGACY: u32 = 0;\n+pub const EXT2_HTREE_HALF_MD4: u32 = 1;\n+pub const EXT2_HTREE_TEA: u32 = 2;\n+pub const EXT2_HTREE_LEGACY_UNSIGNED: u32 = 3;\n+pub const EXT2_HTREE_HALF_MD4_UNSIGNED: u32 = 4;\n+pub const EXT2_HTREE_TEA_UNSIGNED: u32 = 5;\n+pub const EXT2_HTREE_EOF: u32 = 2147483647;\n+pub const EXT4_GOOD_OLD_INODE_SIZE: u32 = 128;\n+pub const JBD_MAGIC_NUMBER: u32 = 3225106840;\n+pub const JBD_DESCRIPTOR_BLOCK: u32 = 1;\n+pub const JBD_COMMIT_BLOCK: u32 = 2;\n+pub const JBD_SUPERBLOCK: u32 = 3;\n+pub const JBD_SUPERBLOCK_V2: u32 = 4;\n+pub const JBD_REVOKE_BLOCK: u32 = 5;\n+pub const JBD_CRC32_CHKSUM: u32 = 1;\n+pub const JBD_MD5_CHKSUM: u32 = 2;\n+pub const JBD_SHA1_CHKSUM: u32 = 3;\n+pub const JBD_CRC32C_CHKSUM: u32 = 4;\n+pub const JBD_CRC32_CHKSUM_SIZE: u32 = 4;\n+pub const JBD_FLAG_ESCAPE: u32 = 1;\n+pub const JBD_FLAG_SAME_UUID: u32 = 2;\n+pub const JBD_FLAG_DELETED: u32 = 4;\n+pub const JBD_FLAG_LAST_TAG: u32 = 8;\n+pub const JBD_USERS_MAX: u32 = 48;\n+pub const JBD_USERS_SIZE: u32 = 768;\n+pub const JBD_FEATURE_COMPAT_CHECKSUM: u32 = 1;\n+pub const JBD_FEATURE_INCOMPAT_REVOKE: u32 = 1;\n+pub const JBD_FEATURE_INCOMPAT_64BIT: u32 = 2;\n+pub const JBD_FEATURE_INCOMPAT_ASYNC_COMMIT: u32 = 4;\n+pub const JBD_FEATURE_INCOMPAT_CSUM_V2: u32 = 8;\n+pub const JBD_FEATURE_INCOMPAT_CSUM_V3: u32 = 16;\n+pub const JBD_KNOWN_COMPAT_FEATURES: u32 = 0;\n+pub const JBD_KNOWN_ROCOMPAT_FEATURES: u32 = 0;\n+pub const JBD_KNOWN_INCOMPAT_FEATURES: u32 = 31;\n+pub const EXT4_CRC32_INIT: u32 = 4294967295;\n+pub const EPERM: u32 = 1;\n+pub const ENOENT: u32 = 2;\n+pub const EIO: u32 = 5;\n+pub const ENXIO: u32 = 6;\n+pub const E2BIG: u32 = 7;\n+pub const ENOMEM: u32 = 12;\n+pub const EACCES: u32 = 13;\n+pub const EFAULT: u32 = 14;\n+pub const EEXIST: u32 = 17;\n+pub const ENODEV: u32 = 19;\n+pub const ENOTDIR: u32 = 20;\n+pub const EISDIR: u32 = 21;\n+pub const EINVAL: u32 = 22;\n+pub const EFBIG: u32 = 27;\n+pub const ENOSPC: u32 = 28;\n+pub const EROFS: u32 = 30;\n+pub const EMLINK: u32 = 31;\n+pub const ERANGE: u32 = 34;\n+pub const ENOTEMPTY: u32 = 39;\n+pub const ENODATA: u32 = 61;\n+pub const ENOTSUP: u32 = 95;\n+pub const EOK: u32 = 0;\n+pub const O_RDONLY: u32 = 0;\n+pub const O_WRONLY: u32 = 1;\n+pub const O_RDWR: u32 = 2;\n+pub const O_CREAT: u32 = 64;\n+pub const O_EXCL: u32 = 128;\n+pub const O_TRUNC: u32 = 512;\n+pub const O_APPEND: u32 = 1024;\n+pub const SEEK_SET: u32 = 0;\n+pub const SEEK_CUR: u32 = 1;\n+pub const SEEK_END: u32 = 2;\n+pub const _INTTYPES_H: u32 = 1;\n+pub const ____gwchar_t_defined: u32 = 1;\n+pub const __PRI64_PREFIX: &[u8; 2usize] = b\"l\\0\";\n+pub const __PRIPTR_PREFIX: &[u8; 2usize] = b\"l\\0\";\n+pub const PRId8: &[u8; 2usize] = b\"d\\0\";\n+pub const PRId16: &[u8; 2usize] = b\"d\\0\";\n+pub const PRId32: &[u8; 2usize] = b\"d\\0\";\n+pub const PRId64: &[u8; 3usize] = b\"ld\\0\";\n+pub const PRIdLEAST8: &[u8; 2usize] = b\"d\\0\";\n+pub const PRIdLEAST16: &[u8; 2usize] = b\"d\\0\";\n+pub const PRIdLEAST32: &[u8; 2usize] = b\"d\\0\";\n+pub const PRIdLEAST64: &[u8; 3usize] = b\"ld\\0\";\n+pub const PRIdFAST8: &[u8; 2usize] = b\"d\\0\";\n+pub const PRIdFAST16: &[u8; 3usize] = b\"ld\\0\";\n+pub const PRIdFAST32: &[u8; 3usize] = b\"ld\\0\";\n+pub const PRIdFAST64: &[u8; 3usize] = b\"ld\\0\";\n+pub const PRIi8: &[u8; 2usize] = b\"i\\0\";\n+pub const PRIi16: &[u8; 2usize] = b\"i\\0\";\n+pub const PRIi32: &[u8; 2usize] = b\"i\\0\";\n+pub const PRIi64: &[u8; 3usize] = b\"li\\0\";\n+pub const PRIiLEAST8: &[u8; 2usize] = b\"i\\0\";\n+pub const PRIiLEAST16: &[u8; 2usize] = b\"i\\0\";\n+pub const PRIiLEAST32: &[u8; 2usize] = b\"i\\0\";\n+pub const PRIiLEAST64: &[u8; 3usize] = b\"li\\0\";\n+pub const PRIiFAST8: &[u8; 2usize] = b\"i\\0\";\n+pub const PRIiFAST16: &[u8; 3usize] = b\"li\\0\";\n+pub const PRIiFAST32: &[u8; 3usize] = b\"li\\0\";\n+pub const PRIiFAST64: &[u8; 3usize] = b\"li\\0\";\n+pub const PRIo8: &[u8; 2usize] = b\"o\\0\";\n+pub const PRIo16: &[u8; 2usize] = b\"o\\0\";\n+pub const PRIo32: &[u8; 2usize] = b\"o\\0\";\n+pub const PRIo64: &[u8; 3usize] = b\"lo\\0\";\n+pub const PRIoLEAST8: &[u8; 2usize] = b\"o\\0\";\n+pub const PRIoLEAST16: &[u8; 2usize] = b\"o\\0\";\n+pub const PRIoLEAST32: &[u8; 2usize] = b\"o\\0\";\n+pub const PRIoLEAST64: &[u8; 3usize] = b\"lo\\0\";\n+pub const PRIoFAST8: &[u8; 2usize] = b\"o\\0\";\n+pub const PRIoFAST16: &[u8; 3usize] = b\"lo\\0\";\n+pub const PRIoFAST32: &[u8; 3usize] = b\"lo\\0\";\n+pub const PRIoFAST64: &[u8; 3usize] = b\"lo\\0\";\n+pub const PRIu8: &[u8; 2usize] = b\"u\\0\";\n+pub const PRIu16: &[u8; 2usize] = b\"u\\0\";\n+pub const PRIu32: &[u8; 2usize] = b\"u\\0\";\n+pub const PRIu64: &[u8; 3usize] = b\"lu\\0\";\n+pub const PRIuLEAST8: &[u8; 2usize] = b\"u\\0\";\n+pub const PRIuLEAST16: &[u8; 2usize] = b\"u\\0\";\n+pub const PRIuLEAST32: &[u8; 2usize] = b\"u\\0\";\n+pub const PRIuLEAST64: &[u8; 3usize] = b\"lu\\0\";\n+pub const PRIuFAST8: &[u8; 2usize] = b\"u\\0\";\n+pub const PRIuFAST16: &[u8; 3usize] = b\"lu\\0\";\n+pub const PRIuFAST32: &[u8; 3usize] = b\"lu\\0\";\n+pub const PRIuFAST64: &[u8; 3usize] = b\"lu\\0\";\n+pub const PRIx8: &[u8; 2usize] = b\"x\\0\";\n+pub const PRIx16: &[u8; 2usize] = b\"x\\0\";\n+pub const PRIx32: &[u8; 2usize] = b\"x\\0\";\n+pub const PRIx64: &[u8; 3usize] = b\"lx\\0\";\n+pub const PRIxLEAST8: &[u8; 2usize] = b\"x\\0\";\n+pub const PRIxLEAST16: &[u8; 2usize] = b\"x\\0\";\n+pub const PRIxLEAST32: &[u8; 2usize] = b\"x\\0\";\n+pub const PRIxLEAST64: &[u8; 3usize] = b\"lx\\0\";\n+pub const PRIxFAST8: &[u8; 2usize] = b\"x\\0\";\n+pub const PRIxFAST16: &[u8; 3usize] = b\"lx\\0\";\n+pub const PRIxFAST32: &[u8; 3usize] = b\"lx\\0\";\n+pub const PRIxFAST64: &[u8; 3usize] = b\"lx\\0\";\n+pub const PRIX8: &[u8; 2usize] = b\"X\\0\";\n+pub const PRIX16: &[u8; 2usize] = b\"X\\0\";\n+pub const PRIX32: &[u8; 2usize] = b\"X\\0\";\n+pub const PRIX64: &[u8; 3usize] = b\"lX\\0\";\n+pub const PRIXLEAST8: &[u8; 2usize] = b\"X\\0\";\n+pub const PRIXLEAST16: &[u8; 2usize] = b\"X\\0\";\n+pub const PRIXLEAST32: &[u8; 2usize] = b\"X\\0\";\n+pub const PRIXLEAST64: &[u8; 3usize] = b\"lX\\0\";\n+pub const PRIXFAST8: &[u8; 2usize] = b\"X\\0\";\n+pub const PRIXFAST16: &[u8; 3usize] = b\"lX\\0\";\n+pub const PRIXFAST32: &[u8; 3usize] = b\"lX\\0\";\n+pub const PRIXFAST64: &[u8; 3usize] = b\"lX\\0\";\n+pub const PRIdMAX: &[u8; 3usize] = b\"ld\\0\";\n+pub const PRIiMAX: &[u8; 3usize] = b\"li\\0\";\n+pub const PRIoMAX: &[u8; 3usize] = b\"lo\\0\";\n+pub const PRIuMAX: &[u8; 3usize] = b\"lu\\0\";\n+pub const PRIxMAX: &[u8; 3usize] = b\"lx\\0\";\n+pub const PRIXMAX: &[u8; 3usize] = b\"lX\\0\";\n+pub const PRIdPTR: &[u8; 3usize] = b\"ld\\0\";\n+pub const PRIiPTR: &[u8; 3usize] = b\"li\\0\";\n+pub const PRIoPTR: &[u8; 3usize] = b\"lo\\0\";\n+pub const PRIuPTR: &[u8; 3usize] = b\"lu\\0\";\n+pub const PRIxPTR: &[u8; 3usize] = b\"lx\\0\";\n+pub const PRIXPTR: &[u8; 3usize] = b\"lX\\0\";\n+pub const SCNd8: &[u8; 4usize] = b\"hhd\\0\";\n+pub const SCNd16: &[u8; 3usize] = b\"hd\\0\";\n+pub const SCNd32: &[u8; 2usize] = b\"d\\0\";\n+pub const SCNd64: &[u8; 3usize] = b\"ld\\0\";\n+pub const SCNdLEAST8: &[u8; 4usize] = b\"hhd\\0\";\n+pub const SCNdLEAST16: &[u8; 3usize] = b\"hd\\0\";\n+pub const SCNdLEAST32: &[u8; 2usize] = b\"d\\0\";\n+pub const SCNdLEAST64: &[u8; 3usize] = b\"ld\\0\";\n+pub const SCNdFAST8: &[u8; 4usize] = b\"hhd\\0\";\n+pub const SCNdFAST16: &[u8; 3usize] = b\"ld\\0\";\n+pub const SCNdFAST32: &[u8; 3usize] = b\"ld\\0\";\n+pub const SCNdFAST64: &[u8; 3usize] = b\"ld\\0\";\n+pub const SCNi8: &[u8; 4usize] = b\"hhi\\0\";\n+pub const SCNi16: &[u8; 3usize] = b\"hi\\0\";\n+pub const SCNi32: &[u8; 2usize] = b\"i\\0\";\n+pub const SCNi64: &[u8; 3usize] = b\"li\\0\";\n+pub const SCNiLEAST8: &[u8; 4usize] = b\"hhi\\0\";\n+pub const SCNiLEAST16: &[u8; 3usize] = b\"hi\\0\";\n+pub const SCNiLEAST32: &[u8; 2usize] = b\"i\\0\";\n+pub const SCNiLEAST64: &[u8; 3usize] = b\"li\\0\";\n+pub const SCNiFAST8: &[u8; 4usize] = b\"hhi\\0\";\n+pub const SCNiFAST16: &[u8; 3usize] = b\"li\\0\";\n+pub const SCNiFAST32: &[u8; 3usize] = b\"li\\0\";\n+pub const SCNiFAST64: &[u8; 3usize] = b\"li\\0\";\n+pub const SCNu8: &[u8; 4usize] = b\"hhu\\0\";\n+pub const SCNu16: &[u8; 3usize] = b\"hu\\0\";\n+pub const SCNu32: &[u8; 2usize] = b\"u\\0\";\n+pub const SCNu64: &[u8; 3usize] = b\"lu\\0\";\n+pub const SCNuLEAST8: &[u8; 4usize] = b\"hhu\\0\";\n+pub const SCNuLEAST16: &[u8; 3usize] = b\"hu\\0\";\n+pub const SCNuLEAST32: &[u8; 2usize] = b\"u\\0\";\n+pub const SCNuLEAST64: &[u8; 3usize] = b\"lu\\0\";\n+pub const SCNuFAST8: &[u8; 4usize] = b\"hhu\\0\";\n+pub const SCNuFAST16: &[u8; 3usize] = b\"lu\\0\";\n+pub const SCNuFAST32: &[u8; 3usize] = b\"lu\\0\";\n+pub const SCNuFAST64: &[u8; 3usize] = b\"lu\\0\";\n+pub const SCNo8: &[u8; 4usize] = b\"hho\\0\";\n+pub const SCNo16: &[u8; 3usize] = b\"ho\\0\";\n+pub const SCNo32: &[u8; 2usize] = b\"o\\0\";\n+pub const SCNo64: &[u8; 3usize] = b\"lo\\0\";\n+pub const SCNoLEAST8: &[u8; 4usize] = b\"hho\\0\";\n+pub const SCNoLEAST16: &[u8; 3usize] = b\"ho\\0\";\n+pub const SCNoLEAST32: &[u8; 2usize] = b\"o\\0\";\n+pub const SCNoLEAST64: &[u8; 3usize] = b\"lo\\0\";\n+pub const SCNoFAST8: &[u8; 4usize] = b\"hho\\0\";\n+pub const SCNoFAST16: &[u8; 3usize] = b\"lo\\0\";\n+pub const SCNoFAST32: &[u8; 3usize] = b\"lo\\0\";\n+pub const SCNoFAST64: &[u8; 3usize] = b\"lo\\0\";\n+pub const SCNx8: &[u8; 4usize] = b\"hhx\\0\";\n+pub const SCNx16: &[u8; 3usize] = b\"hx\\0\";\n+pub const SCNx32: &[u8; 2usize] = b\"x\\0\";\n+pub const SCNx64: &[u8; 3usize] = b\"lx\\0\";\n+pub const SCNxLEAST8: &[u8; 4usize] = b\"hhx\\0\";\n+pub const SCNxLEAST16: &[u8; 3usize] = b\"hx\\0\";\n+pub const SCNxLEAST32: &[u8; 2usize] = b\"x\\0\";\n+pub const SCNxLEAST64: &[u8; 3usize] = b\"lx\\0\";\n+pub const SCNxFAST8: &[u8; 4usize] = b\"hhx\\0\";\n+pub const SCNxFAST16: &[u8; 3usize] = b\"lx\\0\";\n+pub const SCNxFAST32: &[u8; 3usize] = b\"lx\\0\";\n+pub const SCNxFAST64: &[u8; 3usize] = b\"lx\\0\";\n+pub const SCNdMAX: &[u8; 3usize] = b\"ld\\0\";\n+pub const SCNiMAX: &[u8; 3usize] = b\"li\\0\";\n+pub const SCNoMAX: &[u8; 3usize] = b\"lo\\0\";\n+pub const SCNuMAX: &[u8; 3usize] = b\"lu\\0\";\n+pub const SCNxMAX: &[u8; 3usize] = b\"lx\\0\";\n+pub const SCNdPTR: &[u8; 3usize] = b\"ld\\0\";\n+pub const SCNiPTR: &[u8; 3usize] = b\"li\\0\";\n+pub const SCNoPTR: &[u8; 3usize] = b\"lo\\0\";\n+pub const SCNuPTR: &[u8; 3usize] = b\"lu\\0\";\n+pub const SCNxPTR: &[u8; 3usize] = b\"lx\\0\";\n+pub const DEBUG_BALLOC: u32 = 1;\n+pub const DEBUG_BCACHE: u32 = 2;\n+pub const DEBUG_BITMAP: u32 = 4;\n+pub const DEBUG_BLOCK_GROUP: u32 = 8;\n+pub const DEBUG_BLOCKDEV: u32 = 16;\n+pub const DEBUG_DIR_IDX: u32 = 32;\n+pub const DEBUG_DIR: u32 = 64;\n+pub const DEBUG_EXTENT: u32 = 128;\n+pub const DEBUG_FS: u32 = 256;\n+pub const DEBUG_HASH: u32 = 512;\n+pub const DEBUG_IALLOC: u32 = 1024;\n+pub const DEBUG_INODE: u32 = 2048;\n+pub const DEBUG_SUPER: u32 = 4096;\n+pub const DEBUG_XATTR: u32 = 8192;\n+pub const DEBUG_MKFS: u32 = 16384;\n+pub const DEBUG_EXT4: u32 = 32768;\n+pub const DEBUG_JBD: u32 = 65536;\n+pub const DEBUG_MBR: u32 = 131072;\n+pub const DEBUG_NOPREFIX: u32 = 2147483648;\n+pub const DEBUG_ALL: u32 = 4294967295;\n+pub const DBG_NONE: &[u8; 1usize] = b\"\\0\";\n+pub const DBG_INFO: &[u8; 9usize] = b\"[info]  \\0\";\n+pub const DBG_WARN: &[u8; 9usize] = b\"[warn]  \\0\";\n+pub const DBG_ERROR: &[u8; 9usize] = b\"[error] \\0\";\n+pub const _STDIO_H: u32 = 1;\n+pub const __GNUC_VA_LIST: u32 = 1;\n+pub const _____fpos_t_defined: u32 = 1;\n+pub const ____mbstate_t_defined: u32 = 1;\n+pub const _____fpos64_t_defined: u32 = 1;\n+pub const ____FILE_defined: u32 = 1;\n+pub const __FILE_defined: u32 = 1;\n+pub const __struct_FILE_defined: u32 = 1;\n+pub const _IO_EOF_SEEN: u32 = 16;\n+pub const _IO_ERR_SEEN: u32 = 32;\n+pub const _IO_USER_LOCK: u32 = 32768;\n+pub const _IOFBF: u32 = 0;\n+pub const _IOLBF: u32 = 1;\n+pub const _IONBF: u32 = 2;\n+pub const BUFSIZ: u32 = 8192;\n+pub const EOF: i32 = -1;\n+pub const P_tmpdir: &[u8; 5usize] = b\"/tmp\\0\";\n+pub const _BITS_STDIO_LIM_H: u32 = 1;\n+pub const L_tmpnam: u32 = 20;\n+pub const TMP_MAX: u32 = 238328;\n+pub const FILENAME_MAX: u32 = 4096;\n+pub const L_ctermid: u32 = 9;\n+pub const FOPEN_MAX: u32 = 16;\n+pub const __HAVE_FLOAT128: u32 = 0;\n+pub const __HAVE_DISTINCT_FLOAT128: u32 = 0;\n+pub const __HAVE_FLOAT64X: u32 = 1;\n+pub const __HAVE_FLOAT64X_LONG_DOUBLE: u32 = 1;\n+pub const __HAVE_FLOAT16: u32 = 0;\n+pub const __HAVE_FLOAT32: u32 = 1;\n+pub const __HAVE_FLOAT64: u32 = 1;\n+pub const __HAVE_FLOAT32X: u32 = 1;\n+pub const __HAVE_FLOAT128X: u32 = 0;\n+pub const __HAVE_DISTINCT_FLOAT16: u32 = 0;\n+pub const __HAVE_DISTINCT_FLOAT32: u32 = 0;\n+pub const __HAVE_DISTINCT_FLOAT64: u32 = 0;\n+pub const __HAVE_DISTINCT_FLOAT32X: u32 = 0;\n+pub const __HAVE_DISTINCT_FLOAT64X: u32 = 0;\n+pub const __HAVE_DISTINCT_FLOAT128X: u32 = 0;\n+pub const __HAVE_FLOATN_NOT_TYPEDEF: u32 = 0;\n+pub type __u_char = ::core::ffi::c_uchar;\n+pub type __u_short = ::core::ffi::c_ushort;\n+pub type __u_int = ::core::ffi::c_uint;\n+pub type __u_long = ::core::ffi::c_ulong;\n+pub type __int8_t = ::core::ffi::c_schar;\n+pub type __uint8_t = ::core::ffi::c_uchar;\n+pub type __int16_t = ::core::ffi::c_short;\n+pub type __uint16_t = ::core::ffi::c_ushort;\n+pub type __int32_t = ::core::ffi::c_int;\n+pub type __uint32_t = ::core::ffi::c_uint;\n+pub type __int64_t = ::core::ffi::c_long;\n+pub type __uint64_t = ::core::ffi::c_ulong;\n+pub type __int_least8_t = __int8_t;\n+pub type __uint_least8_t = __uint8_t;\n+pub type __int_least16_t = __int16_t;\n+pub type __uint_least16_t = __uint16_t;\n+pub type __int_least32_t = __int32_t;\n+pub type __uint_least32_t = __uint32_t;\n+pub type __int_least64_t = __int64_t;\n+pub type __uint_least64_t = __uint64_t;\n+pub type __quad_t = ::core::ffi::c_long;\n+pub type __u_quad_t = ::core::ffi::c_ulong;\n+pub type __intmax_t = ::core::ffi::c_long;\n+pub type __uintmax_t = ::core::ffi::c_ulong;\n+pub type __dev_t = ::core::ffi::c_ulong;\n+pub type __uid_t = ::core::ffi::c_uint;\n+pub type __gid_t = ::core::ffi::c_uint;\n+pub type __ino_t = ::core::ffi::c_ulong;\n+pub type __ino64_t = ::core::ffi::c_ulong;\n+pub type __mode_t = ::core::ffi::c_uint;\n+pub type __nlink_t = ::core::ffi::c_ulong;\n+pub type __off_t = ::core::ffi::c_long;\n+pub type __off64_t = ::core::ffi::c_long;\n+pub type __pid_t = ::core::ffi::c_int;\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct __fsid_t {\n+    pub __val: [::core::ffi::c_int; 2usize],\n+}\n+pub type __clock_t = ::core::ffi::c_long;\n+pub type __rlim_t = ::core::ffi::c_ulong;\n+pub type __rlim64_t = ::core::ffi::c_ulong;\n+pub type __id_t = ::core::ffi::c_uint;\n+pub type __time_t = ::core::ffi::c_long;\n+pub type __useconds_t = ::core::ffi::c_uint;\n+pub type __suseconds_t = ::core::ffi::c_long;\n+pub type __suseconds64_t = ::core::ffi::c_long;\n+pub type __daddr_t = ::core::ffi::c_int;\n+pub type __key_t = ::core::ffi::c_int;\n+pub type __clockid_t = ::core::ffi::c_int;\n+pub type __timer_t = *mut ::core::ffi::c_void;\n+pub type __blksize_t = ::core::ffi::c_long;\n+pub type __blkcnt_t = ::core::ffi::c_long;\n+pub type __blkcnt64_t = ::core::ffi::c_long;\n+pub type __fsblkcnt_t = ::core::ffi::c_ulong;\n+pub type __fsblkcnt64_t = ::core::ffi::c_ulong;\n+pub type __fsfilcnt_t = ::core::ffi::c_ulong;\n+pub type __fsfilcnt64_t = ::core::ffi::c_ulong;\n+pub type __fsword_t = ::core::ffi::c_long;\n+pub type __ssize_t = ::core::ffi::c_long;\n+pub type __syscall_slong_t = ::core::ffi::c_long;\n+pub type __syscall_ulong_t = ::core::ffi::c_ulong;\n+pub type __loff_t = __off64_t;\n+pub type __caddr_t = *mut ::core::ffi::c_char;\n+pub type __intptr_t = ::core::ffi::c_long;\n+pub type __socklen_t = ::core::ffi::c_uint;\n+pub type __sig_atomic_t = ::core::ffi::c_int;\n+pub type int_least8_t = __int_least8_t;\n+pub type int_least16_t = __int_least16_t;\n+pub type int_least32_t = __int_least32_t;\n+pub type int_least64_t = __int_least64_t;\n+pub type uint_least8_t = __uint_least8_t;\n+pub type uint_least16_t = __uint_least16_t;\n+pub type uint_least32_t = __uint_least32_t;\n+pub type uint_least64_t = __uint_least64_t;\n+pub type int_fast8_t = ::core::ffi::c_schar;\n+pub type int_fast16_t = ::core::ffi::c_long;\n+pub type int_fast32_t = ::core::ffi::c_long;\n+pub type int_fast64_t = ::core::ffi::c_long;\n+pub type uint_fast8_t = ::core::ffi::c_uchar;\n+pub type uint_fast16_t = ::core::ffi::c_ulong;\n+pub type uint_fast32_t = ::core::ffi::c_ulong;\n+pub type uint_fast64_t = ::core::ffi::c_ulong;\n+pub type intmax_t = __intmax_t;\n+pub type uintmax_t = __uintmax_t;\n+pub type wchar_t = ::core::ffi::c_int;\n+#[repr(C)]\n+#[repr(align(16))]\n+#[derive(Debug, Copy, Clone)]\n+pub struct max_align_t {\n+    pub __clang_max_align_nonce1: ::core::ffi::c_longlong,\n+    pub __bindgen_padding_0: u64,\n+    pub __clang_max_align_nonce2: u128,\n+}\n+#[doc = \"@brief   Single block descriptor\"]\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_block {\n+    #[doc = \"@brief   Logical block ID\"]\n+    pub lb_id: u64,\n+    #[doc = \"@brief   Buffer\"]\n+    pub buf: *mut ext4_buf,\n+    #[doc = \"@brief   Data buffer.\"]\n+    pub data: *mut u8,\n+}\n+#[doc = \"@brief   Single block descriptor\"]\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_buf {\n+    #[doc = \"@brief   Flags\"]\n+    pub flags: ::core::ffi::c_int,\n+    #[doc = \"@brief   Logical block address\"]\n+    pub lba: u64,\n+    #[doc = \"@brief   Data buffer.\"]\n+    pub data: *mut u8,\n+    #[doc = \"@brief   LRU priority. (unused)\"]\n+    pub lru_prio: u32,\n+    #[doc = \"@brief   LRU id.\"]\n+    pub lru_id: u32,\n+    #[doc = \"@brief   Reference count table\"]\n+    pub refctr: u32,\n+    #[doc = \"@brief   The block cache this buffer belongs to.\"]\n+    pub bc: *mut ext4_bcache,\n+    #[doc = \"@brief   Whether or not buffer is on dirty list.\"]\n+    pub on_dirty_list: bool,\n+    #[doc = \"@brief   LBA tree node\"]\n+    pub lba_node: ext4_buf__bindgen_ty_1,\n+    #[doc = \"@brief   LRU tree node\"]\n+    pub lru_node: ext4_buf__bindgen_ty_2,\n+    #[doc = \"@brief   Dirty list node\"]\n+    pub dirty_node: ext4_buf__bindgen_ty_3,\n+    #[doc = \"@brief   Callback routine after a disk-write operation.\\n @param   bc block cache descriptor\\n @param   buf buffer descriptor\\n @param   standard error code returned by bdev->bwrite()\\n @param   arg argument passed to this routine\"]\n+    pub end_write: ::core::option::Option<\n+        unsafe extern \"C\" fn(\n+            bc: *mut ext4_bcache,\n+            buf: *mut ext4_buf,\n+            res: ::core::ffi::c_int,\n+            arg: *mut ::core::ffi::c_void,\n+        ),\n+    >,\n+    #[doc = \"@brief   argument passed to end_write() callback.\"]\n+    pub end_write_arg: *mut ::core::ffi::c_void,\n+}\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_buf__bindgen_ty_1 {\n+    pub rbe_left: *mut ext4_buf,\n+    pub rbe_right: *mut ext4_buf,\n+    pub rbe_parent: *mut ext4_buf,\n+    pub rbe_color: ::core::ffi::c_int,\n+}\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_buf__bindgen_ty_2 {\n+    pub rbe_left: *mut ext4_buf,\n+    pub rbe_right: *mut ext4_buf,\n+    pub rbe_parent: *mut ext4_buf,\n+    pub rbe_color: ::core::ffi::c_int,\n+}\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_buf__bindgen_ty_3 {\n+    pub sle_next: *mut ext4_buf,\n+}\n+#[doc = \"@brief   Block cache descriptor\"]\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_bcache {\n+    #[doc = \"@brief   Item count in block cache\"]\n+    pub cnt: u32,\n+    #[doc = \"@brief   Item size in block cache\"]\n+    pub itemsize: u32,\n+    #[doc = \"@brief   Last recently used counter\"]\n+    pub lru_ctr: u32,\n+    #[doc = \"@brief   Currently referenced datablocks\"]\n+    pub ref_blocks: u32,\n+    #[doc = \"@brief   Maximum referenced datablocks\"]\n+    pub max_ref_blocks: u32,\n+    #[doc = \"@brief   The blockdev binded to this block cache\"]\n+    pub bdev: *mut ext4_blockdev,\n+    #[doc = \"@brief   The cache should not be shaked\"]\n+    pub dont_shake: bool,\n+    #[doc = \"@brief   A tree holding all bufs\"]\n+    pub lba_root: ext4_bcache_ext4_buf_lba,\n+    #[doc = \"@brief   A tree holding unreferenced bufs\"]\n+    pub lru_root: ext4_bcache_ext4_buf_lru,\n+    #[doc = \"@brief   A singly-linked list holding dirty buffers\"]\n+    pub dirty_list: ext4_bcache_ext4_buf_dirty,\n+}\n+#[doc = \"@brief   A tree holding all bufs\"]\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_bcache_ext4_buf_lba {\n+    pub rbh_root: *mut ext4_buf,\n+}\n+#[doc = \"@brief   A tree holding unreferenced bufs\"]\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_bcache_ext4_buf_lru {\n+    pub rbh_root: *mut ext4_buf,\n+}\n+#[doc = \"@brief   A singly-linked list holding dirty buffers\"]\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_bcache_ext4_buf_dirty {\n+    pub slh_first: *mut ext4_buf,\n+}\n+pub const bcache_state_bits_BC_UPTODATE: bcache_state_bits = 0;\n+pub const bcache_state_bits_BC_DIRTY: bcache_state_bits = 1;\n+pub const bcache_state_bits_BC_FLUSH: bcache_state_bits = 2;\n+pub const bcache_state_bits_BC_TMP: bcache_state_bits = 3;\n+#[doc = \"@brief buffer state bits\\n\\n  - BC♡UPTODATE: Buffer contains valid data.\\n  - BC_DIRTY: Buffer is dirty.\\n  - BC_FLUSH: Buffer will be immediately flushed,\\n              when no one references it.\\n  - BC_TMP: Buffer will be dropped once its refctr\\n            reaches zero.\"]\n+pub type bcache_state_bits = ::core::ffi::c_uint;\n+extern \"C\" {\n+    #[doc = \"@brief   Dynamic initialization of block cache.\\n @param   bc block cache descriptor\\n @param   cnt items count in block cache\\n @param   itemsize single item size (in bytes)\\n @return  standard error code\"]\n+    pub fn ext4_bcache_init_dynamic(\n+        bc: *mut ext4_bcache,\n+        cnt: u32,\n+        itemsize: u32,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Do cleanup works on block cache.\\n @param   bc block cache descriptor.\"]\n+    pub fn ext4_bcache_cleanup(bc: *mut ext4_bcache);\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Dynamic de-initialization of block cache.\\n @param   bc block cache descriptor\\n @return  standard error code\"]\n+    pub fn ext4_bcache_fini_dynamic(bc: *mut ext4_bcache) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Get a buffer with the lowest LRU counter in bcache.\\n @param   bc block cache descriptor\\n @return  buffer with the lowest LRU counter\"]\n+    pub fn ext4_buf_lowest_lru(bc: *mut ext4_bcache) -> *mut ext4_buf;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Drop unreferenced buffer from bcache.\\n @param   bc block cache descriptor\\n @param   buf buffer\"]\n+    pub fn ext4_bcache_drop_buf(bc: *mut ext4_bcache, buf: *mut ext4_buf);\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Invalidate a buffer.\\n @param   bc block cache descriptor\\n @param   buf buffer\"]\n+    pub fn ext4_bcache_invalidate_buf(bc: *mut ext4_bcache, buf: *mut ext4_buf);\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Invalidate a range of buffers.\\n @param   bc block cache descriptor\\n @param   from starting lba\\n @param   cnt block counts\"]\n+    pub fn ext4_bcache_invalidate_lba(bc: *mut ext4_bcache, from: u64, cnt: u32);\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Find existing buffer from block cache memory.\\n          Unreferenced block allocation is based on LRU\\n          (Last Recently Used) algorithm.\\n @param   bc block cache descriptor\\n @param   b block to alloc\\n @param   lba logical block address\\n @return  block cache buffer\"]\n+    pub fn ext4_bcache_find_get(\n+        bc: *mut ext4_bcache,\n+        b: *mut ext4_block,\n+        lba: u64,\n+    ) -> *mut ext4_buf;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Allocate block from block cache memory.\\n          Unreferenced block allocation is based on LRU\\n          (Last Recently Used) algorithm.\\n @param   bc block cache descriptor\\n @param   b block to alloc\\n @param   is_new block is new (needs to be read)\\n @return  standard error code\"]\n+    pub fn ext4_bcache_alloc(\n+        bc: *mut ext4_bcache,\n+        b: *mut ext4_block,\n+        is_new: *mut bool,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Free block from cache memory (decrement reference counter).\\n @param   bc block cache descriptor\\n @param   b block to free\\n @return  standard error code\"]\n+    pub fn ext4_bcache_free(bc: *mut ext4_bcache, b: *mut ext4_block) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Return a full status of block cache.\\n @param   bc block cache descriptor\\n @return  full status\"]\n+    pub fn ext4_bcache_is_full(bc: *mut ext4_bcache) -> bool;\n+}\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_blockdev_iface {\n+    #[doc = \"@brief   Open device function\\n @param   bdev block device.\"]\n+    pub open: ::core::option::Option<\n+        unsafe extern \"C\" fn(bdev: *mut ext4_blockdev) -> ::core::ffi::c_int,\n+    >,\n+    #[doc = \"@brief   Block read function.\\n @param   bdev block device\\n @param   buf output buffer\\n @param   blk_id block id\\n @param   blk_cnt block count\"]\n+    pub bread: ::core::option::Option<\n+        unsafe extern \"C\" fn(\n+            bdev: *mut ext4_blockdev,\n+            buf: *mut ::core::ffi::c_void,\n+            blk_id: u64,\n+            blk_cnt: u32,\n+        ) -> ::core::ffi::c_int,\n+    >,\n+    #[doc = \"@brief   Block write function.\\n @param   buf input buffer\\n @param   blk_id block id\\n @param   blk_cnt block count\"]\n+    pub bwrite: ::core::option::Option<\n+        unsafe extern \"C\" fn(\n+            bdev: *mut ext4_blockdev,\n+            buf: *const ::core::ffi::c_void,\n+            blk_id: u64,\n+            blk_cnt: u32,\n+        ) -> ::core::ffi::c_int,\n+    >,\n+    #[doc = \"@brief   Close device function.\\n @param   bdev block device.\"]\n+    pub close: ::core::option::Option<\n+        unsafe extern \"C\" fn(bdev: *mut ext4_blockdev) -> ::core::ffi::c_int,\n+    >,\n+    #[doc = \"@brief   Lock block device. Required in multi partition mode\\n          operations. Not mandatory field.\\n @param   bdev block device.\"]\n+    pub lock: ::core::option::Option<\n+        unsafe extern \"C\" fn(bdev: *mut ext4_blockdev) -> ::core::ffi::c_int,\n+    >,\n+    #[doc = \"@brief   Unlock block device. Required in multi partition mode\\n          operations. Not mandatory field.\\n @param   bdev block device.\"]\n+    pub unlock: ::core::option::Option<\n+        unsafe extern \"C\" fn(bdev: *mut ext4_blockdev) -> ::core::ffi::c_int,\n+    >,\n+    #[doc = \"@brief   Block size (bytes): physical\"]\n+    pub ph_bsize: u32,\n+    #[doc = \"@brief   Block count: physical\"]\n+    pub ph_bcnt: u64,\n+    #[doc = \"@brief   Block size buffer: physical\"]\n+    pub ph_bbuf: *mut u8,\n+    #[doc = \"@brief   Reference counter to block device interface\"]\n+    pub ph_refctr: u32,\n+    #[doc = \"@brief   Physical read counter\"]\n+    pub bread_ctr: u32,\n+    #[doc = \"@brief   Physical write counter\"]\n+    pub bwrite_ctr: u32,\n+    #[doc = \"@brief   User data pointer\"]\n+    pub p_user: *mut ::core::ffi::c_void,\n+}\n+#[doc = \"@brief   Definition of the simple block device.\"]\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_blockdev {\n+    #[doc = \"@brief Block device interface\"]\n+    pub bdif: *mut ext4_blockdev_iface,\n+    #[doc = \"@brief Offset in bdif. For multi partition mode.\"]\n+    pub part_offset: u64,\n+    #[doc = \"@brief Part size in bdif. For multi partition mode.\"]\n+    pub part_size: u64,\n+    #[doc = \"@brief   Block cache.\"]\n+    pub bc: *mut ext4_bcache,\n+    #[doc = \"@brief   Block size (bytes) logical\"]\n+    pub lg_bsize: u32,\n+    #[doc = \"@brief   Block count: logical\"]\n+    pub lg_bcnt: u64,\n+    #[doc = \"@brief   Cache write back mode reference counter\"]\n+    pub cache_write_back: u32,\n+    #[doc = \"@brief   The filesystem this block device belongs to.\"]\n+    pub fs: *mut ext4_fs,\n+    pub journal: *mut ::core::ffi::c_void,\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Block device initialization.\\n @param   bdev block device descriptor\\n @return  standard error code\"]\n+    pub fn ext4_block_init(bdev: *mut ext4_blockdev) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Binds a bcache to block device.\\n @param   bdev block device descriptor\\n @param   bc block cache descriptor\\n @return  standard error code\"]\n+    pub fn ext4_block_bind_bcache(\n+        bdev: *mut ext4_blockdev,\n+        bc: *mut ext4_bcache,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Close block device\\n @param   bdev block device descriptor\\n @return  standard error code\"]\n+    pub fn ext4_block_fini(bdev: *mut ext4_blockdev) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Flush data in given buffer to disk.\\n @param   bdev block device descriptor\\n @param   buf buffer\\n @return  standard error code\"]\n+    pub fn ext4_block_flush_buf(bdev: *mut ext4_blockdev, buf: *mut ext4_buf)\n+        -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Flush data in buffer of given lba to disk,\\n          if that buffer exists in block cache.\\n @param   bdev block device descriptor\\n @param   lba logical block address\\n @return  standard error code\"]\n+    pub fn ext4_block_flush_lba(bdev: *mut ext4_blockdev, lba: u64) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Set logical block size in block device.\\n @param   bdev block device descriptor\\n @param   lb_bsize logical block size (in bytes)\"]\n+    pub fn ext4_block_set_lb_size(bdev: *mut ext4_blockdev, lb_bsize: u32);\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Block get function (through cache, don't read).\\n @param   bdev block device descriptor\\n @param   b block descriptor\\n @param   lba logical block address\\n @return  standard error code\"]\n+    pub fn ext4_block_get_noread(\n+        bdev: *mut ext4_blockdev,\n+        b: *mut ext4_block,\n+        lba: u64,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Block get function (through cache).\\n @param   bdev block device descriptor\\n @param   b block descriptor\\n @param   lba logical block address\\n @return  standard error code\"]\n+    pub fn ext4_block_get(\n+        bdev: *mut ext4_blockdev,\n+        b: *mut ext4_block,\n+        lba: u64,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Block set procedure (through cache).\\n @param   bdev block device descriptor\\n @param   b block descriptor\\n @return  standard error code\"]\n+    pub fn ext4_block_set(bdev: *mut ext4_blockdev, b: *mut ext4_block) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Block read procedure (without cache)\\n @param   bdev block device descriptor\\n @param   buf output buffer\\n @param   lba logical block address\\n @return  standard error code\"]\n+    pub fn ext4_blocks_get_direct(\n+        bdev: *mut ext4_blockdev,\n+        buf: *mut ::core::ffi::c_void,\n+        lba: u64,\n+        cnt: u32,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Block write procedure (without cache)\\n @param   bdev block device descriptor\\n @param   buf output buffer\\n @param   lba logical block address\\n @return  standard error code\"]\n+    pub fn ext4_blocks_set_direct(\n+        bdev: *mut ext4_blockdev,\n+        buf: *const ::core::ffi::c_void,\n+        lba: u64,\n+        cnt: u32,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Write to block device (by direct address).\\n @param   bdev block device descriptor\\n @param   off byte offset in block device\\n @param   buf input buffer\\n @param   len length of the write buffer\\n @return  standard error code\"]\n+    pub fn ext4_block_writebytes(\n+        bdev: *mut ext4_blockdev,\n+        off: u64,\n+        buf: *const ::core::ffi::c_void,\n+        len: u32,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Read freom block device (by direct address).\\n @param   bdev block device descriptor\\n @param   off byte offset in block device\\n @param   buf input buffer\\n @param   len length of the write buffer\\n @return  standard error code\"]\n+    pub fn ext4_block_readbytes(\n+        bdev: *mut ext4_blockdev,\n+        off: u64,\n+        buf: *mut ::core::ffi::c_void,\n+        len: u32,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Flush all dirty buffers to disk\\n @param   bdev block device descriptor\\n @return  standard error code\"]\n+    pub fn ext4_block_cache_flush(bdev: *mut ext4_blockdev) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Enable/disable write back cache mode\\n @param   bdev block device descriptor\\n @param   on_off\\n              !0 - ENABLE\\n               0 - DISABLE (all delayed cache buffers will be flushed)\\n @return  standard error code\"]\n+    pub fn ext4_block_cache_write_back(bdev: *mut ext4_blockdev, on_off: u8) -> ::core::ffi::c_int;\n+}\n+pub type ext4_lblk_t = u32;\n+pub type ext4_fsblk_t = u64;\n+#[repr(C, packed)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_sblock {\n+    pub inodes_count: u32,\n+    pub blocks_count_lo: u32,\n+    pub reserved_blocks_count_lo: u32,\n+    pub free_blocks_count_lo: u32,\n+    pub free_inodes_count: u32,\n+    pub first_data_block: u32,\n+    pub log_block_size: u32,\n+    pub log_cluster_size: u32,\n+    pub blocks_per_group: u32,\n+    pub frags_per_group: u32,\n+    pub inodes_per_group: u32,\n+    pub mount_time: u32,\n+    pub write_time: u32,\n+    pub mount_count: u16,\n+    pub max_mount_count: u16,\n+    pub magic: u16,\n+    pub state: u16,\n+    pub errors: u16,\n+    pub minor_rev_level: u16,\n+    pub last_check_time: u32,\n+    pub check_interval: u32,\n+    pub creator_os: u32,\n+    pub rev_level: u32,\n+    pub def_resuid: u16,\n+    pub def_resgid: u16,\n+    pub first_inode: u32,\n+    pub inode_size: u16,\n+    pub block_group_index: u16,\n+    pub features_compatible: u32,\n+    pub features_incompatible: u32,\n+    pub features_read_only: u32,\n+    pub uuid: [u8; 16usize],\n+    pub volume_name: [::core::ffi::c_char; 16usize],\n+    pub last_mounted: [::core::ffi::c_char; 64usize],\n+    pub algorithm_usage_bitmap: u32,\n+    pub s_prealloc_blocks: u8,\n+    pub s_prealloc_dir_blocks: u8,\n+    pub s_reserved_gdt_blocks: u16,\n+    pub journal_uuid: [u8; 16usize],\n+    pub journal_inode_number: u32,\n+    pub journal_dev: u32,\n+    pub last_orphan: u32,\n+    pub hash_seed: [u32; 4usize],\n+    pub default_hash_version: u8,\n+    pub journal_backup_type: u8,\n+    pub desc_size: u16,\n+    pub default_mount_opts: u32,\n+    pub first_meta_bg: u32,\n+    pub mkfs_time: u32,\n+    pub journal_blocks: [u32; 17usize],\n+    pub blocks_count_hi: u32,\n+    pub reserved_blocks_count_hi: u32,\n+    pub free_blocks_count_hi: u32,\n+    pub min_extra_isize: u16,\n+    pub want_extra_isize: u16,\n+    pub flags: u32,\n+    pub raid_stride: u16,\n+    pub mmp_interval: u16,\n+    pub mmp_block: u64,\n+    pub raid_stripe_width: u32,\n+    pub log_groups_per_flex: u8,\n+    pub checksum_type: u8,\n+    pub reserved_pad: u16,\n+    pub kbytes_written: u64,\n+    pub snapshot_inum: u32,\n+    pub snapshot_id: u32,\n+    pub snapshot_r_blocks_count: u64,\n+    pub snapshot_list: u32,\n+    pub error_count: u32,\n+    pub first_error_time: u32,\n+    pub first_error_ino: u32,\n+    pub first_error_block: u64,\n+    pub first_error_func: [u8; 32usize],\n+    pub first_error_line: u32,\n+    pub last_error_time: u32,\n+    pub last_error_ino: u32,\n+    pub last_error_line: u32,\n+    pub last_error_block: u64,\n+    pub last_error_func: [u8; 32usize],\n+    pub mount_opts: [u8; 64usize],\n+    pub usr_quota_inum: u32,\n+    pub grp_quota_inum: u32,\n+    pub overhead_clusters: u32,\n+    pub backup_bgs: [u32; 2usize],\n+    pub encrypt_algos: [u8; 4usize],\n+    pub encrypt_pw_salt: [u8; 16usize],\n+    pub lpf_ino: u32,\n+    pub padding: [u32; 100usize],\n+    pub checksum: u32,\n+}\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_bgroup {\n+    pub block_bitmap_lo: u32,\n+    pub inode_bitmap_lo: u32,\n+    pub inode_table_first_block_lo: u32,\n+    pub free_blocks_count_lo: u16,\n+    pub free_inodes_count_lo: u16,\n+    pub used_dirs_count_lo: u16,\n+    pub flags: u16,\n+    pub exclude_bitmap_lo: u32,\n+    pub block_bitmap_csum_lo: u16,\n+    pub inode_bitmap_csum_lo: u16,\n+    pub itable_unused_lo: u16,\n+    pub checksum: u16,\n+    pub block_bitmap_hi: u32,\n+    pub inode_bitmap_hi: u32,\n+    pub inode_table_first_block_hi: u32,\n+    pub free_blocks_count_hi: u16,\n+    pub free_inodes_count_hi: u16,\n+    pub used_dirs_count_hi: u16,\n+    pub itable_unused_hi: u16,\n+    pub exclude_bitmap_hi: u32,\n+    pub block_bitmap_csum_hi: u16,\n+    pub inode_bitmap_csum_hi: u16,\n+    pub reserved: u32,\n+}\n+#[repr(C, packed)]\n+#[derive(Copy, Clone)]\n+pub struct ext4_inode {\n+    pub mode: u16,\n+    pub uid: u16,\n+    pub size_lo: u32,\n+    pub access_time: u32,\n+    pub change_inode_time: u32,\n+    pub modification_time: u32,\n+    pub deletion_time: u32,\n+    pub gid: u16,\n+    pub links_count: u16,\n+    pub blocks_count_lo: u32,\n+    pub flags: u32,\n+    pub unused_osd1: u32,\n+    pub blocks: [u32; 15usize],\n+    pub generation: u32,\n+    pub file_acl_lo: u32,\n+    pub size_hi: u32,\n+    pub obso_faddr: u32,\n+    pub osd2: ext4_inode__bindgen_ty_1,\n+    pub extra_isize: u16,\n+    pub checksum_hi: u16,\n+    pub ctime_extra: u32,\n+    pub mtime_extra: u32,\n+    pub atime_extra: u32,\n+    pub crtime: u32,\n+    pub crtime_extra: u32,\n+    pub version_hi: u32,\n+}\n+#[repr(C)]\n+#[derive(Copy, Clone)]\n+pub union ext4_inode__bindgen_ty_1 {\n+    pub linux2: ext4_inode__bindgen_ty_1__bindgen_ty_1,\n+    pub hurd2: ext4_inode__bindgen_ty_1__bindgen_ty_2,\n+}\n+#[repr(C, packed)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_inode__bindgen_ty_1__bindgen_ty_1 {\n+    pub blocks_high: u16,\n+    pub file_acl_high: u16,\n+    pub uid_high: u16,\n+    pub gid_high: u16,\n+    pub checksum_lo: u16,\n+    pub reserved2: u16,\n+}\n+#[repr(C, packed)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_inode__bindgen_ty_1__bindgen_ty_2 {\n+    pub reserved1: u16,\n+    pub mode_high: u16,\n+    pub uid_high: u16,\n+    pub gid_high: u16,\n+    pub author: u32,\n+}\n+pub const EXT4_DE_UNKNOWN: _bindgen_ty_1 = 0;\n+pub const EXT4_DE_REG_FILE: _bindgen_ty_1 = 1;\n+pub const EXT4_DE_DIR: _bindgen_ty_1 = 2;\n+pub const EXT4_DE_CHRDEV: _bindgen_ty_1 = 3;\n+pub const EXT4_DE_BLKDEV: _bindgen_ty_1 = 4;\n+pub const EXT4_DE_FIFO: _bindgen_ty_1 = 5;\n+pub const EXT4_DE_SOCK: _bindgen_ty_1 = 6;\n+pub const EXT4_DE_SYMLINK: _bindgen_ty_1 = 7;\n+#[doc = \"@brief   Directory entry types.\"]\n+pub type _bindgen_ty_1 = ::core::ffi::c_uint;\n+#[repr(C)]\n+#[derive(Copy, Clone)]\n+pub union ext4_dir_en_internal {\n+    pub name_length_high: u8,\n+    pub inode_type: u8,\n+}\n+#[doc = \" Linked list directory entry structure\"]\n+#[repr(C, packed)]\n+pub struct ext4_dir_en {\n+    pub inode: u32,\n+    pub entry_len: u16,\n+    pub name_len: u8,\n+    pub in_: ext4_dir_en_internal,\n+    pub name: __IncompleteArrayField<u8>,\n+}\n+#[repr(C, packed)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_dir_idx_climit {\n+    pub limit: u16,\n+    pub count: u16,\n+}\n+#[repr(C, packed)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_dir_idx_dot_en {\n+    pub inode: u32,\n+    pub entry_length: u16,\n+    pub name_length: u8,\n+    pub inode_type: u8,\n+    pub name: [u8; 4usize],\n+}\n+#[repr(C, packed)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_dir_idx_rinfo {\n+    pub reserved_zero: u32,\n+    pub hash_version: u8,\n+    pub info_length: u8,\n+    pub indirect_levels: u8,\n+    pub unused_flags: u8,\n+}\n+#[repr(C, packed)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_dir_idx_entry {\n+    pub hash: u32,\n+    pub block: u32,\n+}\n+#[repr(C)]\n+#[derive(Debug)]\n+pub struct ext4_dir_idx_root {\n+    pub dots: [ext4_dir_idx_dot_en; 2usize],\n+    pub info: ext4_dir_idx_rinfo,\n+    pub en: __IncompleteArrayField<ext4_dir_idx_entry>,\n+}\n+#[repr(C, packed)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_fake_dir_entry {\n+    pub inode: u32,\n+    pub entry_length: u16,\n+    pub name_length: u8,\n+    pub inode_type: u8,\n+}\n+#[repr(C)]\n+#[derive(Debug)]\n+pub struct ext4_dir_idx_node {\n+    pub fake: ext4_fake_dir_entry,\n+    pub entries: __IncompleteArrayField<ext4_dir_idx_entry>,\n+}\n+#[repr(C, packed)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_dir_idx_tail {\n+    pub reserved: u32,\n+    pub checksum: u32,\n+}\n+#[repr(C, packed)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_dir_entry_tail {\n+    pub reserved_zero1: u32,\n+    pub rec_len: u16,\n+    pub reserved_zero2: u8,\n+    pub reserved_ft: u8,\n+    pub checksum: u32,\n+}\n+#[repr(C, packed)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct jbd_bhdr {\n+    pub magic: u32,\n+    pub blocktype: u32,\n+    pub sequence: u32,\n+}\n+#[repr(C, packed)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct jbd_commit_header {\n+    pub header: jbd_bhdr,\n+    pub chksum_type: u8,\n+    pub chksum_size: u8,\n+    pub padding: [u8; 2usize],\n+    pub chksum: [u32; 8usize],\n+    pub commit_sec: u64,\n+    pub commit_nsec: u32,\n+}\n+#[repr(C, packed)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct jbd_block_tag3 {\n+    pub blocknr: u32,\n+    pub flags: u32,\n+    pub blocknr_high: u32,\n+    pub checksum: u32,\n+}\n+#[repr(C, packed)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct jbd_block_tag {\n+    pub blocknr: u32,\n+    pub checksum: u16,\n+    pub flags: u16,\n+    pub blocknr_high: u32,\n+}\n+#[repr(C, packed)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct jbd_block_tail {\n+    pub checksum: u32,\n+}\n+#[repr(C, packed)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct jbd_revoke_header {\n+    pub header: jbd_bhdr,\n+    pub count: u32,\n+}\n+#[repr(C, packed)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct jbd_revoke_tail {\n+    pub checksum: u32,\n+}\n+#[repr(C, packed)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct jbd_sb {\n+    pub header: jbd_bhdr,\n+    pub blocksize: u32,\n+    pub maxlen: u32,\n+    pub first: u32,\n+    pub sequence: u32,\n+    pub start: u32,\n+    pub error_val: i32,\n+    pub feature_compat: u32,\n+    pub feature_incompat: u32,\n+    pub feature_ro_compat: u32,\n+    pub uuid: [u8; 16usize],\n+    pub nr_users: u32,\n+    pub dynsuper: u32,\n+    pub max_transaction: u32,\n+    pub max_trandata: u32,\n+    pub checksum_type: u8,\n+    pub padding2: [u8; 3usize],\n+    pub padding: [u32; 42usize],\n+    pub checksum: u32,\n+    pub users: [u8; 768usize],\n+}\n+pub type __gwchar_t = ::core::ffi::c_int;\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct imaxdiv_t {\n+    pub quot: ::core::ffi::c_long,\n+    pub rem: ::core::ffi::c_long,\n+}\n+extern \"C\" {\n+    pub fn imaxabs(__n: intmax_t) -> intmax_t;\n+}\n+extern \"C\" {\n+    pub fn imaxdiv(__numer: intmax_t, __denom: intmax_t) -> imaxdiv_t;\n+}\n+extern \"C\" {\n+    pub fn strtoimax(\n+        __nptr: *const ::core::ffi::c_char,\n+        __endptr: *mut *mut ::core::ffi::c_char,\n+        __base: ::core::ffi::c_int,\n+    ) -> intmax_t;\n+}\n+extern \"C\" {\n+    pub fn strtoumax(\n+        __nptr: *const ::core::ffi::c_char,\n+        __endptr: *mut *mut ::core::ffi::c_char,\n+        __base: ::core::ffi::c_int,\n+    ) -> uintmax_t;\n+}\n+extern \"C\" {\n+    pub fn wcstoimax(\n+        __nptr: *const __gwchar_t,\n+        __endptr: *mut *mut __gwchar_t,\n+        __base: ::core::ffi::c_int,\n+    ) -> intmax_t;\n+}\n+extern \"C\" {\n+    pub fn wcstoumax(\n+        __nptr: *const __gwchar_t,\n+        __endptr: *mut *mut __gwchar_t,\n+        __base: ::core::ffi::c_int,\n+    ) -> uintmax_t;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Global mask debug set.\\n @param   m new debug mask.\"]\n+    pub fn ext4_dmask_set(m: u32);\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Global mask debug clear.\\n @param   m new debug mask.\"]\n+    pub fn ext4_dmask_clr(m: u32);\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Global debug mask get.\\n @return  debug mask\"]\n+    pub fn ext4_dmask_get() -> u32;\n+}\n+pub type va_list = __builtin_va_list;\n+pub type __gnuc_va_list = __builtin_va_list;\n+#[repr(C)]\n+#[derive(Copy, Clone)]\n+pub struct __mbstate_t {\n+    pub __count: ::core::ffi::c_int,\n+    pub __value: __mbstate_t__bindgen_ty_1,\n+}\n+#[repr(C)]\n+#[derive(Copy, Clone)]\n+pub union __mbstate_t__bindgen_ty_1 {\n+    pub __wch: ::core::ffi::c_uint,\n+    pub __wchb: [::core::ffi::c_char; 4usize],\n+}\n+#[repr(C)]\n+#[derive(Copy, Clone)]\n+pub struct _G_fpos_t {\n+    pub __pos: __off_t,\n+    pub __state: __mbstate_t,\n+}\n+pub type __fpos_t = _G_fpos_t;\n+#[repr(C)]\n+#[derive(Copy, Clone)]\n+pub struct _G_fpos64_t {\n+    pub __pos: __off64_t,\n+    pub __state: __mbstate_t,\n+}\n+pub type __fpos64_t = _G_fpos64_t;\n+pub type __FILE = _IO_FILE;\n+pub type FILE = _IO_FILE;\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct _IO_marker {\n+    _unused: [u8; 0],\n+}\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct _IO_codecvt {\n+    _unused: [u8; 0],\n+}\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct _IO_wide_data {\n+    _unused: [u8; 0],\n+}\n+pub type _IO_lock_t = ::core::ffi::c_void;\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct _IO_FILE {\n+    pub _flags: ::core::ffi::c_int,\n+    pub _IO_read_ptr: *mut ::core::ffi::c_char,\n+    pub _IO_read_end: *mut ::core::ffi::c_char,\n+    pub _IO_read_base: *mut ::core::ffi::c_char,\n+    pub _IO_write_base: *mut ::core::ffi::c_char,\n+    pub _IO_write_ptr: *mut ::core::ffi::c_char,\n+    pub _IO_write_end: *mut ::core::ffi::c_char,\n+    pub _IO_buf_base: *mut ::core::ffi::c_char,\n+    pub _IO_buf_end: *mut ::core::ffi::c_char,\n+    pub _IO_save_base: *mut ::core::ffi::c_char,\n+    pub _IO_backup_base: *mut ::core::ffi::c_char,\n+    pub _IO_save_end: *mut ::core::ffi::c_char,\n+    pub _markers: *mut _IO_marker,\n+    pub _chain: *mut _IO_FILE,\n+    pub _fileno: ::core::ffi::c_int,\n+    pub _flags2: ::core::ffi::c_int,\n+    pub _old_offset: __off_t,\n+    pub _cur_column: ::core::ffi::c_ushort,\n+    pub _vtable_offset: ::core::ffi::c_schar,\n+    pub _shortbuf: [::core::ffi::c_char; 1usize],\n+    pub _lock: *mut _IO_lock_t,\n+    pub _offset: __off64_t,\n+    pub _codecvt: *mut _IO_codecvt,\n+    pub _wide_data: *mut _IO_wide_data,\n+    pub _freeres_list: *mut _IO_FILE,\n+    pub _freeres_buf: *mut ::core::ffi::c_void,\n+    pub __pad5: usize,\n+    pub _mode: ::core::ffi::c_int,\n+    pub _unused2: [::core::ffi::c_char; 20usize],\n+}\n+pub type off_t = __off_t;\n+pub type fpos_t = __fpos_t;\n+extern \"C\" {\n+    pub static mut stdin: *mut FILE;\n+}\n+extern \"C\" {\n+    pub static mut stdout: *mut FILE;\n+}\n+extern \"C\" {\n+    pub static mut stderr: *mut FILE;\n+}\n+extern \"C\" {\n+    pub fn remove(__filename: *const ::core::ffi::c_char) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn rename(\n+        __old: *const ::core::ffi::c_char,\n+        __new: *const ::core::ffi::c_char,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn renameat(\n+        __oldfd: ::core::ffi::c_int,\n+        __old: *const ::core::ffi::c_char,\n+        __newfd: ::core::ffi::c_int,\n+        __new: *const ::core::ffi::c_char,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn fclose(__stream: *mut FILE) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn tmpfile() -> *mut FILE;\n+}\n+extern \"C\" {\n+    pub fn tmpnam(arg1: *mut ::core::ffi::c_char) -> *mut ::core::ffi::c_char;\n+}\n+extern \"C\" {\n+    pub fn tmpnam_r(__s: *mut ::core::ffi::c_char) -> *mut ::core::ffi::c_char;\n+}\n+extern \"C\" {\n+    pub fn tempnam(\n+        __dir: *const ::core::ffi::c_char,\n+        __pfx: *const ::core::ffi::c_char,\n+    ) -> *mut ::core::ffi::c_char;\n+}\n+extern \"C\" {\n+    pub fn fflush(__stream: *mut FILE) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn fflush_unlocked(__stream: *mut FILE) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn fopen(\n+        __filename: *const ::core::ffi::c_char,\n+        __modes: *const ::core::ffi::c_char,\n+    ) -> *mut FILE;\n+}\n+extern \"C\" {\n+    pub fn freopen(\n+        __filename: *const ::core::ffi::c_char,\n+        __modes: *const ::core::ffi::c_char,\n+        __stream: *mut FILE,\n+    ) -> *mut FILE;\n+}\n+extern \"C\" {\n+    pub fn fdopen(__fd: ::core::ffi::c_int, __modes: *const ::core::ffi::c_char) -> *mut FILE;\n+}\n+extern \"C\" {\n+    pub fn fmemopen(\n+        __s: *mut ::core::ffi::c_void,\n+        __len: usize,\n+        __modes: *const ::core::ffi::c_char,\n+    ) -> *mut FILE;\n+}\n+extern \"C\" {\n+    pub fn open_memstream(\n+        __bufloc: *mut *mut ::core::ffi::c_char,\n+        __sizeloc: *mut usize,\n+    ) -> *mut FILE;\n+}\n+extern \"C\" {\n+    pub fn setbuf(__stream: *mut FILE, __buf: *mut ::core::ffi::c_char);\n+}\n+extern \"C\" {\n+    pub fn setvbuf(\n+        __stream: *mut FILE,\n+        __buf: *mut ::core::ffi::c_char,\n+        __modes: ::core::ffi::c_int,\n+        __n: usize,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn setbuffer(__stream: *mut FILE, __buf: *mut ::core::ffi::c_char, __size: usize);\n+}\n+extern \"C\" {\n+    pub fn setlinebuf(__stream: *mut FILE);\n+}\n+extern \"C\" {\n+    pub fn fprintf(\n+        __stream: *mut FILE,\n+        __format: *const ::core::ffi::c_char,\n+        ...\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn printf(__format: *const ::core::ffi::c_char, ...) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn sprintf(\n+        __s: *mut ::core::ffi::c_char,\n+        __format: *const ::core::ffi::c_char,\n+        ...\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn vfprintf(\n+        __s: *mut FILE,\n+        __format: *const ::core::ffi::c_char,\n+        __arg: *mut __va_list_tag,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn vprintf(\n+        __format: *const ::core::ffi::c_char,\n+        __arg: *mut __va_list_tag,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn vsprintf(\n+        __s: *mut ::core::ffi::c_char,\n+        __format: *const ::core::ffi::c_char,\n+        __arg: *mut __va_list_tag,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn snprintf(\n+        __s: *mut ::core::ffi::c_char,\n+        __maxlen: ::core::ffi::c_ulong,\n+        __format: *const ::core::ffi::c_char,\n+        ...\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn vsnprintf(\n+        __s: *mut ::core::ffi::c_char,\n+        __maxlen: ::core::ffi::c_ulong,\n+        __format: *const ::core::ffi::c_char,\n+        __arg: *mut __va_list_tag,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn vdprintf(\n+        __fd: ::core::ffi::c_int,\n+        __fmt: *const ::core::ffi::c_char,\n+        __arg: *mut __va_list_tag,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn dprintf(\n+        __fd: ::core::ffi::c_int,\n+        __fmt: *const ::core::ffi::c_char,\n+        ...\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn fscanf(\n+        __stream: *mut FILE,\n+        __format: *const ::core::ffi::c_char,\n+        ...\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn scanf(__format: *const ::core::ffi::c_char, ...) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn sscanf(\n+        __s: *const ::core::ffi::c_char,\n+        __format: *const ::core::ffi::c_char,\n+        ...\n+    ) -> ::core::ffi::c_int;\n+}\n+pub type _Float32 = f32;\n+pub type _Float64 = f64;\n+pub type _Float32x = f64;\n+pub type _Float64x = u128;\n+extern \"C\" {\n+    #[link_name = \"\\u{1}__isoc99_fscanf\"]\n+    pub fn fscanf1(\n+        __stream: *mut FILE,\n+        __format: *const ::core::ffi::c_char,\n+        ...\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[link_name = \"\\u{1}__isoc99_scanf\"]\n+    pub fn scanf1(__format: *const ::core::ffi::c_char, ...) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[link_name = \"\\u{1}__isoc99_sscanf\"]\n+    pub fn sscanf1(\n+        __s: *const ::core::ffi::c_char,\n+        __format: *const ::core::ffi::c_char,\n+        ...\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn vfscanf(\n+        __s: *mut FILE,\n+        __format: *const ::core::ffi::c_char,\n+        __arg: *mut __va_list_tag,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn vscanf(\n+        __format: *const ::core::ffi::c_char,\n+        __arg: *mut __va_list_tag,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn vsscanf(\n+        __s: *const ::core::ffi::c_char,\n+        __format: *const ::core::ffi::c_char,\n+        __arg: *mut __va_list_tag,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[link_name = \"\\u{1}__isoc99_vfscanf\"]\n+    pub fn vfscanf1(\n+        __s: *mut FILE,\n+        __format: *const ::core::ffi::c_char,\n+        __arg: *mut __va_list_tag,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[link_name = \"\\u{1}__isoc99_vscanf\"]\n+    pub fn vscanf1(\n+        __format: *const ::core::ffi::c_char,\n+        __arg: *mut __va_list_tag,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[link_name = \"\\u{1}__isoc99_vsscanf\"]\n+    pub fn vsscanf1(\n+        __s: *const ::core::ffi::c_char,\n+        __format: *const ::core::ffi::c_char,\n+        __arg: *mut __va_list_tag,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn fgetc(__stream: *mut FILE) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn getc(__stream: *mut FILE) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn getchar() -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn getc_unlocked(__stream: *mut FILE) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn getchar_unlocked() -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn fgetc_unlocked(__stream: *mut FILE) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn fputc(__c: ::core::ffi::c_int, __stream: *mut FILE) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn putc(__c: ::core::ffi::c_int, __stream: *mut FILE) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn putchar(__c: ::core::ffi::c_int) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn fputc_unlocked(__c: ::core::ffi::c_int, __stream: *mut FILE) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn putc_unlocked(__c: ::core::ffi::c_int, __stream: *mut FILE) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn putchar_unlocked(__c: ::core::ffi::c_int) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn getw(__stream: *mut FILE) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn putw(__w: ::core::ffi::c_int, __stream: *mut FILE) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn fgets(\n+        __s: *mut ::core::ffi::c_char,\n+        __n: ::core::ffi::c_int,\n+        __stream: *mut FILE,\n+    ) -> *mut ::core::ffi::c_char;\n+}\n+extern \"C\" {\n+    pub fn __getdelim(\n+        __lineptr: *mut *mut ::core::ffi::c_char,\n+        __n: *mut usize,\n+        __delimiter: ::core::ffi::c_int,\n+        __stream: *mut FILE,\n+    ) -> __ssize_t;\n+}\n+extern \"C\" {\n+    pub fn getdelim(\n+        __lineptr: *mut *mut ::core::ffi::c_char,\n+        __n: *mut usize,\n+        __delimiter: ::core::ffi::c_int,\n+        __stream: *mut FILE,\n+    ) -> __ssize_t;\n+}\n+extern \"C\" {\n+    pub fn getline(\n+        __lineptr: *mut *mut ::core::ffi::c_char,\n+        __n: *mut usize,\n+        __stream: *mut FILE,\n+    ) -> __ssize_t;\n+}\n+extern \"C\" {\n+    pub fn fputs(__s: *const ::core::ffi::c_char, __stream: *mut FILE) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn puts(__s: *const ::core::ffi::c_char) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn ungetc(__c: ::core::ffi::c_int, __stream: *mut FILE) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn fread(\n+        __ptr: *mut ::core::ffi::c_void,\n+        __size: ::core::ffi::c_ulong,\n+        __n: ::core::ffi::c_ulong,\n+        __stream: *mut FILE,\n+    ) -> ::core::ffi::c_ulong;\n+}\n+extern \"C\" {\n+    pub fn fwrite(\n+        __ptr: *const ::core::ffi::c_void,\n+        __size: ::core::ffi::c_ulong,\n+        __n: ::core::ffi::c_ulong,\n+        __s: *mut FILE,\n+    ) -> ::core::ffi::c_ulong;\n+}\n+extern \"C\" {\n+    pub fn fread_unlocked(\n+        __ptr: *mut ::core::ffi::c_void,\n+        __size: usize,\n+        __n: usize,\n+        __stream: *mut FILE,\n+    ) -> usize;\n+}\n+extern \"C\" {\n+    pub fn fwrite_unlocked(\n+        __ptr: *const ::core::ffi::c_void,\n+        __size: usize,\n+        __n: usize,\n+        __stream: *mut FILE,\n+    ) -> usize;\n+}\n+extern \"C\" {\n+    pub fn fseek(\n+        __stream: *mut FILE,\n+        __off: ::core::ffi::c_long,\n+        __whence: ::core::ffi::c_int,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn ftell(__stream: *mut FILE) -> ::core::ffi::c_long;\n+}\n+extern \"C\" {\n+    pub fn rewind(__stream: *mut FILE);\n+}\n+extern \"C\" {\n+    pub fn fseeko(\n+        __stream: *mut FILE,\n+        __off: __off_t,\n+        __whence: ::core::ffi::c_int,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn ftello(__stream: *mut FILE) -> __off_t;\n+}\n+extern \"C\" {\n+    pub fn fgetpos(__stream: *mut FILE, __pos: *mut fpos_t) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn fsetpos(__stream: *mut FILE, __pos: *const fpos_t) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn clearerr(__stream: *mut FILE);\n+}\n+extern \"C\" {\n+    pub fn feof(__stream: *mut FILE) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn ferror(__stream: *mut FILE) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn clearerr_unlocked(__stream: *mut FILE);\n+}\n+extern \"C\" {\n+    pub fn feof_unlocked(__stream: *mut FILE) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn ferror_unlocked(__stream: *mut FILE) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn perror(__s: *const ::core::ffi::c_char);\n+}\n+extern \"C\" {\n+    pub fn fileno(__stream: *mut FILE) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn fileno_unlocked(__stream: *mut FILE) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn pclose(__stream: *mut FILE) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn popen(\n+        __command: *const ::core::ffi::c_char,\n+        __modes: *const ::core::ffi::c_char,\n+    ) -> *mut FILE;\n+}\n+extern \"C\" {\n+    pub fn ctermid(__s: *mut ::core::ffi::c_char) -> *mut ::core::ffi::c_char;\n+}\n+extern \"C\" {\n+    pub fn flockfile(__stream: *mut FILE);\n+}\n+extern \"C\" {\n+    pub fn ftrylockfile(__stream: *mut FILE) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn funlockfile(__stream: *mut FILE);\n+}\n+extern \"C\" {\n+    pub fn __uflow(arg1: *mut FILE) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn __overflow(arg1: *mut FILE, arg2: ::core::ffi::c_int) -> ::core::ffi::c_int;\n+}\n+#[doc = \"@brief   OS dependent lock interface.\"]\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_lock {\n+    #[doc = \"@brief   Lock access to mount point.\"]\n+    pub lock: ::core::option::Option<unsafe extern \"C\" fn()>,\n+    #[doc = \"@brief   Unlock access to mount point.\"]\n+    pub unlock: ::core::option::Option<unsafe extern \"C\" fn()>,\n+}\n+#[doc = \"@brief   File descriptor.\"]\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_file {\n+    #[doc = \"@brief   Mount point handle.\"]\n+    pub mp: *mut ext4_mountpoint,\n+    #[doc = \"@brief   File inode id.\"]\n+    pub inode: u32,\n+    #[doc = \"@brief   Open flags.\"]\n+    pub flags: u32,\n+    #[doc = \"@brief   File size.\"]\n+    pub fsize: u64,\n+    #[doc = \"@brief   Actual file position.\"]\n+    pub fpos: u64,\n+}\n+#[doc = \"@brief   Directory entry descriptor.\"]\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_direntry {\n+    pub inode: u32,\n+    pub entry_length: u16,\n+    pub name_length: u8,\n+    pub inode_type: u8,\n+    pub name: [u8; 255usize],\n+}\n+#[doc = \"@brief   Directory descriptor.\"]\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_dir {\n+    #[doc = \"@brief   File descriptor.\"]\n+    pub f: ext4_file,\n+    #[doc = \"@brief   Current directory entry.\"]\n+    pub de: ext4_direntry,\n+    #[doc = \"@brief   Next entry offset.\"]\n+    pub next_off: u64,\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Register block device.\\n\\n @param   bd Block device.\\n @param   dev_name Block device name.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_device_register(\n+        bd: *mut ext4_blockdev,\n+        dev_name: *const ::core::ffi::c_char,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Un-register block device.\\n\\n @param   dev_name Block device name.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_device_unregister(dev_name: *const ::core::ffi::c_char) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Un-register all block devices.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_device_unregister_all() -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Mount a block device with EXT4 partition to the mount point.\\n\\n @param   dev_name Block device name (@ref ext4_device_register).\\n @param   mount_point Mount point, for example:\\n          -   /\\n          -   /my_partition/\\n          -   /my_second_partition/\\n @param   read_only mount as read-only mode.\\n\\n @return Standard error code\"]\n+    pub fn ext4_mount(\n+        dev_name: *const ::core::ffi::c_char,\n+        mount_point: *const ::core::ffi::c_char,\n+        read_only: bool,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Umount operation.\\n\\n @param   mount_point Mount point.\\n\\n @return  Standard error code\"]\n+    pub fn ext4_umount(mount_point: *const ::core::ffi::c_char) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Starts journaling. Journaling start/stop functions are transparent\\n          and might be used on filesystems without journaling support.\\n @warning Usage:\\n              ext4_mount(\\\"sda1\\\", \\\"/\\\");\\n              ext4_journal_start(\\\"/\\\");\\n\\n              //File operations here...\\n\\n              ext4_journal_stop(\\\"/\\\");\\n              ext4_umount(\\\"/\\\");\\n @param   mount_point Mount point.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_journal_start(mount_point: *const ::core::ffi::c_char) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Stops journaling. Journaling start/stop functions are transparent\\n          and might be used on filesystems without journaling support.\\n\\n @param   mount_point Mount point name.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_journal_stop(mount_point: *const ::core::ffi::c_char) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Journal recovery.\\n @warning Must be called after @ref ext4_mount.\\n\\n @param   mount_point Mount point.\\n\\n @return Standard error code.\"]\n+    pub fn ext4_recover(mount_point: *const ::core::ffi::c_char) -> ::core::ffi::c_int;\n+}\n+#[doc = \"@brief   Some of the filesystem stats.\"]\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_mount_stats {\n+    pub inodes_count: u32,\n+    pub free_inodes_count: u32,\n+    pub blocks_count: u64,\n+    pub free_blocks_count: u64,\n+    pub block_size: u32,\n+    pub block_group_count: u32,\n+    pub blocks_per_group: u32,\n+    pub inodes_per_group: u32,\n+    pub volume_name: [::core::ffi::c_char; 16usize],\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Get file mount point stats.\\n\\n @param   mount_point Mount point.\\n @param   stats Filesystem stats.\\n\\n @return Standard error code.\"]\n+    pub fn ext4_mount_point_stats(\n+        mount_point: *const ::core::ffi::c_char,\n+        stats: *mut ext4_mount_stats,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Setup OS lock routines.\\n\\n @param   mount_point Mount point.\\n @param   locks  Lock and unlock functions\\n\\n @return Standard error code.\"]\n+    pub fn ext4_mount_setup_locks(\n+        mount_point: *const ::core::ffi::c_char,\n+        locks: *const ext4_lock,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Acquire the filesystem superblock pointer of a mp.\\n\\n @param   mount_point Mount point.\\n @param   sb Superblock handle\\n\\n @return Standard error code.\"]\n+    pub fn ext4_get_sblock(\n+        mount_point: *const ::core::ffi::c_char,\n+        sb: *mut *mut ext4_sblock,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Enable/disable write back cache mode.\\n @warning Default model of cache is write trough. It means that when You do:\\n\\n          ext4_fopen(...);\\n          ext4_fwrite(...);\\n                           < --- data is flushed to physical drive\\n\\n          When you do:\\n          ext4_cache_write_back(..., 1);\\n          ext4_fopen(...);\\n          ext4_fwrite(...);\\n                           < --- data is NOT flushed to physical drive\\n          ext4_cache_write_back(..., 0);\\n                           < --- when write back mode is disabled all\\n                                 cache data will be flushed\\n To enable write back mode permanently just call this function\\n once after ext4_mount (and disable before ext4_umount).\\n\\n Some of the function use write back cache mode internally.\\n If you enable write back mode twice you have to disable it twice\\n to flush all data:\\n\\n      ext4_cache_write_back(..., 1);\\n      ext4_cache_write_back(..., 1);\\n\\n      ext4_cache_write_back(..., 0);\\n      ext4_cache_write_back(..., 0);\\n\\n Write back mode is useful when you want to create a lot of empty\\n files/directories.\\n\\n @param   path Mount point.\\n @param   on Enable/disable cache writeback mode.\\n\\n @return Standard error code.\"]\n+    pub fn ext4_cache_write_back(path: *const ::core::ffi::c_char, on: bool) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Force cache flush.\\n\\n @param   path Mount point.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_cache_flush(path: *const ::core::ffi::c_char) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Remove file by path.\\n\\n @param   path Path to file.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_fremove(path: *const ::core::ffi::c_char) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Create a hardlink for a file.\\n\\n @param   path Path to file.\\n @param   hardlink_path Path of hardlink.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_flink(\n+        path: *const ::core::ffi::c_char,\n+        hardlink_path: *const ::core::ffi::c_char,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Rename file.\\n @param path Source.\\n @param new_path Destination.\\n @return  Standard error code.\"]\n+    pub fn ext4_frename(\n+        path: *const ::core::ffi::c_char,\n+        new_path: *const ::core::ffi::c_char,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   File open function.\\n\\n @param   file  File handle.\\n @param   path  File path, has to start from mount point:/my_partition/file.\\n @param   flags File open flags.\\n  |---------------------------------------------------------------|\\n  |   r or rb                 O_RDONLY                            |\\n  |---------------------------------------------------------------|\\n  |   w or wb                 O_WRONLY|O_CREAT|O_TRUNC            |\\n  |---------------------------------------------------------------|\\n  |   a or ab                 O_WRONLY|O_CREAT|O_APPEND           |\\n  |---------------------------------------------------------------|\\n  |   r+ or rb+ or r+b        O_RDWR                              |\\n  |---------------------------------------------------------------|\\n  |   w+ or wb+ or w+b        O_RDWR|O_CREAT|O_TRUNC              |\\n  |---------------------------------------------------------------|\\n  |   a+ or ab+ or a+b        O_RDWR|O_CREAT|O_APPEND             |\\n  |---------------------------------------------------------------|\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_fopen(\n+        file: *mut ext4_file,\n+        path: *const ::core::ffi::c_char,\n+        flags: *const ::core::ffi::c_char,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Alternate file open function.\\n\\n @param   file  File handle.\\n @param   path  File path, has to start from mount point:/my_partition/file.\\n @param   flags File open flags.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_fopen2(\n+        file: *mut ext4_file,\n+        path: *const ::core::ffi::c_char,\n+        flags: ::core::ffi::c_int,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   File close function.\\n\\n @param   file File handle.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_fclose(file: *mut ext4_file) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   File truncate function.\\n\\n @param   file File handle.\\n @param   size New file size.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_ftruncate(file: *mut ext4_file, size: u64) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Read data from file.\\n\\n @param   file File handle.\\n @param   buf  Output buffer.\\n @param   size Bytes to read.\\n @param   rcnt Bytes read (NULL allowed).\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_fread(\n+        file: *mut ext4_file,\n+        buf: *mut ::core::ffi::c_void,\n+        size: usize,\n+        rcnt: *mut usize,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Write data to file.\\n\\n @param   file File handle.\\n @param   buf  Data to write\\n @param   size Write length..\\n @param   wcnt Bytes written (NULL allowed).\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_fwrite(\n+        file: *mut ext4_file,\n+        buf: *const ::core::ffi::c_void,\n+        size: usize,\n+        wcnt: *mut usize,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   File seek operation.\\n\\n @param   file File handle.\\n @param   offset Offset to seek.\\n @param   origin Seek type:\\n              @ref SEEK_SET\\n              @ref SEEK_CUR\\n              @ref SEEK_END\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_fseek(file: *mut ext4_file, offset: i64, origin: u32) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Get file position.\\n\\n @param   file File handle.\\n\\n @return  Actual file position\"]\n+    pub fn ext4_ftell(file: *mut ext4_file) -> u64;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Get file size.\\n\\n @param   file File handle.\\n\\n @return  File size.\"]\n+    pub fn ext4_fsize(file: *mut ext4_file) -> u64;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Get inode of file/directory/link.\\n\\n @param path    Parh to file/dir/link.\\n @param ret_ino Inode number.\\n @param inode   Inode internals.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_raw_inode_fill(\n+        path: *const ::core::ffi::c_char,\n+        ret_ino: *mut u32,\n+        inode: *mut ext4_inode,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Check if inode exists.\\n\\n @param path    Parh to file/dir/link.\\n @param type    Inode type.\\n                @ref EXT4_DIRENTRY_UNKNOWN\\n                @ref EXT4_DE_REG_FILE\\n                @ref EXT4_DE_DIR\\n                @ref EXT4_DE_CHRDEV\\n                @ref EXT4_DE_BLKDEV\\n                @ref EXT4_DE_FIFO\\n                @ref EXT4_DE_SOCK\\n                @ref EXT4_DE_SYMLINK\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_inode_exist(\n+        path: *const ::core::ffi::c_char,\n+        type_: ::core::ffi::c_int,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Change file/directory/link mode bits.\\n\\n @param path Path to file/dir/link.\\n @param mode New mode bits (for example 0777).\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_mode_set(path: *const ::core::ffi::c_char, mode: u32) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Get file/directory/link mode bits.\\n\\n @param path Path to file/dir/link.\\n @param mode New mode bits (for example 0777).\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_mode_get(path: *const ::core::ffi::c_char, mode: *mut u32) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Change file owner and group.\\n\\n @param path Path to file/dir/link.\\n @param uid  User id.\\n @param gid  Group id.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_owner_set(\n+        path: *const ::core::ffi::c_char,\n+        uid: u32,\n+        gid: u32,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Get file/directory/link owner and group.\\n\\n @param path Path to file/dir/link.\\n @param uid  User id.\\n @param gid  Group id.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_owner_get(\n+        path: *const ::core::ffi::c_char,\n+        uid: *mut u32,\n+        gid: *mut u32,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Set file/directory/link access time.\\n\\n @param path  Path to file/dir/link.\\n @param atime Access timestamp.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_atime_set(path: *const ::core::ffi::c_char, atime: u32) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Set file/directory/link modify time.\\n\\n @param path  Path to file/dir/link.\\n @param mtime Modify timestamp.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_mtime_set(path: *const ::core::ffi::c_char, mtime: u32) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Set file/directory/link change time.\\n\\n @param path  Path to file/dir/link.\\n @param ctime Change timestamp.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_ctime_set(path: *const ::core::ffi::c_char, ctime: u32) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Get file/directory/link access time.\\n\\n @param path  Path to file/dir/link.\\n @param atime Access timestamp.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_atime_get(path: *const ::core::ffi::c_char, atime: *mut u32) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Get file/directory/link modify time.\\n\\n @param path  Path to file/dir/link.\\n @param mtime Modify timestamp.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_mtime_get(path: *const ::core::ffi::c_char, mtime: *mut u32) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Get file/directory/link change time.\\n\\n @param path  Pathto file/dir/link.\\n @param ctime Change timestamp.\\n\\n @return  standard error code\"]\n+    pub fn ext4_ctime_get(path: *const ::core::ffi::c_char, ctime: *mut u32) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Create symbolic link.\\n\\n @param target Destination entry path.\\n @param path   Source entry path.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_fsymlink(\n+        target: *const ::core::ffi::c_char,\n+        path: *const ::core::ffi::c_char,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Create special file.\\n @param path     Path to new special file.\\n @param filetype Filetype of the new special file.\\n \\t           (that must not be regular file, directory, or unknown type)\\n @param dev      If filetype is char device or block device,\\n \\t           the device number will become the payload in the inode.\\n @return  Standard error code.\"]\n+    pub fn ext4_mknod(\n+        path: *const ::core::ffi::c_char,\n+        filetype: ::core::ffi::c_int,\n+        dev: u32,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Read symbolic link payload.\\n\\n @param path    Path to symlink.\\n @param buf     Output buffer.\\n @param bufsize Output buffer max size.\\n @param rcnt    Bytes read.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_readlink(\n+        path: *const ::core::ffi::c_char,\n+        buf: *mut ::core::ffi::c_char,\n+        bufsize: usize,\n+        rcnt: *mut usize,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Set extended attribute.\\n\\n @param path      Path to file/directory\\n @param name      Name of the entry to add.\\n @param name_len  Length of @name in bytes.\\n @param data      Data of the entry to add.\\n @param data_size Size of data to add.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_setxattr(\n+        path: *const ::core::ffi::c_char,\n+        name: *const ::core::ffi::c_char,\n+        name_len: usize,\n+        data: *const ::core::ffi::c_void,\n+        data_size: usize,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Get extended attribute.\\n\\n @param path      Path to file/directory.\\n @param name      Name of the entry to get.\\n @param name_len  Length of @name in bytes.\\n @param buf      Data of the entry to get.\\n @param buf_size Size of data to get.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_getxattr(\n+        path: *const ::core::ffi::c_char,\n+        name: *const ::core::ffi::c_char,\n+        name_len: usize,\n+        buf: *mut ::core::ffi::c_void,\n+        buf_size: usize,\n+        data_size: *mut usize,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief List extended attributes.\\n\\n @param path     Path to file/directory.\\n @param list     List to hold the name of entries.\\n @param size     Size of @list in bytes.\\n @param ret_size Used bytes of @list.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_listxattr(\n+        path: *const ::core::ffi::c_char,\n+        list: *mut ::core::ffi::c_char,\n+        size: usize,\n+        ret_size: *mut usize,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Remove extended attribute.\\n\\n @param path     Path to file/directory.\\n @param name     Name of the entry to remove.\\n @param name_len Length of @name in bytes.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_removexattr(\n+        path: *const ::core::ffi::c_char,\n+        name: *const ::core::ffi::c_char,\n+        name_len: usize,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Recursive directory remove.\\n\\n @param   path Directory path to remove\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_dir_rm(path: *const ::core::ffi::c_char) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Rename/move directory.\\n\\n @param path     Source path.\\n @param new_path Destination path.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_dir_mv(\n+        path: *const ::core::ffi::c_char,\n+        new_path: *const ::core::ffi::c_char,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Create new directory.\\n\\n @param   path Directory name.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_dir_mk(path: *const ::core::ffi::c_char) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Directory open.\\n\\n @param   dir  Directory handle.\\n @param   path Directory path.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_dir_open(\n+        dir: *mut ext4_dir,\n+        path: *const ::core::ffi::c_char,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Directory close.\\n\\n @param   dir directory handle.\\n\\n @return  Standard error code.\"]\n+    pub fn ext4_dir_close(dir: *mut ext4_dir) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Return next directory entry.\\n\\n @param   dir Directory handle.\\n\\n @return  Directory entry id (NULL if no entry)\"]\n+    pub fn ext4_dir_entry_next(dir: *mut ext4_dir) -> *const ext4_direntry;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Rewine directory entry offset.\\n\\n @param   dir Directory handle.\"]\n+    pub fn ext4_dir_entry_rewind(dir: *mut ext4_dir);\n+}\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_fs {\n+    pub read_only: bool,\n+    pub bdev: *mut ext4_blockdev,\n+    pub sb: ext4_sblock,\n+    pub inode_block_limits: [u64; 4usize],\n+    pub inode_blocks_per_level: [u64; 4usize],\n+    pub last_inode_bg_id: u32,\n+    pub jbd_fs: *mut jbd_fs,\n+    pub jbd_journal: *mut jbd_journal,\n+    pub curr_trans: *mut jbd_trans,\n+}\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_block_group_ref {\n+    pub block: ext4_block,\n+    pub block_group: *mut ext4_bgroup,\n+    pub fs: *mut ext4_fs,\n+    pub index: u32,\n+    pub dirty: bool,\n+}\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_inode_ref {\n+    pub block: ext4_block,\n+    pub inode: *mut ext4_inode,\n+    pub fs: *mut ext4_fs,\n+    pub index: u32,\n+    pub dirty: bool,\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Initialize filesystem and read all needed data.\\n @param fs Filesystem instance to be initialized\\n @param bdev Identifier if device with the filesystem\\n @param read_only Mark the filesystem as read-only.\\n @return Error code\"]\n+    pub fn ext4_fs_init(\n+        fs: *mut ext4_fs,\n+        bdev: *mut ext4_blockdev,\n+        read_only: bool,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Destroy filesystem instance (used by unmount operation).\\n @param fs Filesystem to be destroyed\\n @return Error code\"]\n+    pub fn ext4_fs_fini(fs: *mut ext4_fs) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Check filesystem's features, if supported by this driver\\n Function can return EOK and set read_only flag. It mean's that\\n there are some not-supported features, that can cause problems\\n during some write operations.\\n @param fs        Filesystem to be checked\\n @param read_only Flag if filesystem should be mounted only for reading\\n @return Error code\"]\n+    pub fn ext4_fs_check_features(fs: *mut ext4_fs, read_only: *mut bool) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Get reference to block group specified by index.\\n @param fs   Filesystem to find block group on\\n @param bgid Index of block group to load\\n @param ref  Output pointer for reference\\n @return Error code\"]\n+    pub fn ext4_fs_get_block_group_ref(\n+        fs: *mut ext4_fs,\n+        bgid: u32,\n+        ref_: *mut ext4_block_group_ref,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Put reference to block group.\\n @param ref Pointer for reference to be put back\\n @return Error code\"]\n+    pub fn ext4_fs_put_block_group_ref(ref_: *mut ext4_block_group_ref) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Get reference to i-node specified by index.\\n @param fs    Filesystem to find i-node on\\n @param index Index of i-node to load\\n @param ref   Output pointer for reference\\n @return Error code\"]\n+    pub fn ext4_fs_get_inode_ref(\n+        fs: *mut ext4_fs,\n+        index: u32,\n+        ref_: *mut ext4_inode_ref,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Reset blocks field of i-node.\\n @param fs        Filesystem to reset blocks field of i-inode on\\n @param inode_ref ref Pointer for inode to be operated on\"]\n+    pub fn ext4_fs_inode_blocks_init(fs: *mut ext4_fs, inode_ref: *mut ext4_inode_ref);\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Put reference to i-node.\\n @param ref Pointer for reference to be put back\\n @return Error code\"]\n+    pub fn ext4_fs_put_inode_ref(ref_: *mut ext4_inode_ref) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Convert filetype to inode mode.\\n @param filetype File type\\n @return inode mode\"]\n+    pub fn ext4_fs_correspond_inode_mode(filetype: ::core::ffi::c_int) -> u32;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Allocate new i-node in the filesystem.\\n @param fs        Filesystem to allocated i-node on\\n @param inode_ref Output pointer to return reference to allocated i-node\\n @param filetype  File type of newly created i-node\\n @return Error code\"]\n+    pub fn ext4_fs_alloc_inode(\n+        fs: *mut ext4_fs,\n+        inode_ref: *mut ext4_inode_ref,\n+        filetype: ::core::ffi::c_int,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Release i-node and mark it as free.\\n @param inode_ref I-node to be released\\n @return Error code\"]\n+    pub fn ext4_fs_free_inode(inode_ref: *mut ext4_inode_ref) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Truncate i-node data blocks.\\n @param inode_ref I-node to be truncated\\n @param new_size  New size of inode (must be < current size)\\n @return Error code\"]\n+    pub fn ext4_fs_truncate_inode(\n+        inode_ref: *mut ext4_inode_ref,\n+        new_size: u64,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Compute 'goal' for inode index\\n @param inode_ref Reference to inode, to allocate block for\\n @return goal\"]\n+    pub fn ext4_fs_inode_to_goal_block(inode_ref: *mut ext4_inode_ref) -> ext4_fsblk_t;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Compute 'goal' for allocation algorithm (For blockmap).\\n @param inode_ref Reference to inode, to allocate block for\\n @return error code\"]\n+    pub fn ext4_fs_indirect_find_goal(\n+        inode_ref: *mut ext4_inode_ref,\n+        goal: *mut ext4_fsblk_t,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Get physical block address by logical index of the block.\\n @param inode_ref I-node to read block address from\\n @param iblock            Logical index of block\\n @param fblock            Output pointer for return physical\\n                          block address\\n @param support_unwritten Indicate whether unwritten block range\\n                          is supported under the current context\\n @return Error code\"]\n+    pub fn ext4_fs_get_inode_dblk_idx(\n+        inode_ref: *mut ext4_inode_ref,\n+        iblock: ext4_lblk_t,\n+        fblock: *mut ext4_fsblk_t,\n+        support_unwritten: bool,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Initialize a part of unwritten range of the inode.\\n @param inode_ref I-node to proceed on.\\n @param iblock    Logical index of block\\n @param fblock    Output pointer for return physical block address\\n @return Error code\"]\n+    pub fn ext4_fs_init_inode_dblk_idx(\n+        inode_ref: *mut ext4_inode_ref,\n+        iblock: ext4_lblk_t,\n+        fblock: *mut ext4_fsblk_t,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief Append following logical block to the i-node.\\n @param inode_ref I-node to append block to\\n @param fblock    Output physical block address of newly allocated block\\n @param iblock    Output logical number of newly allocated block\\n @return Error code\"]\n+    pub fn ext4_fs_append_inode_dblk(\n+        inode_ref: *mut ext4_inode_ref,\n+        fblock: *mut ext4_fsblk_t,\n+        iblock: *mut ext4_lblk_t,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Increment inode link count.\\n @param   inode_ref none handle\"]\n+    pub fn ext4_fs_inode_links_count_inc(inode_ref: *mut ext4_inode_ref);\n+}\n+extern \"C\" {\n+    #[doc = \"@brief   Decrement inode link count.\\n @param   inode_ref none handle\"]\n+    pub fn ext4_fs_inode_links_count_dec(inode_ref: *mut ext4_inode_ref);\n+}\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_mkfs_info {\n+    pub len: u64,\n+    pub block_size: u32,\n+    pub blocks_per_group: u32,\n+    pub inodes_per_group: u32,\n+    pub inode_size: u32,\n+    pub inodes: u32,\n+    pub journal_blocks: u32,\n+    pub feat_ro_compat: u32,\n+    pub feat_compat: u32,\n+    pub feat_incompat: u32,\n+    pub bg_desc_reserve_blocks: u32,\n+    pub dsc_size: u16,\n+    pub uuid: [u8; 16usize],\n+    pub journal: bool,\n+    pub label: *const ::core::ffi::c_char,\n+}\n+extern \"C\" {\n+    pub fn ext4_mkfs_read_info(\n+        bd: *mut ext4_blockdev,\n+        info: *mut ext4_mkfs_info,\n+    ) -> ::core::ffi::c_int;\n+}\n+extern \"C\" {\n+    pub fn ext4_mkfs(\n+        fs: *mut ext4_fs,\n+        bd: *mut ext4_blockdev,\n+        info: *mut ext4_mkfs_info,\n+        fs_type: ::core::ffi::c_int,\n+    ) -> ::core::ffi::c_int;\n+}\n+#[doc = \"@brief   Mount point descriptor.\"]\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct ext4_mountpoint {\n+    #[doc = \"@brief   Mount done flag.\"]\n+    pub mounted: bool,\n+    #[doc = \"@brief   Mount point name (@ref ext4_mount)\"]\n+    pub name: [::core::ffi::c_char; 33usize],\n+    #[doc = \"@brief   OS dependent lock/unlock functions.\"]\n+    pub os_locks: *const ext4_lock,\n+    #[doc = \"@brief   Ext4 filesystem internals.\"]\n+    pub fs: ext4_fs,\n+}\n+pub type __builtin_va_list = [__va_list_tag; 1usize];\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct __va_list_tag {\n+    pub gp_offset: ::core::ffi::c_uint,\n+    pub fp_offset: ::core::ffi::c_uint,\n+    pub overflow_arg_area: *mut ::core::ffi::c_void,\n+    pub reg_save_area: *mut ::core::ffi::c_void,\n+}\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct jbd_fs {\n+    pub _address: u8,\n+}\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct jbd_journal {\n+    pub _address: u8,\n+}\n+#[repr(C)]\n+#[derive(Debug, Copy, Clone)]\n+pub struct jbd_trans {\n+    pub _address: u8,\n+}\n+\n"]}}]},{"user":"kern-crates","repo":"percpu","pkg":"percpu","count":10,"raw_reports":[{"file":"tests/test_percpu.rs","count":7,"kinds":{"Mirai":["warning: Inline assembly code cannot be analyzed by MIRAI.\n --> tests/test_percpu.rs:7:1\n  |\n7 | #[def_percpu]\n  | ^^^^^^^^^^^^^\n  |\n  = note: this warning originates in the attribute macro `def_percpu` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: Inline assembly code cannot be analyzed by MIRAI.\n  --> tests/test_percpu.rs:10:1\n   |\n10 | #[def_percpu]\n   | ^^^^^^^^^^^^^\n   |\n   = note: this warning originates in the attribute macro `def_percpu` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: Inline assembly code cannot be analyzed by MIRAI.\n  --> tests/test_percpu.rs:13:1\n   |\n13 | #[def_percpu]\n   | ^^^^^^^^^^^^^\n   |\n   = note: this warning originates in the attribute macro `def_percpu` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: Inline assembly code cannot be analyzed by MIRAI.\n  --> tests/test_percpu.rs:16:1\n   |\n16 | #[def_percpu]\n   | ^^^^^^^^^^^^^\n   |\n   = note: this warning originates in the attribute macro `def_percpu` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: Inline assembly code cannot be analyzed by MIRAI.\n  --> tests/test_percpu.rs:19:1\n   |\n19 | #[def_percpu]\n   | ^^^^^^^^^^^^^\n   |\n   = note: this warning originates in the attribute macro `def_percpu` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: Inline assembly code cannot be analyzed by MIRAI.\n  --> tests/test_percpu.rs:22:1\n   |\n22 | #[def_percpu]\n   | ^^^^^^^^^^^^^\n   |\n   = note: this warning originates in the attribute macro `def_percpu` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: Inline assembly code cannot be analyzed by MIRAI.\n  --> tests/test_percpu.rs:30:1\n   |\n30 | #[def_percpu]\n   | ^^^^^^^^^^^^^\n   |\n   = note: this warning originates in the attribute macro `def_percpu` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"src/imp.rs","count":3,"kinds":{"Mirai":["warning: Inline assembly code cannot be analyzed by MIRAI.\n  --> src/imp.rs:17:5\n   |\n17 |     percpu_symbol_offset!(_percpu_load_end) - percpu_symbol_offset!(_percpu_load_start)\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: this warning originates in the macro `percpu_symbol_offset` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: Inline assembly code cannot be analyzed by MIRAI.\n   --> src/imp.rs:95:21\n    |\n95  | /                     core::arch::asm!(\n96  | |                         \"syscall\",\n97  | |                         in(\"eax\") SYS_ARCH_PRCTL,\n98  | |                         in(\"edi\") ARCH_SET_GS,\n99  | |                         in(\"rsi\") tp,\n100 | |                     );\n    | |_____________________^\n\n","warning: Inline assembly code cannot be analyzed by MIRAI.\n   --> src/imp.rs:124:1\n    |\n124 | #[percpu_macros::def_percpu]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the attribute macro `percpu_macros::def_percpu` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}}]},{"user":"kern-crates","repo":"tracer","pkg":"tracer","count":9,"raw_reports":[{"file":"src/dwarf/unwinder.rs","count":4,"kinds":{"Clippy(Warn)":["warning: field `0` is never read\n  --> src/dwarf/unwinder.rs:99:24\n   |\n99 |     UnexpectedRegister(Register),\n   |     ------------------ ^^^^^^^^\n   |     |\n   |     field in this variant\n   |\n   = note: `UnwinderError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\nhelp: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field\n   |\n99 |     UnexpectedRegister(()),\n   |                        ~~\n\n","warning: field `0` is never read\n   --> src/dwarf/unwinder.rs:101:28\n    |\n101 |     CfaRuleUnknownRegister(Register),\n    |     ---------------------- ^^^^^^^^\n    |     |\n    |     field in this variant\n    |\n    = note: `UnwinderError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\nhelp: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field\n    |\n101 |     CfaRuleUnknownRegister(()),\n    |                            ~~\n\n"],"Unformatted":["file: /home/runner/check/batch_11/kern-crates/tracer/src/dwarf/unwinder.rs (original lines from 2 to 2)\n+use crate::utils::read_value;\n","file: /home/runner/check/batch_11/kern-crates/tracer/src/dwarf/unwinder.rs (original lines from 13 to 13)\n-use crate::utils::read_value;\n"]}},{"file":"src/compiler.rs","count":2,"kinds":{"Clippy(Warn)":["warning: unneeded `return` statement\n   --> src/compiler.rs:97:5\n    |\n97  | /     return match opcode {\n98  | |         0b0100011 => {\n99  | |             // 四字节的sd指令\n100 | |             let func = ins.get_bits(12..=14);\n...   |\n138 | |         }\n139 | |     };\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n97  ~     match opcode {\n98  +         0b0100011 => {\n99  ~             // 四字节的sd指令\n100 +             let func = ins.get_bits(12..=14);\n101 +             if func != 0b011 {\n102 +                 return None;\n103 +             }\n104 +             let rd = ins.get_bits(15..=19); // sp\n105 +             let rt = ins.get_bits(20..=24); // ra\n106 +             if rd != 2 || rt != 1 {\n107 +                 return None;\n108 +             }\n109 +             let mut imm = 0u32;\n110 +             imm.set_bits(0..=4, ins.get_bits(7..=11));\n111 +             imm.set_bits(5..=11, ins.get_bits(25..=31));\n112 +             for i in 12..32 {\n113 +                 imm.set_bit(i, imm.get_bit(11));\n114 +             }\n115 +             let imm = imm as isize;\n116 +             if imm > 0 {\n117 +                 Some(imm as u32)\n118 +             } else {\n119 +                 None\n120 +             }\n121 +         }\n122 +         _ => {\n123 ~             // 2字节的sd指令\n124 +             // c.sdsp\n125 +             // 111 [uimm5:3 8:6] rt 10\n126 +             let short_ins = ins.get_bits(0..16);\n127 +             let high = short_ins.get_bits(13..16);\n128 +             let low = short_ins.get_bits(0..2);\n129 +             match (high, low) {\n130 +                 (0b111, 0b10) => {\n131 +                     let mut imm = 0u32;\n132 +                     imm.set_bits(3..6, short_ins.get_bits(10..13));\n133 +                     imm.set_bits(6..9, short_ins.get_bits(7..10));\n134 +                     Some(imm)\n135 +                 }\n136 +                 (_, _) => None,\n137 +             }\n138 +         }\n139 ~     }\n    |\n\n","warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n   --> src/compiler.rs:253:17\n    |\n253 | /                 match ins {\n254 | |                     InstructionSp::Addi(x) => {\n255 | |                         stack_size += x;\n256 | |                     }\n257 | |                     _ => {}\n258 | |                 }\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n    = note: `#[warn(clippy::single_match)]` on by default\nhelp: try\n    |\n253 ~                 if let InstructionSp::Addi(x) = ins {\n254 +                     stack_size += x;\n255 +                 }\n    |\n\n"]}},{"file":"src/lib.rs","count":2,"kinds":{"Mirai":["warning: the feature `return_position_impl_trait_in_trait` has been stable since 1.75.0 and no longer requires an attribute to enable\n --> src/lib.rs:1:12\n  |\n1 | #![feature(return_position_impl_trait_in_trait)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"],"Clippy(Warn)":["warning: the feature `return_position_impl_trait_in_trait` has been stable since 1.75.0 and no longer requires an attribute to enable\n --> src/lib.rs:1:12\n  |\n1 | #![feature(return_position_impl_trait_in_trait)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T01:59:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:59:24Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"rCoreloongArch","pkg":"user_lib","count":9,"raw_reports":[{"file":"user/src/syscall.rs","count":2,"kinds":{"Mirai":["warning: sys_exit called\n  --> user/src/syscall.rs:51:5\n   |\n51 |     panic!(\"sys_exit called\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: sys_exit called\n  --> user/src/syscall.rs:51:5\n   |\n51 |     panic!(\"sys_exit called\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"user/src/thread/mod.rs","count":2,"kinds":{"Mirai":["warning: sys_exit called\n  --> user/src/thread/mod.rs:22:5\n   |\n22 |     sys_exit(exit_code);\n   |     ^^^^^^^^^^^^^^^^^^^\n   |\nnote: related location\n  --> user/src/syscall.rs:51:5\n   |\n51 |     panic!(\"sys_exit called\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: sys_exit called\n  --> user/src/thread/mod.rs:22:5\n   |\n22 |     sys_exit(exit_code);\n   |     ^^^^^^^^^^^^^^^^^^^\n   |\nnote: related location\n  --> user/src/syscall.rs:51:5\n   |\n51 |     panic!(\"sys_exit called\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-1.3.2/src/lib.rs","count":1,"kinds":{"Clippy(Error)":["error: &-masking with zero\n  --> user/src/fs/mod.rs:3:1\n   |\n3  | / bitflags! {\n4  | |     pub struct OpenFlags: u32 {\n5  | |         const RDONLY = 0;\n6  | |         const WRONLY = 1 << 0;\n...  |\n10 | |     }\n11 | | }\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n   = note: `#[deny(clippy::bad_bit_mask)]` on by default\n   = note: this error originates in the macro `__impl_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=user_lib, checker=Clippy\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/kern-crates/rCoreloongArch/user\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling user_lib v0.1.0 (/home/runner/check/repos-default/kern-crates/rCoreloongArch/user)\nerror: could not compile `user_lib` (lib) due to 2 previous errors\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=user_lib, checker=Lockbud\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/kern-crates/rCoreloongArch/user\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling user_lib v0.1.0 (/home/runner/check/repos-default/kern-crates/rCoreloongArch/user)\nerror: unknown token in expression\n  |\nnote: instantiated into assembly here\n --> <inline asm>:7:1\n  |\n7 |     move $t0,$a0\n  | ^\n\nerror: unknown token in expression\n  |\nnote: instantiated into assembly here\n --> <inline asm>:8:2\n  |\n8 |     move $t1,$a1\n  |  ^\n\nerror: unknown token in expression\n  |\nnote: instantiated into assembly here\n --> <inline asm>:9:3\n  |\n9 |     move $t2,$a2\n  |   ^\n\nerror: unknown token in expression\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:10:4\n   |\n10 |     move $t3,$a3\n   |    ^\n\nerror: unknown token in expression\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:11:5\n   |\n11 |     move $a7, $t0\n   |     ^\n\nerror: unknown token in expression\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:12:6\n   |\n12 |     move $a0, $t1\n   |      ^\n\nerror: unknown token in expression\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:13:7\n   |\n13 |     move $a1, $t2\n   |       ^\n\nerror: unknown token in expression\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:14:8\n   |\n14 |     move $a2, $t3\n   |        ^\n\nerror: invalid operand for instruction\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:15:4\n   |\n15 |     syscall 0\n   |    ^\n\nerror: unknown token in expression\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:16:8\n   |\n16 |     jr $ra\n   |        ^\n\nerror: could not compile `user_lib` (lib) due to 10 previous errors\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=user_lib, checker=Mirai\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/rCoreloongArch/user\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling user_lib v0.1.0 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/user)\n    Finished dev [unoptimized + debuginfo] target(s) in 2.03s\n    Checking user_lib v0.1.0 (/home/runner/check/batch_9/kern-crates/rCoreloongArch/user)\nerror: could not compile `user_lib` (bin \"race_adder_mutex_blocking\") due to 2 previous errors\n"]}},{"file":"unkonwn-but-maybe-important","count":1,"kinds":{"Mirai":["error: language item required, but not found: `eh_personality`\n  |\n  = note: this can occur when a binary crate with `#![no_std]` is compiled for a target where `eh_personality` is defined in the standard library\n  = help: you may be able to compile for a target that doesn't need `eh_personality`, specify a target with `--target` or in `.cargo/config`\n\n"]}}]},{"user":"kern-crates","repo":"axprocess","pkg":"axprocess","count":8,"raw_reports":[{"file":"src/api.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_4/kern-crates/axprocess/src/api.rs (original lines from 22 to 22)\n-use axtask::{current, yield_now, AxTaskRef, CurrentTask, TaskId, TaskState,current_processor};\n+use axtask::{current, current_processor, yield_now, AxTaskRef, CurrentTask, TaskId, TaskState};\n","file: /home/runner/check/batch_4/kern-crates/axprocess/src/api.rs (original lines from 46 to 47)\n-    kernel_process.tasks.lock().push(Arc::clone(\n-        current_processor().idle_task()));\n+    kernel_process\n+        .tasks\n+        .lock()\n+        .push(Arc::clone(current_processor().idle_task()));\n"]}},{"file":"/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs","count":1,"kinds":{"Clippy(Error)":["error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axprocess, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axprocess\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/axalloc.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating git repository `https://github.com/Starry-OS/axfs.git`\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating git repository `https://github.com/Starry-OS/axio.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/axmem.git`\n    Updating git repository `https://github.com/Starry-OS/axsignal.git`\n    Updating git repository `https://github.com/Starry-OS/axsync.git`\n    Updating git repository `https://github.com/Starry-OS/axtask.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/elf_parser.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/allocator.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/axdriver.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_devfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_ramfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_vfs.git`\n    Updating git repository `https://github.com/Starry-OS/capability.git`\n    Updating git repository `https://github.com/Starry-OS/driver_block.git`\n    Updating git repository `https://github.com/rafalh/rust-fatfs`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/kern-crates/axbacktrace.git`\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n    Updating git repository `https://github.com/Starry-OS/scheduler.git`\n    Updating git repository `https://github.com/Starry-OS/timer_list.git`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n    Updating git repository `https://github.com/Starry-OS/driver_common.git`\n    Updating git repository `https://github.com/Starry-OS/driver_pci.git`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n     Locking 108 packages to latest compatible versions\n      Adding riscv v0.10.1 (available: v0.11.1)\n    Checking log v0.4.22\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n    Checking bit_field v0.10.2\n    Checking bitflags v2.6.0\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling quote v1.0.37\n   Compiling indexmap v2.5.0\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.79\n    Checking bitflags v1.3.2\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n   Compiling rustversion v1.0.17\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling x86 v0.52.0\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking volatile v0.4.6\n   Compiling syn v1.0.109\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling libc v0.2.159\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axprocess, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axprocess\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling log v0.4.22\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling bit_field v0.10.2\n   Compiling serde v1.0.210\n[2024-10-01T01:58:20Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:58:20Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bitflags v2.6.0\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling quote v1.0.37\n   Compiling indexmap v2.5.0\n   Compiling cfg-if v1.0.0\n   Compiling syn v2.0.79\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling bitflags v1.3.2\n   Compiling raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\n   Compiling x86 v0.52.0\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling volatile v0.4.6\n   Compiling syn v1.0.109\n   Compiling spin v0.9.8\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling static_assertions v1.1.0\n   Compiling libc v0.2.159\n   Compiling base64 v0.13.1\n   Compiling tock-registers v0.8.1\n   Compiling unicode-width v0.1.14\n   Compiling aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=axprocess, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axprocess\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking log v0.4.22\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n    Checking bit_field v0.10.2\n   Compiling serde v1.0.210\n    Checking bitflags v2.6.0\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.5.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.79\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling rustversion v1.0.17\n   Compiling x86 v0.52.0\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_4/kern-crates/axprocess/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T01:58:20Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:58:20Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/process.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_4/kern-crates/axprocess/src/process.rs (original lines from 19 to 19)\n-use axtask::{current, new_task, AxTaskRef, TaskId, Processor};\n+use axtask::{current, new_task, AxTaskRef, Processor, TaskId};\n"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-net-adin1110","count":8,"raw_reports":[{"file":"src/regs.rs","count":4,"kinds":{"Clippy(Warn)":["warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n","warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n","warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"]}},{"file":"src/lib.rs","count":3,"kinds":{"Clippy(Error)":["error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n","error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"],"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-task v0.3.30\n    Checking pin-utils v0.1.0\n    Checking critical-section v1.1.3\n    Checking futures-core v0.3.30\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n    Checking embedded-hal v1.0.0\n    Checking nb v1.1.0\n    Checking futures-util v0.3.30\n    Checking hash32 v0.3.1\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n    Checking nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking void v1.0.2\n   Compiling embedded-hal-bus v0.1.0\n    Checking embedded-hal v0.2.7\n    Checking embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking bitfield v0.14.0\n    Checking embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-usb","count":8,"raw_reports":[{"file":"src/msos.rs","count":4,"kinds":{"Clippy(Warn)":["warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n","warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"],"Mirai":["warning: possible attempt to add with overflow\n   --> src/msos.rs:523:67\n    |\n523 |                 core::mem::size_of::<u16>() * (val.iter().map(|x| x.encode_utf16().count() + 1).sum::<usize>() + 1)\n    |                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: possible attempt to add with overflow\n   --> src/msos.rs:538:21\n    |\n538 |                     pos += write_utf16(s, &mut buf[pos..]);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"src/lib.rs","count":2,"kinds":{"Clippy(Warn)":["warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n","warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-09-29T05:11:54Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:11:54Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/class/cdc_ncm/embassy_net.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"]}}]},{"user":"yuoo655","repo":"ext4libtest","pkg":"ext4libtest","count":8,"raw_reports":[{"file":"src/lib.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_14/yuoo655/ext4libtest/src/lib.rs (original lines from 151 to 151)\n-\n","file: /home/runner/check/batch_14/yuoo655/ext4libtest/src/lib.rs (original lines from 157 to 157)\n-        \n"]}},{"file":"src/main.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_14/yuoo655/ext4libtest/src/main.rs (original lines from 558 to 558)\n-\n","file: /home/runner/check/batch_14/yuoo655/ext4libtest/src/main.rs (original lines from 566 to 573)\n-        let inode_ref = self.ext4.fuse_mkdir_with_attr(\n-            parent,\n-            name.to_str().unwrap(),\n-            mode,\n-            umask,\n-            _req.uid(),\n-            _req.gid(),\n-        ).unwrap();\n+        let inode_ref = self\n+            .ext4\n+            .fuse_mkdir_with_attr(\n+                parent,\n+                name.to_str().unwrap(),\n+                mode,\n+                umask,\n+                _req.uid(),\n+                _req.gid(),\n+            )\n+            .unwrap();\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=ext4libtest, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_14/yuoo655/ext4libtest\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/yuoo655/ext4_rs.git`\n    Updating git repository `https://github.com/cberner/fuser.git`\n    Updating git repository `https://github.com/yuoo655/jbd2_rs.git`\n    Updating crates.io index\n Downloading crates ...\n  Downloaded cfg_aliases v0.1.1\n  Downloaded page_size v0.6.0\n  Downloaded proc-macro2 v1.0.85\n  Downloaded syn v2.0.66\n  Downloaded pkg-config v0.3.30\n  Downloaded libc v0.2.155\n  Downloaded nix v0.28.0\n   Compiling proc-macro2 v1.0.85\n   Compiling unicode-ident v1.0.12\n   Compiling libc v0.2.155\n   Compiling cfg_aliases v0.1.1\n   Compiling nix v0.28.0\n   Compiling pkg-config v0.3.30\n    Checking bitflags v2.5.0\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n    Checking byteorder v1.5.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.66\n   Compiling fuser v0.14.0 (https://github.com/cberner/fuser.git#99aa5280)\n    Checking smallvec v1.13.2\nerror: failed to run custom build command for `fuser v0.14.0 (https://github.com/cberner/fuser.git#99aa5280)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_14/yuoo655/ext4libtest/target/debug/build/fuser-9a80437d38652e43/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-env-changed=FUSE3_NO_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG\n  cargo:rerun-if-env-changed=FUSE3_STATIC\n  cargo:rerun-if-env-changed=FUSE3_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_STATIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_SYSROOT_DIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR\n  cargo:rerun-if-env-changed=FUSE_NO_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG\n  cargo:rerun-if-env-changed=FUSE_STATIC\n  cargo:rerun-if-env-changed=FUSE_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_STATIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_SYSROOT_DIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR\n\n  --- stderr\n\n  pkg-config exited with status code 1\n  > PKG_CONFIG_ALLOW_SYSTEM_LIBS=1 PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1 pkg-config --libs --cflags fuse3 fuse3 >= 3.0.0\n\n  The system library `fuse3` required by crate `fuser` was not found.\n  The file `fuse3.pc` needs to be installed and the PKG_CONFIG_PATH environment variable must contain its parent directory.\n  The PKG_CONFIG_PATH environment variable is not set.\n\n  HINT: if you have installed the library, try setting PKG_CONFIG_PATH to the directory containing `fuse3.pc`.\n\n\n  pkg-config exited with status code 1\n  > PKG_CONFIG_ALLOW_SYSTEM_LIBS=1 PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1 pkg-config --libs --cflags fuse fuse >= 2.6.0\n\n  The system library `fuse` required by crate `fuser` was not found.\n  The file `fuse.pc` needs to be installed and the PKG_CONFIG_PATH environment variable must contain its parent directory.\n  The PKG_CONFIG_PATH environment variable is not set.\n\n  HINT: if you have installed the library, try setting PKG_CONFIG_PATH to the directory containing `fuse.pc`.\n\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/fuser-379f3f6b680d6b6e/99aa528/build.rs:41:22:\n  called `Result::unwrap()` on an `Err` value: ()\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=ext4libtest, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_14/yuoo655/ext4libtest\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling proc-macro2 v1.0.85\n   Compiling unicode-ident v1.0.12\n   Compiling libc v0.2.155\n   Compiling cfg_aliases v0.1.1\n   Compiling nix v0.28.0\n   Compiling pkg-config v0.3.30\n   Compiling log v0.4.21\n[2024-10-01T02:06:34Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:06:34Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bitflags v2.5.0\n   Compiling cfg-if v1.0.0\n   Compiling byteorder v1.5.0\n   Compiling quote v1.0.36\n   Compiling fuser v0.14.0 (https://github.com/cberner/fuser.git#99aa5280)\n   Compiling syn v2.0.66\nerror: failed to run custom build command for `fuser v0.14.0 (https://github.com/cberner/fuser.git#99aa5280)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_14/yuoo655/ext4libtest/target/debug/build/fuser-9a80437d38652e43/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-env-changed=FUSE3_NO_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG\n  cargo:rerun-if-env-changed=FUSE3_STATIC\n  cargo:rerun-if-env-changed=FUSE3_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_STATIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_SYSROOT_DIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR\n  cargo:rerun-if-env-changed=FUSE_NO_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG\n  cargo:rerun-if-env-changed=FUSE_STATIC\n  cargo:rerun-if-env-changed=FUSE_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_STATIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_SYSROOT_DIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR\n\n  --- stderr\n\n  pkg-config exited with status code 1\n  > PKG_CONFIG_ALLOW_SYSTEM_LIBS=1 PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1 pkg-config --libs --cflags fuse3 fuse3 >= 3.0.0\n\n  The system library `fuse3` required by crate `fuser` was not found.\n  The file `fuse3.pc` needs to be installed and the PKG_CONFIG_PATH environment variable must contain its parent directory.\n  The PKG_CONFIG_PATH environment variable is not set.\n\n  HINT: if you have installed the library, try setting PKG_CONFIG_PATH to the directory containing `fuse3.pc`.\n\n\n  pkg-config exited with status code 1\n  > PKG_CONFIG_ALLOW_SYSTEM_LIBS=1 PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1 pkg-config --libs --cflags fuse fuse >= 2.6.0\n\n  The system library `fuse` required by crate `fuser` was not found.\n  The file `fuse.pc` needs to be installed and the PKG_CONFIG_PATH environment variable must contain its parent directory.\n  The PKG_CONFIG_PATH environment variable is not set.\n\n  HINT: if you have installed the library, try setting PKG_CONFIG_PATH to the directory containing `fuse.pc`.\n\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/fuser-379f3f6b680d6b6e/99aa528/build.rs:41:22:\n  called `Result::unwrap()` on an `Err` value: ()\n  stack backtrace:\n     0:     0x560cb1446f15 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x560cb1446f15 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x560cb1446f15 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x560cb1446f15 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x560cb146995b - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x560cb146995b - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x560cb14443cf - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x560cb1446cee - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x560cb1446cee - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x560cb14481f9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x560cb1447f3d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x560cb1448703 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x560cb14485e4 - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:664:13\n    13:     0x560cb14473d9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x560cb1448317 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x560cb1468a13 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x560cb1468f56 - core::result::unwrap_failed::hcaf97cbd304b2b7c\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/result.rs:1658:5\n    17:     0x560cb13f3a8a - core::result::Result<T,E>::unwrap::h9be5e63be8ed3b35\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/result.rs:1081:23\n    18:     0x560cb13f3a8a - build_script_build::main::h12b9dd210309a9fc\n                                 at /home/runner/.cargo/git/checkouts/fuser-379f3f6b680d6b6e/99aa528/build.rs:37:17\n    19:     0x560cb13f360b - core::ops::function::FnOnce::call_once::h0e20a66fdc4f0534\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    20:     0x560cb13f334e - std::sys_common::backtrace::__rust_begin_short_backtrace::hc9811d06d7a8626c\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    21:     0x560cb13f33c1 - std::rt::lang_start::{{closure}}::hb1d45db3c27a1809\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    22:     0x560cb1440e1d - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    23:     0x560cb1440e1d - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    24:     0x560cb1440e1d - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    25:     0x560cb1440e1d - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    26:     0x560cb1440e1d - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    27:     0x560cb1440e1d - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    28:     0x560cb1440e1d - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    29:     0x560cb1440e1d - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    30:     0x560cb1440e1d - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    31:     0x560cb13f339a - std::rt::lang_start::h34e50d79fa53a1cd\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    32:     0x560cb13f3d5e - main\n    33:     0x7f8828629d90 - <unknown>\n    34:     0x7f8828629e40 - __libc_start_main\n    35:     0x560cb13f3275 - _start\n    36:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=ext4libtest, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_14/yuoo655/ext4libtest\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling proc-macro2 v1.0.85\n   Compiling unicode-ident v1.0.12\n   Compiling libc v0.2.155\n   Compiling cfg_aliases v0.1.1\n   Compiling nix v0.28.0\n    Checking bitflags v2.5.0\n   Compiling pkg-config v0.3.30\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n    Checking byteorder v1.5.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.66\n   Compiling fuser v0.14.0 (https://github.com/cberner/fuser.git#99aa5280)\n    Checking smallvec v1.13.2\n    Checking memchr v2.7.2\n    Checking page_size v0.6.0\n    Checking ext4_rs v1.0.0 (https://github.com/yuoo655/ext4_rs.git?rev=d8b2336#d8b2336d)\nerror: failed to run custom build command for `fuser v0.14.0 (https://github.com/cberner/fuser.git#99aa5280)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_14/yuoo655/ext4libtest/target/debug/build/fuser-72050bbec9ca2218/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-env-changed=FUSE3_NO_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG\n  cargo:rerun-if-env-changed=FUSE3_STATIC\n  cargo:rerun-if-env-changed=FUSE3_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_STATIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_SYSROOT_DIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR\n  cargo:rerun-if-env-changed=FUSE_NO_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG\n  cargo:rerun-if-env-changed=FUSE_STATIC\n  cargo:rerun-if-env-changed=FUSE_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_STATIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_SYSROOT_DIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR\n\n  --- stderr\n\n  pkg-config exited with status code 1\n  > PKG_CONFIG_ALLOW_SYSTEM_LIBS=1 PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1 pkg-config --libs --cflags fuse3 fuse3 >= 3.0.0\n\n  The system library `fuse3` required by crate `fuser` was not found.\n  The file `fuse3.pc` needs to be installed and the PKG_CONFIG_PATH environment variable must contain its parent directory.\n  The PKG_CONFIG_PATH environment variable is not set.\n\n  HINT: if you have installed the library, try setting PKG_CONFIG_PATH to the directory containing `fuse3.pc`.\n\n\n  pkg-config exited with status code 1\n  > PKG_CONFIG_ALLOW_SYSTEM_LIBS=1 PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1 pkg-config --libs --cflags fuse fuse >= 2.6.0\n\n  The system library `fuse` required by crate `fuser` was not found.\n  The file `fuse.pc` needs to be installed and the PKG_CONFIG_PATH environment variable must contain its parent directory.\n  The PKG_CONFIG_PATH environment variable is not set.\n\n  HINT: if you have installed the library, try setting PKG_CONFIG_PATH to the directory containing `fuse.pc`.\n\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/fuser-379f3f6b680d6b6e/99aa528/build.rs:41:22:\n  called `Result::unwrap()` on an `Err` value: ()\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:06:34Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:06:34Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"taskctx","pkg":"taskctx","count":8,"raw_reports":[{"file":"src/current.rs","count":3,"kinds":{"Mirai":["warning: Inline assembly code cannot be analyzed by MIRAI.\n  --> src/current.rs:69:17\n   |\n69 | /                 core::arch::asm!(\n70 | |                     \"mov {0}, gs:[offset __PERCPU_SELF_PTR]\",\n71 | |                     \"add {0}, offset {VAR}\",\n72 | |                     out(reg) base,\n73 | |                     VAR = sym __PERCPU_CURRENT_TASK_PTR,\n74 | |                 );\n   | |_________________^\n\n","warning: Inline assembly code cannot be analyzed by MIRAI.\n   --> src/current.rs:145:17\n    |\n145 | /                 core::arch::asm!(\n146 | |                     \"mov {0:r}, qword ptr gs:[offset {VAR}]\",\n147 | |                     out(reg) value,\n148 | |                     VAR = sym __PERCPU_CURRENT_TASK_PTR\n149 | |                 );\n    | |_________________^\n\n","warning: Inline assembly code cannot be analyzed by MIRAI.\n   --> src/current.rs:182:17\n    |\n182 | /                 core::arch::asm!(\n183 | |                     \"mov qword ptr gs:[offset {VAR}], {0:r}\",\n184 | |                     in(reg) val,\n185 | |                     VAR = sym __PERCPU_CURRENT_TASK_PTR\n186 | |                 )\n    | |_________________^\n\n"]}},{"file":"src/arch/x86_64.rs","count":2,"kinds":{"Mirai":["warning: Inline assembly code cannot be analyzed by MIRAI.\n   --> src/arch/x86_64.rs:150:5\n    |\n150 | /     asm!(\n151 | |         \"\n152 | |         push    rbp\n153 | |         push    rbx\n...   |\n168 | |         options(noreturn),\n169 | |     )\n    | |_____^\n\n"],"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `TaskContext`\n   --> src/arch/x86_64.rs:110:5\n    |\n110 | /     pub const fn new() -> Self {\n111 | |         Self {\n112 | |             kstack_top: VirtAddr::from(0),\n113 | |             rsp: 0,\n...   |\n117 | |         }\n118 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for TaskContext {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"]}},{"file":"src/lib.rs","count":2,"kinds":{"Clippy(Warn)":["warning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> src/lib.rs:15:12\n   |\n15 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\n","warning: doc list item without indentation\n  --> src/lib.rs:12:5\n   |\n12 | //! task can be preempted. It can be used to implement preemption protection lock.\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\n   = note: `#[warn(clippy::doc_lazy_continuation)]` on by default\nhelp: indent this line\n   |\n12 | //!   task can be preempted. It can be used to implement preemption protection lock.\n   |     ++\n\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T01:59:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:59:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-hal-internal","count":7,"raw_reports":[{"file":"src/atomic_ring_buffer.rs","count":4,"kinds":{"Clippy(Warn)":["warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"],"Mirai":["warning: possible attempt to add with overflow\n   --> src/atomic_ring_buffer.rs:240:55\n    |\n240 |         trace!(\"  ringbuf: push_buf {:?}..{:?}\", end, end + n);\n    |                                                       ^^^^^^^\n\n","warning: possible attempt to add with overflow\n   --> src/atomic_ring_buffer.rs:279:70\n    |\n279 |         trace!(\"  ringbuf: push_bufs [{:?}..{:?}, {:?}..{:?}]\", end, end + n0, 0, n1);\n    |                                                                      ^^^^^^^^\n\n","warning: possible attempt to add with overflow\n   --> src/atomic_ring_buffer.rs:365:56\n    |\n365 |         trace!(\"  ringbuf: pop_buf {:?}..{:?}\", start, start + n);\n    |                                                        ^^^^^^^^^\n\n"]}},{"file":"src/peripheral.rs","count":2,"kinds":{"Clippy(Warn)":["warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n","warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"]}},{"file":"src/drop.rs","count":1,"kinds":{"Mirai":["warning: boom\n  --> src/drop.rs:54:9\n   |\n54 |         panic!(\"boom\")\n   |         ^^^^^^^^^^^^^^\n\n"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-net-esp-hosted","count":7,"raw_reports":[{"file":"src/lib.rs","count":4,"kinds":{"Clippy(Warn)":["warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n","warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n","warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=embassy-net-esp-hosted, checker=Mirai\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-esp-hosted\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling proc-macro2 v1.0.86\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling unicode-ident v1.0.13\n    Checking stable_deref_trait v1.2.0\n    Checking hash32 v0.3.1\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.30\n    Checking futures-task v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling syn v1.0.109\n   Compiling anyhow v1.0.89\n    Checking futures-util v0.3.30\n   Compiling quote v1.0.37\n   Compiling litrs v0.4.1\n    Checking cfg-if v1.0.0\n    Checking critical-section v1.1.3\n   Compiling either v1.13.0\n    Checking nb v1.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking embedded-io v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling document-features v0.2.10\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\n   Compiling itertools v0.10.5\n    Checking nb v0.1.3\n    Checking embedded-hal v1.0.0\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling noproto-derive v0.1.0\n    Checking noproto v0.1.0\n    Checking embassy-net-esp-hosted v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-esp-hosted)\nthread 'rustc' panicked at checker/src/body_visitor.rs:2452:14:\nArray length constant to have a known value\nstack backtrace:\n   0:     0x7f7533bda756 - std::backtrace_rs::backtrace::libunwind::trace::h94f8c7122e05c230\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/../../backtrace/src/backtrace/libunwind.rs:104:5\n   1:     0x7f7533bda756 - std::backtrace_rs::backtrace::trace_unsynchronized::h449cc397f38f961a\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   2:     0x7f7533bda756 - std::sys_common::backtrace::_print_fmt::h99e89bb2cec7ce30\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/sys_common/backtrace.rs:68:5\n   3:     0x7f7533bda756 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h9d5ec8eb2e1a7700\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/sys_common/backtrace.rs:44:22\n   4:     0x7f7533c2d080 - core::fmt::rt::Argument::fmt::h7ef4d083260a0351\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/core/src/fmt/rt.rs:142:9\n   5:     0x7f7533c2d080 - core::fmt::write::h2a403cc736abb76d\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/core/src/fmt/mod.rs:1120:17\n   6:     0x7f7533bce49f - std::io::Write::write_fmt::h9388093ce47d738a\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/io/mod.rs:1810:15\n   7:     0x7f7533bda534 - std::sys_common::backtrace::_print::he4265a9234d5139f\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/sys_common/backtrace.rs:47:5\n   8:     0x7f7533bda534 - std::sys_common::backtrace::print::h5cc27ab6a8643bdb\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/sys_common/backtrace.rs:34:9\n   9:     0x7f7533bdd2c7 - std::panicking::default_hook::{{closure}}::hc8257eee467fd46c\n  10:     0x7f7533bdd029 - std::panicking::default_hook::hff02dc68ee5d3c46\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/panicking.rs:292:9\n  11:     0x7f753075106c - std[bce8a3935be9b497]::panicking::update_hook::<alloc[55b8802719acf2f0]::boxed::Box<rustc_driver_impl[e32ff1f67578002d]::install_ice_hook::{closure#0}>>::{closure#0}\n  12:     0x7f7533bdda16 - <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call::h36f3347658e0b917\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/alloc/src/boxed.rs:2029:9\n  13:     0x7f7533bdda16 - std::panicking::rust_panic_with_hook::hca2e28235e9b1d5c\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/panicking.rs:783:13\n  14:     0x7f7533bdd762 - std::panicking::begin_panic_handler::{{closure}}::h12fe0f3c055c0d25\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/panicking.rs:657:13\n  15:     0x7f7533bdac56 - std::sys_common::backtrace::__rust_end_short_backtrace::hac29e2e1d1f10185\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/sys_common/backtrace.rs:171:18\n  16:     0x7f7533bdd4c0 - rust_begin_unwind\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/panicking.rs:645:5\n  17:     0x7f7533c29785 - core::panicking::panic_fmt::h72b9f790277cded1\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/core/src/panicking.rs:72:14\n  18:     0x7f7533c29533 - core::panicking::panic_display::h629bd69225983da4\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/core/src/panicking.rs:196:5\n  19:     0x7f7533c29533 - core::panicking::panic_str::hd022e8f39dfde25f\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/core/src/panicking.rs:171:5\n  20:     0x7f7533c29533 - core::option::expect_failed::h6366f025d7727144\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/core/src/option.rs:1980:5\n  21:     0x5643fe474d8b - core::option::Option<T>::expect::h4f6b4c7b965ced18\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/core/src/option.rs:894:21\n  22:     0x5643fe474d8b - mirai::body_visitor::BodyVisitor::get_array_length::h7fb29b5e76c44db4\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/body_visitor.rs:2452:14\n  23:     0x5643fe488edb - mirai::body_visitor::BodyVisitor::try_expand_target_pattern::hbd105a84308878e2\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/body_visitor.rs:2428:26\n  24:     0x5643fe488edb - mirai::body_visitor::BodyVisitor::copy_or_move_elements::hc37b4ea40f809eaf\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/body_visitor.rs:1760:39\n  25:     0x5643fe3cf795 - mirai::block_visitor::BlockVisitor::visit_use::hb15b81a839f380cc\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:1764:29\n  26:     0x5643fe3cc82a - mirai::block_visitor::BlockVisitor::visit_aggregate::h3df15f61b9857ab7\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:2594:25\n  27:     0x5643fe3cc82a - mirai::block_visitor::BlockVisitor::visit_rvalue::hdeeb38c6624c95b8\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:1728:17\n  28:     0x5643fe3b7f9c - mirai::block_visitor::BlockVisitor::visit_assign::hf7afa0492b2c5941\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:161:9\n  29:     0x5643fe3b7f9c - mirai::block_visitor::BlockVisitor::visit_statement::h11834c862dc36244\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:117:64\n  30:     0x5643fe3b7f9c - mirai::block_visitor::BlockVisitor::visit_basic_block::hf92957b86c1d6a5d\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:90:17\n  31:     0x5643fe4689b8 - mirai::fixed_point_visitor::FixedPointVisitor::visit_basic_block::h432afb0a9490cbb7\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/fixed_point_visitor.rs:130:9\n  32:     0x5643fe466ffd - mirai::fixed_point_visitor::FixedPointVisitor::visit_blocks::h6149f1834e690a81\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/fixed_point_visitor.rs:82:21\n  33:     0x5643fe47d4c0 - mirai::body_visitor::BodyVisitor::visit_body::ha7a6616488eafb79\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/body_visitor.rs:217:9\n  34:     0x5643fe3f76dc - mirai::call_visitor::CallVisitor::create_and_cache_function_summary::h80e47f2a9bfb1f3d\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/call_visitor.rs:141:31\n  35:     0x5643fe3f96e8 - mirai::call_visitor::CallVisitor::get_function_summary::h3cd474b3261cec17\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/call_visitor.rs:382:21\n  36:     0x5643fe3bb832 - mirai::block_visitor::BlockVisitor::visit_call::h69db26b81b074506\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:736:32\n  37:     0x5643fe3bb832 - mirai::block_visitor::BlockVisitor::visit_terminator::he9783d48550eff8a\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:311:18\n  38:     0x5643fe3b8fa4 - mirai::block_visitor::BlockVisitor::visit_basic_block::hf92957b86c1d6a5d\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:105:13\n  39:     0x5643fe4689b8 - mirai::fixed_point_visitor::FixedPointVisitor::visit_basic_block::h432afb0a9490cbb7\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/fixed_point_visitor.rs:130:9\n  40:     0x5643fe466ffd - mirai::fixed_point_visitor::FixedPointVisitor::visit_blocks::h6149f1834e690a81\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/fixed_point_visitor.rs:82:21\n  41:     0x5643fe47d4c0 - mirai::body_visitor::BodyVisitor::visit_body::ha7a6616488eafb79\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/body_visitor.rs:217:9\n  42:     0x5643fe3f76dc - mirai::call_visitor::CallVisitor::create_and_cache_function_summary::h80e47f2a9bfb1f3d\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/call_visitor.rs:141:31\n  43:     0x5643fe3f96e8 - mirai::call_visitor::CallVisitor::get_function_summary::h3cd474b3261cec17\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/call_visitor.rs:382:21\n  44:     0x5643fe3bb832 - mirai::block_visitor::BlockVisitor::visit_call::h69db26b81b074506\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:736:32\n  45:     0x5643fe3bb832 - mirai::block_visitor::BlockVisitor::visit_terminator::he9783d48550eff8a\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:311:18\n  46:     0x5643fe3b8fa4 - mirai::block_visitor::BlockVisitor::visit_basic_block::hf92957b86c1d6a5d\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:105:13\n  47:     0x5643fe4689b8 - mirai::fixed_point_visitor::FixedPointVisitor::visit_basic_block::h432afb0a9490cbb7\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/fixed_point_visitor.rs:130:9\n  48:     0x5643fe466ffd - mirai::fixed_point_visitor::FixedPointVisitor::visit_blocks::h6149f1834e690a81\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/fixed_point_visitor.rs:82:21\n  49:     0x5643fe47d4c0 - mirai::body_visitor::BodyVisitor::visit_body::ha7a6616488eafb79\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/body_visitor.rs:217:9\n  50:     0x5643fe3f76dc - mirai::call_visitor::CallVisitor::create_and_cache_function_summary::h80e47f2a9bfb1f3d\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/call_visitor.rs:141:31\n  51:     0x5643fe3f96e8 - mirai::call_visitor::CallVisitor::get_function_summary::h3cd474b3261cec17\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/call_visitor.rs:382:21\n  52:     0x5643fe3bb832 - mirai::block_visitor::BlockVisitor::visit_call::h69db26b81b074506\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:736:32\n  53:     0x5643fe3bb832 - mirai::block_visitor::BlockVisitor::visit_terminator::he9783d48550eff8a\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:311:18\n  54:     0x5643fe3b8fa4 - mirai::block_visitor::BlockVisitor::visit_basic_block::hf92957b86c1d6a5d\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:105:13\n  55:     0x5643fe4689b8 - mirai::fixed_point_visitor::FixedPointVisitor::visit_basic_block::h432afb0a9490cbb7\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/fixed_point_visitor.rs:130:9\n  56:     0x5643fe466ffd - mirai::fixed_point_visitor::FixedPointVisitor::visit_blocks::h6149f1834e690a81\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/fixed_point_visitor.rs:82:21\n  57:     0x5643fe47d4c0 - mirai::body_visitor::BodyVisitor::visit_body::ha7a6616488eafb79\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/body_visitor.rs:217:9\n  58:     0x5643fe439325 - mirai::crate_visitor::CrateVisitor::analyze_body::{{closure}}::h66c8dca76da6a317\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/crate_visitor.rs:185:23\n  59:     0x5643fe439325 - mirai::crate_visitor::CrateVisitor::analyze_body::hd7d7dc55d19d3cdf\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/crate_visitor.rs:173:5\n  60:     0x5643fe439325 - mirai::crate_visitor::CrateVisitor::analyze_some_bodies::{{closure}}::hfa20b97c6ca7a778\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/crate_visitor.rs:127:13\n  61:     0x5643fe439325 - mirai::crate_visitor::CrateVisitor::analyze_some_bodies::h2e3e1dd8e275bd25\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/crate_visitor.rs:71:5\n  62:     0x5643fe49db78 - mirai::callbacks::MiraiCallbacks::analyze_with_mirai::{{closure}}::hc9912b31759cd925\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/callbacks.rs:174:9\n  63:     0x5643fe49db78 - mirai::callbacks::MiraiCallbacks::analyze_with_mirai::h097b2444caee940f\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/callbacks.rs:133:5\n  64:     0x5643fe49caaf - <mirai::callbacks::MiraiCallbacks as rustc_driver_impl::Callbacks>::after_analysis::{{closure}}::{{closure}}::hd453b35ab0c4e14e\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/callbacks.rs:120:26\n  65:     0x5643fe49caaf - rustc_middle::ty::context::GlobalCtxt::enter::{{closure}}::h2f8a428a66468974\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/compiler/rustc_middle/src/ty/context.rs:666:37\n  66:     0x5643fe49caaf - rustc_middle::ty::context::tls::enter_context::{{closure}}::h73174c3c95f90e07\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/compiler/rustc_middle/src/ty/context/tls.rs:82:9\n  67:     0x5643fe49caaf - std::thread::local::LocalKey<T>::try_with::h231ab6731c60e2c3\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/thread/local.rs:270:16\n  68:     0x5643fe49caaf - std::thread::local::LocalKey<T>::with::h1a1115e06adc6b84\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/thread/local.rs:246:9\n  69:     0x5643fe49caaf - rustc_middle::ty::context::tls::enter_context::h093207ad7dca8bdd\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/compiler/rustc_middle/src/ty/context/tls.rs:79:9\n  70:     0x5643fe49caaf - rustc_middle::ty::context::GlobalCtxt::enter::he108b364fd88ebc7\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/compiler/rustc_middle/src/ty/context.rs:666:9\n  71:     0x5643fe49caaf - rustc_interface::queries::QueryResult<&rustc_middle::ty::context::GlobalCtxt>::enter::hecbea8068e407bdb\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/compiler/rustc_interface/src/queries.rs:71:9\n  72:     0x5643fe49caaf - <mirai::callbacks::MiraiCallbacks as rustc_driver_impl::Callbacks>::after_analysis::{{closure}}::h448214350c6957de\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/callbacks.rs:117:9\n  73:     0x5643fe49caaf - <mirai::callbacks::MiraiCallbacks as rustc_driver_impl::Callbacks>::after_analysis::h875b68c3b46b7b75\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/callbacks.rs:101:5\n  74:     0x7f7532a34516 - rustc_interface[6bc3f1fe26159ec6]::interface::run_compiler::<core[428442fe84ea1b4e]::result::Result<(), rustc_span[16f9992e6c25b5e]::ErrorGuaranteed>, rustc_driver_impl[e32ff1f67578002d]::run_compiler::{closure#0}>::{closure#0}\n  75:     0x7f75329b5706 - std[bce8a3935be9b497]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[6bc3f1fe26159ec6]::util::run_in_thread_with_globals<rustc_interface[6bc3f1fe26159ec6]::util::run_in_thread_pool_with_globals<rustc_interface[6bc3f1fe26159ec6]::interface::run_compiler<core[428442fe84ea1b4e]::result::Result<(), rustc_span[16f9992e6c25b5e]::ErrorGuaranteed>, rustc_driver_impl[e32ff1f67578002d]::run_compiler::{closure#0}>::{closure#0}, core[428442fe84ea1b4e]::result::Result<(), rustc_span[16f9992e6c25b5e]::ErrorGuaranteed>>::{closure#0}, core[428442fe84ea1b4e]::result::Result<(), rustc_span[16f9992e6c25b5e]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[428442fe84ea1b4e]::result::Result<(), rustc_span[16f9992e6c25b5e]::ErrorGuaranteed>>\n  76:     0x7f75329b5533 - <<std[bce8a3935be9b497]::thread::Builder>::spawn_unchecked_<rustc_interface[6bc3f1fe26159ec6]::util::run_in_thread_with_globals<rustc_interface[6bc3f1fe26159ec6]::util::run_in_thread_pool_with_globals<rustc_interface[6bc3f1fe26159ec6]::interface::run_compiler<core[428442fe84ea1b4e]::result::Result<(), rustc_span[16f9992e6c25b5e]::ErrorGuaranteed>, rustc_driver_impl[e32ff1f67578002d]::run_compiler::{closure#0}>::{closure#0}, core[428442fe84ea1b4e]::result::Result<(), rustc_span[16f9992e6c25b5e]::ErrorGuaranteed>>::{closure#0}, core[428442fe84ea1b4e]::result::Result<(), rustc_span[16f9992e6c25b5e]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[428442fe84ea1b4e]::result::Result<(), rustc_span[16f9992e6c25b5e]::ErrorGuaranteed>>::{closure#1} as core[428442fe84ea1b4e]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  77:     0x7f7533be7945 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h86a431238d49a3fd\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/alloc/src/boxed.rs:2015:9\n  78:     0x7f7533be7945 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h45a4c3506ac8cdc6\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/alloc/src/boxed.rs:2015:9\n  79:     0x7f7533be7945 - std::sys::unix::thread::Thread::new::thread_start::h42580b3c714a9afd\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/sys/unix/thread.rs:108:17\n  80:     0x7f752d294ac3 - <unknown>\n  81:     0x7f752d326850 - <unknown>\n  82:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\n\nnote: please attach the file at `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-esp-hosted/rustc-ice-2024-10-01T05_00_47-10057.txt` to your bug report\n\nnote: compiler flags: --crate-type lib -C embed-bitcode=no -C debuginfo=2 -Z always_encode_mir\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\nerror: could not compile `embassy-net-esp-hosted` (lib)\n"]}},{"file":"src/control.rs","count":1,"kinds":{"Clippy(Warn)":["warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"]}},{"file":"src/proto.rs","count":1,"kinds":{"Clippy(Warn)":["warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1032 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1552 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1560 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"]}}]},{"user":"kern-crates","repo":"scheduler","pkg":"scheduler","count":7,"raw_reports":[{"file":"src/fifo.rs","count":3,"kinds":{"Clippy(Error)":["error[E0432]: unresolved import `linked_list::Adapter`\n --> src/fifo.rs:4:19\n  |\n4 | use linked_list::{Adapter, Links, List};\n  |                   ^^^^^^^ no `Adapter` in the root\n\n","error[E0277]: the trait bound `fifo::FifoTask<T>: linked_list::GetLinks` is not satisfied\n   --> src/fifo.rs:58:18\n    |\n58  |     ready_queue: List<Arc<FifoTask<T>>>,\n    |                  ^^^^^^^^^^^^^^^^^^^^^^ the trait `linked_list::GetLinks` is not implemented for `fifo::FifoTask<T>`, which is required by `alloc::sync::Arc<fifo::FifoTask<T>>: linked_list::GetLinksWrapped`\n    |\n    = help: the following other types implement trait `linked_list::GetLinks`:\n              alloc::boxed::Box<T>\n              alloc::sync::Arc<T>\n    = note: required for `alloc::sync::Arc<fifo::FifoTask<T>>` to implement `linked_list::GetLinks`\n    = note: required for `alloc::sync::Arc<fifo::FifoTask<T>>` to implement `linked_list::GetLinksWrapped`\nnote: required by a bound in `linked_list::List`\n   --> /home/runner/.cargo/git/checkouts/linked_list-8e65c63e9846e3d1/01ec54f/src/linked_list.rs:126:20\n    |\n126 | pub struct List<G: GetLinksWrapped> {\n    |                    ^^^^^^^^^^^^^^^ required by this bound in `List`\n\n"],"Mirai":["error[E0432]: unresolved import `linked_list::Adapter`\n --> src/fifo.rs:4:19\n  |\n4 | use linked_list::{Adapter, Links, List};\n  |                   ^^^^^^^ no `Adapter` in the root\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=scheduler, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/scheduler\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n     Locking 1 package to latest compatible version\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#01ec54f2)\n    Checking scheduler v0.1.0 (/home/runner/check/batch_10/kern-crates/scheduler)\nerror: could not compile `scheduler` (lib) due to 2 previous errors; 1 warning emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=scheduler, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/scheduler\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#01ec54f2)\n   Compiling scheduler v0.1.0 (/home/runner/check/batch_10/kern-crates/scheduler)\nerror[E0432]: unresolved import `linked_list::Adapter`\n --> src/fifo.rs:4:19\n  |\n4 | use linked_list::{Adapter, Links, List};\n  |                   ^^^^^^^ no `Adapter` in the root\n\nerror[E0277]: the trait bound `fifo::FifoTask<T>: linked_list::GetLinks` is not satisfied\n   --> src/fifo.rs:58:18\n    |\n58  |     ready_queue: List<Arc<FifoTask<T>>>,\n    |                  ^^^^^^^^^^^^^^^^^^^^^^ the trait `linked_list::GetLinks` is not implemented for `fifo::FifoTask<T>`, which is required by `alloc::sync::Arc<fifo::FifoTask<T>>: linked_list::GetLinksWrapped`\n    |\n    = help: the following other types implement trait `linked_list::GetLinks`:\n              alloc::boxed::Box<T>\n              alloc::sync::Arc<T>\n    = note: required for `alloc::sync::Arc<fifo::FifoTask<T>>` to implement `linked_list::GetLinks`\n    = note: required for `alloc::sync::Arc<fifo::FifoTask<T>>` to implement `linked_list::GetLinksWrapped`\nnote: required by a bound in `linked_list::List`\n   --> /home/runner/.cargo/git/checkouts/linked_list-8e65c63e9846e3d1/01ec54f/src/linked_list.rs:126:20\n    |\n126 | pub struct List<G: GetLinksWrapped> {\n    |                    ^^^^^^^^^^^^^^^ required by this bound in `List`\n\nSome errors have detailed explanations: E0277, E0432.\nFor more information about an error, try `rustc --explain E0277`.\nerror: could not compile `scheduler` (lib) due to 2 previous errors\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=scheduler, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/scheduler\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#01ec54f2)\n    Checking scheduler v0.1.0 (/home/runner/check/batch_10/kern-crates/scheduler)\nerror: could not compile `scheduler` (lib) due to 2 previous errors\n"]}},{"file":"src/lib.rs","count":1,"kinds":{"Clippy(Warn)":["warning: the feature `const_mut_refs` has been stable since 1.83.0-nightly and no longer requires an attribute to enable\n  --> src/lib.rs:10:12\n   |\n10 | #![feature(const_mut_refs)]\n   |            ^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\n"]}}]},{"user":"kern-crates","repo":"spinlock","pkg":"spinlock","count":7,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs","count":2,"kinds":{"Clippy(Error)":["error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"],"Mirai":["error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=spinlock, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_11/kern-crates/spinlock\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n     Locking 27 packages to latest compatible versions\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.210\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bitflags v1.3.2\n   Compiling x86 v0.52.0\n    Checking raw-cpuid v10.7.0\n   Compiling indexmap v2.5.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking bit_field v0.10.2\n    Checking log v0.4.22\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling toml_edit v0.22.22\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: could not compile `axconfig` (build script) due to 1 previous error\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=spinlock, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_11/kern-crates/spinlock\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.14.5\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling bitflags v1.3.2\n   Compiling x86 v0.52.0\n   Compiling raw-cpuid v10.7.0\n   Compiling indexmap v2.5.0\n   Compiling bit_field v0.10.2\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling static_assertions v1.1.0\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling toml_edit v0.22.22\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling log v0.4.22\n[2024-10-01T01:58:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:58:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=spinlock, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_11/kern-crates/spinlock\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bitflags v1.3.2\n   Compiling x86 v0.52.0\n   Compiling indexmap v2.5.0\n    Checking raw-cpuid v10.7.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking bit_field v0.10.2\n    Checking cfg-if v1.0.0\n   Compiling toml_edit v0.22.22\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking log v0.4.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: could not compile `axconfig` (build script) due to 2 previous errors\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T01:58:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:58:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/lib.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_11/kern-crates/spinlock/src/lib.rs (original lines from 15 to 15)\n-use kernel_guard::{NoOp, NoPreempt, NoPreemptIrqSave, IrqSave};\n+use kernel_guard::{IrqSave, NoOp, NoPreempt, NoPreemptIrqSave};\n"]}}]},{"user":"kern-crates","repo":"arm_gic","pkg":"arm_gic","count":6,"raw_reports":[{"file":"src/sysregs.rs","count":3,"kinds":{"Mirai":["warning: Inline assembly code cannot be analyzed by MIRAI.\n   --> src/sysregs.rs:5:13\n    |\n5   | /             ::core::arch::asm!(\n6   | |                 concat!(\"mrs {value}, \", ::core::stringify!($name)),\n7   | |                 value = out(reg) value,\n8   | |                 options(nomem, nostack),\n9   | |             );\n    | |_____________^\n    |\n   ::: src/gic_v3.rs:478:30\n    |\n478 |           let intid = unsafe { read_sysreg!(icc_iar1_el1) } as usize;\n    |                                -------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `read_sysreg` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: Inline assembly code cannot be analyzed by MIRAI.\n   --> src/sysregs.rs:21:13\n    |\n21  | /             ::core::arch::asm!(\n22  | |                 concat!(\"msr \", ::core::stringify!($name), \", {value}\"),\n23  | |                 value = in(reg) v,\n24  | |                 options(nomem, nostack),\n25  | |             )\n    | |_____________^\n    |\n   ::: src/gic_v3.rs:406:13\n    |\n406 |               write_sysreg!(icc_sre_el1, 0x01);\n    |               -------------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `write_sysreg` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n","warning: Inline assembly code cannot be analyzed by MIRAI.\n   --> src/sysregs.rs:21:13\n    |\n21  | /             ::core::arch::asm!(\n22  | |                 concat!(\"msr \", ::core::stringify!($name), \", {value}\"),\n23  | |                 value = in(reg) v,\n24  | |                 options(nomem, nostack),\n25  | |             )\n    | |_____________^\n    |\n   ::: src/gic_v3.rs:490:18\n    |\n490 |           unsafe { write_sysreg!(icc_eoir1_el1, intid.0 as u64) }\n    |                    -------------------------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `write_sysreg` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"src/lib.rs","count":2,"kinds":{"Clippy(Warn)":["warning: doc list item without indentation\n  --> src/lib.rs:11:5\n   |\n11 | //! Please contact the developer if you need this function\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\n   = note: `#[warn(clippy::doc_lazy_continuation)]` on by default\nhelp: indent this line\n   |\n11 | //!    Please contact the developer if you need this function\n   |     +++\n\n","warning: first doc comment paragraph is too long\n   --> src/lib.rs:174:1\n    |\n174 | / /// [`GenericArmGic`].\n175 | | /// It is used to implement the interface abstraction that the interrupt chip\n176 | | /// driver should provide to the outside world.\n177 | | /// I hope that the versatility of the driver interface should support more chip architectures.\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n    = note: `#[warn(clippy::too_long_first_doc_paragraph)]` on by default\nhelp: add an empty line\n    |\n174 ~ /// [`GenericArmGic`].\n175 + ///\n    |\n\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=arm_gic, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_2/kern-crates/arm_gic\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling tock-registers v0.8.1\n   Compiling bitflags v2.6.0\n   Compiling cfg-if v1.0.0\n   Compiling aarch64-cpu v9.4.0\n   Compiling arm_gic v0.1.0 (/home/runner/check/batch_2/kern-crates/arm_gic)\nerror: invalid instruction mnemonic 'msr'\n  --> src/sysregs.rs:22:17\n   |\n22 |                 concat!(\"msr \", ::core::stringify!($name), \", {value}\"),\n   |                 ^\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:2:2\n   |\n2  |     msr icc_sre_el1, rax\n   |     ^^^\n\nerror: invalid instruction mnemonic 'msr'\n  --> src/sysregs.rs:22:17\n   |\n22 |                 concat!(\"msr \", ::core::stringify!($name), \", {value}\"),\n   |                 ^\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:2:2\n   |\n2  |     msr icc_pmr_el1, rax\n   |     ^^^\n\nerror: invalid instruction mnemonic 'msr'\n  --> src/sysregs.rs:22:17\n   |\n22 |                 concat!(\"msr \", ::core::stringify!($name), \", {value}\"),\n   |                 ^\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:2:2\n   |\n2  |     msr icc_ctlr_el1, rax\n   |     ^^^\n\nerror: invalid instruction mnemonic 'msr'\n  --> src/sysregs.rs:22:17\n   |\n22 |                 concat!(\"msr \", ::core::stringify!($name), \", {value}\"),\n   |                 ^\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:2:2\n   |\n2  |     msr icc_igrpen1_el1, rax\n   |     ^^^\n\nerror: invalid instruction mnemonic 'mrs'\n --> src/sysregs.rs:6:17\n  |\n6 |                 concat!(\"mrs {value}, \", ::core::stringify!($name)),\n  |                 ^\n  |\nnote: instantiated into assembly here\n --> <inline asm>:2:2\n  |\n2 |     mrs rax, icc_iar1_el1\n  |     ^^^\n\nerror: invalid instruction mnemonic 'msr'\n  --> src/sysregs.rs:22:17\n   |\n22 |                 concat!(\"msr \", ::core::stringify!($name), \", {value}\"),\n   |                 ^\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:2:2\n   |\n2  |     msr icc_eoir1_el1, rsi\n   |     ^^^\n\nerror: could not compile `arm_gic` (lib) due to 6 previous errors\n"]}}]},{"user":"kern-crates","repo":"axfs","pkg":"axfs","count":6,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs","count":1,"kinds":{"Clippy(Error)":["error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axfs, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_3/kern-crates/axfs\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/axdriver.git`\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_devfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_ramfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_vfs.git`\n    Updating git repository `https://github.com/Starry-OS/axio.git`\n    Updating git repository `https://github.com/Starry-OS/axsync.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/capability.git`\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/driver_block.git`\n    Updating git repository `https://github.com/yuoo655/ext4_rs.git`\n    Updating git repository `https://github.com/rafalh/rust-fatfs`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/elliott10/lwext4_rust.git`\n    Updating git repository `https://github.com/Starry-OS/axtask.git`\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating git repository `https://github.com/Starry-OS/driver_common.git`\n    Updating git repository `https://github.com/Starry-OS/driver_pci.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/kern-crates/axbacktrace.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/axsignal.git`\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/Starry-OS/scheduler.git`\n    Updating git repository `https://github.com/Starry-OS/timer_list.git`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n     Locking 93 packages to latest compatible versions\n    Checking log v0.4.22\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling proc-macro2 v1.0.86\n   Compiling serde v1.0.210\n   Compiling unicode-ident v1.0.13\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.5.0\n    Checking bitflags v2.6.0\n   Compiling quote v1.0.37\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.79\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n    Checking bitflags v1.3.2\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n    Checking scopeguard v1.2.0\n   Compiling x86 v0.52.0\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.17\n    Checking spin v0.9.8\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axfs, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_3/kern-crates/axfs\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling log v0.4.22\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling proc-macro2 v1.0.86\n   Compiling serde v1.0.210\n[2024-10-01T02:12:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:12:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling unicode-ident v1.0.13\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.5.0\n   Compiling bitflags v2.6.0\n   Compiling quote v1.0.37\n   Compiling bit_field v0.10.2\n   Compiling syn v2.0.79\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling bitflags v1.3.2\n   Compiling lock_api v0.4.12\n   Compiling raw-cpuid v10.7.0\n   Compiling scopeguard v1.2.0\n   Compiling x86 v0.52.0\n   Compiling cfg-if v1.0.0\n   Compiling rustversion v1.0.17\n   Compiling spin v0.9.8\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling volatile v0.4.6\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling static_assertions v1.1.0\n   Compiling paste v1.0.15\n   Compiling lazy_static v1.5.0\n   Compiling tock-registers v0.8.1\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling aarch64-cpu v9.4.0\n   Compiling x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=axfs, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_3/kern-crates/axfs\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking log v0.4.22\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.210\n   Compiling proc-macro2 v1.0.86\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.13\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.5.0\n    Checking bitflags v2.6.0\n   Compiling quote v1.0.37\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.79\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n    Checking bitflags v1.3.2\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking scopeguard v1.2.0\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.17\n    Checking spin v0.9.8\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_3/kern-crates/axfs/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:12:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:12:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/dev.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_3/kern-crates/axfs/src/dev.rs (original lines from 122 to 122)\n-\n"]}}]},{"user":"kern-crates","repo":"axlog","pkg":"axlog","count":6,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs","count":2,"kinds":{"Clippy(Error)":["error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"],"Mirai":["error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axlog, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axlog\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n     Locking 60 packages to latest compatible versions\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.86\n   Compiling x86 v0.52.0\n   Compiling indexmap v2.5.0\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.13\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking bit_field v0.10.2\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking static_assertions v1.1.0\n    Checking cfg-if v1.0.0\n    Checking log v0.4.22\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling quote v1.0.37\n   Compiling syn v2.0.79\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axlog, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axlog\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling bitflags v1.3.2\n   Compiling x86 v0.52.0\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n   Compiling raw-cpuid v10.7.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling unicode-ident v1.0.13\n   Compiling bit_field v0.10.2\n   Compiling toml_edit v0.22.22\n   Compiling log v0.4.22\n[2024-10-01T01:56:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:56:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling static_assertions v1.1.0\n   Compiling cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling syn v2.0.79\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=axlog, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axlog\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bitflags v1.3.2\n   Compiling x86 v0.52.0\n   Compiling indexmap v2.5.0\n   Compiling proc-macro2 v1.0.86\n    Checking raw-cpuid v10.7.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling unicode-ident v1.0.13\n   Compiling toml_edit v0.22.22\n    Checking bit_field v0.10.2\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking log v0.4.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling syn v2.0.79\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: could not compile `axconfig` (build script) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T01:56:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:56:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"axnet","pkg":"axnet","count":6,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs","count":1,"kinds":{"Clippy(Error)":["error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axnet, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axnet\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/axdriver.git`\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating git repository `https://github.com/Starry-OS/axio.git`\n    Updating git repository `https://github.com/Starry-OS/axprocess.git`\n    Updating git repository `https://github.com/Starry-OS/axsync.git`\n    Updating git repository `https://github.com/Starry-OS/axtask.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/driver_net.git`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/rcore-os/smoltcp.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/driver_common.git`\n    Updating git repository `https://github.com/Starry-OS/driver_pci.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/Starry-OS/axalloc.git`\n    Updating git repository `https://github.com/Starry-OS/axfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfutex.git`\n    Updating git repository `https://github.com/Starry-OS/axmem.git`\n    Updating git repository `https://github.com/Starry-OS/axsignal.git`\n    Updating git repository `https://github.com/Starry-OS/elf_parser.git`\n    Updating git repository `https://github.com/kern-crates/axbacktrace.git`\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n    Updating git repository `https://github.com/Starry-OS/allocator.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_devfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_ramfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_vfs.git`\n    Updating git repository `https://github.com/Starry-OS/capability.git`\n    Updating git repository `https://github.com/Starry-OS/driver_block.git`\n    Updating git repository `https://github.com/rafalh/rust-fatfs`\n    Updating git repository `https://github.com/Starry-OS/page_table.git`\n    Updating git repository `https://github.com/Starry-OS/scheduler.git`\n    Updating git repository `https://github.com/Starry-OS/timer_list.git`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n     Locking 130 packages to latest compatible versions\n Downloading crates ...\n  Downloaded defmt v0.3.8\n  Downloaded defmt-macros v0.3.9\n   Compiling serde v1.0.210\n   Compiling proc-macro2 v1.0.86\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling unicode-ident v1.0.13\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.5.0\n    Checking log v0.4.22\n   Compiling quote v1.0.37\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.79\n    Checking bitflags v1.3.2\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n    Checking scopeguard v1.2.0\n   Compiling rustversion v1.0.17\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n   Compiling paste v1.0.15\n    Checking byteorder v1.5.0\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axnet, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axnet\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling proc-macro2 v1.0.86\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling unicode-ident v1.0.13\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.5.0\n   Compiling log v0.4.22\n   Compiling quote v1.0.37\n[2024-10-01T01:57:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:57:53Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bit_field v0.10.2\n   Compiling syn v2.0.79\n   Compiling bitflags v1.3.2\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling raw-cpuid v10.7.0\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v2.6.0\n   Compiling x86 v0.52.0\n   Compiling scopeguard v1.2.0\n   Compiling rustversion v1.0.17\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling spin v0.9.8\n   Compiling static_assertions v1.1.0\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling volatile v0.4.6\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling byteorder v1.5.0\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=axnet, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axnet\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling hashbrown v0.14.5\n   Compiling proc-macro2 v1.0.86\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling unicode-ident v1.0.13\n   Compiling indexmap v2.5.0\n    Checking log v0.4.22\n   Compiling quote v1.0.37\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.79\n    Checking bitflags v1.3.2\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n   Compiling x86 v0.52.0\n    Checking scopeguard v1.2.0\n   Compiling rustversion v1.0.17\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_4/kern-crates/axnet/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T01:57:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:57:53Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/smoltcp_impl/mod.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_4/kern-crates/axnet/src/smoltcp_impl/mod.rs (original lines from 229 to 230)\n-    type RxToken<'a> = AxNetRxToken<'a> where Self: 'a;\n-    type TxToken<'a> = AxNetTxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = AxNetRxToken<'a>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = AxNetTxToken<'a>\n+    where\n+        Self: 'a;\n"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-executor-macros","count":6,"raw_reports":[{"file":"src/macros/main.rs","count":3,"kinds":{"Clippy(Warn)":["warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n","warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n","warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"]}},{"file":"src/macros/task.rs","count":3,"kinds":{"Clippy(Warn)":["warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n","warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n","warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-net-ppp","count":6,"raw_reports":[{"file":"src/lib.rs","count":6,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n","warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n","warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n","warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n","warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n","warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-net-wiznet","count":6,"raw_reports":[{"file":"src/lib.rs","count":4,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n","warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n","warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n","warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"]}},{"file":"src/chip/w5100s.rs","count":1,"kinds":{"Clippy(Warn)":["warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"]}},{"file":"src/chip/w5500.rs","count":1,"kinds":{"Clippy(Warn)":["warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"]}}]},{"user":"kern-crates","repo":"kernel_guard","pkg":"kernel_guard","count":6,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs","count":2,"kinds":{"Clippy(Error)":["error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"],"Mirai":["error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=kernel_guard, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_7/kern-crates/kernel_guard\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n     Locking 26 packages to latest compatible versions\n Downloading crates ...\n  Downloaded bitflags v1.3.2\n  Downloaded toml_datetime v0.6.8\n  Downloaded raw-cpuid v10.7.0\n  Downloaded toml_edit v0.22.22\n  Downloaded winnow v0.6.20\n  Downloaded x86 v0.52.0\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling x86 v0.52.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling indexmap v2.5.0\n    Checking bit_field v0.10.2\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking log v0.4.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking cfg-if v1.0.0\n   Compiling toml_edit v0.22.22\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: could not compile `axconfig` (build script) due to 1 previous error\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=kernel_guard, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_7/kern-crates/kernel_guard\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling x86 v0.52.0\n   Compiling bitflags v1.3.2\n   Compiling raw-cpuid v10.7.0\n   Compiling indexmap v2.5.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling bit_field v0.10.2\n   Compiling toml_edit v0.22.22\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling cfg-if v1.0.0\n   Compiling log v0.4.22\n[2024-10-01T01:50:32Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:50:32Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling static_assertions v1.1.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=kernel_guard, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_7/kern-crates/kernel_guard\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling x86 v0.52.0\n    Checking bitflags v1.3.2\n   Compiling indexmap v2.5.0\n    Checking raw-cpuid v10.7.0\n    Checking bit_field v0.10.2\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking cfg-if v1.0.0\n    Checking log v0.4.22\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: could not compile `axconfig` (build script) due to 2 previous errors\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T01:50:32Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:50:32Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"rvfs","pkg":"ramfs","count":6,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/pconst-00a979f5d6f6bfff/ed1dd3d/src/io.rs","count":2,"kinds":{"Mirai":["error[E0658]: use of unstable library feature 'offset_of'\n   --> /home/runner/.cargo/git/checkouts/pconst-00a979f5d6f6bfff/ed1dd3d/src/io.rs:439:9\n    |\n439 |         offset_of!(Self, name)\n    |         ^^^^^^^^^\n    |\n    = note: see issue #106655 <https://github.com/rust-lang/rust/issues/106655> for more information\n    = help: add `#![feature(offset_of)]` to the crate attributes to enable\n\n","error[E0658]: use of unstable library feature 'offset_of'\n --> /home/runner/.cargo/git/checkouts/pconst-00a979f5d6f6bfff/ed1dd3d/src/io.rs:1:24\n  |\n1 | use core::{fmt::Debug, mem::offset_of};\n  |                        ^^^^^^^^^^^^^^\n  |\n  = note: see issue #106655 <https://github.com/rust-lang/rust/issues/106655> for more information\n  = help: add `#![feature(offset_of)]` to the crate attributes to enable\n\n"]}},{"file":"vfscore/src/lib.rs","count":2,"kinds":{"Clippy(Warn)":["warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n","warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=ramfs, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/rvfs/ramfs\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling syn v2.0.79\n   Compiling pod-derive v0.1.0 (https://github.com/asterinas/pod?rev=d7dba56#d7dba56c)\n    Checking pod v0.1.0 (https://github.com/asterinas/pod?rev=d7dba56#d7dba56c)\n   Compiling proc-macro2-diagnostics v0.10.1\n   Compiling int-enum v1.1.2\n    Checking pconst v0.1.0 (https://github.com/os-module/pconst.git#ed1dd3dd)\nerror: could not compile `pconst` (lib) due to 3 previous errors\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:16:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:16:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"zcore-tests","pkg":"uart","count":6,"raw_reports":[{"file":"src/main.rs","count":3,"kinds":{"Clippy(Error)":["error[E0432]: unresolved imports `nix::fcntl::open`, `nix::fcntl::OFlag`, `nix::sys::stat`\n   --> src/main.rs:2:13\n    |\n2   |     fcntl::{open, OFlag},\n    |             ^^^^  ^^^^^ no `OFlag` in `fcntl`\n    |             |\n    |             no `open` in `fcntl`\n3   |     sys::stat::Mode,\n    |          ^^^^ could not find `stat` in `sys`\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/fcntl.rs:220:8\n    |\n220 | pub fn open<P: ?Sized + NixPath>(\n    |        ^^^^\nnote: the item is gated behind the `fs` feature\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/fcntl.rs:212:4\n    |\n212 | #![feature = \"fs\"]\n    |    ^^^^^^^\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/sys/mod.rs:128:13\n    |\n128 |     pub mod stat;\n    |             ^^^^\nnote: the item is gated behind the `fs` feature\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/sys/mod.rs:126:8\n    |\n126 |     #![feature = \"fs\"]\n    |        ^^^^^^^\n\n","error[E0432]: unresolved imports `nix::fcntl::open`, `nix::fcntl::OFlag`, `nix::sys::stat`\n   --> src/main.rs:2:13\n    |\n2   |     fcntl::{open, OFlag},\n    |             ^^^^  ^^^^^ no `OFlag` in `fcntl`\n    |             |\n    |             no `open` in `fcntl`\n3   |     sys::stat::Mode,\n    |          ^^^^ could not find `stat` in `sys`\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/fcntl.rs:220:8\n    |\n220 | pub fn open<P: ?Sized + NixPath>(\n    |        ^^^^\nnote: the item is gated behind the `fs` feature\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/fcntl.rs:212:4\n    |\n212 | #![feature = \"fs\"]\n    |    ^^^^^^^\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/sys/mod.rs:128:13\n    |\n128 |     pub mod stat;\n    |             ^^^^\nnote: the item is gated behind the `fs` feature\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/sys/mod.rs:126:8\n    |\n126 |     #![feature = \"fs\"]\n    |        ^^^^^^^\n\n","error[E0432]: unresolved imports `nix::fcntl::open`, `nix::fcntl::OFlag`, `nix::sys::stat`\n   --> src/main.rs:2:13\n    |\n2   |     fcntl::{open, OFlag},\n    |             ^^^^  ^^^^^ no `OFlag` in `fcntl`\n    |             |\n    |             no `open` in `fcntl`\n3   |     sys::stat::Mode,\n    |          ^^^^ could not find `stat` in `sys`\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/fcntl.rs:220:8\n    |\n220 | pub fn open<P: ?Sized + NixPath>(\n    |        ^^^^\nnote: the item is gated behind the `fs` feature\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/fcntl.rs:212:4\n    |\n212 | #![feature = \"fs\"]\n    |    ^^^^^^^\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/sys/mod.rs:128:13\n    |\n128 |     pub mod stat;\n    |             ^^^^\nnote: the item is gated behind the `fs` feature\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/sys/mod.rs:126:8\n    |\n126 |     #![feature = \"fs\"]\n    |        ^^^^^^^\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=uart, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_13/kern-crates/zcore-tests/testcases/src/uart\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n     Locking 5 packages to latest compatible versions\n   Compiling cfg_aliases v0.2.1\n   Compiling libc v0.2.159\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n   Compiling nix v0.29.0\n    Checking uart v0.1.0 (/home/runner/check/batch_13/kern-crates/zcore-tests/testcases/src/uart)\nerror: could not compile `uart` (bin \"uart\") due to 1 previous error\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=uart, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_13/kern-crates/zcore-tests/testcases/src/uart\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling libc v0.2.159\n   Compiling cfg_aliases v0.2.1\n   Compiling bitflags v2.6.0\n   Compiling cfg-if v1.0.0\n   Compiling nix v0.29.0\n   Compiling uart v0.1.0 (/home/runner/check/batch_13/kern-crates/zcore-tests/testcases/src/uart)\nerror[E0432]: unresolved imports `nix::fcntl::open`, `nix::fcntl::OFlag`, `nix::sys::stat`\n   --> src/main.rs:2:13\n    |\n2   |     fcntl::{open, OFlag},\n    |             ^^^^  ^^^^^ no `OFlag` in `fcntl`\n    |             |\n    |             no `open` in `fcntl`\n3   |     sys::stat::Mode,\n    |          ^^^^ could not find `stat` in `sys`\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/fcntl.rs:220:8\n    |\n220 | pub fn open<P: ?Sized + NixPath>(\n    |        ^^^^\n    = note: the item is gated behind the `fs` feature\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/sys/mod.rs:128:13\n    |\n128 |     pub mod stat;\n    |             ^^^^\n    = note: the item is gated behind the `fs` feature\n\nFor more information about this error, try `rustc --explain E0432`.\nerror: could not compile `uart` (bin \"uart\") due to 1 previous error\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=uart, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_13/kern-crates/zcore-tests/testcases/src/uart\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling libc v0.2.159\n   Compiling cfg_aliases v0.2.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling nix v0.29.0\nerror: failed to run custom build command for `libc v0.2.159`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_13/kern-crates/zcore-tests/testcases/src/uart/target/debug/build/libc-589343fc888734bf/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.159/build.rs:253:9:\n  Failed to get rustc version\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}}]},{"user":"kern-crates","repo":"rvfs","pkg":"vfscore","count":6,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/pconst-00a979f5d6f6bfff/ed1dd3d/src/io.rs","count":2,"kinds":{"Mirai":["error[E0658]: use of unstable library feature 'offset_of'\n   --> /home/runner/.cargo/git/checkouts/pconst-00a979f5d6f6bfff/ed1dd3d/src/io.rs:439:9\n    |\n439 |         offset_of!(Self, name)\n    |         ^^^^^^^^^\n    |\n    = note: see issue #106655 <https://github.com/rust-lang/rust/issues/106655> for more information\n    = help: add `#![feature(offset_of)]` to the crate attributes to enable\n\n","error[E0658]: use of unstable library feature 'offset_of'\n --> /home/runner/.cargo/git/checkouts/pconst-00a979f5d6f6bfff/ed1dd3d/src/io.rs:1:24\n  |\n1 | use core::{fmt::Debug, mem::offset_of};\n  |                        ^^^^^^^^^^^^^^\n  |\n  = note: see issue #106655 <https://github.com/rust-lang/rust/issues/106655> for more information\n  = help: add `#![feature(offset_of)]` to the crate attributes to enable\n\n"]}},{"file":"vfscore/src/lib.rs","count":2,"kinds":{"Clippy(Warn)":["warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n","warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=vfscore, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/rvfs/vfscore\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Finished dev [unoptimized + debuginfo] target(s) in 0.13s\n   Compiling log v0.4.22\n   Compiling pod v0.1.0 (https://github.com/asterinas/pod?rev=d7dba56#d7dba56c)\n   Compiling spin v0.9.8\n   Compiling pconst v0.1.0 (https://github.com/os-module/pconst.git#ed1dd3dd)\n   Compiling vfscore v0.1.0 (/home/runner/check/batch_10/kern-crates/rvfs/vfscore)\nerror: could not compile `pconst` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:16:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:16:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"zcore-zircon-object","pkg":"zircon-object","count":6,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs","count":2,"kinds":{"Clippy(Error)":["error[E0635]: unknown feature `btree_drain_filter`\n --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:2:12\n  |\n2 | #![feature(btree_drain_filter)]\n  |            ^^^^^^^^^^^^^^^^^^\n\n","error[E0599]: no method named `drain_filter` found for struct `BTreeSet` in the current scope\n   --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:120:14\n    |\n119 | /         self.regions\n120 | |             .drain_filter(|r| {\n    | |             -^^^^^^^^^^^^ method not found in `BTreeSet<Region>`\n    | |_____________|\n    |\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=zircon-object, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_13/kern-crates/zcore-zircon-object\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://github.com/kern-crates/zcore-kernel-hal.git`\n    Updating git repository `https://github.com/DeathWish5/kernel-sync`\n    Updating git repository `https://github.com/rzswh/region-allocator`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n    Updating git repository `https://github.com/smoltcp-rs/smoltcp`\n    Updating git repository `https://github.com/kern-crates/zcore-drivers.git`\n    Updating git repository `https://github.com/rcore-os/x86-smpboot`\n    Updating git repository `https://github.com/DeathWish5/PreemptiveScheduler`\n    Updating git repository `https://github.com/rust-embedded/riscv`\n    Updating git repository `https://github.com/rcore-os/device_tree-rs`\n    Updating git repository `https://github.com/rcore-os/isomorphic_drivers`\n    Updating git repository `https://github.com/elliott10/pci-rs`\n    Updating git repository `https://github.com/rcore-os/virtio-drivers`\n    Updating git repository `https://github.com/pleasewhy/unicycle`\n    Updating git repository `https://github.com/pleasewhy/uniset`\n     Locking 154 packages to latest compatible versions\n      Adding bitflags v1.3.2 (available: v2.6.0)\n      Adding hashbrown v0.9.1 (available: v0.14.5)\n      Adding xmas-elf v0.7.0 (available: v0.9.1)\n Downloading crates ...\n  Downloaded futures-channel v0.3.30\n  Downloaded futures-sink v0.3.30\n  Downloaded downcast-rs v1.2.1\n  Downloaded hashbrown v0.9.1\n  Downloaded futures v0.3.30\n  Downloaded ahash v0.4.8\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.86\n    Checking bit_field v0.10.2\n   Compiling autocfg v1.4.0\n    Checking value-bag v1.9.0\n   Compiling unicode-ident v1.0.13\n   Compiling rustversion v1.0.17\n    Checking log v0.4.22\n    Checking scopeguard v1.2.0\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling quote v1.0.37\n   Compiling syn v2.0.79\n    Checking volatile v0.4.6\n    Checking bitflags v2.6.0\n   Compiling paste v1.0.15\n    Checking x86_64 v0.14.12\n    Checking spin v0.9.8\n    Checking volatile v0.3.0\n    Checking rsdp v2.0.1\n    Checking cfg-if v1.0.0\n    Checking managed v0.8.0\n    Checking futures-sink v0.3.30\n    Checking futures-core v0.3.30\n    Checking byteorder v1.5.0\n   Compiling x86 v0.46.0\n   Compiling trapframe v0.9.0\n    Checking bit v0.1.1\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking acpi v4.1.1\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking x2apic v0.4.3\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking lazy_static v1.5.0\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n    Checking numeric-enum-macro v0.2.0\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.30\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking pin-project-lite v0.2.14\n    Checking futures-channel v0.3.30\n    Checking ahash v0.4.8\n    Checking futures-io v0.3.30\n    Checking hashbrown v0.9.1\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n    Checking region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\nerror: could not compile `region-alloc` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=zircon-object, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_13/kern-crates/zcore-zircon-object\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n   Compiling autocfg v1.4.0\n   Compiling value-bag v1.9.0\n   Compiling unicode-ident v1.0.13\n   Compiling rustversion v1.0.17\n   Compiling log v0.4.22\n   Compiling scopeguard v1.2.0\n[2024-10-01T02:09:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:09:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling quote v1.0.37\n   Compiling syn v2.0.79\n   Compiling bitflags v2.6.0\n   Compiling volatile v0.4.6\n   Compiling spin v0.9.8\n   Compiling x86_64 v0.14.12\n   Compiling paste v1.0.15\n   Compiling volatile v0.3.0\n   Compiling rsdp v2.0.1\n   Compiling managed v0.8.0\n   Compiling cfg-if v1.0.0\n   Compiling bit v0.1.1\n   Compiling byteorder v1.5.0\n   Compiling futures-core v0.3.30\n   Compiling futures-sink v0.3.30\n   Compiling trapframe v0.9.0\n   Compiling x86 v0.46.0\n   Compiling smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n   Compiling acpi v4.1.1\n   Compiling lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n   Compiling x2apic v0.4.3\n   Compiling virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n   Compiling isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n   Compiling lazy_static v1.5.0\n   Compiling pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n   Compiling futures-task v0.3.30\n   Compiling numeric-enum-macro v0.2.0\n   Compiling device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling futures-channel v0.3.30\n   Compiling futures-io v0.3.30\n   Compiling zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n   Compiling ahash v0.4.8\n   Compiling hashbrown v0.9.1\n   Compiling downcast-rs v1.2.1\n   Compiling region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\nerror[E0635]: unknown feature `btree_drain_filter`\n --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:2:12\n  |\n2 | #![feature(btree_drain_filter)]\n  |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `drain_filter` found for struct `alloc::collections::BTreeSet` in the current scope\n   --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:120:14\n    |\n119 | /         self.regions\n120 | |             .drain_filter(|r| {\n    | |             -^^^^^^^^^^^^ method not found in `BTreeSet<Region>`\n    | |_____________|\n    |\n\nSome errors have detailed explanations: E0599, E0635.\nFor more information about an error, try `rustc --explain E0599`.\nerror: could not compile `region-alloc` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=zircon-object, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_13/kern-crates/zcore-zircon-object\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n   Compiling autocfg v1.4.0\n   Compiling unicode-ident v1.0.13\n    Checking value-bag v1.9.0\n   Compiling rustversion v1.0.17\n    Checking log v0.4.22\n    Checking scopeguard v1.2.0\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_13/kern-crates/zcore-zircon-object/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:09:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:09:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"zcore-zircon-syscall","pkg":"zircon-syscall","count":6,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs","count":2,"kinds":{"Clippy(Error)":["error[E0635]: unknown feature `btree_drain_filter`\n --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:2:12\n  |\n2 | #![feature(btree_drain_filter)]\n  |            ^^^^^^^^^^^^^^^^^^\n\n","error[E0599]: no method named `drain_filter` found for struct `BTreeSet` in the current scope\n   --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:120:14\n    |\n119 | /         self.regions\n120 | |             .drain_filter(|r| {\n    | |             -^^^^^^^^^^^^ method not found in `BTreeSet<Region>`\n    | |_____________|\n    |\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=zircon-syscall, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_13/kern-crates/zcore-zircon-syscall\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://github.com/kern-crates/zcore-kernel-hal.git`\n    Updating git repository `https://github.com/DeathWish5/kernel-sync`\n    Updating git repository `https://github.com/kern-crates/zcore-zircon-object.git`\n    Updating git repository `https://github.com/smoltcp-rs/smoltcp`\n    Updating git repository `https://github.com/kern-crates/zcore-drivers.git`\n    Updating git repository `https://github.com/rcore-os/x86-smpboot`\n    Updating git repository `https://github.com/DeathWish5/PreemptiveScheduler`\n    Updating git repository `https://github.com/rust-embedded/riscv`\n    Updating git repository `https://github.com/rzswh/region-allocator`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n    Updating git repository `https://github.com/rcore-os/device_tree-rs`\n    Updating git repository `https://github.com/rcore-os/isomorphic_drivers`\n    Updating git repository `https://github.com/elliott10/pci-rs`\n    Updating git repository `https://github.com/rcore-os/virtio-drivers`\n    Updating git repository `https://github.com/pleasewhy/unicycle`\n    Updating git repository `https://github.com/pleasewhy/uniset`\n     Locking 87 packages to latest compatible versions\n      Adding bitflags v1.3.2 (available: v2.6.0)\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.86\n    Checking bit_field v0.10.2\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.4.0\n    Checking log v0.4.22\n   Compiling rustversion v1.0.17\n    Checking scopeguard v1.2.0\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling quote v1.0.37\n   Compiling syn v2.0.79\n    Checking volatile v0.4.6\n    Checking bitflags v2.6.0\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n    Checking x86_64 v0.14.12\n    Checking volatile v0.3.0\n    Checking rsdp v2.0.1\n    Checking byteorder v1.5.0\n    Checking futures-core v0.3.30\n    Checking futures-sink v0.3.30\n    Checking managed v0.8.0\n    Checking cfg-if v1.0.0\n   Compiling trapframe v0.9.0\n    Checking bit v0.1.1\n   Compiling x86 v0.46.0\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking acpi v4.1.1\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking x2apic v0.4.3\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking lazy_static v1.5.0\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking pin-project-lite v0.2.14\n    Checking futures-task v0.3.30\n    Checking numeric-enum-macro v0.2.0\n    Checking pin-utils v0.1.0\n    Checking futures-channel v0.3.30\n    Checking futures-io v0.3.30\n    Checking ahash v0.4.8\n    Checking hashbrown v0.9.1\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n    Checking downcast-rs v1.2.1\n   Compiling zircon-syscall v0.1.0 (/home/runner/check/batch_13/kern-crates/zcore-zircon-syscall)\n    Checking region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\nerror: could not compile `region-alloc` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=zircon-syscall, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_13/kern-crates/zcore-zircon-syscall\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling bitflags v1.3.2\n   Compiling proc-macro2 v1.0.86\n   Compiling bit_field v0.10.2\n   Compiling autocfg v1.4.0\n   Compiling unicode-ident v1.0.13\n   Compiling rustversion v1.0.17\n   Compiling log v0.4.22\n[2024-10-01T02:09:30Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:09:30Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling scopeguard v1.2.0\n   Compiling raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling quote v1.0.37\n   Compiling syn v2.0.79\n   Compiling bitflags v2.6.0\n   Compiling volatile v0.4.6\n   Compiling spin v0.9.8\n   Compiling x86_64 v0.14.12\n   Compiling paste v1.0.15\n   Compiling volatile v0.3.0\n   Compiling rsdp v2.0.1\n   Compiling x86 v0.46.0\n   Compiling futures-sink v0.3.30\n   Compiling byteorder v1.5.0\n   Compiling trapframe v0.9.0\n   Compiling bit v0.1.1\n   Compiling cfg-if v1.0.0\n   Compiling managed v0.8.0\n   Compiling futures-core v0.3.30\n   Compiling acpi v4.1.1\n   Compiling smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n   Compiling x2apic v0.4.3\n   Compiling lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n   Compiling isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n   Compiling virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n   Compiling lazy_static v1.5.0\n   Compiling pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n   Compiling numeric-enum-macro v0.2.0\n   Compiling device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n   Compiling futures-task v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling futures-channel v0.3.30\n   Compiling futures-io v0.3.30\n   Compiling ahash v0.4.8\n   Compiling hashbrown v0.9.1\n   Compiling zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n   Compiling zircon-syscall v0.1.0 (/home/runner/check/batch_13/kern-crates/zcore-zircon-syscall)\n   Compiling region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\nerror[E0635]: unknown feature `btree_drain_filter`\n --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:2:12\n  |\n2 | #![feature(btree_drain_filter)]\n  |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `drain_filter` found for struct `alloc::collections::BTreeSet` in the current scope\n   --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:120:14\n    |\n119 | /         self.regions\n120 | |             .drain_filter(|r| {\n    | |             -^^^^^^^^^^^^ method not found in `BTreeSet<Region>`\n    | |_____________|\n    |\n\nSome errors have detailed explanations: E0599, E0635.\nFor more information about an error, try `rustc --explain E0599`.\nerror: could not compile `region-alloc` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=zircon-syscall, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_13/kern-crates/zcore-zircon-syscall\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.86\n    Checking bit_field v0.10.2\n   Compiling autocfg v1.4.0\n   Compiling unicode-ident v1.0.13\n   Compiling rustversion v1.0.17\n    Checking log v0.4.22\n    Checking scopeguard v1.2.0\n    Checking raw-cpuid v10.7.0\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_13/kern-crates/zcore-zircon-syscall/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:09:30Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:09:30Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"allocator","pkg":"allocator","count":5,"raw_reports":[{"file":"src/lib.rs","count":4,"kinds":{"Clippy(Warn)":["warning: function `align_down` is never used\n   --> src/lib.rs:126:10\n    |\n126 | const fn align_down(pos: usize, align: usize) -> usize {\n    |          ^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n","warning: function `align_up` is never used\n   --> src/lib.rs:131:10\n    |\n131 | const fn align_up(pos: usize, align: usize) -> usize {\n    |          ^^^^^^^^\n\n"],"Mirai":["warning: function `align_down` is never used\n   --> src/lib.rs:126:10\n    |\n126 | const fn align_down(pos: usize, align: usize) -> usize {\n    |          ^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n","warning: function `align_up` is never used\n   --> src/lib.rs:131:10\n    |\n131 | const fn align_up(pos: usize, align: usize) -> usize {\n    |          ^^^^^^^^\n\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=allocator, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_2/kern-crates/allocator\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking allocator v0.1.0 (/home/runner/check/batch_2/kern-crates/allocator)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.19s\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling libc v0.2.159\n   Compiling cfg-if v1.0.0\n   Compiling crossbeam-utils v0.8.20\n   Compiling serde v1.0.210\n   Compiling autocfg v1.4.0\nerror: failed to run custom build command for `libc v0.2.159`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_2/kern-crates/allocator/target/debug/build/libc-82add201c3d4e665/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.159/build.rs:253:9:\n  Failed to get rustc version\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}}]},{"user":"kern-crates","repo":"arceos_api","pkg":"arceos_api","count":5,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs","count":1,"kinds":{"Clippy(Error)":["error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=arceos_api, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_2/kern-crates/arceos_api\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/axalloc.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/axdisplay.git`\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating git repository `https://github.com/Starry-OS/axfeat.git`\n    Updating git repository `https://github.com/Starry-OS/axfs.git`\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating git repository `https://github.com/Starry-OS/axio.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/axnet.git`\n    Updating git repository `https://github.com/Starry-OS/axruntime.git`\n    Updating git repository `https://github.com/Starry-OS/axtask.git`\n    Updating git repository `https://github.com/Starry-OS/allocator.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/axdriver.git`\n    Updating git repository `https://github.com/Starry-OS/axsync.git`\n    Updating git repository `https://github.com/Starry-OS/driver_display.git`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_devfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_ramfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_vfs.git`\n    Updating git repository `https://github.com/Starry-OS/capability.git`\n    Updating git repository `https://github.com/Starry-OS/driver_block.git`\n    Updating git repository `https://github.com/rafalh/rust-fatfs`\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/Starry-OS/driver_net.git`\n    Updating git repository `https://github.com/rcore-os/smoltcp.git`\n    Updating git repository `https://github.com/kern-crates/axbacktrace.git`\n    Updating git repository `https://github.com/Starry-OS/axsignal.git`\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/Starry-OS/scheduler.git`\n    Updating git repository `https://github.com/Starry-OS/timer_list.git`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n    Updating git repository `https://github.com/Starry-OS/driver_common.git`\n    Updating git repository `https://github.com/Starry-OS/driver_pci.git`\n    Updating git repository `https://github.com/Starry-OS/driver_virtio.git`\n    Updating git repository `https://github.com/Starry-OS/page_table.git`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n     Locking 119 packages to latest compatible versions\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.14.5\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.13\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.4.0\n    Checking log v0.4.22\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n    Checking bitflags v2.6.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking scopeguard v1.2.0\n   Compiling syn v2.0.79\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=arceos_api, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_2/kern-crates/arceos_api\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling bit_field v0.10.2\n   Compiling bitflags v1.3.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n   Compiling raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling log v0.4.22\n   Compiling lock_api v0.4.12\n[2024-10-01T02:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling cfg-if v1.0.0\n   Compiling rustversion v1.0.17\n   Compiling quote v1.0.37\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling scopeguard v1.2.0\n   Compiling bitflags v2.6.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling syn v2.0.79\n   Compiling static_assertions v1.1.0\n   Compiling volatile v0.4.6\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=arceos_api, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_2/kern-crates/arceos_api\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n    Checking raw-cpuid v10.7.0\n    Checking log v0.4.22\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling x86 v0.52.0\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\n    Checking cfg-if v1.0.0\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_2/kern-crates/arceos_api/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"arceos_posix_api","pkg":"arceos_posix_api","count":5,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs","count":1,"kinds":{"Clippy(Error)":["error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=arceos_posix_api, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_2/kern-crates/arceos_posix_api\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/axalloc.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating git repository `https://github.com/Starry-OS/axfeat.git`\n    Updating git repository `https://github.com/Starry-OS/axfs.git`\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating git repository `https://github.com/Starry-OS/axio.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/axnet.git`\n    Updating git repository `https://github.com/Starry-OS/axruntime.git`\n    Updating git repository `https://github.com/Starry-OS/axsync.git`\n    Updating git repository `https://github.com/Starry-OS/axtask.git`\n    Updating git repository `https://github.com/Starry-OS/flatten_objects.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/allocator.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/axdriver.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_devfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_ramfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_vfs.git`\n    Updating git repository `https://github.com/Starry-OS/capability.git`\n    Updating git repository `https://github.com/Starry-OS/driver_block.git`\n    Updating git repository `https://github.com/rafalh/rust-fatfs`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/Starry-OS/driver_net.git`\n    Updating git repository `https://github.com/rcore-os/smoltcp.git`\n    Updating git repository `https://github.com/kern-crates/axbacktrace.git`\n    Updating git repository `https://github.com/Starry-OS/axsignal.git`\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/Starry-OS/scheduler.git`\n    Updating git repository `https://github.com/Starry-OS/timer_list.git`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n    Updating git repository `https://github.com/Starry-OS/driver_common.git`\n    Updating git repository `https://github.com/Starry-OS/driver_pci.git`\n    Updating git repository `https://github.com/Starry-OS/driver_virtio.git`\n    Updating git repository `https://github.com/Starry-OS/page_table.git`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n     Locking 152 packages to latest compatible versions\n      Adding bindgen v0.66.1 (available: v0.70.1)\n Downloading crates ...\n  Downloaded peeking_take_while v0.1.2\n  Downloaded minimal-lexical v0.2.1\n  Downloaded home v0.5.9\n  Downloaded which v4.4.2\n  Downloaded lazycell v1.3.0\n  Downloaded prettyplease v0.2.22\n  Downloaded nom v7.1.3\n  Downloaded clang-sys v1.8.1\n  Downloaded glob v0.3.1\n  Downloaded bindgen v0.66.1\n  Downloaded cexpr v0.6.0\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.210\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.86\n   Compiling toml_datetime v0.6.8\n   Compiling unicode-ident v1.0.13\n   Compiling indexmap v2.5.0\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.37\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling syn v2.0.79\n   Compiling toml_edit v0.22.22\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.4.0\n    Checking log v0.4.22\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=arceos_posix_api, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_2/kern-crates/arceos_posix_api\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling proc-macro2 v1.0.86\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling unicode-ident v1.0.13\n   Compiling indexmap v2.5.0\n   Compiling bit_field v0.10.2\n   Compiling quote v1.0.37\n   Compiling bitflags v1.3.2\n   Compiling raw-cpuid v10.7.0\n   Compiling syn v2.0.79\n   Compiling toml_edit v0.22.22\n   Compiling log v0.4.22\n[2024-10-01T02:04:58Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:04:58Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling autocfg v1.4.0\n   Compiling x86 v0.52.0\n   Compiling rustversion v1.0.17\n   Compiling lock_api v0.4.12\n   Compiling cfg-if v1.0.0\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling bitflags v2.6.0\n   Compiling scopeguard v1.2.0\n   Compiling static_assertions v1.1.0\n   Compiling volatile v0.4.6\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling aarch64-cpu v9.4.0\n   Compiling lazy_static v1.5.0\n   Compiling x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=arceos_posix_api, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_2/kern-crates/arceos_posix_api\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.14.5\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n   Compiling unicode-ident v1.0.13\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.79\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking log v0.4.22\n   Compiling autocfg v1.4.0\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.17\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_2/kern-crates/arceos_posix_api/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:04:58Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:04:58Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"axalloc","pkg":"axalloc","count":5,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs","count":1,"kinds":{"Clippy(Error)":["error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axalloc, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_2/kern-crates/axalloc\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/allocator.git`\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n    Updating git repository `https://github.com/arceos-org/slab_allocator.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n     Locking 41 packages to latest compatible versions\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.86\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n   Compiling unicode-ident v1.0.13\n   Compiling indexmap v2.5.0\n   Compiling x86 v0.52.0\n   Compiling syn v1.0.109\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n    Checking raw-cpuid v10.7.0\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n    Checking log v0.4.22\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling libc v0.2.159\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling unicode-width v0.1.14\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking static_assertions v1.1.0\n   Compiling base64 v0.13.1\n    Checking const-default v1.0.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axalloc, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_2/kern-crates/axalloc\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.86\n   Compiling toml_datetime v0.6.8\n   Compiling unicode-ident v1.0.13\n   Compiling bit_field v0.10.2\n   Compiling indexmap v2.5.0\n   Compiling syn v1.0.109\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v1.3.2\n   Compiling x86 v0.52.0\n   Compiling raw-cpuid v10.7.0\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling libc v0.2.159\n   Compiling log v0.4.22\n[2024-10-01T02:05:30Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:05:30Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n   Compiling static_assertions v1.1.0\n   Compiling const-default v1.0.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling svgbobdoc v0.3.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=axalloc, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_2/kern-crates/axalloc\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.210\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.86\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n   Compiling indexmap v2.5.0\n   Compiling unicode-ident v1.0.13\n    Checking cfg-if v1.0.0\n   Compiling x86 v0.52.0\n    Checking bitflags v1.3.2\n   Compiling syn v1.0.109\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking log v0.4.22\n   Compiling libc v0.2.159\nerror: failed to run custom build command for `libc v0.2.159`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_2/kern-crates/axalloc/target/debug/build/libc-82add201c3d4e665/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.159/build.rs:253:9:\n  Failed to get rustc version\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:05:30Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:05:30Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"axdisplay","pkg":"axdisplay","count":5,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs","count":1,"kinds":{"Clippy(Error)":["error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axdisplay, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_3/kern-crates/axdisplay\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/axdriver.git`\n    Updating git repository `https://github.com/Starry-OS/axsync.git`\n    Updating git repository `https://github.com/Starry-OS/driver_display.git`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating git repository `https://github.com/Starry-OS/driver_common.git`\n    Updating git repository `https://github.com/Starry-OS/driver_pci.git`\n    Updating git repository `https://github.com/Starry-OS/axtask.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/kern-crates/axbacktrace.git`\n    Updating git repository `https://github.com/Starry-OS/axsignal.git`\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n     Locking 76 packages to latest compatible versions\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling proc-macro2 v1.0.86\n   Compiling serde v1.0.210\n   Compiling unicode-ident v1.0.13\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.5.0\n   Compiling quote v1.0.37\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.79\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.22\n    Checking log v0.4.22\n   Compiling x86 v0.52.0\n    Checking bitflags v2.6.0\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.17\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axdisplay, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_3/kern-crates/axdisplay\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling serde v1.0.210\n   Compiling proc-macro2 v1.0.86\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling unicode-ident v1.0.13\n   Compiling indexmap v2.5.0\n   Compiling quote v1.0.37\n   Compiling bit_field v0.10.2\n   Compiling bitflags v1.3.2\n   Compiling raw-cpuid v10.7.0\n   Compiling syn v2.0.79\n   Compiling toml_edit v0.22.22\n   Compiling log v0.4.22\n[2024-10-01T02:11:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:11:10Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bitflags v2.6.0\n   Compiling autocfg v1.4.0\n   Compiling x86 v0.52.0\n   Compiling rustversion v1.0.17\n   Compiling lock_api v0.4.12\n   Compiling cfg-if v1.0.0\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling volatile v0.4.6\n   Compiling static_assertions v1.1.0\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling aarch64-cpu v9.4.0\n   Compiling lazy_static v1.5.0\n   Compiling x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=axdisplay, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_3/kern-crates/axdisplay\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling hashbrown v0.14.5\n   Compiling proc-macro2 v1.0.86\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling unicode-ident v1.0.13\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.5.0\n   Compiling quote v1.0.37\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.79\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.22\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.4.0\n    Checking log v0.4.22\n    Checking bitflags v2.6.0\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\n    Checking cfg-if v1.0.0\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_3/kern-crates/axdisplay/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:11:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:11:10Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"axfeat","pkg":"axfeat","count":5,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs","count":1,"kinds":{"Clippy(Error)":["error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axfeat, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_3/kern-crates/axfeat\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/axalloc.git`\n    Updating git repository `https://github.com/Starry-OS/axdisplay.git`\n    Updating git repository `https://github.com/Starry-OS/axdriver.git`\n    Updating git repository `https://github.com/Starry-OS/axfs.git`\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/axnet.git`\n    Updating git repository `https://github.com/Starry-OS/axprocess.git`\n    Updating git repository `https://github.com/Starry-OS/axruntime.git`\n    Updating git repository `https://github.com/Starry-OS/axsync.git`\n    Updating git repository `https://github.com/Starry-OS/axtask.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/allocator.git`\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/driver_display.git`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/driver_block.git`\n    Updating git repository `https://github.com/Starry-OS/driver_common.git`\n    Updating git repository `https://github.com/Starry-OS/driver_net.git`\n    Updating git repository `https://github.com/Starry-OS/driver_pci.git`\n    Updating git repository `https://github.com/Starry-OS/driver_virtio.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_devfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_ramfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_vfs.git`\n    Updating git repository `https://github.com/Starry-OS/axio.git`\n    Updating git repository `https://github.com/Starry-OS/capability.git`\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/yuoo655/ext4_rs.git`\n    Updating git repository `https://github.com/rafalh/rust-fatfs`\n    Updating git repository `https://github.com/elliott10/lwext4_rust.git`\n    Updating git submodule `https://github.com/gkostka/lwext4.git`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/rcore-os/smoltcp.git`\n    Updating git repository `https://github.com/Starry-OS/axfutex.git`\n    Updating git repository `https://github.com/Starry-OS/axmem.git`\n    Updating git repository `https://github.com/Starry-OS/axsignal.git`\n    Updating git repository `https://github.com/Starry-OS/elf_parser.git`\n    Updating git repository `https://github.com/kern-crates/axbacktrace.git`\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/Starry-OS/scheduler.git`\n    Updating git repository `https://github.com/Starry-OS/timer_list.git`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n    Updating git repository `https://github.com/arceos-org/slab_allocator.git`\n    Updating git repository `https://github.com/lhw2002426/bcm2835-sdhci.git`\n    Updating git repository `https://github.com/KuangjuX/ixgbe-driver.git`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n    Updating git repository `https://github.com/rcore-os/smoltcp.git`\n     Locking 155 packages to latest compatible versions\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.210\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n    Checking bitflags v1.3.2\n   Compiling indexmap v2.5.0\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking bitflags v2.6.0\n    Checking log v0.4.22\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.79\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking x86_64 v0.14.12\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axfeat, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_3/kern-crates/axfeat\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling bit_field v0.10.2\n   Compiling bitflags v1.3.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n   Compiling raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling x86 v0.52.0\n   Compiling lock_api v0.4.12\n   Compiling cfg-if v1.0.0\n   Compiling rustversion v1.0.17\n   Compiling quote v1.0.37\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling scopeguard v1.2.0\n   Compiling log v0.4.22\n[2024-10-01T02:11:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:11:59Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bitflags v2.6.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling syn v2.0.79\n   Compiling static_assertions v1.1.0\n   Compiling volatile v0.4.6\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling aarch64-cpu v9.4.0\n   Compiling lazy_static v1.5.0\n   Compiling x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=axfeat, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_3/kern-crates/axfeat\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.14.5\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling unicode-ident v1.0.13\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\n    Checking cfg-if v1.0.0\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_3/kern-crates/axfeat/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:11:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:11:59Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"axhal","pkg":"axhal","count":5,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs","count":1,"kinds":{"Clippy(Error)":["error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axhal, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axhal\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/axalloc.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_ramfs.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/Starry-OS/allocator.git`\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_vfs.git`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n     Locking 78 packages to latest compatible versions\n      Adding riscv v0.10.1 (available: v0.11.1)\n      Adding sbi-rt v0.0.2 (available: v0.0.3)\n      Adding tock-registers v0.8.1 (available: v0.9.0)\n      Adding x86_64 v0.14.12 (available: v0.15.1)\n Downloading crates ...\n  Downloaded raw-cpuid v11.1.0\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.4.0\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n    Checking scopeguard v1.2.0\n   Compiling syn v2.0.79\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking log v0.4.22\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.14.12\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\n    Checking lazy_static v1.5.0\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axhal, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axhal\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling bit_field v0.10.2\n   Compiling bitflags v1.3.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n   Compiling raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling unicode-ident v1.0.13\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\n   Compiling quote v1.0.37\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v2.6.0\n   Compiling scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.79\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling static_assertions v1.1.0\n   Compiling volatile v0.4.6\n   Compiling log v0.4.22\n[2024-10-01T01:56:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:56:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling lazy_static v1.5.0\n   Compiling x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=axhal, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axhal\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_4/kern-crates/axhal/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T01:56:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:56:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"axmem","pkg":"axmem","count":5,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs","count":1,"kinds":{"Clippy(Error)":["error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axmem, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axmem\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/axalloc.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating git repository `https://github.com/Starry-OS/axfs.git`\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating git repository `https://github.com/Starry-OS/axio.git`\n    Updating git repository `https://github.com/Starry-OS/elf_parser.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/allocator.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/axdriver.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_devfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_ramfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_vfs.git`\n    Updating git repository `https://github.com/Starry-OS/axsync.git`\n    Updating git repository `https://github.com/Starry-OS/capability.git`\n    Updating git repository `https://github.com/Starry-OS/driver_block.git`\n    Updating git repository `https://github.com/rafalh/rust-fatfs`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n    Updating git repository `https://github.com/Starry-OS/driver_common.git`\n    Updating git repository `https://github.com/Starry-OS/driver_pci.git`\n    Updating git repository `https://github.com/Starry-OS/axtask.git`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/kern-crates/axbacktrace.git`\n    Updating git repository `https://github.com/Starry-OS/axsignal.git`\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n     Locking 105 packages to latest compatible versions\n      Adding riscv v0.10.1 (available: v0.11.1)\n Downloading crates ...\n  Downloaded zerocopy-derive v0.7.35\n  Downloaded enumn v0.1.14\n  Downloaded virtio-drivers v0.7.5\n  Downloaded critical-section v1.1.3\n   Compiling proc-macro2 v1.0.86\n    Checking log v0.4.22\n   Compiling unicode-ident v1.0.13\n    Checking bit_field v0.10.2\n   Compiling equivalent v1.0.1\n    Checking bitflags v2.6.0\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.210\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling quote v1.0.37\n   Compiling indexmap v2.5.0\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.79\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking bitflags v1.3.2\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n   Compiling rustversion v1.0.17\n   Compiling x86 v0.52.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking volatile v0.4.6\n   Compiling syn v1.0.109\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling libc v0.2.159\n    Checking static_assertions v1.1.0\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axmem, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axmem\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling log v0.4.22\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling bit_field v0.10.2\n   Compiling hashbrown v0.14.5\n   Compiling bitflags v2.6.0\n[2024-10-01T01:57:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:57:21Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.5.0\n   Compiling quote v1.0.37\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v1.3.2\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling syn v2.0.79\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling raw-cpuid v10.7.0\n   Compiling rustversion v1.0.17\n   Compiling x86 v0.52.0\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling volatile v0.4.6\n   Compiling syn v1.0.109\n   Compiling spin v0.9.8\n   Compiling static_assertions v1.1.0\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling libc v0.2.159\n   Compiling tock-registers v0.8.1\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=axmem, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axmem\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking log v0.4.22\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n    Checking bit_field v0.10.2\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n    Checking bitflags v2.6.0\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.5.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.79\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling rustversion v1.0.17\n   Compiling x86 v0.52.0\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_4/kern-crates/axmem/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T01:57:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:57:21Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"axruntime","pkg":"axruntime","count":5,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs","count":1,"kinds":{"Clippy(Error)":["error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axruntime, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_5/kern-crates/axruntime\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/axalloc.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/axdisplay.git`\n    Updating git repository `https://github.com/Starry-OS/axdriver.git`\n    Updating git repository `https://github.com/Starry-OS/axfs.git`\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/axmem.git`\n    Updating git repository `https://github.com/Starry-OS/axnet.git`\n    Updating git repository `https://github.com/Starry-OS/axprocess.git`\n    Updating git repository `https://github.com/Starry-OS/axtask.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/allocator.git`\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/axsync.git`\n    Updating git repository `https://github.com/Starry-OS/driver_display.git`\n    Updating git repository `https://github.com/Starry-OS/driver_block.git`\n    Updating git repository `https://github.com/Starry-OS/driver_common.git`\n    Updating git repository `https://github.com/Starry-OS/driver_pci.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_devfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_ramfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_vfs.git`\n    Updating git repository `https://github.com/Starry-OS/axio.git`\n    Updating git repository `https://github.com/Starry-OS/capability.git`\n    Updating git repository `https://github.com/rafalh/rust-fatfs`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/Starry-OS/elf_parser.git`\n    Updating git repository `https://github.com/Starry-OS/driver_net.git`\n    Updating git repository `https://github.com/rcore-os/smoltcp.git`\n    Updating git repository `https://github.com/Starry-OS/axfutex.git`\n    Updating git repository `https://github.com/Starry-OS/axsignal.git`\n    Updating git repository `https://github.com/kern-crates/axbacktrace.git`\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/Starry-OS/scheduler.git`\n    Updating git repository `https://github.com/Starry-OS/timer_list.git`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n     Locking 133 packages to latest compatible versions\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.13\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking scopeguard v1.2.0\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.79\n    Checking static_assertions v1.1.0\n    Checking log v0.4.22\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axruntime, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_5/kern-crates/axruntime\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n   Compiling bitflags v1.3.2\n   Compiling raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling cfg-if v1.0.0\n   Compiling scopeguard v1.2.0\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling bitflags v2.6.0\n   Compiling syn v2.0.79\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling log v0.4.22\n[2024-10-01T02:20:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:20:37Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling volatile v0.4.6\n   Compiling static_assertions v1.1.0\n   Compiling spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling lazy_static v1.5.0\n   Compiling x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=axruntime, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_5/kern-crates/axruntime\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.210\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n    Checking raw-cpuid v10.7.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling unicode-ident v1.0.13\n   Compiling x86 v0.52.0\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_5/kern-crates/axruntime/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:20:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:20:37Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"axsignal","pkg":"axsignal","count":5,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs","count":1,"kinds":{"Clippy(Error)":["error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axsignal, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_5/kern-crates/axsignal\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n     Locking 62 packages to latest compatible versions\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n    Checking bitflags v1.3.2\n   Compiling indexmap v2.5.0\n    Checking raw-cpuid v10.7.0\n   Compiling autocfg v1.4.0\n   Compiling unicode-ident v1.0.13\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\n   Compiling quote v1.0.37\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.79\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking log v0.4.22\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axsignal, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_5/kern-crates/axsignal\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.210\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n   Compiling bitflags v1.3.2\n   Compiling indexmap v2.5.0\n   Compiling raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling x86 v0.52.0\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\n   Compiling quote v1.0.37\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling cfg-if v1.0.0\n   Compiling scopeguard v1.2.0\n   Compiling bitflags v2.6.0\n   Compiling syn v2.0.79\n   Compiling log v0.4.22\n[2024-10-01T02:21:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:21:00Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling volatile v0.4.6\n   Compiling static_assertions v1.1.0\n   Compiling spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling lazy_static v1.5.0\n   Compiling x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=axsignal, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_5/kern-crates/axsignal\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.210\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_5/kern-crates/axsignal/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:21:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:21:00Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"axstarry","pkg":"axstarry","count":5,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs","count":1,"kinds":{"Clippy(Error)":["error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axstarry, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_5/kern-crates/axstarry\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/arch_boot.git`\n    Updating git repository `https://github.com/Starry-OS/axfeat.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/linux_syscall_api.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating git repository `https://github.com/Starry-OS/axruntime.git`\n    Updating git repository `https://github.com/Starry-OS/axtrap.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/axalloc.git`\n    Updating git repository `https://github.com/Starry-OS/axdisplay.git`\n    Updating git repository `https://github.com/Starry-OS/axdriver.git`\n    Updating git repository `https://github.com/Starry-OS/axfs.git`\n    Updating git repository `https://github.com/Starry-OS/axnet.git`\n    Updating git repository `https://github.com/Starry-OS/axprocess.git`\n    Updating git repository `https://github.com/Starry-OS/axsync.git`\n    Updating git repository `https://github.com/Starry-OS/axtask.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating git repository `https://github.com/Starry-OS/axfutex.git`\n    Updating git repository `https://github.com/Starry-OS/axmem.git`\n    Updating git repository `https://github.com/Starry-OS/axsignal.git`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/Starry-OS/allocator.git`\n    Updating git repository `https://github.com/Starry-OS/driver_display.git`\n    Updating git repository `https://github.com/Starry-OS/driver_block.git`\n    Updating git repository `https://github.com/Starry-OS/driver_common.git`\n    Updating git repository `https://github.com/Starry-OS/driver_net.git`\n    Updating git repository `https://github.com/Starry-OS/driver_pci.git`\n    Updating git repository `https://github.com/Starry-OS/driver_virtio.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_devfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_ramfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_vfs.git`\n    Updating git repository `https://github.com/Starry-OS/axio.git`\n    Updating git repository `https://github.com/Starry-OS/capability.git`\n    Updating git repository `https://github.com/yuoo655/ext4_rs.git`\n    Updating git repository `https://github.com/rafalh/rust-fatfs`\n    Updating git repository `https://github.com/elliott10/lwext4_rust.git`\n    Updating git repository `https://github.com/Starry-OS/page_table.git`\n    Updating git repository `https://github.com/rcore-os/smoltcp.git`\n    Updating git repository `https://github.com/Starry-OS/elf_parser.git`\n    Updating git repository `https://github.com/kern-crates/axbacktrace.git`\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n    Updating git repository `https://github.com/Starry-OS/scheduler.git`\n    Updating git repository `https://github.com/Starry-OS/timer_list.git`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n     Locking 149 packages to latest compatible versions\n Downloading crates ...\n  Downloaded getrandom v0.2.15\n  Downloaded hashbrown v0.11.2\n  Downloaded ahash v0.7.8\n   Compiling proc-macro2 v1.0.86\n    Checking log v0.4.22\n   Compiling unicode-ident v1.0.13\n    Checking bit_field v0.10.2\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bitflags v2.6.0\n   Compiling quote v1.0.37\n   Compiling indexmap v2.5.0\n    Checking cfg-if v1.0.0\n   Compiling autocfg v1.4.0\n   Compiling syn v2.0.79\n   Compiling lock_api v0.4.12\n   Compiling toml_edit v0.22.22\n    Checking bitflags v1.3.2\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking raw-cpuid v10.7.0\n   Compiling syn v1.0.109\n   Compiling x86 v0.52.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling rustversion v1.0.17\n   Compiling libc v0.2.159\n    Checking spin v0.9.8\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling unicode-width v0.1.14\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axstarry, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_5/kern-crates/axstarry\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling proc-macro2 v1.0.86\n   Compiling log v0.4.22\n   Compiling unicode-ident v1.0.13\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n[2024-10-01T02:21:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:21:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bit_field v0.10.2\n   Compiling bitflags v2.6.0\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling quote v1.0.37\n   Compiling indexmap v2.5.0\n   Compiling cfg-if v1.0.0\n   Compiling autocfg v1.4.0\n   Compiling syn v2.0.79\n   Compiling lock_api v0.4.12\n   Compiling bitflags v1.3.2\n   Compiling scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling toml_edit v0.22.22\n   Compiling raw-cpuid v10.7.0\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling libc v0.2.159\n   Compiling rustversion v1.0.17\n   Compiling x86 v0.52.0\n   Compiling syn v1.0.109\n   Compiling spin v0.9.8\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=axstarry, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_5/kern-crates/axstarry\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking log v0.4.22\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.14.5\n    Checking bit_field v0.10.2\n    Checking bitflags v2.6.0\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.5.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n   Compiling autocfg v1.4.0\n   Compiling syn v2.0.79\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n    Checking bitflags v1.3.2\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking scopeguard v1.2.0\n    Checking raw-cpuid v10.7.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling libc v0.2.159\n   Compiling x86 v0.52.0\n   Compiling rustversion v1.0.17\n   Compiling syn v1.0.109\nerror: failed to run custom build command for `libc v0.2.159`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_5/kern-crates/axstarry/target/debug/build/libc-82add201c3d4e665/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.159/build.rs:253:9:\n  Failed to get rustc version\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:21:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:21:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"axstd","pkg":"axstd","count":5,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs","count":1,"kinds":{"Clippy(Error)":["error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axstd, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_5/kern-crates/axstd\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/arceos_api.git`\n    Updating git repository `https://github.com/Starry-OS/arch_boot.git`\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating git repository `https://github.com/Starry-OS/axfeat.git`\n    Updating git repository `https://github.com/Starry-OS/axio.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/axalloc.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/axdisplay.git`\n    Updating git repository `https://github.com/Starry-OS/axfs.git`\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/axnet.git`\n    Updating git repository `https://github.com/Starry-OS/axruntime.git`\n    Updating git repository `https://github.com/Starry-OS/axtask.git`\n    Updating git repository `https://github.com/Starry-OS/axtrap.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/axdriver.git`\n    Updating git repository `https://github.com/Starry-OS/axsync.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/allocator.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/driver_display.git`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_devfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_ramfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_vfs.git`\n    Updating git repository `https://github.com/Starry-OS/capability.git`\n    Updating git repository `https://github.com/Starry-OS/driver_block.git`\n    Updating git repository `https://github.com/rafalh/rust-fatfs`\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/Starry-OS/driver_net.git`\n    Updating git repository `https://github.com/rcore-os/smoltcp.git`\n    Updating git repository `https://github.com/kern-crates/axbacktrace.git`\n    Updating git repository `https://github.com/Starry-OS/axsignal.git`\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/Starry-OS/scheduler.git`\n    Updating git repository `https://github.com/Starry-OS/timer_list.git`\n    Updating git repository `https://github.com/Starry-OS/driver_common.git`\n    Updating git repository `https://github.com/Starry-OS/driver_pci.git`\n    Updating git repository `https://github.com/Starry-OS/driver_virtio.git`\n    Updating git repository `https://github.com/elliott10/lwext4_rust.git`\n    Updating git repository `https://github.com/Starry-OS/page_table.git`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n    Updating git repository `https://github.com/arceos-org/slab_allocator.git`\n    Updating git repository `https://github.com/lhw2002426/bcm2835-sdhci.git`\n    Updating git repository `https://github.com/KuangjuX/ixgbe-driver.git`\n    Updating git repository `https://github.com/rcore-os/smoltcp.git`\n     Locking 148 packages to latest compatible versions\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling indexmap v2.5.0\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.4.0\n    Checking log v0.4.22\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.17\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking scopeguard v1.2.0\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.79\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.14.12\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\n    Checking lazy_static v1.5.0\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axstd, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_5/kern-crates/axstd\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n   Compiling bitflags v1.3.2\n   Compiling indexmap v2.5.0\n   Compiling raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling unicode-ident v1.0.13\n   Compiling log v0.4.22\n[2024-10-01T02:22:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:22:00Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling lock_api v0.4.12\n   Compiling cfg-if v1.0.0\n   Compiling rustversion v1.0.17\n   Compiling quote v1.0.37\n   Compiling bitflags v2.6.0\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling syn v2.0.79\n   Compiling volatile v0.4.6\n   Compiling static_assertions v1.1.0\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling aarch64-cpu v9.4.0\n   Compiling lazy_static v1.5.0\n   Compiling x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=axstd, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_5/kern-crates/axstd\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking log v0.4.22\n   Compiling unicode-ident v1.0.13\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.17\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_5/kern-crates/axstd/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:22:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:22:00Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"axsync","pkg":"axsync","count":5,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs","count":1,"kinds":{"Clippy(Error)":["error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axsync, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_5/kern-crates/axsync\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/axtask.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/axsync.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/kern-crates/axbacktrace.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/axsignal.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/scheduler.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/timer_list.git`\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n     Locking 79 packages to latest compatible versions\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.14.5\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n    Checking bitflags v1.3.2\n   Compiling indexmap v2.5.0\n    Checking raw-cpuid v10.7.0\n   Compiling autocfg v1.4.0\n   Compiling unicode-ident v1.0.13\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.17\n   Compiling quote v1.0.37\n    Checking scopeguard v1.2.0\n    Checking log v0.4.22\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.79\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.14.12\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axsync, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_5/kern-crates/axsync\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling bit_field v0.10.2\n   Compiling bitflags v1.3.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n   Compiling raw-cpuid v10.7.0\n   Compiling autocfg v1.4.0\n   Compiling unicode-ident v1.0.13\n   Compiling toml_edit v0.22.22\n   Compiling x86 v0.52.0\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\n   Compiling cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling scopeguard v1.2.0\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling bitflags v2.6.0\n   Compiling log v0.4.22\n[2024-10-01T02:22:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:22:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling syn v2.0.79\n   Compiling volatile v0.4.6\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling static_assertions v1.1.0\n   Compiling spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling aarch64-cpu v9.4.0\n   Compiling lazy_static v1.5.0\n   Compiling x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=axsync, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_5/kern-crates/axsync\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.13\n   Compiling lock_api v0.4.12\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.17\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_5/kern-crates/axsync/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:22:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:22:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"axtrap","pkg":"axtrap","count":5,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs","count":1,"kinds":{"Clippy(Error)":["error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axtrap, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_5/kern-crates/axtrap\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/axtask.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/Starry-OS/linux_syscall_api.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/kern-crates/axbacktrace.git`\n    Updating git repository `https://github.com/Starry-OS/axsignal.git`\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating git repository `https://github.com/Starry-OS/axfeat.git`\n    Updating git repository `https://github.com/Starry-OS/axfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfutex.git`\n    Updating git repository `https://github.com/Starry-OS/axmem.git`\n    Updating git repository `https://github.com/Starry-OS/axnet.git`\n    Updating git repository `https://github.com/Starry-OS/axprocess.git`\n    Updating git repository `https://github.com/Starry-OS/axruntime.git`\n    Updating git repository `https://github.com/Starry-OS/axsync.git`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n    Updating git repository `https://github.com/Starry-OS/axalloc.git`\n    Updating git repository `https://github.com/Starry-OS/axdriver.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_devfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_ramfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_vfs.git`\n    Updating git repository `https://github.com/Starry-OS/axio.git`\n    Updating git repository `https://github.com/Starry-OS/capability.git`\n    Updating git repository `https://github.com/Starry-OS/driver_block.git`\n    Updating git repository `https://github.com/rafalh/rust-fatfs`\n    Updating git repository `https://github.com/Starry-OS/elf_parser.git`\n    Updating git repository `https://github.com/Starry-OS/driver_net.git`\n    Updating git repository `https://github.com/rcore-os/smoltcp.git`\n    Updating git repository `https://github.com/Starry-OS/allocator.git`\n    Updating git repository `https://github.com/Starry-OS/driver_common.git`\n    Updating git repository `https://github.com/Starry-OS/driver_pci.git`\n    Updating git repository `https://github.com/Starry-OS/driver_virtio.git`\n    Updating git repository `https://github.com/Starry-OS/page_table.git`\n    Updating git repository `https://github.com/Starry-OS/scheduler.git`\n    Updating git repository `https://github.com/Starry-OS/timer_list.git`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n     Locking 137 packages to latest compatible versions\n      Adding riscv v0.10.1 (available: v0.11.1)\n      Adding tock-registers v0.8.1 (available: v0.9.0)\n      Adding x86_64 v0.14.12 (available: v0.15.1)\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.13\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking bitflags v2.6.0\n    Checking scopeguard v1.2.0\n   Compiling syn v2.0.79\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking log v0.4.22\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axtrap, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_5/kern-crates/axtrap\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling bit_field v0.10.2\n   Compiling bitflags v1.3.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n   Compiling raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.13\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\n   Compiling quote v1.0.37\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v2.6.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling scopeguard v1.2.0\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.79\n   Compiling volatile v0.4.6\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling static_assertions v1.1.0\n   Compiling log v0.4.22\n[2024-10-01T02:23:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:23:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=axtrap, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_5/kern-crates/axtrap\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.14.5\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_5/kern-crates/axtrap/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:23:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:23:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"rvfs","pkg":"demo","count":5,"raw_reports":[{"file":"vfscore/src/lib.rs","count":2,"kinds":{"Clippy(Warn)":["warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n","warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=demo, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/rvfs/demo\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling version_check v0.9.5\n   Compiling libc v0.2.159\n   Compiling syn v1.0.109\n   Compiling proc-macro2-diagnostics v0.10.1\n   Compiling glob v0.3.1\n   Compiling int-enum v1.1.2\n   Compiling rustix v0.38.37\n   Compiling yansi v1.0.1\n   Compiling quote v1.0.37\n   Compiling clang-sys v1.8.1\n   Compiling autocfg v1.4.0\n   Compiling syn v2.0.79\n   Compiling prettyplease v0.2.22\nerror: failed to run custom build command for `libc v0.2.159`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_10/kern-crates/rvfs/target/debug/build/libc-2b5100b9da3f0ae3/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.159/build.rs:253:9:\n  Failed to get rustc version\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:15:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:15:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-01T02:15:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:15:52Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-01T02:15:58Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:15:58Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-01T02:16:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:16:00Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-01T02:16:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:16:00Z WARN  lockbud::callbacks] crate env_logger contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-01T02:16:10Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/git/checkouts/lwext4-0e9cfbb4b2c6d701/7986f8f/lwext4-rs/src/fs.rs:78:58: 78:68 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/git/checkouts/lwext4-0e9cfbb4b2c6d701/7986f8f/lwext4-rs/src/fs.rs:81:5: 81:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/git/checkouts/lwext4-0e9cfbb4b2c6d701/7986f8f/lwext4-rs/src/fs.rs:93:57: 93:67 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/git/checkouts/lwext4-0e9cfbb4b2c6d701/7986f8f/lwext4-rs/src/fs.rs:96:5: 96:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/git/checkouts/lwext4-0e9cfbb4b2c6d701/7986f8f/lwext4-rs/src/fs.rs:104:57: 104:67 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/git/checkouts/lwext4-0e9cfbb4b2c6d701/7986f8f/lwext4-rs/src/fs.rs:107:5: 107:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-01T02:16:10Z WARN  lockbud::callbacks] crate demo contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 3 }"]}},{"file":"demo/src/extfs.rs","count":1,"kinds":{"Clippy(Warn)":["warning: file opened with `create`, but `truncate` behavior not defined\n  --> demo/src/extfs.rs:87:10\n   |\n87 |         .create(true)\n   |          ^^^^^^^^^^^^- help: add: `.truncate(true)`\n   |\n   = help: if you intend to overwrite an existing file entirely, call `.truncate(true)`\n   = help: if you instead know that you may want to keep some parts of the old file, call `.truncate(false)`\n   = help: alternatively, use `.append(true)` to append to the file instead of overwriting it\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_open_options\n   = note: `#[warn(clippy::suspicious_open_options)]` on by default\n\n"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-usb-dfu","count":5,"raw_reports":[{"file":"src/lib.rs","count":2,"kinds":{"Mirai":["error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"],"Clippy(Error)":["error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-core v0.3.30\n    Checking futures-task v0.3.30\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n    Checking embedded-io v0.6.1\n    Checking futures-util v0.3.30\n    Checking hash32 v0.3.1\n    Checking cfg-if v1.0.0\n    Checking critical-section v1.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n    Checking nb v1.1.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n    Checking embedded-hal v1.0.0\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking embedded-storage-async v0.4.1\n   Compiling embassy-usb v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb)\n    Checking signature v2.2.0\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking bitflags v2.6.0\n    Checking crypto-common v0.1.6\n    Checking block-buffer v0.10.4\n    Checking digest v0.10.7\n    Checking embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling futures-core v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-task v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling nb v1.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling nb v0.1.3\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling void v1.0.2\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb)\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling digest v0.10.7\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=embassy-usb-dfu, checker=Mirai\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling heapless v0.8.0\n    Checking byteorder v1.5.0\n    Checking pin-utils v0.1.0\n    Checking stable_deref_trait v1.2.0\n    Checking futures-task v0.3.30\n    Checking futures-core v0.3.30\n    Checking pin-project-lite v0.2.14\n   Compiling embedded-io-async v0.6.1\n    Checking hash32 v0.3.1\n   Compiling typenum v1.17.0\n   Compiling version_check v0.9.5\n    Checking futures-util v0.3.30\n   Compiling generic-array v0.14.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking cfg-if v1.0.0\n    Checking critical-section v1.1.3\n    Checking embedded-io v0.6.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\n    Checking nb v1.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling litrs v0.4.1\n   Compiling embedded-hal-async v1.0.0\n    Checking nb v0.1.3\n    Checking embedded-hal v1.0.0\n   Compiling document-features v0.2.10\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking crypto-common v0.1.6\n    Checking block-buffer v0.10.4\n    Checking embedded-storage-async v0.4.1\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking digest v0.10.7\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking signature v2.2.0\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking bitflags v2.6.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"]}}]},{"user":"kern-crates","repo":"linked_list","pkg":"linked_list","count":5,"raw_reports":[{"file":"src/unsafe_list.rs","count":5,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `List<A>`\n   --> src/unsafe_list.rs:99:5\n    |\n99  | /     pub const fn new() -> Self {\n100 | |         Self { first: None }\n101 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n97  + impl<A: Adapter + ?Sized> Default for List<A> {\n98  +     fn default() -> Self {\n99  +         Self::new()\n100 +     }\n101 + }\n    |\n\n","warning: you should consider adding a `Default` implementation for `Links<T>`\n   --> src/unsafe_list.rs:435:5\n    |\n435 | /     pub const fn new() -> Self {\n436 | |         Self(UnsafeCell::new(MaybeUninit::uninit()))\n437 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n433 + impl<T: ?Sized> Default for Links<T> {\n434 +     fn default() -> Self {\n435 +         Self::new()\n436 +     }\n437 + }\n    |\n\n","warning: ambiguous wide pointer comparison, the comparison includes metadata which may not be expected\n   --> src/unsafe_list.rs:245:12\n    |\n245 |         if self.first.unwrap() == existing {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(ambiguous_wide_pointer_comparisons)]` on by default\nhelp: use `std::ptr::addr_eq` or untyped pointers to only compare their addresses\n    |\n245 |         if std::ptr::addr_eq(self.first.unwrap().as_ptr(), existing.as_ptr()) {\n    |            ++++++++++++++++++                   ~~~~~~~~~~         ++++++++++\nhelp: use explicit `std::ptr::eq` method to compare metadata and addresses\n    |\n245 |         if std::ptr::eq(self.first.unwrap().as_ptr(), existing.as_ptr()) {\n    |            +++++++++++++                   ~~~~~~~~~~         ++++++++++\n\n","warning: ambiguous wide pointer comparison, the comparison includes metadata which may not be expected\n   --> src/unsafe_list.rs:462:24\n    |\n462 |                     if links.next != head {\n    |                        ^^^^^^^^^^^^^^^^^^\n    |\nhelp: use `std::ptr::addr_eq` or untyped pointers to only compare their addresses\n    |\n462 |                     if !std::ptr::addr_eq(links.next.as_ptr(), head.as_ptr()) {\n    |                        +++++++++++++++++++          ~~~~~~~~~~     ++++++++++\nhelp: use explicit `std::ptr::eq` method to compare metadata and addresses\n    |\n462 |                     if !std::ptr::eq(links.next.as_ptr(), head.as_ptr()) {\n    |                        ++++++++++++++          ~~~~~~~~~~     ++++++++++\n\n","warning: ambiguous wide pointer comparison, the comparison includes metadata which may not be expected\n   --> src/unsafe_list.rs:483:28\n    |\n483 |                         if cur == head {\n    |                            ^^^^^^^^^^^\n    |\nhelp: use `std::ptr::addr_eq` or untyped pointers to only compare their addresses\n    |\n483 |                         if std::ptr::addr_eq(cur.as_ptr(), head.as_ptr()) {\n    |                            ++++++++++++++++++   ~~~~~~~~~~     ++++++++++\nhelp: use explicit `std::ptr::eq` method to compare metadata and addresses\n    |\n483 |                         if std::ptr::eq(cur.as_ptr(), head.as_ptr()) {\n    |                            +++++++++++++   ~~~~~~~~~~     ++++++++++\n\n"]}}]},{"user":"kern-crates","repo":"linux_syscall_api","pkg":"linux_syscall_api","count":5,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/driver_common-20128c663136e8cd/4cdcdd9/src/lib.rs","count":2,"kinds":{"Clippy(Error)":["error[E0049]: method `device_name` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /home/runner/.cargo/git/checkouts/driver_common-20128c663136e8cd/4cdcdd9/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n59 |     /// The name of the device.\n60 |     fn device_name(&self) -> &str;\n   |     ------------------------------ expected 0 const parameters\n\n","error[E0049]: method `device_type` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /home/runner/.cargo/git/checkouts/driver_common-20128c663136e8cd/4cdcdd9/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n...\n63 |     fn device_type(&self) -> DeviceType;\n   |     ------------------------------------ expected 0 const parameters\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=linux_syscall_api, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_7/kern-crates/linux_syscall_api\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/axfeat.git`\n    Updating git repository `https://github.com/Starry-OS/axfs.git`\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/axmem.git`\n    Updating git repository `https://github.com/Starry-OS/axnet.git`\n    Updating git repository `https://github.com/Starry-OS/axprocess.git`\n    Updating git repository `https://github.com/Starry-OS/axruntime.git`\n    Updating git repository `https://github.com/Starry-OS/axsignal.git`\n    Updating git repository `https://github.com/Starry-OS/axsync.git`\n    Updating git repository `https://github.com/Starry-OS/axtask.git`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/axalloc.git`\n    Updating git repository `https://github.com/Starry-OS/axdriver.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_devfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_ramfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_vfs.git`\n    Updating git repository `https://github.com/Starry-OS/axio.git`\n    Updating git repository `https://github.com/Starry-OS/capability.git`\n    Updating git repository `https://github.com/Starry-OS/driver_block.git`\n    Updating git repository `https://github.com/rafalh/rust-fatfs`\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/Starry-OS/elf_parser.git`\n    Updating git repository `https://github.com/Starry-OS/driver_net.git`\n    Updating git repository `https://github.com/rcore-os/smoltcp.git`\n    Updating git repository `https://github.com/Starry-OS/allocator.git`\n    Updating git repository `https://github.com/Starry-OS/driver_common.git`\n    Updating git repository `https://github.com/Starry-OS/driver_virtio.git`\n    Updating git repository `https://github.com/Starry-OS/page_table.git`\n    Updating git repository `https://github.com/Starry-OS/scheduler.git`\n    Updating git repository `https://github.com/Starry-OS/timer_list.git`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n Downloading crates ...\n  Downloaded spin v0.5.2\n  Downloaded embedded-hal v0.2.7\n  Downloaded unicode-ident v1.0.12\n  Downloaded void v1.0.2\n  Downloaded stable_deref_trait v1.2.0\n  Downloaded version_check v0.9.4\n  Downloaded zerocopy-derive v0.7.34\n  Downloaded x86_64 v0.14.12\n  Downloaded unicode-width v0.1.12\n  Downloaded svgbobdoc v0.3.0\n  Downloaded thiserror-impl v1.0.60\n  Downloaded rustversion v1.0.16\n  Downloaded x2apic v0.4.3\n  Downloaded defmt-macros v0.3.8\n  Downloaded serde v1.0.201\n  Downloaded toml_edit v0.19.15\n  Downloaded memchr v2.7.2\n  Downloaded zerocopy v0.7.34\n  Downloaded winnow v0.5.40\n  Downloaded defmt v0.3.7\n  Downloaded virtio-drivers v0.7.2\n  Downloaded riscv v0.10.1\n  Downloaded syn v2.0.63\n  Downloaded quote v1.0.36\n  Downloaded log v0.4.19\n  Downloaded rand_core v0.6.4\n  Downloaded paste v1.0.15\n  Downloaded num_enum v0.5.11\n  Downloaded nb v1.1.0\n  Downloaded managed v0.8.0\n  Downloaded syn v1.0.109\n  Downloaded spin v0.9.8\n  Downloaded proc-macro-error-attr v1.0.4\n  Downloaded indexmap v2.2.6\n  Downloaded heapless v0.8.0\n  Downloaded raw-cpuid v11.0.2\n  Downloaded rand v0.8.5\n  Downloaded proc-macro2 v1.0.82\n  Downloaded base64 v0.13.1\n  Downloaded rlsf v0.2.1\n  Downloaded proc-macro-error v1.0.4\n  Downloaded lock_api v0.4.12\n  Downloaded lazy_static v1.4.0\n  Downloaded bit v0.1.1\n  Downloaded libc v0.2.154\n  Downloaded thiserror v1.0.60\n  Downloaded scopeguard v1.2.0\n  Downloaded nb v0.1.3\n  Downloaded defmt-parser v0.3.4\n  Downloaded num_enum_derive v0.5.11\n  Downloaded const-default v1.0.0\n  Downloaded fdt v0.1.5\n  Downloaded bitflags v2.5.0\n  Downloaded autocfg v1.3.0\n  Downloaded toml_datetime v0.6.5\n  Downloaded hash32 v0.3.1\n  Downloaded critical-section v1.1.2\n  Downloaded byteorder v1.5.0\n    Checking log v0.4.19\n   Compiling proc-macro2 v1.0.82\n   Compiling unicode-ident v1.0.12\n    Checking bit_field v0.10.2\n    Checking bitflags v2.5.0\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n   Compiling serde v1.0.201\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#12d36f6c)\n    Checking raw-cpuid v10.7.0\n   Compiling syn v1.0.109\n   Compiling quote v1.0.36\n   Compiling indexmap v2.2.6\n   Compiling syn v2.0.63\n   Compiling toml_datetime v0.6.5\n   Compiling autocfg v1.3.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling x86 v0.52.0\n   Compiling winnow v0.5.40\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.16\n   Compiling toml_edit v0.19.15\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n   Compiling libc v0.2.154\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#7296a141)\n    Checking spin v0.9.8\n    Checking x86_64 v0.14.12\n    Checking tock-registers v0.8.1\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.12\n    Checking aarch64-cpu v9.4.0\n   Compiling svgbobdoc v0.3.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#72e00672)\n    Checking const-default v1.0.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#a19854cc)\n    Checking spin v0.5.2\n   Compiling paste v1.0.15\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.4.0\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#81ef766c)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#4ae66642)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#939e6eb9)\n    Checking byteorder v1.5.0\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#6923b09d)\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#bb7589fe)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#dca9e983)\n    Checking fdt v0.1.5\n    Checking bit v0.1.1\n    Checking x2apic v0.4.3\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#3d6bdc92)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#8c5083c1)\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#64b47ba1)\n    Checking axalloc v0.1.0 (https://github.com/Starry-OS/axalloc.git#6665f35e)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#d6ba329d)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#4adca0d0)\n    Checking raw-cpuid v11.0.2\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#e3381d7b)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#0aee1e3b)\n   Compiling zerocopy-derive v0.7.34\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#4cdcdd9b)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#3238ef86)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#261bd624)\n   Compiling axdriver v0.1.0 (https://github.com/Starry-OS/axdriver.git#a21caaac)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#1142d117)\n    Checking rand_core v0.6.4\n    Checking nb v1.1.0\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#0ba32228)\n    Checking nb v0.1.3\n    Checking rand v0.8.5\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#3a6861cf)\n   Compiling riscv v0.10.1\n    Checking zero v0.1.3\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking xmas-elf v0.9.1\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#00c26de4)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#4f70d39a)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#d00386a2)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=a3a834e#a3a834ef)\n    Checking critical-section v1.1.2\n    Checking axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git#267cb5b0)\n    Checking zerocopy v0.7.34\n    Checking axtask v0.1.0 (https://github.com/Starry-OS/axtask.git#34e5f5bd)\n    Checking elf_parser v0.1.0 (https://github.com/Starry-OS/elf_parser.git#2bcdfea0)\n   Compiling heapless v0.8.0\n    Checking axsync v0.1.0 (https://github.com/Starry-OS/axsync.git#1340dde1)\n    Checking hash32 v0.3.1\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=b7134a3#b7134a31)\n    Checking managed v0.8.0\n   Compiling num_enum_derive v0.5.11\n    Checking virtio-drivers v0.7.2\n    Checking num_enum v0.5.11\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#55e907a9)\nerror: could not compile `driver_virtio` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=linux_syscall_api, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_7/kern-crates/linux_syscall_api\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling proc-macro2 v1.0.82\n    Checking log v0.4.19\n   Compiling unicode-ident v1.0.12\n    Checking bit_field v0.10.2\n    Checking bitflags v2.5.0\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#12d36f6c)\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.201\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling quote v1.0.36\n   Compiling indexmap v2.2.6\n   Compiling syn v2.0.63\n   Compiling syn v1.0.109\n   Compiling winnow v0.5.40\n   Compiling autocfg v1.3.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling toml_datetime v0.6.5\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.16\nerror: failed to run custom build command for `rustversion v1.0.16`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_7/kern-crates/linux_syscall_api/target/debug/build/rustversion-fb9bf657f0574a5e/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T01:51:31Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.19/src/lib.rs:1407:11: 1407:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.19/src/lib.rs:1410:13: 1410:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:51:31Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-01T01:51:48Z WARN  lockbud::callbacks] [\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n            \"first_lock_span\": \"/home/runner/.cargo/git/checkouts/axnet-13731b5ff12d66e4/2aa071b/src/smoltcp_impl/udp.rs:189:13: 189:31 (#0)\",\n            \"second_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n            \"second_lock_span\": \"/home/runner/.cargo/git/checkouts/axnet-13731b5ff12d66e4/2aa071b/src/smoltcp_impl/udp.rs:105:13: 105:32 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/git/checkouts/axnet-13731b5ff12d66e4/2aa071b/src/smoltcp_impl/udp.rs:192:13: 192:64 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      }\n    ]\n[2024-10-01T01:51:48Z WARN  lockbud::callbacks] crate axnet contains bugs: { probably: 0, possibly: 1 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-01T01:51:49Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at src/syscall_fs/imp/ctl.rs:216:18: 216:90 (#0) after dropped at src/syscall_fs/imp/ctl.rs:219:5: 219:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-01T01:51:49Z WARN  lockbud::callbacks] crate linux_syscall_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }"]}}]},{"user":"kern-crates","repo":"of","pkg":"of","count":5,"raw_reports":[{"file":"tests/of.rs","count":4,"kinds":{"Mirai":["error: extern location for of does not exist: /home/runner/check/batch_8/kern-crates/of/target/x86_64-unknown-linux-gnu/debug/deps/libof-8ddd35cb4e081005.rlib\n --> tests/of.rs:5:9\n  |\n5 |         of::init_fdt_ptr(BST_DTB_DATA.as_ptr());\n  |         ^^\n\n","error: extern location for of does not exist: /home/runner/check/batch_8/kern-crates/of/target/x86_64-unknown-linux-gnu/debug/deps/libof-8ddd35cb4e081005.rlib\n  --> tests/of.rs:12:17\n   |\n12 |     let model = of::machin_name();\n   |                 ^^\n\n","error: extern location for of does not exist: /home/runner/check/batch_8/kern-crates/of/target/x86_64-unknown-linux-gnu/debug/deps/libof-8ddd35cb4e081005.rlib\n  --> tests/of.rs:21:24\n   |\n21 |     let console_node = of::find_compatible_node(CONSOLE_COMPATIABLE);\n   |                        ^^\n\n","error: extern location for of does not exist: /home/runner/check/batch_8/kern-crates/of/target/x86_64-unknown-linux-gnu/debug/deps/libof-8ddd35cb4e081005.rlib\n  --> tests/of.rs:28:19\n   |\n28 |     let of_pcsi = of::pcsi();\n   |                   ^^\n\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=of, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_8/kern-crates/of\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking spin v0.9.8\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n    Checking of v0.1.0 (/home/runner/check/batch_8/kern-crates/of)\n    Finished dev [unoptimized + debuginfo] target(s) in 2.50s\n   Compiling spin v0.9.8\n   Compiling fdt v0.1.5\n   Compiling lazy_static v1.5.0\n   Compiling of v0.1.0 (/home/runner/check/batch_8/kern-crates/of)\nerror: could not compile `of` (test \"of\") due to 5 previous errors\n"]}}]},{"user":"kern-crates","repo":"pager","pkg":"pager","count":5,"raw_reports":[{"file":"src/bitmap.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/batch_8/kern-crates/pager/src/bitmap.rs (original lines from 213 to 213)\n-        }else {\n+        } else {\n"],"Clippy(Warn)":["warning: doc list item without indentation\n  --> src/bitmap.rs:21:5\n   |\n21 | /// If the number of physical pages is less than 4096*8, space may be wasted\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\n   = note: `#[warn(clippy::doc_lazy_continuation)]` on by default\nhelp: indent this line\n   |\n21 | ///    If the number of physical pages is less than 4096*8, space may be wasted\n   |     +++\n\n","warning: manually reimplementing `div_ceil`\n   --> src/bitmap.rs:197:32\n    |\n197 |             let bitmap_pages = (self.max + 4096 * 8 - 1) / (4096 * 8);\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.div_ceil()`: `self.max.div_ceil((4096 * 8))`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_div_ceil\n    = note: `#[warn(clippy::manual_div_ceil)]` on by default\n\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:14:58Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:14:58Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/buddy.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `Zone<MAX_ORDER>`\n  --> src/buddy.rs:78:5\n   |\n78 | /     pub const fn new() -> Self {\n79 | |         Self {\n80 | |             manage_pages: 0,\n81 | |             start_page: 0,\n82 | |             free_areas: [FreeArea::new(); MAX_ORDER],\n83 | |         }\n84 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n76 + impl<const MAX_ORDER: usize> Default for Zone<MAX_ORDER> {\n77 +     fn default() -> Self {\n78 +         Self::new()\n79 +     }\n80 + }\n   |\n\n"]}}]},{"user":"Starry-OS","repo":"Starry","pkg":"axlibc","count":4,"raw_reports":[{"file":"tools/axlibc/build.rs","count":2,"kinds":{"Clippy(Warn)":["warning: the borrowed expression implements the required traits\n  --> tools/axlibc/build.rs:44:15\n   |\n44 |           .args(&[\n   |  _______________^\n45 | |             \"-c\",\n46 | |             asm_file.to_str().unwrap(),\n47 | |             \"-o\",\n...  |\n51 | |             \"-mfpu=neon\",\n52 | |         ])\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n   = note: `#[warn(clippy::needless_borrows_for_generic_args)]` on by default\nhelp: change this to\n   |\n44 ~         .args([\n45 +             \"-c\",\n46 +             asm_file.to_str().unwrap(),\n47 +             \"-o\",\n48 +             asm_out_file.to_str().unwrap(),\n49 +             \"-target\",\n50 +             \"aarch64-unknown-none\",\n51 +             \"-mfpu=neon\",\n52 ~         ])\n   |\n\n","warning: the borrowed expression implements the required traits\n  --> tools/axlibc/build.rs:60:15\n   |\n60 |           .args(&[\n   |  _______________^\n61 | |             \"crus\",\n62 | |             lib_out_file.to_str().unwrap(),\n63 | |             asm_out_file.to_str().unwrap(),\n64 | |         ])\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\nhelp: change this to\n   |\n60 ~         .args([\n61 +             \"crus\",\n62 +             lib_out_file.to_str().unwrap(),\n63 +             asm_out_file.to_str().unwrap(),\n64 ~         ])\n   |\n\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=axlibc, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry/tools/axlibc\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.72\n    Checking bitflags v1.3.2\n    Checking log v0.4.22\n    Checking raw-cpuid v10.7.0\n   Compiling rustversion v1.0.17\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Starry-OS/Starry/target/debug/build/rustversion-5901f74b94ed47a6/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-09-28T15:36:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:36:08Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-28T15:36:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:36:21Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-28T15:36:26Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:36:26Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"rvfs","pkg":"devfs","count":4,"raw_reports":[{"file":"vfscore/src/lib.rs","count":2,"kinds":{"Clippy(Warn)":["warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n","warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=devfs, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/rvfs/devfs\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling lock_api v0.4.12\n    Checking bitflags v1.3.2\n    Checking log v0.4.22\n    Checking downcast-rs v1.2.1\n    Checking scopeguard v1.2.0\n    Checking vfscore v0.1.0 (/home/runner/check/batch_10/kern-crates/rvfs/vfscore)\n    Checking unifs v0.1.0 (/home/runner/check/batch_10/kern-crates/rvfs/unifs)\n    Checking devfs v0.1.0 (/home/runner/check/batch_10/kern-crates/rvfs/devfs)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.74s\n   Compiling lock_api v0.4.12\n   Compiling log v0.4.22\n   Compiling memchr v2.7.4\n   Compiling scopeguard v1.2.0\n   Compiling libc v0.2.159\nerror: failed to run custom build command for `libc v0.2.159`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_10/kern-crates/rvfs/target/debug/build/libc-2b5100b9da3f0ae3/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.159/build.rs:253:9:\n  Failed to get rustc version\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:16:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:16:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"rvfs","pkg":"dynfs","count":4,"raw_reports":[{"file":"vfscore/src/lib.rs","count":2,"kinds":{"Clippy(Warn)":["warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n","warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=dynfs, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/rvfs/dynfs\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking dynfs v0.1.0 (/home/runner/check/batch_10/kern-crates/rvfs/dynfs)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.21s\n   Compiling lock_api v0.4.12\n   Compiling libc v0.2.159\n   Compiling bitflags v1.3.2\n   Compiling aho-corasick v1.1.3\nerror: failed to run custom build command for `libc v0.2.159`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_10/kern-crates/rvfs/target/debug/build/libc-2b5100b9da3f0ae3/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.159/build.rs:253:9:\n  Failed to get rustc version\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:16:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:16:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-executor","count":4,"raw_reports":[{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking critical-section v1.1.3\n   Compiling embassy-executor v0.5.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-executor)\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"]}},{"file":"src/lib.rs","count":1,"kinds":{"Clippy(Error)":["error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"]}},{"file":"src/raw/mod.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"]}},{"file":"src/raw/waker.rs","count":1,"kinds":{"Mirai":["warning: Found waker not created by the Embassy executor. `embassy_time::Timer` only works with the Embassy executor.\n  --> src/raw/waker.rs:42:9\n   |\n42 |         panic!(\"Found waker not created by the Embassy executor. `embassy_time::Timer` only works with the Embassy executor.\")\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-futures","count":4,"raw_reports":[{"file":"src/select.rs","count":3,"kinds":{"Clippy(Warn)":["warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n","warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n","warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"]}},{"file":"src/join.rs","count":1,"kinds":{"Clippy(Warn)":["warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-stm32","count":4,"raw_reports":[{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking nb v0.1.3\n    Checking critical-section v1.1.3\n    Checking embedded-hal v0.2.7\n    Checking futures-task v0.3.30\n    Checking stable_deref_trait v1.2.0\n    Checking hash32 v0.3.1\n    Checking futures-core v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n    Checking vcell v0.1.3\n    Checking cfg-if v1.0.0\n    Checking futures-util v0.3.30\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling critical-section v1.1.3\n   Compiling futures-task v0.3.30\n   Compiling embedded-hal v0.2.7\n   Compiling pin-utils v0.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-core v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling vcell v0.1.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x5574503ee6a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x5574503ee6a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x5574503ee6a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x5574503ee6a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55745040c9bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55745040c9bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x5574503ec43f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x5574503ee47e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x5574503ee47e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x5574503ef7e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x5574503ef52d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x5574503efca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x5574503efb4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x5574503eeb69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x5574503ef8b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55745040bbe3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x5574503d30ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x5574503cdfbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x5574503cd5be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x5574503cd631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x5574503e97dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x5574503e97dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x5574503e97dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x5574503e97dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x5574503e97dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x5574503e97dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x5574503e97dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x5574503e97dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x5574503e97dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x5574503cd60a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x5574503d31ce - main\n    31:     0x7f3c6f629d90 - <unknown>\n    32:     0x7f3c6f629e40 - __libc_start_main\n    33:     0x5574503ccf45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=embassy-stm32, checker=Mirai\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling semver-parser v0.7.0\n   Compiling cortex-m v0.7.7\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling cortex-m-rt v0.7.3\n   Compiling semver v0.9.0\n    Checking nb v1.1.0\n   Compiling syn v1.0.109\n   Compiling rustc_version v0.2.3\n    Checking nb v0.1.3\n   Compiling bare-metal v0.2.5\n    Checking void v1.0.2\n   Compiling quote v1.0.37\n    Checking embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n    Checking byteorder v1.5.0\n    Checking hash32 v0.3.1\n    Checking pin-utils v0.1.0\n    Checking critical-section v1.1.3\n    Checking futures-core v0.3.30\n   Compiling embedded-io-async v0.6.1\n    Checking futures-task v0.3.30\n   Compiling vcell v0.1.3\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n    Checking futures-util v0.3.30\n   Compiling volatile-register v0.2.2\n   Compiling autocfg v1.4.0\n    Checking embedded-io v0.6.1\n   Compiling litrs v0.4.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n    Checking cfg-if v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling bitfield v0.13.2\n    Checking embedded-hal v1.0.0\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"src/eth/mod.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/src/eth/mod.rs (original lines from 77 to 78)\n-    type RxToken<'a> = RxToken<'a, 'd> where Self: 'a;\n-    type TxToken<'a> = TxToken<'a, 'd> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'a, 'd>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, 'd>\n+    where\n+        Self: 'a;\n"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-stm32-wpan","count":4,"raw_reports":[{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n    Checking void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n    Checking nb v0.1.3\n    Checking byteorder v1.5.0\n    Checking volatile-register v0.2.2\n    Checking embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking bitfield v0.13.2\n    Checking hash32 v0.3.1\n    Checking futures-task v0.3.30\n    Checking futures-core v0.3.30\n    Checking critical-section v1.1.3\n    Checking pin-utils v0.1.0\n    Checking futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n   Compiling nb v0.1.3\n   Compiling vcell v0.1.3\n   Compiling byteorder v1.5.0\n   Compiling embedded-hal v0.2.7\n   Compiling volatile-register v0.2.2\n   Compiling heapless v0.8.0\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling bitfield v0.13.2\n   Compiling futures-core v0.3.30\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x5634429636a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x5634429636a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x5634429636a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x5634429636a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x5634429819bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x5634429819bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x56344296143f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x56344296347e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x56344296347e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x5634429647e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x56344296452d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x563442964ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x563442964b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x563442963b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x5634429648b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x563442980be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x5634429480ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x563442942fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x5634429425be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x563442942631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x56344295e7dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x56344295e7dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x56344295e7dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x56344295e7dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x56344295e7dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x56344295e7dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x56344295e7dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x56344295e7dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x56344295e7dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x56344294260a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x5634429481ce - main\n    31:     0x7f6ddb429d90 - <unknown>\n    32:     0x7f6ddb429e40 - __libc_start_main\n    33:     0x563442941f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=embassy-stm32-wpan, checker=Mirai\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling cortex-m v0.7.7\n   Compiling semver-parser v0.7.0\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling proc-macro2 v1.0.86\n   Compiling cortex-m-rt v0.7.3\n   Compiling semver v0.9.0\n   Compiling unicode-ident v1.0.13\n    Checking nb v0.1.3\n   Compiling rustc_version v0.2.3\n    Checking void v1.0.2\n   Compiling syn v1.0.109\n    Checking embedded-hal v0.2.7\n   Compiling bare-metal v0.2.5\n   Compiling typenum v1.17.0\n   Compiling quote v1.0.37\n   Compiling heapless v0.8.0\n    Checking byteorder v1.5.0\n   Compiling version_check v0.9.5\n    Checking vcell v0.1.3\n    Checking volatile-register v0.2.2\n    Checking hash32 v0.3.1\n   Compiling generic-array v0.14.7\n    Checking bitfield v0.13.2\n    Checking futures-core v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking futures-task v0.3.30\n    Checking critical-section v1.1.3\n    Checking pin-utils v0.1.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.30\n   Compiling autocfg v1.4.0\n   Compiling embedded-hal-async v1.0.0\n    Checking embedded-hal v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling litrs v0.4.1\n    Checking cfg-if v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking embedded-io v0.6.1\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling document-features v0.2.10\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"src/mac/driver.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/src/mac/driver.rs (original lines from 26 to 27)\n-    type RxToken<'a> = RxToken<'d> where Self: 'a;\n-    type TxToken<'a> = TxToken<'d> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'d>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'d>\n+    where\n+        Self: 'a;\n"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-time-driver","count":4,"raw_reports":[{"file":"src/lib.rs","count":3,"kinds":{"Clippy(Warn)":["warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n","warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"],"Clippy(Error)":["error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"]}}]},{"user":"kern-crates","repo":"rvfs","pkg":"fat-vfs","count":4,"raw_reports":[{"file":"vfscore/src/lib.rs","count":2,"kinds":{"Clippy(Warn)":["warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n","warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=fat-vfs, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/rvfs/fat-vfs\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking lock_api v0.4.12\n    Checking spin v0.9.8\n    Checking unifs v0.1.0 (/home/runner/check/batch_10/kern-crates/rvfs/unifs)\n    Checking fatfs v0.4.0 (https://github.com/os-module/rust-fatfs.git#55d0dbac)\n    Checking fat-vfs v0.1.0 (/home/runner/check/batch_10/kern-crates/rvfs/fat-vfs)\n    Finished dev [unoptimized + debuginfo] target(s) in 1.02s\n   Compiling lock_api v0.4.12\n   Compiling libc v0.2.159\n   Compiling downcast-rs v1.2.1\n   Compiling regex-syntax v0.8.5\nerror: failed to run custom build command for `libc v0.2.159`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_10/kern-crates/rvfs/target/debug/build/libc-2b5100b9da3f0ae3/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.159/build.rs:253:9:\n  Failed to get rustc version\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:16:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:16:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"rvfs","pkg":"unifs","count":4,"raw_reports":[{"file":"vfscore/src/lib.rs","count":2,"kinds":{"Clippy(Warn)":["warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n","warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:16:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:16:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"unifs/src/inode.rs","count":1,"kinds":{"Clippy(Warn)":["warning: called `.iter().nth()` on a slice\n  --> unifs/src/inode.rs:62:19\n   |\n62 |           let res = children\n   |  ___________________^\n63 | |             .iter()\n64 | |             .nth(start_index)\n   | |_____________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#iter_nth\n   = note: `#[warn(clippy::iter_nth)]` on by default\nhelp: `get` is equivalent but more concise\n   |\n63 |             .get(start_index)\n   |              ~~~\n\n"]}}]},{"user":"kern-crates","repo":"virt2slint","pkg":"virt2slint","count":4,"raw_reports":[{"file":"src/lib.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_12/kern-crates/virt2slint/src/lib.rs (original lines from 87 to 87)\n-        \n+\n","file: /home/runner/check/batch_12/kern-crates/virt2slint/src/lib.rs (original lines from 144 to 144)\n-    \n+\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=virt2slint, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/kern-crates/virt2slint\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.4.0\n   Compiling libm v0.2.8\n   Compiling semver v1.0.23\n   Compiling rustversion v1.0.17\n   Compiling num-traits v0.2.19\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_12/kern-crates/virt2slint/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:00:16Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"imp::atomic128::x86_64::detect::detect\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/portable-atomic-1.9.0/src/imp/atomic128/../detect/common.rs:33:28: 33:57 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/portable-atomic-1.9.0/src/imp/atomic128/../detect/common.rs:44:5: 44:43 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:00:16Z WARN  lockbud::callbacks] crate portable_atomic contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-01T02:00:19Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:00:19Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-01T02:00:27Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.1/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.1/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.1/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.1/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-01T02:00:27Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }"]}}]},{"user":"kern-crates","repo":"virtio-input-decoder","pkg":"virtio-input-decoder","count":4,"raw_reports":[{"file":"src/decoder.rs","count":2,"kinds":{"Clippy(Warn)":["warning: this returns a `Result<_, ()>`\n  --> src/decoder.rs:13:5\n   |\n13 |     pub fn decode(etype: usize, code: usize, value: isize) -> Result<DecodeType, ()> {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: use a custom `Error` type instead\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_unit_err\n   = note: `#[warn(clippy::result_unit_err)]` on by default\n\n","warning: this returns a `Result<_, ()>`\n  --> src/decoder.rs:34:5\n   |\n34 |     pub fn convert_key(key: Key) -> Result<char, ()> {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: use a custom `Error` type instead\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_unit_err\n\n"]}},{"file":"src/key.rs","count":2,"kinds":{"Clippy(Warn)":["warning: this returns a `Result<_, ()>`\n   --> src/key.rs:203:5\n    |\n203 |     pub fn from_code(code: usize) -> Result<Key, ()> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use a custom `Error` type instead\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_unit_err\n\n","warning: this returns a `Result<_, ()>`\n   --> src/key.rs:271:5\n    |\n271 |     pub fn to_char(&self) -> Result<char, ()> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use a custom `Error` type instead\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_unit_err\n\n"]}}]},{"user":"kern-crates","repo":"axfs_ramfs","pkg":"axfs_ramfs","count":3,"raw_reports":[{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=axfs_ramfs, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axfs_ramfs\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling autocfg v1.4.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking scopeguard v1.2.0\n    Checking log v0.4.22\n    Checking bitflags v2.6.0\n   Compiling lock_api v0.4.12\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking axfs_ramfs v0.1.0 (/home/runner/check/batch_4/kern-crates/axfs_ramfs)\nerror: could not compile `axfs_ramfs` (lib)\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T01:56:06Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:56:06Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/file.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `FileNode`\n  --> src/file.rs:14:5\n   |\n14 | /     pub const fn new() -> Self {\n15 | |         Self {\n16 | |             content: RwLock::new(Vec::new()),\n17 | |         }\n18 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n12 + impl Default for FileNode {\n13 +     fn default() -> Self {\n14 +         Self::new()\n15 +     }\n16 + }\n   |\n\n"]}}]},{"user":"arceos-org","repo":"arceos","pkg":"bwbench-client","count":3,"raw_reports":[{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=bwbench-client, checker=Clippy\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/tools/bwbench_client\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n     Locking 36 packages to latest compatible versions\n      Adding windows-core v0.52.0 (latest: v0.58.0)\n   Compiling autocfg v1.4.0\n   Compiling libc v0.2.159\n    Checking iana-time-zone v0.1.61\n   Compiling num-traits v0.2.19\n    Checking chrono v0.4.38\n    Checking bwbench-client v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/tools/bwbench_client)\nerror: could not compile `bwbench-client` (bin \"bwbench-client\") due to 2 previous errors\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=bwbench-client, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/tools/bwbench_client\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling autocfg v1.4.0\n   Compiling libc v0.2.159\n    Checking iana-time-zone v0.1.61\nerror: failed to run custom build command for `libc v0.2.159`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/arceos-org/arceos/tools/bwbench_client/target/debug/build/libc-82add201c3d4e665/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.159/build.rs:253:9:\n  Failed to get rustc version\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"src/device.rs","count":1,"kinds":{"Clippy(Error)":["error: the loop variable `i` is used to index `mac_addr`\n  --> src/device.rs:80:22\n   |\n80 |             for i in 0..6 {\n   |                      ^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nnote: the lint level is defined here\n  --> src/main.rs:3:9\n   |\n3  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(clippy::needless_range_loop)]` implied by `#[deny(warnings)]`\nhelp: consider using an iterator and enumerate()\n   |\n80 |             for (i, <item>) in mac_addr.iter_mut().enumerate() {\n   |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"]}}]},{"user":"Starry-OS","repo":"Starry","pkg":"bwbench-client","count":3,"raw_reports":[{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=bwbench-client, checker=Clippy\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/Starry-OS/Starry/tools/bwbench_client\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n     Locking 36 packages to latest compatible versions\n      Adding windows-core v0.52.0 (latest: v0.58.0)\n Downloading crates ...\n  Downloaded iana-time-zone v0.1.61\n  Downloaded chrono v0.4.38\n   Compiling autocfg v1.4.0\n   Compiling libc v0.2.159\n    Checking iana-time-zone v0.1.61\n   Compiling num-traits v0.2.19\n    Checking chrono v0.4.38\n    Checking bwbench-client v0.1.0 (/home/runner/check/repos-default/Starry-OS/Starry/tools/bwbench_client)\nerror: could not compile `bwbench-client` (bin \"bwbench-client\") due to 2 previous errors\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=bwbench-client, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry/tools/bwbench_client\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling autocfg v1.4.0\n   Compiling libc v0.2.159\n    Checking iana-time-zone v0.1.61\nerror: failed to run custom build command for `libc v0.2.159`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Starry-OS/Starry/tools/bwbench_client/target/debug/build/libc-82add201c3d4e665/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.159/build.rs:253:9:\n  Failed to get rustc version\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"src/device.rs","count":1,"kinds":{"Clippy(Error)":["error: the loop variable `i` is used to index `mac_addr`\n  --> src/device.rs:80:22\n   |\n80 |             for i in 0..6 {\n   |                      ^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nnote: the lint level is defined here\n  --> src/main.rs:3:9\n   |\n3  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(clippy::needless_range_loop)]` implied by `#[deny(warnings)]`\nhelp: consider using an iterator and enumerate()\n   |\n80 |             for (i, <item>) in mac_addr.iter_mut().enumerate() {\n   |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"]}}]},{"user":"kern-crates","repo":"rCoreloongArch","pkg":"easy-fs-fuse","count":3,"raw_reports":[{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=easy-fs-fuse, checker=Mirai\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/rCoreloongArch/easy-fs-fuse\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling libc v0.2.159\n    Checking byteorder v1.5.0\n    Checking cfg-if v1.0.0\n   Compiling indexmap v1.9.3\n    Checking hashbrown v0.12.3\n    Checking os_str_bytes v6.6.1\nerror: failed to run custom build command for `libc v0.2.159`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_9/kern-crates/rCoreloongArch/target/debug/build/libc-2b5100b9da3f0ae3/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.159/build.rs:253:9:\n  Failed to get rustc version\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-09-28T16:03:11Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lazy.rs:36:23: 36:43 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lazy.rs:39:13: 39:39 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T16:03:11Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-28T16:03:11Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T16:03:11Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"easy-fs-fuse/src/main.rs","count":1,"kinds":{"Clippy(Warn)":["warning: useless conversion to the same type: `std::fs::ReadDir`\n  --> easy-fs-fuse/src/main.rs:60:24\n   |\n60 |       let apps: Vec<_> = read_dir(src_path)\n   |  ________________________^\n61 | |         .unwrap()\n62 | |         .into_iter()\n   | |____________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n   = note: `#[warn(clippy::useless_conversion)]` on by default\nhelp: consider removing `.into_iter()`\n   |\n60 ~     let apps: Vec<_> = read_dir(src_path)\n61 +         .unwrap()\n   |\n\n"]}}]},{"user":"kern-crates","repo":"elf_parser","pkg":"elf_parser","count":3,"raw_reports":[{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=elf_parser, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_7/kern-crates/elf_parser\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling rustversion v1.0.17\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.6.0\n    Checking volatile v0.4.6\n    Checking bit_field v0.10.2\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking aarch64-cpu v9.4.0\n    Checking log v0.4.22\n    Checking zero v0.1.3\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_7/kern-crates/elf_parser/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T01:50:16Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:50:16Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/user_stack.rs","count":1,"kinds":{"Clippy(Warn)":["warning: can be more succinctly written as a byte str\n  --> src/user_stack.rs:51:19\n   |\n51 |         self.push(&[b'\\0']);\n   |                   ^^^^^^^^ help: try: `b\"\\0\"`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#byte_char_slices\n   = note: `#[warn(clippy::byte_char_slices)]` on by default\n\n"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-boot-stm32","count":3,"raw_reports":[{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n    Checking pin-utils v0.1.0\n    Checking nb v0.1.3\n    Checking futures-task v0.3.30\n    Checking embedded-hal v0.2.7\n    Checking critical-section v1.1.3\n    Checking futures-core v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking hash32 v0.3.1\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.30\n   Compiling typenum v1.17.0\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling nb v0.1.3\n   Compiling critical-section v1.1.3\n   Compiling pin-utils v0.1.0\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n   Compiling futures-util v0.3.30\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x558824eae225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x558824ecc53b - core::fmt::write::h0c46818975380aad\n     2:     0x558824eac09f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x558824eadffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x558824eaf369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x558824eaf0ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x558824eaf823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x558824eaf6cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x558824eae6e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x558824eaf437 - rust_begin_unwind\n    10:     0x558824ecb763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x558824e92e3e - build_script_build::main::hf548add4bf28e130\n    12:     0x558824e90a63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x558824e91986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x558824e919d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x558824ea951d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x558824e919b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x558824e92f05 - main\n    18:     0x7f25fc829d90 - <unknown>\n    19:     0x7f25fc829e40 - __libc_start_main\n    20:     0x558824e8f2c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=embassy-boot-stm32, checker=Mirai\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling semver-parser v0.7.0\n   Compiling cortex-m v0.7.7\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling proc-macro2 v1.0.86\n    Checking nb v0.1.3\n   Compiling semver v0.9.0\n    Checking embedded-hal v0.2.7\n    Checking byteorder v1.5.0\n   Compiling rustc_version v0.2.3\n   Compiling heapless v0.8.0\n   Compiling unicode-ident v1.0.13\n    Checking hash32 v0.3.1\n    Checking stable_deref_trait v1.2.0\n   Compiling bare-metal v0.2.5\n   Compiling version_check v0.9.5\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.30\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n    Checking critical-section v1.1.3\n    Checking futures-core v0.3.30\n    Checking pin-project-lite v0.2.14\n   Compiling generic-array v0.14.7\n    Checking futures-util v0.3.30\n   Compiling quote v1.0.37\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling litrs v0.4.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling vcell v0.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling volatile-register v0.2.2\n   Compiling document-features v0.2.10\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\n   Compiling syn v1.0.109\n   Compiling cortex-m-rt v0.7.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling bitfield v0.13.2\n   Compiling autocfg v1.4.0\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c1922a04b80612de/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-net-driver","count":3,"raw_reports":[{"file":"src/lib.rs","count":3,"kinds":{"Clippy(Warn)":["warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"],"Unformatted":["file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 86 to 86)\n-    type RxToken<'a> = T::RxToken<'a>\n+    type RxToken<'a>\n+        = T::RxToken<'a>\n","file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 89 to 89)\n-    type TxToken<'a> = T::TxToken<'a>\n+    type TxToken<'a>\n+        = T::TxToken<'a>\n"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-net-driver-channel","count":3,"raw_reports":[{"file":"src/lib.rs","count":3,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n","warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"],"Unformatted":["file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel/src/lib.rs (original lines from 329 to 330)\n-    type RxToken<'a> = RxToken<'a, MTU> where Self: 'a ;\n-    type TxToken<'a> = TxToken<'a, MTU> where Self: 'a ;\n+    type RxToken<'a>\n+        = RxToken<'a, MTU>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, MTU>\n+    where\n+        Self: 'a;\n"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-net-tuntap","count":3,"raw_reports":[{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=embassy-net-tuntap, checker=Mirai\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling autocfg v1.4.0\n   Compiling libc v0.2.159\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling rustix v0.37.27\nerror: failed to run custom build command for `libc v0.2.159`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap/target/debug/build/libc-82add201c3d4e665/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.159/build.rs:253:9:\n  Failed to get rustc version\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-09-29T05:04:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:04:52Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:04:55Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:04:55Z WARN  lockbud::callbacks] crate async_io contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/lib.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap/src/lib.rs (original lines from 155 to 156)\n-    type RxToken<'a> = RxToken where Self: 'a;\n-    type TxToken<'a> = TxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a>\n+    where\n+        Self: 'a;\n"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-usb-logger","count":3,"raw_reports":[{"file":"src/lib.rs","count":2,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n","warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-09-29T05:13:41Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:13:41Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:14:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:14:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"zcore-linux-syscall","pkg":"linux-syscall","count":3,"raw_reports":[{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=linux-syscall, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_13/kern-crates/zcore-linux-syscall\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://github.com/kern-crates/zcore-kernel-hal.git`\n    Updating git repository `https://github.com/kern-crates/zcore-linux-object.git`\n    Updating git repository `https://github.com/DeathWish5/kernel-sync`\n    Updating git repository `https://github.com/rcore-os/rcore-fs`\n    Updating git repository `https://github.com/kern-crates/zcore-zircon-object.git`\n    Updating git repository `https://github.com/smoltcp-rs/smoltcp`\n    Updating git repository `https://github.com/kern-crates/zcore-drivers.git`\n    Updating git repository `https://github.com/rcore-os/x86-smpboot`\n    Updating git repository `https://github.com/DeathWish5/PreemptiveScheduler`\n    Updating git repository `https://github.com/rust-embedded/riscv`\n    Updating git repository `https://github.com/rzswh/region-allocator`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n    Updating git repository `https://github.com/rcore-os/device_tree-rs`\n    Updating git repository `https://github.com/rcore-os/isomorphic_drivers`\n    Updating git repository `https://github.com/elliott10/pci-rs`\n    Updating git repository `https://github.com/rcore-os/virtio-drivers`\n    Updating git repository `https://github.com/pleasewhy/unicycle`\n    Updating git repository `https://github.com/pleasewhy/uniset`\nerror: failed to select a version for the requirement `funty = \"~1.2\"`\ncandidate versions found which didn't match: 3.0.0-rc2, 3.0.0-rc1, 2.0.0, ...\nlocation searched: crates.io index\nrequired by package `bitvec v0.22.0`\n    ... which satisfies dependency `bitvec = \"^0.22\"` of package `rcore-fs-sfs v0.1.0 (https://github.com/rcore-os/rcore-fs?rev=1a3246b#1a3246b1)`\n    ... which satisfies git dependency `rcore-fs-sfs` of package `linux-object v0.1.0 (https://github.com/kern-crates/zcore-linux-object.git?rev=1304b7e1#1304b7e1)`\n    ... which satisfies git dependency `linux-object` of package `linux-syscall v0.1.0 (/home/runner/check/batch_13/kern-crates/zcore-linux-syscall)`\nif you are looking for the prerelease package it needs to be specified explicitly\n    funty = { version = \"3.0.0-rc2\" }\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=linux-syscall, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_13/kern-crates/zcore-linux-syscall\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n    Updating crates.io index\n    Updating git repository `https://github.com/kern-crates/zcore-kernel-hal.git`\n    Updating git repository `https://github.com/kern-crates/zcore-linux-object.git`\n    Updating git repository `https://github.com/DeathWish5/kernel-sync`\n    Updating git repository `https://github.com/rcore-os/rcore-fs`\n    Updating git repository `https://github.com/kern-crates/zcore-zircon-object.git`\n    Updating git repository `https://github.com/smoltcp-rs/smoltcp`\n    Updating git repository `https://github.com/kern-crates/zcore-drivers.git`\n    Updating git repository `https://github.com/rcore-os/x86-smpboot`\n    Updating git repository `https://github.com/DeathWish5/PreemptiveScheduler`\n    Updating git repository `https://github.com/rust-embedded/riscv`\n    Updating git repository `https://github.com/rzswh/region-allocator`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n    Updating git repository `https://github.com/rcore-os/device_tree-rs`\n    Updating git repository `https://github.com/rcore-os/isomorphic_drivers`\n    Updating git repository `https://github.com/elliott10/pci-rs`\n    Updating git repository `https://github.com/rcore-os/virtio-drivers`\n    Updating git repository `https://github.com/pleasewhy/unicycle`\n    Updating git repository `https://github.com/pleasewhy/uniset`\nerror: failed to select a version for the requirement `funty = \"~1.2\"`\ncandidate versions found which didn't match: 3.0.0-rc2, 3.0.0-rc1, 2.0.0, ...\nlocation searched: crates.io index\nrequired by package `bitvec v0.22.0`\n    ... which satisfies dependency `bitvec = \"^0.22\"` of package `rcore-fs-sfs v0.1.0 (https://github.com/rcore-os/rcore-fs?rev=1a3246b#1a3246b1)`\n    ... which satisfies git dependency `rcore-fs-sfs` of package `linux-object v0.1.0 (https://github.com/kern-crates/zcore-linux-object.git?rev=1304b7e1#1304b7e1)`\n    ... which satisfies git dependency `linux-object` of package `linux-syscall v0.1.0 (/home/runner/check/batch_13/kern-crates/zcore-linux-syscall)`\nif you are looking for the prerelease package it needs to be specified explicitly\n    funty = { version = \"3.0.0-rc2\" }\nperhaps a crate was updated and forgotten to be re-vendored?\n"]}},{"file":"src/file/poll.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_13/kern-crates/zcore-linux-syscall/src/file/poll.rs (original lines from 9 to 9)\n-use bitvec::prelude::{BitVec, Lsb0, BitSlice};\n+use bitvec::prelude::{BitSlice, BitVec, Lsb0};\n"]}}]},{"user":"kern-crates","repo":"lwext4","pkg":"lwext4-mkfs","count":3,"raw_reports":[{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=lwext4-mkfs, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_8/kern-crates/lwext4/lwext4-mkfs\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling glob v0.3.1\n   Compiling libc v0.2.159\n   Compiling prettyplease v0.2.22\n   Compiling rustix v0.38.37\nerror: failed to run custom build command for `libc v0.2.159`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_8/kern-crates/lwext4/target/debug/build/libc-2b5100b9da3f0ae3/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.159/build.rs:253:9:\n  Failed to get rustc version\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:13:17Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:13:17Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-01T02:13:19Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:13:19Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-01T02:13:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:13:22Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"lwext4-rs/src/lib.rs","count":1,"kinds":{"Clippy(Warn)":["warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> lwext4-rs/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"]}}]},{"user":"Starry-OS","repo":"Starry","pkg":"monolithic_userboot","count":3,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=monolithic_userboot, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/Starry-OS/Starry/apps/monolithic_userboot\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling proc-macro2 v1.0.86\n[2024-09-28T15:34:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:34:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling unicode-ident v1.0.12\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.204\n   Compiling autocfg v1.3.0\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.16\n   Compiling lock_api v0.4.12\n   Compiling indexmap v2.2.6\n   Compiling toml_datetime v0.6.8\n   Compiling quote v1.0.36\n   Compiling syn v2.0.72\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling syn v1.0.109\n   Compiling rustversion v1.0.17\n   Compiling toml_edit v0.22.18\n   Compiling libc v0.2.155\n   Compiling x86 v0.52.0\n   Compiling spin v0.9.8\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#d7d646ca)\n   Compiling base64 v0.13.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\n   Compiling unicode-width v0.1.13\n   Compiling kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#72e00672)\n   Compiling svgbobdoc v0.3.0\n   Compiling x86_64 v0.15.1\n   Compiling paste v1.0.15\n   Compiling spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#769caa8b)\n   Compiling rlsf v0.2.1\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling x86_64 v0.14.12\n   Compiling of v0.1.0 (https://github.com/Starry-OS/of.git#f54b1eeb)\n   Compiling page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n   Compiling axalloc v0.1.0 (https://github.com/Starry-OS/axalloc.git#da0de65d)\n   Compiling axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n   Compiling page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n   Compiling zerocopy-derive v0.7.35\n   Compiling enumn v0.1.14\n   Compiling scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n   Compiling driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n   Compiling x2apic v0.4.3\n   Compiling driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#47e771d7)\n   Compiling timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling version_check v0.9.5\n   Compiling axdriver v0.1.0 (https://github.com/Starry-OS/axdriver.git#fdf9d5ef)\n   Compiling nb v1.1.0\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git#2bd62ee3)\n   Compiling nb v0.1.3\n   Compiling axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n   Compiling ahash v0.7.8\n   Compiling axtask v0.1.0 (https://github.com/Starry-OS/axtask.git#4ae6b15a)\n   Compiling getrandom v0.2.15\n   Compiling axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n[2024-09-28T15:37:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lazy.rs:36:23: 36:43 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lazy.rs:39:13: 39:39 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:37:05Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling zerocopy v0.7.35\n   Compiling capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n[2024-09-28T15:37:05Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/git/checkouts/axtask-404320116fa6e0d9/4ae6b15/src/schedule.rs:216:64: 216:80 (#0) after dropped at /home/runner/.cargo/git/checkouts/axtask-404320116fa6e0d9/4ae6b15/src/schedule.rs:136:21: 136:30 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-28T15:37:05Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }\n   Compiling axsync v0.1.0 (https://github.com/Starry-OS/axsync.git#70651a7c)\n   Compiling fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n   Compiling once_cell v1.19.0\n   Compiling void v1.0.2\n   Compiling riscv v0.10.1\n   Compiling zero v0.1.3\n   Compiling xmas-elf v0.9.1\n   Compiling embedded-hal v0.2.7\n   Compiling virtio-drivers v0.7.5\n   Compiling heapless v0.8.0\n   Compiling critical-section v1.1.2\n   Compiling elf_parser v0.1.0 (https://github.com/Starry-OS/elf_parser.git#061cec5c)\n   Compiling hashbrown v0.11.2\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=b7134a3#b7134a31)\n   Compiling num_enum_derive v0.5.11\n   Compiling arch_boot v0.1.0 (https://github.com/Starry-OS/arch_boot.git#af6f0238)\n   Compiling driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n   Compiling driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n   Compiling num_enum v0.5.11\n   Compiling axfs v0.1.0 (https://github.com/Starry-OS/axfs.git#74ba6295)\n   Compiling axfutex v0.1.0 (https://github.com/Starry-OS/axfutex.git#5eee19d0)\n   Compiling axmem v0.1.0 (https://github.com/Starry-OS/axmem.git#2e66a8ad)\n   Compiling axprocess v0.1.0 (https://github.com/Starry-OS/axprocess.git#6ab9c7a7)\n   Compiling axnet v0.1.0 (https://github.com/Starry-OS/axnet.git#48d68eb8)\n   Compiling axruntime v0.1.0 (https://github.com/Starry-OS/axruntime.git#3ff4e76f)\n   Compiling axfeat v0.1.0 (https://github.com/Starry-OS/axfeat.git#a0d5a481)\n   Compiling linux_syscall_api v0.1.0 (https://github.com/Starry-OS/linux_syscall_api.git#bc828f33)\n[2024-09-28T15:37:11Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/git/checkouts/linux_syscall_api-6fd063eab50f7cab/bc828f3/src/syscall_fs/imp/ctl.rs:212:18: 212:90 (#0) after dropped at /home/runner/.cargo/git/checkouts/linux_syscall_api-6fd063eab50f7cab/bc828f3/src/syscall_fs/imp/ctl.rs:215:5: 215:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-28T15:37:11Z WARN  lockbud::callbacks] crate linux_syscall_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }\n   Compiling axtrap v0.1.0 (https://github.com/Starry-OS/axtrap.git#f2529e64)\n   Compiling axstarry v0.1.0 (https://github.com/Starry-OS/axstarry.git#a60752d1)\n   Compiling monolithic_userboot v0.1.0 (/home/runner/check/repos-default/Starry-OS/Starry/apps/monolithic_userboot)\nerror: linking with `cc` failed: exit status: 1\n  |\n  = note: LC_ALL=\"C\" PATH=\"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin:/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin/self-contained:/snap/bin:/home/runner/.local/bin:/opt/pipx_bin:/home/runner/.cargo/bin:/home/runner/.config/composer/vendor/bin:/usr/local/.ghcup/bin:/home/runner/.dotnet/tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin\" VSLANG=\"1033\" \"cc\" \"-m64\" \"/tmp/rustcuHAhik/symbols.o\" \"/home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o\" \"-Wl,--as-needed\" \"-L\" \"/home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps\" \"-L\" \"/home/runner/check/repos-default/Starry-OS/Starry/target/debug/deps\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-Wl,-Bstatic\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcompiler_builtins-e8b7e96e438f08f6.rlib\" \"-Wl,-Bdynamic\" \"-lgcc_s\" \"-lutil\" \"-lrt\" \"-lpthread\" \"-lm\" \"-ldl\" \"-lc\" \"-B/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin/gcc-ld\" \"-fuse-ld=lld\" \"-Wl,--eh-frame-hdr\" \"-Wl,-z,noexecstack\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/self-contained\" \"-o\" \"/home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458\" \"-Wl,--gc-sections\" \"-pie\" \"-Wl,-z,relro,-z,now\" \"-nodefaultlibs\"\n  = note: rust-lld: error: relocation R_X86_64_32S cannot be used against local symbol; recompile with -fPIC\n          >>> defined in /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o\n          >>> referenced by cpu.rs:3 (src/cpu.rs:3)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::cpu::CPU_ID_WRAPPER::read_current_raw::h13de9f7f52bb28b9)\n          \n          rust-lld: error: relocation R_X86_64_32S cannot be used against symbol '__PERCPU_SELF_PTR'; recompile with -fPIC\n          >>> defined in /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o\n          >>> referenced by processor.rs:19 (src/processor.rs:19)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axtask::processor::PROCESSOR_WRAPPER::current_ptr::h142daf2a768c6382)\n          \n          rust-lld: error: relocation R_X86_64_32S cannot be used against local symbol; recompile with -fPIC\n          >>> defined in /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o\n          >>> referenced by processor.rs:19 (src/processor.rs:19)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axtask::processor::PROCESSOR_WRAPPER::current_ptr::h142daf2a768c6382)\n          \n          rust-lld: error: relocation R_X86_64_32S cannot be used against local symbol; recompile with -fPIC\n          >>> defined in /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o\n          >>> referenced by current.rs:145 (/home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/d7d646c/src/current.rs:145)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(taskctx::current::CURRENT_TASK_PTR_WRAPPER::read_current_raw::h8f18f0e1d3f27e21)\n          \n          rust-lld: error: relocation R_X86_64_32S cannot be used against local symbol; recompile with -fPIC\n          >>> defined in /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o\n          >>> referenced by current.rs:182 (/home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/d7d646c/src/current.rs:182)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(taskctx::current::CURRENT_TASK_PTR_WRAPPER::write_current_raw::h8b786b5cc5f571e3)\n          \n          rust-lld: error: undefined symbol: _stext\n          >>> referenced by mem.rs:82 (src/mem.rs:82)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> referenced by mem.rs:81 (src/mem.rs:81)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> did you mean: _etext\n          >>> defined in: <internal>\n          \n          rust-lld: error: undefined symbol: _srodata\n          >>> referenced by mem.rs:88 (src/mem.rs:88)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> referenced by mem.rs:87 (src/mem.rs:87)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          \n          rust-lld: error: undefined symbol: _erodata\n          >>> referenced by mem.rs:89 (src/mem.rs:89)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> referenced by mem.rs:87 (src/mem.rs:87)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          \n          rust-lld: error: undefined symbol: _sdata\n          >>> referenced by mem.rs:94 (src/mem.rs:94)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> referenced by mem.rs:93 (src/mem.rs:93)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          \n          rust-lld: error: undefined symbol: boot_stack\n          >>> referenced by mem.rs:100 (src/mem.rs:100)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> referenced by mem.rs:99 (src/mem.rs:99)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          \n          rust-lld: error: undefined symbol: boot_stack_top\n          >>> referenced by mem.rs:101 (src/mem.rs:101)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> referenced by mem.rs:99 (src/mem.rs:99)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          \n          rust-lld: error: undefined symbol: _sbss\n          >>> referenced by mem.rs:106 (src/mem.rs:106)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> referenced by mem.rs:105 (src/mem.rs:105)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          \n          rust-lld: error: undefined symbol: _ebss\n          >>> referenced by mem.rs:107 (src/mem.rs:107)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> referenced by mem.rs:105 (src/mem.rs:105)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          \n          rust-lld: error: undefined symbol: __PERCPU_KERNEL_RSP_OFFSET\n          >>> referenced by context.rs:158 (src/arch/x86_64/context.rs:158)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(first_into_user)\n          >>> referenced by context.rs:205 (src/arch/x86_64/context.rs:205)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::arch::x86_64::context::task_context_switch::h7033c5f59ed08aa7)\n          collect2: error: ld returned 1 exit status\n          \n\nerror: could not compile `monolithic_userboot` (bin \"monolithic_userboot\") due to 1 previous error\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=monolithic_userboot, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry/apps/monolithic_userboot\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling libc v0.2.155\n   Compiling syn v1.0.109\n   Compiling rustversion v1.0.17\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Starry-OS/Starry/target/debug/build/rustversion-5901f74b94ed47a6/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-09-28T15:34:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:34:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-28T15:37:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lazy.rs:36:23: 36:43 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lazy.rs:39:13: 39:39 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:37:05Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-28T15:37:05Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/git/checkouts/axtask-404320116fa6e0d9/4ae6b15/src/schedule.rs:216:64: 216:80 (#0) after dropped at /home/runner/.cargo/git/checkouts/axtask-404320116fa6e0d9/4ae6b15/src/schedule.rs:136:21: 136:30 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-28T15:37:05Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }\n[2024-09-28T15:37:11Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/git/checkouts/linux_syscall_api-6fd063eab50f7cab/bc828f3/src/syscall_fs/imp/ctl.rs:212:18: 212:90 (#0) after dropped at /home/runner/.cargo/git/checkouts/linux_syscall_api-6fd063eab50f7cab/bc828f3/src/syscall_fs/imp/ctl.rs:215:5: 215:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-28T15:37:11Z WARN  lockbud::callbacks] crate linux_syscall_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }"]}}]},{"user":"kern-crates","repo":"rcore-tutorial-v3-with-hal-component","pkg":"patch_tool","count":3,"raw_reports":[{"file":"src/patch.rs","count":2,"kinds":{"Clippy(Warn)":["warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/patch.rs:46:22\n   |\n46 |     patch_repo_name: &String,\n   |                      ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n","warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/patch.rs:47:13\n   |\n47 |     commit: &String,\n   |             ^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\nhelp: change this to\n   |\n47 ~     commit: &str,\n48 | ) -> anyhow::Result<()> {\n...\n88 |     git_table.insert(\"git\".to_string(), toml::Value::String(patch_git.clone()));\n89 ~     git_table.insert(\"rev\".to_string(), toml::Value::String(commit.to_owned()));\n   |\n\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=patch_tool, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/tools/patch_tool\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling serde v1.0.210\n    Checking hashbrown v0.14.5\n    Checking equivalent v1.0.1\n    Checking winnow v0.6.20\n   Compiling anyhow v1.0.89\n    Checking indexmap v2.5.0\n   Compiling quote v1.0.37\n   Compiling syn v2.0.79\n   Compiling serde_derive v1.0.210\n    Checking serde_spanned v0.6.8\n    Checking toml_datetime v0.6.8\n    Checking toml_edit v0.22.22\n    Checking toml v0.8.19\n    Checking patch_tool v0.1.0 (/home/runner/check/batch_9/kern-crates/rcore-tutorial-v3-with-hal-component/tools/patch_tool)\nerror: could not compile `patch_tool` (bin \"patch_tool\")\n"]}}]},{"user":"kern-crates","repo":"zCore","pkg":"uart","count":3,"raw_reports":[{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=uart, checker=Clippy\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/kern-crates/zCore/zcore-tests/testcases/src/uart\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n Downloading crates ...\n  Downloaded cfg_aliases v0.2.1\n  Downloaded nix v0.29.0\n  Downloaded libc v0.2.159\nerror: package `nix v0.29.0` cannot be built because it requires rustc 1.69 or newer, while the currently active rustc version is 1.66.0-nightly\nEither upgrade to rustc 1.69 or newer, or use\ncargo update -p nix@0.29.0 --precise ver\nwhere `ver` is the latest version of `nix` supporting rustc 1.66.0-nightly\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=uart, checker=Lockbud\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/kern-crates/zCore/zcore-tests/testcases/src/uart\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling libc v0.2.159\n   Compiling cfg_aliases v0.2.1\n   Compiling bitflags v2.6.0\n   Compiling cfg-if v1.0.0\n   Compiling nix v0.29.0\n   Compiling uart v0.1.0 (/home/runner/check/repos-default/kern-crates/zCore/zcore-tests/testcases/src/uart)\nerror[E0432]: unresolved imports `nix::fcntl::open`, `nix::fcntl::OFlag`, `nix::sys::stat`\n   --> src/main.rs:2:13\n    |\n2   |     fcntl::{open, OFlag},\n    |             ^^^^  ^^^^^ no `OFlag` in `fcntl`\n    |             |\n    |             no `open` in `fcntl`\n3   |     sys::stat::Mode,\n    |          ^^^^ could not find `stat` in `sys`\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/fcntl.rs:220:8\n    |\n220 | pub fn open<P: ?Sized + NixPath>(\n    |        ^^^^\n    = note: the item is gated behind the `fs` feature\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/sys/mod.rs:128:13\n    |\n128 |     pub mod stat;\n    |             ^^^^\n    = note: the item is gated behind the `fs` feature\n\nFor more information about this error, try `rustc --explain E0432`.\nerror: could not compile `uart` (bin \"uart\") due to 1 previous error\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=uart, checker=Mirai\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zCore/zcore-tests/testcases/src/uart\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling libc v0.2.159\n   Compiling cfg_aliases v0.2.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling nix v0.29.0\nerror: failed to run custom build command for `libc v0.2.159`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_12/kern-crates/zCore/zcore-tests/testcases/src/uart/target/debug/build/libc-589343fc888734bf/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.159/build.rs:253:9:\n  Failed to get rustc version\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"]}}]},{"user":"kern-crates","repo":"zcore-loader","pkg":"zcore-loader","count":3,"raw_reports":[{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=zcore-loader, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_13/kern-crates/zcore-loader\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://github.com/DeathWish5/PreemptiveScheduler`\n    Updating git repository `https://github.com/kern-crates/zcore-kernel-hal.git`\n    Updating git repository `https://github.com/kern-crates/zcore-linux-object.git`\n    Updating git repository `https://github.com/kern-crates/zcore-linux-syscall.git`\n    Updating git repository `https://github.com/kern-crates/zcore-zircon-object.git`\n    Updating git repository `https://github.com/kern-crates/zcore-zircon-syscall.git`\n    Updating git repository `https://github.com/rcore-os/rcore-fs`\n    Updating git repository `https://github.com/pleasewhy/unicycle`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n    Updating git repository `https://github.com/DeathWish5/kernel-sync`\n    Updating git repository `https://github.com/smoltcp-rs/smoltcp`\n    Updating git repository `https://github.com/kern-crates/zcore-drivers.git`\n    Updating git repository `https://github.com/rcore-os/x86-smpboot`\n    Updating git repository `https://github.com/rzswh/region-allocator`\n    Updating git repository `https://github.com/pleasewhy/uniset`\n    Updating git repository `https://github.com/rust-embedded/riscv`\n    Updating git repository `https://github.com/rcore-os/device_tree-rs`\n    Updating git repository `https://github.com/rcore-os/isomorphic_drivers`\n    Updating git repository `https://github.com/elliott10/pci-rs`\n    Updating git repository `https://github.com/rcore-os/virtio-drivers`\nerror: failed to select a version for the requirement `funty = \"~1.2\"`\ncandidate versions found which didn't match: 3.0.0-rc2, 3.0.0-rc1, 2.0.0, ...\nlocation searched: crates.io index\nrequired by package `bitvec v0.22.0`\n    ... which satisfies dependency `bitvec = \"^0.22\"` of package `rcore-fs-sfs v0.1.0 (https://github.com/rcore-os/rcore-fs?rev=1a3246b#1a3246b1)`\n    ... which satisfies git dependency `rcore-fs-sfs` of package `linux-object v0.1.0 (https://github.com/kern-crates/zcore-linux-object.git?rev=1304b7e1#1304b7e1)`\n    ... which satisfies git dependency `linux-object` of package `zcore-loader v0.1.0 (/home/runner/check/batch_13/kern-crates/zcore-loader)`\nif you are looking for the prerelease package it needs to be specified explicitly\n    funty = { version = \"3.0.0-rc2\" }\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=zcore-loader, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_13/kern-crates/zcore-loader\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n    Updating crates.io index\n    Updating git repository `https://github.com/DeathWish5/PreemptiveScheduler`\n    Updating git repository `https://github.com/kern-crates/zcore-kernel-hal.git`\n    Updating git repository `https://github.com/kern-crates/zcore-linux-object.git`\n    Updating git repository `https://github.com/kern-crates/zcore-linux-syscall.git`\n    Updating git repository `https://github.com/kern-crates/zcore-zircon-object.git`\n    Updating git repository `https://github.com/kern-crates/zcore-zircon-syscall.git`\n    Updating git repository `https://github.com/rcore-os/rcore-fs`\n    Updating git repository `https://github.com/pleasewhy/unicycle`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n    Updating git repository `https://github.com/DeathWish5/kernel-sync`\n    Updating git repository `https://github.com/smoltcp-rs/smoltcp`\n    Updating git repository `https://github.com/kern-crates/zcore-drivers.git`\n    Updating git repository `https://github.com/rcore-os/x86-smpboot`\n    Updating git repository `https://github.com/rzswh/region-allocator`\n    Updating git repository `https://github.com/pleasewhy/uniset`\n    Updating git repository `https://github.com/rust-embedded/riscv`\n    Updating git repository `https://github.com/rcore-os/device_tree-rs`\n    Updating git repository `https://github.com/rcore-os/isomorphic_drivers`\n    Updating git repository `https://github.com/elliott10/pci-rs`\n    Updating git repository `https://github.com/rcore-os/virtio-drivers`\nerror: failed to select a version for the requirement `funty = \"~1.2\"`\ncandidate versions found which didn't match: 3.0.0-rc2, 3.0.0-rc1, 2.0.0, ...\nlocation searched: crates.io index\nrequired by package `bitvec v0.22.0`\n    ... which satisfies dependency `bitvec = \"^0.22\"` of package `rcore-fs-sfs v0.1.0 (https://github.com/rcore-os/rcore-fs?rev=1a3246b#1a3246b1)`\n    ... which satisfies git dependency `rcore-fs-sfs` of package `linux-object v0.1.0 (https://github.com/kern-crates/zcore-linux-object.git?rev=1304b7e1#1304b7e1)`\n    ... which satisfies git dependency `linux-object` of package `zcore-loader v0.1.0 (/home/runner/check/batch_13/kern-crates/zcore-loader)`\nif you are looking for the prerelease package it needs to be specified explicitly\n    funty = { version = \"3.0.0-rc2\" }\nperhaps a crate was updated and forgotten to be re-vendored?\n"]}},{"file":"src/zircon.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_13/kern-crates/zcore-loader/src/zircon.rs (original lines from 95 to 95)\n-pub fn run_userboot(zbi: impl AsRef<[u8]>, userboot: &[u8], vdso: &[u8], cmdline: &str) -> Arc<Process> {\n+pub fn run_userboot(\n+    zbi: impl AsRef<[u8]>,\n+    userboot: &[u8],\n+    vdso: &[u8],\n+    cmdline: &str,\n+) -> Arc<Process> {\n"]}}]},{"user":"Starry-OS","repo":"Starry","pkg":"arceos-bwbench","count":2,"raw_reports":[{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=arceos-bwbench, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry/apps/net/bwbench\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.12\n    Checking bit_field v0.10.2\n    Checking log v0.4.22\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.204\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.16\n    Checking bitflags v1.3.2\n   Compiling indexmap v2.2.6\n   Compiling quote v1.0.36\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.72\n    Checking cfg-if v1.0.0\n   Compiling autocfg v1.3.0\n   Compiling toml_edit v0.22.18\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking scopeguard v1.2.0\n   Compiling rustversion v1.0.17\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Starry-OS/Starry/target/debug/build/rustversion-5901f74b94ed47a6/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-09-28T15:34:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:34:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-28T15:34:38Z WARN  lockbud::callbacks] [\n      {\n        \"ConflictLock\": {\n          \"bug_kind\": \"ConflictLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": [\n            {\n              \"first_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"first_lock_span\": \"/home/runner/.cargo/git/checkouts/axnet-13731b5ff12d66e4/48d68eb/src/smoltcp_impl/udp.rs:189:13: 189:31 (#0)\",\n              \"second_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"second_lock_span\": \"/home/runner/.cargo/git/checkouts/axnet-13731b5ff12d66e4/48d68eb/src/smoltcp_impl/udp.rs:105:13: 105:32 (#0)\",\n              \"callchains\": [\n                [\n                  [\n                    \"/home/runner/.cargo/git/checkouts/axnet-13731b5ff12d66e4/48d68eb/src/smoltcp_impl/udp.rs:192:13: 192:64 (#0)\"\n                  ]\n                ]\n              ]\n            },\n            {\n              \"first_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"first_lock_span\": \"/home/runner/.cargo/git/checkouts/axnet-13731b5ff12d66e4/48d68eb/src/smoltcp_impl/udp.rs:189:13: 189:31 (#0)\",\n              \"second_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"second_lock_span\": \"/home/runner/.cargo/git/checkouts/axnet-13731b5ff12d66e4/48d68eb/src/smoltcp_impl/udp.rs:105:13: 105:32 (#0)\",\n              \"callchains\": [\n                [\n                  [\n                    \"/home/runner/.cargo/git/checkouts/axnet-13731b5ff12d66e4/48d68eb/src/smoltcp_impl/udp.rs:192:13: 192:64 (#0)\"\n                  ]\n                ]\n              ]\n            }\n          ],\n          \"explanation\": \"Locks mutually wait for each other to form a cycle\"\n        }\n      }\n    ]\n[2024-09-28T15:34:38Z WARN  lockbud::callbacks] crate axnet contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 1 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"Starry-OS","repo":"Starry","pkg":"arceos-tls","count":2,"raw_reports":[{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=arceos-tls, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry/apps/task/tls\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\n   Compiling rustversion v1.0.17\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#d7d646ca)\n    Checking static_assertions v1.1.0\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Starry-OS/Starry/target/debug/build/rustversion-5901f74b94ed47a6/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-09-28T15:34:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:34:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"axerrno","pkg":"axerrno","count":2,"raw_reports":[{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:11:32Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:11:32Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/lib.rs","count":1,"kinds":{"Clippy(Warn)":["warning: transmute used without annotations\n   --> src/lib.rs:234:36\n    |\n234 |             Ok(unsafe { core::mem::transmute(value) })\n    |                                    ^^^^^^^^^ help: consider adding missing annotations: `transmute::<i32, AxError>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n    = note: `#[warn(clippy::missing_transmute_annotations)]` on by default\n\n"]}}]},{"user":"kern-crates","repo":"axfs_vfs","pkg":"axfs_vfs","count":2,"raw_reports":[{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T01:56:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:56:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/path.rs","count":1,"kinds":{"Mirai":["warning: possible attempt to subtract with overflow\n  --> src/path.rs:41:32\n   |\n41 |                 } else if &buf[buf.len() - 1..] != \"/\" {\n   |                                ^^^^^^^^^^^^^\n\n"]}}]},{"user":"kern-crates","repo":"driver_net","pkg":"driver_net","count":2,"raw_reports":[{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:19:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:19:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/lib.rs","count":1,"kinds":{"Clippy(Warn)":["warning: the feature `const_mut_refs` has been stable since 1.83.0-nightly and no longer requires an attribute to enable\n --> src/lib.rs:4:12\n  |\n4 | #![feature(const_mut_refs)]\n  |            ^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"]}}]},{"user":"kern-crates","repo":"zcore-linux-object","pkg":"linux-object","count":2,"raw_reports":[{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=linux-object, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zcore-linux-object\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://github.com/kern-crates/zcore-kernel-hal.git`\n    Updating git repository `https://github.com/DeathWish5/kernel-sync`\n    Updating git repository `https://github.com/rcore-os/rcore-fs`\n    Updating git repository `https://github.com/smoltcp-rs/smoltcp`\n    Updating git repository `https://github.com/kern-crates/zcore-drivers.git`\n    Updating git repository `https://github.com/kern-crates/zcore-zircon-object.git`\n    Updating git repository `https://github.com/rcore-os/x86-smpboot`\n    Updating git repository `https://github.com/DeathWish5/PreemptiveScheduler`\n    Updating git repository `https://github.com/rust-embedded/riscv`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n    Updating git repository `https://github.com/rcore-os/device_tree-rs`\n    Updating git repository `https://github.com/rcore-os/isomorphic_drivers`\n    Updating git repository `https://github.com/elliott10/pci-rs`\n    Updating git repository `https://github.com/rcore-os/virtio-drivers`\n    Updating git repository `https://github.com/rzswh/region-allocator`\n    Updating git repository `https://github.com/pleasewhy/unicycle`\n    Updating git repository `https://github.com/pleasewhy/uniset`\nerror: failed to select a version for the requirement `funty = \"~1.2\"`\ncandidate versions found which didn't match: 3.0.0-rc2, 3.0.0-rc1, 2.0.0, ...\nlocation searched: crates.io index\nrequired by package `bitvec v0.22.0`\n    ... which satisfies dependency `bitvec = \"^0.22\"` of package `rcore-fs-sfs v0.1.0 (https://github.com/rcore-os/rcore-fs?rev=1a3246b#1a3246b1)`\n    ... which satisfies git dependency `rcore-fs-sfs` of package `linux-object v0.1.0 (/home/runner/check/batch_12/kern-crates/zcore-linux-object)`\nif you are looking for the prerelease package it needs to be specified explicitly\n    funty = { version = \"3.0.0-rc2\" }\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=linux-object, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zcore-linux-object\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n    Updating crates.io index\n    Updating git repository `https://github.com/kern-crates/zcore-kernel-hal.git`\n    Updating git repository `https://github.com/DeathWish5/kernel-sync`\n    Updating git repository `https://github.com/rcore-os/rcore-fs`\n    Updating git repository `https://github.com/smoltcp-rs/smoltcp`\n    Updating git repository `https://github.com/kern-crates/zcore-drivers.git`\n    Updating git repository `https://github.com/kern-crates/zcore-zircon-object.git`\n    Updating git repository `https://github.com/rcore-os/x86-smpboot`\n    Updating git repository `https://github.com/DeathWish5/PreemptiveScheduler`\n    Updating git repository `https://github.com/rust-embedded/riscv`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n    Updating git repository `https://github.com/rcore-os/device_tree-rs`\n    Updating git repository `https://github.com/rcore-os/isomorphic_drivers`\n    Updating git repository `https://github.com/elliott10/pci-rs`\n    Updating git repository `https://github.com/rcore-os/virtio-drivers`\n    Updating git repository `https://github.com/rzswh/region-allocator`\n    Updating git repository `https://github.com/pleasewhy/unicycle`\n    Updating git repository `https://github.com/pleasewhy/uniset`\nerror: failed to select a version for the requirement `funty = \"~1.2\"`\ncandidate versions found which didn't match: 3.0.0-rc2, 3.0.0-rc1, 2.0.0, ...\nlocation searched: crates.io index\nrequired by package `bitvec v0.22.0`\n    ... which satisfies dependency `bitvec = \"^0.22\"` of package `rcore-fs-sfs v0.1.0 (https://github.com/rcore-os/rcore-fs?rev=1a3246b#1a3246b1)`\n    ... which satisfies git dependency `rcore-fs-sfs` of package `linux-object v0.1.0 (/home/runner/check/batch_12/kern-crates/zcore-linux-object)`\nif you are looking for the prerelease package it needs to be specified explicitly\n    funty = { version = \"3.0.0-rc2\" }\nperhaps a crate was updated and forgotten to be re-vendored?\n"]}}]},{"user":"kern-crates","repo":"page_table","pkg":"page_table","count":2,"raw_reports":[{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=page_table, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_8/kern-crates/page_table\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling rustversion v1.0.17\n    Checking bit_field v0.10.2\n    Checking bitflags v2.6.0\n    Checking tock-registers v0.8.1\n    Checking volatile v0.4.6\n    Checking aarch64-cpu v9.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking log v0.4.22\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_8/kern-crates/page_table/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:14:42Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:14:42Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"rCoreloongArch","pkg":"stack_trace","count":2,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=stack_trace, checker=Lockbud\n// toolchain=nightly-2024-01-19, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/kern-crates/rCoreloongArch/stack_trace\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n[2024-09-28T16:03:20Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T16:03:20Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling stack_trace v0.1.0 (/home/runner/check/repos-default/kern-crates/rCoreloongArch/stack_trace)\nerror: invalid instruction mnemonic 'move'\n  --> stack_trace/src/trace.rs:38:15\n   |\n38 |         asm!(\"move {},$sp\",out(reg)t);\n   |               ^\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:2:2\n   |\n2  |     move rax,sp\n   |     ^^^^\n\nerror: could not compile `stack_trace` (lib) due to 1 previous error\n"]}},{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-09-28T16:03:20Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T16:03:20Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"libc-test","pkg":"","count":1,"raw_reports":[{"file":"repos-default/kern-crates/libc-test","count":1,"kinds":{"Cargo":["\n   0: 无法解析 `repos-default/kern-crates/libc-test` 内的 Rust 项目布局\n   1: repo_root `repos-default/kern-crates/libc-test` (规范路径为 `/home/runner/check/repos-default/kern-crates/libc-test`) 不是 Rust 项目，因为不包含任何 Cargo.toml\n\nLocation:\n   src/layout/mod.rs:139\n\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ SPANTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n   0: os_checker::run_checker::try_new with user=\"kern-crates\" repo=\"libc-test\"\n      at src/run_checker/mod.rs:182\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets."]}}]},{"user":"kern-crates","repo":"test-test-repo","pkg":"","count":1,"raw_reports":[{"file":"repos-default/kern-crates/test-test-repo","count":1,"kinds":{"Cargo":["\n   0: 无法解析 `repos-default/kern-crates/test-test-repo` 内的 Rust 项目布局\n   1: repo_root `repos-default/kern-crates/test-test-repo` (规范路径为 `/home/runner/check/repos-default/kern-crates/test-test-repo`) 不是 Rust 项目，因为不包含任何 Cargo.toml\n\nLocation:\n   src/layout/mod.rs:139\n\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ SPANTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n   0: os_checker::run_checker::try_new with user=\"kern-crates\" repo=\"test-test-repo\"\n      at src/run_checker/mod.rs:182\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets."]}}]},{"user":"kern-crates","repo":"r4l","pkg":"","count":1,"raw_reports":[{"file":"repos-default/kern-crates/r4l","count":1,"kinds":{"Cargo":["\n   0: 无法解析 `repos-default/kern-crates/r4l` 内的 Rust 项目布局\n   1: 无法读取 cargo metadata 的结果：`cargo metadata` exited with an error: error: current package believes it's in a workspace when it's not:\n      current:   /home/runner/check/repos-default/kern-crates/r4l/drivers/i2c/busses/i2c-designware/Cargo.toml\n      workspace: /home/runner/check/repos-default/kern-crates/r4l/Cargo.toml\n\n      this may be fixable by adding `drivers/i2c/busses/i2c-designware` to the `workspace.members` array of the manifest located at: /home/runner/check/repos-default/kern-crates/r4l/Cargo.toml\n      Alternatively, to keep it out of the workspace, add the package to the `workspace.exclude` array, or add an empty `[workspace]` table to the package's manifest.\n   1: \n\nLocation:\n   src/layout/mod.rs:63\n\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ SPANTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n   0: os_checker::run_checker::try_new with user=\"kern-crates\" repo=\"r4l\"\n      at src/run_checker/mod.rs:182\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets."]}}]},{"user":"kern-crates","repo":"slab_allocator","pkg":"","count":1,"raw_reports":[{"file":"repos-default/kern-crates/slab_allocator","count":1,"kinds":{"Cargo":["\n   0: 无法解析 `repos-default/kern-crates/slab_allocator` 内的 Rust 项目布局\n   1: 无法读取 cargo metadata 的结果：`cargo metadata` exited with an error: error: duplicate key `keywords` in table `package`\n       --> repos-default/kern-crates/slab_allocator/Cargo.toml:9:1\n        |\n      9 | keywords = [\"slab\", \"allocator\", \"no_std\", \"heap\", \"kernel\"]\n        | ^\n        |\n   1: \n\nLocation:\n   src/layout/mod.rs:63\n\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ SPANTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n   0: os_checker::run_checker::try_new with user=\"kern-crates\" repo=\"slab_allocator\"\n      at src/run_checker/mod.rs:182\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets."]}}]},{"user":"Starry-OS","repo":"Starry","pkg":"arceos-display","count":1,"raw_reports":[{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=arceos-display, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry/apps/display\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling num-traits v0.2.19\n   Compiling az v1.2.1\n    Checking byteorder v1.5.0\n    Checking micromath v2.1.0\n    Checking float-cmp v0.9.0\n    Checking embedded-graphics-core v0.4.0\n    Checking embedded-graphics v0.8.1\n    Checking arceos-display v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry/apps/display)\nerror: could not compile `arceos-display` (bin \"arceos-display\")\n"]}}]},{"user":"Starry-OS","repo":"Starry","pkg":"arceos-exception","count":1,"raw_reports":[{"file":"apps/exception/src/main.rs","count":1,"kinds":{"Mirai":["warning: Inline assembly code cannot be analyzed by MIRAI.\n  --> apps/exception/src/main.rs:13:9\n   |\n13 |         asm!(\"int3\");\n   |         ^^^^^^^^^^^^\n\n"]}}]},{"user":"kern-crates","repo":"axfs_devfs","pkg":"axfs_devfs","count":1,"raw_reports":[{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:12:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:12:37Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"axio","pkg":"axio","count":1,"raw_reports":[{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T01:56:41Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:56:41Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"capability","pkg":"capability","count":1,"raw_reports":[{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:23:32Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:23:32Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"driver_block","pkg":"driver_block","count":1,"raw_reports":[{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:19:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:19:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"driver_pci","pkg":"driver_pci","count":1,"raw_reports":[{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:19:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:19:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"driver_virtio","pkg":"driver_virtio","count":1,"raw_reports":[{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-10-01T02:20:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T02:20:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-boot-nrf","count":1,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling byteorder v1.5.0\n   Compiling nb v0.1.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling critical-section v1.1.3\n   Compiling futures-task v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling futures-util v0.3.30\n   Compiling generic-array v0.14.7\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling cortex-m v0.7.7\n   Compiling bare-metal v0.2.5\n   Compiling embedded-storage v0.3.1\n   Compiling vcell v0.1.3\n   Compiling az v1.2.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling volatile-register v0.2.2\n   Compiling num-traits v0.2.19\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bitfield v0.13.2\n   Compiling cortex-m-rt v0.7.3\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling fixed v1.28.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling digest v0.10.7\n   Compiling signature v2.2.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\n   Compiling bitflags v2.6.0\n   Compiling embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\n"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-boot-rp","count":1,"raw_reports":[{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-09-29T04:56:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:00Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:14Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:08Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:22Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-nrf","count":1,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling nb v1.1.0\n   Compiling cfg-if v1.0.0\n   Compiling byteorder v1.5.0\n   Compiling void v1.0.2\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling stable_deref_trait v1.2.0\n   Compiling critical-section v1.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling cortex-m v0.7.7\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling embedded-io v0.6.1\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling az v1.2.1\n   Compiling typenum v1.17.0\n   Compiling volatile-register v0.2.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage v0.3.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling cortex-m-rt v0.7.3\n   Compiling fixed v1.28.0\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bitflags v2.6.0\n   Compiling rand_core v0.6.4\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\n"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-rp","count":1,"raw_reports":[{"file":"Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-09-29T05:07:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:10Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"AsyncModules","repo":"embassy-priority","pkg":"embassy-sync","count":1,"raw_reports":[{"file":"src/blocking_mutex/mod.rs","count":1,"kinds":{"Clippy(Warn)":["warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"]}}]},{"user":"kern-crates","repo":"flatten_objects","pkg":"flatten_objects","count":1,"raw_reports":[{"file":"src/lib.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `FlattenObjects<T, CAP>`\n  --> src/lib.rs:54:5\n   |\n54 | /     pub const fn new() -> Self {\n55 | |         assert!(CAP <= 1024);\n56 | |         Self {\n57 | |             objects: MaybeUninit::uninit_array(),\n...  |\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n52 + impl<T, const CAP: usize> Default for FlattenObjects<T, CAP> {\n53 +     fn default() -> Self {\n54 +         Self::new()\n55 +     }\n56 + }\n   |\n\n"]}}]},{"user":"kern-crates","repo":"handler_table","pkg":"handler_table","count":1,"raw_reports":[{"file":"src/lib.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `HandlerTable<N>`\n  --> src/lib.rs:21:5\n   |\n21 | /     pub const fn new() -> Self {\n22 | |         const EMPTY: AtomicUsize = AtomicUsize::new(0);\n23 | |         Self {\n24 | |             handlers: [EMPTY; N],\n25 | |         }\n26 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n18 + impl<const N: usize> Default for HandlerTable<N> {\n19 +     fn default() -> Self {\n20 +         Self::new()\n21 +     }\n22 + }\n   |\n\n"]}}]},{"user":"kern-crates","repo":"lazy_init","pkg":"lazy_init","count":1,"raw_reports":[{"file":"src/lib.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `LazyInit<T>`\n  --> src/lib.rs:49:5\n   |\n49 | /     pub const fn new() -> Self {\n50 | |         Self {\n51 | |             inited: AtomicBool::new(false),\n52 | |             data: UnsafeCell::new(MaybeUninit::uninit()),\n53 | |         }\n54 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n47 + impl<T> Default for LazyInit<T> {\n48 +     fn default() -> Self {\n49 +         Self::new()\n50 +     }\n51 + }\n   |\n\n"]}}]},{"user":"kern-crates","repo":"memory_addr","pkg":"memory_addr","count":1,"raw_reports":[{"file":"src/lib.rs","count":1,"kinds":{"Clippy(Warn)":["warning: the feature `const_mut_refs` has been stable since 1.83.0-nightly and no longer requires an attribute to enable\n --> src/lib.rs:2:12\n  |\n2 | #![feature(const_mut_refs)]\n  |            ^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"]}}]},{"user":"kern-crates","repo":"page_table_entry","pkg":"page_table_entry","count":1,"raw_reports":[{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=page_table_entry, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_8/kern-crates/page_table_entry\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling rustversion v1.0.17\n    Checking volatile v0.4.6\n    Checking bit_field v0.10.2\n    Checking bitflags v2.6.0\n    Checking tock-registers v0.8.1\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking aarch64-cpu v9.4.0\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_8/kern-crates/page_table_entry/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"]}}]},{"user":"kern-crates","repo":"rtc","pkg":"rtc","count":1,"raw_reports":[{"file":"src/goldfish.rs","count":1,"kinds":{"Clippy(Warn)":["warning: returning the result of a `let` binding from a block\n  --> src/goldfish.rs:26:9\n   |\n25 |         let rtc = Self { region };\n   |         -------------------------- unnecessary `let` binding\n26 |         rtc\n   |         ^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n   = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n   |\n25 ~         \n26 ~         Self { region }\n   |\n\n"]}}]},{"user":"kern-crates","repo":"syscall-table","pkg":"systable-macro-derive","count":1,"raw_reports":[{"file":"src/lib.rs","count":1,"kinds":{"Clippy(Warn)":["warning: returning the result of a `let` binding from a block\n  --> src/lib.rs:53:5\n   |\n52 |     let stream = TokenStream::from(expanded);\n   |     ----------------------------------------- unnecessary `let` binding\n53 |     stream\n   |     ^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n   = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n   |\n52 ~     \n53 ~     TokenStream::from(expanded)\n   |\n\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Mirai","Lockbud(Probably)","Lockbud(Possibly)","Unformatted"]}