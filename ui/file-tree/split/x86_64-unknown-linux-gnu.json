{"data":[{"user":"kern-crates","repo":"zcore-kernel-hal","pkg":"kernel-hal","count":22,"raw_reports":[{"file":"src/common/ipi.rs","count":9,"kinds":{"Clippy(Error)":["error: empty line after doc comment\n  --> src/common/ipi.rs:53:1\n   |\n53 | / ///\n54 | |\n   | |_\n55 |   const TYPE_SHIFT: usize = 60;\n   |   ----------------------- the comment documents this constant\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n   = note: `#[deny(clippy::empty_line_after_doc_comments)]` implied by `#[deny(warnings)]`\n   = help: if the empty line is unintentional remove it\n\n","error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:20:30\n   |\n20 |         IRQueue::new(unsafe {&mut IPI_REASON0} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n20 |         IRQueue::new(unsafe {&raw mut IPI_REASON0} ),\n   |                              ~~~~~~~~\n\n","error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:21:30\n   |\n21 |         IRQueue::new(unsafe {&mut IPI_REASON1} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n21 |         IRQueue::new(unsafe {&raw mut IPI_REASON1} ),\n   |                              ~~~~~~~~\n\n","error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:22:30\n   |\n22 |         IRQueue::new(unsafe {&mut IPI_REASON2} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n22 |         IRQueue::new(unsafe {&raw mut IPI_REASON2} ),\n   |                              ~~~~~~~~\n\n","error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:23:30\n   |\n23 |         IRQueue::new(unsafe {&mut IPI_REASON3} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n23 |         IRQueue::new(unsafe {&raw mut IPI_REASON3} ),\n   |                              ~~~~~~~~\n\n","error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:24:30\n   |\n24 |         IRQueue::new(unsafe {&mut IPI_REASON4} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n24 |         IRQueue::new(unsafe {&raw mut IPI_REASON4} ),\n   |                              ~~~~~~~~\n\n","error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:25:30\n   |\n25 |         IRQueue::new(unsafe {&mut IPI_REASON5} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n25 |         IRQueue::new(unsafe {&raw mut IPI_REASON5} ),\n   |                              ~~~~~~~~\n\n","error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:26:30\n   |\n26 |         IRQueue::new(unsafe {&mut IPI_REASON6} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n26 |         IRQueue::new(unsafe {&raw mut IPI_REASON6} ),\n   |                              ~~~~~~~~\n\n","error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:27:30\n   |\n27 |         IRQueue::new(unsafe {&mut IPI_REASON7} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n27 |         IRQueue::new(unsafe {&raw mut IPI_REASON7} ),\n   |                              ~~~~~~~~\n\n"]}},{"file":"src/utils/mpsc_queue.rs","count":4,"kinds":{"Clippy(Error)":["error: the following explicit lifetimes could be elided: 'a\n  --> src/utils/mpsc_queue.rs:17:13\n   |\n17 | unsafe impl<'a, T: Copy> Sync for MpscQueue<'a, T> {}\n   |             ^^                              ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[deny(clippy::needless_lifetimes)]` implied by `#[deny(warnings)]`\nhelp: elide the lifetimes\n   |\n17 - unsafe impl<'a, T: Copy> Sync for MpscQueue<'a, T> {}\n17 + unsafe impl<T: Copy> Sync for MpscQueue<'_, T> {}\n   |\n\n","error: the following explicit lifetimes could be elided: 'a\n  --> src/utils/mpsc_queue.rs:17:13\n   |\n17 | unsafe impl<'a, T: Copy> Sync for MpscQueue<'a, T> {}\n   |             ^^                              ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[deny(clippy::needless_lifetimes)]` implied by `#[deny(warnings)]`\nhelp: elide the lifetimes\n   |\n17 - unsafe impl<'a, T: Copy> Sync for MpscQueue<'a, T> {}\n17 + unsafe impl<T: Copy> Sync for MpscQueue<'_, T> {}\n   |\n\n","error: the following explicit lifetimes could be elided: 'a\n  --> src/utils/mpsc_queue.rs:19:13\n   |\n19 | unsafe impl<'a, T: Copy> Send for MpscQueue<'a, T> {}\n   |             ^^                              ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n19 - unsafe impl<'a, T: Copy> Send for MpscQueue<'a, T> {}\n19 + unsafe impl<T: Copy> Send for MpscQueue<'_, T> {}\n   |\n\n","error: the following explicit lifetimes could be elided: 'a\n  --> src/utils/mpsc_queue.rs:19:13\n   |\n19 | unsafe impl<'a, T: Copy> Send for MpscQueue<'a, T> {}\n   |             ^^                              ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n19 - unsafe impl<'a, T: Copy> Send for MpscQueue<'a, T> {}\n19 + unsafe impl<T: Copy> Send for MpscQueue<'_, T> {}\n   |\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=kernel-hal, checker=Clippy\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zcore-kernel-hal\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling autocfg v1.4.0\n   Compiling crossbeam-utils v0.8.20\n    Checking pin-project-lite v0.2.15\n    Checking bitflags v1.3.2\n    Checking parking v2.2.1\n    Checking bitflags v2.6.0\n    Checking value-bag v1.10.0\n    Checking fastrand v2.1.1\n    Checking bit_field v0.10.2\n    Checking log v0.4.22\n    Checking futures-core v0.3.31\n    Checking cfg-if v1.0.0\n    Checking futures-io v0.3.31\n   Compiling rustix v0.38.38\n    Checking scopeguard v1.2.0\n    Checking linux-raw-sys v0.4.14\n    Checking concurrent-queue v2.5.0\n   Compiling lock_api v0.4.12\n    Checking event-listener v5.3.1\n   Compiling slab v0.4.9\n   Compiling rustversion v1.0.18\n    Checking event-listener-strategy v0.5.2\n    Checking futures-lite v2.4.0\n    Checking tracing-core v0.1.32\n   Compiling proc-macro2 v1.0.89\n   Compiling cfg-if v0.1.10\n   Compiling version-compare v0.0.10\n   Compiling libc v0.2.161\n   Compiling sdl2-sys v0.34.5\n    Checking tracing v0.1.40\n    Checking spin v0.9.8\n    Checking raw-cpuid v10.7.0\n    Checking atomic-waker v1.1.2\n   Compiling unicode-ident v1.0.13\n    Checking volatile v0.4.6\n    Checking async-task v4.7.1\n    Checking x86_64 v0.14.12\n    Checking piper v0.2.4\n    Checking async-channel v2.3.1\n    Checking async-lock v3.4.0\n   Compiling paste v1.0.15\n    Checking once_cell v1.20.2\n    Checking blocking v1.6.1\n   Compiling quote v1.0.37\n    Checking async-executor v1.13.1\n   Compiling memoffset v0.6.5\n    Checking event-listener v2.5.3\n   Compiling sdl2 v0.34.5\n    Checking volatile v0.3.0\n    Checking async-channel v1.9.0\n   Compiling syn v2.0.86\n    Checking lazy_static v1.5.0\n    Checking rsdp v2.0.1\n    Checking kv-log-macro v1.0.7\n    Checking memchr v2.7.4\n    Checking pin-utils v0.1.0\n    Checking byteorder v1.5.0\n    Checking polling v3.7.3\n   Compiling x86 v0.46.0\n    Checking async-io v2.3.4\n    Checking managed v0.8.0\n   Compiling trapframe v0.9.0\n    Checking bit v0.1.1\n    Checking x2apic v0.4.3\n    Checking async-global-executor v2.4.1\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking acpi v4.1.1\n    Checking async-std v1.13.0\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n    Checking numeric-enum-macro v0.2.0\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking nix v0.23.2\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n    Checking tempfile v3.13.0\n   Compiling git-version-macro v0.3.9\n    Checking git-version v0.3.9\n    Checking kernel-hal v0.1.0 (/home/runner/check/batch_12/kern-crates/zcore-kernel-hal)\nerror: could not compile `kernel-hal` (lib) due to 15 previous errors\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=kernel-hal, checker=Lockbud\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zcore-kernel-hal\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling autocfg v1.4.0\n   Compiling crossbeam-utils v0.8.20\n   Compiling pin-project-lite v0.2.15\n   Compiling bitflags v1.3.2\n   Compiling parking v2.2.1\n   Compiling bitflags v2.6.0\n   Compiling value-bag v1.10.0\n   Compiling futures-core v0.3.31\n   Compiling log v0.4.22\n   Compiling bit_field v0.10.2\n   Compiling fastrand v2.1.1\n[2024-11-02T00:41:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T00:41:53Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling lock_api v0.4.12\n   Compiling concurrent-queue v2.5.0\n   Compiling cfg-if v1.0.0\n   Compiling rustix v0.38.38\n   Compiling futures-io v0.3.31\n   Compiling event-listener v5.3.1\n   Compiling slab v0.4.9\n   Compiling scopeguard v1.2.0\n   Compiling linux-raw-sys v0.4.14\n   Compiling event-listener-strategy v0.5.2\n   Compiling rustversion v1.0.18\n   Compiling futures-lite v2.4.0\n   Compiling tracing-core v0.1.32\n   Compiling version-compare v0.0.10\n   Compiling cfg-if v0.1.10\n   Compiling proc-macro2 v1.0.89\n   Compiling libc v0.2.161\n   Compiling sdl2-sys v0.34.5\n   Compiling tracing v0.1.40\n   Compiling spin v0.9.8\n   Compiling raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.13\n   Compiling atomic-waker v1.1.2\n   Compiling async-task v4.7.1\n   Compiling volatile v0.4.6\n   Compiling piper v0.2.4\n   Compiling x86_64 v0.14.12\n   Compiling async-channel v2.3.1\n   Compiling async-lock v3.4.0\n   Compiling paste v1.0.15\n   Compiling once_cell v1.20.2\n[2024-11-02T00:41:57Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-02T00:41:57Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling blocking v1.6.1\n   Compiling quote v1.0.37\n[2024-11-02T00:41:58Z WARN  lockbud::callbacks] [\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:240:13: 240:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:54: 264:59 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:265:21: 265:25 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:240:13: 240:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:54: 264:59 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:18: 264:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:254:25: 254:51 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"CondvarDeadlock\": {\n          \"bug_kind\": \"Deadlock before Condvar::wait and notify\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"condvar_wait_type\": \"std::sync::Condvar::wait\",\n            \"condvar_wait_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:31: 264:69 (#0)\",\n            \"condvar_notify_type\": \"std::sync::Condvar::notify\",\n            \"condvar_notify_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:319:13: 319:35 (#0)\",\n            \"deadlocks\": [\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\"\n              },\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\"\n              }\n            ]\n          },\n          \"explanation\": \"The same lock before Condvar::wait and notify\"\n        }\n      },\n      {\n        \"CondvarDeadlock\": {\n          \"bug_kind\": \"Deadlock before Condvar::wait and notify\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"condvar_wait_type\": \"std::sync::Condvar::wait\",\n            \"condvar_wait_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:31: 264:69 (#0)\",\n            \"condvar_notify_type\": \"std::sync::Condvar::notify\",\n            \"condvar_notify_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:288:9: 288:31 (#0)\",\n            \"deadlocks\": [\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:284:13: 284:22 (#0)\"\n              },\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:284:13: 284:22 (#0)\"\n              }\n            ]\n          },\n          \"explanation\": \"The same lock before Condvar::wait and notify\"\n        }\n      }\n    ]\n[2024-11-02T00:41:58Z WARN  lockbud::callbacks] crate blocking contains bugs: { probably: 4, possibly: 4 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 2 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling async-executor v1.13.1\n   Compiling memoffset v0.6.5\n   Compiling event-listener v2.5.3\n[2024-11-02T00:41:58Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T00:41:58Z WARN  lockbud::callbacks] crate async_executor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling sdl2 v0.34.5\n   Compiling volatile v0.3.0\n   Compiling async-channel v1.9.0\n   Compiling syn v2.0.86\n   Compiling polling v3.7.3\n   Compiling lazy_static v1.5.0\n   Compiling rsdp v2.0.1\n   Compiling kv-log-macro v1.0.7\n   Compiling async-io v2.3.4\n   Compiling bit v0.1.1\n   Compiling managed v0.8.0\n   Compiling pin-utils v0.1.0\n   Compiling byteorder v1.5.0\n[2024-11-02T00:42:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T00:42:00Z WARN  lockbud::callbacks] crate async_io contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling async-global-executor v2.4.1\n[2024-11-02T00:42:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T00:42:00Z WARN  lockbud::callbacks] crate async_global_executor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 3 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling x86 v0.46.0\n   Compiling memchr v2.7.4\n   Compiling trapframe v0.9.0\n   Compiling smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n   Compiling x2apic v0.4.3\n   Compiling async-std v1.13.0\n   Compiling acpi v4.1.1\n[2024-11-02T00:42:03Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:858:6: 858:6 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:854:13: 854:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:850:58: 850:67 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:854:13: 854:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/hint.rs:93:27: 93:41 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/hint.rs:111:1: 111:2 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/joystick.rs:432:39: 432:61 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/joystick.rs:438:5: 438:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/keyboard/keycode.rs:520:37: 520:52 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/keyboard/keycode.rs:527:17: 527:18 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:210:39: 210:51 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:214:13: 214:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:285:41: 285:55 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:289:13: 289:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-02T00:42:03Z WARN  lockbud::callbacks] crate sdl2 contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 7 }\n   Compiling isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n   Compiling virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n   Compiling lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n   Compiling pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n   Compiling numeric-enum-macro v0.2.0\n   Compiling device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n   Compiling nix v0.23.2\n   Compiling zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n   Compiling git-version-macro v0.3.9\n   Compiling git-version v0.3.9\n   Compiling tempfile v3.13.0\n[2024-11-02T00:42:06Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"file::imp::unix::persist\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tempfile-3.13.0/src/file/imp/unix.rs:125:17: 125:36 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tempfile-3.13.0/src/file/imp/unix.rs:128:42: 128:68 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T00:42:06Z WARN  lockbud::callbacks] crate tempfile contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-02T00:42:08Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:865:50: 865:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:868:9: 868:10 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:874:50: 874:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:877:9: 877:10 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2725:23: 2725:28 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2719:9: 2752:10 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2706:25: 2706:29 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2706:25: 2706:29 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2724:21: 2724:24 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2719:9: 2752:10 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-02T00:42:08Z WARN  lockbud::callbacks] crate nix contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 8 }\n   Compiling kernel-hal v0.1.0 (/home/runner/check/batch_12/kern-crates/zcore-kernel-hal)\nerror: private item shadows public glob re-export\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\n   |\nnote: the name `config` in the type namespace is supposed to be publicly re-exported here\n  --> src/lib.rs:49:5\n   |\n49 |     *,\n   |     ^\nnote: but the private item here shadows it\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\nnote: the lint level is defined here\n  --> src/lib.rs:9:9\n   |\n9  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(hidden_glob_reexports)]` implied by `#[deny(warnings)]`\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:20:30\n   |\n20 |         IRQueue::new(unsafe {&mut IPI_REASON0} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\n   = note: this will be a hard error in the 2024 edition\n   = note: this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\nhelp: use `addr_of_mut!` instead to create a raw pointer\n   |\n20 |         IRQueue::new(unsafe {addr_of_mut!(IPI_REASON0)} ),\n   |                              ~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:21:30\n   |\n21 |         IRQueue::new(unsafe {&mut IPI_REASON1} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\n   = note: this will be a hard error in the 2024 edition\n   = note: this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior\nhelp: use `addr_of_mut!` instead to create a raw pointer\n   |\n21 |         IRQueue::new(unsafe {addr_of_mut!(IPI_REASON1)} ),\n   |                              ~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:22:30\n   |\n22 |         IRQueue::new(unsafe {&mut IPI_REASON2} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\n   = note: this will be a hard error in the 2024 edition\n   = note: this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior\nhelp: use `addr_of_mut!` instead to create a raw pointer\n   |\n22 |         IRQueue::new(unsafe {addr_of_mut!(IPI_REASON2)} ),\n   |                              ~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:23:30\n   |\n23 |         IRQueue::new(unsafe {&mut IPI_REASON3} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\n   = note: this will be a hard error in the 2024 edition\n   = note: this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior\nhelp: use `addr_of_mut!` instead to create a raw pointer\n   |\n23 |         IRQueue::new(unsafe {addr_of_mut!(IPI_REASON3)} ),\n   |                              ~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:24:30\n   |\n24 |         IRQueue::new(unsafe {&mut IPI_REASON4} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\n   = note: this will be a hard error in the 2024 edition\n   = note: this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior\nhelp: use `addr_of_mut!` instead to create a raw pointer\n   |\n24 |         IRQueue::new(unsafe {addr_of_mut!(IPI_REASON4)} ),\n   |                              ~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:25:30\n   |\n25 |         IRQueue::new(unsafe {&mut IPI_REASON5} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\n   = note: this will be a hard error in the 2024 edition\n   = note: this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior\nhelp: use `addr_of_mut!` instead to create a raw pointer\n   |\n25 |         IRQueue::new(unsafe {addr_of_mut!(IPI_REASON5)} ),\n   |                              ~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:26:30\n   |\n26 |         IRQueue::new(unsafe {&mut IPI_REASON6} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\n   = note: this will be a hard error in the 2024 edition\n   = note: this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior\nhelp: use `addr_of_mut!` instead to create a raw pointer\n   |\n26 |         IRQueue::new(unsafe {addr_of_mut!(IPI_REASON6)} ),\n   |                              ~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:27:30\n   |\n27 |         IRQueue::new(unsafe {&mut IPI_REASON7} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\n   = note: this will be a hard error in the 2024 edition\n   = note: this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior\nhelp: use `addr_of_mut!` instead to create a raw pointer\n   |\n27 |         IRQueue::new(unsafe {addr_of_mut!(IPI_REASON7)} ),\n   |                              ~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: could not compile `kernel-hal` (lib) due to 9 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rap","count":1,"kinds":{"Cargo":["// pkg_name=kernel-hal, checker=Rap\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zcore-kernel-hal\n// cmd=cargo +nightly-2024-06-30 rap -F -M\n   Compiling autocfg v1.4.0\n   Compiling crossbeam-utils v0.8.20\n    Checking pin-project-lite v0.2.15\n    Checking bitflags v1.3.2\n    Checking bitflags v2.6.0\n    Checking parking v2.2.1\n    Checking value-bag v1.10.0\n    Checking bit_field v0.10.2\n    Checking futures-core v0.3.31\n    Checking log v0.4.22\n    Checking fastrand v2.1.1\n   Compiling lock_api v0.4.12\n   Compiling rustix v0.38.38\n    Checking concurrent-queue v2.5.0\n    Checking futures-io v0.3.31\n    Checking cfg-if v1.0.0\n   Compiling slab v0.4.9\n    Checking event-listener v5.3.1\n    Checking linux-raw-sys v0.4.14\n   Compiling rustversion v1.0.18\n    Checking scopeguard v1.2.0\n    Checking event-listener-strategy v0.5.2\n    Checking futures-lite v2.4.0\n    Checking tracing-core v0.1.32\n   Compiling cfg-if v0.1.10\n   Compiling libc v0.2.161\n   Compiling version-compare v0.0.10\n   Compiling proc-macro2 v1.0.89\n   Compiling sdl2-sys v0.34.5\n    Checking tracing v0.1.40\n    Checking spin v0.9.8\n    Checking raw-cpuid v10.7.0\n    Checking volatile v0.4.6\n    Checking async-task v4.7.1\n   Compiling unicode-ident v1.0.13\n    Checking atomic-waker v1.1.2\n    Checking x86_64 v0.14.12\n    Checking piper v0.2.4\n    Checking async-channel v2.3.1\n    Checking async-lock v3.4.0\n    Checking once_cell v1.20.2\n   Compiling paste v1.0.15\n    Checking blocking v1.6.1\n   Compiling quote v1.0.37\n    Checking async-executor v1.13.1\n   Compiling memoffset v0.6.5\n    Checking event-listener v2.5.3\n   Compiling sdl2 v0.34.5\n    Checking volatile v0.3.0\n    Checking async-channel v1.9.0\n   Compiling syn v2.0.86\n    Checking polling v3.7.3\n    Checking lazy_static v1.5.0\n    Checking async-io v2.3.4\n    Checking rsdp v2.0.1\n    Checking kv-log-macro v1.0.7\n    Checking managed v0.8.0\n   Compiling x86 v0.46.0\n    Checking byteorder v1.5.0\n    Checking bit v0.1.1\n    Checking async-global-executor v2.4.1\n    Checking memchr v2.7.4\n    Checking pin-utils v0.1.0\n   Compiling trapframe v0.9.0\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking x2apic v0.4.3\n    Checking async-std v1.13.0\n    Checking acpi v4.1.1\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n    Checking numeric-enum-macro v0.2.0\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking nix v0.23.2\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n    Checking tempfile v3.13.0\n   Compiling git-version-macro v0.3.9\n    Checking git-version v0.3.9\n    Checking kernel-hal v0.1.0 (/home/runner/check/batch_12/kern-crates/zcore-kernel-hal)\nerror: private item shadows public glob re-export\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\n   |\nnote: the name `config` in the type namespace is supposed to be publicly re-exported here\n  --> src/lib.rs:49:5\n   |\n49 |     *,\n   |     ^\nnote: but the private item here shadows it\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\nnote: the lint level is defined here\n  --> src/lib.rs:9:9\n   |\n9  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(hidden_glob_reexports)]` implied by `#[deny(warnings)]`\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:20:30\n   |\n20 |         IRQueue::new(unsafe {&mut IPI_REASON0} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\n   = note: this will be a hard error in the 2024 edition\n   = note: this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\nhelp: use `addr_of_mut!` instead to create a raw pointer\n   |\n20 |         IRQueue::new(unsafe {addr_of_mut!(IPI_REASON0)} ),\n   |                              ~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:21:30\n   |\n21 |         IRQueue::new(unsafe {&mut IPI_REASON1} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\n   = note: this will be a hard error in the 2024 edition\n   = note: this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior\nhelp: use `addr_of_mut!` instead to create a raw pointer\n   |\n21 |         IRQueue::new(unsafe {addr_of_mut!(IPI_REASON1)} ),\n   |                              ~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:22:30\n   |\n22 |         IRQueue::new(unsafe {&mut IPI_REASON2} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\n   = note: this will be a hard error in the 2024 edition\n   = note: this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior\nhelp: use `addr_of_mut!` instead to create a raw pointer\n   |\n22 |         IRQueue::new(unsafe {addr_of_mut!(IPI_REASON2)} ),\n   |                              ~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:23:30\n   |\n23 |         IRQueue::new(unsafe {&mut IPI_REASON3} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\n   = note: this will be a hard error in the 2024 edition\n   = note: this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior\nhelp: use `addr_of_mut!` instead to create a raw pointer\n   |\n23 |         IRQueue::new(unsafe {addr_of_mut!(IPI_REASON3)} ),\n   |                              ~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:24:30\n   |\n24 |         IRQueue::new(unsafe {&mut IPI_REASON4} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\n   = note: this will be a hard error in the 2024 edition\n   = note: this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior\nhelp: use `addr_of_mut!` instead to create a raw pointer\n   |\n24 |         IRQueue::new(unsafe {addr_of_mut!(IPI_REASON4)} ),\n   |                              ~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:25:30\n   |\n25 |         IRQueue::new(unsafe {&mut IPI_REASON5} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\n   = note: this will be a hard error in the 2024 edition\n   = note: this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior\nhelp: use `addr_of_mut!` instead to create a raw pointer\n   |\n25 |         IRQueue::new(unsafe {addr_of_mut!(IPI_REASON5)} ),\n   |                              ~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:26:30\n   |\n26 |         IRQueue::new(unsafe {&mut IPI_REASON6} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\n   = note: this will be a hard error in the 2024 edition\n   = note: this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior\nhelp: use `addr_of_mut!` instead to create a raw pointer\n   |\n26 |         IRQueue::new(unsafe {addr_of_mut!(IPI_REASON6)} ),\n   |                              ~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:27:30\n   |\n27 |         IRQueue::new(unsafe {&mut IPI_REASON7} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>\n   = note: this will be a hard error in the 2024 edition\n   = note: this mutable reference has lifetime `'static`, but if the static gets accessed (read or written) by any other means, or any other reference is created, then any further use of this mutable reference is Undefined Behavior\nhelp: use `addr_of_mut!` instead to create a raw pointer\n   |\n27 |         IRQueue::new(unsafe {addr_of_mut!(IPI_REASON7)} ),\n   |                              ~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: could not compile `kernel-hal` (lib) due to 9 previous errors\n00:42:23|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-02T00:41:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T00:41:53Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-02T00:41:57Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-02T00:41:57Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-11-02T00:41:58Z WARN  lockbud::callbacks] [\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:240:13: 240:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:54: 264:59 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:265:21: 265:25 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:240:13: 240:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:54: 264:59 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:18: 264:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:254:25: 254:51 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:542:17: 542:78 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18: 155:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:388:18: 388:41 (#0)\"\n                ],\n                [\n                  \"/rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/thread/mod.rs:456:32: 456:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"CondvarDeadlock\": {\n          \"bug_kind\": \"Deadlock before Condvar::wait and notify\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"condvar_wait_type\": \"std::sync::Condvar::wait\",\n            \"condvar_wait_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:31: 264:69 (#0)\",\n            \"condvar_notify_type\": \"std::sync::Condvar::notify\",\n            \"condvar_notify_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:319:13: 319:35 (#0)\",\n            \"deadlocks\": [\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\"\n              },\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\"\n              }\n            ]\n          },\n          \"explanation\": \"The same lock before Condvar::wait and notify\"\n        }\n      },\n      {\n        \"CondvarDeadlock\": {\n          \"bug_kind\": \"Deadlock before Condvar::wait and notify\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"condvar_wait_type\": \"std::sync::Condvar::wait\",\n            \"condvar_wait_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:31: 264:69 (#0)\",\n            \"condvar_notify_type\": \"std::sync::Condvar::notify\",\n            \"condvar_notify_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:288:9: 288:31 (#0)\",\n            \"deadlocks\": [\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:284:13: 284:22 (#0)\"\n              },\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:284:13: 284:22 (#0)\"\n              }\n            ]\n          },\n          \"explanation\": \"The same lock before Condvar::wait and notify\"\n        }\n      }\n    ]\n[2024-11-02T00:41:58Z WARN  lockbud::callbacks] crate blocking contains bugs: { probably: 4, possibly: 4 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 2 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-02T00:41:58Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T00:41:58Z WARN  lockbud::callbacks] crate async_executor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-02T00:42:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T00:42:00Z WARN  lockbud::callbacks] crate async_io contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-02T00:42:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T00:42:00Z WARN  lockbud::callbacks] crate async_global_executor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 3 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-02T00:42:03Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:858:6: 858:6 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:854:13: 854:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:850:58: 850:67 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:854:13: 854:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/hint.rs:93:27: 93:41 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/hint.rs:111:1: 111:2 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/joystick.rs:432:39: 432:61 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/joystick.rs:438:5: 438:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/keyboard/keycode.rs:520:37: 520:52 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/keyboard/keycode.rs:527:17: 527:18 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:210:39: 210:51 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:214:13: 214:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:285:41: 285:55 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:289:13: 289:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-02T00:42:03Z WARN  lockbud::callbacks] crate sdl2 contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 7 }\n[2024-11-02T00:42:06Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"file::imp::unix::persist\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tempfile-3.13.0/src/file/imp/unix.rs:125:17: 125:36 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tempfile-3.13.0/src/file/imp/unix.rs:128:42: 128:68 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T00:42:06Z WARN  lockbud::callbacks] crate tempfile contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-02T00:42:08Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:865:50: 865:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:868:9: 868:10 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:874:50: 874:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:877:9: 877:10 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2725:23: 2725:28 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2719:9: 2752:10 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2706:25: 2706:29 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2706:25: 2706:29 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2724:21: 2724:24 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2719:9: 2752:10 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-02T00:42:08Z WARN  lockbud::callbacks] crate nix contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 8 }"]}},{"file":"src/bare/arch/riscv/trap.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_12/kern-crates/zcore-kernel-hal/src/bare/arch/riscv/trap.rs (original lines from 54 to 54)\n-        other => panic!(\"Undefined trap: {:x?} = {:#x}\\n{:#x?}\", other, scause.bits(), tf),\n+        other => panic!(\n+            \"Undefined trap: {:x?} = {:#x}\\n{:#x?}\",\n+            other,\n+            scause.bits(),\n+            tf\n+        ),\n"]}},{"file":"src/common/future.rs","count":1,"kinds":{"Clippy(Error)":["error: usage of a legacy numeric method\n  --> src/common/future.rs:47:44\n   |\n47 |         if self.deadline.as_nanos() < i64::max_value() as u128 {\n   |                                            ^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: `#[deny(clippy::legacy_numeric_constants)]` implied by `#[deny(warnings)]`\nhelp: use the associated constant instead\n   |\n47 |         if self.deadline.as_nanos() < i64::MAX as u128 {\n   |                                            ~~~\n\n"]}},{"file":"src/lib.rs","count":1,"kinds":{"Clippy(Error)":["error: private item shadows public glob re-export\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\n   |\nnote: the name `config` in the type namespace is supposed to be publicly re-exported here\n  --> src/lib.rs:49:5\n   |\n49 |     *,\n   |     ^\nnote: but the private item here shadows it\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\nnote: the lint level is defined here\n  --> src/lib.rs:9:9\n   |\n9  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(hidden_glob_reexports)]` implied by `#[deny(warnings)]`\n\n"]}},{"file":"src/libos/mem.rs","count":1,"kinds":{"Clippy(Error)":["error: a `Vec` of `Range` that is only one element\n  --> src/libos/mem.rs:35:13\n   |\n35 |             vec![PAGE_SIZE..PMEM_SIZE]\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_range_in_vec_init\n   = note: `#[deny(clippy::single_range_in_vec_init)]` implied by `#[deny(warnings)]`\nhelp: if you wanted a `Vec` that contains the entire range, try\n   |\n35 |             (PAGE_SIZE..PMEM_SIZE).collect::<std::vec::Vec<usize>>()\n   |\n\n"]}},{"file":"src/utils/lazy_init.rs","count":1,"kinds":{"Clippy(Error)":["error: you should consider adding a `Default` implementation for `LazyInit<T>`\n  --> src/utils/lazy_init.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             inited: AtomicBool::new(false),\n20 | |             data: UnsafeCell::new(MaybeUninit::uninit()),\n21 | |         }\n22 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[deny(clippy::new_without_default)]` implied by `#[deny(warnings)]`\nhelp: try adding this\n   |\n16 + impl<T> Default for LazyInit<T> {\n17 +     fn default() -> Self {\n18 +         Self::new()\n19 +     }\n20 + }\n   |\n\n"]}}]},{"user":"kern-crates","repo":"zcore-zircon-object","pkg":"zircon-object","count":6,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs","count":2,"kinds":{"Clippy(Error)":["error[E0635]: unknown feature `btree_drain_filter`\n --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:2:12\n  |\n2 | #![feature(btree_drain_filter)]\n  |            ^^^^^^^^^^^^^^^^^^\n\n","error[E0599]: no method named `drain_filter` found for struct `BTreeSet` in the current scope\n   --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:120:14\n    |\n119 | /         self.regions\n120 | |             .drain_filter(|r| {\n    | |             -^^^^^^^^^^^^ method not found in `BTreeSet<Region>`\n    | |_____________|\n    |\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=zircon-object, checker=Clippy\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_13/kern-crates/zcore-zircon-object\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.89\n   Compiling unicode-ident v1.0.13\n    Checking value-bag v1.10.0\n   Compiling autocfg v1.4.0\n   Compiling rustversion v1.0.18\n    Checking log v0.4.22\n    Checking scopeguard v1.2.0\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling quote v1.0.37\n   Compiling syn v2.0.86\n    Checking volatile v0.4.6\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n    Checking x86_64 v0.14.12\n   Compiling paste v1.0.15\n    Checking volatile v0.3.0\n    Checking rsdp v2.0.1\n    Checking byteorder v1.5.0\n    Checking futures-sink v0.3.31\n    Checking bit v0.1.1\n    Checking cfg-if v1.0.0\n   Compiling x86 v0.46.0\n    Checking futures-core v0.3.31\n    Checking managed v0.8.0\n   Compiling trapframe v0.9.0\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking acpi v4.1.1\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking x2apic v0.4.3\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking lazy_static v1.5.0\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking pin-utils v0.1.0\n    Checking numeric-enum-macro v0.2.0\n    Checking pin-project-lite v0.2.15\n    Checking futures-task v0.3.31\n    Checking futures-channel v0.3.31\n    Checking futures-io v0.3.31\n    Checking ahash v0.4.8\n    Checking hashbrown v0.9.1\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n    Checking region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\nerror: could not compile `region-alloc` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=zircon-object, checker=Lockbud\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_13/kern-crates/zcore-zircon-object\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling bitflags v1.3.2\n   Compiling proc-macro2 v1.0.89\n   Compiling bit_field v0.10.2\n   Compiling value-bag v1.10.0\n   Compiling autocfg v1.4.0\n   Compiling unicode-ident v1.0.13\n   Compiling rustversion v1.0.18\n   Compiling log v0.4.22\n[2024-11-02T00:45:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T00:45:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling scopeguard v1.2.0\n   Compiling raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling quote v1.0.37\n   Compiling syn v2.0.86\n   Compiling volatile v0.4.6\n   Compiling bitflags v2.6.0\n   Compiling spin v0.9.8\n   Compiling x86_64 v0.14.12\n   Compiling paste v1.0.15\n   Compiling volatile v0.3.0\n   Compiling rsdp v2.0.1\n   Compiling futures-sink v0.3.31\n   Compiling trapframe v0.9.0\n   Compiling futures-core v0.3.31\n   Compiling cfg-if v1.0.0\n   Compiling bit v0.1.1\n   Compiling managed v0.8.0\n   Compiling byteorder v1.5.0\n   Compiling x86 v0.46.0\n   Compiling smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n   Compiling acpi v4.1.1\n   Compiling x2apic v0.4.3\n   Compiling lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n   Compiling isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n   Compiling virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n   Compiling lazy_static v1.5.0\n   Compiling pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n   Compiling futures-task v0.3.31\n   Compiling pin-utils v0.1.0\n   Compiling numeric-enum-macro v0.2.0\n   Compiling pin-project-lite v0.2.15\n   Compiling device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n   Compiling futures-channel v0.3.31\n   Compiling zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n   Compiling futures-io v0.3.31\n   Compiling ahash v0.4.8\n   Compiling hashbrown v0.9.1\n   Compiling downcast-rs v1.2.1\n   Compiling region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\nerror[E0635]: unknown feature `btree_drain_filter`\n --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:2:12\n  |\n2 | #![feature(btree_drain_filter)]\n  |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `drain_filter` found for struct `alloc::collections::BTreeSet` in the current scope\n   --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:120:14\n    |\n119 | /         self.regions\n120 | |             .drain_filter(|r| {\n    | |             -^^^^^^^^^^^^ method not found in `BTreeSet<Region>`\n    | |_____________|\n    |\n\nSome errors have detailed explanations: E0599, E0635.\nFor more information about an error, try `rustc --explain E0599`.\nerror: could not compile `region-alloc` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rap","count":1,"kinds":{"Cargo":["// pkg_name=zircon-object, checker=Rap\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_13/kern-crates/zcore-zircon-object\n// cmd=cargo +nightly-2024-06-30 rap -F -M\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.89\n    Checking bit_field v0.10.2\n    Checking value-bag v1.10.0\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.4.0\n   Compiling rustversion v1.0.18\n    Checking log v0.4.22\n    Checking scopeguard v1.2.0\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling quote v1.0.37\n   Compiling syn v2.0.86\n    Checking volatile v0.4.6\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n    Checking x86_64 v0.14.12\n   Compiling paste v1.0.15\n    Checking volatile v0.3.0\n    Checking rsdp v2.0.1\n    Checking cfg-if v1.0.0\n   Compiling x86 v0.46.0\n   Compiling trapframe v0.9.0\n    Checking managed v0.8.0\n    Checking bit v0.1.1\n    Checking futures-core v0.3.31\n    Checking futures-sink v0.3.31\n    Checking byteorder v1.5.0\n    Checking acpi v4.1.1\n    Checking x2apic v0.4.3\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking lazy_static v1.5.0\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n    Checking futures-task v0.3.31\n    Checking pin-project-lite v0.2.15\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking numeric-enum-macro v0.2.0\n    Checking pin-utils v0.1.0\n    Checking futures-channel v0.3.31\n    Checking futures-io v0.3.31\n    Checking ahash v0.4.8\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n    Checking hashbrown v0.9.1\n    Checking downcast-rs v1.2.1\n    Checking region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\nerror[E0635]: unknown feature `btree_drain_filter`\n --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:2:12\n  |\n2 | #![feature(btree_drain_filter)]\n  |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `drain_filter` found for struct `BTreeSet` in the current scope\n   --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:120:14\n    |\n119 | /         self.regions\n120 | |             .drain_filter(|r| {\n    | |             -^^^^^^^^^^^^ method not found in `BTreeSet<Region>`\n    | |_____________|\n    |\n\nSome errors have detailed explanations: E0599, E0635.\nFor more information about an error, try `rustc --explain E0599`.\nerror: could not compile `region-alloc` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n00:45:25|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-02T00:45:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T00:45:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"kern-crates","repo":"zcore-zircon-syscall","pkg":"zircon-syscall","count":6,"raw_reports":[{"file":"/home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs","count":2,"kinds":{"Clippy(Error)":["error[E0635]: unknown feature `btree_drain_filter`\n --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:2:12\n  |\n2 | #![feature(btree_drain_filter)]\n  |            ^^^^^^^^^^^^^^^^^^\n\n","error[E0599]: no method named `drain_filter` found for struct `BTreeSet` in the current scope\n   --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:120:14\n    |\n119 | /         self.regions\n120 | |             .drain_filter(|r| {\n    | |             -^^^^^^^^^^^^ method not found in `BTreeSet<Region>`\n    | |_____________|\n    |\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=zircon-syscall, checker=Clippy\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_13/kern-crates/zcore-zircon-syscall\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.89\n    Checking bit_field v0.10.2\n   Compiling autocfg v1.4.0\n   Compiling unicode-ident v1.0.13\n   Compiling rustversion v1.0.18\n    Checking log v0.4.22\n    Checking scopeguard v1.2.0\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling quote v1.0.37\n   Compiling syn v2.0.86\n    Checking volatile v0.4.6\n    Checking bitflags v2.6.0\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n    Checking x86_64 v0.14.12\n    Checking volatile v0.3.0\n    Checking rsdp v2.0.1\n   Compiling x86 v0.46.0\n   Compiling trapframe v0.9.0\n    Checking byteorder v1.5.0\n    Checking managed v0.8.0\n    Checking bit v0.1.1\n    Checking futures-core v0.3.31\n    Checking cfg-if v1.0.0\n    Checking futures-sink v0.3.31\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking acpi v4.1.1\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking x2apic v0.4.3\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking lazy_static v1.5.0\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n    Checking pin-utils v0.1.0\n    Checking numeric-enum-macro v0.2.0\n    Checking pin-project-lite v0.2.15\n    Checking futures-task v0.3.31\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking futures-channel v0.3.31\n    Checking futures-io v0.3.31\n    Checking ahash v0.4.8\n    Checking hashbrown v0.9.1\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n    Checking downcast-rs v1.2.1\n   Compiling zircon-syscall v0.1.0 (/home/runner/check/batch_13/kern-crates/zcore-zircon-syscall)\n    Checking region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\nerror: could not compile `region-alloc` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=zircon-syscall, checker=Lockbud\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_13/kern-crates/zcore-zircon-syscall\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling proc-macro2 v1.0.89\n   Compiling autocfg v1.4.0\n   Compiling unicode-ident v1.0.13\n   Compiling log v0.4.22\n   Compiling rustversion v1.0.18\n[2024-11-02T00:45:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T00:45:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling scopeguard v1.2.0\n   Compiling raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling quote v1.0.37\n   Compiling syn v2.0.86\n   Compiling bitflags v2.6.0\n   Compiling volatile v0.4.6\n   Compiling spin v0.9.8\n   Compiling x86_64 v0.14.12\n   Compiling paste v1.0.15\n   Compiling volatile v0.3.0\n   Compiling rsdp v2.0.1\n   Compiling bit v0.1.1\n   Compiling x86 v0.46.0\n   Compiling cfg-if v1.0.0\n   Compiling managed v0.8.0\n   Compiling trapframe v0.9.0\n   Compiling futures-sink v0.3.31\n   Compiling byteorder v1.5.0\n   Compiling futures-core v0.3.31\n   Compiling acpi v4.1.1\n   Compiling smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n   Compiling lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n   Compiling x2apic v0.4.3\n   Compiling virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n   Compiling isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n   Compiling lazy_static v1.5.0\n   Compiling pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n   Compiling numeric-enum-macro v0.2.0\n   Compiling pin-project-lite v0.2.15\n   Compiling futures-task v0.3.31\n   Compiling device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n   Compiling pin-utils v0.1.0\n   Compiling futures-channel v0.3.31\n   Compiling futures-io v0.3.31\n   Compiling ahash v0.4.8\n   Compiling hashbrown v0.9.1\n   Compiling zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n   Compiling region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\nerror[E0635]: unknown feature `btree_drain_filter`\n --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:2:12\n  |\n2 | #![feature(btree_drain_filter)]\n  |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `drain_filter` found for struct `alloc::collections::BTreeSet` in the current scope\n   --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:120:14\n    |\n119 | /         self.regions\n120 | |             .drain_filter(|r| {\n    | |             -^^^^^^^^^^^^ method not found in `BTreeSet<Region>`\n    | |_____________|\n    |\n\nSome errors have detailed explanations: E0599, E0635.\nFor more information about an error, try `rustc --explain E0599`.\nerror: could not compile `region-alloc` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rap","count":1,"kinds":{"Cargo":["// pkg_name=zircon-syscall, checker=Rap\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_13/kern-crates/zcore-zircon-syscall\n// cmd=cargo +nightly-2024-06-30 rap -F -M\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.89\n    Checking bit_field v0.10.2\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.4.0\n   Compiling rustversion v1.0.18\n    Checking log v0.4.22\n    Checking scopeguard v1.2.0\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling quote v1.0.37\n    Checking bitflags v2.6.0\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n   Compiling syn v2.0.86\n    Checking x86_64 v0.14.12\n   Compiling paste v1.0.15\n    Checking volatile v0.3.0\n    Checking rsdp v2.0.1\n    Checking byteorder v1.5.0\n    Checking cfg-if v1.0.0\n    Checking futures-sink v0.3.31\n    Checking futures-core v0.3.31\n    Checking bit v0.1.1\n   Compiling trapframe v0.9.0\n    Checking managed v0.8.0\n   Compiling x86 v0.46.0\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking acpi v4.1.1\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking x2apic v0.4.3\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking lazy_static v1.5.0\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n    Checking futures-task v0.3.31\n    Checking pin-project-lite v0.2.15\n    Checking numeric-enum-macro v0.2.0\n    Checking pin-utils v0.1.0\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking futures-channel v0.3.31\n    Checking futures-io v0.3.31\n    Checking ahash v0.4.8\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n    Checking hashbrown v0.9.1\n   Compiling zircon-syscall v0.1.0 (/home/runner/check/batch_13/kern-crates/zcore-zircon-syscall)\n    Checking region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\nerror[E0635]: unknown feature `btree_drain_filter`\n --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:2:12\n  |\n2 | #![feature(btree_drain_filter)]\n  |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `drain_filter` found for struct `BTreeSet` in the current scope\n   --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:120:14\n    |\n119 | /         self.regions\n120 | |             .drain_filter(|r| {\n    | |             -^^^^^^^^^^^^ method not found in `BTreeSet<Region>`\n    | |_____________|\n    |\n\nSome errors have detailed explanations: E0599, E0635.\n    Checking downcast-rs v1.2.1\nFor more information about an error, try `rustc --explain E0599`.\nerror: could not compile `region-alloc` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n00:45:45|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-02T00:45:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T00:45:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"os-module","repo":"pager","pkg":"pager","count":5,"raw_reports":[{"file":"src/bitmap.rs","count":3,"kinds":{"Unformatted":["file: /home/runner/check/batch_9/os-module/pager/src/bitmap.rs (original lines from 213 to 213)\n-        }else {\n+        } else {\n"],"Clippy(Warn)":["warning: doc list item without indentation\n  --> src/bitmap.rs:21:5\n   |\n21 | /// If the number of physical pages is less than 4096*8, space may be wasted\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\n   = note: `#[warn(clippy::doc_lazy_continuation)]` on by default\nhelp: indent this line\n   |\n21 | ///    If the number of physical pages is less than 4096*8, space may be wasted\n   |     +++\n\n","warning: manually reimplementing `div_ceil`\n   --> src/bitmap.rs:197:32\n    |\n197 |             let bitmap_pages = (self.max + 4096 * 8 - 1) / (4096 * 8);\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.div_ceil()`: `self.max.div_ceil((4096 * 8))`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_div_ceil\n    = note: `#[warn(clippy::manual_div_ceil)]` on by default\n\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-15T14:53:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-15T14:53:40Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"src/buddy.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `Zone<MAX_ORDER>`\n  --> src/buddy.rs:78:5\n   |\n78 | /     pub const fn new() -> Self {\n79 | |         Self {\n80 | |             manage_pages: 0,\n81 | |             start_page: 0,\n82 | |             free_areas: [FreeArea::new(); MAX_ORDER],\n83 | |         }\n84 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n76 + impl<const MAX_ORDER: usize> Default for Zone<MAX_ORDER> {\n77 +     fn default() -> Self {\n78 +         Self::new()\n79 +     }\n80 + }\n   |\n\n"]}}]},{"user":"kern-crates","repo":"zcore-linux-syscall","pkg":"","count":1,"raw_reports":[{"file":"batch_12/kern-crates/zcore-linux-syscall","count":1,"kinds":{"Cargo":["\n   0: 无法解析 `batch_12/kern-crates/zcore-linux-syscall` 内的 Rust 项目布局\n   1: 无法读取 cargo metadata 的结果：`cargo metadata` exited with an error:     Updating crates.io index\n          Updating git repository `https://github.com/kern-crates/zcore-kernel-hal.git`\n          Updating git repository `https://github.com/kern-crates/zcore-linux-object.git`\n          Updating git repository `https://github.com/DeathWish5/kernel-sync`\n          Updating git repository `https://github.com/rcore-os/rcore-fs`\n          Updating git repository `https://github.com/kern-crates/zcore-zircon-object.git`\n          Updating git repository `https://github.com/smoltcp-rs/smoltcp`\n          Updating git repository `https://github.com/kern-crates/zcore-drivers.git`\n          Updating git repository `https://github.com/rcore-os/x86-smpboot`\n          Updating git repository `https://github.com/DeathWish5/PreemptiveScheduler`\n          Updating git repository `https://github.com/rust-embedded/riscv`\n          Updating git repository `https://github.com/rzswh/region-allocator`\n          Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n          Updating git repository `https://github.com/rcore-os/device_tree-rs`\n          Updating git repository `https://github.com/rcore-os/isomorphic_drivers`\n          Updating git repository `https://github.com/elliott10/pci-rs`\n          Updating git repository `https://github.com/rcore-os/virtio-drivers`\n          Updating git repository `https://github.com/pleasewhy/unicycle`\n          Updating git repository `https://github.com/pleasewhy/uniset`\n      error: failed to select a version for the requirement `funty = \"~1.2\"`\n      candidate versions found which didn't match: 3.0.0-rc2, 3.0.0-rc1, 2.0.0, ...\n      location searched: crates.io index\n      required by package `bitvec v0.22.0`\n          ... which satisfies dependency `bitvec = \"^0.22\"` of package `rcore-fs-sfs v0.1.0 (https://github.com/rcore-os/rcore-fs?rev=1a3246b#1a3246b1)`\n          ... which satisfies git dependency `rcore-fs-sfs` of package `linux-object v0.1.0 (https://github.com/kern-crates/zcore-linux-object.git?rev=1304b7e1#1304b7e1)`\n          ... which satisfies git dependency `linux-object` of package `linux-syscall v0.1.0 (/home/runner/check/batch_12/kern-crates/zcore-linux-syscall)`\n      if you are looking for the prerelease package it needs to be specified explicitly\n          funty = { version = \"3.0.0-rc2\" }\n   1: \n\nLocation:\n   src/layout/mod.rs:59\n\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ SPANTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n   0: os_checker::run_checker::try_new with user=\"kern-crates\" repo=\"zcore-linux-syscall\"\n      at src/run_checker/mod.rs:194\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets."]}}]},{"user":"kern-crates","repo":"zcore-linux-object","pkg":"","count":1,"raw_reports":[{"file":"batch_12/kern-crates/zcore-linux-object","count":1,"kinds":{"Cargo":["\n   0: 无法解析 `batch_12/kern-crates/zcore-linux-object` 内的 Rust 项目布局\n   1: 无法读取 cargo metadata 的结果：`cargo metadata` exited with an error:     Updating crates.io index\n          Updating git repository `https://github.com/kern-crates/zcore-kernel-hal.git`\n          Updating git repository `https://github.com/DeathWish5/kernel-sync`\n          Updating git repository `https://github.com/rcore-os/rcore-fs`\n          Updating git repository `https://github.com/smoltcp-rs/smoltcp`\n          Updating git repository `https://github.com/kern-crates/zcore-drivers.git`\n          Updating git repository `https://github.com/kern-crates/zcore-zircon-object.git`\n          Updating git repository `https://github.com/rcore-os/x86-smpboot`\n          Updating git repository `https://github.com/DeathWish5/PreemptiveScheduler`\n          Updating git repository `https://github.com/rust-embedded/riscv`\n          Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n          Updating git repository `https://github.com/rcore-os/device_tree-rs`\n          Updating git repository `https://github.com/rcore-os/isomorphic_drivers`\n          Updating git repository `https://github.com/elliott10/pci-rs`\n          Updating git repository `https://github.com/rcore-os/virtio-drivers`\n          Updating git repository `https://github.com/rzswh/region-allocator`\n          Updating git repository `https://github.com/pleasewhy/unicycle`\n          Updating git repository `https://github.com/pleasewhy/uniset`\n      error: failed to select a version for the requirement `funty = \"~1.2\"`\n      candidate versions found which didn't match: 3.0.0-rc2, 3.0.0-rc1, 2.0.0, ...\n      location searched: crates.io index\n      required by package `bitvec v0.22.0`\n          ... which satisfies dependency `bitvec = \"^0.22\"` of package `rcore-fs-sfs v0.1.0 (https://github.com/rcore-os/rcore-fs?rev=1a3246b#1a3246b1)`\n          ... which satisfies git dependency `rcore-fs-sfs` of package `linux-object v0.1.0 (/home/runner/check/batch_12/kern-crates/zcore-linux-object)`\n      if you are looking for the prerelease package it needs to be specified explicitly\n          funty = { version = \"3.0.0-rc2\" }\n   1: \n\nLocation:\n   src/layout/mod.rs:59\n\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ SPANTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n   0: os_checker::run_checker::try_new with user=\"kern-crates\" repo=\"zcore-linux-object\"\n      at src/run_checker/mod.rs:194\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets."]}}]},{"user":"kern-crates","repo":"zcore-loader","pkg":"","count":1,"raw_reports":[{"file":"batch_13/kern-crates/zcore-loader","count":1,"kinds":{"Cargo":["\n   0: 无法解析 `batch_13/kern-crates/zcore-loader` 内的 Rust 项目布局\n   1: 无法读取 cargo metadata 的结果：`cargo metadata` exited with an error:     Updating crates.io index\n          Updating git repository `https://github.com/DeathWish5/PreemptiveScheduler`\n          Updating git repository `https://github.com/kern-crates/zcore-kernel-hal.git`\n          Updating git repository `https://github.com/kern-crates/zcore-linux-object.git`\n          Updating git repository `https://github.com/kern-crates/zcore-linux-syscall.git`\n          Updating git repository `https://github.com/kern-crates/zcore-zircon-object.git`\n          Updating git repository `https://github.com/kern-crates/zcore-zircon-syscall.git`\n          Updating git repository `https://github.com/rcore-os/rcore-fs`\n          Updating git repository `https://github.com/pleasewhy/unicycle`\n          Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n          Updating git repository `https://github.com/DeathWish5/kernel-sync`\n          Updating git repository `https://github.com/smoltcp-rs/smoltcp`\n          Updating git repository `https://github.com/kern-crates/zcore-drivers.git`\n          Updating git repository `https://github.com/rcore-os/x86-smpboot`\n          Updating git repository `https://github.com/rzswh/region-allocator`\n          Updating git repository `https://github.com/pleasewhy/uniset`\n          Updating git repository `https://github.com/rust-embedded/riscv`\n          Updating git repository `https://github.com/rcore-os/device_tree-rs`\n          Updating git repository `https://github.com/rcore-os/isomorphic_drivers`\n          Updating git repository `https://github.com/elliott10/pci-rs`\n          Updating git repository `https://github.com/rcore-os/virtio-drivers`\n      error: failed to select a version for the requirement `funty = \"~1.2\"`\n      candidate versions found which didn't match: 3.0.0-rc2, 3.0.0-rc1, 2.0.0, ...\n      location searched: crates.io index\n      required by package `bitvec v0.22.0`\n          ... which satisfies dependency `bitvec = \"^0.22\"` of package `rcore-fs-sfs v0.1.0 (https://github.com/rcore-os/rcore-fs?rev=1a3246b#1a3246b1)`\n          ... which satisfies git dependency `rcore-fs-sfs` of package `linux-object v0.1.0 (https://github.com/kern-crates/zcore-linux-object.git?rev=1304b7e1#1304b7e1)`\n          ... which satisfies git dependency `linux-object` of package `zcore-loader v0.1.0 (/home/runner/check/batch_13/kern-crates/zcore-loader)`\n      if you are looking for the prerelease package it needs to be specified explicitly\n          funty = { version = \"3.0.0-rc2\" }\n   1: \n\nLocation:\n   src/layout/mod.rs:59\n\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ SPANTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n   0: os_checker::run_checker::try_new with user=\"kern-crates\" repo=\"zcore-loader\"\n      at src/run_checker/mod.rs:194\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets."]}}]},{"user":"kern-crates","repo":"zcore-zircon-user","pkg":"zircon-user","count":1,"raw_reports":[{"file":"(virtual) rap","count":1,"kinds":{"Cargo":["// pkg_name=zircon-user, checker=Rap\n// toolchain=nightly-2022-01-20, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_13/kern-crates/zcore-zircon-user\n// cmd=cargo +nightly-2024-06-30 rap -F -M\nwarning: `/home/runner/check/batch_13/kern-crates/zcore-zircon-user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/batch_13/kern-crates/zcore-zircon-user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\n    Checking zircon-user v0.1.0 (/home/runner/check/batch_13/kern-crates/zcore-zircon-user)\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `x86_64-fuchsia` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-fuchsia`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `zircon-user` (bin \"hello\") due to 1 previous error\n00:45:58|RAP|ERROR|: Finished with non-zero exit code.\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Audit","Mirai","Rap","Rudra","Lockbud(Probably)","Lockbud(Possibly)","Outdated","Geiger","Unformatted"]}