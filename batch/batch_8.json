{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.83.0-nightly (26b5599e4 2024-09-06)",
          "commit_hash": "26b5599e4d6ed2b45152c60493c1788c0a27533d",
          "commit_date": "2024-09-06",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.83.0-nightly",
          "llvm_version": "19.1.0"
        },
        "installed": [
          {
            "channel": "nightly-x86_64-unknown-linux-gnu (default)",
            "profile": null,
            "targets": [
              "aarch64-unknown-none",
              "aarch64-unknown-none-softfloat",
              "loongarch64-unknown-none",
              "riscv64gc-unknown-none-elf",
              "riscv64imac-unknown-none-elf",
              "x86_64-unknown-linux-gnu",
              "x86_64-unknown-none"
            ],
            "components": [
              "aarch64-unknown-none",
              "aarch64-unknown-none-softfloat",
              "loongarch64-unknown-none",
              "riscv64gc-unknown-none-elf",
              "riscv64imac-unknown-none-elf",
              "x86_64-unknown-linux-gnu",
              "x86_64-unknown-none"
            ],
            "toml_path": ""
          }
        ]
      },
      "os_checker": {
        "start": 1725699053153,
        "finish": 1725699074112,
        "duration_ms": 20958,
        "git_time": "2024-09-07 16:29:52 +0800",
        "git_sha": "bd7ce0163b40153bc5c38540cdde914afd52fc3c"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "kern-crates",
        "repo": "memory_addr",
        "rust_toolchain_idxs": []
      },
      {
        "user": "kern-crates",
        "repo": "of",
        "rust_toolchain_idxs": []
      },
      {
        "user": "kern-crates",
        "repo": "page_table",
        "rust_toolchain_idxs": []
      },
      {
        "user": "kern-crates",
        "repo": "page_table_entry",
        "rust_toolchain_idxs": []
      },
      {
        "user": "kern-crates",
        "repo": "pager",
        "rust_toolchain_idxs": []
      },
      {
        "user": "kern-crates",
        "repo": "pconst",
        "rust_toolchain_idxs": []
      },
      {
        "user": "kern-crates",
        "repo": "percpu",
        "rust_toolchain_idxs": []
      },
      {
        "user": "kern-crates",
        "repo": "percpu_macros",
        "rust_toolchain_idxs": []
      }
    ],
    "packages": [
      {
        "name": "memory_addr",
        "repo": {
          "repo_idx": 0,
          "user": "kern-crates",
          "repo": "memory_addr"
        },
        "rust_toolchain_idx": null
      },
      {
        "name": "of",
        "repo": {
          "repo_idx": 1,
          "user": "kern-crates",
          "repo": "of"
        },
        "rust_toolchain_idx": null
      },
      {
        "name": "page_table",
        "repo": {
          "repo_idx": 2,
          "user": "kern-crates",
          "repo": "page_table"
        },
        "rust_toolchain_idx": null
      },
      {
        "name": "page_table_entry",
        "repo": {
          "repo_idx": 3,
          "user": "kern-crates",
          "repo": "page_table_entry"
        },
        "rust_toolchain_idx": null
      },
      {
        "name": "pager",
        "repo": {
          "repo_idx": 4,
          "user": "kern-crates",
          "repo": "pager"
        },
        "rust_toolchain_idx": null
      },
      {
        "name": "pconst",
        "repo": {
          "repo_idx": 5,
          "user": "kern-crates",
          "repo": "pconst"
        },
        "rust_toolchain_idx": null
      },
      {
        "name": "percpu",
        "repo": {
          "repo_idx": 6,
          "user": "kern-crates",
          "repo": "percpu"
        },
        "rust_toolchain_idx": null
      },
      {
        "name": "percpu_macros",
        "repo": {
          "repo_idx": 7,
          "user": "kern-crates",
          "repo": "percpu_macros"
        },
        "rust_toolchain_idx": null
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo fmt -p memory_addr -- --emit=json",
      "count": 0,
      "duration_ms": 232,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1925,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 460,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo fmt -p of -- --emit=json",
      "count": 0,
      "duration_ms": 261,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 756,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1068,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo fmt -p page_table -- --emit=json",
      "count": 0,
      "duration_ms": 243,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 3083,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 6938,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo fmt -p page_table_entry -- --emit=json",
      "count": 0,
      "duration_ms": 345,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2916,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2783,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo fmt -p pager -- --emit=json",
      "count": 1,
      "duration_ms": 231,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 2622,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 486,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo fmt -p pconst -- --emit=json",
      "count": 0,
      "duration_ms": 235,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 7029,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 11395,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 7029,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo fmt -p percpu -- --emit=json",
      "count": 0,
      "duration_ms": 220,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 4054,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 11637,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo fmt -p percpu_macros -- --emit=json",
      "count": 0,
      "duration_ms": 291,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 3181,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 9826,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 12,
      "file": "src/bitmap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_8/kern-crates/pager/src/bitmap.rs (original lines from 213 to 213)\n-        }else {\n+        } else {\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/bitmap.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> src/bitmap.rs:21:5\n   |\n21 | /// If the number of physical pages is less than 4096*8, space may be wasted\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\n   = note: `#[warn(clippy::doc_lazy_continuation)]` on by default\nhelp: indent this line\n   |\n21 | ///    If the number of physical pages is less than 4096*8, space may be wasted\n   |     +++\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/buddy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `Zone<MAX_ORDER>`\n  --> src/buddy.rs:78:5\n   |\n78 | /     pub const fn new() -> Self {\n79 | |         Self {\n80 | |             manage_pages: 0,\n81 | |             start_page: 0,\n82 | |             free_areas: [FreeArea::new(); MAX_ORDER],\n83 | |         }\n84 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n76 + impl<const MAX_ORDER: usize> Default for Zone<MAX_ORDER> {\n77 +     fn default() -> Self {\n78 +         Self::new()\n79 +     }\n80 + }\n   |\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/io.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/io.rs:93:1\n    |\n93  | / impl Default for FsStat {\n94  | |     fn default() -> Self {\n95  | |         Self {\n96  | |             f_type: 0,\n...   |\n109 | |     }\n110 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n66  + #[derive(Default)]\n67  | pub struct FsStat {\n    |\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-1.3.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: &-masking with zero\n   --> src/io.rs:176:1\n    |\n176 | / bitflags! {\n177 | |     pub struct FaccessatMode: u32 {\n178 | |         const F_OK = 0;\n179 | |         const R_OK = 4;\n...   |\n186 | |     }\n187 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n    = note: `#[deny(clippy::bad_bit_mask)]` on by default\n    = note: this error originates in the macro `__impl_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-1.3.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: &-masking with zero\n   --> src/io.rs:345:1\n    |\n345 | / bitflags::bitflags! {\n346 | |     pub struct OpenFlags: usize {\n347 | |         // reserve 3 bits for the access mode\n348 | |         const O_RDONLY      = 0;\n...   |\n371 | |     }\n372 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n    = note: this error originates in the macro `__impl_bitflags` which comes from the expansion of the macro `bitflags::bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/io.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: struct `Dirent64` has a public `len` method, but no `is_empty` method\n   --> src/io.rs:456:5\n    |\n456 |     pub fn len(&self) -> usize {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_without_is_empty\n    = note: `#[warn(clippy::len_without_is_empty)]` on by default\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-1.3.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: &-masking with zero\n   --> src/io.rs:612:1\n    |\n612 | / bitflags! {\n613 | |      /// renameat flag\n614 | |     pub struct Renameat2Flags: u32 {\n615 | |         /// Go back to renameat\n...   |\n623 | |     }\n624 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n    = note: this error originates in the macro `__impl_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-1.3.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: &-masking with zero\n   --> src/io.rs:625:1\n    |\n625 | / bitflags! {\n626 | |     pub struct ProtFlags: u32 {\n627 | |         const PROT_NONE = 0x0;\n628 | |         const PROT_READ = 0x1;\n...   |\n631 | |     }\n632 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n    = note: this error originates in the macro `__impl_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/signal/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `SignalHandlers`\n  --> src/signal/mod.rs:30:5\n   |\n30 | /     pub fn new() -> Self {\n31 | |         Self {\n32 | |             actions: [None; SIGSET_SIZE_IN_BIT],\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl Default for SignalHandlers {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/signal/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the function definition\n  --> src/signal/mod.rs:44:23\n   |\n44 |     pub fn get_action<'a>(&self, signum: usize, action_pos: &mut SigAction) {\n   |                       ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/signal/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `SignalReceivers`\n  --> src/signal/mod.rs:80:5\n   |\n80 | /     pub fn new() -> Self {\n81 | |         Self {\n82 | |             mask: SimpleBitSet::default(),\n83 | |             sig_received: SimpleBitSet::default(),\n84 | |         }\n85 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n78 + impl Default for SignalReceivers {\n79 +     fn default() -> Self {\n80 +         Self::new()\n81 +     }\n82 + }\n   |\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/signal/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> src/signal/mod.rs:165:1\n    |\n165 | impl Into<Vec<SignalNumber>> for SimpleBitSet {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n    = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<signal::SimpleBitSet>`\n    |\n165 ~ impl From<SimpleBitSet> for Vec<SignalNumber> {\n166 ~     fn from(val: SimpleBitSet) -> Self {\n167 |         let mut ans = Vec::new();\n168 |         for i in 0..64 {\n169 ~             if val.0 & (1 << i) != 0 {\n    |\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/signal/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: suspicious use of `|` in `Add` impl\n   --> src/signal/mod.rs:201:21\n    |\n201 |         Self(self.0 | rhs.0)\n    |                     ^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_arithmetic_impl\n    = note: `#[warn(clippy::suspicious_arithmetic_impl)]` on by default\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/signal/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: suspicious use of `|` in `AddAssign` impl\n   --> src/signal/mod.rs:207:16\n    |\n207 |         self.0 |= rhs.0;\n    |                ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_op_assign_impl\n    = note: `#[warn(clippy::suspicious_op_assign_impl)]` on by default\n\n"
    },
    {
      "cmd_idx": 18,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=pconst, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_8/kern-crates/pconst\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Blocking waiting for file lock on package cache\n    Updating crates.io index\n    Updating git repository `https://github.com/asterinas/pod`\n    Updating git repository `https://github.com/os-module/syscall-table.git`\n    Updating git repository `https://github.com/os-module/inventory`\n    Blocking waiting for file lock on package cache\n     Locking 16 packages to latest compatible versions\n      Adding bitflags v1.3.2 (latest: v2.6.0)\n      Adding syn v1.0.109 (latest: v2.0.77)\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.12\n   Compiling version_check v0.9.5\n   Compiling syn v1.0.109\n   Compiling yansi v1.0.1\n   Compiling proc-macro2-diagnostics v0.10.1\n   Compiling int-enum v1.1.2\n    Checking bitflags v1.3.2\n   Compiling quote v1.0.37\n   Compiling syn v2.0.77\n   Compiling pod-derive v0.1.0 (https://github.com/asterinas/pod?rev=d7dba56#d7dba56c)\n    Checking pod v0.1.0 (https://github.com/asterinas/pod?rev=d7dba56#d7dba56c)\n    Checking pconst v0.1.0 (/home/runner/check/batch_8/kern-crates/pconst)\nerror: could not compile `pconst` (lib) due to 5 previous errors; 8 warnings emitted\n"
    }
  ]
}