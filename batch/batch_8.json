{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.83.0-nightly (1bc403daa 2024-10-11)",
          "commit_hash": "1bc403daadbebb553ccc211a0a8eebb73989665f",
          "commit_date": "2024-10-11",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.83.0-nightly",
          "llvm_version": "19.1.1"
        },
        "installed": [
          {
            "channel": "nightly-2024-10-12-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "x86_64-unknown-linux-gnu"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-linux-gnu",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1732263559212,
        "finish": 1732263562725,
        "duration_ms": 3513,
        "git_time": "2024-11-22 16:14:42 +0800",
        "git_sha": "154a3b5caa07dd08795fc862f5cd2662de9da51c"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Audit",
        "Mirai",
        "Rap",
        "Rudra",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Outdated",
        "Geiger",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "audit": [
          "Audit"
        ],
        "mirai": [
          "Mirai"
        ],
        "rap": [
          "Rap"
        ],
        "rudra": [
          "Rudra"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "outdated": [
          "Outdated"
        ],
        "geiger": [
          "Geiger"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "kern-crates",
        "repo": "CSpace"
      },
      {
        "user": "kern-crates",
        "repo": "axbacktrace"
      },
      {
        "user": "kern-crates",
        "repo": "axhal_split"
      },
      {
        "user": "kern-crates",
        "repo": "r4l"
      },
      {
        "user": "kern-crates",
        "repo": "test-test-repo"
      },
      {
        "user": "kern-crates",
        "repo": "virtio-input-decoder"
      },
      {
        "user": "kern-crates",
        "repo": "zCore"
      },
      {
        "user": "kern-crates",
        "repo": "zcore-drivers"
      }
    ],
    "packages": [
      {
        "name": "cspace",
        "repo": {
          "repo_idx": 0,
          "user": "kern-crates",
          "repo": "CSpace"
        }
      },
      {
        "name": "axbacktrace",
        "repo": {
          "repo_idx": 1,
          "user": "kern-crates",
          "repo": "axbacktrace"
        }
      },
      {
        "name": "",
        "repo": {
          "repo_idx": 2,
          "user": "kern-crates",
          "repo": "axhal_split"
        }
      },
      {
        "name": "",
        "repo": {
          "repo_idx": 3,
          "user": "kern-crates",
          "repo": "r4l"
        }
      },
      {
        "name": "",
        "repo": {
          "repo_idx": 4,
          "user": "kern-crates",
          "repo": "test-test-repo"
        }
      },
      {
        "name": "virtio-input-decoder",
        "repo": {
          "repo_idx": 5,
          "user": "kern-crates",
          "repo": "virtio-input-decoder"
        }
      },
      {
        "name": "rboot",
        "repo": {
          "repo_idx": 6,
          "user": "kern-crates",
          "repo": "zCore"
        }
      },
      {
        "name": "uart",
        "repo": {
          "repo_idx": 6,
          "user": "kern-crates",
          "repo": "zCore"
        }
      },
      {
        "name": "zcore",
        "repo": {
          "repo_idx": 6,
          "user": "kern-crates",
          "repo": "zCore"
        }
      },
      {
        "name": "zircon-user",
        "repo": {
          "repo_idx": 6,
          "user": "kern-crates",
          "repo": "zCore"
        }
      },
      {
        "name": "zcore-drivers",
        "repo": {
          "repo_idx": 7,
          "user": "kern-crates",
          "repo": "zcore-drivers"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p cspace -- --emit=json",
      "count": 98,
      "duration_ms": 112,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 59,
      "duration_ms": 5301,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 49,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 6325,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 6721,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 262,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 93,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 120,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 5301,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p axbacktrace -- --emit=json",
      "count": 22,
      "duration_ms": 96,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 245,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 47,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 228,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 446,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 256,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 62,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 108,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=LayoutParseError cargo",
      "count": 1,
      "duration_ms": 0,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=LayoutParseError cargo",
      "count": 1,
      "duration_ms": 0,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "cargo",
      "cmd": "VRITUAL=LayoutParseError cargo",
      "count": 1,
      "duration_ms": 0,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p virtio-input-decoder -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 197,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 46,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 149,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 475,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 249,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 62,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 104,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p rboot -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-uefi",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p rboot -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-musl",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-uefi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 195,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-uefi",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-musl --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 195,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-musl",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-uefi",
      "count": 0,
      "duration_ms": 105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-uefi",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-musl",
      "count": 0,
      "duration_ms": 104,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-musl",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 85,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-uefi",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 60,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-musl",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-uefi",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 104,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-musl",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p uart -- --emit=json",
      "count": 0,
      "duration_ms": 93,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p uart -- --emit=json",
      "count": 0,
      "duration_ms": 94,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-uefi",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p uart -- --emit=json",
      "count": 0,
      "duration_ms": 94,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-musl",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-uefi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 190,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-uefi",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 192,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-musl --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 195,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-musl",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 47,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1519,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-uefi",
      "count": 0,
      "duration_ms": 107,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-uefi",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-musl",
      "count": 0,
      "duration_ms": 1132,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-musl",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 1401,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 250,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 60,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 59,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-uefi",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 59,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-musl",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 170,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1519,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 107,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-uefi",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1132,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-musl",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "cargo",
      "cmd": "VRITUAL=rap cargo",
      "count": 1,
      "duration_ms": 1401,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p zcore -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-uefi",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p zcore -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-musl",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p zcore -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-uefi --no-deps --message-format=json",
      "count": 18,
      "duration_ms": 949,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-uefi",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 9328,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-musl --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 4246,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-musl",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "audit",
      "cmd": "cargo audit",
      "count": 1,
      "duration_ms": 354,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "audit",
      "cmd": "cargo audit",
      "count": 1,
      "duration_ms": 374,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-musl",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "audit",
      "cmd": "cargo audit",
      "count": 1,
      "duration_ms": 366,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-uefi",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 1581,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-uefi",
      "count": 0,
      "duration_ms": 248,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-uefi",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-musl",
      "count": 1,
      "duration_ms": 5994,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-musl",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 7601,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 5456,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 342,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 59,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 59,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-uefi",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 58,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-musl",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 602,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 4246,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-musl",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 248,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-uefi",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 7601,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 5994,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-musl",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 1581,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "cargo",
      "cmd": "VRITUAL=rap cargo",
      "count": 1,
      "duration_ms": 5456,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 9328,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 949,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-uefi",
      "rust_toolchain": "nightly-2022-10-27",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p zircon-user -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p zircon-user -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-uefi",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p zircon-user -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-musl",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-musl --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 306,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-musl",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-uefi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 288,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-uefi",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 170,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 275,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 160,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-uefi",
      "count": 0,
      "duration_ms": 84,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-uefi",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-musl",
      "count": 0,
      "duration_ms": 201,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-musl",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 343,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 845,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 86,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 59,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-uefi",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 58,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-musl",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 440,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 288,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-uefi",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 84,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-uefi",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=rap cargo",
      "count": 1,
      "duration_ms": 343,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p zcore-drivers -- --emit=json",
      "count": 0,
      "duration_ms": 156,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 16,
      "duration_ms": 3116,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 47,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 4020,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 12770,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 249,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 89,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 148,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 3116,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 4020,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=rap cargo",
      "count": 1,
      "duration_ms": 12770,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 0,
      "file": "src/cap/endpoint.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/endpoint.rs (original lines from 1 to 1)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap/endpoint.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/endpoint.rs (original lines from 4 to 4)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap/endpoint.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/endpoint.rs (original lines from 6 to 6)\n-pub fn cap_endpoint_cap_get_capCanGrantReply(cap: & cap_t) -> usize {\n+pub fn cap_endpoint_cap_get_capCanGrantReply(cap: &cap_t) -> usize {\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap/endpoint.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/endpoint.rs (original lines from 9 to 9)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap/endpoint.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/endpoint.rs (original lines from 30 to 30)\n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 1 to 1)\n-use common::{sel4_config::*, MASK, utils::pageBitsForSize, plus_define_bitfield};\n+use common::{plus_define_bitfield, sel4_config::*, utils::pageBitsForSize, MASK};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 48 to 48)\n-    CapASIDPoolCap = 13\n+    CapASIDPoolCap = 13,\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 160 to 160)\n-            _ => { self.clone() }\n+            _ => self.clone(),\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 165 to 167)\n-        unsafe {\n-            core::mem::transmute::<u8, CapTag>(self.get_type() as u8)\n-        }\n+        unsafe { core::mem::transmute::<u8, CapTag>(self.get_type() as u8) }\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 181 to 183)\n-            _ => {\n-                0\n-            }\n+            _ => 0,\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 201 to 202)\n-            CapTag::CapUntypedCap | CapTag::CapEndpointCap | CapTag::CapNotificationCap | CapTag::CapCNodeCap | CapTag::CapFrameCap | CapTag::CapASIDPoolCap |\n-            CapTag::CapPageTableCap | CapTag::CapZombieCap | CapTag::CapThreadCap => true,\n+            CapTag::CapUntypedCap\n+            | CapTag::CapEndpointCap\n+            | CapTag::CapNotificationCap\n+            | CapTag::CapCNodeCap\n+            | CapTag::CapFrameCap\n+            | CapTag::CapASIDPoolCap\n+            | CapTag::CapPageTableCap\n+            | CapTag::CapZombieCap\n+            | CapTag::CapThreadCap => true,\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 234 to 234)\n-            false \n+            false\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 236 to 237)\n-        CapTag::CapEndpointCap | CapTag::CapNotificationCap | CapTag::CapPageTableCap | CapTag::CapASIDPoolCap \n-            | CapTag::CapThreadCap => {\n+        CapTag::CapEndpointCap\n+        | CapTag::CapNotificationCap\n+        | CapTag::CapPageTableCap\n+        | CapTag::CapASIDPoolCap\n+        | CapTag::CapThreadCap => {\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 256 to 263)\n-        CapTag::CapIrqControlCap => {\n-            match cap2.get_cap_type() {\n-                CapTag::CapIrqControlCap | CapTag::CapIrqHandlerCap => {\n-                    true\n-                }\n-                _ => false\n-            }\n-        }\n+        CapTag::CapIrqControlCap => match cap2.get_cap_type() {\n+            CapTag::CapIrqControlCap | CapTag::CapIrqHandlerCap => true,\n+            _ => false,\n+        },\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 281 to 281)\n-    if cap1.get_cap_type() == CapTag::CapIrqControlCap && cap2.get_cap_type() == CapTag::CapIrqHandlerCap {\n+    if cap1.get_cap_type() == CapTag::CapIrqControlCap\n+        && cap2.get_cap_type() == CapTag::CapIrqHandlerCap\n+    {\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 294 to 294)\n-            && (cap1.get_frame_is_device() == 0) == (cap2.get_frame_is_device() == 0)\n+            && (cap1.get_frame_is_device() == 0) == (cap2.get_frame_is_device() == 0);\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 322 to 323)\n-        \n-        _ => false\n+\n+        _ => false,\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 326 to 326)\n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap/notification.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/notification.rs (original lines from 3 to 3)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap/notification.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/notification.rs (original lines from 8 to 8)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap/notification.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/notification.rs (original lines from 14 to 14)\n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap/reply.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/reply.rs (original lines from 4 to 4)\n-pub fn cap_reply_cap_new(capReplyCanGrant: usize, capReplyMaster: usize, capTCBPtr: usize) -> cap_t {\n+pub fn cap_reply_cap_new(\n+    capReplyCanGrant: usize,\n+    capReplyMaster: usize,\n+    capTCBPtr: usize,\n+) -> cap_t {\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap/reply.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/reply.rs (original lines from 27 to 27)\n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap/zombie.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/zombie.rs (original lines from 3 to 3)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap/zombie.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/zombie.rs (original lines from 40 to 40)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap/zombie.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/zombie.rs (original lines from 64 to 64)\n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap_rights.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap_rights.rs (original lines from 1 to 1)\n-use common::{MASK, plus_define_bitfield};\n+use common::{plus_define_bitfield, MASK};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap_rights.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap_rights.rs (original lines from 15 to 15)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cap_rights.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap_rights.rs (original lines from 19 to 21)\n-        Self {\n-            words: [word]\n-        }\n+        Self { words: [word] }\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 1 to 3)\n-\n-\n-use crate::{cap::{CapTag, cap_t}, interface::{cte_t, cte_insert}, cte::deriveCap_ret};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 5 to 6)\n-  cap_endpoint_cap_get_capCanGrant, cap_endpoint_cap_get_capCanGrantReply, cap_endpoint_cap_get_capCanReceive,\n-  cap_endpoint_cap_get_capCanSend, cap_endpoint_cap_get_capEPPtr,\n+    cap_endpoint_cap_get_capCanGrant, cap_endpoint_cap_get_capCanGrantReply,\n+    cap_endpoint_cap_get_capCanReceive, cap_endpoint_cap_get_capCanSend,\n+    cap_endpoint_cap_get_capEPPtr,\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 8 to 11)\n-\n-pub use super::cap::zombie::{\n-  Zombie_new,\n-  ZombieType_ZombieTCB\n+use crate::{\n+    cap::{cap_t, CapTag},\n+    cte::deriveCap_ret,\n+    interface::{cte_insert, cte_t},\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 14 to 14)\n+pub use super::cap::zombie::{ZombieType_ZombieTCB, Zombie_new};\n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 15 to 16)\n-  cap_reply_cap_get_capReplyCanGrant, cap_reply_cap_get_capReplyMaster, cap_reply_cap_get_capTCBPtr, cap_reply_cap_new,\n-  cap_reply_cap_set_capReplyCanGrant,\n+    cap_reply_cap_get_capReplyCanGrant, cap_reply_cap_get_capReplyMaster,\n+    cap_reply_cap_get_capTCBPtr, cap_reply_cap_new, cap_reply_cap_set_capReplyCanGrant,\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 20 to 21)\n-  cap_notification_cap_get_capNtfnCanSend,\n-  cap_notification_cap_get_capNtfnPtr,\n+    cap_notification_cap_get_capNtfnCanSend, cap_notification_cap_get_capNtfnPtr,\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 24 to 24)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 27 to 27)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 53 to 53)\n-  panic!(\"should not be invoked!\")\n+    panic!(\"should not be invoked!\")\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 56 to 56)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 59 to 61)\n-    unsafe {\n-        cte_insert(newCap, &mut *srcSlot, &mut *destSlot)\n-    }\n+    unsafe { cte_insert(newCap, &mut *srcSlot, &mut *destSlot) }\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 67 to 69)\n-    unsafe {\n-        (&mut *slot).derive_cap(cap)\n-    }\n+    unsafe { (&mut *slot).derive_cap(cap) }\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 71 to 71)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 77 to 77)\n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 1 to 1)\n-use core::intrinsics::{unlikely, likely};\n+use core::intrinsics::{likely, unlikely};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 3 to 3)\n-use common::{structures::exception_t, utils::{convert_to_type_ref, convert_to_mut_type_ref}, MASK, sel4_config::wordRadix};\n+use common::{\n+    sel4_config::wordRadix,\n+    structures::exception_t,\n+    utils::{convert_to_mut_type_ref, convert_to_type_ref},\n+    MASK,\n+};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 5 to 7)\n-use crate::{cap::{cap_t, CapTag, same_region_as, same_object_as, is_cap_revocable, zombie::capCyclicZombie}, mdb::mdb_node_t,\n-    utils::{MAX_FREE_INDEX, resolveAddressBits_ret_t}, structures::finaliseSlot_ret,\n-    deps::{finaliseCap, preemptionPoint, post_cap_deletion}};\n+use crate::{\n+    cap::{\n+        cap_t, is_cap_revocable, same_object_as, same_region_as, zombie::capCyclicZombie, CapTag,\n+    },\n+    deps::{finaliseCap, post_cap_deletion, preemptionPoint},\n+    mdb::mdb_node_t,\n+    structures::finaliseSlot_ret,\n+    utils::{resolveAddressBits_ret_t, MAX_FREE_INDEX},\n+};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 123 to 124)\n-                return badge == next.cap.get_ep_badge() &&\n-                    !(next.cteMDBNode.get_first_badged() != 0);\n+                return badge == next.cap.get_ep_badge()\n+                    && !(next.cteMDBNode.get_first_badged() != 0);\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 132 to 133)\n-                return badge == next.cap.get_nf_badge() &&\n-                    !(next.cteMDBNode.get_first_badged() != 0);\n+                return badge == next.cap.get_nf_badge()\n+                    && !(next.cteMDBNode.get_first_badged() != 0);\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 135 to 135)\n-            _ => true\n+            _ => true,\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 204 to 204)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 206 to 206)\n-    \n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 222 to 222)\n-                cap_removable(&fc_ret.remainder, self) && fc_ret.cleanupInfo.get_cap_type() == CapTag::CapNullCap\n+                cap_removable(&fc_ret.remainder, self)\n+                    && fc_ret.cleanupInfo.get_cap_type() == CapTag::CapNullCap\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 237 to 237)\n-    \n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 241 to 241)\n-                let first_badged = ((next_node.cteMDBNode.get_first_badged() != 0) || (mdb_node.get_first_badged() != 0)) as usize;\n+                let first_badged = ((next_node.cteMDBNode.get_first_badged() != 0)\n+                    || (mdb_node.get_first_badged() != 0))\n+                    as usize;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 269 to 269)\n-                    if ptr == ptr2 && self.cap.get_zombie_number() == n && self.cap.get_zombie_type() == zombie_type {\n+                    if ptr == ptr2\n+                        && self.cap.get_zombie_number() == n\n+                        && self.cap.get_zombie_type() == zombie_type\n+                    {\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 273 to 273)\n-                        \n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 293 to 293)\n-       let mut next_ptr = self.cteMDBNode.get_next();\n+        let mut next_ptr = self.cteMDBNode.get_next();\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 318 to 318)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 335 to 335)\n-    \n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 338 to 338)\n-    src_slot.cteMDBNode.set_next(dest_slot as *const cte_t as usize);\n+    src_slot\n+        .cteMDBNode\n+        .set_next(dest_slot as *const cte_t as usize);\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 341 to 341)\n-        cte_ref.cteMDBNode.set_prev(dest_slot as *const cte_t as usize);\n+        cte_ref\n+            .cteMDBNode\n+            .set_prev(dest_slot as *const cte_t as usize);\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 348 to 349)\n-    slot.cteMDBNode = mdb_node_t::new(next as usize, 1usize, 1usize,\n-        parent as *const cte_t as usize);\n+    slot.cteMDBNode = mdb_node_t::new(\n+        next as usize,\n+        1usize,\n+        1usize,\n+        parent as *const cte_t as usize,\n+    );\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 358 to 358)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 364 to 367)\n-    assert!(\n-        dest_slot.cteMDBNode.get_next() == 0\n-            && dest_slot.cteMDBNode.get_prev() == 0\n-    );\n+    assert!(dest_slot.cteMDBNode.get_next() == 0 && dest_slot.cteMDBNode.get_prev() == 0);\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 377 to 377)\n-        prev_ref.cteMDBNode.set_next(dest_slot as *const cte_t as usize);\n+        prev_ref\n+            .cteMDBNode\n+            .set_next(dest_slot as *const cte_t as usize);\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 382 to 382)\n-        next_ref.cteMDBNode.set_prev(dest_slot as *const cte_t as usize);\n+        next_ref\n+            .cteMDBNode\n+            .set_prev(dest_slot as *const cte_t as usize);\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 393 to 393)\n-            convert_to_mut_type_ref::<cte_t>(prev_ptr).cteMDBNode.set_next(slot2 as *const cte_t as usize);\n+            convert_to_mut_type_ref::<cte_t>(prev_ptr)\n+                .cteMDBNode\n+                .set_next(slot2 as *const cte_t as usize);\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 397 to 397)\n-            convert_to_mut_type_ref::<cte_t>(next_ptr).cteMDBNode.set_prev(slot2 as *const cte_t as usize);\n+            convert_to_mut_type_ref::<cte_t>(next_ptr)\n+                .cteMDBNode\n+                .set_prev(slot2 as *const cte_t as usize);\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 410 to 410)\n-            convert_to_mut_type_ref::<cte_t>(prev_ptr).cteMDBNode.set_next(slot1 as *const cte_t as usize);\n+            convert_to_mut_type_ref::<cte_t>(prev_ptr)\n+                .cteMDBNode\n+                .set_next(slot1 as *const cte_t as usize);\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 414 to 414)\n-            convert_to_mut_type_ref::<cte_t>(next_ptr).cteMDBNode.set_prev(slot1 as *const cte_t as usize);\n+            convert_to_mut_type_ref::<cte_t>(next_ptr)\n+                .cteMDBNode\n+                .set_prev(slot1 as *const cte_t as usize);\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 419 to 419)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 438 to 438)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 447 to 449)\n-            srcSlot.cap.set_untyped_free_index(\n-                MAX_FREE_INDEX(srcCap.get_untyped_block_size())\n-            );\n+            srcSlot\n+                .cap\n+                .set_untyped_free_index(MAX_FREE_INDEX(srcCap.get_untyped_block_size()));\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 455 to 455)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 458 to 458)\n-pub fn resolve_address_bits(node_cap: &cap_t, cap_ptr: usize, _n_bits: usize) -> resolveAddressBits_ret_t {\n+pub fn resolve_address_bits(\n+    node_cap: &cap_t,\n+    cap_ptr: usize,\n+    _n_bits: usize,\n+) -> resolveAddressBits_ret_t {\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 503 to 504)\n-\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 507 to 509)\n-    unsafe {\n-        (*slot).delete_one()\n-    }\n+    unsafe { (*slot).delete_one() }\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 511 to 511)\n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/deps.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/deps.rs (original lines from 25 to 25)\n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/interface.rs (original lines from 1 to 1)\n-\n+pub use crate::cap::CapTag;\n+pub use crate::cap::{cap_t, same_object_as};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/interface.rs (original lines from 4 to 5)\n-pub use crate::cap::{cap_t, same_object_as};\n-pub use crate::cap::CapTag;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/interface.rs (original lines from 7 to 7)\n+pub use super::cte::{cte_insert, cte_move, cte_swap, cte_t, insert_new_cap, resolve_address_bits};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/interface.rs (original lines from 8 to 8)\n-pub use super::cte::{resolve_address_bits, cte_insert, cte_t, cte_move, cte_swap, insert_new_cap};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/lib.rs (original lines from 33 to 33)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/lib.rs (original lines from 36 to 38)\n-mod utils;\n-mod mdb;\n-mod cte;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/lib.rs (original lines from 40 to 40)\n+mod cte;\n+mod mdb;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/lib.rs (original lines from 41 to 41)\n+mod utils;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/lib.rs (original lines from 42 to 44)\n-\n-/// 暴露给外部的接口\n-pub mod interface;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/lib.rs (original lines from 47 to 47)\n+/// 暴露给外部的接口\n+pub mod interface;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/lib.rs (original lines from 50 to 50)\n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/mdb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/mdb.rs (original lines from 3 to 3)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/mdb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/mdb.rs (original lines from 5 to 5)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/mdb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/mdb.rs (original lines from 7 to 7)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/structures.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/structures.rs (original lines from 5 to 5)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/structures.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/structures.rs (original lines from 23 to 23)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/structures.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/structures.rs (original lines from 40 to 40)\n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/utils.rs (original lines from 1 to 1)\n-use common::{sel4_config::seL4_MinUntypedBits, BIT, structures::exception_t};\n+use common::{sel4_config::seL4_MinUntypedBits, structures::exception_t, BIT};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/utils.rs (original lines from 4 to 4)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `core_intrinsics` is internal to the compiler or standard library\n --> src/lib.rs:1:12\n  |\n1 | #![feature(core_intrinsics)]\n  |            ^^^^^^^^^^^^^^^\n  |\n  = note: using it is strongly discouraged\n  = note: `#[warn(internal_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused doc comment\n  --> src/cap/mod.rs:51:1\n   |\n51 | / /// cap_t 表示一个capability，由两个机器字组成，包含了类型、对象元数据以及指向内核对象的指针。\n52 | | /// 每个类型的capability的每个字段都实现了get和set方法。\n   | |_-------------------------------------------------------^\n   |   |\n   |   rustdoc does not generate documentation for macro invocations\n   |\n   = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\n   = note: `#[warn(unused_doc_comments)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/mdb.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused doc comment\n --> src/mdb.rs:4:1\n  |\n4 | / /// 两个机器字组成，维护一个双向链表，其中还有revocable和firstbadged两个标志位字段。\n5 | | /// \n6 | | /// revocable：可以在不通知对象持有者的情况下被删除或撤销。\n7 | | /// \n8 | | /// firstbadged：表示此能力是否是具有相同对象和相同类型的一组能力中的第一个被赋予badge的能力。\n  | |_---------------------------------------------------------------------------------------------^\n  |   |\n  |   rustdoc does not generate documentation for macro invocations\n  |\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `else { if .. }` block can be collapsed\n   --> src/cte.rs:150:16\n    |\n150 |           } else {\n    |  ________________^\n151 | |             if mdb.get_next() == 0 {\n152 | |                 true\n153 | |             } else {\n...   |\n156 | |             }\n157 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\n    = note: `#[warn(clippy::collapsible_else_if)]` on by default\nhelp: collapse nested if block\n    |\n150 ~         } else if mdb.get_next() == 0 {\n151 +             true\n152 +         } else {\n153 +             let next = convert_to_type_ref::<cte_t>(mdb.get_next());\n154 +             return !same_object_as(&self.cap, &next.cap);\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cap/zombie.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/cap/zombie.rs:19:9\n   |\n19 |         return ZombieType_ZombieCNode(_type);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n   = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n   |\n19 -         return ZombieType_ZombieCNode(_type);\n19 +         ZombieType_ZombieCNode(_type)\n   |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cap/zombie.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/cap/zombie.rs:25:9\n   |\n25 |         return self.get_zombie_id() & !MASK!(radix + 1);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n   |\n25 -         return self.get_zombie_id() & !MASK!(radix + 1);\n25 +         self.get_zombie_id() & !MASK!(radix + 1)\n   |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cap/zombie.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/cap/zombie.rs:31:9\n   |\n31 |         return self.get_zombie_id() & MASK!(radix + 1);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n   |\n31 -         return self.get_zombie_id() & MASK!(radix + 1);\n31 +         self.get_zombie_id() & MASK!(radix + 1)\n   |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cap/zombie.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/cap/zombie.rs:51:5\n   |\n51 |     return cap_t::new_zombie_cap((ptr & !mask) | (number & mask), _type);\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n   |\n51 -     return cap_t::new_zombie_cap((ptr & !mask) | (number & mask), _type);\n51 +     cap_t::new_zombie_cap((ptr & !mask) | (number & mask), _type)\n   |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cap/zombie.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded late initialization\n  --> src/cap/zombie.rs:45:5\n   |\n45 |     let mask: usize;\n   |     ^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init\n   = note: `#[warn(clippy::needless_late_init)]` on by default\nhelp: move the declaration `mask` here and remove the assignments from the branches\n   |\n45 ~     \n46 ~     let mask: usize = if _type == ZombieType_ZombieTCB {\n47 ~         MASK!(TCB_CNODE_RADIX + 1)\n48 |     } else {\n49 ~         MASK!(_type + 1)\n50 ~     };\n   |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cap/zombie.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/cap/zombie.rs:55:5\n   |\n55 |     return n & MASK!(wordRadix);\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n   |\n55 -     return n & MASK!(wordRadix);\n55 +     n & MASK!(wordRadix)\n   |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cap/mod.rs:125:20\n    |\n125 |             return self.clone();\n    |                    ^^^^^^^^^^^^ help: try dereferencing it: `*self`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n    = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cap/mod.rs:130:39\n    |\n130 |                     let mut new_cap = self.clone();\n    |                                       ^^^^^^^^^^^^ help: try dereferencing it: `*self`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cap/mod.rs:140:39\n    |\n140 |                     let mut new_cap = self.clone();\n    |                                       ^^^^^^^^^^^^ help: try dereferencing it: `*self`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cap/mod.rs:155:35\n    |\n155 |                 let mut new_cap = self.clone();\n    |                                   ^^^^^^^^^^^^ help: try dereferencing it: `*self`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cap/mod.rs:160:20\n    |\n160 |             _ => { self.clone() }\n    |                    ^^^^^^^^^^^^ help: try dereferencing it: `*self`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: match expression looks like `matches!` macro\n   --> src/cap/mod.rs:200:9\n    |\n200 | / ...   match self.get_cap_type() {\n201 | | ...       CapTag::CapUntypedCap | CapTag::CapEndpointCap | CapTag::CapNotificationCap | CapTag::CapCNodeCap | CapTag::CapFrameCap | CapTa...\n202 | | ...       CapTag::CapPageTableCap | CapTag::CapZombieCap | CapTag::CapThreadCap => true,\n203 | | ...       _ => false,\n204 | | ...   }\n    | |_______^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro\n    = note: `#[warn(clippy::match_like_matches_macro)]` on by default\nhelp: try\n    |\n200 ~         matches!(self.get_cap_type(), CapTag::CapUntypedCap | CapTag::CapEndpointCap | CapTag::CapNotificationCap | CapTag::CapCNodeCap | CapTag::CapFrameCap | CapTag::CapASIDPoolCap |\n201 +             CapTag::CapPageTableCap | CapTag::CapZombieCap | CapTag::CapThreadCap)\n    |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cap/mod.rs:224:13\n    |\n224 |             return false;\n    |             ^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n224 -             return false;\n224 +             false\n    |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cap/mod.rs:271:13\n    |\n271 |             return false;\n    |             ^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n271 -             return false;\n271 +             false\n    |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: match expression looks like `matches!` macro\n   --> src/cap/mod.rs:257:13\n    |\n257 | /             match cap2.get_cap_type() {\n258 | |                 CapTag::CapIrqControlCap | CapTag::CapIrqHandlerCap => {\n259 | |                     true\n260 | |                 }\n261 | |                 _ => false\n262 | |             }\n    | |_____________^ help: try: `matches!(cap2.get_cap_type(), CapTag::CapIrqControlCap | CapTag::CapIrqHandlerCap)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cap/mod.rs:307:13\n    |\n307 |             return derived_cap.get_ep_badge() != src_cap.get_ep_badge();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n307 -             return derived_cap.get_ep_badge() != src_cap.get_ep_badge();\n307 +             derived_cap.get_ep_badge() != src_cap.get_ep_badge()\n    |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cap/mod.rs:312:13\n    |\n312 |             return derived_cap.get_nf_badge() != src_cap.get_nf_badge();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n312 -             return derived_cap.get_nf_badge() != src_cap.get_nf_badge();\n312 +             derived_cap.get_nf_badge() != src_cap.get_nf_badge()\n    |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cap/mod.rs:316:13\n    |\n316 |             return src_cap.get_cap_type() == CapTag::CapIrqControlCap;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n316 -             return src_cap.get_cap_type() == CapTag::CapIrqControlCap;\n316 +             src_cap.get_cap_type() == CapTag::CapIrqControlCap\n    |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cap/mod.rs:320:13\n    |\n320 |             return true;\n    |             ^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n320 -             return true;\n320 +             true\n    |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/utils.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `0 as *mut _` detected\n  --> src/utils.rs:22:19\n   |\n22 |             slot: 0 as *mut cte_t,\n   |                   ^^^^^^^^^^^^^^^ help: try: `core::ptr::null_mut::<cte_t>()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr\n   = note: `#[warn(clippy::zero_ptr)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n  --> src/cte.rs:51:31\n   |\n51 |                     ret.cap = cap.clone();\n   |                               ^^^^^^^^^^^ help: try dereferencing it: `*cap`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n  --> src/cte.rs:61:27\n   |\n61 |                 ret.cap = cap.clone();\n   |                           ^^^^^^^^^^^ help: try dereferencing it: `*cap`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n  --> src/cte.rs:75:31\n   |\n75 |                     ret.cap = cap.clone();\n   |                               ^^^^^^^^^^^ help: try dereferencing it: `*cap`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n  --> src/cte.rs:83:34\n   |\n83 |                 let mut newCap = cap.clone();\n   |                                  ^^^^^^^^^^^ help: try dereferencing it: `*cap`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n  --> src/cte.rs:89:27\n   |\n89 |                 ret.cap = cap.clone();\n   |                           ^^^^^^^^^^^ help: try dereferencing it: `*cap`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cte.rs:105:9\n    |\n105 |         return exception_t::EXCEPTION_NONE;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n105 -         return exception_t::EXCEPTION_NONE;\n105 +         exception_t::EXCEPTION_NONE\n    |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/cte.rs:109:12\n    |\n109 |         if !(self.cteMDBNode.get_revocable() != 0) {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.cteMDBNode.get_revocable() == 0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/cte.rs:124:21\n    |\n124 |                     !(next.cteMDBNode.get_first_badged() != 0);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `next.cteMDBNode.get_first_badged() == 0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/cte.rs:133:21\n    |\n133 |                     !(next.cteMDBNode.get_first_badged() != 0);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `next.cteMDBNode.get_first_badged() == 0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cte.rs:123:17\n    |\n123 | /                 return badge == next.cap.get_ep_badge() &&\n124 | |                     !(next.cteMDBNode.get_first_badged() != 0);\n    | |______________________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n123 ~                 badge == next.cap.get_ep_badge() &&\n124 ~                     !(next.cteMDBNode.get_first_badged() != 0)\n    |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cte.rs:132:17\n    |\n132 | /                 return badge == next.cap.get_nf_badge() &&\n133 | |                     !(next.cteMDBNode.get_first_badged() != 0);\n    | |______________________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n132 ~                 badge == next.cap.get_nf_badge() &&\n133 ~                     !(next.cteMDBNode.get_first_badged() != 0)\n    |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cte.rs:155:17\n    |\n155 |                 return !same_object_as(&self.cap, &next.cap);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n155 -                 return !same_object_as(&self.cap, &next.cap);\n155 +                 !same_object_as(&self.cap, &next.cap)\n    |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: match expression looks like `matches!` macro\n   --> src/cte.rs:164:9\n    |\n164 | /         match self.cap.get_cap_type() {\n165 | |             CapTag::CapThreadCap | CapTag::CapZombieCap | CapTag::CapCNodeCap => true,\n166 | |             _ => false,\n167 | |         }\n    | |_________^ help: try: `matches!(self.cap.get_cap_type(), CapTag::CapThreadCap | CapTag::CapZombieCap | CapTag::CapCNodeCap)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cte.rs:215:9\n    |\n215 |         return exception_t::EXCEPTION_NONE;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n215 -         return exception_t::EXCEPTION_NONE;\n215 +         exception_t::EXCEPTION_NONE\n    |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cte.rs:313:9\n    |\n313 |         return exception_t::EXCEPTION_NONE;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n313 -         return exception_t::EXCEPTION_NONE;\n313 +         exception_t::EXCEPTION_NONE\n    |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `mdb_node_t` which implements the `Copy` trait\n   --> src/cte.rs:323:22\n    |\n323 |     let mut newMDB = srcMDB.clone();\n    |                      ^^^^^^^^^^^^^^ help: try dereferencing it: `*srcMDB`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cte.rs:336:24\n    |\n336 |     (*dest_slot).cap = new_cap.clone();\n    |                        ^^^^^^^^^^^^^^^ help: try dereferencing it: `*new_cap`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: deref which would be done by auto-deref\n   --> src/cte.rs:336:5\n    |\n336 |     (*dest_slot).cap = new_cap.clone();\n    |     ^^^^^^^^^^^^ help: try: `dest_slot`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref\n    = note: `#[warn(clippy::explicit_auto_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: deref which would be done by auto-deref\n   --> src/cte.rs:337:5\n    |\n337 |     (*dest_slot).cteMDBNode = newMDB;\n    |     ^^^^^^^^^^^^ help: try: `dest_slot`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cte.rs:347:16\n    |\n347 |     slot.cap = cap.clone();\n    |                ^^^^^^^^^^^ help: try dereferencing it: `*cap`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/cte.rs:348:39\n    |\n348 |     slot.cteMDBNode = mdb_node_t::new(next as usize, 1usize, 1usize,\n    |                                       ^^^^^^^^^^^^^ help: try: `next`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cte.rs:369:21\n    |\n369 |     dest_slot.cap = new_cap.clone();\n    |                     ^^^^^^^^^^^^^^^ help: try dereferencing it: `*new_cap`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cte.rs:401:17\n    |\n401 |     slot1.cap = cap2.clone();\n    |                 ^^^^^^^^^^^^ help: try dereferencing it: `*cap2`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cte.rs:404:17\n    |\n404 |     slot2.cap = cap1.clone();\n    |                 ^^^^^^^^^^^^ help: try dereferencing it: `*cap1`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cte.rs:424:13\n    |\n424 |             return true;\n    |             ^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n424 -             return true;\n424 +             true\n    |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cte.rs:430:13\n    |\n430 |             return n == 0 || (n == 1 && slot == z_slot);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n430 -             return n == 0 || (n == 1 && slot == z_slot);\n430 +             n == 0 || (n == 1 && slot == z_slot)\n    |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cte.rs:462:23\n    |\n462 |     let mut nodeCap = node_cap.clone();\n    |                       ^^^^^^^^^^^^^^^^ help: try dereferencing it: `*node_cap`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cte.rs:493:28\n    |\n493 |         nodeCap = unsafe { (*slot).cap.clone() };\n    |                            ^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `(*slot).cap`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cte.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/cte.rs:508:11\n    |\n508 |         (*slot).delete_one()\n    |           ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/cap_rights.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n  --> src/cap_rights.rs:26:9\n   |\n26 |         self.words[0] as usize & MASK!(seL4_CapRightsBits)\n   |         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.words[0]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/structures.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n  --> src/structures.rs:32:1\n   |\n32 | / impl Default for finaliseCap_ret {\n33 | |     fn default() -> Self {\n34 | |         finaliseCap_ret {\n35 | |             remainder: cap_t::default(),\n...  |\n38 | |     }\n39 | | }\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n   = note: `#[warn(clippy::derivable_impls)]` on by default\n   = help: remove the manual implementation...\nhelp: ...and instead derive it\n   |\n27 + #[derive(Default)]\n28 | pub struct finaliseCap_ret {\n   |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/compatibility.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n  --> src/compatibility.rs:60:34\n   |\n60 |         cte_insert(newCap, &mut *srcSlot, &mut *destSlot)\n   |                                  ^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/compatibility.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n  --> src/compatibility.rs:60:49\n   |\n60 |         cte_insert(newCap, &mut *srcSlot, &mut *destSlot)\n   |                                                 ^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/compatibility.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n  --> src/compatibility.rs:68:16\n   |\n68 |         (&mut *slot).derive_cap(cap)\n   |                ^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/compatibility.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression borrows a value the compiler would automatically borrow\n  --> src/compatibility.rs:68:9\n   |\n68 |         (&mut *slot).derive_cap(cap)\n   |         ^^^^^^^^^^^^ help: change this to: `(*slot)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-02T04:30:44Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:30:44Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-02T04:30:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:30:48Z WARN  lockbud::callbacks] crate riscv_target contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 8,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=cspace, checker=Clippy\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_2/kern-crates/CSpace\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling memchr v2.7.4\n   Compiling semver-parser v0.7.0\n   Compiling regex-syntax v0.8.5\n   Compiling lazy_static v1.5.0\n    Checking log v0.4.22\n   Compiling semver v0.9.0\n   Compiling rustc_version v0.2.3\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling aho-corasick v1.1.3\n   Compiling bare-metal v0.2.5\n   Compiling regex-automata v0.4.8\n   Compiling regex v1.11.1\n   Compiling riscv-target v0.1.2\n   Compiling riscv v0.6.0 (https://gitee.com/rcore-os/riscv#11d43cf7)\n    Checking common v0.1.0 (https://github.com/CtrlZ233/rel4_comm.git?branch=main#74acf0cc)\n    Checking cspace v0.1.0 (/home/runner/check/batch_2/kern-crates/CSpace)\nerror: could not compile `cspace` (lib) due to 4 previous errors; 55 warnings emitted\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/aarch64.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/aarch64.rs (original lines from 1 to 1)\n-use core::arch::asm;\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/aarch64.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/aarch64.rs (original lines from 3 to 3)\n+use core::arch::asm;\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/aarch64.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/aarch64.rs (original lines from 5 to 5)\n-    init_curr: bool, \n+    init_curr: bool,\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/aarch64.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/aarch64.rs (original lines from 39 to 39)\n-\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/aarch64.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/aarch64.rs (original lines from 53 to 53)\n-        Unwind{init_curr: true, pc: 0, fp: 0, stack_info}\n+        Unwind {\n+            init_curr: true,\n+            pc: 0,\n+            fp: 0,\n+            stack_info,\n+        }\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/aarch64.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/aarch64.rs (original lines from 56 to 57)\n-    fn new(pc:usize, fp:usize, stack_info: StackInfo) -> Self {\n-        Unwind{init_curr: false, pc,fp,stack_info}\n+    fn new(pc: usize, fp: usize, stack_info: StackInfo) -> Self {\n+        Unwind {\n+            init_curr: false,\n+            pc,\n+            fp,\n+            stack_info,\n+        }\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/aarch64.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/aarch64.rs (original lines from 69 to 69)\n-            error!(\"unwind init fp: {:#016x} is invalid\",self.fp);\n+            error!(\"unwind init fp: {:#016x} is invalid\", self.fp);\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/lib.rs (original lines from 27 to 27)\n-        Self {low, high}\n+        Self { low, high }\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/lib.rs (original lines from 31 to 31)\n-         fp < self.high && fp > self.low\n+        fp < self.high && fp > self.low\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/lib.rs (original lines from 37 to 37)\n-    fn new(pc:usize, fp:usize, stack_info: StackInfo) -> Self;\n+    fn new(pc: usize, fp: usize, stack_info: StackInfo) -> Self;\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/riscv.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/riscv.rs (original lines from 1 to 1)\n-use core::arch::asm;\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/riscv.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/riscv.rs (original lines from 3 to 3)\n+use core::arch::asm;\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/riscv.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/riscv.rs (original lines from 35 to 36)\n-            let stack: *const StackFrame = \n-                (self.fp as *const StackFrame).sub(1);\n+            let stack: *const StackFrame = (self.fp as *const StackFrame).sub(1);\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/riscv.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/riscv.rs (original lines from 44 to 46)\n-            let stack: *const StackFrame = \n-                (self.fp as *const StackFrame).sub(1);\n-            self.pc = (*stack).ra;   \n+            let stack: *const StackFrame = (self.fp as *const StackFrame).sub(1);\n+            self.pc = (*stack).ra;\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/riscv.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/riscv.rs (original lines from 64 to 66)\n-    fn new(pc:usize, fp: usize, stack_info: StackInfo)\n-        -> Self {\n-        Unwind{init_curr: false, pc, fp, stack_info}\n+    fn new(pc: usize, fp: usize, stack_info: StackInfo) -> Self {\n+        Unwind {\n+            init_curr: false,\n+            pc,\n+            fp,\n+            stack_info,\n+        }\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/riscv.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/riscv.rs (original lines from 69 to 71)\n-    fn new_from_cur_ctx(stack_info: StackInfo) \n-        -> Self {\n-        Unwind{init_curr: true, pc: 0, fp: 0, stack_info}\n+    fn new_from_cur_ctx(stack_info: StackInfo) -> Self {\n+        Unwind {\n+            init_curr: true,\n+            pc: 0,\n+            fp: 0,\n+            stack_info,\n+        }\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/riscv.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/riscv.rs (original lines from 83 to 83)\n-            error!(\"unwind init sp: {:#016x} is invalid\",self.fp);\n+            error!(\"unwind init sp: {:#016x} is invalid\", self.fp);\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/x86.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/x86.rs (original lines from 1 to 1)\n-use core::arch::asm;\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/x86.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/x86.rs (original lines from 3 to 3)\n+use core::arch::asm;\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/x86.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/x86.rs (original lines from 66 to 68)\n-    fn new(pc:usize, fp: usize, stack_info: StackInfo)\n-        -> Self {\n-        Unwind{init_curr: false, pc, fp, stack_info}\n+    fn new(pc: usize, fp: usize, stack_info: StackInfo) -> Self {\n+        Unwind {\n+            init_curr: false,\n+            pc,\n+            fp,\n+            stack_info,\n+        }\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/x86.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/x86.rs (original lines from 71 to 73)\n-    fn new_from_cur_ctx(stack_info: StackInfo)\n-        -> Self {\n-        Unwind{init_curr: true, pc: 0, fp: 0, stack_info}\n+    fn new_from_cur_ctx(stack_info: StackInfo) -> Self {\n+        Unwind {\n+            init_curr: true,\n+            pc: 0,\n+            fp: 0,\n+            stack_info,\n+        }\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/x86.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/kern-crates/axbacktrace/src/x86.rs (original lines from 85 to 85)\n-            error!(\"unwind init sp: {:#016x} is invalid\",self.fp);\n+            error!(\"unwind init sp: {:#016x} is invalid\", self.fp);\n"
    },
    {
      "cmd_idx": 12,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-02T04:33:36Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:33:36Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 17,
      "file": "batch_8/kern-crates/axhal_split",
      "kind": "Cargo",
      "raw": "\n   0: 无法解析 `batch_8/kern-crates/axhal_split` 内的 Rust 项目布局\n   1: 无法读取 cargo metadata 的结果：`cargo metadata` exited with an error: error: failed to parse manifest at `/home/runner/check/batch_8/kern-crates/axhal_split/Cargo.toml`\n\n      Caused by:\n        error inheriting `version` from workspace root manifest's `workspace.package.version`\n\n      Caused by:\n        failed to find a workspace root\n   1: \n\nLocation:\n   src/layout/mod.rs:59\n\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ SPANTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n   0: os_checker::run_checker::try_new with user=\"kern-crates\" repo=\"axhal_split\"\n      at src/run_checker/mod.rs:217\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets."
    },
    {
      "cmd_idx": 18,
      "file": "batch_9/kern-crates/r4l",
      "kind": "Cargo",
      "raw": "\n   0: 无法解析 `batch_9/kern-crates/r4l` 内的 Rust 项目布局\n   1: 无法读取 cargo metadata 的结果：`cargo metadata` exited with an error: error: current package believes it's in a workspace when it's not:\n      current:   /home/runner/check/batch_9/kern-crates/r4l/drivers/i2c/busses/i2c-designware/Cargo.toml\n      workspace: /home/runner/check/batch_9/kern-crates/r4l/Cargo.toml\n\n      this may be fixable by adding `drivers/i2c/busses/i2c-designware` to the `workspace.members` array of the manifest located at: /home/runner/check/batch_9/kern-crates/r4l/Cargo.toml\n      Alternatively, to keep it out of the workspace, add the package to the `workspace.exclude` array, or add an empty `[workspace]` table to the package's manifest.\n   1: \n\nLocation:\n   src/layout/mod.rs:59\n\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ SPANTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n   0: os_checker::run_checker::try_new with user=\"kern-crates\" repo=\"r4l\"\n      at src/run_checker/mod.rs:194\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets."
    },
    {
      "cmd_idx": 19,
      "file": "batch_11/kern-crates/test-test-repo",
      "kind": "Cargo",
      "raw": "\n   0: 无法解析 `batch_11/kern-crates/test-test-repo` 内的 Rust 项目布局\n   1: repo_root `batch_11/kern-crates/test-test-repo` (规范路径为 `/home/runner/check/batch_11/kern-crates/test-test-repo`) 不是 Rust 项目，因为不包含任何 Cargo.toml\n\nLocation:\n   src/layout/mod.rs:136\n\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ SPANTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n   0: os_checker::run_checker::try_new with user=\"kern-crates\" repo=\"test-test-repo\"\n      at src/run_checker/mod.rs:194\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets."
    },
    {
      "cmd_idx": 21,
      "file": "src/decoder.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this returns a `Result<_, ()>`\n  --> src/decoder.rs:13:5\n   |\n13 |     pub fn decode(etype: usize, code: usize, value: isize) -> Result<DecodeType, ()> {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: use a custom `Error` type instead\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_unit_err\n   = note: `#[warn(clippy::result_unit_err)]` on by default\n\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/decoder.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this returns a `Result<_, ()>`\n  --> src/decoder.rs:34:5\n   |\n34 |     pub fn convert_key(key: Key) -> Result<char, ()> {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: use a custom `Error` type instead\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_unit_err\n\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/key.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this returns a `Result<_, ()>`\n   --> src/key.rs:203:5\n    |\n203 |     pub fn from_code(code: usize) -> Result<Key, ()> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use a custom `Error` type instead\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_unit_err\n\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/key.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this returns a `Result<_, ()>`\n   --> src/key.rs:271:5\n    |\n271 |     pub fn to_char(&self) -> Result<char, ()> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use a custom `Error` type instead\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_unit_err\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rboot, checker=Lockbud\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-uefi\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zCore/rboot\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-uefi\nwarning: `/home/runner/check/batch_12/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/batch_12/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/Cargo.lock\" does not exist, unable to build with the standard library, try:\n        rustup component add rust-src --toolchain nightly-2024-05-21-x86_64-unknown-linux-gnu\n"
    },
    {
      "cmd_idx": 37,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rboot, checker=Lockbud\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-musl\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zCore/rboot\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-musl\nwarning: `/home/runner/check/batch_12/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/batch_12/kern-crates/zCore/rboot/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nerror: \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/Cargo.lock\" does not exist, unable to build with the standard library, try:\n        rustup component add rust-src --toolchain nightly-2024-05-21-x86_64-unknown-linux-gnu\n"
    },
    {
      "cmd_idx": 54,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=uart, checker=Lockbud\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zCore/zcore-tests/testcases/src/uart\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling cfg_aliases v0.2.1\n   Compiling libc v0.2.161\n   Compiling bitflags v2.6.0\n   Compiling cfg-if v1.0.0\n   Compiling nix v0.29.0\n   Compiling uart v0.1.0 (/home/runner/check/batch_12/kern-crates/zCore/zcore-tests/testcases/src/uart)\nerror[E0432]: unresolved imports `nix::fcntl::open`, `nix::fcntl::OFlag`, `nix::sys::stat`\n   --> src/main.rs:2:13\n    |\n2   |     fcntl::{open, OFlag},\n    |             ^^^^  ^^^^^ no `OFlag` in `fcntl`\n    |             |\n    |             no `open` in `fcntl`\n3   |     sys::stat::Mode,\n    |          ^^^^ could not find `stat` in `sys`\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/fcntl.rs:220:8\n    |\n220 | pub fn open<P: ?Sized + NixPath>(\n    |        ^^^^\n    = note: the item is gated behind the `fs` feature\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/sys/mod.rs:128:13\n    |\n128 |     pub mod stat;\n    |             ^^^^\n    = note: the item is gated behind the `fs` feature\n\nFor more information about this error, try `rustc --explain E0432`.\nerror: could not compile `uart` (bin \"uart\") due to 1 previous error\n"
    },
    {
      "cmd_idx": 55,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=uart, checker=Lockbud\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-uefi\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zCore/zcore-tests/testcases/src/uart\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-uefi\n   Compiling libc v0.2.161\n   Compiling nix v0.29.0\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v2.6.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `x86_64-unknown-uefi` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-uefi`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `libc` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 56,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=uart, checker=Lockbud\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-musl\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zCore/zcore-tests/testcases/src/uart\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-musl\n   Compiling libc v0.2.161\n   Compiling nix v0.29.0\n   Compiling bitflags v2.6.0\n   Compiling cfg-if v1.0.0\n   Compiling uart v0.1.0 (/home/runner/check/batch_12/kern-crates/zCore/zcore-tests/testcases/src/uart)\nerror[E0432]: unresolved imports `nix::fcntl::open`, `nix::fcntl::OFlag`, `nix::sys::stat`\n   --> src/main.rs:2:13\n    |\n2   |     fcntl::{open, OFlag},\n    |             ^^^^  ^^^^^ no `OFlag` in `fcntl`\n    |             |\n    |             no `open` in `fcntl`\n3   |     sys::stat::Mode,\n    |          ^^^^ could not find `stat` in `sys`\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/fcntl.rs:220:8\n    |\n220 | pub fn open<P: ?Sized + NixPath>(\n    |        ^^^^\n    = note: the item is gated behind the `fs` feature\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/sys/mod.rs:128:13\n    |\n128 |     pub mod stat;\n    |             ^^^^\n    = note: the item is gated behind the `fs` feature\n\nFor more information about this error, try `rustc --explain E0432`.\nerror: could not compile `uart` (bin \"uart\") due to 1 previous error\n"
    },
    {
      "cmd_idx": 57,
      "file": "(virtual) rap",
      "kind": "Cargo",
      "raw": "// pkg_name=uart, checker=Rap\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zCore/zcore-tests/testcases/src/uart\n// cmd=cargo +nightly-2024-06-30 rap -F -M\n   Compiling libc v0.2.161\n   Compiling cfg_aliases v0.2.1\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n   Compiling nix v0.29.0\n    Checking uart v0.1.0 (/home/runner/check/batch_12/kern-crates/zCore/zcore-tests/testcases/src/uart)\nerror[E0432]: unresolved imports `nix::fcntl::open`, `nix::fcntl::OFlag`, `nix::sys::stat`\n   --> src/main.rs:2:13\n    |\n2   |     fcntl::{open, OFlag},\n    |             ^^^^  ^^^^^ no `OFlag` in `fcntl`\n    |             |\n    |             no `open` in `fcntl`\n3   |     sys::stat::Mode,\n    |          ^^^^ could not find `stat` in `sys`\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/fcntl.rs:220:8\n    |\n220 | pub fn open<P: ?Sized + NixPath>(\n    |        ^^^^\n    = note: the item is gated behind the `fs` feature\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.29.0/src/sys/mod.rs:128:13\n    |\n128 |     pub mod stat;\n    |             ^^^^\n    = note: the item is gated behind the `fs` feature\n\nFor more information about this error, try `rustc --explain E0432`.\nerror: could not compile `uart` (bin \"uart\") due to 1 previous error\n00:41:04|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 61,
      "file": "/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `x86_64-unknown-uefi` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-uefi`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 61,
      "file": "/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `compiler_builtins`\n\n"
    },
    {
      "cmd_idx": 61,
      "file": "/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.3.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `x86_64-unknown-uefi` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-uefi`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 61,
      "file": "/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.3.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `compiler_builtins`\n\n"
    },
    {
      "cmd_idx": 61,
      "file": "/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.3.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.3.2/src/lib.rs:282:1\n    |\n282 | pub extern crate core as _core;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ can't find crate\n    |\n    = note: the `x86_64-unknown-uefi` target may not be installed\n    = help: consider downloading the target with `rustup target add x86_64-unknown-uefi`\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 61,
      "file": "/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:217:17\n    |\n217 |                 assert!(bit < Self::BIT_LENGTH);\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 61,
      "file": "/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:227:17\n    |\n227 |                 assert!(range.start < Self::BIT_LENGTH);\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 61,
      "file": "/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:228:17\n    |\n228 |                 assert!(range.end <= Self::BIT_LENGTH);\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 61,
      "file": "/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:229:17\n    |\n229 |                 assert!(range.start < range.end);\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 61,
      "file": "/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:241:17\n    |\n241 |                 assert!(bit < Self::BIT_LENGTH);\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 61,
      "file": "/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:257:17\n    |\n257 |                 assert!(range.start < Self::BIT_LENGTH);\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 61,
      "file": "/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:258:17\n    |\n258 |                 assert!(range.end <= Self::BIT_LENGTH);\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 61,
      "file": "/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:259:17\n    |\n259 |                 assert!(range.start < range.end);\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 61,
      "file": "/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:260:17\n    |\n260 |                 assert!(value << (Self::BIT_LENGTH - (range.end - range.start)) >>\n    |                 ^^^^^^\n...\n277 | bitfield_numeric_impl! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n    | ------------------------------------------------------------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bitfield_numeric_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 61,
      "file": "/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:298:9\n    |\n298 |         assert!(range.len() <= T::BIT_LENGTH);\n    |         ^^^^^^\n\n"
    },
    {
      "cmd_idx": 61,
      "file": "/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:306:9\n    |\n306 |         assert!(slice_end - slice_start <= 1);\n    |         ^^^^^^\n\n"
    },
    {
      "cmd_idx": 61,
      "file": "/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:335:9\n    |\n335 |         assert!(range.len() <= T::BIT_LENGTH);\n    |         ^^^^^^\n\n"
    },
    {
      "cmd_idx": 61,
      "file": "/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: cannot find macro `assert` in this scope\n   --> /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.2/src/lib.rs:342:9\n    |\n342 |         assert!(slice_end - slice_start <= 1);\n    |         ^^^^^^\n\n"
    },
    {
      "cmd_idx": 62,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/drivers.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: use of undeclared crate or module `x2apic`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/drivers.rs:36:9\n   |\n36 |     use x2apic::lapic::{TimerDivide, TimerMode};\n   |         ^^^^^^ use of undeclared crate or module `x2apic`\n\n"
    },
    {
      "cmd_idx": 62,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/config.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: use of undeclared crate or module `uefi`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/config.rs:3:5\n  |\n3 | use uefi::proto::console::gop::ModeInfo;\n  |     ^^^^ use of undeclared crate or module `uefi`\n\n"
    },
    {
      "cmd_idx": 62,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/config.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: use of undeclared crate or module `uefi`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/config.rs:4:5\n  |\n4 | use uefi::table::boot::MemoryDescriptor;\n  |     ^^^^ use of undeclared crate or module `uefi`\n\n"
    },
    {
      "cmd_idx": 62,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mem.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: use of undeclared crate or module `uefi`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mem.rs:5:5\n  |\n5 | use uefi::table::boot::MemoryType;\n  |     ^^^^ use of undeclared crate or module `uefi`\n\n"
    },
    {
      "cmd_idx": 62,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/trap.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `trapframe::TrapFrame`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/trap.rs:2:5\n  |\n2 | use trapframe::TrapFrame;\n  |     ^^^^^^^^^^^^^^^^^^^^ no `TrapFrame` in the root\n\n"
    },
    {
      "cmd_idx": 62,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `naive_timer`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs:7:5\n  |\n7 | use naive_timer::Timer;\n  |     ^^^^^^^^^^^ use of undeclared crate or module `naive_timer`\n\n"
    },
    {
      "cmd_idx": 62,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/cpu.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `raw_cpuid`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/cpu.rs:3:5\n  |\n3 | use raw_cpuid::CpuId;\n  |     ^^^^^^^^^ use of undeclared crate or module `raw_cpuid`\n\n"
    },
    {
      "cmd_idx": 62,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/trap.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: use of undeclared crate or module `executor`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/trap.rs:41:17\n   |\n41 |                 executor::handle_timeout();\n   |                 ^^^^^^^^ use of undeclared crate or module `executor`\n\n"
    },
    {
      "cmd_idx": 62,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: use of undeclared crate or module `x86_smpboot`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mod.rs:51:9\n   |\n51 |         x86_smpboot::start_application_processors(\n   |         ^^^^^^^^^^^ use of undeclared crate or module `x86_smpboot`\n\n"
    },
    {
      "cmd_idx": 62,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/thread.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: use of undeclared crate or module `executor`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/thread.rs:17:13\n   |\n17 |             executor::spawn(future);\n   |             ^^^^^^^^ use of undeclared crate or module `executor`\n\n"
    },
    {
      "cmd_idx": 62,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init` in crate `trapframe`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/boot.rs:24:33\n   |\n24 |             unsafe { trapframe::init() };\n   |                                 ^^^^ not found in `trapframe`\n   |\nhelp: consider importing one of these items\n   |\n3  | use crate::imp::arch::timer::init;\n   |\n3  | use crate::net::init;\n   |\n3  | use zcore_drivers::bus::pci::init;\n   |\n3  | use zcore_drivers::net::e1000::init;\n   |\nhelp: if you import `init`, refer to it directly\n   |\n24 -             unsafe { trapframe::init() };\n24 +             unsafe { init() };\n   |\n\n"
    },
    {
      "cmd_idx": 62,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init` in crate `trapframe`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/boot.rs:31:33\n   |\n31 |             unsafe { trapframe::init() };\n   |                                 ^^^^ not found in `trapframe`\n   |\nhelp: consider importing one of these items\n   |\n3  | use crate::imp::arch::timer::init;\n   |\n3  | use crate::net::init;\n   |\n3  | use zcore_drivers::bus::pci::init;\n   |\n3  | use zcore_drivers::net::e1000::init;\n   |\nhelp: if you import `init`, refer to it directly\n   |\n31 -             unsafe { trapframe::init() };\n31 +             unsafe { init() };\n   |\n\n"
    },
    {
      "cmd_idx": 62,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/common/context.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0599]: no method named `run` found for struct `trapframe::UserContext` in the current scope\n   --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/common/context.rs:232:24\n    |\n232 |                 self.0.run()\n    |                        ^^^ method not found in `trapframe::UserContext`\n\n"
    },
    {
      "cmd_idx": 62,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0599]: no method named `lock` found for struct `NAIVE_TIMER` in the current scope\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs:28:25\n   |\n12 | / lazy_static::lazy_static! {\n13 | |     static ref NAIVE_TIMER:Mutex<Timer> = Mutex::new(Timer::default());\n14 | | }\n   | |_- method `lock` not found for this struct\n...\n28 |               NAIVE_TIMER.lock().add(deadline, callback);\n   |                           ^^^^ method not found in `NAIVE_TIMER`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `lock`, perhaps you need to implement it:\n           candidate #1: `lock_api::mutex::RawMutex`\n\n"
    },
    {
      "cmd_idx": 62,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0599]: no method named `lock` found for struct `NAIVE_TIMER` in the current scope\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs:32:25\n   |\n12 | / lazy_static::lazy_static! {\n13 | |     static ref NAIVE_TIMER:Mutex<Timer> = Mutex::new(Timer::default());\n14 | | }\n   | |_- method `lock` not found for this struct\n...\n32 |               NAIVE_TIMER.lock().expire(timer_now());\n   |                           ^^^^ method not found in `NAIVE_TIMER`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `lock`, perhaps you need to implement it:\n           candidate #1: `lock_api::mutex::RawMutex`\n\n"
    },
    {
      "cmd_idx": 63,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/drivers.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: use of undeclared crate or module `x2apic`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/drivers.rs:36:9\n   |\n36 |     use x2apic::lapic::{TimerDivide, TimerMode};\n   |         ^^^^^^ use of undeclared crate or module `x2apic`\n\n"
    },
    {
      "cmd_idx": 63,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/config.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: use of undeclared crate or module `uefi`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/config.rs:3:5\n  |\n3 | use uefi::proto::console::gop::ModeInfo;\n  |     ^^^^ use of undeclared crate or module `uefi`\n\n"
    },
    {
      "cmd_idx": 63,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/config.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: use of undeclared crate or module `uefi`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/config.rs:4:5\n  |\n4 | use uefi::table::boot::MemoryDescriptor;\n  |     ^^^^ use of undeclared crate or module `uefi`\n\n"
    },
    {
      "cmd_idx": 63,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mem.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: use of undeclared crate or module `uefi`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mem.rs:5:5\n  |\n5 | use uefi::table::boot::MemoryType;\n  |     ^^^^ use of undeclared crate or module `uefi`\n\n"
    },
    {
      "cmd_idx": 63,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/trap.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `trapframe::TrapFrame`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/trap.rs:2:5\n  |\n2 | use trapframe::TrapFrame;\n  |     ^^^^^^^^^^^^^^^^^^^^ no `TrapFrame` in the root\n\n"
    },
    {
      "cmd_idx": 63,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `naive_timer`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs:7:5\n  |\n7 | use naive_timer::Timer;\n  |     ^^^^^^^^^^^ use of undeclared crate or module `naive_timer`\n\n"
    },
    {
      "cmd_idx": 63,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/cpu.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `raw_cpuid`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/cpu.rs:3:5\n  |\n3 | use raw_cpuid::CpuId;\n  |     ^^^^^^^^^ use of undeclared crate or module `raw_cpuid`\n\n"
    },
    {
      "cmd_idx": 63,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/trap.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: use of undeclared crate or module `executor`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/trap.rs:41:17\n   |\n41 |                 executor::handle_timeout();\n   |                 ^^^^^^^^ use of undeclared crate or module `executor`\n\n"
    },
    {
      "cmd_idx": 63,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: use of undeclared crate or module `x86_smpboot`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mod.rs:51:9\n   |\n51 |         x86_smpboot::start_application_processors(\n   |         ^^^^^^^^^^^ use of undeclared crate or module `x86_smpboot`\n\n"
    },
    {
      "cmd_idx": 63,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/thread.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: use of undeclared crate or module `executor`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/thread.rs:17:13\n   |\n17 |             executor::spawn(future);\n   |             ^^^^^^^^ use of undeclared crate or module `executor`\n\n"
    },
    {
      "cmd_idx": 63,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init` in crate `trapframe`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/boot.rs:24:33\n   |\n24 |             unsafe { trapframe::init() };\n   |                                 ^^^^ not found in `trapframe`\n   |\nhelp: consider importing one of these items\n   |\n3  | use crate::imp::arch::timer::init;\n   |\n3  | use crate::net::init;\n   |\n3  | use zcore_drivers::bus::pci::init;\n   |\n3  | use zcore_drivers::net::e1000::init;\n   |\nhelp: if you import `init`, refer to it directly\n   |\n24 -             unsafe { trapframe::init() };\n24 +             unsafe { init() };\n   |\n\n"
    },
    {
      "cmd_idx": 63,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init` in crate `trapframe`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/boot.rs:31:33\n   |\n31 |             unsafe { trapframe::init() };\n   |                                 ^^^^ not found in `trapframe`\n   |\nhelp: consider importing one of these items\n   |\n3  | use crate::imp::arch::timer::init;\n   |\n3  | use crate::net::init;\n   |\n3  | use zcore_drivers::bus::pci::init;\n   |\n3  | use zcore_drivers::net::e1000::init;\n   |\nhelp: if you import `init`, refer to it directly\n   |\n31 -             unsafe { trapframe::init() };\n31 +             unsafe { init() };\n   |\n\n"
    },
    {
      "cmd_idx": 63,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/common/context.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0599]: no method named `run` found for struct `trapframe::UserContext` in the current scope\n   --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/common/context.rs:232:24\n    |\n232 |                 self.0.run()\n    |                        ^^^ method not found in `trapframe::UserContext`\n\n"
    },
    {
      "cmd_idx": 63,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0599]: no method named `lock` found for struct `NAIVE_TIMER` in the current scope\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs:28:25\n   |\n12 | / lazy_static::lazy_static! {\n13 | |     static ref NAIVE_TIMER:Mutex<Timer> = Mutex::new(Timer::default());\n14 | | }\n   | |_- method `lock` not found for this struct\n...\n28 |               NAIVE_TIMER.lock().add(deadline, callback);\n   |                           ^^^^ method not found in `NAIVE_TIMER`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `lock`, perhaps you need to implement it:\n           candidate #1: `lock_api::mutex::RawMutex`\n\n"
    },
    {
      "cmd_idx": 63,
      "file": "/home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0599]: no method named `lock` found for struct `NAIVE_TIMER` in the current scope\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs:32:25\n   |\n12 | / lazy_static::lazy_static! {\n13 | |     static ref NAIVE_TIMER:Mutex<Timer> = Mutex::new(Timer::default());\n14 | | }\n   | |_- method `lock` not found for this struct\n...\n32 |               NAIVE_TIMER.lock().expire(timer_now());\n   |                           ^^^^ method not found in `NAIVE_TIMER`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `lock`, perhaps you need to implement it:\n           candidate #1: `lock_api::mutex::RawMutex`\n\n"
    },
    {
      "cmd_idx": 64,
      "file": "Cargo.lock",
      "kind": "Audit",
      "raw": "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 664 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (224 crate dependencies)\nCrate:     critical-section\nVersion:   1.1.2\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.2\n└── riscv 0.10.1\n    ├── zcore-drivers 0.1.0\n    │   ├── linux-object 0.1.0\n    │   │   ├── zcore-loader 0.1.0\n    │   │   │   └── zcore 0.1.0\n    │   │   ├── zcore 0.1.0\n    │   │   └── linux-syscall 0.1.0\n    │   │       └── zcore-loader 0.1.0\n    │   └── kernel-hal 0.1.0\n    │       ├── zircon-syscall 0.1.0\n    │       │   └── zcore-loader 0.1.0\n    │       ├── zircon-object 0.1.0\n    │       │   ├── zircon-syscall 0.1.0\n    │       │   ├── zcore-loader 0.1.0\n    │       │   ├── zcore 0.1.0\n    │       │   ├── linux-syscall 0.1.0\n    │       │   └── linux-object 0.1.0\n    │       ├── zcore-loader 0.1.0\n    │       ├── zcore 0.1.0\n    │       ├── linux-syscall 0.1.0\n    │       └── linux-object 0.1.0\n    ├── zcore 0.1.0\n    └── kernel-hal 0.1.0\n\nCrate:     futures-util\nVersion:   0.3.30\nWarning:   yanked\nDependency tree:\nfutures-util 0.3.30\n└── futures 0.3.30\n    ├── zircon-syscall 0.1.0\n    │   └── zcore-loader 0.1.0\n    │       └── zcore 0.1.0\n    ├── zircon-object 0.1.0\n    │   ├── zircon-syscall 0.1.0\n    │   ├── zcore-loader 0.1.0\n    │   ├── zcore 0.1.0\n    │   ├── linux-syscall 0.1.0\n    │   │   └── zcore-loader 0.1.0\n    │   └── linux-object 0.1.0\n    │       ├── zcore-loader 0.1.0\n    │       ├── zcore 0.1.0\n    │       └── linux-syscall 0.1.0\n    └── linux-syscall 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 664,\n    \"last-commit\": \"f3460e5ed91658ab94fa41908cfa44991f9f4f02\",\n    \"last-updated\": \"2024-11-01T08:31:51-04:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 224\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.2\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"7059fff8937831a9ae6f0fe4d658ffabf58f2ca96aa9dec1c889f936f705f216\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      },\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"futures-util\",\n          \"version\": \"0.3.30\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48\",\n          \"dependencies\": [\n            {\n              \"name\": \"futures-core\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-macro\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-sink\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-task\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-project-lite\",\n              \"version\": \"0.2.14\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-utils\",\n              \"version\": \"0.1.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"
    },
    {
      "cmd_idx": 65,
      "file": "Cargo.lock",
      "kind": "Audit",
      "raw": "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 664 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (224 crate dependencies)\nCrate:     critical-section\nVersion:   1.1.2\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.2\n└── riscv 0.10.1\n    ├── zcore-drivers 0.1.0\n    │   ├── linux-object 0.1.0\n    │   │   ├── zcore-loader 0.1.0\n    │   │   │   └── zcore 0.1.0\n    │   │   ├── zcore 0.1.0\n    │   │   └── linux-syscall 0.1.0\n    │   │       └── zcore-loader 0.1.0\n    │   └── kernel-hal 0.1.0\n    │       ├── zircon-syscall 0.1.0\n    │       │   └── zcore-loader 0.1.0\n    │       ├── zircon-object 0.1.0\n    │       │   ├── zircon-syscall 0.1.0\n    │       │   ├── zcore-loader 0.1.0\n    │       │   ├── zcore 0.1.0\n    │       │   ├── linux-syscall 0.1.0\n    │       │   └── linux-object 0.1.0\n    │       ├── zcore-loader 0.1.0\n    │       ├── zcore 0.1.0\n    │       ├── linux-syscall 0.1.0\n    │       └── linux-object 0.1.0\n    ├── zcore 0.1.0\n    └── kernel-hal 0.1.0\n\nCrate:     futures-util\nVersion:   0.3.30\nWarning:   yanked\nDependency tree:\nfutures-util 0.3.30\n└── futures 0.3.30\n    ├── zircon-syscall 0.1.0\n    │   └── zcore-loader 0.1.0\n    │       └── zcore 0.1.0\n    ├── zircon-object 0.1.0\n    │   ├── zircon-syscall 0.1.0\n    │   ├── zcore-loader 0.1.0\n    │   ├── zcore 0.1.0\n    │   ├── linux-syscall 0.1.0\n    │   │   └── zcore-loader 0.1.0\n    │   └── linux-object 0.1.0\n    │       ├── zcore-loader 0.1.0\n    │       ├── zcore 0.1.0\n    │       └── linux-syscall 0.1.0\n    └── linux-syscall 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 664,\n    \"last-commit\": \"f3460e5ed91658ab94fa41908cfa44991f9f4f02\",\n    \"last-updated\": \"2024-11-01T08:31:51-04:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 224\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.2\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"7059fff8937831a9ae6f0fe4d658ffabf58f2ca96aa9dec1c889f936f705f216\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      },\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"futures-util\",\n          \"version\": \"0.3.30\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48\",\n          \"dependencies\": [\n            {\n              \"name\": \"futures-core\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-macro\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-sink\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-task\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-project-lite\",\n              \"version\": \"0.2.14\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-utils\",\n              \"version\": \"0.1.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"
    },
    {
      "cmd_idx": 66,
      "file": "Cargo.lock",
      "kind": "Audit",
      "raw": "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 664 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (224 crate dependencies)\nCrate:     critical-section\nVersion:   1.1.2\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.2\n└── riscv 0.10.1\n    ├── zcore-drivers 0.1.0\n    │   ├── linux-object 0.1.0\n    │   │   ├── zcore-loader 0.1.0\n    │   │   │   └── zcore 0.1.0\n    │   │   ├── zcore 0.1.0\n    │   │   └── linux-syscall 0.1.0\n    │   │       └── zcore-loader 0.1.0\n    │   └── kernel-hal 0.1.0\n    │       ├── zircon-syscall 0.1.0\n    │       │   └── zcore-loader 0.1.0\n    │       ├── zircon-object 0.1.0\n    │       │   ├── zircon-syscall 0.1.0\n    │       │   ├── zcore-loader 0.1.0\n    │       │   ├── zcore 0.1.0\n    │       │   ├── linux-syscall 0.1.0\n    │       │   └── linux-object 0.1.0\n    │       ├── zcore-loader 0.1.0\n    │       ├── zcore 0.1.0\n    │       ├── linux-syscall 0.1.0\n    │       └── linux-object 0.1.0\n    ├── zcore 0.1.0\n    └── kernel-hal 0.1.0\n\nCrate:     futures-util\nVersion:   0.3.30\nWarning:   yanked\nDependency tree:\nfutures-util 0.3.30\n└── futures 0.3.30\n    ├── zircon-syscall 0.1.0\n    │   └── zcore-loader 0.1.0\n    │       └── zcore 0.1.0\n    ├── zircon-object 0.1.0\n    │   ├── zircon-syscall 0.1.0\n    │   ├── zcore-loader 0.1.0\n    │   ├── zcore 0.1.0\n    │   ├── linux-syscall 0.1.0\n    │   │   └── zcore-loader 0.1.0\n    │   └── linux-object 0.1.0\n    │       ├── zcore-loader 0.1.0\n    │       ├── zcore 0.1.0\n    │       └── linux-syscall 0.1.0\n    └── linux-syscall 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 664,\n    \"last-commit\": \"f3460e5ed91658ab94fa41908cfa44991f9f4f02\",\n    \"last-updated\": \"2024-11-01T08:31:51-04:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 224\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.2\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"7059fff8937831a9ae6f0fe4d658ffabf58f2ca96aa9dec1c889f936f705f216\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      },\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"futures-util\",\n          \"version\": \"0.3.30\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48\",\n          \"dependencies\": [\n            {\n              \"name\": \"futures-core\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-macro\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-sink\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-task\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-project-lite\",\n              \"version\": \"0.2.14\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-utils\",\n              \"version\": \"0.1.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"
    },
    {
      "cmd_idx": 69,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-02T00:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T00:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 70,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-02T00:40:49Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T00:40:49Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 77,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=zcore, checker=Clippy\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-musl\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zCore\n// cmd=cargo clippy --target x86_64-unknown-linux-musl --no-deps --message-format=json\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n    Checking log v0.4.21\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking raw-cpuid v10.7.0\n    Checking volatile v0.4.6\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n    Checking x86_64 v0.14.12\n    Checking volatile v0.3.0\n    Checking spin v0.9.8\n    Checking rsdp v2.0.1\n    Checking futures-sink v0.3.30\n    Checking lazy_static v1.5.0\n    Checking byteorder v1.5.0\n    Checking bit v0.1.1\n    Checking futures-core v0.3.30\n    Checking managed v0.8.0\n   Compiling trapframe v0.9.0\n   Compiling x86 v0.46.0\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking acpi v4.1.1\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking x2apic v0.4.3\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking numeric-enum-macro v0.2.0\n    Checking futures-task v0.3.30\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking git-version v0.3.9\n    Checking futures-util v0.3.30\n    Checking futures-channel v0.3.30\n    Checking futures-io v0.3.30\n    Checking ahash v0.4.8\n    Checking uniset v0.2.0 (https://github.com/pleasewhy/uniset?rev=40edbd7506979daa1d49f935b568873a6a21c5c0#40edbd75)\n    Checking zero v0.1.3\n    Checking xmas-elf v0.7.0\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n    Checking unicycle v0.7.1 (https://github.com/pleasewhy/unicycle?rev=904f1c061d4784a5642e092d308cf523a9270c6e#904f1c06)\n    Checking hashbrown v0.9.1\n    Checking region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\n    Checking kernel-hal v0.1.0 (https://github.com/kern-crates/zcore-kernel-hal.git?rev=eae409f2#eae409f2)\n    Checking woke v0.0.2\n    Checking downcast-rs v1.2.1\n    Checking bit-iter v1.2.0\n   Compiling zcore v0.1.0 (/home/runner/check/batch_12/kern-crates/zCore)\n    Checking customizable-buddy v0.0.3\n    Checking executor v0.1.0 (https://github.com/DeathWish5/PreemptiveScheduler?rev=e8cd353#e8cd3531)\nerror: could not compile `kernel-hal` due to 16 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 78,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=zcore, checker=Lockbud\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-uefi\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zCore\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-uefi\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling log v0.4.21\n   Compiling lock_api v0.4.12\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `x86_64-unknown-uefi` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-uefi`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bit_field` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 79,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=zcore, checker=Lockbud\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zCore\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n   Compiling autocfg v1.3.0\n   Compiling unicode-ident v1.0.12\n   Compiling log v0.4.21\n   Compiling rustversion v1.0.17\n[2024-11-02T00:40:49Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T00:40:49Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling scopeguard v1.2.0\n   Compiling raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling quote v1.0.36\n   Compiling volatile v0.4.6\n   Compiling bitflags v2.6.0\n   Compiling syn v2.0.68\n   Compiling spin v0.9.8\n   Compiling x86_64 v0.14.12\n   Compiling paste v1.0.15\n   Compiling volatile v0.3.0\n   Compiling cfg-if v1.0.0\n   Compiling lazy_static v1.5.0\n   Compiling rsdp v2.0.1\n   Compiling futures-core v0.3.30\n   Compiling bit v0.1.1\n   Compiling futures-sink v0.3.30\n   Compiling managed v0.8.0\n   Compiling trapframe v0.9.0\n   Compiling x86 v0.46.0\n   Compiling byteorder v1.5.0\n   Compiling acpi v4.1.1\n   Compiling smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n   Compiling lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n   Compiling x2apic v0.4.3\n   Compiling virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n   Compiling isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n   Compiling pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n   Compiling numeric-enum-macro v0.2.0\n   Compiling futures-task v0.3.30\n   Compiling futures-channel v0.3.30\n   Compiling uniset v0.2.0 (https://github.com/pleasewhy/uniset?rev=40edbd7506979daa1d49f935b568873a6a21c5c0#40edbd75)\n   Compiling zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n   Compiling zero v0.1.3\n   Compiling ahash v0.4.8\n   Compiling futures-io v0.3.30\n   Compiling hashbrown v0.9.1\n   Compiling xmas-elf v0.7.0\n   Compiling unicycle v0.7.1 (https://github.com/pleasewhy/unicycle?rev=904f1c061d4784a5642e092d308cf523a9270c6e#904f1c06)\n   Compiling woke v0.0.2\n   Compiling region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\n   Compiling bit-iter v1.2.0\nerror[E0635]: unknown feature `btree_drain_filter`\n --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:2:12\n  |\n2 | #![feature(btree_drain_filter)]\n  |            ^^^^^^^^^^^^^^^^^^\n\n   Compiling downcast-rs v1.2.1\nerror[E0599]: no method named `drain_filter` found for struct `alloc::collections::BTreeSet` in the current scope\n   --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:120:14\n    |\n119 | /         self.regions\n120 | |             .drain_filter(|r| {\n    | |             -^^^^^^^^^^^^ method not found in `BTreeSet<Region>`\n    | |_____________|\n    |\n\nSome errors have detailed explanations: E0599, E0635.\nFor more information about an error, try `rustc --explain E0599`.\nerror: could not compile `region-alloc` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 80,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=zcore, checker=Lockbud\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-musl\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zCore\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-musl\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling log v0.4.21\n   Compiling lock_api v0.4.12\n   Compiling scopeguard v1.2.0\n   Compiling raw-cpuid v10.7.0\n[2024-11-02T00:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T00:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling volatile v0.4.6\n   Compiling bitflags v2.6.0\n   Compiling volatile v0.3.0\n   Compiling cfg-if v1.0.0\n   Compiling rsdp v2.0.1\n   Compiling x86_64 v0.14.12\n   Compiling spin v0.9.8\n   Compiling futures-sink v0.3.30\n   Compiling bit v0.1.1\n   Compiling byteorder v1.5.0\n   Compiling lazy_static v1.5.0\n   Compiling futures-core v0.3.30\n   Compiling managed v0.8.0\n   Compiling trapframe v0.9.0\n   Compiling isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n   Compiling smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n   Compiling x86 v0.46.0\n   Compiling acpi v4.1.1\n   Compiling virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n   Compiling git-version-macro v0.3.9\n   Compiling lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n   Compiling x2apic v0.4.3\n   Compiling futures-macro v0.3.30\n   Compiling pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n   Compiling device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n   Compiling numeric-enum-macro v0.2.0\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-task v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling git-version v0.3.9\n   Compiling zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n   Compiling futures-util v0.3.30\n   Compiling futures-channel v0.3.30\n   Compiling zero v0.1.3\n   Compiling ahash v0.4.8\n   Compiling futures-io v0.3.30\n   Compiling uniset v0.2.0 (https://github.com/pleasewhy/uniset?rev=40edbd7506979daa1d49f935b568873a6a21c5c0#40edbd75)\n   Compiling hashbrown v0.9.1\n   Compiling unicycle v0.7.1 (https://github.com/pleasewhy/unicycle?rev=904f1c061d4784a5642e092d308cf523a9270c6e#904f1c06)\n   Compiling xmas-elf v0.7.0\n   Compiling kernel-hal v0.1.0 (https://github.com/kern-crates/zcore-kernel-hal.git?rev=eae409f2#eae409f2)\n   Compiling region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\nerror[E0635]: unknown feature `btree_drain_filter`\n --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:2:12\n  |\n2 | #![feature(btree_drain_filter)]\n  |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `drain_filter` found for struct `alloc::collections::BTreeSet` in the current scope\n   --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:120:14\n    |\n119 | /         self.regions\n120 | |             .drain_filter(|r| {\n    | |             -^^^^^^^^^^^^ method not found in `BTreeSet<Region>`\n    | |_____________|\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `x2apic`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/drivers.rs:36:9\n   |\n36 |     use x2apic::lapic::{TimerDivide, TimerMode};\n   |         ^^^^^^ use of undeclared crate or module `x2apic`\n\nSome errors have detailed explanations: E0599, E0635.\nFor more information about an error, try `rustc --explain E0599`.\nerror[E0433]: failed to resolve: use of undeclared crate or module `uefi`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/config.rs:3:5\n  |\n3 | use uefi::proto::console::gop::ModeInfo;\n  |     ^^^^ use of undeclared crate or module `uefi`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `uefi`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/config.rs:4:5\n  |\n4 | use uefi::table::boot::MemoryDescriptor;\n  |     ^^^^ use of undeclared crate or module `uefi`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `uefi`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mem.rs:5:5\n  |\n5 | use uefi::table::boot::MemoryType;\n  |     ^^^^ use of undeclared crate or module `uefi`\n\nerror[E0432]: unresolved import `trapframe::TrapFrame`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/trap.rs:2:5\n  |\n2 | use trapframe::TrapFrame;\n  |     ^^^^^^^^^^^^^^^^^^^^ no `TrapFrame` in the root\n\nerror[E0432]: unresolved import `naive_timer`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs:7:5\n  |\n7 | use naive_timer::Timer;\n  |     ^^^^^^^^^^^ use of undeclared crate or module `naive_timer`\n\nerror[E0432]: unresolved import `raw_cpuid`\n --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/cpu.rs:3:5\n  |\n3 | use raw_cpuid::CpuId;\n  |     ^^^^^^^^^ use of undeclared crate or module `raw_cpuid`\n\nerror: could not compile `region-alloc` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0425]: cannot find function `init` in crate `trapframe`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/boot.rs:24:33\n   |\n24 |             unsafe { trapframe::init() };\n   |                                 ^^^^ not found in `trapframe`\n   |\nhelp: consider importing one of these items\n   |\n3  + use crate::imp::arch::timer::init;\n   |\n3  + use crate::net::init;\n   |\n3  + use zcore_drivers::bus::pci::init;\n   |\n3  + use zcore_drivers::net::e1000::init;\n   |\nhelp: if you import `init`, refer to it directly\n   |\n24 -             unsafe { trapframe::init() };\n24 +             unsafe { init() };\n   |\n\nerror[E0425]: cannot find function `init` in crate `trapframe`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/boot.rs:31:33\n   |\n31 |             unsafe { trapframe::init() };\n   |                                 ^^^^ not found in `trapframe`\n   |\nhelp: consider importing one of these items\n   |\n3  + use crate::imp::arch::timer::init;\n   |\n3  + use crate::net::init;\n   |\n3  + use zcore_drivers::bus::pci::init;\n   |\n3  + use zcore_drivers::net::e1000::init;\n   |\nhelp: if you import `init`, refer to it directly\n   |\n31 -             unsafe { trapframe::init() };\n31 +             unsafe { init() };\n   |\n\nerror[E0599]: no method named `run` found for struct `trapframe::UserContext` in the current scope\n   --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/common/context.rs:232:24\n    |\n232 |                 self.0.run()\n    |                        ^^^ method not found in `UserContext`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `executor`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/trap.rs:41:17\n   |\n41 |                 executor::handle_timeout();\n   |                 ^^^^^^^^ use of undeclared crate or module `executor`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `x86_smpboot`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/arch/x86_64/mod.rs:51:9\n   |\n51 |         x86_smpboot::start_application_processors(\n   |         ^^^^^^^^^^^ use of undeclared crate or module `x86_smpboot`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `executor`\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/thread.rs:17:13\n   |\n17 |             executor::spawn(future);\n   |             ^^^^^^^^ use of undeclared crate or module `executor`\n\nerror[E0599]: no method named `lock` found for struct `imp::timer::NAIVE_TIMER` in the current scope\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs:28:25\n   |\n12 | / lazy_static::lazy_static! {\n13 | |     static ref NAIVE_TIMER:Mutex<Timer> = Mutex::new(Timer::default());\n14 | | }\n   | |_- method `lock` not found for this struct\n...\n28 |               NAIVE_TIMER.lock().add(deadline, callback);\n   |                           ^^^^ method not found in `NAIVE_TIMER`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `lock`, perhaps you need to implement it:\n           candidate #1: `lock_api::mutex::RawMutex`\n\nerror[E0599]: no method named `lock` found for struct `imp::timer::NAIVE_TIMER` in the current scope\n  --> /home/runner/.cargo/git/checkouts/zcore-kernel-hal-f36b832dc29d2d9b/eae409f/src/bare/timer.rs:32:25\n   |\n12 | / lazy_static::lazy_static! {\n13 | |     static ref NAIVE_TIMER:Mutex<Timer> = Mutex::new(Timer::default());\n14 | | }\n   | |_- method `lock` not found for this struct\n...\n32 |               NAIVE_TIMER.lock().expire(timer_now());\n   |                           ^^^^ method not found in `NAIVE_TIMER`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `lock`, perhaps you need to implement it:\n           candidate #1: `lock_api::mutex::RawMutex`\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `kernel-hal` (lib) due to 15 previous errors\n"
    },
    {
      "cmd_idx": 81,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=zcore, checker=Mirai\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zCore\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n   Compiling autocfg v1.3.0\n   Compiling unicode-ident v1.0.12\n    Checking log v0.4.21\n   Compiling rustversion v1.0.17\n    Checking scopeguard v1.2.0\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_12/kern-crates/zCore/target/debug/build/rustversion-cb7b2b82d44a199d/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 82,
      "file": "(virtual) rap",
      "kind": "Cargo",
      "raw": "// pkg_name=zcore, checker=Rap\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zCore\n// cmd=cargo +nightly-2024-06-30 rap -F -M\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling autocfg v1.3.0\n   Compiling proc-macro2 v1.0.86\n   Compiling rustversion v1.0.17\n   Compiling unicode-ident v1.0.12\n    Checking log v0.4.21\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking raw-cpuid v10.7.0\n   Compiling quote v1.0.36\n    Checking bitflags v2.6.0\n    Checking volatile v0.4.6\n   Compiling syn v2.0.68\n    Checking spin v0.9.8\n    Checking x86_64 v0.14.12\n   Compiling paste v1.0.15\n    Checking volatile v0.3.0\n    Checking cfg-if v1.0.0\n    Checking lazy_static v1.5.0\n    Checking rsdp v2.0.1\n    Checking futures-core v0.3.30\n    Checking futures-sink v0.3.30\n    Checking byteorder v1.5.0\n    Checking managed v0.8.0\n   Compiling x86 v0.46.0\n   Compiling trapframe v0.9.0\n    Checking bit v0.1.1\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking x2apic v0.4.3\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking acpi v4.1.1\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n    Checking numeric-enum-macro v0.2.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-task v0.3.30\n    Checking pin-utils v0.1.0\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking futures-channel v0.3.30\n    Checking ahash v0.4.8\n    Checking futures-io v0.3.30\n    Checking uniset v0.2.0 (https://github.com/pleasewhy/uniset?rev=40edbd7506979daa1d49f935b568873a6a21c5c0#40edbd75)\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n    Checking zero v0.1.3\n    Checking xmas-elf v0.7.0\n    Checking unicycle v0.7.1 (https://github.com/pleasewhy/unicycle?rev=904f1c061d4784a5642e092d308cf523a9270c6e#904f1c06)\n    Checking hashbrown v0.9.1\n    Checking bit-iter v1.2.0\n    Checking woke v0.0.2\n    Checking downcast-rs v1.2.1\n    Checking region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\n    Checking executor v0.1.0 (https://github.com/DeathWish5/PreemptiveScheduler?rev=e8cd353#e8cd3531)\nerror[E0635]: unknown feature `btree_drain_filter`\n --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:2:12\n  |\n2 | #![feature(btree_drain_filter)]\n  |            ^^^^^^^^^^^^^^^^^^\n\n   Compiling zcore v0.1.0 (/home/runner/check/batch_12/kern-crates/zCore)\nerror[E0599]: no method named `drain_filter` found for struct `BTreeSet` in the current scope\n   --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:120:14\n    |\n119 | /         self.regions\n120 | |             .drain_filter(|r| {\n    | |             -^^^^^^^^^^^^ method not found in `BTreeSet<Region>`\n    | |_____________|\n    |\n\nSome errors have detailed explanations: E0599, E0635.\nFor more information about an error, try `rustc --explain E0599`.\nerror[E0557]: feature has been removed\n --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/lib.rs:4:12\n  |\n4 | #![feature(generators, generator_trait)]\n  |            ^^^^^^^^^^ feature has been removed\n  |\n  = note: renamed to `coroutines`\n\nerror: could not compile `region-alloc` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0432]: unresolved imports `core::ops::Generator`, `core::ops::GeneratorState`\n --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs:6:17\n  |\n6 | use core::ops::{Generator, GeneratorState};\n  |                 ^^^^^^^^^  ^^^^^^^^^^^^^^ no `GeneratorState` in `ops`\n  |                 |\n  |                 no `Generator` in `ops`\n\nerror[E0658]: yield syntax is experimental\n   --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs:227:33\n    |\n227 | ...                   yield found_key;\n    |                       ^^^^^^^^^^^^^^^\n    |\n    = note: see issue #43122 <https://github.com/rust-lang/rust/issues/43122> for more information\n    = help: add `#![feature(coroutines)]` to the crate attributes to enable\n    = note: this compiler was built on 2024-06-29; consider upgrading it if it is out of date\n\nerror[E0658]: yield syntax is experimental\n   --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs:244:17\n    |\n244 |                 yield None;\n    |                 ^^^^^^^^^^\n    |\n    = note: see issue #43122 <https://github.com/rust-lang/rust/issues/43122> for more information\n    = help: add `#![feature(coroutines)]` to the crate attributes to enable\n    = note: this compiler was built on 2024-06-29; consider upgrading it if it is out of date\n\nerror: `yield` can only be used in `#[coroutine]` closures, or `gen` blocks\n   --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/task_collection.rs:227:33\n    |\n227 | ...                   yield found_key;\n    |                       ^^^^^^^^^^^^^^^\n    |\nhelp: use `#[coroutine]` to make this closure a coroutine\n    |\n212 |         #[coroutine] static move || {\n    |         ++++++++++++\n\nerror[E0635]: unknown feature `generator_trait`\n --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/lib.rs:4:24\n  |\n4 | #![feature(generators, generator_trait)]\n  |                        ^^^^^^^^^^^^^^^\n\nerror[E0635]: unknown feature `atomic_mut_ptr`\n --> /home/runner/.cargo/git/checkouts/preemptivescheduler-e01deaea16659384/e8cd353/src/lib.rs:6:12\n  |\n6 | #![feature(atomic_mut_ptr)]\n  |            ^^^^^^^^^^^^^^\n\nSome errors have detailed explanations: E0432, E0557, E0635, E0658.\nFor more information about an error, try `rustc --explain E0432`.\nerror: could not compile `executor` (lib) due to 7 previous errors\n00:41:10|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 83,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=zcore, checker=Clippy\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zCore\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling lock_api v0.4.12\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.12\n    Checking log v0.4.21\n   Compiling rustversion v1.0.17\n    Checking scopeguard v1.2.0\n    Checking raw-cpuid v10.7.0\n    Checking volatile v0.4.6\n   Compiling quote v1.0.36\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.68\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n    Checking volatile v0.3.0\n    Checking cfg-if v1.0.0\n    Checking lazy_static v1.5.0\n    Checking rsdp v2.0.1\n    Checking managed v0.8.0\n    Checking x86_64 v0.14.12\n    Checking byteorder v1.5.0\n   Compiling trapframe v0.9.0\n    Checking futures-sink v0.3.30\n   Compiling x86 v0.46.0\n    Checking bit v0.1.1\n    Checking futures-core v0.3.30\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking acpi v4.1.1\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking x2apic v0.4.3\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n    Checking futures-task v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking pin-utils v0.1.0\n    Checking numeric-enum-macro v0.2.0\n    Checking futures-channel v0.3.30\n    Checking ahash v0.4.8\n    Checking uniset v0.2.0 (https://github.com/pleasewhy/uniset?rev=40edbd7506979daa1d49f935b568873a6a21c5c0#40edbd75)\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n    Checking futures-io v0.3.30\n    Checking zero v0.1.3\n    Checking xmas-elf v0.7.0\n    Checking unicycle v0.7.1 (https://github.com/pleasewhy/unicycle?rev=904f1c061d4784a5642e092d308cf523a9270c6e#904f1c06)\n    Checking hashbrown v0.9.1\n    Checking downcast-rs v1.2.1\n    Checking region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\n    Checking bit-iter v1.2.0\n    Checking woke v0.0.2\n   Compiling zcore v0.1.0 (/home/runner/check/batch_12/kern-crates/zCore)\n    Checking customizable-buddy v0.0.3\n    Checking executor v0.1.0 (https://github.com/DeathWish5/PreemptiveScheduler?rev=e8cd353#e8cd3531)\n   Compiling git-version-macro v0.3.9\n   Compiling futures-macro v0.3.30\n    Checking git-version v0.3.9\n    Checking kernel-hal v0.1.0 (https://github.com/kern-crates/zcore-kernel-hal.git?rev=eae409f2#eae409f2)\n    Checking futures-util v0.3.30\nerror: could not compile `kernel-hal` due to 16 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 84,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=zcore, checker=Clippy\n// toolchain=nightly-2022-10-27, target=x86_64-unknown-uefi\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zCore\n// cmd=cargo clippy --target x86_64-unknown-uefi --no-deps --message-format=json\n Downloading crates ...\n  Downloaded bit_field v0.10.2\n  Downloaded futures-io v0.3.30\n  Downloaded futures-sink v0.3.30\n  Downloaded pin-utils v0.1.0\n  Downloaded numeric-enum-macro v0.2.0\n  Downloaded hashbrown v0.9.1\n  Downloaded woke v0.0.2\n  Downloaded autocfg v1.3.0\n  Downloaded quote v1.0.36\n  Downloaded managed v0.8.0\n  Downloaded unicode-ident v1.0.12\n  Downloaded futures-util v0.3.30\n  Downloaded customizable-buddy v0.0.3\n  Downloaded rsdp v2.0.1\n  Downloaded bitflags v2.6.0\n  Downloaded spin v0.9.8\n  Downloaded xmas-elf v0.7.0\n  Downloaded futures-channel v0.3.30\n  Downloaded git-version-macro v0.3.9\n  Downloaded bit-iter v1.2.0\n  Downloaded bit v0.1.1\n  Downloaded git-version v0.3.9\n  Downloaded zero v0.1.3\n  Downloaded volatile v0.4.6\n  Downloaded rustversion v1.0.17\n  Downloaded trapframe v0.9.0\n  Downloaded x2apic v0.4.3\n  Downloaded scopeguard v1.2.0\n  Downloaded paste v1.0.15\n  Downloaded futures-task v0.3.30\n  Downloaded volatile v0.3.0\n  Downloaded cfg-if v1.0.0\n  Downloaded downcast-rs v1.2.1\n  Downloaded bitflags v1.3.2\n  Downloaded futures-macro v0.3.30\n  Downloaded futures-core v0.3.30\n  Downloaded byteorder v1.5.0\n  Downloaded acpi v4.1.1\n  Downloaded lock_api v0.4.12\n  Downloaded pin-project-lite v0.2.14\n  Downloaded lazy_static v1.5.0\n  Downloaded ahash v0.4.8\n  Downloaded futures v0.3.30\n  Downloaded proc-macro2 v1.0.86\n  Downloaded x86_64 v0.14.12\n  Downloaded raw-cpuid v10.7.0\n  Downloaded syn v2.0.68\n  Downloaded x86 v0.46.0\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n   Compiling autocfg v1.3.0\nerror: could not compile `bitflags` due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `bit_field` due to 16 previous errors\n"
    },
    {
      "cmd_idx": 89,
      "file": "src/bin/hello.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  |\n  = note: the `x86_64-unknown-uefi` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-uefi`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 89,
      "file": "src/bin/hello.rs",
      "kind": "Clippy(Error)",
      "raw": "error: cannot find macro `println` in this scope\n --> src/bin/hello.rs:2:5\n  |\n2 |     println!(\"Hello, zCore!\");\n  |     ^^^^^^^\n\n"
    },
    {
      "cmd_idx": 89,
      "file": "unkonwn-but-maybe-important",
      "kind": "Clippy(Error)",
      "raw": "error: requires `sized` lang_item\n\n"
    },
    {
      "cmd_idx": 101,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=zircon-user, checker=Clippy\n// toolchain=nightly-2022-01-20, target=x86_64-unknown-uefi\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zCore/zcore-zircon-user\n// cmd=cargo clippy --target x86_64-unknown-uefi --no-deps --message-format=json\n    Checking zircon-user v0.1.0 (/home/runner/check/batch_12/kern-crates/zCore/zcore-zircon-user)\nerror: could not compile `zircon-user` due to 4 previous errors\n"
    },
    {
      "cmd_idx": 102,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=zircon-user, checker=Lockbud\n// toolchain=nightly-2022-01-20, target=x86_64-unknown-uefi\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zCore/zcore-zircon-user\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-uefi\nwarning: `/home/runner/check/batch_12/kern-crates/zCore/zcore-zircon-user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/batch_12/kern-crates/zCore/zcore-zircon-user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\n   Compiling zircon-user v0.1.0 (/home/runner/check/batch_12/kern-crates/zCore/zcore-zircon-user)\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `x86_64-unknown-uefi` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-unknown-uefi`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `zircon-user` (bin \"hello\") due to 1 previous error\n"
    },
    {
      "cmd_idx": 103,
      "file": "(virtual) rap",
      "kind": "Cargo",
      "raw": "// pkg_name=zircon-user, checker=Rap\n// toolchain=nightly-2022-01-20, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zCore/zcore-zircon-user\n// cmd=cargo +nightly-2024-06-30 rap -F -M\nwarning: `/home/runner/check/batch_12/kern-crates/zCore/zcore-zircon-user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/batch_12/kern-crates/zCore/zcore-zircon-user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\n    Checking zircon-user v0.1.0 (/home/runner/check/batch_12/kern-crates/zCore/zcore-zircon-user)\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `x86_64-fuchsia` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-fuchsia`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `zircon-user` (bin \"hello\") due to 1 previous error\n00:41:10|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 105,
      "file": "src/bus/pci.rs",
      "kind": "Clippy(Error)",
      "raw": "error: unexpected `cfg` condition value: `board_malta`\n  --> src/bus/pci.rs:56:7\n   |\n56 | #[cfg(feature = \"board_malta\")]\n   |       ^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `feature` are: `allwinner`, `async-std`, `board-qemu`, `d1-pac`, `fu740`, `graphic`, `loopback`, `mock`, `no-pci`, `rcore-console`, `sdl2`, `virtio`, and `virtio-drivers`\n   = help: consider adding `board_malta` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\nnote: the lint level is defined here\n  --> src/lib.rs:4:9\n   |\n4  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(unexpected_cfgs)]` implied by `#[deny(warnings)]`\n\n"
    },
    {
      "cmd_idx": 105,
      "file": "src/input/mouse.rs",
      "kind": "Clippy(Error)",
      "raw": "error: clamp-like pattern without using clamp function\n  --> src/input/mouse.rs:38:18\n   |\n38 |         let dx = self.dx.max(-127).min(127);\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `self.dx.clamp(-127, 127)`\n   |\n   = note: clamp will panic if max < min\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_clamp\n   = note: `#[deny(clippy::manual_clamp)]` implied by `#[deny(warnings)]`\n\n"
    },
    {
      "cmd_idx": 105,
      "file": "src/input/mouse.rs",
      "kind": "Clippy(Error)",
      "raw": "error: clamp-like pattern without using clamp function\n  --> src/input/mouse.rs:39:18\n   |\n39 |         let dy = self.dy.max(-127).min(127);\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `self.dy.clamp(-127, 127)`\n   |\n   = note: clamp will panic if max < min\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_clamp\n\n"
    },
    {
      "cmd_idx": 105,
      "file": "src/irq/x86_apic/ioapic.rs",
      "kind": "Clippy(Error)",
      "raw": "error: the following explicit lifetimes could be elided: 'a\n   --> src/irq/x86_apic/ioapic.rs:185:14\n    |\n185 |         impl<'a> fmt::Debug for RedirTable<'a> {\n    |              ^^                            ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[deny(clippy::needless_lifetimes)]` implied by `#[deny(warnings)]`\nhelp: elide the lifetimes\n    |\n185 -         impl<'a> fmt::Debug for RedirTable<'a> {\n185 +         impl fmt::Debug for RedirTable<'_> {\n    |\n\n"
    },
    {
      "cmd_idx": 105,
      "file": "src/irq/x86_apic/ioapic.rs",
      "kind": "Clippy(Error)",
      "raw": "error: the following explicit lifetimes could be elided: 'a\n   --> src/irq/x86_apic/ioapic.rs:185:14\n    |\n185 |         impl<'a> fmt::Debug for RedirTable<'a> {\n    |              ^^                            ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[deny(clippy::needless_lifetimes)]` implied by `#[deny(warnings)]`\nhelp: elide the lifetimes\n    |\n185 -         impl<'a> fmt::Debug for RedirTable<'a> {\n185 +         impl fmt::Debug for RedirTable<'_> {\n    |\n\n"
    },
    {
      "cmd_idx": 105,
      "file": "src/nvme/interface.rs",
      "kind": "Clippy(Error)",
      "raw": "error: transmute used without annotations\n   --> src/nvme/interface.rs:108:46\n    |\n108 |         let common_cmd = unsafe { core::mem::transmute(cmd) };\n    |                                              ^^^^^^^^^ help: consider adding missing annotations: `transmute::<nvme::interface::NvmeIdentify, nvme::interface::NvmeCommonCommand>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n    = note: `#[deny(clippy::missing_transmute_annotations)]` implied by `#[deny(warnings)]`\n\n"
    },
    {
      "cmd_idx": 105,
      "file": "src/nvme/interface.rs",
      "kind": "Clippy(Error)",
      "raw": "error: transmute used without annotations\n   --> src/nvme/interface.rs:174:46\n    |\n174 |         let common_cmd = unsafe { core::mem::transmute(cmd) };\n    |                                              ^^^^^^^^^ help: consider adding missing annotations: `transmute::<nvme::interface::NvmeCreateCq, nvme::interface::NvmeCommonCommand>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n"
    },
    {
      "cmd_idx": 105,
      "file": "src/nvme/interface.rs",
      "kind": "Clippy(Error)",
      "raw": "error: transmute used without annotations\n   --> src/nvme/interface.rs:207:46\n    |\n207 |         let common_cmd = unsafe { core::mem::transmute(cmd) };\n    |                                              ^^^^^^^^^ help: consider adding missing annotations: `transmute::<nvme::interface::NvmeCreateSq, nvme::interface::NvmeCommonCommand>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n"
    },
    {
      "cmd_idx": 105,
      "file": "src/nvme/interface.rs",
      "kind": "Clippy(Error)",
      "raw": "error: transmute used without annotations\n   --> src/nvme/interface.rs:268:46\n    |\n268 |         let common_cmd = unsafe { core::mem::transmute(cmd) };\n    |                                              ^^^^^^^^^ help: consider adding missing annotations: `transmute::<nvme::interface::NvmeRWCommand, nvme::interface::NvmeCommonCommand>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n"
    },
    {
      "cmd_idx": 105,
      "file": "src/nvme/interface.rs",
      "kind": "Clippy(Error)",
      "raw": "error: transmute used without annotations\n   --> src/nvme/interface.rs:321:46\n    |\n321 |         let common_cmd = unsafe { core::mem::transmute(cmd) };\n    |                                              ^^^^^^^^^ help: consider adding missing annotations: `transmute::<nvme::interface::NvmeRWCommand, nvme::interface::NvmeCommonCommand>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n"
    },
    {
      "cmd_idx": 105,
      "file": "src/scheme/display.rs",
      "kind": "Clippy(Error)",
      "raw": "error: the following explicit lifetimes could be elided: 'a\n   --> src/scheme/display.rs:141:6\n    |\n141 | impl<'a> core::ops::Deref for FrameBuffer<'a> {\n    |      ^^                                   ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n141 - impl<'a> core::ops::Deref for FrameBuffer<'a> {\n141 + impl core::ops::Deref for FrameBuffer<'_> {\n    |\n\n"
    },
    {
      "cmd_idx": 105,
      "file": "src/scheme/display.rs",
      "kind": "Clippy(Error)",
      "raw": "error: the following explicit lifetimes could be elided: 'a\n   --> src/scheme/display.rs:141:6\n    |\n141 | impl<'a> core::ops::Deref for FrameBuffer<'a> {\n    |      ^^                                   ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n141 - impl<'a> core::ops::Deref for FrameBuffer<'a> {\n141 + impl core::ops::Deref for FrameBuffer<'_> {\n    |\n\n"
    },
    {
      "cmd_idx": 105,
      "file": "src/scheme/display.rs",
      "kind": "Clippy(Error)",
      "raw": "error: the following explicit lifetimes could be elided: 'a\n   --> src/scheme/display.rs:148:6\n    |\n148 | impl<'a> core::ops::DerefMut for FrameBuffer<'a> {\n    |      ^^                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n148 - impl<'a> core::ops::DerefMut for FrameBuffer<'a> {\n148 + impl core::ops::DerefMut for FrameBuffer<'_> {\n    |\n\n"
    },
    {
      "cmd_idx": 105,
      "file": "src/scheme/display.rs",
      "kind": "Clippy(Error)",
      "raw": "error: the following explicit lifetimes could be elided: 'a\n   --> src/scheme/display.rs:148:6\n    |\n148 | impl<'a> core::ops::DerefMut for FrameBuffer<'a> {\n    |      ^^                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n148 - impl<'a> core::ops::DerefMut for FrameBuffer<'a> {\n148 + impl core::ops::DerefMut for FrameBuffer<'_> {\n    |\n\n"
    },
    {
      "cmd_idx": 105,
      "file": "src/utils/devicetree.rs",
      "kind": "Clippy(Error)",
      "raw": "error: parameter is only used in recursion\n  --> src/utils/devicetree.rs:47:23\n   |\n47 |     fn walk_inner<F>(&self, node: &Node, props: InheritProps, device_node_op: &mut F)\n   |                       ^^^^\n   |\nnote: parameter used here\n  --> src/utils/devicetree.rs:64:13\n   |\n64 |             self.walk_inner(child, props, device_node_op);\n   |             ^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\n   = note: `#[deny(clippy::only_used_in_recursion)]` implied by `#[deny(warnings)]`\n\n"
    },
    {
      "cmd_idx": 105,
      "file": "src/irq/x86_apic/lapic.rs",
      "kind": "Clippy(Error)",
      "raw": "error: creating a mutable reference to mutable static is discouraged\n  --> src/irq/x86_apic/lapic.rs:16:9\n   |\n16 | /         LOCAL_APIC\n17 | |             .as_mut()\n   | |_____________________^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\n\n"
    },
    {
      "cmd_idx": 107,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-02T00:41:20Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T00:41:20Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 112,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=zcore-drivers, checker=Clippy\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zcore-drivers\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking bit_field v0.10.2\n   Compiling autocfg v1.4.0\n    Checking bitflags v1.3.2\n    Checking log v0.4.22\n   Compiling rustversion v1.0.18\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking bitflags v2.6.0\n   Compiling paste v1.0.15\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n    Checking spin v0.9.8\n    Checking rsdp v2.0.1\n    Checking bit v0.1.1\n    Checking x86_64 v0.14.12\n    Checking volatile v0.3.0\n    Checking byteorder v1.5.0\n    Checking managed v0.8.0\n    Checking cfg-if v1.0.0\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking acpi v4.1.1\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n    Checking numeric-enum-macro v0.2.0\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking lazy_static v1.5.0\n    Checking x2apic v0.4.3\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking zcore-drivers v0.1.0 (/home/runner/check/batch_12/kern-crates/zcore-drivers)\nerror: could not compile `zcore-drivers` (lib) due to 13 previous errors\n"
    },
    {
      "cmd_idx": 113,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=zcore-drivers, checker=Lockbud\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zcore-drivers\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling bit_field v0.10.2\n   Compiling autocfg v1.4.0\n   Compiling bitflags v1.3.2\n   Compiling log v0.4.22\n   Compiling rustversion v1.0.18\n   Compiling scopeguard v1.2.0\n[2024-11-02T00:41:20Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T00:41:20Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bitflags v2.6.0\n   Compiling paste v1.0.15\n   Compiling volatile v0.4.6\n   Compiling raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling spin v0.9.8\n   Compiling rsdp v2.0.1\n   Compiling volatile v0.3.0\n   Compiling x86_64 v0.14.12\n   Compiling cfg-if v1.0.0\n   Compiling managed v0.8.0\n   Compiling bit v0.1.1\n   Compiling byteorder v1.5.0\n   Compiling isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n   Compiling smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n   Compiling acpi v4.1.1\n   Compiling pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n   Compiling lazy_static v1.5.0\n   Compiling device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n   Compiling numeric-enum-macro v0.2.0\n   Compiling lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n   Compiling x2apic v0.4.3\n   Compiling zcore-drivers v0.1.0 (/home/runner/check/batch_12/kern-crates/zcore-drivers)\nerror: unexpected `cfg` condition value: `board_malta`\n  --> src/bus/pci.rs:56:7\n   |\n56 | #[cfg(feature = \"board_malta\")]\n   |       ^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `feature` are: `allwinner`, `async-std`, `board-qemu`, `d1-pac`, `fu740`, `graphic`, `loopback`, `mock`, `no-pci`, `rcore-console`, `sdl2`, `virtio`, `virtio-drivers`\n   = help: consider adding `board_malta` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\nnote: the lint level is defined here\n  --> src/lib.rs:4:9\n   |\n4  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(unexpected_cfgs)]` implied by `#[deny(warnings)]`\n\nerror: could not compile `zcore-drivers` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 114,
      "file": "(virtual) rap",
      "kind": "Cargo",
      "raw": "// pkg_name=zcore-drivers, checker=Rap\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/kern-crates/zcore-drivers\n// cmd=cargo +nightly-2024-06-30 rap -F -M\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling autocfg v1.4.0\n   Compiling rustversion v1.0.18\n    Checking log v0.4.22\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n   Compiling paste v1.0.15\n    Checking bitflags v2.6.0\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n    Checking x86_64 v0.14.12\n    Checking spin v0.9.8\n    Checking rsdp v2.0.1\n    Checking bit v0.1.1\n    Checking managed v0.8.0\n    Checking byteorder v1.5.0\n    Checking volatile v0.3.0\n    Checking cfg-if v1.0.0\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking acpi v4.1.1\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking numeric-enum-macro v0.2.0\n    Checking lazy_static v1.5.0\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking x2apic v0.4.3\n    Checking zcore-drivers v0.1.0 (/home/runner/check/batch_12/kern-crates/zcore-drivers)\nerror: unexpected `cfg` condition value: `board_malta`\n  --> src/bus/pci.rs:56:7\n   |\n56 | #[cfg(feature = \"board_malta\")]\n   |       ^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `feature` are: `allwinner`, `async-std`, `board-qemu`, `d1-pac`, `fu740`, `graphic`, `loopback`, `mock`, `no-pci`, `rcore-console`, `sdl2`, `virtio`, and `virtio-drivers`\n   = help: consider adding `board_malta` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\nnote: the lint level is defined here\n  --> src/lib.rs:4:9\n   |\n4  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(unexpected_cfgs)]` implied by `#[deny(warnings)]`\n\nerror: could not compile `zcore-drivers` (lib) due to 1 previous error\n00:41:37|RAP|ERROR|: Finished with non-zero exit code.\n"
    }
  ]
}