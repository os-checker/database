{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.86.0-nightly (243d2ca4d 2025-01-06)",
          "commit_hash": "243d2ca4db6f96d2d18aaf3a2381251d38eb6b0b",
          "commit_date": "2025-01-06",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.86.0-nightly",
          "llvm_version": "19.1.6"
        },
        "installed": [
          {
            "channel": "nightly-2025-01-07-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "x86_64-unknown-linux-gnu"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-linux-gnu",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1737664442196,
        "finish": 1737664443639,
        "duration_ms": 1442,
        "git_time": "2025-01-15 15:33:14 +0800",
        "git_sha": "78f7222ac5d4c452fdc3cabe360c2b1390fbe5e6"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Semver Violation",
        "Audit",
        "Mirai",
        "Rapx",
        "Rudra",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Outdated",
        "Geiger",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "semver-checks": [
          "Semver Violation"
        ],
        "audit": [
          "Audit"
        ],
        "mirai": [
          "Mirai"
        ],
        "rapx": [
          "Rapx"
        ],
        "rudra": [
          "Rudra"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "outdated": [
          "Outdated"
        ],
        "geiger": [
          "Geiger"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "shilei-massclouds",
        "repo": "fileops"
      },
      {
        "user": "shilei-massclouds",
        "repo": "filetable"
      }
    ],
    "packages": [
      {
        "name": "fileops",
        "repo": {
          "repo_idx": 0,
          "user": "shilei-massclouds",
          "repo": "fileops"
        }
      },
      {
        "name": "rt_fileops",
        "repo": {
          "repo_idx": 0,
          "user": "shilei-massclouds",
          "repo": "fileops"
        }
      },
      {
        "name": "filetable",
        "repo": {
          "repo_idx": 1,
          "user": "shilei-massclouds",
          "repo": "filetable"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 41,
      "duration_ms": 108,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 41,
      "duration_ms": 107,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 41,
      "duration_ms": 107,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 123,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 123,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 122,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 44372,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 47141,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 45277,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 0,
      "duration_ms": 8088,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 3085,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 2726,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 7901,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat",
      "count": 0,
      "duration_ms": 7692,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 6296,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 1,
      "duration_ms": 114408,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 1,
      "duration_ms": 113997,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 1,
      "duration_ms": 112329,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 44372,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2726,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 8088,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 3085,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 45277,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 7692,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 7901,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 47141,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 6296,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 123,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 123,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 123,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 0,
      "duration_ms": 319,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 433,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 355,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 7832,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 6172,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat",
      "count": 0,
      "duration_ms": 7428,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 113481,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 62851,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 112889,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 7832,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 6172,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 319,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 7428,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 355,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 433,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 4,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 6716,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 38391,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 9037,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 6375,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 249,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 67894,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "geiger",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 148,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 6716,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 38391,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9037,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 6375,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 7 to 7)\n+use alloc::format;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 10 to 17)\n-use alloc::format;\n-use core::slice;\n-use core::cmp::min;\n-use axtype::{S_IFMT, S_IFREG, S_IFIFO, S_IFCHR};\n-use axtype::RLIMIT_NOFILE;\n-use capability::Cap;\n-use pipefs::PipeNode;\n-use signal::force_sig_fault;\n+use axfs_vfs::path::canonicalize;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 19 to 19)\n+use axfs_vfs::{FileSystemInfo, VfsNodeAttr, VfsNodeAttrValid, VfsNodeType};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 20 to 21)\n-use axfs_vfs::{FileSystemInfo, VfsNodeType, VfsNodeAttrValid, VfsNodeAttr};\n-use axfs_vfs::path::canonicalize;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 23 to 23)\n+use axtype::RLIMIT_NOFILE;\n+use axtype::{S_IFCHR, S_IFIFO, S_IFMT, S_IFREG};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 24 to 24)\n+use capability::Cap;\n+use core::cmp::min;\n+use core::slice;\n+use pipefs::PipeNode;\n+use signal::force_sig_fault;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 25 to 26)\n-use axerrno::AxResult;\n-use axerrno::{LinuxError, LinuxResult, linux_err, linux_err_from};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 28 to 28)\n+use axerrno::AxResult;\n+use axerrno::{linux_err, linux_err_from, LinuxError, LinuxResult};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 30 to 31)\n-use mutex::Mutex;\n-use axtype::get_user_str;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 33 to 33)\n-use axtype::{O_CREAT, O_TRUNC, O_APPEND, O_WRONLY, O_RDWR, O_EXCL, O_NOFOLLOW};\n+use axtype::get_user_str;\n+use axtype::{O_APPEND, O_CREAT, O_EXCL, O_NOFOLLOW, O_RDWR, O_TRUNC, O_WRONLY};\n+use mutex::Mutex;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 42 to 42)\n-pub const AT_FDCWD: usize       = -100isize as usize;\n+pub const AT_FDCWD: usize = -100isize as usize;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 44 to 45)\n-pub const AT_REMOVEDIR: usize   = 0x200;\n-pub const AT_EMPTY_PATH: usize  = 0x1000;\n+pub const AT_REMOVEDIR: usize = 0x200;\n+pub const AT_EMPTY_PATH: usize = 0x1000;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 75 to 75)\n-    if (flags as i32 & (O_WRONLY|O_RDWR|O_TRUNC|O_APPEND)) != 0 {\n+    if (flags as i32 & (O_WRONLY | O_RDWR | O_TRUNC | O_APPEND)) != 0 {\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 129 to 130)\n-    let fd = current.filetable\n-        .lock().insert(Arc::new(Mutex::new(file)), flags);\n+    let fd = current\n+        .filetable\n+        .lock()\n+        .insert(Arc::new(Mutex::new(file)), flags);\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 168 to 168)\n-    let file = current.filetable.lock().get_file(fd)\n+    let file = current\n+        .filetable\n+        .lock()\n+        .get_file(fd)\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 195 to 195)\n-    let file = current.filetable.lock().get_file(fd)\n+    let file = current\n+        .filetable\n+        .lock()\n+        .get_file(fd)\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 208 to 208)\n-        },\n+        }\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 259 to 259)\n-        },\n+        }\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 266 to 272)\n-pub fn fchmodat(\n-    dfd: usize, filename: &str, mode: i32, _flags: usize\n-) -> LinuxResult<usize> {\n-    info!(\n-        \"fchmodat dfd {:#X} {} mode {:#o}\",\n-        dfd, filename, mode\n-    );\n+pub fn fchmodat(dfd: usize, filename: &str, mode: i32, _flags: usize) -> LinuxResult<usize> {\n+    info!(\"fchmodat dfd {:#X} {} mode {:#o}\", dfd, filename, mode);\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 320 to 320)\n-    dfd: usize, filename: &str, uid: u32, gid: u32, flags: usize\n+    dfd: usize,\n+    filename: &str,\n+    uid: u32,\n+    gid: u32,\n+    flags: usize,\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 361 to 363)\n-            Ok(node) => {\n-                (node.get_attr().unwrap(), node.get_ino())\n-            },\n+            Ok(node) => (node.get_attr().unwrap(), node.get_ino()),\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 435 to 435)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 437 to 438)\n-    let file = current.filetable.lock()\n-        .get_file(fd).ok_or(LinuxError::EBADF)?;\n+    let file = current\n+        .filetable\n+        .lock()\n+        .get_file(fd)\n+        .ok_or(LinuxError::EBADF)?;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 464 to 464)\n-        },\n+        }\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 466 to 467)\n-            fs.create_file(None, &path, VfsNodeType::Fifo, fsuid, fsgid, mode).unwrap();\n-        },\n+            fs.create_file(None, &path, VfsNodeType::Fifo, fsuid, fsgid, mode)\n+                .unwrap();\n+        }\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 469 to 470)\n-            fs.create_file(None, &path, VfsNodeType::CharDevice, fsuid, fsgid, mode).unwrap();\n-        },\n+            fs.create_file(None, &path, VfsNodeType::CharDevice, fsuid, fsgid, mode)\n+                .unwrap();\n+        }\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 493 to 496)\n-pub fn readlinkat(\n-    dfd: usize, filename: &str, buf: usize, size: usize\n-) -> LinuxResult<usize> {\n-    warn!(\"!!!TODO!!! readlinkat: dfd {:#x} filename {} bufsize {}\", dfd, filename, size);\n+pub fn readlinkat(dfd: usize, filename: &str, buf: usize, size: usize) -> LinuxResult<usize> {\n+    warn!(\n+        \"!!!TODO!!! readlinkat: dfd {:#x} filename {} bufsize {}\",\n+        dfd, filename, size\n+    );\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 508 to 510)\n-    let ubuf: &mut [u8] = unsafe {\n-        core::slice::from_raw_parts_mut(buf as *mut _, size)\n-    };\n+    let ubuf: &mut [u8] = unsafe { core::slice::from_raw_parts_mut(buf as *mut _, size) };\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 526 to 528)\n-    olddfd: usize, oldpath: &str,\n-    newdfd: usize, newpath: &str,\n-    flags: usize\n+    olddfd: usize,\n+    oldpath: &str,\n+    newdfd: usize,\n+    newpath: &str,\n+    flags: usize,\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 530 to 531)\n-    info!(\"linkat: olddfd {:#x} newdfd {:#x}, oldpath {} newpath {} flags {}\",\n-        olddfd, newdfd, oldpath, newpath, flags);\n+    info!(\n+        \"linkat: olddfd {:#x} newdfd {:#x}, oldpath {} newpath {} flags {}\",\n+        olddfd, newdfd, oldpath, newpath, flags\n+    );\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 543 to 544)\n-    info!(\"symlinkat: target {}, newdfd {:#x}, linkpath: {}\",\n-        target, newdfd, linkpath);\n+    info!(\n+        \"symlinkat: target {}, newdfd {:#x}, linkpath: {}\",\n+        target, newdfd, linkpath\n+    );\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 551 to 551)\n-    fs.create_symlink(None, &linkpath, target, fsuid, fsgid, 0o777).unwrap();\n+    fs.create_symlink(None, &linkpath, target, fsuid, fsgid, 0o777)\n+        .unwrap();\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 556 to 556)\n-    info!(\"unlinkat: dfd {:#X}, path {}, flags {:#x}\", dfd, path, flags);\n+    info!(\n+        \"unlinkat: dfd {:#X}, path {}, flags {:#x}\",\n+        dfd, path, flags\n+    );\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 648 to 649)\n-    info!(\"fallocate: fd {} mode {:#o} offset {:#x}, len {:#x}\",\n-        fd, mode, offset, len);\n+    info!(\n+        \"fallocate: fd {} mode {:#o} offset {:#x}, len {:#x}\",\n+        fd, mode, offset, len\n+    );\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 654 to 654)\n-    let file = current.filetable.lock().get_file(fd)\n+    let file = current\n+        .filetable\n+        .lock()\n+        .get_file(fd)\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 665 to 665)\n-    if (flags & (O_WRONLY|O_RDWR|O_TRUNC|O_APPEND)) != 0 {\n+    if (flags & (O_WRONLY | O_RDWR | O_TRUNC | O_APPEND)) != 0 {\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 734 to 736)\n-    let ubuf: &mut [u8] = unsafe {\n-        core::slice::from_raw_parts_mut(dirp as *mut _, count)\n-    };\n+    let ubuf: &mut [u8] = unsafe { core::slice::from_raw_parts_mut(dirp as *mut _, count) };\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 743 to 744)\n-    info!(\"sendfile outfd {} infd {} offset {} count {:#x}\",\n-        out_fd, in_fd, offset, count);\n+    info!(\n+        \"sendfile outfd {} infd {} offset {} count {:#x}\",\n+        out_fd, in_fd, offset, count\n+    );\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 784 to 785)\n-    error!(\"utimensat: dfd {:#x} path {} times {} flags {}\",\n-        dfd, path, times, flags);\n+    error!(\n+        \"utimensat: dfd {:#x} path {} times {} flags {}\",\n+        dfd, path, times, flags\n+    );\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 810 to 812)\n-pub fn mount(fsname: &str, dir: &str, fstype: &str, flags: usize, data: usize) -> LinuxResult<usize> {\n-    info!(\"mount: name {} dir {} ty {} flags {:#x} data {:#x}\",\n-        fsname, dir, fstype, flags, data);\n+pub fn mount(\n+    fsname: &str,\n+    dir: &str,\n+    fstype: &str,\n+    flags: usize,\n+    data: usize,\n+) -> LinuxResult<usize> {\n+    info!(\n+        \"mount: name {} dir {} ty {} flags {:#x} data {:#x}\",\n+        fsname, dir, fstype, flags, data\n+    );\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 842 to 843)\n-    let console = File::open(\"/dev/console\", &opts, &fs, 0, 0)\n-        .expect(\"bad /dev/console\");\n+    let console = File::open(\"/dev/console\", &opts, &fs, 0, 0).expect(\"bad /dev/console\");\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 7 to 7)\n+use alloc::format;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 10 to 17)\n-use alloc::format;\n-use core::slice;\n-use core::cmp::min;\n-use axtype::{S_IFMT, S_IFREG, S_IFIFO, S_IFCHR};\n-use axtype::RLIMIT_NOFILE;\n-use capability::Cap;\n-use pipefs::PipeNode;\n-use signal::force_sig_fault;\n+use axfs_vfs::path::canonicalize;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 19 to 19)\n+use axfs_vfs::{FileSystemInfo, VfsNodeAttr, VfsNodeAttrValid, VfsNodeType};\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 20 to 21)\n-use axfs_vfs::{FileSystemInfo, VfsNodeType, VfsNodeAttrValid, VfsNodeAttr};\n-use axfs_vfs::path::canonicalize;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 23 to 23)\n+use axtype::RLIMIT_NOFILE;\n+use axtype::{S_IFCHR, S_IFIFO, S_IFMT, S_IFREG};\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 24 to 24)\n+use capability::Cap;\n+use core::cmp::min;\n+use core::slice;\n+use pipefs::PipeNode;\n+use signal::force_sig_fault;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 25 to 26)\n-use axerrno::AxResult;\n-use axerrno::{LinuxError, LinuxResult, linux_err, linux_err_from};\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 28 to 28)\n+use axerrno::AxResult;\n+use axerrno::{linux_err, linux_err_from, LinuxError, LinuxResult};\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 30 to 31)\n-use mutex::Mutex;\n-use axtype::get_user_str;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 33 to 33)\n-use axtype::{O_CREAT, O_TRUNC, O_APPEND, O_WRONLY, O_RDWR, O_EXCL, O_NOFOLLOW};\n+use axtype::get_user_str;\n+use axtype::{O_APPEND, O_CREAT, O_EXCL, O_NOFOLLOW, O_RDWR, O_TRUNC, O_WRONLY};\n+use mutex::Mutex;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 42 to 42)\n-pub const AT_FDCWD: usize       = -100isize as usize;\n+pub const AT_FDCWD: usize = -100isize as usize;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 44 to 45)\n-pub const AT_REMOVEDIR: usize   = 0x200;\n-pub const AT_EMPTY_PATH: usize  = 0x1000;\n+pub const AT_REMOVEDIR: usize = 0x200;\n+pub const AT_EMPTY_PATH: usize = 0x1000;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 75 to 75)\n-    if (flags as i32 & (O_WRONLY|O_RDWR|O_TRUNC|O_APPEND)) != 0 {\n+    if (flags as i32 & (O_WRONLY | O_RDWR | O_TRUNC | O_APPEND)) != 0 {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 129 to 130)\n-    let fd = current.filetable\n-        .lock().insert(Arc::new(Mutex::new(file)), flags);\n+    let fd = current\n+        .filetable\n+        .lock()\n+        .insert(Arc::new(Mutex::new(file)), flags);\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 168 to 168)\n-    let file = current.filetable.lock().get_file(fd)\n+    let file = current\n+        .filetable\n+        .lock()\n+        .get_file(fd)\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 195 to 195)\n-    let file = current.filetable.lock().get_file(fd)\n+    let file = current\n+        .filetable\n+        .lock()\n+        .get_file(fd)\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 208 to 208)\n-        },\n+        }\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 259 to 259)\n-        },\n+        }\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 266 to 272)\n-pub fn fchmodat(\n-    dfd: usize, filename: &str, mode: i32, _flags: usize\n-) -> LinuxResult<usize> {\n-    info!(\n-        \"fchmodat dfd {:#X} {} mode {:#o}\",\n-        dfd, filename, mode\n-    );\n+pub fn fchmodat(dfd: usize, filename: &str, mode: i32, _flags: usize) -> LinuxResult<usize> {\n+    info!(\"fchmodat dfd {:#X} {} mode {:#o}\", dfd, filename, mode);\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 320 to 320)\n-    dfd: usize, filename: &str, uid: u32, gid: u32, flags: usize\n+    dfd: usize,\n+    filename: &str,\n+    uid: u32,\n+    gid: u32,\n+    flags: usize,\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 361 to 363)\n-            Ok(node) => {\n-                (node.get_attr().unwrap(), node.get_ino())\n-            },\n+            Ok(node) => (node.get_attr().unwrap(), node.get_ino()),\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 435 to 435)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 437 to 438)\n-    let file = current.filetable.lock()\n-        .get_file(fd).ok_or(LinuxError::EBADF)?;\n+    let file = current\n+        .filetable\n+        .lock()\n+        .get_file(fd)\n+        .ok_or(LinuxError::EBADF)?;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 464 to 464)\n-        },\n+        }\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 466 to 467)\n-            fs.create_file(None, &path, VfsNodeType::Fifo, fsuid, fsgid, mode).unwrap();\n-        },\n+            fs.create_file(None, &path, VfsNodeType::Fifo, fsuid, fsgid, mode)\n+                .unwrap();\n+        }\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 469 to 470)\n-            fs.create_file(None, &path, VfsNodeType::CharDevice, fsuid, fsgid, mode).unwrap();\n-        },\n+            fs.create_file(None, &path, VfsNodeType::CharDevice, fsuid, fsgid, mode)\n+                .unwrap();\n+        }\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 493 to 496)\n-pub fn readlinkat(\n-    dfd: usize, filename: &str, buf: usize, size: usize\n-) -> LinuxResult<usize> {\n-    warn!(\"!!!TODO!!! readlinkat: dfd {:#x} filename {} bufsize {}\", dfd, filename, size);\n+pub fn readlinkat(dfd: usize, filename: &str, buf: usize, size: usize) -> LinuxResult<usize> {\n+    warn!(\n+        \"!!!TODO!!! readlinkat: dfd {:#x} filename {} bufsize {}\",\n+        dfd, filename, size\n+    );\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 508 to 510)\n-    let ubuf: &mut [u8] = unsafe {\n-        core::slice::from_raw_parts_mut(buf as *mut _, size)\n-    };\n+    let ubuf: &mut [u8] = unsafe { core::slice::from_raw_parts_mut(buf as *mut _, size) };\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 526 to 528)\n-    olddfd: usize, oldpath: &str,\n-    newdfd: usize, newpath: &str,\n-    flags: usize\n+    olddfd: usize,\n+    oldpath: &str,\n+    newdfd: usize,\n+    newpath: &str,\n+    flags: usize,\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 530 to 531)\n-    info!(\"linkat: olddfd {:#x} newdfd {:#x}, oldpath {} newpath {} flags {}\",\n-        olddfd, newdfd, oldpath, newpath, flags);\n+    info!(\n+        \"linkat: olddfd {:#x} newdfd {:#x}, oldpath {} newpath {} flags {}\",\n+        olddfd, newdfd, oldpath, newpath, flags\n+    );\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 543 to 544)\n-    info!(\"symlinkat: target {}, newdfd {:#x}, linkpath: {}\",\n-        target, newdfd, linkpath);\n+    info!(\n+        \"symlinkat: target {}, newdfd {:#x}, linkpath: {}\",\n+        target, newdfd, linkpath\n+    );\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 551 to 551)\n-    fs.create_symlink(None, &linkpath, target, fsuid, fsgid, 0o777).unwrap();\n+    fs.create_symlink(None, &linkpath, target, fsuid, fsgid, 0o777)\n+        .unwrap();\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 556 to 556)\n-    info!(\"unlinkat: dfd {:#X}, path {}, flags {:#x}\", dfd, path, flags);\n+    info!(\n+        \"unlinkat: dfd {:#X}, path {}, flags {:#x}\",\n+        dfd, path, flags\n+    );\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 648 to 649)\n-    info!(\"fallocate: fd {} mode {:#o} offset {:#x}, len {:#x}\",\n-        fd, mode, offset, len);\n+    info!(\n+        \"fallocate: fd {} mode {:#o} offset {:#x}, len {:#x}\",\n+        fd, mode, offset, len\n+    );\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 654 to 654)\n-    let file = current.filetable.lock().get_file(fd)\n+    let file = current\n+        .filetable\n+        .lock()\n+        .get_file(fd)\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 665 to 665)\n-    if (flags & (O_WRONLY|O_RDWR|O_TRUNC|O_APPEND)) != 0 {\n+    if (flags & (O_WRONLY | O_RDWR | O_TRUNC | O_APPEND)) != 0 {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 734 to 736)\n-    let ubuf: &mut [u8] = unsafe {\n-        core::slice::from_raw_parts_mut(dirp as *mut _, count)\n-    };\n+    let ubuf: &mut [u8] = unsafe { core::slice::from_raw_parts_mut(dirp as *mut _, count) };\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 743 to 744)\n-    info!(\"sendfile outfd {} infd {} offset {} count {:#x}\",\n-        out_fd, in_fd, offset, count);\n+    info!(\n+        \"sendfile outfd {} infd {} offset {} count {:#x}\",\n+        out_fd, in_fd, offset, count\n+    );\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 784 to 785)\n-    error!(\"utimensat: dfd {:#x} path {} times {} flags {}\",\n-        dfd, path, times, flags);\n+    error!(\n+        \"utimensat: dfd {:#x} path {} times {} flags {}\",\n+        dfd, path, times, flags\n+    );\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 810 to 812)\n-pub fn mount(fsname: &str, dir: &str, fstype: &str, flags: usize, data: usize) -> LinuxResult<usize> {\n-    info!(\"mount: name {} dir {} ty {} flags {:#x} data {:#x}\",\n-        fsname, dir, fstype, flags, data);\n+pub fn mount(\n+    fsname: &str,\n+    dir: &str,\n+    fstype: &str,\n+    flags: usize,\n+    data: usize,\n+) -> LinuxResult<usize> {\n+    info!(\n+        \"mount: name {} dir {} ty {} flags {:#x} data {:#x}\",\n+        fsname, dir, fstype, flags, data\n+    );\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 842 to 843)\n-    let console = File::open(\"/dev/console\", &opts, &fs, 0, 0)\n-        .expect(\"bad /dev/console\");\n+    let console = File::open(\"/dev/console\", &opts, &fs, 0, 0).expect(\"bad /dev/console\");\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 7 to 7)\n+use alloc::format;\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 10 to 17)\n-use alloc::format;\n-use core::slice;\n-use core::cmp::min;\n-use axtype::{S_IFMT, S_IFREG, S_IFIFO, S_IFCHR};\n-use axtype::RLIMIT_NOFILE;\n-use capability::Cap;\n-use pipefs::PipeNode;\n-use signal::force_sig_fault;\n+use axfs_vfs::path::canonicalize;\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 19 to 19)\n+use axfs_vfs::{FileSystemInfo, VfsNodeAttr, VfsNodeAttrValid, VfsNodeType};\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 20 to 21)\n-use axfs_vfs::{FileSystemInfo, VfsNodeType, VfsNodeAttrValid, VfsNodeAttr};\n-use axfs_vfs::path::canonicalize;\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 23 to 23)\n+use axtype::RLIMIT_NOFILE;\n+use axtype::{S_IFCHR, S_IFIFO, S_IFMT, S_IFREG};\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 24 to 24)\n+use capability::Cap;\n+use core::cmp::min;\n+use core::slice;\n+use pipefs::PipeNode;\n+use signal::force_sig_fault;\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 25 to 26)\n-use axerrno::AxResult;\n-use axerrno::{LinuxError, LinuxResult, linux_err, linux_err_from};\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 28 to 28)\n+use axerrno::AxResult;\n+use axerrno::{linux_err, linux_err_from, LinuxError, LinuxResult};\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 30 to 31)\n-use mutex::Mutex;\n-use axtype::get_user_str;\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 33 to 33)\n-use axtype::{O_CREAT, O_TRUNC, O_APPEND, O_WRONLY, O_RDWR, O_EXCL, O_NOFOLLOW};\n+use axtype::get_user_str;\n+use axtype::{O_APPEND, O_CREAT, O_EXCL, O_NOFOLLOW, O_RDWR, O_TRUNC, O_WRONLY};\n+use mutex::Mutex;\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 42 to 42)\n-pub const AT_FDCWD: usize       = -100isize as usize;\n+pub const AT_FDCWD: usize = -100isize as usize;\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 44 to 45)\n-pub const AT_REMOVEDIR: usize   = 0x200;\n-pub const AT_EMPTY_PATH: usize  = 0x1000;\n+pub const AT_REMOVEDIR: usize = 0x200;\n+pub const AT_EMPTY_PATH: usize = 0x1000;\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 75 to 75)\n-    if (flags as i32 & (O_WRONLY|O_RDWR|O_TRUNC|O_APPEND)) != 0 {\n+    if (flags as i32 & (O_WRONLY | O_RDWR | O_TRUNC | O_APPEND)) != 0 {\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 129 to 130)\n-    let fd = current.filetable\n-        .lock().insert(Arc::new(Mutex::new(file)), flags);\n+    let fd = current\n+        .filetable\n+        .lock()\n+        .insert(Arc::new(Mutex::new(file)), flags);\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 168 to 168)\n-    let file = current.filetable.lock().get_file(fd)\n+    let file = current\n+        .filetable\n+        .lock()\n+        .get_file(fd)\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 195 to 195)\n-    let file = current.filetable.lock().get_file(fd)\n+    let file = current\n+        .filetable\n+        .lock()\n+        .get_file(fd)\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 208 to 208)\n-        },\n+        }\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 259 to 259)\n-        },\n+        }\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 266 to 272)\n-pub fn fchmodat(\n-    dfd: usize, filename: &str, mode: i32, _flags: usize\n-) -> LinuxResult<usize> {\n-    info!(\n-        \"fchmodat dfd {:#X} {} mode {:#o}\",\n-        dfd, filename, mode\n-    );\n+pub fn fchmodat(dfd: usize, filename: &str, mode: i32, _flags: usize) -> LinuxResult<usize> {\n+    info!(\"fchmodat dfd {:#X} {} mode {:#o}\", dfd, filename, mode);\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 320 to 320)\n-    dfd: usize, filename: &str, uid: u32, gid: u32, flags: usize\n+    dfd: usize,\n+    filename: &str,\n+    uid: u32,\n+    gid: u32,\n+    flags: usize,\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 361 to 363)\n-            Ok(node) => {\n-                (node.get_attr().unwrap(), node.get_ino())\n-            },\n+            Ok(node) => (node.get_attr().unwrap(), node.get_ino()),\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 435 to 435)\n-\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 437 to 438)\n-    let file = current.filetable.lock()\n-        .get_file(fd).ok_or(LinuxError::EBADF)?;\n+    let file = current\n+        .filetable\n+        .lock()\n+        .get_file(fd)\n+        .ok_or(LinuxError::EBADF)?;\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 464 to 464)\n-        },\n+        }\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 466 to 467)\n-            fs.create_file(None, &path, VfsNodeType::Fifo, fsuid, fsgid, mode).unwrap();\n-        },\n+            fs.create_file(None, &path, VfsNodeType::Fifo, fsuid, fsgid, mode)\n+                .unwrap();\n+        }\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 469 to 470)\n-            fs.create_file(None, &path, VfsNodeType::CharDevice, fsuid, fsgid, mode).unwrap();\n-        },\n+            fs.create_file(None, &path, VfsNodeType::CharDevice, fsuid, fsgid, mode)\n+                .unwrap();\n+        }\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 493 to 496)\n-pub fn readlinkat(\n-    dfd: usize, filename: &str, buf: usize, size: usize\n-) -> LinuxResult<usize> {\n-    warn!(\"!!!TODO!!! readlinkat: dfd {:#x} filename {} bufsize {}\", dfd, filename, size);\n+pub fn readlinkat(dfd: usize, filename: &str, buf: usize, size: usize) -> LinuxResult<usize> {\n+    warn!(\n+        \"!!!TODO!!! readlinkat: dfd {:#x} filename {} bufsize {}\",\n+        dfd, filename, size\n+    );\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 508 to 510)\n-    let ubuf: &mut [u8] = unsafe {\n-        core::slice::from_raw_parts_mut(buf as *mut _, size)\n-    };\n+    let ubuf: &mut [u8] = unsafe { core::slice::from_raw_parts_mut(buf as *mut _, size) };\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 526 to 528)\n-    olddfd: usize, oldpath: &str,\n-    newdfd: usize, newpath: &str,\n-    flags: usize\n+    olddfd: usize,\n+    oldpath: &str,\n+    newdfd: usize,\n+    newpath: &str,\n+    flags: usize,\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 530 to 531)\n-    info!(\"linkat: olddfd {:#x} newdfd {:#x}, oldpath {} newpath {} flags {}\",\n-        olddfd, newdfd, oldpath, newpath, flags);\n+    info!(\n+        \"linkat: olddfd {:#x} newdfd {:#x}, oldpath {} newpath {} flags {}\",\n+        olddfd, newdfd, oldpath, newpath, flags\n+    );\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 543 to 544)\n-    info!(\"symlinkat: target {}, newdfd {:#x}, linkpath: {}\",\n-        target, newdfd, linkpath);\n+    info!(\n+        \"symlinkat: target {}, newdfd {:#x}, linkpath: {}\",\n+        target, newdfd, linkpath\n+    );\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 551 to 551)\n-    fs.create_symlink(None, &linkpath, target, fsuid, fsgid, 0o777).unwrap();\n+    fs.create_symlink(None, &linkpath, target, fsuid, fsgid, 0o777)\n+        .unwrap();\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 556 to 556)\n-    info!(\"unlinkat: dfd {:#X}, path {}, flags {:#x}\", dfd, path, flags);\n+    info!(\n+        \"unlinkat: dfd {:#X}, path {}, flags {:#x}\",\n+        dfd, path, flags\n+    );\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 648 to 649)\n-    info!(\"fallocate: fd {} mode {:#o} offset {:#x}, len {:#x}\",\n-        fd, mode, offset, len);\n+    info!(\n+        \"fallocate: fd {} mode {:#o} offset {:#x}, len {:#x}\",\n+        fd, mode, offset, len\n+    );\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 654 to 654)\n-    let file = current.filetable.lock().get_file(fd)\n+    let file = current\n+        .filetable\n+        .lock()\n+        .get_file(fd)\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 665 to 665)\n-    if (flags & (O_WRONLY|O_RDWR|O_TRUNC|O_APPEND)) != 0 {\n+    if (flags & (O_WRONLY | O_RDWR | O_TRUNC | O_APPEND)) != 0 {\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 734 to 736)\n-    let ubuf: &mut [u8] = unsafe {\n-        core::slice::from_raw_parts_mut(dirp as *mut _, count)\n-    };\n+    let ubuf: &mut [u8] = unsafe { core::slice::from_raw_parts_mut(dirp as *mut _, count) };\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 743 to 744)\n-    info!(\"sendfile outfd {} infd {} offset {} count {:#x}\",\n-        out_fd, in_fd, offset, count);\n+    info!(\n+        \"sendfile outfd {} infd {} offset {} count {:#x}\",\n+        out_fd, in_fd, offset, count\n+    );\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 784 to 785)\n-    error!(\"utimensat: dfd {:#x} path {} times {} flags {}\",\n-        dfd, path, times, flags);\n+    error!(\n+        \"utimensat: dfd {:#x} path {} times {} flags {}\",\n+        dfd, path, times, flags\n+    );\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 810 to 812)\n-pub fn mount(fsname: &str, dir: &str, fstype: &str, flags: usize, data: usize) -> LinuxResult<usize> {\n-    info!(\"mount: name {} dir {} ty {} flags {:#x} data {:#x}\",\n-        fsname, dir, fstype, flags, data);\n+pub fn mount(\n+    fsname: &str,\n+    dir: &str,\n+    fstype: &str,\n+    flags: usize,\n+    data: usize,\n+) -> LinuxResult<usize> {\n+    info!(\n+        \"mount: name {} dir {} ty {} flags {:#x} data {:#x}\",\n+        fsname, dir, fstype, flags, data\n+    );\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_15/shilei-massclouds/fileops/fileops/src/lib.rs (original lines from 842 to 843)\n-    let console = File::open(\"/dev/console\", &opts, &fs, 0, 0)\n-        .expect(\"bad /dev/console\");\n+    let console = File::open(\"/dev/console\", &opts, &fs, 0, 0).expect(\"bad /dev/console\");\n"
    },
    {
      "cmd_idx": 6,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=fileops, checker=SemverChecks\ntoolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_15/shilei-massclouds/fileops/fileops\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\ntimestamp=2025-01-09 20:01:39.304134311 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building fileops v0.1.0 (current)\nerror: running cargo-doc on crate 'fileops' failed with output:\n-----\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling unicode-ident v1.0.14\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.38\n    Checking log v0.4.22\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate fileops v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_15/shilei-massclouds/fileops/fileops &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate fileops v0.1.0\n"
    },
    {
      "cmd_idx": 7,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=fileops, checker=SemverChecks\ntoolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_15/shilei-massclouds/fileops/fileops\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\ntimestamp=2025-01-09 20:02:26.447635433 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building fileops v0.1.0 (current)\nerror: running cargo-doc on crate 'fileops' failed with output:\n-----\n    Checking log v0.4.22\n   Compiling toml_edit v0.19.15\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.95\n    Checking nb v1.1.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking bit_field v0.10.2\n    Checking nb v0.1.3\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.10.1\n    Checking bitflags v2.6.0\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking sbi-spec v0.0.4\n   Compiling syn v1.0.109\n    Checking critical-section v1.2.0\n    Checking sbi-rt v0.0.2\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking const-default v1.0.0\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking scheduler v0.1.0 (ssh://git@github.com/shilei-massclouds/scheduler.git#fd785ca6)\n   Compiling autocfg v1.4.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling svgbobdoc v0.3.0\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate fileops v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_15/shilei-massclouds/fileops/fileops &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate fileops v0.1.0\n"
    },
    {
      "cmd_idx": 8,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=fileops, checker=SemverChecks\ntoolchain=nightly-2024-01-18, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_15/shilei-massclouds/fileops/fileops\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\ntimestamp=2025-01-09 20:03:11.726803772 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building fileops v0.1.0 (current)\nerror: running cargo-doc on crate 'fileops' failed with output:\n-----\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling rustversion v1.0.19\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking volatile v0.4.6\n    Checking raw-cpuid v10.7.0\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking bit v0.1.1\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n    Checking raw-cpuid v11.2.0\n    Checking static_assertions v1.1.0\n    Checking const-default v1.0.0\n    Checking x86_64 v0.14.13\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking rlsf v0.2.1\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking allocator v0.1.0 (ssh://git@github.com/shilei-massclouds/allocator#d93ad046)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking scheduler v0.1.0 (ssh://git@github.com/shilei-massclouds/scheduler.git#fd785ca6)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\n    Checking x2apic v0.4.3\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate fileops v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_15/shilei-massclouds/fileops/fileops &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate fileops v0.1.0\n"
    },
    {
      "cmd_idx": 15,
      "file": "[outdated direct dependencies]",
      "kind": "Outdated",
      "raw": "pkg=fileops, checker=Outdated\ntoolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_15/shilei-massclouds/fileops/fileops\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-09 20:06:04.716793036 +08:00:00\n\nName   Project  Compat  Latest  Kind    Platform\n----   -------  ------  ------  ----    --------\nriscv  0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\n"
    },
    {
      "cmd_idx": 16,
      "file": "[outdated direct dependencies]",
      "kind": "Outdated",
      "raw": "pkg=fileops, checker=Outdated\ntoolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_15/shilei-massclouds/fileops/fileops\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-09 20:07:58.715471579 +08:00:00\n\nName   Project  Compat  Latest  Kind    Platform\n----   -------  ------  ------  ----    --------\nriscv  0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\n"
    },
    {
      "cmd_idx": 17,
      "file": "[outdated direct dependencies]",
      "kind": "Outdated",
      "raw": "pkg=fileops, checker=Outdated\ntoolchain=nightly-2024-01-18, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_15/shilei-massclouds/fileops/fileops\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-09 20:09:51.046515116 +08:00:00\n\nName   Project  Compat  Latest  Kind    Platform\n----   -------  ------  ------  ----    --------\nriscv  0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\n"
    },
    {
      "cmd_idx": 18,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=fileops, checker=SemverChecks\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_15/shilei-massclouds/fileops/fileops\n// cmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2025-01-09 20:00:54.931159035 +08:00:00\n    Building fileops v0.1.0 (current)\nerror: running cargo-doc on crate 'fileops' failed with output:\n-----\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling unicode-ident v1.0.14\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.38\n    Checking log v0.4.22\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate fileops v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_15/shilei-massclouds/fileops/fileops &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate fileops v0.1.0\n"
    },
    {
      "cmd_idx": 19,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=fileops, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_15/shilei-massclouds/fileops/fileops\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf\n// timestamp=2025-01-09 20:03:19.819810735 +08:00:00\n   Compiling log v0.4.22\n   Compiling cfg-if v1.0.0\n   Compiling nb v1.1.0\n   Compiling bit_field v0.10.2\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling nb v0.1.3\n   Compiling bitflags v2.6.0\n   Compiling static_assertions v1.1.0\n   Compiling riscv v0.10.1\n   Compiling void v1.0.2\n[2025-01-09T12:03:20Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-09T12:03:20Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling embedded-hal v0.2.7\n   Compiling sbi-spec v0.0.4\n   Compiling critical-section v1.2.0\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling sbi-rt v0.0.2\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling const-default v1.0.0\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n   Compiling rlsf v0.2.1\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling allocator v0.1.0 (ssh://git@github.com/shilei-massclouds/allocator#d93ad046)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 20,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=fileops, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_15/shilei-massclouds/fileops/fileops\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat\n// timestamp=2025-01-09 20:03:11.728886259 +08:00:00\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling unicode-ident v1.0.14\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.38\n   Compiling log v0.4.22\n[2025-01-09T12:03:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-09T12:03:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling cfg-if v1.0.0\n   Compiling syn v2.0.95\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling bitflags v2.6.0\n   Compiling toml_edit v0.19.15\n   Compiling syn v1.0.109\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling unicode-width v0.1.14\n   Compiling tock-registers v0.8.1\n   Compiling base64 v0.13.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling svgbobdoc v0.3.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n   Compiling bit_field v0.10.2\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling const-default v1.0.0\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 21,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=fileops, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_15/shilei-massclouds/fileops/fileops\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none\n// timestamp=2025-01-09 20:03:22.548525956 +08:00:00\n   Compiling log v0.4.22\n   Compiling bit_field v0.10.2\n   Compiling bitflags v1.3.2\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v2.6.0\n   Compiling rustversion v1.0.19\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n[2025-01-09T12:03:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-09T12:03:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling volatile v0.4.6\n   Compiling raw-cpuid v10.7.0\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling bit v0.1.1\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling raw-cpuid v11.2.0\n   Compiling x86_64 v0.14.13\n   Compiling const-default v1.0.0\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling static_assertions v1.1.0\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling rlsf v0.2.1\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling allocator v0.1.0 (ssh://git@github.com/shilei-massclouds/allocator#d93ad046)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 22,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=fileops, checker=SemverChecks\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_15/shilei-massclouds/fileops/fileops\n// cmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2025-01-09 20:02:26.449573182 +08:00:00\n    Building fileops v0.1.0 (current)\nerror: running cargo-doc on crate 'fileops' failed with output:\n-----\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling rustversion v1.0.19\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking volatile v0.4.6\n    Checking raw-cpuid v10.7.0\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking bit v0.1.1\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n    Checking raw-cpuid v11.2.0\n    Checking static_assertions v1.1.0\n    Checking const-default v1.0.0\n    Checking x86_64 v0.14.13\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking rlsf v0.2.1\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking allocator v0.1.0 (ssh://git@github.com/shilei-massclouds/allocator#d93ad046)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking scheduler v0.1.0 (ssh://git@github.com/shilei-massclouds/scheduler.git#fd785ca6)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\n    Checking x2apic v0.4.3\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate fileops v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_15/shilei-massclouds/fileops/fileops &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate fileops v0.1.0\n"
    },
    {
      "cmd_idx": 23,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=fileops, checker=Rapx\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_15/shilei-massclouds/fileops/fileops\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2025-01-09 20:03:26.972072822 +08:00:00\n   Compiling proc-macro2 v1.0.92\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling unicode-ident v1.0.14\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.38\n    Checking log v0.4.22\n   Compiling syn v2.0.95\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking bitflags v2.6.0\n   Compiling toml_edit v0.19.15\n   Compiling syn v1.0.109\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking const-default v1.0.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling svgbobdoc v0.3.0\n    Checking bit_field v0.10.2\n    Checking static_assertions v1.1.0\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\n    Checking rlsf v0.2.1\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n12:03:34|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 24,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=fileops, checker=Rapx\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_15/shilei-massclouds/fileops/fileops\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2025-01-09 20:03:34.66663493 +08:00:00\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.14\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.38\n    Checking log v0.4.22\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.95\n    Checking bit_field v0.10.2\n    Checking nb v1.1.0\n   Compiling toml_edit v0.19.15\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking nb v0.1.3\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.6.0\n   Compiling riscv v0.10.1\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking sbi-spec v0.0.4\n    Checking critical-section v1.2.0\n   Compiling syn v1.0.109\n    Checking sbi-rt v0.0.2\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking const-default v1.0.0\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n12:03:42|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 25,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=fileops, checker=SemverChecks\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_15/shilei-massclouds/fileops/fileops\n// cmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2025-01-09 20:01:39.306193576 +08:00:00\n    Building fileops v0.1.0 (current)\nerror: running cargo-doc on crate 'fileops' failed with output:\n-----\n    Checking log v0.4.22\n   Compiling toml_edit v0.19.15\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.95\n    Checking nb v1.1.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking bit_field v0.10.2\n    Checking nb v0.1.3\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.10.1\n    Checking bitflags v2.6.0\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking sbi-spec v0.0.4\n   Compiling syn v1.0.109\n    Checking critical-section v1.2.0\n    Checking sbi-rt v0.0.2\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking const-default v1.0.0\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking scheduler v0.1.0 (ssh://git@github.com/shilei-massclouds/scheduler.git#fd785ca6)\n   Compiling autocfg v1.4.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling svgbobdoc v0.3.0\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate fileops v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_15/shilei-massclouds/fileops/fileops &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate fileops v0.1.0\n"
    },
    {
      "cmd_idx": 26,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=fileops, checker=Rapx\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_15/shilei-massclouds/fileops/fileops\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none\n// timestamp=2025-01-09 20:03:42.570431933 +08:00:00\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling unicode-ident v1.0.14\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.38\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.95\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling toml_edit v0.19.15\n   Compiling rustversion v1.0.19\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking volatile v0.4.6\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n   Compiling syn v1.0.109\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n12:03:48|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 42,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_fileops, checker=Rapx\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_15/shilei-massclouds/fileops/rt_fileops\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2025-01-09 20:03:56.299168906 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.22\n   Compiling quote v1.0.38\n   Compiling toml_edit v0.19.15\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.95\n    Checking nb v1.1.0\n    Checking bit_field v0.10.2\n    Checking nb v0.1.3\n   Compiling riscv v0.10.1\n    Checking static_assertions v1.1.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking sbi-spec v0.0.4\n    Checking bitflags v2.6.0\n    Checking critical-section v1.2.0\n    Checking sbi-rt v0.0.2\n   Compiling syn v1.0.109\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n12:04:04|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 43,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_fileops, checker=Rapx\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_15/shilei-massclouds/fileops/rt_fileops\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none\n// timestamp=2025-01-09 20:04:04.133119533 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.22\n   Compiling quote v1.0.38\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling toml_edit v0.19.15\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.95\n   Compiling rustversion v1.0.19\n    Checking volatile v0.4.6\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking x86_64 v0.14.13\n    Checking raw-cpuid v10.7.0\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n12:04:10|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 44,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_fileops, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_15/shilei-massclouds/fileops/rt_fileops\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat\n// timestamp=2025-01-09 20:03:25.636638836 +08:00:00\n[2025-01-09T12:03:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-09T12:03:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling static_assertions v1.1.0\n   Compiling rlsf v0.2.1\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 45,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_fileops, checker=Rapx\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_15/shilei-massclouds/fileops/rt_fileops\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2025-01-09 20:03:48.869353121 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.22\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n   Compiling toml_edit v0.19.15\n   Compiling syn v2.0.95\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking bitflags v2.6.0\n   Compiling syn v1.0.109\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking tock-registers v0.8.1\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking aarch64-cpu v9.4.0\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking static_assertions v1.1.0\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal#db90ff50)\n    Checking bit_field v0.10.2\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n12:03:56|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 46,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_fileops, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_15/shilei-massclouds/fileops/rt_fileops\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none\n// timestamp=2025-01-09 20:03:26.392910083 +08:00:00\n[2025-01-09T12:03:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-09T12:03:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling x2apic v0.4.3\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling tock-registers v0.8.1\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 47,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_fileops, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_15/shilei-massclouds/fileops/rt_fileops\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf\n// timestamp=2025-01-09 20:03:25.957619374 +08:00:00\n[2025-01-09T12:03:20Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-09T12:03:20Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling scheduler v0.1.0 (ssh://git@github.com/shilei-massclouds/scheduler.git#fd785ca6)\n   Compiling autocfg v1.4.0\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_60/shilei-massclouds/filetable/filetable/src/lib.rs (original lines from 7 to 7)\n+use axtype::{clr_bit, set_bit, O_CLOEXEC};\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_60/shilei-massclouds/filetable/filetable/src/lib.rs (original lines from 9 to 9)\n-use axtype::{set_bit, clr_bit, O_CLOEXEC};\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_60/shilei-massclouds/filetable/filetable/src/lib.rs (original lines from 32 to 34)\n-        self.table\n-            .get(fd)\n-            .map(|entry| entry.file.clone())\n+        self.table.get(fd).map(|entry| entry.file.clone())\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_60/shilei-massclouds/filetable/filetable/src/lib.rs (original lines from 84 to 86)\n-        Self {\n-            file,\n-        }\n+        Self { file }\n"
    },
    {
      "cmd_idx": 49,
      "file": "/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n"
    },
    {
      "cmd_idx": 49,
      "file": "/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n"
    },
    {
      "cmd_idx": 49,
      "file": "/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\n"
    },
    {
      "cmd_idx": 49,
      "file": "/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\n"
    },
    {
      "cmd_idx": 49,
      "file": "/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\n"
    },
    {
      "cmd_idx": 49,
      "file": "/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\n"
    },
    {
      "cmd_idx": 50,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=filetable, checker=SemverChecks\ntoolchain=nightly-2025-01-07-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_60/shilei-massclouds/filetable/filetable\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\ntimestamp=2025-01-10 14:08:46.84910885 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building filetable v0.1.0 (current)\nerror: running cargo-doc on crate 'filetable' failed with output:\n-----\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.38\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.96\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.7.0\n   Compiling rustversion v1.0.19\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base.git#4e672f3e)\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling syn v1.0.109\n   Compiling paste v1.0.15\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking spin v0.9.8\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling libc v0.2.169\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate filetable v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_60/shilei-massclouds/filetable/filetable &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate filetable v0.1.0\n"
    },
    {
      "cmd_idx": 56,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=filetable, checker=Clippy\n// toolchain=nightly-2025-01-07-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_60/shilei-massclouds/filetable/filetable\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n// timestamp=2025-01-10 14:08:01.737322969 +08:00:00\n   Compiling proc-macro2 v1.0.92\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling unicode-ident v1.0.14\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.38\n    Checking log v0.4.22\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.96\n    Checking bitflags v2.7.0\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.19\n   Compiling toml_edit v0.19.15\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base.git#4e672f3e)\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n   Compiling syn v1.0.109\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking spin v0.9.8\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling libc v0.2.169\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 57,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=filetable, checker=SemverChecks\n// toolchain=nightly-2025-01-07-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_60/shilei-massclouds/filetable/filetable\n// cmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n// timestamp=2025-01-10 14:08:08.457083649 +08:00:00\n    Building filetable v0.1.0 (current)\nerror: running cargo-doc on crate 'filetable' failed with output:\n-----\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.38\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.96\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.7.0\n   Compiling rustversion v1.0.19\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base.git#4e672f3e)\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling syn v1.0.109\n   Compiling paste v1.0.15\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking spin v0.9.8\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling libc v0.2.169\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate filetable v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_60/shilei-massclouds/filetable/filetable &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate filetable v0.1.0\n"
    },
    {
      "cmd_idx": 58,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=filetable, checker=Lockbud\n// toolchain=nightly-2025-01-07-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_60/shilei-massclouds/filetable/filetable\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu\n// timestamp=2025-01-10 14:08:46.851046816 +08:00:00\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.14\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.38\n   Compiling log v0.4.22\n[2025-01-10T06:08:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-10T06:08:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bit_field v0.10.2\n   Compiling bitflags v1.3.2\n   Compiling syn v2.0.96\n   Compiling bitflags v2.7.0\n   Compiling cfg-if v1.0.0\n   Compiling rustversion v1.0.19\n   Compiling toml_edit v0.19.15\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling volatile v0.4.6\n   Compiling scopeguard v1.2.0\n   Compiling x86_64 v0.14.13\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base.git#4e672f3e)\n   Compiling raw-cpuid v10.7.0\n   Compiling syn v1.0.109\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling spin v0.9.8\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling libc v0.2.169\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 59,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=filetable, checker=Rapx\n// toolchain=nightly-2025-01-07-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_60/shilei-massclouds/filetable/filetable\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu\n// timestamp=2025-01-10 14:08:56.098654373 +08:00:00\n   Compiling proc-macro2 v1.0.92\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.14\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.38\n    Checking log v0.4.22\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.96\n    Checking cfg-if v1.0.0\n   Compiling toml_edit v0.19.15\n    Checking bitflags v2.7.0\n   Compiling rustversion v1.0.19\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base.git#4e672f3e)\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n    Checking raw-cpuid v10.7.0\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n06:09:02|RAP|ERROR|: Finished with non-zero exit code.\n"
    }
  ]
}