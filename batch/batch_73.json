{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.86.0-nightly (f7cc13af8 2025-01-25)",
          "commit_hash": "f7cc13af822fe68c64fec0b05aa9dd1412451f7c",
          "commit_date": "2025-01-25",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.86.0-nightly",
          "llvm_version": "19.1.7"
        },
        "installed": [
          {
            "channel": "nightly-2025-01-26-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "x86_64-unknown-linux-gnu"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-linux-gnu",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1740774468621,
        "finish": 1740774469716,
        "duration_ms": 1095,
        "git_time": "2025-02-16 16:17:11 +0800",
        "git_sha": "379b4c5f3884500f536ea00ffc0672d2af054861"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Semver Violation",
        "Audit",
        "Mirai",
        "Rapx",
        "Rudra",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Outdated",
        "Geiger",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "semver-checks": [
          "Semver Violation"
        ],
        "audit": [
          "Audit"
        ],
        "mirai": [
          "Mirai"
        ],
        "rapx": [
          "Rapx"
        ],
        "rudra": [
          "Rudra"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "outdated": [
          "Outdated"
        ],
        "geiger": [
          "Geiger"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "sysones",
        "repo": "rcore-tutorial-v3-with-hal-component"
      },
      {
        "user": "yuoo655",
        "repo": "ext4_rs"
      }
    ],
    "packages": [
      {
        "name": "",
        "repo": {
          "repo_idx": 0,
          "user": "sysones",
          "repo": "rcore-tutorial-v3-with-hal-component"
        }
      },
      {
        "name": "ext4_rs",
        "repo": {
          "repo_idx": 1,
          "user": "yuoo655",
          "repo": "ext4_rs"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=LayoutParseError cargo",
      "count": 1,
      "duration_ms": 0,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 307,
      "duration_ms": 177,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-06-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu  --no-deps",
      "count": 9,
      "duration_ms": 971,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-06-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu ",
      "count": 1,
      "duration_ms": 631,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-06-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 1269,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-06-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu ",
      "count": 1,
      "duration_ms": 11741,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-06-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 1027,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-06-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 1,
      "duration_ms": 126,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-06-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "geiger",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 1,
      "duration_ms": 786,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-06-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 971,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-06-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 631,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-06-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=geiger cargo",
      "count": 1,
      "duration_ms": 786,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-06-01",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 0,
      "file": "batch_72/sysones/rcore-tutorial-v3-with-hal-component",
      "kind": "Cargo",
      "raw": "\n   0: 无法解析 `batch_72/sysones/rcore-tutorial-v3-with-hal-component` 内的 Rust 项目布局\n   1: 无法读取 cargo metadata 的结果：`cargo metadata` exited with an error:     Updating crates.io index\n          Updating git repository `https://github.com/Byte-OS/polyhal.git`\n          Updating git repository `https://github.com/rcore-os/virtio-drivers`\n      error: failed to select a version for `polyhal`.\n          ... required by package `os v0.1.0 (/home/runner/check/batch_72/sysones/rcore-tutorial-v3-with-hal-component/os)`\n      versions that meet the requirements `*` are: 0.1.3\n\n      the package `os` depends on `polyhal`, with features: `kcontext` but `polyhal` does not have these features.\n\n\n      failed to select a version for `polyhal` which could resolve this conflict\n   1: \n\nLocation:\n   src/layout/mod.rs:60\n\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ SPANTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n   0: os_checker::run_checker::try_new with user=\"sysones\" repo=\"rcore-tutorial-v3-with-hal-component\"\n      at src/run_checker/mod.rs:219\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets."
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/block.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 25 to 27)\n-        let data_bytes: &[u8; 60] = unsafe {\n-            core::mem::transmute(data)\n-        };\n+        let data_bytes: &[u8; 60] = unsafe { core::mem::transmute(data) };\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/block.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 29 to 29)\n-            disk_offset: 0, \n+            disk_offset: 0,\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/block.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 78 to 80)\n-\n-impl Block{\n-    pub fn sync_blk_to_disk(&self, block_device: Arc<dyn BlockDevice>){\n+impl Block {\n+    pub fn sync_blk_to_disk(&self, block_device: Arc<dyn BlockDevice>) {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/block.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 84 to 84)\n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/block_group.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 97 to 97)\n-        self.itable_unused_lo = (cnt & 0xffff) as u16; \n+        self.itable_unused_lo = (cnt & 0xffff) as u16;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/block_group.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 105 to 105)\n-        self.itable_unused_lo = (cnt & 0xffff) as u16; \n+        self.itable_unused_lo = (cnt & 0xffff) as u16;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/block_group.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 233 to 233)\n-        self.free_blocks_count_lo = (cnt & 0xffff) as u16; \n+        self.free_blocks_count_lo = (cnt & 0xffff) as u16;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/block_group.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 236 to 236)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/consts.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/consts.rs (original lines from 11 to 14)\n-pub const ROOT_INODE: u32 = 2;                      // 根目录 inode\n-pub const JOURNAL_INODE: u32 = 8;                   // 日志文件 inode\n-pub const UNDEL_DIR_INODE: u32 = 6;                 // 未删除目录 inode\n-pub const LOST_AND_FOUND_INODE: u32 = 11;           // lost+found 目录 inode\n+pub const ROOT_INODE: u32 = 2; // 根目录 inode\n+pub const JOURNAL_INODE: u32 = 8; // 日志文件 inode\n+pub const UNDEL_DIR_INODE: u32 = 6; // 未删除目录 inode\n+pub const LOST_AND_FOUND_INODE: u32 = 11; // lost+found 目录 inode\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/consts.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/consts.rs (original lines from 63 to 63)\n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 31 to 31)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 40 to 40)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 60 to 63)\n-pub struct Ext4DirSearchResult{\n-    pub dentry: Ext4DirEntry, \n-    pub pblock_id: usize, // disk block id\n-    pub offset: usize, // offset in block\n+pub struct Ext4DirSearchResult {\n+    pub dentry: Ext4DirEntry,\n+    pub pblock_id: usize,   // disk block id\n+    pub offset: usize,      // offset in block\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 67 to 67)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 79 to 79)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 122 to 122)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 135 to 136)\n-        if self.name_len as usize == name.len(){\n-            return &self.name[..name.len()] == name.as_bytes()\n+        if self.name_len as usize == name.len() {\n+            return &self.name[..name.len()] == name.as_bytes();\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 169 to 169)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 179 to 180)\n-    \n-    pub fn write_entry(&mut self, entry_len: u16, inode: u32, name: &str, de_type:DirEntryType) {\n+    pub fn write_entry(&mut self, entry_len: u16, inode: u32, name: &str, de_type: DirEntryType) {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 187 to 187)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 191 to 191)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 235 to 236)\n-\n-impl Ext4DirEntryTail{\n+impl Ext4DirEntryTail {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 260 to 263)\n-        let offset = BLOCK_SIZE - core::mem::size_of::<Ext4DirEntryTail>();\n-        let de_ptr = self as *const Ext4DirEntryTail as *const u8;\n-        let array_ptr = array as *mut [u8] as *mut u8;\n-        let count = core::mem::size_of::<Ext4DirEntryTail>();\n+            let offset = BLOCK_SIZE - core::mem::size_of::<Ext4DirEntryTail>();\n+            let de_ptr = self as *const Ext4DirEntryTail as *const u8;\n+            let array_ptr = array as *mut [u8] as *mut u8;\n+            let count = core::mem::size_of::<Ext4DirEntryTail>();\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 268 to 268)\n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 227 to 227)\n-            let mut header = *Ext4ExtentHeader::load_from_u8_mut(&mut data[..size_of::<Ext4ExtentHeader>()]);\n+            let mut header =\n+                *Ext4ExtentHeader::load_from_u8_mut(&mut data[..size_of::<Ext4ExtentHeader>()]);\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 271 to 271)\n-    \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 277 to 277)\n-    \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 286 to 286)\n-                        l = m + 1;  // Otherwise, move to the right half\n+                        l = m + 1; // Otherwise, move to the right half\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 454 to 454)\n-    pub fn set_actual_len(&mut self, len: u16){\n+    pub fn set_actual_len(&mut self, len: u16) {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 548 to 548)\n-        assert!(result.is_err(), \"Expected error for invalid root node data length\");\n+        assert!(\n+            result.is_err(),\n+            \"Expected error for invalid root node data length\"\n+        );\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 553 to 553)\n-        assert!(result.is_err(), \"Expected error for invalid internal node data length\");\n+        assert!(\n+            result.is_err(),\n+            \"Expected error for invalid internal node data length\"\n+        );\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 697 to 697)\n-        let index = node.get_index(0).expect(\"Failed to get index at position 0\");\n+        let index = node\n+            .get_index(0)\n+            .expect(\"Failed to get index at position 0\");\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 703 to 703)\n-        let index = node.get_index(1).expect(\"Failed to get index at position 1\");\n+        let index = node\n+            .get_index(1)\n+            .expect(\"Failed to get index at position 1\");\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 744 to 744)\n-        let extent = node.get_extent(0).expect(\"Failed to get extent at position 0\");\n+        let extent = node\n+            .get_extent(0)\n+            .expect(\"Failed to get extent at position 0\");\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 749 to 749)\n-        let extent = node.get_extent(1).expect(\"Failed to get extent at position 1\");\n+        let extent = node\n+            .get_extent(1)\n+            .expect(\"Failed to get extent at position 1\");\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/inode.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/inode.rs (original lines from 602 to 602)\n-    \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/inode.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/inode.rs (original lines from 634 to 634)\n-        assert_eq!(inode.mode, InodeFileType::S_IFREG.bits() | (InodePerm::S_IREAD | InodePerm::S_IWRITE | InodePerm::S_IEXEC).bits()); // Regular file with rwx permissions\n+        assert_eq!(\n+            inode.mode,\n+            InodeFileType::S_IFREG.bits()\n+                | (InodePerm::S_IREAD | InodePerm::S_IWRITE | InodePerm::S_IEXEC).bits()\n+        ); // Regular file with rwx permissions\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 1 to 1)\n-pub mod consts;\n+pub mod block;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 3 to 3)\n+pub mod consts;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 4 to 5)\n-pub mod block;\n-pub mod file;\n+pub mod ext4;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 7 to 7)\n+pub mod file;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 10 to 10)\n-pub mod ext4;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 12 to 14)\n-\n-\n-pub use consts::*;\n+pub use block::*;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 16 to 16)\n+pub use consts::*;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 17 to 18)\n-pub use block::*;\n-pub use file::*;\n+pub use ext4::*;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 20 to 20)\n+pub use file::*;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 23 to 23)\n-pub use ext4::*;\n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/super_block.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/super_block.rs (original lines from 149 to 149)\n-    pub fn first_data_block(&self) -> u32{\n+    pub fn first_data_block(&self) -> u32 {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/super_block.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/super_block.rs (original lines from 207 to 207)\n-        self.free_blocks_count_lo = (free_blocks & 0xffffffff) as u32; \n+        self.free_blocks_count_lo = (free_blocks & 0xffffffff) as u32;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 71 to 71)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 115 to 115)\n-                    return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+                    return_errno_with_message!(\n+                        Errno::ENOSPC,\n+                        \"No free blocks available in all block groups\"\n+                    );\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 179 to 179)\n-        return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+        return_errno_with_message!(\n+            Errno::ENOSPC,\n+            \"No free blocks available in all block groups\"\n+        );\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 202 to 202)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 219 to 219)\n-                    return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+                    return_errno_with_message!(\n+                        Errno::ENOSPC,\n+                        \"No free blocks available in all block groups\"\n+                    );\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 289 to 289)\n-        return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+        return_errno_with_message!(\n+            Errno::ENOSPC,\n+            \"No free blocks available in all block groups\"\n+        );\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 375 to 375)\n-            inode_blocks -= (free_cnt  * (BLOCK_SIZE / EXT4_INODE_BLOCK_SIZE)) as u64;\n+            inode_blocks -= (free_cnt * (BLOCK_SIZE / EXT4_INODE_BLOCK_SIZE)) as u64;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/dir.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 412 to 412)\n-        if self.dir_has_entry(child_inode_ref.inode_num){\n+        if self.dir_has_entry(child_inode_ref.inode_num) {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/dir.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 415 to 415)\n-        \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 35 to 35)\n-        \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 45 to 45)\n-            \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 53 to 53)\n-            \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 74 to 74)\n-                \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 78 to 78)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 81 to 81)\n-            }else{\n+            } else {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 100 to 100)\n-        \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 102 to 102)\n-        \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 91 to 91)\n-        \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 93 to 93)\n-        \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 235 to 235)\n-        \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 259 to 259)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 273 to 273)\n-            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>() + core::mem::size_of::<Ext4Extent>() * (node.position);\n+            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>()\n+                + core::mem::size_of::<Ext4Extent>() * (node.position);\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 275 to 275)\n-            let left_ext:&mut Ext4Extent = ext4block.read_offset_as_mut(new_ex_offset);\n+            let left_ext: &mut Ext4Extent = ext4block.read_offset_as_mut(new_ex_offset);\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 287 to 287)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 312 to 312)\n-            log::trace!(\"insert newex at pos {:x?} current entry_count {:x?} ex {:x?}\", node.position + 1 , header.entries_count, new_extent);\n+            log::trace!(\n+                \"insert newex at pos {:x?} current entry_count {:x?} ex {:x?}\",\n+                node.position + 1,\n+                header.entries_count,\n+                new_extent\n+            );\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 316 to 316)\n-        }else{\n+        } else {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 322 to 324)\n-            let mut ext4block =\n-            Block::load(self.block_device.clone(), node_block * BLOCK_SIZE);\n-            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>() + core::mem::size_of::<Ext4Extent>() * (node.position + 1);\n+            let mut ext4block = Block::load(self.block_device.clone(), node_block * BLOCK_SIZE);\n+            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>()\n+                + core::mem::size_of::<Ext4Extent>() * (node.position + 1);\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 331 to 331)\n-            // update entry count \n+            // update entry count\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 357 to 357)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 360 to 360)\n-    \n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 365 to 365)\n-    fn ext_grow_indepth(&self, inode_ref: &mut Ext4InodeRef) -> Result<()>{\n+    fn ext_grow_indepth(&self, inode_ref: &mut Ext4InodeRef) -> Result<()> {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 376 to 377)\n-        unsafe{core::ptr::copy_nonoverlapping(data_to_copy, new_ext4block.data.as_mut_ptr(), 60)};\n-        \n+        unsafe {\n+            core::ptr::copy_nonoverlapping(data_to_copy, new_ext4block.data.as_mut_ptr(), 60)\n+        };\n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 384 to 384)\n-        let space = (BLOCK_SIZE - core::mem::size_of::<Ext4ExtentHeader>()) / core::mem::size_of::<Ext4Extent>();\n+        let space = (BLOCK_SIZE - core::mem::size_of::<Ext4ExtentHeader>())\n+            / core::mem::size_of::<Ext4Extent>();\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 387 to 387)\n-        \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 402 to 402)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 406 to 406)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 409 to 409)\n-    \n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 524 to 525)\n-                let ext4block =\n-                    Block::load(self.block_device.clone(), node_pblock * BLOCK_SIZE);\n+                let ext4block = Block::load(self.block_device.clone(), node_pblock * BLOCK_SIZE);\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 1 to 1)\n+use crate::ext4_defs::*;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 4 to 4)\n-use crate::ext4_defs::*;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 83 to 83)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 111 to 114)\n-        let inode_ref = Ext4InodeRef {\n-            inode_num,\n-            inode,\n-        };\n+        let inode_ref = Ext4InodeRef { inode_num, inode };\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 119 to 119)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 130 to 130)\n-    pub fn create_with_attr(&self, parent: u32, name: &str, inode_mode: u16, uid:u16, gid: u16) -> Result<Ext4InodeRef> {\n+    pub fn create_with_attr(\n+        &self,\n+        parent: u32,\n+        name: &str,\n+        inode_mode: u16,\n+        uid: u16,\n+        gid: u16,\n+    ) -> Result<Ext4InodeRef> {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 300 to 300)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 332 to 335)\n-            let len = min(\n-                fblock_count as usize * BLOCK_SIZE,\n-                write_buf_len - written,\n-            );\n+            let len = min(fblock_count as usize * BLOCK_SIZE, write_buf_len - written);\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 374 to 376)\n-            inode_ref\n-                .inode\n-                .set_size((offset + write_buf_len) as u64);\n+            inode_ref.inode.set_size((offset + write_buf_len) as u64);\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 412 to 416)\n-        let r = self.unlink(\n-            &mut parent_inode_ref,\n-            &mut child_inode_ref,\n-            &p[..len],\n-        )?;\n+        let r = self.unlink(&mut parent_inode_ref, &mut child_inode_ref, &p[..len])?;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 418 to 418)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 444 to 444)\n-        if diff_blocks_cnt > 0{\n+        if diff_blocks_cnt > 0 {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/inode.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/inode.rs (original lines from 176 to 176)\n-    pub fn append_inode_pblk_from(&self, inode_ref: &mut Ext4InodeRef, start_bgid: &mut u32) -> Result<Ext4Fsblk> {\n+    pub fn append_inode_pblk_from(\n+        &self,\n+        inode_ref: &mut Ext4InodeRef,\n+        start_bgid: &mut u32,\n+    ) -> Result<Ext4Fsblk> {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 1 to 3)\n-pub mod extents;\n-pub mod ext4;\n-pub mod inode;\n+pub mod balloc;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 5 to 5)\n+pub mod ext4;\n+pub mod extents;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 7 to 7)\n-pub mod balloc;\n+pub mod inode;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 9 to 11)\n-pub use extents::*;\n-pub use ext4::*;\n-pub use inode::*;\n+pub use balloc::*;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 13 to 13)\n+pub use ext4::*;\n+pub use extents::*;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 15 to 15)\n-pub use balloc::*;\n+pub use inode::*;\n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 9 to 10)\n-pub use crate::ext4_defs::Ext4;\n-pub use crate::ext4_defs::BLOCK_SIZE;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 12 to 12)\n+pub use crate::ext4_defs::Ext4;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 13 to 13)\n+pub use crate::ext4_defs::BLOCK_SIZE;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 120 to 120)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 139 to 139)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 148 to 148)\n-        uid: u32, \n+        uid: u32,\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 156 to 156)\n-        let inode_ref = self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n+        let inode_ref =\n+            self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 177 to 178)\n-    pub fn fuse_mkdir_with_attr(&mut self, parent: u64, name: &str, mode: u32, umask: u32, uid:u32, gid:u32) -> Result<Ext4InodeRef> {\n-\n+    pub fn fuse_mkdir_with_attr(\n+        &mut self,\n+        parent: u64,\n+        name: &str,\n+        mode: u32,\n+        umask: u32,\n+        uid: u32,\n+        gid: u32,\n+    ) -> Result<Ext4InodeRef> {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 219 to 223)\n-        let r = self.unlink(\n-            &mut parent_inode_ref,\n-            &mut child_inode_ref,\n-            &p[..len],\n-        )?;\n+        let r = self.unlink(&mut parent_inode_ref, &mut child_inode_ref, &p[..len])?;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 335 to 335)\n-        ) -> Result<Vec<u8>> {\n+    ) -> Result<Vec<u8>> {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 441 to 441)\n-            if (flags & O_RDONLY != 0) || (flags & O_RDWR != 0) && !can_read{\n+            if (flags & O_RDONLY != 0) || (flags & O_RDWR != 0) && !can_read {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 465 to 465)\n-    /// \n+    ///\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/lib.rs (original lines from 7 to 7)\n-pub mod utils;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/lib.rs (original lines from 9 to 9)\n+pub mod utils;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/lib.rs (original lines from 10 to 10)\n-pub use utils::*;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/lib.rs (original lines from 12 to 12)\n+pub use utils::*;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/lib.rs (original lines from 13 to 13)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/lib.rs (original lines from 17 to 18)\n-\n-pub mod simple_interface;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/lib.rs (original lines from 20 to 20)\n+pub mod simple_interface;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/lib.rs (original lines from 21 to 22)\n-\n-pub use simple_interface::*;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/lib.rs (original lines from 24 to 24)\n+pub use simple_interface::*;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/prelude.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/prelude.rs (original lines from 19 to 19)\n+pub(crate) use core::cmp::min;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/prelude.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/prelude.rs (original lines from 22 to 23)\n-pub(crate) use core::cmp::min;\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 11 to 12)\n-pub use crate::ext4_defs::Ext4;\n-pub use crate::ext4_defs::BLOCK_SIZE;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 14 to 14)\n+pub use crate::ext4_defs::Ext4;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 15 to 15)\n+pub use crate::ext4_defs::BLOCK_SIZE;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 16 to 16)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 19 to 19)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 52 to 56)\n-    pub fn ext4_file_open(\n-        &self,\n-        path: &str,\n-        flags: &str,\n-    ) -> Result<u32> {\n+    pub fn ext4_file_open(&self, path: &str, flags: &str) -> Result<u32> {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 73 to 73)\n-    /// \n+    ///\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 76 to 76)\n-    /// \n+    ///\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 79 to 79)\n-    /// \n+    ///\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 81 to 81)\n-    /// * `Result<u32>` - The inode number of the newly created directory if successful, \n+    /// * `Result<u32>` - The inode number of the newly created directory if successful,\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 95 to 95)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 105 to 108)\n-    pub fn ext4_dir_open(\n-        &self,\n-        path: &str,\n-    ) -> Result<u32> {\n+    pub fn ext4_dir_open(&self, path: &str) -> Result<u32> {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 125 to 130)\n-    pub fn ext4_file_read(\n-        &self,\n-        ino: u64,\n-        size: u32,\n-        offset: i64,\n-    ) -> Result<Vec<u8>> {\n+    pub fn ext4_file_read(&self, ino: u64, size: u32, offset: i64) -> Result<Vec<u8>> {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 148 to 153)\n-    pub fn ext4_file_write(\n-        &self,\n-        ino: u64,\n-        offset: i64,\n-        data: &[u8],\n-    ) -> Result<usize> {\n+    pub fn ext4_file_write(&self, ino: u64, offset: i64, data: &[u8]) -> Result<usize> {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 157 to 157)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 159 to 159)\n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/utils/bitmap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/utils/bitmap.rs (original lines from 90 to 90)\n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/utils/crc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/utils/crc.rs (original lines from 53 to 53)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/utils/crc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/utils/crc.rs (original lines from 79 to 79)\n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/utils/errors.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/utils/errors.rs (original lines from 1 to 2)\n-\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/utils/errors.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/utils/errors.rs (original lines from 37 to 37)\n-    ENOTSUP   = 95,   /* Not supported */\n+    ENOTSUP = 95,      /* Not supported */\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/utils/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 3 to 3)\n-pub mod path;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/utils/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 5 to 5)\n+pub mod path;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/utils/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 6 to 7)\n-\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/utils/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 10 to 10)\n-pub use path::*;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/utils/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 12 to 12)\n+pub use path::*;\n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/block.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 25 to 27)\n-        let data_bytes: &[u8; 60] = unsafe {\n-            core::mem::transmute(data)\n-        };\n+        let data_bytes: &[u8; 60] = unsafe { core::mem::transmute(data) };\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/block.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 29 to 29)\n-            disk_offset: 0, \n+            disk_offset: 0,\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/block.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 78 to 80)\n-\n-impl Block{\n-    pub fn sync_blk_to_disk(&self, block_device: Arc<dyn BlockDevice>){\n+impl Block {\n+    pub fn sync_blk_to_disk(&self, block_device: Arc<dyn BlockDevice>) {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/block.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 84 to 84)\n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/block_group.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 97 to 97)\n-        self.itable_unused_lo = (cnt & 0xffff) as u16; \n+        self.itable_unused_lo = (cnt & 0xffff) as u16;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/block_group.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 105 to 105)\n-        self.itable_unused_lo = (cnt & 0xffff) as u16; \n+        self.itable_unused_lo = (cnt & 0xffff) as u16;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/block_group.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 233 to 233)\n-        self.free_blocks_count_lo = (cnt & 0xffff) as u16; \n+        self.free_blocks_count_lo = (cnt & 0xffff) as u16;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/block_group.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 236 to 236)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/consts.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/consts.rs (original lines from 11 to 14)\n-pub const ROOT_INODE: u32 = 2;                      // 根目录 inode\n-pub const JOURNAL_INODE: u32 = 8;                   // 日志文件 inode\n-pub const UNDEL_DIR_INODE: u32 = 6;                 // 未删除目录 inode\n-pub const LOST_AND_FOUND_INODE: u32 = 11;           // lost+found 目录 inode\n+pub const ROOT_INODE: u32 = 2; // 根目录 inode\n+pub const JOURNAL_INODE: u32 = 8; // 日志文件 inode\n+pub const UNDEL_DIR_INODE: u32 = 6; // 未删除目录 inode\n+pub const LOST_AND_FOUND_INODE: u32 = 11; // lost+found 目录 inode\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/consts.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/consts.rs (original lines from 63 to 63)\n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 31 to 31)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 40 to 40)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 60 to 63)\n-pub struct Ext4DirSearchResult{\n-    pub dentry: Ext4DirEntry, \n-    pub pblock_id: usize, // disk block id\n-    pub offset: usize, // offset in block\n+pub struct Ext4DirSearchResult {\n+    pub dentry: Ext4DirEntry,\n+    pub pblock_id: usize,   // disk block id\n+    pub offset: usize,      // offset in block\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 67 to 67)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 79 to 79)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 122 to 122)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 135 to 136)\n-        if self.name_len as usize == name.len(){\n-            return &self.name[..name.len()] == name.as_bytes()\n+        if self.name_len as usize == name.len() {\n+            return &self.name[..name.len()] == name.as_bytes();\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 169 to 169)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 179 to 180)\n-    \n-    pub fn write_entry(&mut self, entry_len: u16, inode: u32, name: &str, de_type:DirEntryType) {\n+    pub fn write_entry(&mut self, entry_len: u16, inode: u32, name: &str, de_type: DirEntryType) {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 187 to 187)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 191 to 191)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 235 to 236)\n-\n-impl Ext4DirEntryTail{\n+impl Ext4DirEntryTail {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 260 to 263)\n-        let offset = BLOCK_SIZE - core::mem::size_of::<Ext4DirEntryTail>();\n-        let de_ptr = self as *const Ext4DirEntryTail as *const u8;\n-        let array_ptr = array as *mut [u8] as *mut u8;\n-        let count = core::mem::size_of::<Ext4DirEntryTail>();\n+            let offset = BLOCK_SIZE - core::mem::size_of::<Ext4DirEntryTail>();\n+            let de_ptr = self as *const Ext4DirEntryTail as *const u8;\n+            let array_ptr = array as *mut [u8] as *mut u8;\n+            let count = core::mem::size_of::<Ext4DirEntryTail>();\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 268 to 268)\n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 227 to 227)\n-            let mut header = *Ext4ExtentHeader::load_from_u8_mut(&mut data[..size_of::<Ext4ExtentHeader>()]);\n+            let mut header =\n+                *Ext4ExtentHeader::load_from_u8_mut(&mut data[..size_of::<Ext4ExtentHeader>()]);\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 271 to 271)\n-    \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 277 to 277)\n-    \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 286 to 286)\n-                        l = m + 1;  // Otherwise, move to the right half\n+                        l = m + 1; // Otherwise, move to the right half\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 454 to 454)\n-    pub fn set_actual_len(&mut self, len: u16){\n+    pub fn set_actual_len(&mut self, len: u16) {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 548 to 548)\n-        assert!(result.is_err(), \"Expected error for invalid root node data length\");\n+        assert!(\n+            result.is_err(),\n+            \"Expected error for invalid root node data length\"\n+        );\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 553 to 553)\n-        assert!(result.is_err(), \"Expected error for invalid internal node data length\");\n+        assert!(\n+            result.is_err(),\n+            \"Expected error for invalid internal node data length\"\n+        );\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 697 to 697)\n-        let index = node.get_index(0).expect(\"Failed to get index at position 0\");\n+        let index = node\n+            .get_index(0)\n+            .expect(\"Failed to get index at position 0\");\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 703 to 703)\n-        let index = node.get_index(1).expect(\"Failed to get index at position 1\");\n+        let index = node\n+            .get_index(1)\n+            .expect(\"Failed to get index at position 1\");\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 744 to 744)\n-        let extent = node.get_extent(0).expect(\"Failed to get extent at position 0\");\n+        let extent = node\n+            .get_extent(0)\n+            .expect(\"Failed to get extent at position 0\");\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 749 to 749)\n-        let extent = node.get_extent(1).expect(\"Failed to get extent at position 1\");\n+        let extent = node\n+            .get_extent(1)\n+            .expect(\"Failed to get extent at position 1\");\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/inode.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/inode.rs (original lines from 602 to 602)\n-    \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/inode.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/inode.rs (original lines from 634 to 634)\n-        assert_eq!(inode.mode, InodeFileType::S_IFREG.bits() | (InodePerm::S_IREAD | InodePerm::S_IWRITE | InodePerm::S_IEXEC).bits()); // Regular file with rwx permissions\n+        assert_eq!(\n+            inode.mode,\n+            InodeFileType::S_IFREG.bits()\n+                | (InodePerm::S_IREAD | InodePerm::S_IWRITE | InodePerm::S_IEXEC).bits()\n+        ); // Regular file with rwx permissions\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 1 to 1)\n-pub mod consts;\n+pub mod block;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 3 to 3)\n+pub mod consts;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 4 to 5)\n-pub mod block;\n-pub mod file;\n+pub mod ext4;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 7 to 7)\n+pub mod file;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 10 to 10)\n-pub mod ext4;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 12 to 14)\n-\n-\n-pub use consts::*;\n+pub use block::*;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 16 to 16)\n+pub use consts::*;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 17 to 18)\n-pub use block::*;\n-pub use file::*;\n+pub use ext4::*;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 20 to 20)\n+pub use file::*;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 23 to 23)\n-pub use ext4::*;\n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/super_block.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/super_block.rs (original lines from 149 to 149)\n-    pub fn first_data_block(&self) -> u32{\n+    pub fn first_data_block(&self) -> u32 {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_defs/super_block.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_defs/super_block.rs (original lines from 207 to 207)\n-        self.free_blocks_count_lo = (free_blocks & 0xffffffff) as u32; \n+        self.free_blocks_count_lo = (free_blocks & 0xffffffff) as u32;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 71 to 71)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 115 to 115)\n-                    return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+                    return_errno_with_message!(\n+                        Errno::ENOSPC,\n+                        \"No free blocks available in all block groups\"\n+                    );\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 179 to 179)\n-        return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+        return_errno_with_message!(\n+            Errno::ENOSPC,\n+            \"No free blocks available in all block groups\"\n+        );\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 202 to 202)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 219 to 219)\n-                    return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+                    return_errno_with_message!(\n+                        Errno::ENOSPC,\n+                        \"No free blocks available in all block groups\"\n+                    );\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 289 to 289)\n-        return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+        return_errno_with_message!(\n+            Errno::ENOSPC,\n+            \"No free blocks available in all block groups\"\n+        );\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 375 to 375)\n-            inode_blocks -= (free_cnt  * (BLOCK_SIZE / EXT4_INODE_BLOCK_SIZE)) as u64;\n+            inode_blocks -= (free_cnt * (BLOCK_SIZE / EXT4_INODE_BLOCK_SIZE)) as u64;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/dir.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 412 to 412)\n-        if self.dir_has_entry(child_inode_ref.inode_num){\n+        if self.dir_has_entry(child_inode_ref.inode_num) {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/dir.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 415 to 415)\n-        \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 35 to 35)\n-        \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 45 to 45)\n-            \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 53 to 53)\n-            \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 74 to 74)\n-                \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 78 to 78)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 81 to 81)\n-            }else{\n+            } else {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 100 to 100)\n-        \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 102 to 102)\n-        \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 91 to 91)\n-        \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 93 to 93)\n-        \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 235 to 235)\n-        \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 259 to 259)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 273 to 273)\n-            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>() + core::mem::size_of::<Ext4Extent>() * (node.position);\n+            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>()\n+                + core::mem::size_of::<Ext4Extent>() * (node.position);\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 275 to 275)\n-            let left_ext:&mut Ext4Extent = ext4block.read_offset_as_mut(new_ex_offset);\n+            let left_ext: &mut Ext4Extent = ext4block.read_offset_as_mut(new_ex_offset);\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 287 to 287)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 312 to 312)\n-            log::trace!(\"insert newex at pos {:x?} current entry_count {:x?} ex {:x?}\", node.position + 1 , header.entries_count, new_extent);\n+            log::trace!(\n+                \"insert newex at pos {:x?} current entry_count {:x?} ex {:x?}\",\n+                node.position + 1,\n+                header.entries_count,\n+                new_extent\n+            );\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 316 to 316)\n-        }else{\n+        } else {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 322 to 324)\n-            let mut ext4block =\n-            Block::load(self.block_device.clone(), node_block * BLOCK_SIZE);\n-            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>() + core::mem::size_of::<Ext4Extent>() * (node.position + 1);\n+            let mut ext4block = Block::load(self.block_device.clone(), node_block * BLOCK_SIZE);\n+            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>()\n+                + core::mem::size_of::<Ext4Extent>() * (node.position + 1);\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 331 to 331)\n-            // update entry count \n+            // update entry count\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 357 to 357)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 360 to 360)\n-    \n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 365 to 365)\n-    fn ext_grow_indepth(&self, inode_ref: &mut Ext4InodeRef) -> Result<()>{\n+    fn ext_grow_indepth(&self, inode_ref: &mut Ext4InodeRef) -> Result<()> {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 376 to 377)\n-        unsafe{core::ptr::copy_nonoverlapping(data_to_copy, new_ext4block.data.as_mut_ptr(), 60)};\n-        \n+        unsafe {\n+            core::ptr::copy_nonoverlapping(data_to_copy, new_ext4block.data.as_mut_ptr(), 60)\n+        };\n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 384 to 384)\n-        let space = (BLOCK_SIZE - core::mem::size_of::<Ext4ExtentHeader>()) / core::mem::size_of::<Ext4Extent>();\n+        let space = (BLOCK_SIZE - core::mem::size_of::<Ext4ExtentHeader>())\n+            / core::mem::size_of::<Ext4Extent>();\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 387 to 387)\n-        \n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 402 to 402)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 406 to 406)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 409 to 409)\n-    \n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 524 to 525)\n-                let ext4block =\n-                    Block::load(self.block_device.clone(), node_pblock * BLOCK_SIZE);\n+                let ext4block = Block::load(self.block_device.clone(), node_pblock * BLOCK_SIZE);\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 1 to 1)\n+use crate::ext4_defs::*;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 4 to 4)\n-use crate::ext4_defs::*;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 83 to 83)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 111 to 114)\n-        let inode_ref = Ext4InodeRef {\n-            inode_num,\n-            inode,\n-        };\n+        let inode_ref = Ext4InodeRef { inode_num, inode };\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 119 to 119)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 130 to 130)\n-    pub fn create_with_attr(&self, parent: u32, name: &str, inode_mode: u16, uid:u16, gid: u16) -> Result<Ext4InodeRef> {\n+    pub fn create_with_attr(\n+        &self,\n+        parent: u32,\n+        name: &str,\n+        inode_mode: u16,\n+        uid: u16,\n+        gid: u16,\n+    ) -> Result<Ext4InodeRef> {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 300 to 300)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 332 to 335)\n-            let len = min(\n-                fblock_count as usize * BLOCK_SIZE,\n-                write_buf_len - written,\n-            );\n+            let len = min(fblock_count as usize * BLOCK_SIZE, write_buf_len - written);\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 374 to 376)\n-            inode_ref\n-                .inode\n-                .set_size((offset + write_buf_len) as u64);\n+            inode_ref.inode.set_size((offset + write_buf_len) as u64);\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 412 to 416)\n-        let r = self.unlink(\n-            &mut parent_inode_ref,\n-            &mut child_inode_ref,\n-            &p[..len],\n-        )?;\n+        let r = self.unlink(&mut parent_inode_ref, &mut child_inode_ref, &p[..len])?;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 418 to 418)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 444 to 444)\n-        if diff_blocks_cnt > 0{\n+        if diff_blocks_cnt > 0 {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/inode.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/inode.rs (original lines from 176 to 176)\n-    pub fn append_inode_pblk_from(&self, inode_ref: &mut Ext4InodeRef, start_bgid: &mut u32) -> Result<Ext4Fsblk> {\n+    pub fn append_inode_pblk_from(\n+        &self,\n+        inode_ref: &mut Ext4InodeRef,\n+        start_bgid: &mut u32,\n+    ) -> Result<Ext4Fsblk> {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 1 to 3)\n-pub mod extents;\n-pub mod ext4;\n-pub mod inode;\n+pub mod balloc;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 5 to 5)\n+pub mod ext4;\n+pub mod extents;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 7 to 7)\n-pub mod balloc;\n+pub mod inode;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 9 to 11)\n-pub use extents::*;\n-pub use ext4::*;\n-pub use inode::*;\n+pub use balloc::*;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 13 to 13)\n+pub use ext4::*;\n+pub use extents::*;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/ext4_impls/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 15 to 15)\n-pub use balloc::*;\n+pub use inode::*;\n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 9 to 10)\n-pub use crate::ext4_defs::Ext4;\n-pub use crate::ext4_defs::BLOCK_SIZE;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 12 to 12)\n+pub use crate::ext4_defs::Ext4;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 13 to 13)\n+pub use crate::ext4_defs::BLOCK_SIZE;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 120 to 120)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 139 to 139)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 148 to 148)\n-        uid: u32, \n+        uid: u32,\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 156 to 156)\n-        let inode_ref = self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n+        let inode_ref =\n+            self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 177 to 178)\n-    pub fn fuse_mkdir_with_attr(&mut self, parent: u64, name: &str, mode: u32, umask: u32, uid:u32, gid:u32) -> Result<Ext4InodeRef> {\n-\n+    pub fn fuse_mkdir_with_attr(\n+        &mut self,\n+        parent: u64,\n+        name: &str,\n+        mode: u32,\n+        umask: u32,\n+        uid: u32,\n+        gid: u32,\n+    ) -> Result<Ext4InodeRef> {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 219 to 223)\n-        let r = self.unlink(\n-            &mut parent_inode_ref,\n-            &mut child_inode_ref,\n-            &p[..len],\n-        )?;\n+        let r = self.unlink(&mut parent_inode_ref, &mut child_inode_ref, &p[..len])?;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 335 to 335)\n-        ) -> Result<Vec<u8>> {\n+    ) -> Result<Vec<u8>> {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 441 to 441)\n-            if (flags & O_RDONLY != 0) || (flags & O_RDWR != 0) && !can_read{\n+            if (flags & O_RDONLY != 0) || (flags & O_RDWR != 0) && !can_read {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 465 to 465)\n-    /// \n+    ///\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/main.rs (original lines from 112 to 112)\n-    let mut read_buf = vec![0u8;  READ_SIZE as usize];\n+    let mut read_buf = vec![0u8; READ_SIZE as usize];\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/main.rs (original lines from 118 to 119)\n-\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/main.rs (original lines from 121 to 121)\n-    let mut read_buf = vec![0u8;  READ_SIZE as usize];\n+    let mut read_buf = vec![0u8; READ_SIZE as usize];\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/main.rs (original lines from 161 to 161)\n-    let inode_ref = ext4.create(ROOT_INODE, \"4G.txt\", inode_mode | inode_perm).unwrap();\n+    let inode_ref = ext4\n+        .create(ROOT_INODE, \"4G.txt\", inode_mode | inode_perm)\n+        .unwrap();\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/main.rs (original lines from 169 to 169)\n-    let mut read_buf = vec![0u8;  WRITE_SIZE as usize];\n+    let mut read_buf = vec![0u8; WRITE_SIZE as usize];\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/main.rs (original lines from 174 to 174)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/prelude.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/prelude.rs (original lines from 19 to 19)\n+pub(crate) use core::cmp::min;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/prelude.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/prelude.rs (original lines from 22 to 23)\n-pub(crate) use core::cmp::min;\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 11 to 12)\n-pub use crate::ext4_defs::Ext4;\n-pub use crate::ext4_defs::BLOCK_SIZE;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 14 to 14)\n+pub use crate::ext4_defs::Ext4;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 15 to 15)\n+pub use crate::ext4_defs::BLOCK_SIZE;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 16 to 16)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 19 to 19)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 52 to 56)\n-    pub fn ext4_file_open(\n-        &self,\n-        path: &str,\n-        flags: &str,\n-    ) -> Result<u32> {\n+    pub fn ext4_file_open(&self, path: &str, flags: &str) -> Result<u32> {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 73 to 73)\n-    /// \n+    ///\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 76 to 76)\n-    /// \n+    ///\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 79 to 79)\n-    /// \n+    ///\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 81 to 81)\n-    /// * `Result<u32>` - The inode number of the newly created directory if successful, \n+    /// * `Result<u32>` - The inode number of the newly created directory if successful,\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 95 to 95)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 105 to 108)\n-    pub fn ext4_dir_open(\n-        &self,\n-        path: &str,\n-    ) -> Result<u32> {\n+    pub fn ext4_dir_open(&self, path: &str) -> Result<u32> {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 125 to 130)\n-    pub fn ext4_file_read(\n-        &self,\n-        ino: u64,\n-        size: u32,\n-        offset: i64,\n-    ) -> Result<Vec<u8>> {\n+    pub fn ext4_file_read(&self, ino: u64, size: u32, offset: i64) -> Result<Vec<u8>> {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 148 to 153)\n-    pub fn ext4_file_write(\n-        &self,\n-        ino: u64,\n-        offset: i64,\n-        data: &[u8],\n-    ) -> Result<usize> {\n+    pub fn ext4_file_write(&self, ino: u64, offset: i64, data: &[u8]) -> Result<usize> {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 157 to 157)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 159 to 159)\n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/utils/bitmap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/utils/bitmap.rs (original lines from 90 to 90)\n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/utils/crc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/utils/crc.rs (original lines from 53 to 53)\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/utils/crc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/utils/crc.rs (original lines from 79 to 79)\n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/utils/errors.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/utils/errors.rs (original lines from 1 to 2)\n-\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/utils/errors.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/utils/errors.rs (original lines from 37 to 37)\n-    ENOTSUP   = 95,   /* Not supported */\n+    ENOTSUP = 95,      /* Not supported */\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/utils/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 3 to 3)\n-pub mod path;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/utils/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 5 to 5)\n+pub mod path;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/utils/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 6 to 7)\n-\n-\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/utils/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 10 to 10)\n-pub use path::*;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/utils/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_72/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 12 to 12)\n+pub use path::*;\n+\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u64` -> `u64`)\n   --> src/ext4_impls/extents.rs:718:33\n    |\n718 |                 ex.store_pblock(newblock as u64);\n    |                                 ^^^^^^^^^^^^^^^ help: try: `newblock`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (14/7)\n  --> src/fuse_interface/mod.rs:38:5\n   |\n38 | /     pub fn fuse_setattr(\n39 | |         &self,\n40 | |         ino: u64,\n41 | |         mode: Option<u32>,\n...  |\n52 | |         flags: Option<u32>,\n53 | |     ) {\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n   = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/fuse_interface/mod.rs:141:5\n    |\n141 | /     pub fn fuse_mknod_with_attr(\n142 | |         &self,\n143 | |         parent: u64,\n144 | |         name: &str,\n...   |\n149 | |         gid: u32,\n150 | |     ) -> Result<Ext4InodeRef> {\n    | |_____________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error: &-masking with zero\n   --> src/fuse_interface/mod.rs:305:13\n    |\n305 |         if ((flags & O_RDONLY != 0) || (flags & O_RDWR != 0)) && !can_read {\n    |             ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n    = note: `#[deny(clippy::bad_bit_mask)]` on by default\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/fuse_interface/mod.rs:354:5\n    |\n354 | /     pub fn fuse_write(\n355 | |         &self,\n356 | |         ino: u64,\n357 | |         fh: u64,\n...   |\n362 | |         lock_owner: Option<u64>,\n363 | |     ) -> Result<usize> {\n    | |______________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error: &-masking with zero\n   --> src/fuse_interface/mod.rs:441:16\n    |\n441 |             if (flags & O_RDONLY != 0) || (flags & O_RDWR != 0) && !can_read{\n    |                ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/fuse_interface/mod.rs:593:5\n    |\n593 | /     fn fuse_getlk(\n594 | |         &mut self,\n595 | |         ino: u64,\n596 | |         fh: u64,\n...   |\n601 | |         pid: u32,\n602 | |     ) {\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (9/7)\n   --> src/fuse_interface/mod.rs:613:5\n    |\n613 | /     fn fuse_setlk(\n614 | |         &mut self,\n615 | |         ino: u64,\n616 | |         fh: u64,\n...   |\n622 | |         sleep: bool,\n623 | |     ) {\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (9/7)\n   --> src/fuse_interface/mod.rs:670:5\n    |\n670 | /     fn fuse_copy_file_range(\n671 | |         &mut self,\n672 | |         ino_in: u64,\n673 | |         fh_in: u64,\n...   |\n679 | |         flags: u32,\n680 | |     ) {\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=ext4_rs, checker=SemverChecks\ntoolchain=nightly-2024-06-01, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_72/yuoo655/ext4_rs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-02-16 21:38:11.076993263 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building ext4_rs v1.3.0 (current)\n       Built [   0.405s] (current)\n     Parsing ext4_rs v1.3.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_72/yuoo655/ext4_rs/target/semver-checks/local-ext4_rs-1_3_0-01666ec060466c14/target/x86_64-unknown-linux-gnu/doc/ext4_rs.json\n"
    },
    {
      "cmd_idx": 5,
      "file": "[rap] Not supported to display yet.",
      "kind": "Rapx",
      "raw": "pkg=ext4_rs, checker=Rapx\ntoolchain=nightly-2024-06-01, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_72/yuoo655/ext4_rs\ncmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \ntimestamp=2025-02-16 21:38:24.147701103 +08:00:00\n\nwarning: Dangling pointer detected.\n   --> src/ext4_defs/direntry.rs:214:1\n    |\n214 | / pub fn write_de_to_blk(&self, dst_blk: &mut Block, offset: usize) {\n215 | |         let count = core::mem::size_of::<Ext4DirEntry>() / core::mem::size_of::<u8>();\n...   |\n221 | |         // assert_eq!(dst_blk.block_data[offset..offset + core::mem::size_of::<Ext4DirEntry>()], data[..]);\n222 | |     }\n    | |_____- Dangling pointer detected.\n    |\nwarning: Dangling pointer detected during unwinding.\n   --> src/ext4_defs/direntry.rs:214:1\n    |\n214 | / pub fn write_de_to_blk(&self, dst_blk: &mut Block, offset: usize) {\n215 | |         let count = core::mem::size_of::<Ext4DirEntry>() / core::mem::size_of::<u8>();\n...   |\n221 | |         // assert_eq!(dst_blk.block_data[offset..offset + core::mem::size_of::<Ext4DirEntry>()], data[..]);\n222 | |     }\n    | |_____- Dangling pointer detected during unwinding.\n    |\nOver visited: DefId(0:466 ~ ext4_rs[58b7]::ext4_impls::extents::{impl#0}::insert_extent)\nOver visited: DefId(0:475 ~ ext4_rs[58b7]::ext4_impls::extents::{impl#1}::ext_remove_leaf)\nOver visited: DefId(0:600 ~ ext4_rs[58b7]::fuse_interface::{impl#0}::fuse_setattr)\nwarning: Dangling pointer detected.\n   --> src/ext4_defs/direntry.rs:214:1\n    |\n214 | / pub fn write_de_to_blk(&self, dst_blk: &mut Block, offset: usize) {\n215 | |         let count = core::mem::size_of::<Ext4DirEntry>() / core::mem::size_of::<u8>();\n...   |\n221 | |         // assert_eq!(dst_blk.block_data[offset..offset + core::mem::size_of::<Ext4DirEntry>()], data[..]);\n222 | |     }\n    | |_____- Dangling pointer detected.\n    |\nwarning: Dangling pointer detected during unwinding.\n   --> src/ext4_defs/direntry.rs:214:1\n    |\n214 | / pub fn write_de_to_blk(&self, dst_blk: &mut Block, offset: usize) {\n215 | |         let count = core::mem::size_of::<Ext4DirEntry>() / core::mem::size_of::<u8>();\n...   |\n221 | |         // assert_eq!(dst_blk.block_data[offset..offset + core::mem::size_of::<Ext4DirEntry>()], data[..]);\n222 | |     }\n    | |_____- Dangling pointer detected during unwinding.\n    |\nOver visited: DefId(0:465 ~ ext4_rs[e358]::ext4_impls::extents::{impl#0}::insert_extent)\nOver visited: DefId(0:474 ~ ext4_rs[e358]::ext4_impls::extents::{impl#1}::ext_remove_leaf)\nOver visited: DefId(0:581 ~ ext4_rs[e358]::fuse_interface::{impl#0}::fuse_setattr)\nOver visited: DefId(0:679 ~ ext4_rs[e358]::main)\n"
    },
    {
      "cmd_idx": 7,
      "file": "[outdated direct dependencies]",
      "kind": "Outdated",
      "raw": "pkg=ext4_rs, checker=Outdated\ntoolchain=nightly-2024-06-01, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_72/yuoo655/ext4_rs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 21:38:25.304322597 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.5.0    2.8.0   2.8.0   Normal  ---\nlog       0.4.21   0.4.25  0.4.25  Normal  ---\n"
    },
    {
      "cmd_idx": 8,
      "file": "[geiger] Unsafe Code statistics",
      "kind": "Geiger",
      "raw": "pkg=ext4_rs, checker=Geiger\ntoolchain=nightly-2024-06-01, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_72/yuoo655/ext4_rs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\ntimestamp=2025-02-16 21:38:26.143072738 +08:00:00\n\n\nMetric output format: x/y\n    x = unsafe code used by the build\n    y = total unsafe code found in the crate\n\nSymbols: \n    :) = No `unsafe` usage found, declares #![forbid(unsafe_code)]\n    ?  = No `unsafe` usage found, missing #![forbid(unsafe_code)]\n    !  = `unsafe` usage found\n\nFunctions  Expressions  Impls  Traits  Methods  Dependency\n\n0/0        161/161      0/0    0/0     0/0      !  ext4_rs 1.3.0\n0/0        0/0          0/0    0/0     0/0      ?  |-- bitflags 2.5.0\n0/2        0/18         0/1    0/0     0/0      ?  `-- log 0.4.21\n\n0/2        161/179      0/1    0/0     0/0    \n\n"
    },
    {
      "cmd_idx": 9,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=ext4_rs, checker=Clippy\n// toolchain=nightly-2024-06-01, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_72/yuoo655/ext4_rs\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-02-16 21:38:09.471834448 +08:00:00\n    Checking bitflags v2.5.0\n    Checking log v0.4.21\n    Checking ext4_rs v1.3.0 (/home/runner/check/batch_72/yuoo655/ext4_rs)\nerror: could not compile `ext4_rs` (lib) due to 3 previous errors; 7 warnings emitted\n"
    },
    {
      "cmd_idx": 10,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=ext4_rs, checker=SemverChecks\n// toolchain=nightly-2024-06-01, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_72/yuoo655/ext4_rs\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-02-16 21:38:10.445629385 +08:00:00\n    Building ext4_rs v1.3.0 (current)\n       Built [   0.405s] (current)\n     Parsing ext4_rs v1.3.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_72/yuoo655/ext4_rs/target/semver-checks/local-ext4_rs-1_3_0-01666ec060466c14/target/x86_64-unknown-linux-gnu/doc/ext4_rs.json\n"
    },
    {
      "cmd_idx": 11,
      "file": "(virtual) geiger",
      "kind": "Cargo",
      "raw": "// pkg_name=ext4_rs, checker=Geiger\n// toolchain=nightly-2024-06-01, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_72/yuoo655/ext4_rs\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2025-02-16 21:38:25.356820262 +08:00:00\n     Removed 0 files\n    Checking bitflags v2.5.0\n    Checking log v0.4.21\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_72/yuoo655/ext4_rs/target/debug/deps/bitflags-8f40497a5e9e62da.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_72/yuoo655/ext4_rs/target/debug/deps/log-20087c0c0cd98a51.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_72/yuoo655/ext4_rs/target/debug/deps/liblog-20087c0c0cd98a51.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_72/yuoo655/ext4_rs/target/debug/deps/libbitflags-8f40497a5e9e62da.rmeta\",\"emit\":\"metadata\"}\n    Checking ext4_rs v1.3.0 (/home/runner/check/batch_72/yuoo655/ext4_rs)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_72/yuoo655/ext4_rs/target/debug/deps/ext4_rs-ea489667e060290a.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\",\"code\":{\"code\":\"stable_features\",\"explanation\":null},\"level\":\"warning\",\"spans\":[{\"file_name\":\"src/lib.rs\",\"byte_start\":11,\"byte_end\":24,\"line_start\":1,\"line_end\":1,\"column_start\":12,\"column_end\":25,\"is_primary\":true,\"text\":[{\"text\":\"#![feature(error_in_core)]\",\"highlight_start\":12,\"highlight_end\":25}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"`#[warn(stable_features)]` on by default\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[33mwarning\\u001b[0m\\u001b[0m\\u001b[1m: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\\u001b[0m\\n\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/lib.rs:1:12\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m1\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m#![feature(error_in_core)]\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m            \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33m^^^^^^^^^^^^^\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: `#[warn(stable_features)]` on by default\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_72/yuoo655/ext4_rs/target/debug/deps/libext4_rs-ea489667e060290a.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"1 warning emitted\",\"code\":null,\"level\":\"warning\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[33mwarning\\u001b[0m\\u001b[0m\\u001b[1m: 1 warning emitted\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_72/yuoo655/ext4_rs/target/debug/deps/ext4_rs-070d152dd572c065.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\",\"code\":{\"code\":\"stable_features\",\"explanation\":null},\"level\":\"warning\",\"spans\":[{\"file_name\":\"src/main.rs\",\"byte_start\":11,\"byte_end\":24,\"line_start\":1,\"line_end\":1,\"column_start\":12,\"column_end\":25,\"is_primary\":true,\"text\":[{\"text\":\"#![feature(error_in_core)]\",\"highlight_start\":12,\"highlight_end\":25}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"`#[warn(stable_features)]` on by default\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[33mwarning\\u001b[0m\\u001b[0m\\u001b[1m: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\\u001b[0m\\n\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/main.rs:1:12\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m1\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m#![feature(error_in_core)]\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m            \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33m^^^^^^^^^^^^^\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: `#[warn(stable_features)]` on by default\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_72/yuoo655/ext4_rs/target/debug/deps/libext4_rs-070d152dd572c065.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"1 warning emitted\",\"code\":null,\"level\":\"warning\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[33mwarning\\u001b[0m\\u001b[0m\\u001b[1m: 1 warning emitted\\u001b[0m\\n\\n\"}\n    Finished dev [unoptimized + debuginfo] target(s) in 0.73s\n    Scanning done\nWARNING: Dependency file was never scanned: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs\nWARNING: Dependency file was never scanned: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.5.0/src/public.rs\nWARNING: Dependency file was never scanned: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.5.0/src/external.rs\nWARNING: Dependency file was never scanned: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.5.0/src/parser.rs\nWARNING: Dependency file was never scanned: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.5.0/src/internal.rs\nWARNING: Dependency file was never scanned: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/serde.rs\nWARNING: Dependency file was never scanned: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/macros.rs\nWARNING: Dependency file was never scanned: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.5.0/src/traits.rs\nWARNING: Dependency file was never scanned: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/__private_api.rs\nWARNING: Dependency file was never scanned: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.5.0/src/iter.rs\nWARNING: Dependency file was never scanned: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.5.0/src/lib.rs\nerror: Found 11 warnings\n"
    }
  ]
}