{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.84.0-nightly (4f2f477fd 2024-10-23)",
          "commit_hash": "4f2f477fded0a47b21ed3f6aeddeafa5db8bf518",
          "commit_date": "2024-10-23",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.84.0-nightly",
          "llvm_version": "19.1.1"
        },
        "installed": [
          {
            "channel": "nightly-2024-10-24-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "x86_64-unknown-linux-gnu"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-linux-gnu",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1730525384869,
        "finish": 1730525388233,
        "duration_ms": 3363,
        "git_time": "2024-11-02 13:26:03 +0800",
        "git_sha": "a31ccb67f1c25c27a66dcdbb5848128191209c17"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Audit",
        "Mirai",
        "Rap",
        "Rudra",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Outdated",
        "Geiger",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "audit": [
          "Audit"
        ],
        "mirai": [
          "Mirai"
        ],
        "rap": [
          "Rap"
        ],
        "rudra": [
          "Rudra"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "outdated": [
          "Outdated"
        ],
        "geiger": [
          "Geiger"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "kern-crates",
        "repo": "rvfs"
      },
      {
        "user": "kern-crates",
        "repo": "safe-virtio-drivers"
      },
      {
        "user": "kern-crates",
        "repo": "scheduler"
      },
      {
        "user": "kern-crates",
        "repo": "sel4_common"
      },
      {
        "user": "kern-crates",
        "repo": "sel4_cspace"
      },
      {
        "user": "kern-crates",
        "repo": "sel4_ipc"
      },
      {
        "user": "kern-crates",
        "repo": "sel4_task"
      },
      {
        "user": "kern-crates",
        "repo": "sel4_vspace"
      }
    ],
    "packages": [
      {
        "name": "demo",
        "repo": {
          "repo_idx": 0,
          "user": "kern-crates",
          "repo": "rvfs"
        }
      },
      {
        "name": "devfs",
        "repo": {
          "repo_idx": 0,
          "user": "kern-crates",
          "repo": "rvfs"
        }
      },
      {
        "name": "dynfs",
        "repo": {
          "repo_idx": 0,
          "user": "kern-crates",
          "repo": "rvfs"
        }
      },
      {
        "name": "fat-vfs",
        "repo": {
          "repo_idx": 0,
          "user": "kern-crates",
          "repo": "rvfs"
        }
      },
      {
        "name": "lwext4-vfs",
        "repo": {
          "repo_idx": 0,
          "user": "kern-crates",
          "repo": "rvfs"
        }
      },
      {
        "name": "ramfs",
        "repo": {
          "repo_idx": 0,
          "user": "kern-crates",
          "repo": "rvfs"
        }
      },
      {
        "name": "unifs",
        "repo": {
          "repo_idx": 0,
          "user": "kern-crates",
          "repo": "rvfs"
        }
      },
      {
        "name": "vfscore",
        "repo": {
          "repo_idx": 0,
          "user": "kern-crates",
          "repo": "rvfs"
        }
      },
      {
        "name": "qemu",
        "repo": {
          "repo_idx": 1,
          "user": "kern-crates",
          "repo": "safe-virtio-drivers"
        }
      },
      {
        "name": "virtio-drivers",
        "repo": {
          "repo_idx": 1,
          "user": "kern-crates",
          "repo": "safe-virtio-drivers"
        }
      },
      {
        "name": "scheduler",
        "repo": {
          "repo_idx": 2,
          "user": "kern-crates",
          "repo": "scheduler"
        }
      },
      {
        "name": "sel4_common",
        "repo": {
          "repo_idx": 3,
          "user": "kern-crates",
          "repo": "sel4_common"
        }
      },
      {
        "name": "sel4_cspace",
        "repo": {
          "repo_idx": 4,
          "user": "kern-crates",
          "repo": "sel4_cspace"
        }
      },
      {
        "name": "sel4_ipc",
        "repo": {
          "repo_idx": 5,
          "user": "kern-crates",
          "repo": "sel4_ipc"
        }
      },
      {
        "name": "sel4_task",
        "repo": {
          "repo_idx": 6,
          "user": "kern-crates",
          "repo": "sel4_task"
        }
      },
      {
        "name": "sel4_vspace",
        "repo": {
          "repo_idx": 7,
          "user": "kern-crates",
          "repo": "sel4_vspace"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p demo -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 20945,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "audit",
      "cmd": "cargo audit",
      "count": 1,
      "duration_ms": 439,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 49,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 27979,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 1,
      "duration_ms": 23458,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 90,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 66,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 160,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p devfs -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 615,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "audit",
      "cmd": "cargo audit",
      "count": 1,
      "duration_ms": 268,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 48,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 655,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 1,
      "duration_ms": 8915,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 89,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 66,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 152,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p dynfs -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 195,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "audit",
      "cmd": "cargo audit",
      "count": 1,
      "duration_ms": 254,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 48,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 114,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 1,
      "duration_ms": 548,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 89,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 66,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 151,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p fat-vfs -- --emit=json",
      "count": 0,
      "duration_ms": 107,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 632,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "audit",
      "cmd": "cargo audit",
      "count": 1,
      "duration_ms": 238,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 49,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 715,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 1,
      "duration_ms": 1445,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 88,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 66,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 152,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p lwext4-vfs -- --emit=json",
      "count": 0,
      "duration_ms": 109,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 9,
      "duration_ms": 12504,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "audit",
      "cmd": "cargo audit",
      "count": 1,
      "duration_ms": 243,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 48,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 16319,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 1,
      "duration_ms": 13976,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 90,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 67,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 153,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p ramfs -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 2405,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "audit",
      "cmd": "cargo audit",
      "count": 1,
      "duration_ms": 251,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 49,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 3075,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 1,
      "duration_ms": 2749,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 92,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 66,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 152,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p unifs -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 111,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "audit",
      "cmd": "cargo audit",
      "count": 1,
      "duration_ms": 274,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 49,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 53,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 1,
      "duration_ms": 79,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 89,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 67,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 151,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p vfscore -- --emit=json",
      "count": 0,
      "duration_ms": 110,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 109,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "audit",
      "cmd": "cargo audit",
      "count": 1,
      "duration_ms": 241,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 49,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 53,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 78,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 90,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 67,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 150,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p qemu -- --emit=json",
      "count": 1,
      "duration_ms": 114,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64imac-unknown-none-elf --no-deps --message-format=json",
      "count": 47,
      "duration_ms": 4959,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "audit",
      "cmd": "cargo audit",
      "count": 1,
      "duration_ms": 263,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64imac-unknown-none-elf",
      "count": 1,
      "duration_ms": 3361,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 108,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 4959,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 3361,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p virtio-drivers -- --emit=json",
      "count": 0,
      "duration_ms": 117,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 54,
      "duration_ms": 1256,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 819,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 10717,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 261,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 95,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 129,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p scheduler -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p scheduler -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p scheduler -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p scheduler -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 248,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 224,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 219,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 227,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 46,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 196,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 161,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 159,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 160,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 755,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 250,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 87,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 62,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 62,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 63,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p sel4_common -- --emit=json",
      "count": 46,
      "duration_ms": 98,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 4905,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 46,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 6144,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 4614,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 245,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 63,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 119,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 4905,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 6144,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "cargo",
      "cmd": "VRITUAL=rap cargo",
      "count": 1,
      "duration_ms": 4614,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p sel4_cspace -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 10602,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 12486,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 104,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 10602,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 12486,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p sel4_ipc -- --emit=json",
      "count": 44,
      "duration_ms": 100,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 7996,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 47,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 9774,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 8032,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 244,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 63,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 161,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 7996,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9774,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "cargo",
      "cmd": "VRITUAL=rap cargo",
      "count": 1,
      "duration_ms": 8032,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p sel4_task -- --emit=json",
      "count": 111,
      "duration_ms": 107,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 7991,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 49,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 9814,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 7985,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 245,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 64,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 161,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 7991,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9814,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "cargo",
      "cmd": "VRITUAL=rap cargo",
      "count": 1,
      "duration_ms": 7985,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p sel4_vspace -- --emit=json",
      "count": 50,
      "duration_ms": 99,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 8191,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 50,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 9887,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 7934,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 251,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 63,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 144,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 8191,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9887,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "cargo",
      "cmd": "VRITUAL=rap cargo",
      "count": 1,
      "duration_ms": 7934,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 1,
      "file": "vfscore/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "vfscore/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "demo/src/extfs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: file opened with `create`, but `truncate` behavior not defined\n  --> demo/src/extfs.rs:87:10\n   |\n87 |         .create(true)\n   |          ^^^^^^^^^^^^- help: add: `.truncate(true)`\n   |\n   = help: if you intend to overwrite an existing file entirely, call `.truncate(true)`\n   = help: if you instead know that you may want to keep some parts of the old file, call `.truncate(false)`\n   = help: alternatively, use `.append(true)` to append to the file instead of overwriting it\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_open_options\n   = note: `#[warn(clippy::suspicious_open_options)]` on by default\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "/home/runner/check/batch_9/kern-crates/rvfs/Cargo.lock",
      "kind": "Audit",
      "raw": "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 664 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (79 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    └── demo 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 664,\n    \"last-commit\": \"f3460e5ed91658ab94fa41908cfa44991f9f4f02\",\n    \"last-updated\": \"2024-11-01T08:31:51-04:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 79\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.161\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.161\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
    },
    {
      "cmd_idx": 4,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-02T04:23:19Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:23:19Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-02T04:23:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:23:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-02T04:23:34Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:23:34Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-02T04:23:35Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:23:35Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-02T04:23:36Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:23:36Z WARN  lockbud::callbacks] crate env_logger contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-02T04:23:45Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/git/checkouts/lwext4-0e9cfbb4b2c6d701/7986f8f/lwext4-rs/src/fs.rs:93:57: 93:67 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/git/checkouts/lwext4-0e9cfbb4b2c6d701/7986f8f/lwext4-rs/src/fs.rs:96:5: 96:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/git/checkouts/lwext4-0e9cfbb4b2c6d701/7986f8f/lwext4-rs/src/fs.rs:104:57: 104:67 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/git/checkouts/lwext4-0e9cfbb4b2c6d701/7986f8f/lwext4-rs/src/fs.rs:107:5: 107:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/git/checkouts/lwext4-0e9cfbb4b2c6d701/7986f8f/lwext4-rs/src/fs.rs:78:58: 78:68 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/git/checkouts/lwext4-0e9cfbb4b2c6d701/7986f8f/lwext4-rs/src/fs.rs:81:5: 81:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-02T04:23:45Z WARN  lockbud::callbacks] crate demo contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 3 }"
    },
    {
      "cmd_idx": 5,
      "file": "[rap] Not supported to display yet.",
      "kind": "Rap",
      "raw": "pkg=demo, checker=Rap\ntoolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_9/kern-crates/rvfs/demo\ncmd=cargo +nightly-2024-06-30 rap -F -M\n\n04:24:27|RAP|WARN|: Dangling pointer detected in function \"parent\"!!! \n04:24:27|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!! \n04:24:27|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!!\n04:24:27|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!! \n04:24:27|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!!\n04:24:27|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!! \n04:24:27|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!!\n04:24:27|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n04:24:28|RAP|WARN|: Dangling pointer detected in function \"create\"!!! \n04:24:28|RAP|WARN|: Dangling pointer detected in function \"create\"!!!\n04:24:28|RAP|WARN|: Dangling pointer detected in function \"unlink\"!!! \n04:24:28|RAP|WARN|: Dangling pointer detected in function \"unlink\"!!!\n04:24:28|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n04:24:28|RAP|WARN|: Dangling pointer detected in function \"add_manually\"!!! \n04:24:28|RAP|WARN|: Dangling pointer detected in function \"add_manually\"!!!\n04:24:28|RAP|WARN|: Dangling pointer detected in function \"remove_manually\"!!! \n04:24:28|RAP|WARN|: Dangling pointer detected in function \"remove_manually\"!!!\n04:24:28|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n04:24:28|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n04:24:29|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n04:24:29|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n04:24:29|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n04:24:29|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n"
    },
    {
      "cmd_idx": 10,
      "file": "vfscore/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "vfscore/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "/home/runner/check/batch_9/kern-crates/rvfs/Cargo.lock",
      "kind": "Audit",
      "raw": "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 664 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (79 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    └── demo 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 664,\n    \"last-commit\": \"f3460e5ed91658ab94fa41908cfa44991f9f4f02\",\n    \"last-updated\": \"2024-11-01T08:31:51-04:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 79\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.161\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.161\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
    },
    {
      "cmd_idx": 13,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-02T04:23:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:23:46Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 14,
      "file": "[rap] Not supported to display yet.",
      "kind": "Rap",
      "raw": "pkg=devfs, checker=Rap\ntoolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_9/kern-crates/rvfs/devfs\ncmd=cargo +nightly-2024-06-30 rap -F -M\n\n04:24:39|RAP|WARN|: Dangling pointer detected in function \"parent\"!!! \n04:24:39|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!! \n04:24:39|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!!\n04:24:39|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!! \n04:24:39|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!!\n04:24:39|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!! \n04:24:39|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!!\n04:24:39|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n04:24:39|RAP|WARN|: Dangling pointer detected in function \"create\"!!! \n04:24:39|RAP|WARN|: Dangling pointer detected in function \"create\"!!!\n04:24:39|RAP|WARN|: Dangling pointer detected in function \"unlink\"!!! \n04:24:39|RAP|WARN|: Dangling pointer detected in function \"unlink\"!!!\n04:24:39|RAP|WARN|: Double free detected in function mount\n04:24:39|RAP|WARN|: Location: devfs/src/lib.rs:58:49: 58:50 (#0)\n04:24:39|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n"
    },
    {
      "cmd_idx": 19,
      "file": "vfscore/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "vfscore/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 20,
      "file": "/home/runner/check/batch_9/kern-crates/rvfs/Cargo.lock",
      "kind": "Audit",
      "raw": "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 664 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (79 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    └── demo 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 664,\n    \"last-commit\": \"f3460e5ed91658ab94fa41908cfa44991f9f4f02\",\n    \"last-updated\": \"2024-11-01T08:31:51-04:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 79\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.161\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.161\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
    },
    {
      "cmd_idx": 22,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-02T04:23:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:23:46Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 23,
      "file": "[rap] Not supported to display yet.",
      "kind": "Rap",
      "raw": "pkg=dynfs, checker=Rap\ntoolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_9/kern-crates/rvfs/dynfs\ncmd=cargo +nightly-2024-06-30 rap -F -M\n\n04:24:39|RAP|WARN|: Dangling pointer detected in function \"parent\"!!! \n04:24:39|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!! \n04:24:39|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!!\n04:24:39|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!! \n04:24:39|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!!\n04:24:39|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!! \n04:24:39|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!!\n04:24:39|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n04:24:40|RAP|WARN|: Dangling pointer detected in function \"add_manually\"!!! \n04:24:40|RAP|WARN|: Dangling pointer detected in function \"add_manually\"!!!\n04:24:40|RAP|WARN|: Dangling pointer detected in function \"remove_manually\"!!! \n04:24:40|RAP|WARN|: Dangling pointer detected in function \"remove_manually\"!!!\n04:24:40|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n"
    },
    {
      "cmd_idx": 28,
      "file": "vfscore/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 28,
      "file": "vfscore/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 29,
      "file": "/home/runner/check/batch_9/kern-crates/rvfs/Cargo.lock",
      "kind": "Audit",
      "raw": "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 664 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (79 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    └── demo 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 664,\n    \"last-commit\": \"f3460e5ed91658ab94fa41908cfa44991f9f4f02\",\n    \"last-updated\": \"2024-11-01T08:31:51-04:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 79\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.161\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.161\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
    },
    {
      "cmd_idx": 31,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-02T04:23:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:23:46Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 32,
      "file": "[rap] Not supported to display yet.",
      "kind": "Rap",
      "raw": "pkg=fat-vfs, checker=Rap\ntoolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_9/kern-crates/rvfs/fat-vfs\ncmd=cargo +nightly-2024-06-30 rap -F -M\n\n04:24:40|RAP|WARN|: Dangling pointer detected in function \"parent\"!!! \n04:24:40|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!! \n04:24:40|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!!\n04:24:40|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!! \n04:24:40|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!!\n04:24:40|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!! \n04:24:40|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!!\n04:24:40|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n04:24:41|RAP|WARN|: Double free detected in function new\n04:24:41|RAP|WARN|: Location: fat-vfs/src/fs.rs:116:51: 116:52 (#0)\n04:24:41|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n04:24:41|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n04:24:41|RAP|WARN|: Dangling pointer detected in function \"create\"!!! \n04:24:41|RAP|WARN|: Dangling pointer detected in function \"create\"!!!\n04:24:41|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!! \n04:24:41|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!!\n04:24:41|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n04:24:41|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n"
    },
    {
      "cmd_idx": 37,
      "file": "vfscore/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "vfscore/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "lwext4-vfs/src/blk.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `BlockDeviceConfig` which implements the `Copy` trait\n  --> lwext4-vfs/src/blk.rs:34:12\n   |\n34 |         Ok(self.config.clone())\n   |            ^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.config`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "lwext4-vfs/src/inode/dir.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n  --> lwext4-vfs/src/inode/dir.rs:81:9\n   |\n78 | /         let perm = file.metadata().map_or(VfsNodePerm::default_dir(), |meta| {\n79 | |             VfsNodePerm::from_bits_truncate(meta.permissions().mode() as u16)\n80 | |         });\n   | |___________- unnecessary `let` binding\n81 |           perm\n   |           ^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n   = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n   |\n78 ~         \n79 ~         file.metadata().map_or(VfsNodePerm::default_dir(), |meta| {\n80 +             VfsNodePerm::from_bits_truncate(meta.permissions().mode() as u16)\n81 +         })\n   |\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "lwext4-vfs/src/inode/dir.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: question mark operator is useless here\n   --> lwext4-vfs/src/inode/dir.rs:193:9\n    |\n193 |         Ok(self.lookup(name)?)\n    |         ^^^^^^^^^^^^^^^^^^^^^^ help: try removing question mark and `Ok()`: `self.lookup(name)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_question_mark\n    = note: `#[warn(clippy::needless_question_mark)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "lwext4-vfs/src/inode/dir.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the borrowed expression implements the required traits\n   --> lwext4-vfs/src/inode/dir.rs:191:25\n    |\n191 |         sb.fs.soft_link(&sy_name, &path).map_err(into_vfs)?;\n    |                         ^^^^^^^^ help: change this to: `sy_name`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n    = note: `#[warn(clippy::needless_borrows_for_generic_args)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "lwext4-vfs/src/inode/dir.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> lwext4-vfs/src/inode/dir.rs:227:21\n    |\n227 |                     return Ok(Arc::new(dir) as Arc<dyn VfsInode>);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n227 -                     return Ok(Arc::new(dir) as Arc<dyn VfsInode>);\n227 +                     Ok(Arc::new(dir) as Arc<dyn VfsInode>)\n    |\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "lwext4-vfs/src/inode/dir.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: comparison to empty slice\n   --> lwext4-vfs/src/inode/dir.rs:230:31\n    |\n230 |                     return if p_path == \"\" {\n    |                               ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `p_path.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n    = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "lwext4-vfs/src/inode/file.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n  --> lwext4-vfs/src/inode/file.rs:88:9\n   |\n85 | /         let perm = file.metadata().map_or(VfsNodePerm::default_dir(), |meta| {\n86 | |             VfsNodePerm::from_bits_truncate(meta.permissions().mode() as u16)\n87 | |         });\n   | |___________- unnecessary `let` binding\n88 |           perm\n   |           ^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n   |\n85 ~         \n86 ~         file.metadata().map_or(VfsNodePerm::default_dir(), |meta| {\n87 +             VfsNodePerm::from_bits_truncate(meta.permissions().mode() as u16)\n88 +         })\n   |\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "/home/runner/check/batch_9/kern-crates/rvfs/Cargo.lock",
      "kind": "Audit",
      "raw": "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 664 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (79 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    └── demo 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 664,\n    \"last-commit\": \"f3460e5ed91658ab94fa41908cfa44991f9f4f02\",\n    \"last-updated\": \"2024-11-01T08:31:51-04:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 79\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.161\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.161\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
    },
    {
      "cmd_idx": 40,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-02T04:23:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:23:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-02T04:23:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:23:46Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-02T04:23:54Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:23:54Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 41,
      "file": "[rap] Not supported to display yet.",
      "kind": "Rap",
      "raw": "pkg=lwext4-vfs, checker=Rap\ntoolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_9/kern-crates/rvfs/lwext4-vfs\ncmd=cargo +nightly-2024-06-30 rap -F -M\n\n04:24:39|RAP|WARN|: Dangling pointer detected in function \"parent\"!!! \n04:24:39|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!! \n04:24:39|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!!\n04:24:39|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!! \n04:24:39|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!!\n04:24:39|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!! \n04:24:39|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!!\n04:24:39|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n04:24:55|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n04:24:55|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n04:24:55|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n04:24:55|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n"
    },
    {
      "cmd_idx": 46,
      "file": "vfscore/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 46,
      "file": "vfscore/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 47,
      "file": "/home/runner/check/batch_9/kern-crates/rvfs/Cargo.lock",
      "kind": "Audit",
      "raw": "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 664 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (79 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    └── demo 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 664,\n    \"last-commit\": \"f3460e5ed91658ab94fa41908cfa44991f9f4f02\",\n    \"last-updated\": \"2024-11-01T08:31:51-04:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 79\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.161\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.161\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
    },
    {
      "cmd_idx": 49,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-02T04:23:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:23:46Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 50,
      "file": "[rap] Not supported to display yet.",
      "kind": "Rap",
      "raw": "pkg=ramfs, checker=Rap\ntoolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_9/kern-crates/rvfs/ramfs\ncmd=cargo +nightly-2024-06-30 rap -F -M\n\n04:24:39|RAP|WARN|: Dangling pointer detected in function \"parent\"!!! \n04:24:39|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!! \n04:24:39|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!!\n04:24:39|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!! \n04:24:39|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!!\n04:24:39|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!! \n04:24:39|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!!\n04:24:39|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n04:24:58|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n"
    },
    {
      "cmd_idx": 55,
      "file": "vfscore/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 55,
      "file": "vfscore/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 56,
      "file": "/home/runner/check/batch_9/kern-crates/rvfs/Cargo.lock",
      "kind": "Audit",
      "raw": "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 664 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (79 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    └── demo 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 664,\n    \"last-commit\": \"f3460e5ed91658ab94fa41908cfa44991f9f4f02\",\n    \"last-updated\": \"2024-11-01T08:31:51-04:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 79\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.161\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.161\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
    },
    {
      "cmd_idx": 58,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-02T04:23:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:23:46Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 59,
      "file": "[rap] Not supported to display yet.",
      "kind": "Rap",
      "raw": "pkg=unifs, checker=Rap\ntoolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_9/kern-crates/rvfs/unifs\ncmd=cargo +nightly-2024-06-30 rap -F -M\n\n04:24:39|RAP|WARN|: Dangling pointer detected in function \"parent\"!!! \n04:24:39|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!! \n04:24:39|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!!\n04:24:39|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!! \n04:24:39|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!!\n04:24:39|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!! \n04:24:39|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!!\n04:24:39|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n"
    },
    {
      "cmd_idx": 64,
      "file": "vfscore/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 64,
      "file": "vfscore/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 65,
      "file": "/home/runner/check/batch_9/kern-crates/rvfs/Cargo.lock",
      "kind": "Audit",
      "raw": "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 664 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (79 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    └── demo 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 664,\n    \"last-commit\": \"f3460e5ed91658ab94fa41908cfa44991f9f4f02\",\n    \"last-updated\": \"2024-11-01T08:31:51-04:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 79\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.161\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.161\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
    },
    {
      "cmd_idx": 67,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-02T04:23:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:23:46Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 72,
      "file": "src/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/kern-crates/safe-virtio-drivers/qemu/src/tcp.rs (original lines from 52 to 53)\n-    type RxToken<'a> = VirtioRxToken<T> where Self: 'a;\n-    type TxToken<'a> = VirtioTxToken<T> where Self: 'a;\n+    type RxToken<'a>\n+        = VirtioRxToken<T>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = VirtioTxToken<T>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/block/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: variants `GetLifetime`, `Discard`, `WriteZeroes`, and `SecureErase` are never constructed\n  --> virtio-drivers/src/device/block/ty.rs:71:5\n   |\n64 | pub enum BlkReqType {\n   |          ---------- variants in this enum\n...\n71 |     GetLifetime = 10,\n   |     ^^^^^^^^^^^\n72 |     Discard = 11,\n   |     ^^^^^^^\n73 |     WriteZeroes = 13,\n   |     ^^^^^^^^^^^\n74 |     SecureErase = 14,\n   |     ^^^^^^^^^^^\n   |\n   = note: `BlkReqType` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/block/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: variants `GetLifetime`, `Discard`, `WriteZeroes`, and `SecureErase` are never constructed\n  --> virtio-drivers/src/device/block/ty.rs:71:5\n   |\n64 | pub enum BlkReqType {\n   |          ---------- variants in this enum\n...\n71 |     GetLifetime = 10,\n   |     ^^^^^^^^^^^\n72 |     Discard = 11,\n   |     ^^^^^^^\n73 |     WriteZeroes = 13,\n   |     ^^^^^^^^^^^\n74 |     SecureErase = 14,\n   |     ^^^^^^^^^^^\n   |\n   = note: `BlkReqType` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/block/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: variants `GetLifetime`, `Discard`, `WriteZeroes`, and `SecureErase` are never constructed\n  --> virtio-drivers/src/device/block/ty.rs:71:5\n   |\n64 | pub enum BlkReqType {\n   |          ---------- variants in this enum\n...\n71 |     GetLifetime = 10,\n   |     ^^^^^^^^^^^\n72 |     Discard = 11,\n   |     ^^^^^^^\n73 |     WriteZeroes = 13,\n   |     ^^^^^^^^^^^\n74 |     SecureErase = 14,\n   |     ^^^^^^^^^^^\n   |\n   = note: `BlkReqType` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/block/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: variants `GetLifetime`, `Discard`, `WriteZeroes`, and `SecureErase` are never constructed\n  --> virtio-drivers/src/device/block/ty.rs:71:5\n   |\n64 | pub enum BlkReqType {\n   |          ---------- variants in this enum\n...\n71 |     GetLifetime = 10,\n   |     ^^^^^^^^^^^\n72 |     Discard = 11,\n   |     ^^^^^^^\n73 |     WriteZeroes = 13,\n   |     ^^^^^^^^^^^\n74 |     SecureErase = 14,\n   |     ^^^^^^^^^^^\n   |\n   = note: `BlkReqType` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/block/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: fields `size_max`, `seg_max`, `geometry`, `blk_size`, `topology`, and `opt_io_size` are never read\n   --> virtio-drivers/src/device/block/ty.rs:131:16\n    |\n128 | pub struct BlkConfig {\n    |            --------- fields in this struct\n...\n131 |     pub(super) size_max: ReadWrite<{ CONFIG_OFFSET + 0x8 }, u32>,\n    |                ^^^^^^^^\n132 |     pub(super) seg_max: ReadWrite<{ CONFIG_OFFSET + 0xc }, u32>,\n    |                ^^^^^^^\n...\n136 |     pub(super) geometry: ReadWrite<{ CONFIG_OFFSET + 0x10 }, u32>,\n    |                ^^^^^^^^\n137 |     pub(super) blk_size: ReadWrite<{ CONFIG_OFFSET + 0x14 }, u32>,\n    |                ^^^^^^^^\n...\n141 |     pub(super) topology: ReadWrite<{ CONFIG_OFFSET + 0x18 }, u32>,\n    |                ^^^^^^^^\n142 |     pub(super) opt_io_size: ReadWrite<{ CONFIG_OFFSET + 0x1c }, u32>,\n    |                ^^^^^^^^^^^\n    |\n    = note: `BlkConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/block/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: fields `size_max`, `seg_max`, `geometry`, `blk_size`, `topology`, and `opt_io_size` are never read\n   --> virtio-drivers/src/device/block/ty.rs:131:16\n    |\n128 | pub struct BlkConfig {\n    |            --------- fields in this struct\n...\n131 |     pub(super) size_max: ReadWrite<{ CONFIG_OFFSET + 0x8 }, u32>,\n    |                ^^^^^^^^\n132 |     pub(super) seg_max: ReadWrite<{ CONFIG_OFFSET + 0xc }, u32>,\n    |                ^^^^^^^\n...\n136 |     pub(super) geometry: ReadWrite<{ CONFIG_OFFSET + 0x10 }, u32>,\n    |                ^^^^^^^^\n137 |     pub(super) blk_size: ReadWrite<{ CONFIG_OFFSET + 0x14 }, u32>,\n    |                ^^^^^^^^\n...\n141 |     pub(super) topology: ReadWrite<{ CONFIG_OFFSET + 0x18 }, u32>,\n    |                ^^^^^^^^\n142 |     pub(super) opt_io_size: ReadWrite<{ CONFIG_OFFSET + 0x1c }, u32>,\n    |                ^^^^^^^^^^^\n    |\n    = note: `BlkConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/block/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: fields `size_max`, `seg_max`, `geometry`, `blk_size`, `topology`, and `opt_io_size` are never read\n   --> virtio-drivers/src/device/block/ty.rs:131:16\n    |\n128 | pub struct BlkConfig {\n    |            --------- fields in this struct\n...\n131 |     pub(super) size_max: ReadWrite<{ CONFIG_OFFSET + 0x8 }, u32>,\n    |                ^^^^^^^^\n132 |     pub(super) seg_max: ReadWrite<{ CONFIG_OFFSET + 0xc }, u32>,\n    |                ^^^^^^^\n...\n136 |     pub(super) geometry: ReadWrite<{ CONFIG_OFFSET + 0x10 }, u32>,\n    |                ^^^^^^^^\n137 |     pub(super) blk_size: ReadWrite<{ CONFIG_OFFSET + 0x14 }, u32>,\n    |                ^^^^^^^^\n...\n141 |     pub(super) topology: ReadWrite<{ CONFIG_OFFSET + 0x18 }, u32>,\n    |                ^^^^^^^^\n142 |     pub(super) opt_io_size: ReadWrite<{ CONFIG_OFFSET + 0x1c }, u32>,\n    |                ^^^^^^^^^^^\n    |\n    = note: `BlkConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/block/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: fields `size_max`, `seg_max`, `geometry`, `blk_size`, `topology`, and `opt_io_size` are never read\n   --> virtio-drivers/src/device/block/ty.rs:131:16\n    |\n128 | pub struct BlkConfig {\n    |            --------- fields in this struct\n...\n131 |     pub(super) size_max: ReadWrite<{ CONFIG_OFFSET + 0x8 }, u32>,\n    |                ^^^^^^^^\n132 |     pub(super) seg_max: ReadWrite<{ CONFIG_OFFSET + 0xc }, u32>,\n    |                ^^^^^^^\n...\n136 |     pub(super) geometry: ReadWrite<{ CONFIG_OFFSET + 0x10 }, u32>,\n    |                ^^^^^^^^\n137 |     pub(super) blk_size: ReadWrite<{ CONFIG_OFFSET + 0x14 }, u32>,\n    |                ^^^^^^^^\n...\n141 |     pub(super) topology: ReadWrite<{ CONFIG_OFFSET + 0x18 }, u32>,\n    |                ^^^^^^^^\n142 |     pub(super) opt_io_size: ReadWrite<{ CONFIG_OFFSET + 0x1c }, u32>,\n    |                ^^^^^^^^^^^\n    |\n    = note: `BlkConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/block/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: fields `size_max`, `seg_max`, `geometry`, `blk_size`, `topology`, and `opt_io_size` are never read\n   --> virtio-drivers/src/device/block/ty.rs:131:16\n    |\n128 | pub struct BlkConfig {\n    |            --------- fields in this struct\n...\n131 |     pub(super) size_max: ReadWrite<{ CONFIG_OFFSET + 0x8 }, u32>,\n    |                ^^^^^^^^\n132 |     pub(super) seg_max: ReadWrite<{ CONFIG_OFFSET + 0xc }, u32>,\n    |                ^^^^^^^\n...\n136 |     pub(super) geometry: ReadWrite<{ CONFIG_OFFSET + 0x10 }, u32>,\n    |                ^^^^^^^^\n137 |     pub(super) blk_size: ReadWrite<{ CONFIG_OFFSET + 0x14 }, u32>,\n    |                ^^^^^^^^\n...\n141 |     pub(super) topology: ReadWrite<{ CONFIG_OFFSET + 0x18 }, u32>,\n    |                ^^^^^^^^\n142 |     pub(super) opt_io_size: ReadWrite<{ CONFIG_OFFSET + 0x1c }, u32>,\n    |                ^^^^^^^^^^^\n    |\n    = note: `BlkConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/block/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: fields `size_max`, `seg_max`, `geometry`, `blk_size`, `topology`, and `opt_io_size` are never read\n   --> virtio-drivers/src/device/block/ty.rs:131:16\n    |\n128 | pub struct BlkConfig {\n    |            --------- fields in this struct\n...\n131 |     pub(super) size_max: ReadWrite<{ CONFIG_OFFSET + 0x8 }, u32>,\n    |                ^^^^^^^^\n132 |     pub(super) seg_max: ReadWrite<{ CONFIG_OFFSET + 0xc }, u32>,\n    |                ^^^^^^^\n...\n136 |     pub(super) geometry: ReadWrite<{ CONFIG_OFFSET + 0x10 }, u32>,\n    |                ^^^^^^^^\n137 |     pub(super) blk_size: ReadWrite<{ CONFIG_OFFSET + 0x14 }, u32>,\n    |                ^^^^^^^^\n...\n141 |     pub(super) topology: ReadWrite<{ CONFIG_OFFSET + 0x18 }, u32>,\n    |                ^^^^^^^^\n142 |     pub(super) opt_io_size: ReadWrite<{ CONFIG_OFFSET + 0x1c }, u32>,\n    |                ^^^^^^^^^^^\n    |\n    = note: `BlkConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/console/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: field `emerg_wr` is never read\n --> virtio-drivers/src/device/console/ty.rs:9:16\n  |\n5 | pub struct ConsoleConfig {\n  |            ------------- field in this struct\n...\n9 |     pub(super) emerg_wr: WriteOnly<{ CONFIG_OFFSET + 8 }, u32>,\n  |                ^^^^^^^^\n  |\n  = note: `ConsoleConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/gpu/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: field `config` is never read\n  --> virtio-drivers/src/device/gpu/mod.rs:35:5\n   |\n24 | pub struct VirtIOGpu<H: Hal<QUEUE_SIZE>, T: Transport> {\n   |            --------- field in this struct\n...\n35 |     config: GpuConfig,\n   |     ^^^^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `EVENT_DISPLAY` is never used\n  --> virtio-drivers/src/device/gpu/ty.rs:22:7\n   |\n22 | const EVENT_DISPLAY: u32 = 1 << 0;\n   |       ^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `GPU_FLAG_FENCE` is never used\n  --> virtio-drivers/src/device/gpu/ty.rs:87:7\n   |\n87 | const GPU_FLAG_FENCE: u32 = 1 << 0;\n   |       ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/input/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: field `status_queue` is never read\n  --> virtio-drivers/src/device/input/mod.rs:29:5\n   |\n26 | pub struct VirtIOInput<H: Hal<QUEUE_SIZE>, T: Transport> {\n   |            ----------- field in this struct\n...\n29 |     status_queue: VirtIoQueue<H, QUEUE_SIZE>,\n   |     ^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/input/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: struct `AbsInfo` is never constructed\n  --> virtio-drivers/src/device/input/ty.rs:34:8\n   |\n34 | struct AbsInfo {\n   |        ^^^^^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/input/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: struct `DevIDs` is never constructed\n  --> virtio-drivers/src/device/input/ty.rs:44:8\n   |\n44 | struct DevIDs {\n   |        ^^^^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/net/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `MAX_BUFFER_LEN` is never used\n --> virtio-drivers/src/device/net/ty.rs:9:11\n  |\n9 | pub const MAX_BUFFER_LEN: usize = 65535;\n  |           ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/net/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: associated constants `NONE`, `TCPV4`, `UDP`, `TCPV6`, and `ECN` are never used\n   --> virtio-drivers/src/device/net/ty.rs:172:11\n    |\n171 | impl GsoType {\n    | ------------ associated constants in this implementation\n172 |     const NONE: GsoType = GsoType(0);\n    |           ^^^^\n173 |     const TCPV4: GsoType = GsoType(1);\n    |           ^^^^^\n174 |     const UDP: GsoType = GsoType(3);\n    |           ^^^\n175 |     const TCPV6: GsoType = GsoType(4);\n    |           ^^^^^\n176 |     const ECN: GsoType = GsoType(0x80);\n    |           ^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/net/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: associated constants `NONE`, `TCPV4`, `UDP`, `TCPV6`, and `ECN` are never used\n   --> virtio-drivers/src/device/net/ty.rs:172:11\n    |\n171 | impl GsoType {\n    | ------------ associated constants in this implementation\n172 |     const NONE: GsoType = GsoType(0);\n    |           ^^^^\n173 |     const TCPV4: GsoType = GsoType(1);\n    |           ^^^^^\n174 |     const UDP: GsoType = GsoType(3);\n    |           ^^^\n175 |     const TCPV6: GsoType = GsoType(4);\n    |           ^^^^^\n176 |     const ECN: GsoType = GsoType(0x80);\n    |           ^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/net/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: associated constants `NONE`, `TCPV4`, `UDP`, `TCPV6`, and `ECN` are never used\n   --> virtio-drivers/src/device/net/ty.rs:172:11\n    |\n171 | impl GsoType {\n    | ------------ associated constants in this implementation\n172 |     const NONE: GsoType = GsoType(0);\n    |           ^^^^\n173 |     const TCPV4: GsoType = GsoType(1);\n    |           ^^^^^\n174 |     const UDP: GsoType = GsoType(3);\n    |           ^^^\n175 |     const TCPV6: GsoType = GsoType(4);\n    |           ^^^^^\n176 |     const ECN: GsoType = GsoType(0x80);\n    |           ^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/net/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: associated constants `NONE`, `TCPV4`, `UDP`, `TCPV6`, and `ECN` are never used\n   --> virtio-drivers/src/device/net/ty.rs:172:11\n    |\n171 | impl GsoType {\n    | ------------ associated constants in this implementation\n172 |     const NONE: GsoType = GsoType(0);\n    |           ^^^^\n173 |     const TCPV4: GsoType = GsoType(1);\n    |           ^^^^^\n174 |     const UDP: GsoType = GsoType(3);\n    |           ^^^\n175 |     const TCPV6: GsoType = GsoType(4);\n    |           ^^^^^\n176 |     const ECN: GsoType = GsoType(0x80);\n    |           ^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/device/net/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: associated constants `NONE`, `TCPV4`, `UDP`, `TCPV6`, and `ECN` are never used\n   --> virtio-drivers/src/device/net/ty.rs:172:11\n    |\n171 | impl GsoType {\n    | ------------ associated constants in this implementation\n172 |     const NONE: GsoType = GsoType(0);\n    |           ^^^^\n173 |     const TCPV4: GsoType = GsoType(1);\n    |           ^^^^^\n174 |     const UDP: GsoType = GsoType(3);\n    |           ^^^\n175 |     const TCPV6: GsoType = GsoType(4);\n    |           ^^^^^\n176 |     const ECN: GsoType = GsoType(0x80);\n    |           ^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/queue.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: field `queue_page` is never read\n  --> virtio-drivers/src/queue.rs:14:5\n   |\n13 | pub struct VirtIoQueue<H: Hal<SIZE>, const SIZE: usize> {\n   |            ----------- field in this struct\n14 |     queue_page: Box<dyn QueuePage<SIZE>>,\n   |     ^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/queue.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: associated constant `DESCRIPTOR_TABLE_OFFSET` is never used\n  --> virtio-drivers/src/queue.rs:27:11\n   |\n25 | impl<H: Hal<SIZE>, const SIZE: usize> VirtIoQueue<H, SIZE> {\n   | ---------------------------------------------------------- associated constant in this implementation\n26 |     const AVAIL_RING_OFFSET: usize = size_of::<Descriptor>() * SIZE;\n27 |     const DESCRIPTOR_TABLE_OFFSET: usize = 0;\n   |           ^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/queue.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: associated constant `INDIRECT` is never used\n   --> virtio-drivers/src/queue.rs:297:11\n    |\n293 | impl DescFlag {\n    | ------------- associated constant in this implementation\n...\n297 |     const INDIRECT: u16 = 4;\n    |           ^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "virtio-drivers/src/transport/mmio.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: field `config_generation` is never read\n   --> virtio-drivers/src/transport/mmio.rs:155:5\n    |\n17  | pub struct VirtIOHeader {\n    |            ------------ field in this struct\n...\n155 |     config_generation: ReadOnly<0xfc, u32>,\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: `VirtIOHeader` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "qemu/src/trap/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved imports `riscv::register::scause::Exception`, `riscv::register::scause::Interrupt`\n --> qemu/src/trap/mod.rs:9:14\n  |\n9 |     scause::{Exception, Interrupt, Trap},\n  |              ^^^^^^^^^  ^^^^^^^^^ no `Interrupt` in `register::scause`\n  |              |\n  |              no `Exception` in `register::scause`\n  |\n  = help: consider importing one of these items instead:\n          crate::trap::Trap::Exception\n          riscv::interrupt::Exception\n          riscv::interrupt::supervisor::Exception\n          riscv::register::mcause::Trap::Exception\n  = help: consider importing one of these items instead:\n          crate::trap::Trap::Interrupt\n          riscv::interrupt::Interrupt\n          riscv::interrupt::supervisor::Interrupt\n          riscv::register::mcause::Trap::Interrupt\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "qemu/src/trap/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved imports `riscv::register::scause::Exception`, `riscv::register::scause::Interrupt`\n --> qemu/src/trap/mod.rs:9:14\n  |\n9 |     scause::{Exception, Interrupt, Trap},\n  |              ^^^^^^^^^  ^^^^^^^^^ no `Interrupt` in `register::scause`\n  |              |\n  |              no `Exception` in `register::scause`\n  |\n  = help: consider importing one of these items instead:\n          crate::trap::Trap::Exception\n          riscv::interrupt::Exception\n          riscv::interrupt::supervisor::Exception\n          riscv::register::mcause::Trap::Exception\n  = help: consider importing one of these items instead:\n          crate::trap::Trap::Interrupt\n          riscv::interrupt::Interrupt\n          riscv::interrupt::supervisor::Interrupt\n          riscv::register::mcause::Trap::Interrupt\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "qemu/src/console.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `crate` references the macro call's crate\n --> qemu/src/console.rs:6:23\n  |\n6 |         let hard_id = crate::arch::hart_id();\n  |                       ^^^^^ help: to reference the macro definition's crate, use: `$crate`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#crate_in_macro_def\n  = note: `#[warn(clippy::crate_in_macro_def)]` on by default\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "qemu/src/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0787]: the `asm!` macro is not allowed in naked functions\n  --> qemu/src/boot.rs:31:9\n   |\n31 | /         asm!(\"\\\n32 | |         mv tp, a0\n33 | |         mv gp, a1\n34 | |         add t0, a0, 1\n...  |\n45 | |         options(noreturn)\n46 | |         );\n   | |_________^ consider using the `naked_asm!` macro instead\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "qemu/src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> qemu/src/main.rs:4:12\n  |\n4 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "qemu/src/boot.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of deprecated associated function `talc::Span::from_const_array`: Conversion from const references encourages UB. This will be removed in a future release.\n  --> qemu/src/boot.rs:19:46\n   |\n19 |     Talc::new(unsafe { ClaimOnOom::new(Span::from_const_array(core::ptr::addr_of!(KERNEL_HEAP))) })\n   |                                              ^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(deprecated)]` on by default\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "qemu/src/trap/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0107]: missing generics for enum `riscv::interrupt::Trap`\n  --> qemu/src/trap/mod.rs:64:22\n   |\n64 | impl TrapHandler for Trap {\n   |                      ^^^^ expected 2 generic arguments\n   |\nnote: enum defined here, with 2 generic parameters: `I`, `E`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/riscv-0.12.1/src/interrupt.rs:50:10\n   |\n50 | pub enum Trap<I, E> {\n   |          ^^^^ -  -\nhelp: add missing generic arguments\n   |\n64 | impl TrapHandler for Trap<I, E> {\n   |                          ++++++\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "qemu/src/trap/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0599]: no method named `do_kernel_handle` found for enum `riscv::interrupt::Trap` in the current scope\n  --> qemu/src/trap/mod.rs:57:11\n   |\n57 |     cause.do_kernel_handle(trap_context)\n   |           ^^^^^^^^^^^^^^^^ method not found in `Trap<usize, usize>`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\nnote: `trap::TrapHandler` defines an item `do_kernel_handle`, perhaps you need to implement it\n  --> qemu/src/trap/mod.rs:60:1\n   |\n60 | pub trait TrapHandler {\n   | ^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 73,
      "file": "qemu/src/old_test.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0599]: no method named `info` found for struct `TicketMutexGuard<'_, VirtIOConsole<HalImpl, MmioTransport>, KernelLockAction>` in the current scope\n   --> qemu/src/old_test.rs:213:24\n    |\n213 |     let info = console.info();\n    |                        ^^^^\n    |\n    = note: the full type name has been written to '/home/runner/check/batch_1/kern-crates/safe-virtio-drivers/target/riscv64imac-unknown-none-elf/debug/deps/qemu-f495deb14f5fb33e.long-type-14988241695974710749.txt'\n    = note: consider using `--verbose` to print the full type name to the console\nhelp: there is a method `into` with a similar name\n    |\n213 |     let info = console.into();\n    |                        ~~~~\n\n"
    },
    {
      "cmd_idx": 74,
      "file": "/home/runner/check/batch_1/kern-crates/safe-virtio-drivers/Cargo.lock",
      "kind": "Audit",
      "raw": "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 664 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (47 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.9\n    └── defmt 0.3.8\n        └── smoltcp 0.9.1\n            └── qemu 0.1.0\n\nwarning: 1 allowed warning found\n\n{\n  \"database\": {\n    \"advisory-count\": 664,\n    \"last-commit\": \"f3460e5ed91658ab94fa41908cfa44991f9f4f02\",\n    \"last-updated\": \"2024-11-01T08:31:51-04:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 47\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.89\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
    },
    {
      "cmd_idx": 75,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-02T03:49:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T03:49:37Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 77,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=qemu, checker=Clippy\n// toolchain=nightly, target=riscv64imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/kern-crates/safe-virtio-drivers/qemu\n// cmd=cargo clippy --target riscv64imac-unknown-none-elf --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.89\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.4.0\n    Checking scopeguard v1.2.0\n   Compiling paste v1.0.15\n    Checking byteorder v1.5.0\n    Checking log v0.4.22\n   Compiling riscv v0.12.1\n    Checking bitflags v2.6.0\n    Checking critical-section v1.2.0\n    Checking riscv-pac v0.2.0\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n   Compiling lock_api v0.4.12\n    Checking virtio-drivers v0.1.0 (/home/runner/check/batch_1/kern-crates/safe-virtio-drivers/virtio-drivers)\n   Compiling quote v1.0.37\n   Compiling syn v2.0.86\n    Checking fdt v0.1.5\n    Checking spin v0.9.8\n    Checking talc v4.4.2\n    Checking kernel-sync v0.1.1 (https://github.com/os-module/kernel-sync.git#4483c08e)\n    Checking plic v0.1.0 (https://github.com/os-module/plic#1a714257)\n   Compiling zerocopy-derive v0.7.35\n   Compiling enumn v0.1.14\n   Compiling riscv-macros v0.1.0\n    Checking zerocopy v0.7.35\n    Checking virtio-drivers v0.7.5 (https://github.com/rcore-os/virtio-drivers#c0807ba2)\n    Checking qemu v0.1.0 (/home/runner/check/batch_1/kern-crates/safe-virtio-drivers/qemu)\nerror: could not compile `qemu` (bin \"qemu\") due to 5 previous errors; 3 warnings emitted\n"
    },
    {
      "cmd_idx": 78,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=qemu, checker=Lockbud\n// toolchain=nightly, target=riscv64imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/kern-crates/safe-virtio-drivers/qemu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64imac-unknown-none-elf\n   Compiling proc-macro2 v1.0.89\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.4.0\n   Compiling scopeguard v1.2.0\n   Compiling paste v1.0.15\n   Compiling byteorder v1.5.0\n   Compiling log v0.4.22\n   Compiling bitflags v2.6.0\n[2024-11-02T03:49:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T03:49:37Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling riscv v0.12.1\n   Compiling critical-section v1.2.0\n   Compiling riscv-pac v0.2.0\n   Compiling embedded-hal v1.0.0\n   Compiling lock_api v0.4.12\n   Compiling quote v1.0.37\n   Compiling syn v2.0.86\n   Compiling embedded-io v0.6.1\n   Compiling kernel-sync v0.1.1 (https://github.com/os-module/kernel-sync.git#4483c08e)\n   Compiling spin v0.9.8\n   Compiling talc v4.4.2\n   Compiling virtio-drivers v0.1.0 (/home/runner/check/batch_1/kern-crates/safe-virtio-drivers/virtio-drivers)\nerror[E0658]: the `#[expect]` attribute is an experimental feature\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/talc-4.4.2/src/span.rs:101:9\n    |\n101 |         #[expect(deprecated)] // This impl is 'deprecated' too.\n    |         ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #54503 <https://github.com/rust-lang/rust/issues/54503> for more information\n    = help: add `#![feature(lint_reasons)]` to the crate attributes to enable\n    = note: this compiler was built on 2024-05-20; consider upgrading it if it is out of date\n\n   Compiling fdt v0.1.5\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `talc` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nwarning: variants `GetLifetime`, `Discard`, `WriteZeroes`, and `SecureErase` are never constructed\n  --> virtio-drivers/src/device/block/ty.rs:71:5\n   |\n64 | pub enum BlkReqType {\n   |          ---------- variants in this enum\n...\n71 |     GetLifetime = 10,\n   |     ^^^^^^^^^^^\n72 |     Discard = 11,\n   |     ^^^^^^^\n73 |     WriteZeroes = 13,\n   |     ^^^^^^^^^^^\n74 |     SecureErase = 14,\n   |     ^^^^^^^^^^^\n   |\n   = note: `BlkReqType` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\n\nwarning: fields `size_max`, `seg_max`, `geometry`, `blk_size`, `topology`, and `opt_io_size` are never read\n   --> virtio-drivers/src/device/block/ty.rs:131:16\n    |\n128 | pub struct BlkConfig {\n    |            --------- fields in this struct\n...\n131 |     pub(super) size_max: ReadWrite<{ CONFIG_OFFSET + 0x8 }, u32>,\n    |                ^^^^^^^^\n132 |     pub(super) seg_max: ReadWrite<{ CONFIG_OFFSET + 0xc }, u32>,\n    |                ^^^^^^^\n...\n136 |     pub(super) geometry: ReadWrite<{ CONFIG_OFFSET + 0x10 }, u32>,\n    |                ^^^^^^^^\n137 |     pub(super) blk_size: ReadWrite<{ CONFIG_OFFSET + 0x14 }, u32>,\n    |                ^^^^^^^^\n...\n141 |     pub(super) topology: ReadWrite<{ CONFIG_OFFSET + 0x18 }, u32>,\n    |                ^^^^^^^^\n142 |     pub(super) opt_io_size: ReadWrite<{ CONFIG_OFFSET + 0x1c }, u32>,\n    |                ^^^^^^^^^^^\n    |\n    = note: `BlkConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\nwarning: field `emerg_wr` is never read\n --> virtio-drivers/src/device/console/ty.rs:9:16\n  |\n5 | pub struct ConsoleConfig {\n  |            ------------- field in this struct\n...\n9 |     pub(super) emerg_wr: WriteOnly<{ CONFIG_OFFSET + 8 }, u32>,\n  |                ^^^^^^^^\n  |\n  = note: `ConsoleConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\nwarning: field `config` is never read\n  --> virtio-drivers/src/device/gpu/mod.rs:35:5\n   |\n24 | pub struct VirtIOGpu<H: Hal<QUEUE_SIZE>, T: Transport> {\n   |            --------- field in this struct\n...\n35 |     config: GpuConfig,\n   |     ^^^^^^\n\nwarning: constant `EVENT_DISPLAY` is never used\n  --> virtio-drivers/src/device/gpu/ty.rs:22:7\n   |\n22 | const EVENT_DISPLAY: u32 = 1 << 0;\n   |       ^^^^^^^^^^^^^\n\nwarning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: constant `GPU_FLAG_FENCE` is never used\n  --> virtio-drivers/src/device/gpu/ty.rs:87:7\n   |\n87 | const GPU_FLAG_FENCE: u32 = 1 << 0;\n   |       ^^^^^^^^^^^^^^\n\nwarning: field `status_queue` is never read\n  --> virtio-drivers/src/device/input/mod.rs:29:5\n   |\n26 | pub struct VirtIOInput<H: Hal<QUEUE_SIZE>, T: Transport> {\n   |            ----------- field in this struct\n...\n29 |     status_queue: VirtIoQueue<H, QUEUE_SIZE>,\n   |     ^^^^^^^^^^^^\n\nwarning: struct `AbsInfo` is never constructed\n  --> virtio-drivers/src/device/input/ty.rs:34:8\n   |\n34 | struct AbsInfo {\n   |        ^^^^^^^\n\nwarning: struct `DevIDs` is never constructed\n  --> virtio-drivers/src/device/input/ty.rs:44:8\n   |\n44 | struct DevIDs {\n   |        ^^^^^^\n\nwarning: constant `MAX_BUFFER_LEN` is never used\n --> virtio-drivers/src/device/net/ty.rs:9:11\n  |\n9 | pub const MAX_BUFFER_LEN: usize = 65535;\n  |           ^^^^^^^^^^^^^^\n\nwarning: associated constants `NONE`, `TCPV4`, `UDP`, `TCPV6`, and `ECN` are never used\n   --> virtio-drivers/src/device/net/ty.rs:172:11\n    |\n171 | impl GsoType {\n    | ------------ associated constants in this implementation\n172 |     const NONE: GsoType = GsoType(0);\n    |           ^^^^\n173 |     const TCPV4: GsoType = GsoType(1);\n    |           ^^^^^\n174 |     const UDP: GsoType = GsoType(3);\n    |           ^^^\n175 |     const TCPV6: GsoType = GsoType(4);\n    |           ^^^^^\n176 |     const ECN: GsoType = GsoType(0x80);\n    |           ^^^\n\nwarning: field `queue_page` is never read\n  --> virtio-drivers/src/queue.rs:14:5\n   |\n13 | pub struct VirtIoQueue<H: Hal<SIZE>, const SIZE: usize> {\n   |            ----------- field in this struct\n14 |     queue_page: Box<dyn QueuePage<SIZE>>,\n   |     ^^^^^^^^^^\n\nwarning: associated constant `DESCRIPTOR_TABLE_OFFSET` is never used\n  --> virtio-drivers/src/queue.rs:27:11\n   |\n25 | impl<H: Hal<SIZE>, const SIZE: usize> VirtIoQueue<H, SIZE> {\n   | ---------------------------------------------------------- associated constant in this implementation\n26 |     const AVAIL_RING_OFFSET: usize = size_of::<Descriptor>() * SIZE;\n27 |     const DESCRIPTOR_TABLE_OFFSET: usize = 0;\n   |           ^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: associated constant `INDIRECT` is never used\n   --> virtio-drivers/src/queue.rs:297:11\n    |\n293 | impl DescFlag {\n    | ------------- associated constant in this implementation\n...\n297 |     const INDIRECT: u16 = 4;\n    |           ^^^^^^^^\n\nwarning: field `config_generation` is never read\n   --> virtio-drivers/src/transport/mmio.rs:155:5\n    |\n17  | pub struct VirtIOHeader {\n    |            ------------ field in this struct\n...\n155 |     config_generation: ReadOnly<0xfc, u32>,\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: `VirtIOHeader` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\nwarning: `virtio-drivers` (lib) generated 16 warnings\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/block/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: variants `GetLifetime`, `Discard`, `WriteZeroes`, and `SecureErase` are never constructed\n  --> virtio-drivers/src/device/block/ty.rs:71:5\n   |\n64 | pub enum BlkReqType {\n   |          ---------- variants in this enum\n...\n71 |     GetLifetime = 10,\n   |     ^^^^^^^^^^^\n72 |     Discard = 11,\n   |     ^^^^^^^\n73 |     WriteZeroes = 13,\n   |     ^^^^^^^^^^^\n74 |     SecureErase = 14,\n   |     ^^^^^^^^^^^\n   |\n   = note: `BlkReqType` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/block/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: variants `GetLifetime`, `Discard`, `WriteZeroes`, and `SecureErase` are never constructed\n  --> virtio-drivers/src/device/block/ty.rs:71:5\n   |\n64 | pub enum BlkReqType {\n   |          ---------- variants in this enum\n...\n71 |     GetLifetime = 10,\n   |     ^^^^^^^^^^^\n72 |     Discard = 11,\n   |     ^^^^^^^\n73 |     WriteZeroes = 13,\n   |     ^^^^^^^^^^^\n74 |     SecureErase = 14,\n   |     ^^^^^^^^^^^\n   |\n   = note: `BlkReqType` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/block/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: variants `GetLifetime`, `Discard`, `WriteZeroes`, and `SecureErase` are never constructed\n  --> virtio-drivers/src/device/block/ty.rs:71:5\n   |\n64 | pub enum BlkReqType {\n   |          ---------- variants in this enum\n...\n71 |     GetLifetime = 10,\n   |     ^^^^^^^^^^^\n72 |     Discard = 11,\n   |     ^^^^^^^\n73 |     WriteZeroes = 13,\n   |     ^^^^^^^^^^^\n74 |     SecureErase = 14,\n   |     ^^^^^^^^^^^\n   |\n   = note: `BlkReqType` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/block/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: variants `GetLifetime`, `Discard`, `WriteZeroes`, and `SecureErase` are never constructed\n  --> virtio-drivers/src/device/block/ty.rs:71:5\n   |\n64 | pub enum BlkReqType {\n   |          ---------- variants in this enum\n...\n71 |     GetLifetime = 10,\n   |     ^^^^^^^^^^^\n72 |     Discard = 11,\n   |     ^^^^^^^\n73 |     WriteZeroes = 13,\n   |     ^^^^^^^^^^^\n74 |     SecureErase = 14,\n   |     ^^^^^^^^^^^\n   |\n   = note: `BlkReqType` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/block/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: fields `size_max`, `seg_max`, `geometry`, `blk_size`, `topology`, and `opt_io_size` are never read\n   --> virtio-drivers/src/device/block/ty.rs:131:16\n    |\n128 | pub struct BlkConfig {\n    |            --------- fields in this struct\n...\n131 |     pub(super) size_max: ReadWrite<{ CONFIG_OFFSET + 0x8 }, u32>,\n    |                ^^^^^^^^\n132 |     pub(super) seg_max: ReadWrite<{ CONFIG_OFFSET + 0xc }, u32>,\n    |                ^^^^^^^\n...\n136 |     pub(super) geometry: ReadWrite<{ CONFIG_OFFSET + 0x10 }, u32>,\n    |                ^^^^^^^^\n137 |     pub(super) blk_size: ReadWrite<{ CONFIG_OFFSET + 0x14 }, u32>,\n    |                ^^^^^^^^\n...\n141 |     pub(super) topology: ReadWrite<{ CONFIG_OFFSET + 0x18 }, u32>,\n    |                ^^^^^^^^\n142 |     pub(super) opt_io_size: ReadWrite<{ CONFIG_OFFSET + 0x1c }, u32>,\n    |                ^^^^^^^^^^^\n    |\n    = note: `BlkConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/block/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: fields `size_max`, `seg_max`, `geometry`, `blk_size`, `topology`, and `opt_io_size` are never read\n   --> virtio-drivers/src/device/block/ty.rs:131:16\n    |\n128 | pub struct BlkConfig {\n    |            --------- fields in this struct\n...\n131 |     pub(super) size_max: ReadWrite<{ CONFIG_OFFSET + 0x8 }, u32>,\n    |                ^^^^^^^^\n132 |     pub(super) seg_max: ReadWrite<{ CONFIG_OFFSET + 0xc }, u32>,\n    |                ^^^^^^^\n...\n136 |     pub(super) geometry: ReadWrite<{ CONFIG_OFFSET + 0x10 }, u32>,\n    |                ^^^^^^^^\n137 |     pub(super) blk_size: ReadWrite<{ CONFIG_OFFSET + 0x14 }, u32>,\n    |                ^^^^^^^^\n...\n141 |     pub(super) topology: ReadWrite<{ CONFIG_OFFSET + 0x18 }, u32>,\n    |                ^^^^^^^^\n142 |     pub(super) opt_io_size: ReadWrite<{ CONFIG_OFFSET + 0x1c }, u32>,\n    |                ^^^^^^^^^^^\n    |\n    = note: `BlkConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/block/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: fields `size_max`, `seg_max`, `geometry`, `blk_size`, `topology`, and `opt_io_size` are never read\n   --> virtio-drivers/src/device/block/ty.rs:131:16\n    |\n128 | pub struct BlkConfig {\n    |            --------- fields in this struct\n...\n131 |     pub(super) size_max: ReadWrite<{ CONFIG_OFFSET + 0x8 }, u32>,\n    |                ^^^^^^^^\n132 |     pub(super) seg_max: ReadWrite<{ CONFIG_OFFSET + 0xc }, u32>,\n    |                ^^^^^^^\n...\n136 |     pub(super) geometry: ReadWrite<{ CONFIG_OFFSET + 0x10 }, u32>,\n    |                ^^^^^^^^\n137 |     pub(super) blk_size: ReadWrite<{ CONFIG_OFFSET + 0x14 }, u32>,\n    |                ^^^^^^^^\n...\n141 |     pub(super) topology: ReadWrite<{ CONFIG_OFFSET + 0x18 }, u32>,\n    |                ^^^^^^^^\n142 |     pub(super) opt_io_size: ReadWrite<{ CONFIG_OFFSET + 0x1c }, u32>,\n    |                ^^^^^^^^^^^\n    |\n    = note: `BlkConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/block/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: fields `size_max`, `seg_max`, `geometry`, `blk_size`, `topology`, and `opt_io_size` are never read\n   --> virtio-drivers/src/device/block/ty.rs:131:16\n    |\n128 | pub struct BlkConfig {\n    |            --------- fields in this struct\n...\n131 |     pub(super) size_max: ReadWrite<{ CONFIG_OFFSET + 0x8 }, u32>,\n    |                ^^^^^^^^\n132 |     pub(super) seg_max: ReadWrite<{ CONFIG_OFFSET + 0xc }, u32>,\n    |                ^^^^^^^\n...\n136 |     pub(super) geometry: ReadWrite<{ CONFIG_OFFSET + 0x10 }, u32>,\n    |                ^^^^^^^^\n137 |     pub(super) blk_size: ReadWrite<{ CONFIG_OFFSET + 0x14 }, u32>,\n    |                ^^^^^^^^\n...\n141 |     pub(super) topology: ReadWrite<{ CONFIG_OFFSET + 0x18 }, u32>,\n    |                ^^^^^^^^\n142 |     pub(super) opt_io_size: ReadWrite<{ CONFIG_OFFSET + 0x1c }, u32>,\n    |                ^^^^^^^^^^^\n    |\n    = note: `BlkConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/block/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: fields `size_max`, `seg_max`, `geometry`, `blk_size`, `topology`, and `opt_io_size` are never read\n   --> virtio-drivers/src/device/block/ty.rs:131:16\n    |\n128 | pub struct BlkConfig {\n    |            --------- fields in this struct\n...\n131 |     pub(super) size_max: ReadWrite<{ CONFIG_OFFSET + 0x8 }, u32>,\n    |                ^^^^^^^^\n132 |     pub(super) seg_max: ReadWrite<{ CONFIG_OFFSET + 0xc }, u32>,\n    |                ^^^^^^^\n...\n136 |     pub(super) geometry: ReadWrite<{ CONFIG_OFFSET + 0x10 }, u32>,\n    |                ^^^^^^^^\n137 |     pub(super) blk_size: ReadWrite<{ CONFIG_OFFSET + 0x14 }, u32>,\n    |                ^^^^^^^^\n...\n141 |     pub(super) topology: ReadWrite<{ CONFIG_OFFSET + 0x18 }, u32>,\n    |                ^^^^^^^^\n142 |     pub(super) opt_io_size: ReadWrite<{ CONFIG_OFFSET + 0x1c }, u32>,\n    |                ^^^^^^^^^^^\n    |\n    = note: `BlkConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/block/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: fields `size_max`, `seg_max`, `geometry`, `blk_size`, `topology`, and `opt_io_size` are never read\n   --> virtio-drivers/src/device/block/ty.rs:131:16\n    |\n128 | pub struct BlkConfig {\n    |            --------- fields in this struct\n...\n131 |     pub(super) size_max: ReadWrite<{ CONFIG_OFFSET + 0x8 }, u32>,\n    |                ^^^^^^^^\n132 |     pub(super) seg_max: ReadWrite<{ CONFIG_OFFSET + 0xc }, u32>,\n    |                ^^^^^^^\n...\n136 |     pub(super) geometry: ReadWrite<{ CONFIG_OFFSET + 0x10 }, u32>,\n    |                ^^^^^^^^\n137 |     pub(super) blk_size: ReadWrite<{ CONFIG_OFFSET + 0x14 }, u32>,\n    |                ^^^^^^^^\n...\n141 |     pub(super) topology: ReadWrite<{ CONFIG_OFFSET + 0x18 }, u32>,\n    |                ^^^^^^^^\n142 |     pub(super) opt_io_size: ReadWrite<{ CONFIG_OFFSET + 0x1c }, u32>,\n    |                ^^^^^^^^^^^\n    |\n    = note: `BlkConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/console/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: field `emerg_wr` is never read\n --> virtio-drivers/src/device/console/ty.rs:9:16\n  |\n5 | pub struct ConsoleConfig {\n  |            ------------- field in this struct\n...\n9 |     pub(super) emerg_wr: WriteOnly<{ CONFIG_OFFSET + 8 }, u32>,\n  |                ^^^^^^^^\n  |\n  = note: `ConsoleConfig` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/gpu/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: field `config` is never read\n  --> virtio-drivers/src/device/gpu/mod.rs:35:5\n   |\n24 | pub struct VirtIOGpu<H: Hal<QUEUE_SIZE>, T: Transport> {\n   |            --------- field in this struct\n...\n35 |     config: GpuConfig,\n   |     ^^^^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `EVENT_DISPLAY` is never used\n  --> virtio-drivers/src/device/gpu/ty.rs:22:7\n   |\n22 | const EVENT_DISPLAY: u32 = 1 << 0;\n   |       ^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple associated constants are never used\n  --> virtio-drivers/src/device/gpu/ty.rs:57:22\n   |\n54 | impl Command {\n   | ------------ associated constants in this implementation\n...\n57 |     pub(super) const RESOURCE_UNREF: Command = Command(0x102);\n   |                      ^^^^^^^^^^^^^^\n...\n62 |     pub(super) const RESOURCE_DETACH_BACKING: Command = Command(0x107);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n63 |     pub(super) const GET_CAPSET_INFO: Command = Command(0x108);\n   |                      ^^^^^^^^^^^^^^^\n64 |     pub(super) const GET_CAPSET: Command = Command(0x109);\n   |                      ^^^^^^^^^^\n65 |     pub(super) const GET_EDID: Command = Command(0x10a);\n   |                      ^^^^^^^^\n...\n72 |     pub(super) const OK_CAPSET_INFO: Command = Command(0x1102);\n   |                      ^^^^^^^^^^^^^^\n73 |     pub(super) const OK_CAPSET: Command = Command(0x1103);\n   |                      ^^^^^^^^^\n74 |     pub(super) const OK_EDID: Command = Command(0x1104);\n   |                      ^^^^^^^\n75 |\n76 |     pub(super) const ERR_UNSPEC: Command = Command(0x1200);\n   |                      ^^^^^^^^^^\n77 |     pub(super) const ERR_OUT_OF_MEMORY: Command = Command(0x1201);\n   |                      ^^^^^^^^^^^^^^^^^\n78 |     pub(super) const ERR_INVALID_SCANOUT_ID: Command = Command(0x1202);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `GPU_FLAG_FENCE` is never used\n  --> virtio-drivers/src/device/gpu/ty.rs:87:7\n   |\n87 | const GPU_FLAG_FENCE: u32 = 1 << 0;\n   |       ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/input/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: field `status_queue` is never read\n  --> virtio-drivers/src/device/input/mod.rs:29:5\n   |\n26 | pub struct VirtIOInput<H: Hal<QUEUE_SIZE>, T: Transport> {\n   |            ----------- field in this struct\n...\n29 |     status_queue: VirtIoQueue<H, QUEUE_SIZE>,\n   |     ^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/input/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: struct `AbsInfo` is never constructed\n  --> virtio-drivers/src/device/input/ty.rs:34:8\n   |\n34 | struct AbsInfo {\n   |        ^^^^^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/input/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: struct `DevIDs` is never constructed\n  --> virtio-drivers/src/device/input/ty.rs:44:8\n   |\n44 | struct DevIDs {\n   |        ^^^^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/net/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `MAX_BUFFER_LEN` is never used\n --> virtio-drivers/src/device/net/ty.rs:9:11\n  |\n9 | pub const MAX_BUFFER_LEN: usize = 65535;\n  |           ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/net/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: associated constants `NONE`, `TCPV4`, `UDP`, `TCPV6`, and `ECN` are never used\n   --> virtio-drivers/src/device/net/ty.rs:172:11\n    |\n171 | impl GsoType {\n    | ------------ associated constants in this implementation\n172 |     const NONE: GsoType = GsoType(0);\n    |           ^^^^\n173 |     const TCPV4: GsoType = GsoType(1);\n    |           ^^^^^\n174 |     const UDP: GsoType = GsoType(3);\n    |           ^^^\n175 |     const TCPV6: GsoType = GsoType(4);\n    |           ^^^^^\n176 |     const ECN: GsoType = GsoType(0x80);\n    |           ^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/net/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: associated constants `NONE`, `TCPV4`, `UDP`, `TCPV6`, and `ECN` are never used\n   --> virtio-drivers/src/device/net/ty.rs:172:11\n    |\n171 | impl GsoType {\n    | ------------ associated constants in this implementation\n172 |     const NONE: GsoType = GsoType(0);\n    |           ^^^^\n173 |     const TCPV4: GsoType = GsoType(1);\n    |           ^^^^^\n174 |     const UDP: GsoType = GsoType(3);\n    |           ^^^\n175 |     const TCPV6: GsoType = GsoType(4);\n    |           ^^^^^\n176 |     const ECN: GsoType = GsoType(0x80);\n    |           ^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/net/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: associated constants `NONE`, `TCPV4`, `UDP`, `TCPV6`, and `ECN` are never used\n   --> virtio-drivers/src/device/net/ty.rs:172:11\n    |\n171 | impl GsoType {\n    | ------------ associated constants in this implementation\n172 |     const NONE: GsoType = GsoType(0);\n    |           ^^^^\n173 |     const TCPV4: GsoType = GsoType(1);\n    |           ^^^^^\n174 |     const UDP: GsoType = GsoType(3);\n    |           ^^^\n175 |     const TCPV6: GsoType = GsoType(4);\n    |           ^^^^^\n176 |     const ECN: GsoType = GsoType(0x80);\n    |           ^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/net/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: associated constants `NONE`, `TCPV4`, `UDP`, `TCPV6`, and `ECN` are never used\n   --> virtio-drivers/src/device/net/ty.rs:172:11\n    |\n171 | impl GsoType {\n    | ------------ associated constants in this implementation\n172 |     const NONE: GsoType = GsoType(0);\n    |           ^^^^\n173 |     const TCPV4: GsoType = GsoType(1);\n    |           ^^^^^\n174 |     const UDP: GsoType = GsoType(3);\n    |           ^^^\n175 |     const TCPV6: GsoType = GsoType(4);\n    |           ^^^^^\n176 |     const ECN: GsoType = GsoType(0x80);\n    |           ^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/net/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: associated constants `NONE`, `TCPV4`, `UDP`, `TCPV6`, and `ECN` are never used\n   --> virtio-drivers/src/device/net/ty.rs:172:11\n    |\n171 | impl GsoType {\n    | ------------ associated constants in this implementation\n172 |     const NONE: GsoType = GsoType(0);\n    |           ^^^^\n173 |     const TCPV4: GsoType = GsoType(1);\n    |           ^^^^^\n174 |     const UDP: GsoType = GsoType(3);\n    |           ^^^\n175 |     const TCPV6: GsoType = GsoType(4);\n    |           ^^^^^\n176 |     const ECN: GsoType = GsoType(0x80);\n    |           ^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/queue.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: field `queue_page` is never read\n  --> virtio-drivers/src/queue.rs:14:5\n   |\n13 | pub struct VirtIoQueue<H: Hal<SIZE>, const SIZE: usize> {\n   |            ----------- field in this struct\n14 |     queue_page: Box<dyn QueuePage<SIZE>>,\n   |     ^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/queue.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: associated constant `DESCRIPTOR_TABLE_OFFSET` is never used\n  --> virtio-drivers/src/queue.rs:27:11\n   |\n25 | impl<H: Hal<SIZE>, const SIZE: usize> VirtIoQueue<H, SIZE> {\n   | ---------------------------------------------------------- associated constant in this implementation\n26 |     const AVAIL_RING_OFFSET: usize = size_of::<Descriptor>() * SIZE;\n27 |     const DESCRIPTOR_TABLE_OFFSET: usize = 0;\n   |           ^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/queue.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: associated constant `INDIRECT` is never used\n   --> virtio-drivers/src/queue.rs:297:11\n    |\n293 | impl DescFlag {\n    | ------------- associated constant in this implementation\n...\n297 |     const INDIRECT: u16 = 4;\n    |           ^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/transport/mmio.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: field `config_generation` is never read\n   --> virtio-drivers/src/transport/mmio.rs:155:5\n    |\n17  | pub struct VirtIOHeader {\n    |            ------------ field in this struct\n...\n155 |     config_generation: ReadOnly<0xfc, u32>,\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: `VirtIOHeader` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/gpu/ty.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n  --> virtio-drivers/src/device/gpu/ty.rs:81:1\n   |\n81 | / impl Default for Command {\n82 | |     fn default() -> Self {\n83 | |         Command(0)\n84 | |     }\n85 | | }\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n   = note: `#[warn(clippy::derivable_impls)]` on by default\n   = help: remove the manual implementation...\nhelp: ...and instead derive it\n   |\n52 + #[derive(Default)]\n53 | pub struct Command(u32);\n   |\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/gpu/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> virtio-drivers/src/device/gpu/mod.rs:257:5\n    |\n257 | /     fn update_cursor(\n258 | |         &mut self,\n259 | |         resource_id: u32,\n260 | |         scanout_id: u32,\n...   |\n265 | |         is_move: bool,\n266 | |     ) -> VirtIoResult<()> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/net/raw.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty lines after doc comment\n  --> virtio-drivers/src/device/net/raw.rs:60:5\n   |\n60 | /     /// Disable interrupts.\n61 | |     // pub fn disable_interrupts(&mut self) -> VirtIoResult<()> {\n62 | |     //     self.send_queue.set_dev_notify(false)?;\n63 | |     //     self.recv_queue.set_dev_notify(false)?;\n...  |\n70 | |     // }\n71 | |\n   | |_\n72 |       /// Get MAC address.\n73 |       pub fn mac_address(&self) -> VirtIoResult<[u8; 6]> {\n   |       -------------------------------------------------- the comment documents this method\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n   = note: `#[warn(clippy::empty_line_after_doc_comments)]` on by default\n   = help: if the empty lines are unintentional remove them\nhelp: if the doc comment should not document `mac_address` comment it out\n   |\n60 ~     // /// Disable interrupts.\n61 |     // pub fn disable_interrupts(&mut self) -> VirtIoResult<()> {\n...\n65 |\n66 ~     // /// Enable interrupts.\n   |\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/net/raw.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant pattern matching, consider using `is_none()`\n  --> virtio-drivers/src/device/net/raw.rs:84:16\n   |\n84 |         if let None = token {\n   |         -------^^^^-------- help: try: `if token.is_none()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching\n   = note: `#[warn(clippy::redundant_pattern_matching)]` on by default\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/net/raw.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded late initialization\n   --> virtio-drivers/src/device/net/raw.rs:259:9\n    |\n259 |         let v;\n    |         ^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init\n    = note: `#[warn(clippy::needless_late_init)]` on by default\nhelp: move the declaration `v` here and remove the assignments from the branches\n    |\n259 ~         \n260 ~         let v = if !tx_buf.is_empty() {\n261 |             // Special case sending an empty packet, to avoid adding an empty buffer to the\n...\n267 |             );\n268 ~             vec![header_desc, desc]\n269 |         } else {\n270 ~             vec![header_desc]\n271 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/device/net/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty lines after doc comment\n  --> virtio-drivers/src/device/net/mod.rs:55:5\n   |\n55 | /     /// Disable interrupts.\n56 | |     // pub fn disable_interrupts(&mut self) -> VirtIoResult<()> {\n57 | |     //     self.inner.disable_interrupts()\n58 | |     // }\n...  |\n63 | |     // }\n64 | |\n   | |_\n65 |       /// Get MAC address.\n66 |       pub fn mac_address(&self) -> VirtIoResult<[u8; 6]> {\n   |       -------------------------------------------------- the comment documents this method\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n   = help: if the empty lines are unintentional remove them\nhelp: if the doc comment should not document `mac_address` comment it out\n   |\n55 ~     // /// Disable interrupts.\n56 |     // pub fn disable_interrupts(&mut self) -> VirtIoResult<()> {\n...\n59 |\n60 ~     // /// Enable interrupts.\n   |\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/queue.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> virtio-drivers/src/queue.rs:272:1\n    |\n272 | / impl Default for Descriptor {\n273 | |     fn default() -> Self {\n274 | |         Self {\n275 | |             addr: Default::default(),\n...   |\n280 | |     }\n281 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n266 + #[derive(Default)]\n267 | pub struct Descriptor {\n    |\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/transport/mmio.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty line after doc comment\n  --> virtio-drivers/src/transport/mmio.rs:38:5\n   |\n38 | /     /// Reserved\n39 | |     // __r1: [ReadOnly<0>; 2],\n40 | |\n   | |_\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n   = help: if the empty line is unintentional remove it\nhelp: if the doc comment should not document `driver_features` comment it out\n   |\n38 |     // /// Reserved\n   |     ++\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/transport/mmio.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty line after doc comment\n  --> virtio-drivers/src/transport/mmio.rs:55:5\n   |\n55 | /     /// Reserved\n56 | |     // __r2: ReadOnly<0>,\n57 | |\n   | |_\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n   = help: if the empty line is unintentional remove it\nhelp: if the doc comment should not document `queue_sel` comment it out\n   |\n55 |     // /// Reserved\n   |     ++\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/transport/mmio.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty line after doc comment\n   --> virtio-drivers/src/transport/mmio.rs:104:5\n    |\n104 | /     /// Reserved\n105 | |     // __r3: [ReadOnly<0>; 2],\n106 | |\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n    = help: if the empty line is unintentional remove it\nhelp: if the doc comment should not document `queue_notify` comment it out\n    |\n104 |     // /// Reserved\n    |     ++\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/transport/mmio.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty line after doc comment\n   --> virtio-drivers/src/transport/mmio.rs:110:5\n    |\n110 | /     /// Reserved\n111 | |     // __r4: [ReadOnly<0>; 3],\n112 | |\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n    = help: if the empty line is unintentional remove it\nhelp: if the doc comment should not document `interrupt_status` comment it out\n    |\n110 |     // /// Reserved\n    |     ++\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/transport/mmio.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty line after doc comment\n   --> virtio-drivers/src/transport/mmio.rs:119:5\n    |\n119 | /     /// Reserved\n120 | |     // __r5: [ReadOnly<0>; 2],\n121 | |\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n    = help: if the empty line is unintentional remove it\nhelp: if the doc comment should not document `status` comment it out\n    |\n119 |     // /// Reserved\n    |     ++\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/transport/mmio.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty line after doc comment\n   --> virtio-drivers/src/transport/mmio.rs:131:5\n    |\n131 | /     /// Reserved\n132 | |     // __r6: [ReadOnly<0>; 3],\n133 | |\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n    = help: if the empty line is unintentional remove it\nhelp: if the doc comment should not document `queue_desc` comment it out\n    |\n131 |     // /// Reserved\n    |     ++\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/transport/mmio.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty line after doc comment\n   --> virtio-drivers/src/transport/mmio.rs:151:5\n    |\n151 | /     /// Reserved\n152 | |     // __r9: [ReadOnly<0>; 21],\n153 | |\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n    = help: if the empty line is unintentional remove it\nhelp: if the doc comment should not document `config_generation` comment it out\n    |\n151 |     // /// Reserved\n    |     ++\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/volatile.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `res`\n  --> virtio-drivers/src/volatile.rs:36:18\n   |\n36 |         for i in 0..SIZE {\n   |                  ^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n   = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n   |\n36 |         for (i, <item>) in res.iter_mut().enumerate().take(SIZE) {\n   |             ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "virtio-drivers/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manually reimplementing `div_ceil`\n  --> virtio-drivers/src/lib.rs:20:5\n   |\n20 |     (size + PAGE_SIZE - 1) / PAGE_SIZE\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.div_ceil()`: `size.div_ceil(PAGE_SIZE)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_div_ceil\n   = note: `#[warn(clippy::manual_div_ceil)]` on by default\n\n"
    },
    {
      "cmd_idx": 81,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-02T03:49:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T03:49:40Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 90,
      "file": "src/cfs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CFScheduler<T>`\n   --> src/cfs.rs:111:5\n    |\n111 | /     pub const fn new() -> Self {\n112 | |         Self {\n113 | |             ready_queue: BTreeMap::new(),\n114 | |             min_vruntime: None,\n115 | |             id_pool: AtomicIsize::new(0_isize),\n116 | |         }\n117 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n109 + impl<T> Default for CFScheduler<T> {\n110 +     fn default() -> Self {\n111 +         Self::new()\n112 +     }\n113 + }\n    |\n\n"
    },
    {
      "cmd_idx": 90,
      "file": "src/fifo.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `FifoScheduler<T>`\n  --> src/fifo.rs:29:5\n   |\n29 | /     pub const fn new() -> Self {\n30 | |         Self {\n31 | |             ready_queue: List::new(),\n32 | |         }\n33 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n27 + impl<T> Default for FifoScheduler<T> {\n28 +     fn default() -> Self {\n29 +         Self::new()\n30 +     }\n31 + }\n   |\n\n"
    },
    {
      "cmd_idx": 90,
      "file": "src/round_robin.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `RRScheduler<T, S>`\n  --> src/round_robin.rs:64:5\n   |\n64 | /     pub const fn new() -> Self {\n65 | |         Self {\n66 | |             ready_queue: VecDeque::new(),\n67 | |         }\n68 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n62 + impl<T, const S: usize> Default for RRScheduler<T, S> {\n63 +     fn default() -> Self {\n64 +         Self::new()\n65 +     }\n66 + }\n   |\n\n"
    },
    {
      "cmd_idx": 91,
      "file": "src/cfs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CFScheduler<T>`\n   --> src/cfs.rs:111:5\n    |\n111 | /     pub const fn new() -> Self {\n112 | |         Self {\n113 | |             ready_queue: BTreeMap::new(),\n114 | |             min_vruntime: None,\n115 | |             id_pool: AtomicIsize::new(0_isize),\n116 | |         }\n117 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n109 + impl<T> Default for CFScheduler<T> {\n110 +     fn default() -> Self {\n111 +         Self::new()\n112 +     }\n113 + }\n    |\n\n"
    },
    {
      "cmd_idx": 91,
      "file": "src/fifo.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `FifoScheduler<T>`\n  --> src/fifo.rs:29:5\n   |\n29 | /     pub const fn new() -> Self {\n30 | |         Self {\n31 | |             ready_queue: List::new(),\n32 | |         }\n33 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n27 + impl<T> Default for FifoScheduler<T> {\n28 +     fn default() -> Self {\n29 +         Self::new()\n30 +     }\n31 + }\n   |\n\n"
    },
    {
      "cmd_idx": 91,
      "file": "src/round_robin.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `RRScheduler<T, S>`\n  --> src/round_robin.rs:64:5\n   |\n64 | /     pub const fn new() -> Self {\n65 | |         Self {\n66 | |             ready_queue: VecDeque::new(),\n67 | |         }\n68 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n62 + impl<T, const S: usize> Default for RRScheduler<T, S> {\n63 +     fn default() -> Self {\n64 +         Self::new()\n65 +     }\n66 + }\n   |\n\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/cfs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CFScheduler<T>`\n   --> src/cfs.rs:111:5\n    |\n111 | /     pub const fn new() -> Self {\n112 | |         Self {\n113 | |             ready_queue: BTreeMap::new(),\n114 | |             min_vruntime: None,\n115 | |             id_pool: AtomicIsize::new(0_isize),\n116 | |         }\n117 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n109 + impl<T> Default for CFScheduler<T> {\n110 +     fn default() -> Self {\n111 +         Self::new()\n112 +     }\n113 + }\n    |\n\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/fifo.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `FifoScheduler<T>`\n  --> src/fifo.rs:29:5\n   |\n29 | /     pub const fn new() -> Self {\n30 | |         Self {\n31 | |             ready_queue: List::new(),\n32 | |         }\n33 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n27 + impl<T> Default for FifoScheduler<T> {\n28 +     fn default() -> Self {\n29 +         Self::new()\n30 +     }\n31 + }\n   |\n\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/round_robin.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `RRScheduler<T, S>`\n  --> src/round_robin.rs:64:5\n   |\n64 | /     pub const fn new() -> Self {\n65 | |         Self {\n66 | |             ready_queue: VecDeque::new(),\n67 | |         }\n68 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n62 + impl<T, const S: usize> Default for RRScheduler<T, S> {\n63 +     fn default() -> Self {\n64 +         Self::new()\n65 +     }\n66 + }\n   |\n\n"
    },
    {
      "cmd_idx": 93,
      "file": "src/cfs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CFScheduler<T>`\n   --> src/cfs.rs:111:5\n    |\n111 | /     pub const fn new() -> Self {\n112 | |         Self {\n113 | |             ready_queue: BTreeMap::new(),\n114 | |             min_vruntime: None,\n115 | |             id_pool: AtomicIsize::new(0_isize),\n116 | |         }\n117 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n109 + impl<T> Default for CFScheduler<T> {\n110 +     fn default() -> Self {\n111 +         Self::new()\n112 +     }\n113 + }\n    |\n\n"
    },
    {
      "cmd_idx": 93,
      "file": "src/fifo.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `FifoScheduler<T>`\n  --> src/fifo.rs:29:5\n   |\n29 | /     pub const fn new() -> Self {\n30 | |         Self {\n31 | |             ready_queue: List::new(),\n32 | |         }\n33 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n27 + impl<T> Default for FifoScheduler<T> {\n28 +     fn default() -> Self {\n29 +         Self::new()\n30 +     }\n31 + }\n   |\n\n"
    },
    {
      "cmd_idx": 93,
      "file": "src/round_robin.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `RRScheduler<T, S>`\n  --> src/round_robin.rs:64:5\n   |\n64 | /     pub const fn new() -> Self {\n65 | |         Self {\n66 | |             ready_queue: VecDeque::new(),\n67 | |         }\n68 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n62 + impl<T, const S: usize> Default for RRScheduler<T, S> {\n63 +     fn default() -> Self {\n64 +         Self::new()\n65 +     }\n66 + }\n   |\n\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/console.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/console.rs (original lines from 36 to 36)\n+\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/deps.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/deps.rs (original lines from 1 to 1)\n-\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/deps.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/deps.rs (original lines from 5 to 6)\n-\n-\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/deps.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/deps.rs (original lines from 12 to 12)\n+\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/fault.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/fault.rs (original lines from 36 to 38)\n-        unsafe {\n-            core::mem::transmute::<u8, FaultType>(self.get_type() as u8)\n-        }\n+        unsafe { core::mem::transmute::<u8, FaultType>(self.get_type() as u8) }\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/fault.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/fault.rs (original lines from 42 to 42)\n-\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/fault.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/fault.rs (original lines from 65 to 67)\n-\n-\n-\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/fault.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/fault.rs (original lines from 82 to 82)\n-\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/fault.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/fault.rs (original lines from 103 to 105)\n-        unsafe {\n-            core::mem::transmute::<u8, LookupFaultType>(self.get_type() as u8)\n-        }\n+        unsafe { core::mem::transmute::<u8, LookupFaultType>(self.get_type() as u8) }\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/lib.rs (original lines from 6 to 12)\n-#[cfg(feature = \"ENABLE_SMP\")]\n-pub mod smp;\n-mod deps;\n-pub mod sel4_config;\n-pub mod structures;\n-pub mod utils;\n-pub mod sbi;\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/lib.rs (original lines from 14 to 14)\n+mod deps;\n+pub mod fault;\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/lib.rs (original lines from 17 to 17)\n-pub mod fault;\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/lib.rs (original lines from 19 to 19)\n+pub mod sbi;\n+pub mod sel4_config;\n+#[cfg(feature = \"ENABLE_SMP\")]\n+pub mod smp;\n+pub mod structures;\n+pub mod utils;\n+\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/logging.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/logging.rs (original lines from 9 to 9)\n-use crate::println;\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/logging.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/logging.rs (original lines from 11 to 11)\n+use crate::println;\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/logging.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/logging.rs (original lines from 58 to 58)\n+\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/message_info.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/message_info.rs (original lines from 6 to 6)\n-    InvalidInvocation                       = 0,\n+    InvalidInvocation = 0,\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/message_info.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/message_info.rs (original lines from 63 to 65)\n-        Self {\n-            words: [w]\n-        }\n+        Self { words: [w] }\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/message_info.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/message_info.rs (original lines from 84 to 86)\n-        unsafe {\n-            core::mem::transmute::<u8, MessageLabel>(self.get_usize_label() as u8)\n-        }\n+        unsafe { core::mem::transmute::<u8, MessageLabel>(self.get_usize_label() as u8) }\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/object.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/object.rs (original lines from 18 to 18)\n-\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/object.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/object.rs (original lines from 49 to 51)\n-        unsafe {\n-            Some(core::mem::transmute::<u8, ObjectType>(value as u8))\n-        }\n+        unsafe { Some(core::mem::transmute::<u8, ObjectType>(value as u8)) }\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/object.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/object.rs (original lines from 57 to 57)\n-            _ => false\n+            _ => false,\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/object.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/object.rs (original lines from 60 to 60)\n-\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/object.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/object.rs (original lines from 62 to 62)\n+\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/sbi.rs (original lines from 12 to 12)\n-const SYSCALL_WRITE:usize =64;\n+const SYSCALL_WRITE: usize = 64;\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/sbi.rs (original lines from 29 to 30)\n-\n-\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/sbi.rs (original lines from 54 to 54)\n-\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/sel4_config.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/sel4_config.rs (original lines from 31 to 31)\n-\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/sel4_config.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/sel4_config.rs (original lines from 51 to 51)\n-\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/sel4_config.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/sel4_config.rs (original lines from 91 to 91)\n-\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/sel4_config.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/sel4_config.rs (original lines from 101 to 101)\n-\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/sel4_config.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/sel4_config.rs (original lines from 105 to 105)\n-\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/smp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/smp.rs (original lines from 1 to 2)\n-use core::arch::asm;\n-use crate::BIT;\n+use super::sel4_config::{CONFIG_KERNEL_STACK_BITS, CONFIG_MAX_NUM_NODES};\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/smp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/smp.rs (original lines from 4 to 4)\n-use super::sel4_config::{CONFIG_MAX_NUM_NODES, CONFIG_KERNEL_STACK_BITS};\n+use crate::BIT;\n+use core::arch::asm;\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/smp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/smp.rs (original lines from 6 to 6)\n-\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/smp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/smp.rs (original lines from 9 to 11)\n-    unsafe {\n-        &*(coreMap as usize as *const [usize; CONFIG_MAX_NUM_NODES])\n-    }\n+    unsafe { &*(coreMap as usize as *const [usize; CONFIG_MAX_NUM_NODES]) }\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/smp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/smp.rs (original lines from 27 to 27)\n-\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/structures.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/structures.rs (original lines from 14 to 14)\n-\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/structures.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/structures.rs (original lines from 32 to 32)\n+\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/utils.rs (original lines from 83 to 83)\n-\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/utils.rs (original lines from 101 to 103)\n-    unsafe {\n-        & *(addr as *mut T)\n-    }\n+    unsafe { &*(addr as *mut T) }\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/utils.rs (original lines from 109 to 111)\n-    unsafe {\n-        &mut *(addr as *mut T)\n-    }\n+    unsafe { &mut *(addr as *mut T) }\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/utils.rs (original lines from 116 to 118)\n-    unsafe {\n-        &mut *(addr as *mut T)\n-    }\n+    unsafe { &mut *(addr as *mut T) }\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/utils.rs (original lines from 139 to 139)\n-    #[cfg(feature = \"ENABLE_SMP\")] {\n+    #[cfg(feature = \"ENABLE_SMP\")]\n+    {\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/utils.rs (original lines from 143 to 143)\n-    #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+    #[cfg(not(feature = \"ENABLE_SMP\"))]\n+    {\n"
    },
    {
      "cmd_idx": 106,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_common/src/utils.rs (original lines from 158 to 158)\n+\n"
    },
    {
      "cmd_idx": 107,
      "file": "src/sbi.rs",
      "kind": "Clippy(Error)",
      "raw": "error: invalid register `x10`: unknown register\n  --> src/sbi.rs:20:9\n   |\n20 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 107,
      "file": "src/sbi.rs",
      "kind": "Clippy(Error)",
      "raw": "error: invalid register `x11`: unknown register\n  --> src/sbi.rs:21:9\n   |\n21 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 107,
      "file": "src/sbi.rs",
      "kind": "Clippy(Error)",
      "raw": "error: invalid register `x12`: unknown register\n  --> src/sbi.rs:22:9\n   |\n22 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 107,
      "file": "src/sbi.rs",
      "kind": "Clippy(Error)",
      "raw": "error: invalid register `x17`: unknown register\n  --> src/sbi.rs:23:9\n   |\n23 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 109,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-02T04:15:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:15:24Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-02T04:15:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:15:27Z WARN  lockbud::callbacks] crate riscv_target contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 114,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=sel4_common, checker=Clippy\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_common\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling memchr v2.7.4\n   Compiling regex-syntax v0.8.5\n   Compiling semver-parser v0.7.0\n   Compiling lazy_static v1.5.0\n   Compiling autocfg v1.4.0\n   Compiling semver v0.9.0\n   Compiling aho-corasick v1.1.3\n   Compiling rustc_version v0.2.3\n   Compiling bare-metal v0.2.5\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking bit_field v0.10.2\n    Checking log v0.4.22\n    Checking bitflags v1.3.2\n    Checking spin v0.9.8\n   Compiling regex-automata v0.4.8\n   Compiling regex v1.11.1\n   Compiling riscv-target v0.1.2\n   Compiling riscv v0.6.0 (https://gitee.com/rcore-os/riscv#11d43cf7)\n    Checking sel4_common v0.1.0 (/home/runner/check/batch_10/kern-crates/sel4_common)\nerror: could not compile `sel4_common` (lib) due to 4 previous errors\n"
    },
    {
      "cmd_idx": 115,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=sel4_common, checker=Lockbud\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_common\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling memchr v2.7.4\n   Compiling semver-parser v0.7.0\n   Compiling regex-syntax v0.8.5\n   Compiling autocfg v1.4.0\n   Compiling semver v0.9.0\n   Compiling aho-corasick v1.1.3\n   Compiling rustc_version v0.2.3\n   Compiling lazy_static v1.5.0\n   Compiling bare-metal v0.2.5\n   Compiling lock_api v0.4.12\n   Compiling scopeguard v1.2.0\n   Compiling bit_field v0.10.2\n   Compiling bitflags v1.3.2\n   Compiling log v0.4.22\n   Compiling spin v0.9.8\n[2024-11-02T04:15:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:15:24Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling regex-automata v0.4.8\n   Compiling regex v1.11.1\n   Compiling riscv-target v0.1.2\n[2024-11-02T04:15:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:15:27Z WARN  lockbud::callbacks] crate riscv_target contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling riscv v0.6.0 (https://gitee.com/rcore-os/riscv#11d43cf7)\n   Compiling sel4_common v0.1.0 (/home/runner/check/batch_10/kern-crates/sel4_common)\nerror: invalid register `x10`: unknown register\n  --> src/sbi.rs:20:9\n   |\n20 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x11`: unknown register\n  --> src/sbi.rs:21:9\n   |\n21 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x12`: unknown register\n  --> src/sbi.rs:22:9\n   |\n22 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x17`: unknown register\n  --> src/sbi.rs:23:9\n   |\n23 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\nerror: could not compile `sel4_common` (lib) due to 4 previous errors\n"
    },
    {
      "cmd_idx": 116,
      "file": "(virtual) rap",
      "kind": "Cargo",
      "raw": "// pkg_name=sel4_common, checker=Rap\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_common\n// cmd=cargo +nightly-2024-06-30 rap -F -M\n   Compiling memchr v2.7.4\n   Compiling semver-parser v0.7.0\n   Compiling regex-syntax v0.8.5\n   Compiling lazy_static v1.5.0\n   Compiling autocfg v1.4.0\n   Compiling semver v0.9.0\n   Compiling aho-corasick v1.1.3\n   Compiling rustc_version v0.2.3\n   Compiling lock_api v0.4.12\n   Compiling bare-metal v0.2.5\n    Checking scopeguard v1.2.0\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n    Checking spin v0.9.8\n   Compiling regex-automata v0.4.8\n   Compiling regex v1.11.1\n   Compiling riscv-target v0.1.2\n   Compiling riscv v0.6.0 (https://gitee.com/rcore-os/riscv#11d43cf7)\n    Checking sel4_common v0.1.0 (/home/runner/check/batch_10/kern-crates/sel4_common)\nerror: invalid register `x10`: unknown register\n  --> src/sbi.rs:20:9\n   |\n20 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x11`: unknown register\n  --> src/sbi.rs:21:9\n   |\n21 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x12`: unknown register\n  --> src/sbi.rs:22:9\n   |\n22 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x17`: unknown register\n  --> src/sbi.rs:23:9\n   |\n23 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\nerror: could not compile `sel4_common` (lib) due to 4 previous errors\n04:15:33|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 119,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-02T03:50:23Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-02T03:50:23Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-11-02T03:50:29Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T03:50:29Z WARN  lockbud::callbacks] crate riscv_target contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-02T03:50:30Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T03:50:30Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-02T03:50:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T03:50:33Z WARN  lockbud::callbacks] crate sel4_bitfield_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 121,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=sel4_cspace, checker=Clippy\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/kern-crates/sel4_cspace\n// cmd=cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.89\n   Compiling memchr v2.7.4\n   Compiling unicode-ident v1.0.13\n   Compiling thiserror v1.0.66\n   Compiling regex-syntax v0.8.5\n   Compiling ucd-trie v0.1.7\n   Compiling aho-corasick v1.1.3\n   Compiling quote v1.0.37\n   Compiling syn v2.0.86\n   Compiling once_cell v1.20.2\n   Compiling rustix v0.38.38\n   Compiling linux-raw-sys v0.4.14\n   Compiling regex-automata v0.4.8\n   Compiling bitflags v2.6.0\n   Compiling semver-parser v0.7.0\n   Compiling semver v0.9.0\n   Compiling either v1.13.0\n   Compiling home v0.5.9\n   Compiling syn v1.0.109\n   Compiling thiserror-impl v1.0.66\n   Compiling regex v1.11.1\n   Compiling rustc_version v0.2.3\n   Compiling autocfg v1.4.0\n   Compiling which v4.4.2\n   Compiling lazy_static v1.5.0\n   Compiling riscv-target v0.1.2\n   Compiling sel4-rustfmt-helper v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n   Compiling lock_api v0.4.12\n   Compiling bare-metal v0.2.5\n   Compiling pest v2.7.14\n   Compiling glob v0.3.1\n   Compiling sel4-bitfield-types v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n    Checking serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n   Compiling riscv v0.6.0 (https://github.com/rcore-os/riscv#11d43cf7)\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.9.0\n    Checking serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n    Checking serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\n    Checking bit_field v0.10.2\n    Checking log v0.4.22\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n    Checking driver-collect v0.1.0 (https://github.com/rel4team/driver-collect.git?branch=mi_dev#3667ef6a)\n    Checking spin v0.9.8\n   Compiling pest_meta v2.7.14\n   Compiling pest_generator v2.7.14\n   Compiling pest_derive v2.7.14\n   Compiling sel4-bitfield-parser v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n   Compiling rust_sel4_pbf_parser v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n   Compiling sel4_common v0.1.0 (https://github.com/rel4team/sel4_common.git?branch=mi_dev#9060ef3d)\nerror: failed to run custom build command for `sel4_common v0.1.0 (https://github.com/rel4team/sel4_common.git?branch=mi_dev#9060ef3d)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/kern-crates/sel4_cspace/target/debug/build/sel4_common-3d58d4d018f3218b/build-script-build` (exit status: 1)\n  --- stdout\n  dir /home/runner/check/batch_1/kern-crates/sel4_cspace/target/riscv64gc-unknown-none-elf/debug/build/sel4_common-db9da0a60acfef64/out/pbf not exist, and no need to del\n  Directory created successfully: /home/runner/check/batch_1/kern-crates/sel4_cspace/target/riscv64gc-unknown-none-elf/debug/build/sel4_common-db9da0a60acfef64/out/pbf\n\n  --- stderr\n  Failed to copy file: No such file or directory (os error 2)\n"
    },
    {
      "cmd_idx": 122,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=sel4_cspace, checker=Lockbud\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/kern-crates/sel4_cspace\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf\n   Compiling memchr v2.7.4\n   Compiling proc-macro2 v1.0.89\n   Compiling unicode-ident v1.0.13\n   Compiling thiserror v1.0.66\n   Compiling regex-syntax v0.8.5\n   Compiling ucd-trie v0.1.7\n   Compiling aho-corasick v1.1.3\n   Compiling quote v1.0.37\n   Compiling syn v2.0.86\n   Compiling rustix v0.38.38\n   Compiling once_cell v1.20.2\n[2024-11-02T03:50:23Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-02T03:50:23Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling semver-parser v0.7.0\n   Compiling regex-automata v0.4.8\n   Compiling linux-raw-sys v0.4.14\n   Compiling bitflags v2.6.0\n   Compiling semver v0.9.0\n   Compiling either v1.13.0\n   Compiling home v0.5.9\n   Compiling syn v1.0.109\n   Compiling regex v1.11.1\n   Compiling thiserror-impl v1.0.66\n   Compiling rustc_version v0.2.3\n   Compiling autocfg v1.4.0\n   Compiling which v4.4.2\n   Compiling lazy_static v1.5.0\n   Compiling riscv-target v0.1.2\n   Compiling sel4-rustfmt-helper v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n[2024-11-02T03:50:29Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T03:50:29Z WARN  lockbud::callbacks] crate riscv_target contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling lock_api v0.4.12\n   Compiling bare-metal v0.2.5\n   Compiling glob v0.3.1\n   Compiling pest v2.7.14\n   Compiling serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n   Compiling sel4-bitfield-types v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n   Compiling riscv v0.6.0 (https://github.com/rcore-os/riscv#11d43cf7)\n   Compiling tock-registers v0.9.0\n   Compiling scopeguard v1.2.0\n   Compiling serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n   Compiling serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling log v0.4.22\n   Compiling driver-collect v0.1.0 (https://github.com/rel4team/driver-collect.git?branch=mi_dev#3667ef6a)\n[2024-11-02T03:50:30Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T03:50:30Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling spin v0.9.8\n   Compiling pest_meta v2.7.14\n   Compiling pest_generator v2.7.14\n   Compiling pest_derive v2.7.14\n   Compiling sel4-bitfield-parser v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n[2024-11-02T03:50:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T03:50:33Z WARN  lockbud::callbacks] crate sel4_bitfield_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling rust_sel4_pbf_parser v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n   Compiling sel4_common v0.1.0 (https://github.com/rel4team/sel4_common.git?branch=mi_dev#9060ef3d)\nerror: failed to run custom build command for `sel4_common v0.1.0 (https://github.com/rel4team/sel4_common.git?branch=mi_dev#9060ef3d)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/kern-crates/sel4_cspace/target/debug/build/sel4_common-3d58d4d018f3218b/build-script-build` (exit status: 1)\n  --- stdout\n  dir /home/runner/check/batch_1/kern-crates/sel4_cspace/target/riscv64gc-unknown-none-elf/debug/build/sel4_common-588e62781ac132f7/out/pbf not exist, and no need to del\n  Directory created successfully: /home/runner/check/batch_1/kern-crates/sel4_cspace/target/riscv64gc-unknown-none-elf/debug/build/sel4_common-588e62781ac132f7/out/pbf\n\n  --- stderr\n  Failed to copy file: No such file or directory (os error 2)\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/endpoint.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/endpoint.rs (original lines from 1 to 1)\n+use crate::transfer::Transfer;\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/endpoint.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/endpoint.rs (original lines from 4 to 4)\n-use sel4_task::{possible_switch_to, rescheduleRequired, schedule_tcb, set_thread_state, tcb_queue_t, tcb_t, ThreadState};\n+use sel4_task::{\n+    possible_switch_to, rescheduleRequired, schedule_tcb, set_thread_state, tcb_queue_t, tcb_t,\n+    ThreadState,\n+};\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/endpoint.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/endpoint.rs (original lines from 6 to 6)\n-use crate::transfer::Transfer;\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/endpoint.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/endpoint.rs (original lines from 8 to 8)\n-\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/endpoint.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/endpoint.rs (original lines from 38 to 40)\n-        unsafe {\n-            core::mem::transmute::<u8, EPState>(self.get_usize_state() as u8)\n-        }\n+        unsafe { core::mem::transmute::<u8, EPState>(self.get_usize_state() as u8) }\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/endpoint.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/endpoint.rs (original lines from 45 to 45)\n-        tcb_queue_t { head: self.get_queue_head(), tail: self.get_queue_tail() }\n+        tcb_queue_t {\n+            head: self.get_queue_head(),\n+            tail: self.get_queue_tail(),\n+        }\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/endpoint.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/endpoint.rs (original lines from 111 to 112)\n-    pub fn send_ipc(&mut self, src_thread: &mut tcb_t, blocking: bool,\n-                    do_call: bool, can_grant: bool, badge: usize, can_grant_reply: bool) {\n+    pub fn send_ipc(\n+        &mut self,\n+        src_thread: &mut tcb_t,\n+        blocking: bool,\n+        do_call: bool,\n+        can_grant: bool,\n+        badge: usize,\n+        can_grant_reply: bool,\n+    ) {\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/endpoint.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/endpoint.rs (original lines from 116 to 116)\n-                    src_thread.tcbState.set_ts_type(ThreadState::ThreadStateBlockedOnSend as usize);\n+                    src_thread\n+                        .tcbState\n+                        .set_ts_type(ThreadState::ThreadStateBlockedOnSend as usize);\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/endpoint.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/endpoint.rs (original lines from 118 to 118)\n-                    src_thread.tcbState.set_blocking_ipc_can_grant(can_grant as usize);\n+                    src_thread\n+                        .tcbState\n+                        .set_blocking_ipc_can_grant(can_grant as usize);\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/endpoint.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/endpoint.rs (original lines from 120 to 121)\n-                    src_thread.tcbState.set_blocking_ipc_can_grant_reply(can_grant_reply as usize);\n-                    src_thread.tcbState.set_blocking_ipc_is_call(do_call as usize);\n+                    src_thread\n+                        .tcbState\n+                        .set_blocking_ipc_can_grant_reply(can_grant_reply as usize);\n+                    src_thread\n+                        .tcbState\n+                        .set_blocking_ipc_is_call(do_call as usize);\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/endpoint.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/endpoint.rs (original lines from 201 to 201)\n-\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/lib.rs (original lines from 14 to 14)\n+\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/notification.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/notification.rs (original lines from 1 to 1)\n+use crate::transfer::Transfer;\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/notification.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/notification.rs (original lines from 4 to 5)\n-use sel4_task::{possible_switch_to, rescheduleRequired, set_thread_state, tcb_queue_t, tcb_t, ThreadState};\n-use crate::transfer::Transfer;\n+use sel4_task::{\n+    possible_switch_to, rescheduleRequired, set_thread_state, tcb_queue_t, tcb_t, ThreadState,\n+};\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/notification.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/notification.rs (original lines from 7 to 7)\n-\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/notification.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/notification.rs (original lines from 30 to 32)\n-        unsafe {\n-            core::mem::transmute::<u8, NtfnState>(self.get_usize_state() as u8)\n-        }\n+        unsafe { core::mem::transmute::<u8, NtfnState>(self.get_usize_state() as u8) }\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/notification.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/notification.rs (original lines from 37 to 37)\n-        tcb_queue_t { head: self.get_queue_head(), tail: self.get_queue_tail() }\n+        tcb_queue_t {\n+            head: self.get_queue_head(),\n+            tail: self.get_queue_tail(),\n+        }\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/notification.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/notification.rs (original lines from 65 to 65)\n-        if self.get_state() ==  NtfnState::Waiting {\n+        if self.get_state() == NtfnState::Waiting {\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/notification.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/notification.rs (original lines from 70 to 70)\n-            while let Some(thread) =  op_thread {\n+            while let Some(thread) = op_thread {\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/notification.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/notification.rs (original lines from 108 to 108)\n-                    if tcb.get_state() == ThreadState::ThreadStateBlockedOnReceive{\n+                    if tcb.get_state() == ThreadState::ThreadStateBlockedOnReceive {\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/notification.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/notification.rs (original lines from 165 to 165)\n+\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/transfer.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 6 to 7)\n-use sel4_common::structures::*;\n-use sel4_common::sel4_config::*;\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/transfer.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 10 to 10)\n-use sel4_common::registers::{badgeRegister, FaultIP, msgInfoRegister, n_exceptionMessage, n_syscallMessage};\n+use sel4_common::registers::{\n+    badgeRegister, msgInfoRegister, n_exceptionMessage, n_syscallMessage, FaultIP,\n+};\n+use sel4_common::sel4_config::*;\n+use sel4_common::structures::*;\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/transfer.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 19 to 19)\n-    fn set_transfer_caps(&mut self, endpoint: Option<&endpoint_t>, info: &mut seL4_MessageInfo_t, current_extra_caps: &[pptr_t; seL4_MsgMaxExtraCaps]);\n+    fn set_transfer_caps(\n+        &mut self,\n+        endpoint: Option<&endpoint_t>,\n+        info: &mut seL4_MessageInfo_t,\n+        current_extra_caps: &[pptr_t; seL4_MsgMaxExtraCaps],\n+    );\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/transfer.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 21 to 21)\n-    fn set_transfer_caps_with_buf(&mut self, endpoint: Option<&endpoint_t>, info: &mut seL4_MessageInfo_t, current_extra_caps: &[pptr_t; seL4_MsgMaxExtraCaps], ipc_buffer: Option<&mut seL4_IPCBuffer>);\n+    fn set_transfer_caps_with_buf(\n+        &mut self,\n+        endpoint: Option<&endpoint_t>,\n+        info: &mut seL4_MessageInfo_t,\n+        current_extra_caps: &[pptr_t; seL4_MsgMaxExtraCaps],\n+        ipc_buffer: Option<&mut seL4_IPCBuffer>,\n+    );\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/transfer.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 25 to 25)\n-    fn do_normal_transfer(&self, receiver: &mut tcb_t, endpoint: Option<&endpoint_t>, badge: usize, can_grant: bool);\n+    fn do_normal_transfer(\n+        &self,\n+        receiver: &mut tcb_t,\n+        endpoint: Option<&endpoint_t>,\n+        badge: usize,\n+        can_grant: bool,\n+    );\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/transfer.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 31 to 31)\n-    fn do_ipc_transfer(&self, receiver: &mut tcb_t, endpoint: Option<&endpoint_t>, badge: usize, grant: bool);\n+    fn do_ipc_transfer(\n+        &self,\n+        receiver: &mut tcb_t,\n+        endpoint: Option<&endpoint_t>,\n+        badge: usize,\n+        grant: bool,\n+    );\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/transfer.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 62 to 62)\n-    fn set_transfer_caps(&mut self, endpoint: Option<&endpoint_t>, info: &mut seL4_MessageInfo_t, current_extra_caps: &[pptr_t; seL4_MsgMaxExtraCaps]) {\n+    fn set_transfer_caps(\n+        &mut self,\n+        endpoint: Option<&endpoint_t>,\n+        info: &mut seL4_MessageInfo_t,\n+        current_extra_caps: &[pptr_t; seL4_MsgMaxExtraCaps],\n+    ) {\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/transfer.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 75 to 75)\n-            if cap.get_cap_type() == CapTag::CapEndpointCap && endpoint.is_some() && cap.get_ep_ptr() == endpoint.unwrap().get_ptr() {\n+            if cap.get_cap_type() == CapTag::CapEndpointCap\n+                && endpoint.is_some()\n+                && cap.get_ep_ptr() == endpoint.unwrap().get_ptr()\n+            {\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/transfer.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 84 to 84)\n-                    if dc_ret.status != exception_t::EXCEPTION_NONE || dc_ret.cap.get_cap_type() == CapTag::CapNullCap {\n+                    if dc_ret.status != exception_t::EXCEPTION_NONE\n+                        || dc_ret.cap.get_cap_type() == CapTag::CapNullCap\n+                    {\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/transfer.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 95 to 95)\n-    fn set_transfer_caps_with_buf(&mut self, endpoint: Option<&endpoint_t>, info: &mut seL4_MessageInfo_t, current_extra_caps: &[pptr_t; seL4_MsgMaxExtraCaps], ipc_buffer: Option<&mut seL4_IPCBuffer>) {\n+    fn set_transfer_caps_with_buf(\n+        &mut self,\n+        endpoint: Option<&endpoint_t>,\n+        info: &mut seL4_MessageInfo_t,\n+        current_extra_caps: &[pptr_t; seL4_MsgMaxExtraCaps],\n+        ipc_buffer: Option<&mut seL4_IPCBuffer>,\n+    ) {\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/transfer.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 108 to 108)\n-            if cap.get_cap_type() == CapTag::CapEndpointCap && endpoint.is_some() && cap.get_ep_ptr() == endpoint.unwrap().get_ptr() {\n+            if cap.get_cap_type() == CapTag::CapEndpointCap\n+                && endpoint.is_some()\n+                && cap.get_ep_ptr() == endpoint.unwrap().get_ptr()\n+            {\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/transfer.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 117 to 117)\n-                    if dc_ret.status != exception_t::EXCEPTION_NONE || dc_ret.cap.get_cap_type() == CapTag::CapNullCap {\n+                    if dc_ret.status != exception_t::EXCEPTION_NONE\n+                        || dc_ret.cap.get_cap_type() == CapTag::CapNullCap\n+                    {\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/transfer.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 133 to 135)\n-                receiver.set_mr(seL4_CapFault_InRecvPhase, self.tcbFault.cap_fault_get_in_receive_phase());\n-                receiver.set_lookup_fault_mrs(seL4_CapFault_LookupFailureType, &self.tcbLookupFailure)\n-            },\n+                receiver.set_mr(\n+                    seL4_CapFault_InRecvPhase,\n+                    self.tcbFault.cap_fault_get_in_receive_phase(),\n+                );\n+                receiver\n+                    .set_lookup_fault_mrs(seL4_CapFault_LookupFailureType, &self.tcbLookupFailure)\n+            }\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/transfer.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 138 to 139)\n-                receiver.set_mr(n_syscallMessage, self.tcbFault.unknown_syscall_get_syscall_number())\n-            },\n+                receiver.set_mr(\n+                    n_syscallMessage,\n+                    self.tcbFault.unknown_syscall_get_syscall_number(),\n+                )\n+            }\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/transfer.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 142 to 144)\n-                receiver.set_mr(n_exceptionMessage, self.tcbFault.user_exeception_get_number());\n-                receiver.set_mr(n_exceptionMessage + 1, self.tcbFault.user_exeception_get_code())\n-            },\n+                receiver.set_mr(\n+                    n_exceptionMessage,\n+                    self.tcbFault.user_exeception_get_number(),\n+                );\n+                receiver.set_mr(\n+                    n_exceptionMessage + 1,\n+                    self.tcbFault.user_exeception_get_code(),\n+                )\n+            }\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/transfer.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 148 to 148)\n-                receiver.set_mr(seL4_VMFault_PrefetchFault, self.tcbFault.vm_fault_get_instruction_fault());\n+                receiver.set_mr(\n+                    seL4_VMFault_PrefetchFault,\n+                    self.tcbFault.vm_fault_get_instruction_fault(),\n+                );\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/transfer.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 150 to 150)\n-            },\n+            }\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/transfer.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 160 to 160)\n-    fn do_normal_transfer(&self, receiver: &mut tcb_t, endpoint: Option<&endpoint_t>, badge: usize, can_grant: bool) {\n+    fn do_normal_transfer(\n+        &self,\n+        receiver: &mut tcb_t,\n+        endpoint: Option<&endpoint_t>,\n+        badge: usize,\n+        can_grant: bool,\n+    ) {\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/transfer.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 179 to 179)\n-                self.copy_fault_mrs_for_reply(receiver, MessageID_Syscall, core::cmp::min(length, n_syscallMessage));\n+                self.copy_fault_mrs_for_reply(\n+                    receiver,\n+                    MessageID_Syscall,\n+                    core::cmp::min(length, n_syscallMessage),\n+                );\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/transfer.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 183 to 183)\n-                self.copy_fault_mrs_for_reply(receiver, MessageID_Exception, core::cmp::min(length, n_exceptionMessage));\n+                self.copy_fault_mrs_for_reply(\n+                    receiver,\n+                    MessageID_Exception,\n+                    core::cmp::min(length, n_exceptionMessage),\n+                );\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/transfer.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 186 to 186)\n-            _ => true\n+            _ => true,\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/transfer.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 191 to 191)\n-        if let Some(ntfn) = convert_to_option_mut_type_ref::<notification_t>(self.tcbBoundNotification) {\n+        if let Some(ntfn) =\n+            convert_to_option_mut_type_ref::<notification_t>(self.tcbBoundNotification)\n+        {\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/transfer.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_ipc/src/transfer.rs (original lines from 201 to 201)\n-    fn do_ipc_transfer(&self, receiver: &mut tcb_t, endpoint: Option<&endpoint_t>, badge: usize, grant: bool) {\n+    fn do_ipc_transfer(\n+        &self,\n+        receiver: &mut tcb_t,\n+        endpoint: Option<&endpoint_t>,\n+        badge: usize,\n+        grant: bool,\n+    ) {\n"
    },
    {
      "cmd_idx": 124,
      "file": "/home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: invalid register `x10`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:18:9\n   |\n18 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 124,
      "file": "/home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: invalid register `x11`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:19:9\n   |\n19 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 124,
      "file": "/home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: invalid register `x12`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:20:9\n   |\n20 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 124,
      "file": "/home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: invalid register `x17`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:21:9\n   |\n21 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 126,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-02T04:15:58Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-02T04:15:58Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-11-02T04:16:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:16:00Z WARN  lockbud::callbacks] crate riscv_target contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-02T04:16:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:16:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 131,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=sel4_ipc, checker=Clippy\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_ipc\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling memchr v2.7.4\n   Compiling proc-macro2 v1.0.89\n   Compiling regex-syntax v0.8.5\n   Compiling unicode-ident v1.0.13\n   Compiling thiserror v1.0.66\n   Compiling lazy_static v1.5.0\n   Compiling ucd-trie v0.1.7\n   Compiling aho-corasick v1.1.3\n   Compiling quote v1.0.37\n   Compiling syn v2.0.86\n   Compiling semver-parser v0.7.0\n   Compiling semver v0.9.0\n   Compiling once_cell v1.20.2\n   Compiling regex-automata v0.4.8\n   Compiling rustix v0.38.38\n   Compiling rustc_version v0.2.3\n   Compiling bitflags v2.6.0\n   Compiling linux-raw-sys v0.4.14\n   Compiling bare-metal v0.2.5\n   Compiling regex v1.11.1\n   Compiling riscv-target v0.1.2\n   Compiling thiserror-impl v1.0.66\n   Compiling syn v1.0.109\n   Compiling home v0.5.9\n   Compiling autocfg v1.4.0\n   Compiling either v1.13.0\n   Compiling which v4.4.2\n   Compiling lock_api v0.4.12\n   Compiling pest v2.7.14\n   Compiling sel4-rustfmt-helper v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n    Checking bitflags v1.3.2\n    Checking serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n   Compiling glob v0.3.1\n   Compiling sel4-bitfield-types v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n    Checking scopeguard v1.2.0\n   Compiling riscv v0.6.0 (https://github.com/rcore-os/riscv#11d43cf7)\n    Checking tock-registers v0.9.0\n    Checking serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n    Checking spin v0.9.8\n    Checking serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\nerror: could not compile `serial-impl-sbi` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 132,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=sel4_ipc, checker=Lockbud\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_ipc\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling memchr v2.7.4\n   Compiling proc-macro2 v1.0.89\n   Compiling unicode-ident v1.0.13\n   Compiling regex-syntax v0.8.5\n   Compiling thiserror v1.0.66\n   Compiling lazy_static v1.5.0\n   Compiling semver-parser v0.7.0\n   Compiling aho-corasick v1.1.3\n   Compiling quote v1.0.37\n   Compiling syn v2.0.86\n   Compiling ucd-trie v0.1.7\n   Compiling semver v0.9.0\n   Compiling rustix v0.38.38\n   Compiling regex-automata v0.4.8\n   Compiling once_cell v1.20.2\n[2024-11-02T04:15:58Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-02T04:15:58Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling rustc_version v0.2.3\n   Compiling bitflags v2.6.0\n   Compiling linux-raw-sys v0.4.14\n   Compiling bare-metal v0.2.5\n   Compiling either v1.13.0\n   Compiling syn v1.0.109\n   Compiling home v0.5.9\n   Compiling regex v1.11.1\n   Compiling thiserror-impl v1.0.66\n   Compiling riscv-target v0.1.2\n[2024-11-02T04:16:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:16:00Z WARN  lockbud::callbacks] crate riscv_target contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling which v4.4.2\n   Compiling sel4-rustfmt-helper v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n   Compiling pest v2.7.14\n   Compiling serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n   Compiling sel4-bitfield-types v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n   Compiling bit_field v0.10.2\n   Compiling scopeguard v1.2.0\n   Compiling bitflags v1.3.2\n   Compiling glob v0.3.1\n   Compiling log v0.4.22\n[2024-11-02T04:16:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:16:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling riscv v0.6.0 (https://github.com/rcore-os/riscv#11d43cf7)\n   Compiling tock-registers v0.9.0\n   Compiling spin v0.9.8\n   Compiling serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n   Compiling riscv v0.6.0 (https://gitee.com/rcore-os/riscv#11d43cf7)\n   Compiling serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\nerror: invalid register `x10`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:18:9\n   |\n18 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x11`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:19:9\n   |\n19 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x12`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:20:9\n   |\n20 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x17`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:21:9\n   |\n21 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\nerror: could not compile `serial-impl-sbi` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 133,
      "file": "(virtual) rap",
      "kind": "Cargo",
      "raw": "// pkg_name=sel4_ipc, checker=Rap\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_ipc\n// cmd=cargo +nightly-2024-06-30 rap -F -M\n   Compiling memchr v2.7.4\n   Compiling proc-macro2 v1.0.89\n   Compiling unicode-ident v1.0.13\n   Compiling regex-syntax v0.8.5\n   Compiling thiserror v1.0.66\n   Compiling aho-corasick v1.1.3\n   Compiling semver-parser v0.7.0\n   Compiling quote v1.0.37\n   Compiling ucd-trie v0.1.7\n   Compiling syn v2.0.86\n   Compiling lazy_static v1.5.0\n   Compiling semver v0.9.0\n   Compiling regex-automata v0.4.8\n   Compiling rustix v0.38.38\n   Compiling once_cell v1.20.2\n   Compiling rustc_version v0.2.3\n   Compiling linux-raw-sys v0.4.14\n   Compiling bitflags v2.6.0\n   Compiling bare-metal v0.2.5\n   Compiling home v0.5.9\n   Compiling regex v1.11.1\n   Compiling thiserror-impl v1.0.66\n   Compiling riscv-target v0.1.2\n   Compiling autocfg v1.4.0\n   Compiling either v1.13.0\n   Compiling syn v1.0.109\n   Compiling pest v2.7.14\n   Compiling which v4.4.2\n   Compiling lock_api v0.4.12\n   Compiling sel4-rustfmt-helper v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n   Compiling sel4-bitfield-types v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n    Checking bitflags v1.3.2\n    Checking scopeguard v1.2.0\n    Checking serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n    Checking log v0.4.22\n   Compiling glob v0.3.1\n    Checking bit_field v0.10.2\n   Compiling riscv v0.6.0 (https://github.com/rcore-os/riscv#11d43cf7)\n    Checking tock-registers v0.9.0\n    Checking serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n   Compiling pest_meta v2.7.14\n    Checking spin v0.9.8\n    Checking serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\nerror: invalid register `x10`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:18:9\n   |\n18 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x11`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:19:9\n   |\n19 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x12`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:20:9\n   |\n20 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x17`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:21:9\n   |\n21 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\n   Compiling riscv v0.6.0 (https://gitee.com/rcore-os/riscv#11d43cf7)\nerror: could not compile `serial-impl-sbi` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n04:16:12|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/deps.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/deps.rs (original lines from 1 to 1)\n-\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/deps.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/deps.rs (original lines from 7 to 7)\n+\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/lib.rs (original lines from 7 to 11)\n-mod thread_state;\n-mod tcb_queue;\n-pub mod tcb;\n-mod structures;\n-mod scheduler;\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/lib.rs (original lines from 13 to 13)\n+mod scheduler;\n+mod structures;\n+pub mod tcb;\n+mod tcb_queue;\n+mod thread_state;\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/lib.rs (original lines from 14 to 14)\n-pub use tcb::*;\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/lib.rs (original lines from 16 to 17)\n-pub use thread_state::*;\n-pub use tcb_queue::*;\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/lib.rs (original lines from 19 to 19)\n+pub use tcb::*;\n+pub use tcb_queue::*;\n+pub use thread_state::*;\n+\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 1 to 1)\n+#[cfg(feature = \"ENABLE_SMP\")]\n+use crate::deps::{doMaskReschedule, kernel_stack_alloc, ksIdleThreadTCB};\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 3 to 5)\n-use sel4_common::{BIT, MASK};\n-use sel4_common::registers::{FaultIP, NextIP, sp, SSTATUS, SSTATUS_SPIE, SSTATUS_SPP};\n-use sel4_common::sel4_config::{CONFIG_KERNEL_STACK_BITS, CONFIG_MAX_NUM_NODES, CONFIG_NUM_DOMAINS, CONFIG_NUM_PRIORITIES, CONFIG_TIME_SLICE, L2_BITMAP_SIZE, NUM_READY_QUEUES, seL4_TCBBits, TCB_OFFSET, wordBits, wordRadix};\n+use sel4_common::registers::{sp, FaultIP, NextIP, SSTATUS, SSTATUS_SPIE, SSTATUS_SPP};\n+use sel4_common::sel4_config::{\n+    seL4_TCBBits, wordBits, wordRadix, CONFIG_KERNEL_STACK_BITS, CONFIG_MAX_NUM_NODES,\n+    CONFIG_NUM_DOMAINS, CONFIG_NUM_PRIORITIES, CONFIG_TIME_SLICE, L2_BITMAP_SIZE, NUM_READY_QUEUES,\n+    TCB_OFFSET,\n+};\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 7 to 8)\n-#[cfg(feature = \"ENABLE_SMP\")]\n-use crate::deps::{doMaskReschedule, ksIdleThreadTCB, kernel_stack_alloc};\n+use sel4_common::{BIT, MASK};\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 10 to 11)\n-#[cfg(feature = \"ENABLE_SMP\")]\n-use sel4_common::utils::cpu_id;\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 15 to 15)\n+#[cfg(feature = \"ENABLE_SMP\")]\n+use sel4_common::utils::cpu_id;\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 16 to 16)\n-\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 29 to 29)\n-\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 36 to 36)\n-    ksReadyQueues: [tcb_queue_t {head: 0, tail: 0}; CONFIG_NUM_DOMAINS * CONFIG_NUM_PRIORITIES],\n+    ksReadyQueues: [tcb_queue_t { head: 0, tail: 0 }; CONFIG_NUM_DOMAINS * CONFIG_NUM_PRIORITIES],\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 45 to 45)\n-\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 57 to 57)\n-\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 77 to 80)\n-pub static mut ksReadyQueues: [tcb_queue_t; NUM_READY_QUEUES] = [tcb_queue_t {\n-    head: 0,\n-    tail: 0,\n-}; NUM_READY_QUEUES];\n+pub static mut ksReadyQueues: [tcb_queue_t; NUM_READY_QUEUES] =\n+    [tcb_queue_t { head: 0, tail: 0 }; NUM_READY_QUEUES];\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 101 to 101)\n-\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 105 to 105)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 108 to 108)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 117 to 117)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 120 to 120)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 132 to 132)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 135 to 135)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 144 to 144)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 147 to 147)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 156 to 156)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 159 to 159)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 168 to 168)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 171 to 171)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 177 to 177)\n-\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 181 to 181)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 184 to 184)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 190 to 190)\n-\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 233 to 233)\n-        let l1index = wordBits - 1 - ksSMP[cpu_id()].ksReadyQueuesL1Bitmap[dom].leading_zeros() as usize;\n+        let l1index =\n+            wordBits - 1 - ksSMP[cpu_id()].ksReadyQueuesL1Bitmap[dom].leading_zeros() as usize;\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 235 to 236)\n-        let l2index =\n-            wordBits - 1 - (ksSMP[cpu_id()].ksReadyQueuesL2Bitmap[dom])[l1index_inverted].leading_zeros() as usize;\n+        let l2index = wordBits\n+            - 1\n+            - (ksSMP[cpu_id()].ksReadyQueuesL2Bitmap[dom])[l1index_inverted].leading_zeros()\n+                as usize;\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 243 to 243)\n-    #[cfg(feature = \"ENABLE_SMP\")] {\n+    #[cfg(feature = \"ENABLE_SMP\")]\n+    {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 246 to 246)\n-    #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+    #[cfg(not(feature = \"ENABLE_SMP\"))]\n+    {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 256 to 258)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n-            ksSMP[_cpu].ksReadyQueuesL1Bitmap[dom]|= BIT!(l1index);\n-            ksSMP[_cpu].ksReadyQueuesL2Bitmap[dom][l1index_inverted] |= BIT!(prio & MASK!(wordRadix));\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n+            ksSMP[_cpu].ksReadyQueuesL1Bitmap[dom] |= BIT!(l1index);\n+            ksSMP[_cpu].ksReadyQueuesL2Bitmap[dom][l1index_inverted] |=\n+                BIT!(prio & MASK!(wordRadix));\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 260 to 260)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 272 to 273)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n-            ksSMP[_cpu].ksReadyQueuesL2Bitmap[dom][l1index_inverted] &= !BIT!(prio & MASK!(wordRadix));\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n+            ksSMP[_cpu].ksReadyQueuesL2Bitmap[dom][l1index_inverted] &=\n+                !BIT!(prio & MASK!(wordRadix));\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 278 to 278)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 301 to 301)\n-\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 319 to 319)\n-            #[cfg(feature = \"ENABLE_SMP\")] {\n+            #[cfg(feature = \"ENABLE_SMP\")]\n+            {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 322 to 322)\n-            #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+            #[cfg(not(feature = \"ENABLE_SMP\"))]\n+            {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 329 to 329)\n-                #[cfg(feature = \"ENABLE_SMP\")] {\n+                #[cfg(feature = \"ENABLE_SMP\")]\n+                {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 332 to 332)\n-                #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+                #[cfg(not(feature = \"ENABLE_SMP\"))]\n+                {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 335 to 335)\n-\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 380 to 382)\n-            } else if was_runnable\n-                && candidate.tcbPriority == get_currenct_thread().tcbPriority\n-            {\n+            } else if was_runnable && candidate.tcbPriority == get_currenct_thread().tcbPriority {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 393 to 393)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 397 to 397)\n-\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 462 to 462)\n-\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 465 to 465)\n-\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 479 to 481)\n-        ThreadState::ThreadStateIdleThreadState => return {\n-\n-        },\n+        ThreadState::ThreadStateIdleThreadState => return {},\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 489 to 489)\n-\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 496 to 496)\n-    use crate::deps::{ksIdleThreadTCB, kernel_stack_alloc};\n+    use crate::deps::{kernel_stack_alloc, ksIdleThreadTCB};\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 505 to 505)\n-        tcb.set_register(sp, kernel_stack_alloc as usize + BIT!(CONFIG_KERNEL_STACK_BITS));\n+        tcb.set_register(\n+            sp,\n+            kernel_stack_alloc as usize + BIT!(CONFIG_KERNEL_STACK_BITS),\n+        );\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 515 to 515)\n-            let pptr = (ksIdleThreadTCB as usize + i * BIT!(seL4_TCBBits))as *mut usize;\n+            let pptr = (ksIdleThreadTCB as usize + i * BIT!(seL4_TCBBits)) as *mut usize;\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 521 to 521)\n-            tcb.set_register(sp, kernel_stack_alloc as usize + (i + 1) * BIT!(CONFIG_KERNEL_STACK_BITS));\n+            tcb.set_register(\n+                sp,\n+                kernel_stack_alloc as usize + (i + 1) * BIT!(CONFIG_KERNEL_STACK_BITS),\n+            );\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 527 to 528)\n-\n-\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/scheduler.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/scheduler.rs (original lines from 538 to 538)\n+\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/structures.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/structures.rs (original lines from 36 to 36)\n+\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 4 to 4)\n-use sel4_common::{BIT, MASK};\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 6 to 9)\n-use sel4_common::registers::{fault_messages, FaultIP, msgInfoRegister, msgRegister, n_contextRegisters, n_exceptionMessage, n_msgRegisters, n_syscallMessage, NextIP, SSTATUS};\n-use sel4_common::utils::{pageBitsForSize, convert_to_mut_type_ref};\n-use sel4_cspace::interface::{cte_t, resolve_address_bits, CapTag, cap_t, mdb_node_t, cte_insert};\n-use sel4_vspace::{set_vm_root, pptr_t, VMReadWrite, VMReadOnly};\n+use sel4_common::registers::{\n+    fault_messages, msgInfoRegister, msgRegister, n_contextRegisters, n_exceptionMessage,\n+    n_msgRegisters, n_syscallMessage, FaultIP, NextIP, SSTATUS,\n+};\n+use sel4_common::utils::{convert_to_mut_type_ref, pageBitsForSize};\n+use sel4_common::{BIT, MASK};\n+use sel4_cspace::interface::{cap_t, cte_insert, cte_t, mdb_node_t, resolve_address_bits, CapTag};\n+use sel4_vspace::{pptr_t, set_vm_root, VMReadOnly, VMReadWrite};\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 11 to 12)\n-use sel4_common::sel4_config::*;\n-use sel4_common::structures::{seL4_IPCBuffer, exception_t};\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 14 to 14)\n+use sel4_common::sel4_config::*;\n+use sel4_common::structures::{exception_t, seL4_IPCBuffer};\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 15 to 16)\n-\n-use super::scheduler::{addToBitmap, get_currenct_thread, possible_switch_to, ready_queues_index, removeFromBitmap, rescheduleRequired, schedule_tcb, set_current_thread};\n+use super::scheduler::{\n+    addToBitmap, get_currenct_thread, possible_switch_to, ready_queues_index, removeFromBitmap,\n+    rescheduleRequired, schedule_tcb, set_current_thread,\n+};\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 21 to 21)\n-\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 32 to 32)\n-        Self {registers }\n+        Self { registers }\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 88 to 89)\n-            ThreadState::ThreadStateInactive | ThreadState::ThreadStateBlockedOnNotification | ThreadState::ThreadStateBlockedOnReceive\n-            | ThreadState::ThreadStateBlockedOnReply | ThreadState::ThreadStateBlockedOnSend => true,\n+            ThreadState::ThreadStateInactive\n+            | ThreadState::ThreadStateBlockedOnNotification\n+            | ThreadState::ThreadStateBlockedOnReceive\n+            | ThreadState::ThreadStateBlockedOnReply\n+            | ThreadState::ThreadStateBlockedOnSend => true,\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 91 to 91)\n-            _ => false\n+            _ => false,\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 98 to 99)\n-            ThreadState::ThreadStateRunning | ThreadState::ThreadStateRestart   => true,\n-            _                                                                   => false,\n+            ThreadState::ThreadStateRunning | ThreadState::ThreadStateRestart => true,\n+            _ => false,\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 183 to 183)\n-    pub fn get_sched_queue(&mut self, index: usize) ->  &'static mut tcb_queue_t {\n+    pub fn get_sched_queue(&mut self, index: usize) -> &'static mut tcb_queue_t {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 185 to 185)\n-            #[cfg(feature = \"ENABLE_SMP\")] {\n+            #[cfg(feature = \"ENABLE_SMP\")]\n+            {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 189 to 189)\n-            #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+            #[cfg(not(feature = \"ENABLE_SMP\"))]\n+            {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 198 to 198)\n-        #[cfg(feature = \"ENABLE_SMP\")] {\n+        #[cfg(feature = \"ENABLE_SMP\")]\n+        {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 201 to 201)\n-        #[cfg(not(feature = \"ENABLE_SMP\"))] {\n+        #[cfg(not(feature = \"ENABLE_SMP\"))]\n+        {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 213 to 213)\n-                convert_to_mut_type_ref::<tcb_t>(self.tcbSchedPrev).tcbSchedNext = self.tcbSchedNext;\n+                convert_to_mut_type_ref::<tcb_t>(self.tcbSchedPrev).tcbSchedNext =\n+                    self.tcbSchedNext;\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 221 to 221)\n-                convert_to_mut_type_ref::<tcb_t>(self.tcbSchedNext).tcbSchedPrev = self.tcbSchedPrev;\n+                convert_to_mut_type_ref::<tcb_t>(self.tcbSchedNext).tcbSchedPrev =\n+                    self.tcbSchedPrev;\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 260 to 261)\n-        use super::scheduler::{ksSMP, ksCurDomain};\n-        use sel4_common::utils::{cpu_id, convert_to_type_ref};\n+        use super::scheduler::{ksCurDomain, ksSMP};\n+        use sel4_common::utils::{convert_to_type_ref, cpu_id};\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 264 to 265)\n-                let target_current = convert_to_type_ref::<tcb_t>(ksSMP[self.tcbAffinity].ksCurThread);\n-                if ksSMP[self.tcbAffinity].ksIdleThread == ksSMP[self.tcbAffinity].ksCurThread || self.tcbPriority > target_current.tcbPriority {\n+                let target_current =\n+                    convert_to_type_ref::<tcb_t>(ksSMP[self.tcbAffinity].ksCurThread);\n+                if ksSMP[self.tcbAffinity].ksIdleThread == ksSMP[self.tcbAffinity].ksCurThread\n+                    || self.tcbPriority > target_current.tcbPriority\n+                {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 272 to 272)\n-\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 298 to 298)\n-        lookupSlot_raw_ret_t { status: res_ret.status, slot: res_ret.slot }\n+        lookupSlot_raw_ret_t {\n+            status: res_ret.status,\n+            slot: res_ret.slot,\n+        }\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 344 to 345)\n-        cte_insert(&cap_t::new_reply_cap(can_grant as usize, 0, sender.get_ptr()),\n-                   reply_slot, caller_slot);\n+        cte_insert(\n+            &cap_t::new_reply_cap(can_grant as usize, 0, sender.get_ptr()),\n+            reply_slot,\n+            caller_slot,\n+        );\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 369 to 369)\n-            return Some(convert_to_mut_type_ref::<seL4_IPCBuffer>(base_ptr + (w_buffer_ptr & MASK!(page_bits))));\n+            return Some(convert_to_mut_type_ref::<seL4_IPCBuffer>(\n+                base_ptr + (w_buffer_ptr & MASK!(page_bits)),\n+            ));\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 374 to 374)\n-    pub fn lookup_extra_caps(&self, res: &mut [pptr_t; seL4_MsgMaxExtraCaps]) -> Result<(), seL4_Fault_t>{\n+    pub fn lookup_extra_caps(\n+        &self,\n+        res: &mut [pptr_t; seL4_MsgMaxExtraCaps],\n+    ) -> Result<(), seL4_Fault_t> {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 382 to 382)\n-                if unlikely(lu_ret.status != exception_t::EXCEPTION_NONE)  {\n+                if unlikely(lu_ret.status != exception_t::EXCEPTION_NONE) {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 395 to 395)\n-    pub fn lookup_extra_caps_with_buf(&self, res: &mut [pptr_t; seL4_MsgMaxExtraCaps], buf: Option<&seL4_IPCBuffer>) -> Result<(), seL4_Fault_t>{\n+    pub fn lookup_extra_caps_with_buf(\n+        &self,\n+        res: &mut [pptr_t; seL4_MsgMaxExtraCaps],\n+        buf: Option<&seL4_IPCBuffer>,\n+    ) -> Result<(), seL4_Fault_t> {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 403 to 403)\n-                if unlikely(lu_ret.status != exception_t::EXCEPTION_NONE)  {\n+                if unlikely(lu_ret.status != exception_t::EXCEPTION_NONE) {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 416 to 416)\n-    pub fn lookup_mut_ipc_buffer(&mut self, is_receiver: bool) -> Option<&'static mut seL4_IPCBuffer> {\n+    pub fn lookup_mut_ipc_buffer(\n+        &mut self,\n+        is_receiver: bool,\n+    ) -> Option<&'static mut seL4_IPCBuffer> {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 427 to 427)\n-            return Some(convert_to_mut_type_ref::<seL4_IPCBuffer>(base_ptr + (w_buffer_ptr & MASK!(page_bits))));\n+            return Some(convert_to_mut_type_ref::<seL4_IPCBuffer>(\n+                base_ptr + (w_buffer_ptr & MASK!(page_bits)),\n+            ));\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 447 to 447)\n-\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 463 to 463)\n-            },\n+            }\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 467 to 467)\n-            },\n+            }\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 478 to 478)\n-            let cptr= buffer.receiveCNode;\n+            let cptr = buffer.receiveCNode;\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 485 to 485)\n-            if unlikely(lus_ret.status != exception_t::EXCEPTION_NONE || lus_ret.bitsRemaining != 0) {\n+            if unlikely(lus_ret.status != exception_t::EXCEPTION_NONE || lus_ret.bitsRemaining != 0)\n+            {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 488 to 488)\n-            return Some(convert_to_mut_type_ref::<cte_t>(lus_ret.slot as usize))\n+            return Some(convert_to_mut_type_ref::<cte_t>(lus_ret.slot as usize));\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 490 to 490)\n-        return None\n+        return None;\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 500 to 500)\n-        if let (Some(send_buffer), Some(recv_buffer)) = (self.lookup_ipc_buffer(false), receiver.lookup_mut_ipc_buffer(true)) {\n+        if let (Some(send_buffer), Some(recv_buffer)) = (\n+            self.lookup_ipc_buffer(false),\n+            receiver.lookup_mut_ipc_buffer(true),\n+        ) {\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 569 to 571)\n-                receiver.set_mr(seL4_CapFault_InRecvPhase, self.tcbFault.cap_fault_get_in_receive_phase());\n-                receiver.set_lookup_fault_mrs(seL4_CapFault_LookupFailureType, &self.tcbLookupFailure)\n-            },\n+                receiver.set_mr(\n+                    seL4_CapFault_InRecvPhase,\n+                    self.tcbFault.cap_fault_get_in_receive_phase(),\n+                );\n+                receiver\n+                    .set_lookup_fault_mrs(seL4_CapFault_LookupFailureType, &self.tcbLookupFailure)\n+            }\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 574 to 575)\n-                receiver.set_mr(n_syscallMessage, self.tcbFault.unknown_syscall_get_syscall_number())\n-            },\n+                receiver.set_mr(\n+                    n_syscallMessage,\n+                    self.tcbFault.unknown_syscall_get_syscall_number(),\n+                )\n+            }\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 578 to 580)\n-                receiver.set_mr(n_exceptionMessage, self.tcbFault.user_exeception_get_number());\n-                receiver.set_mr(n_exceptionMessage + 1, self.tcbFault.user_exeception_get_code())\n-            },\n+                receiver.set_mr(\n+                    n_exceptionMessage,\n+                    self.tcbFault.user_exeception_get_number(),\n+                );\n+                receiver.set_mr(\n+                    n_exceptionMessage + 1,\n+                    self.tcbFault.user_exeception_get_code(),\n+                )\n+            }\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 584 to 584)\n-                receiver.set_mr(seL4_VMFault_PrefetchFault, self.tcbFault.vm_fault_get_instruction_fault());\n+                receiver.set_mr(\n+                    seL4_VMFault_PrefetchFault,\n+                    self.tcbFault.vm_fault_get_instruction_fault(),\n+                );\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 586 to 586)\n-            },\n+            }\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 592 to 592)\n-\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb.rs (original lines from 600 to 600)\n+\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb_queue.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb_queue.rs (original lines from 5 to 5)\n-\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/tcb_queue.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/tcb_queue.rs (original lines from 42 to 42)\n-        return self.head == 0\n+        return self.head == 0;\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/thread_state.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/thread_state.rs (original lines from 32 to 34)\n-        unsafe {\n-            core::mem::transmute::<u8, ThreadState>(self.get_ts_type() as u8)\n-        }\n+        unsafe { core::mem::transmute::<u8, ThreadState>(self.get_ts_type() as u8) }\n"
    },
    {
      "cmd_idx": 134,
      "file": "src/thread_state.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_task/src/thread_state.rs (original lines from 37 to 37)\n+\n"
    },
    {
      "cmd_idx": 135,
      "file": "/home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: invalid register `x10`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:18:9\n   |\n18 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 135,
      "file": "/home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: invalid register `x11`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:19:9\n   |\n19 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 135,
      "file": "/home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: invalid register `x12`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:20:9\n   |\n20 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 135,
      "file": "/home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: invalid register `x17`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:21:9\n   |\n21 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 137,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-02T04:16:29Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-02T04:16:29Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-11-02T04:16:32Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:16:32Z WARN  lockbud::callbacks] crate riscv_target contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-02T04:16:35Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:16:35Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 142,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=sel4_task, checker=Clippy\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_task\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling memchr v2.7.4\n   Compiling proc-macro2 v1.0.89\n   Compiling regex-syntax v0.8.5\n   Compiling unicode-ident v1.0.13\n   Compiling thiserror v1.0.66\n   Compiling ucd-trie v0.1.7\n   Compiling aho-corasick v1.1.3\n   Compiling quote v1.0.37\n   Compiling syn v2.0.86\n   Compiling lazy_static v1.5.0\n   Compiling semver-parser v0.7.0\n   Compiling semver v0.9.0\n   Compiling regex-automata v0.4.8\n   Compiling rustix v0.38.38\n   Compiling once_cell v1.20.2\n   Compiling rustc_version v0.2.3\n   Compiling regex v1.11.1\n   Compiling linux-raw-sys v0.4.14\n   Compiling riscv-target v0.1.2\n   Compiling bitflags v2.6.0\n   Compiling bare-metal v0.2.5\n   Compiling thiserror-impl v1.0.66\n   Compiling home v0.5.9\n   Compiling syn v1.0.109\n   Compiling either v1.13.0\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling which v4.4.2\n   Compiling pest v2.7.14\n   Compiling sel4-rustfmt-helper v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n    Checking bitflags v1.3.2\n    Checking log v0.4.22\n   Compiling glob v0.3.1\n    Checking serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n    Checking scopeguard v1.2.0\n   Compiling sel4-bitfield-types v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n    Checking bit_field v0.10.2\n   Compiling riscv v0.6.0 (https://github.com/rcore-os/riscv#11d43cf7)\n    Checking tock-registers v0.9.0\n    Checking serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n    Checking spin v0.9.8\n    Checking serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\n   Compiling riscv v0.6.0 (https://gitee.com/rcore-os/riscv#11d43cf7)\nerror: could not compile `serial-impl-sbi` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 143,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=sel4_task, checker=Lockbud\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_task\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling memchr v2.7.4\n   Compiling proc-macro2 v1.0.89\n   Compiling unicode-ident v1.0.13\n   Compiling regex-syntax v0.8.5\n   Compiling thiserror v1.0.66\n   Compiling semver-parser v0.7.0\n   Compiling aho-corasick v1.1.3\n   Compiling quote v1.0.37\n   Compiling syn v2.0.86\n   Compiling lazy_static v1.5.0\n   Compiling ucd-trie v0.1.7\n   Compiling semver v0.9.0\n   Compiling once_cell v1.20.2\n[2024-11-02T04:16:29Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-02T04:16:29Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling regex-automata v0.4.8\n   Compiling rustix v0.38.38\n   Compiling rustc_version v0.2.3\n   Compiling bitflags v2.6.0\n   Compiling linux-raw-sys v0.4.14\n   Compiling bare-metal v0.2.5\n   Compiling syn v1.0.109\n   Compiling regex v1.11.1\n   Compiling thiserror-impl v1.0.66\n   Compiling riscv-target v0.1.2\n[2024-11-02T04:16:32Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:16:32Z WARN  lockbud::callbacks] crate riscv_target contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling autocfg v1.4.0\n   Compiling either v1.13.0\n   Compiling home v0.5.9\n   Compiling lock_api v0.4.12\n   Compiling which v4.4.2\n   Compiling sel4-rustfmt-helper v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n   Compiling pest v2.7.14\n   Compiling sel4-bitfield-types v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling log v0.4.22\n   Compiling serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n   Compiling scopeguard v1.2.0\n[2024-11-02T04:16:35Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:16:35Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling glob v0.3.1\n   Compiling riscv v0.6.0 (https://github.com/rcore-os/riscv#11d43cf7)\n   Compiling tock-registers v0.9.0\n   Compiling spin v0.9.8\n   Compiling serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n   Compiling serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\nerror: invalid register `x10`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:18:9\n   |\n18 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x11`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:19:9\n   |\n19 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x12`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:20:9\n   |\n20 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x17`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:21:9\n   |\n21 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\nerror: could not compile `serial-impl-sbi` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 144,
      "file": "(virtual) rap",
      "kind": "Cargo",
      "raw": "// pkg_name=sel4_task, checker=Rap\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_task\n// cmd=cargo +nightly-2024-06-30 rap -F -M\n   Compiling memchr v2.7.4\n   Compiling proc-macro2 v1.0.89\n   Compiling unicode-ident v1.0.13\n   Compiling regex-syntax v0.8.5\n   Compiling thiserror v1.0.66\n   Compiling lazy_static v1.5.0\n   Compiling aho-corasick v1.1.3\n   Compiling semver-parser v0.7.0\n   Compiling quote v1.0.37\n   Compiling ucd-trie v0.1.7\n   Compiling syn v2.0.86\n   Compiling semver v0.9.0\n   Compiling once_cell v1.20.2\n   Compiling regex-automata v0.4.8\n   Compiling rustix v0.38.38\n   Compiling rustc_version v0.2.3\n   Compiling linux-raw-sys v0.4.14\n   Compiling bitflags v2.6.0\n   Compiling bare-metal v0.2.5\n   Compiling syn v1.0.109\n   Compiling either v1.13.0\n   Compiling regex v1.11.1\n   Compiling thiserror-impl v1.0.66\n   Compiling riscv-target v0.1.2\n   Compiling home v0.5.9\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling which v4.4.2\n   Compiling pest v2.7.14\n   Compiling sel4-rustfmt-helper v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n    Checking scopeguard v1.2.0\n    Checking bit_field v0.10.2\n    Checking serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n    Checking bitflags v1.3.2\n   Compiling glob v0.3.1\n    Checking log v0.4.22\n   Compiling sel4-bitfield-types v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n   Compiling riscv v0.6.0 (https://github.com/rcore-os/riscv#11d43cf7)\n    Checking tock-registers v0.9.0\n    Checking spin v0.9.8\n    Checking serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n   Compiling pest_meta v2.7.14\n    Checking serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\nerror: invalid register `x10`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:18:9\n   |\n18 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x11`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:19:9\n   |\n19 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x12`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:20:9\n   |\n20 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x17`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:21:9\n   |\n21 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\nerror: could not compile `serial-impl-sbi` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n04:16:44|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/asid.rs (original lines from 4 to 5)\n-use sel4_common::{structures::exception_t, sel4_config::*, utils::convert_to_option_mut_type_ref, fault::*, BIT, MASK};\n-use sel4_cspace::interface::cap_t;\n+use super::{interface::set_vm_root, pte::pte_t};\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/asid.rs (original lines from 7 to 7)\n-use super::{pte::pte_t, interface::set_vm_root};\n+use sel4_common::{\n+    fault::*, sel4_config::*, structures::exception_t, utils::convert_to_option_mut_type_ref, BIT,\n+    MASK,\n+};\n+use sel4_cspace::interface::cap_t;\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/asid.rs (original lines from 52 to 52)\n-        return convert_to_option_mut_type_ref::<asid_pool_t>(riscvKSASIDTable[index] as usize)\n+        return convert_to_option_mut_type_ref::<asid_pool_t>(riscvKSASIDTable[index] as usize);\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/asid.rs (original lines from 71 to 73)\n-    let poolPtr =  unsafe {\n-        riscvKSASIDTable[asid >> asidLowBits]\n-    };\n+    let poolPtr = unsafe { riscvKSASIDTable[asid >> asidLowBits] };\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/asid.rs (original lines from 80 to 82)\n-    let vspace_root = unsafe {\n-        (*poolPtr).array[asid & MASK!(asidLowBits)]\n-    };\n+    let vspace_root = unsafe { (*poolPtr).array[asid & MASK!(asidLowBits)] };\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/asid.rs (original lines from 107 to 107)\n-pub fn delete_asid_pool(asid_base: asid_t, pool: *mut asid_pool_t, default_vspace_cap: &cap_t) -> Result<(), lookup_fault_t> {\n+pub fn delete_asid_pool(\n+    asid_base: asid_t,\n+    pool: *mut asid_pool_t,\n+    default_vspace_cap: &cap_t,\n+) -> Result<(), lookup_fault_t> {\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/asid.rs (original lines from 118 to 118)\n-pub fn delete_asid(asid: asid_t, vspace: *mut pte_t, default_vspace_cap: &cap_t) -> Result<(), lookup_fault_t> {\n+pub fn delete_asid(\n+    asid: asid_t,\n+    vspace: *mut pte_t,\n+    default_vspace_cap: &cap_t,\n+) -> Result<(), lookup_fault_t> {\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/asid.rs (original lines from 130 to 130)\n-\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 2 to 2)\n-use sel4_cspace::interface::{cap_t, CapTag};\n+use super::pte::pte_t;\n+use super::utils::{\n+    kpptr_to_paddr, RISCV_GET_LVL_PGSIZE, RISCV_GET_LVL_PGSIZE_BITS, RISCV_GET_PT_INDEX,\n+};\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 4 to 4)\n-use sel4_common::{BIT, ROUND_DOWN};\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 6 to 6)\n-use sel4_common::sel4_config::{KERNEL_ELF_BASE, KERNEL_ELF_PADDR_BASE, PADDR_BASE, PPTR_BASE, PPTR_BASE_OFFSET, PPTR_TOP, PT_INDEX_BITS, seL4_PageBits};\n+use sel4_common::sel4_config::{\n+    seL4_PageBits, KERNEL_ELF_BASE, KERNEL_ELF_PADDR_BASE, PADDR_BASE, PPTR_BASE, PPTR_BASE_OFFSET,\n+    PPTR_TOP, PT_INDEX_BITS,\n+};\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 9 to 10)\n-use super::pte::pte_t;\n-use super::utils::{RISCV_GET_PT_INDEX, RISCV_GET_LVL_PGSIZE, RISCV_GET_LVL_PGSIZE_BITS, kpptr_to_paddr};\n+use sel4_common::{BIT, ROUND_DOWN};\n+use sel4_cspace::interface::{cap_t, CapTag};\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 12 to 12)\n-use super::{satp::{setVSpaceRoot, sfence}, asid::{find_vspace_for_asid, asid_t}, utils::pptr_to_paddr, structures::{vptr_t, pptr_t}};\n+use super::{\n+    asid::{asid_t, find_vspace_for_asid},\n+    satp::{setVSpaceRoot, sfence},\n+    structures::{pptr_t, vptr_t},\n+    utils::pptr_to_paddr,\n+};\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 24 to 24)\n-\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 81 to 81)\n-\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 94 to 94)\n-        find_ret.status != exception_t::EXCEPTION_NONE || find_ret.vspace_root.is_none() || find_ret.vspace_root.unwrap() != lvl1pt,\n+        find_ret.status != exception_t::EXCEPTION_NONE\n+            || find_ret.vspace_root.is_none()\n+            || find_ret.vspace_root.unwrap() != lvl1pt,\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 107 to 107)\n-\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 109 to 109)\n-pub fn unmapPage(page_size: usize, asid: asid_t, vptr: vptr_t, pptr: pptr_t) -> Result<(), lookup_fault_t> {\n+pub fn unmapPage(\n+    page_size: usize,\n+    asid: asid_t,\n+    vptr: vptr_t,\n+    pptr: pptr_t,\n+) -> Result<(), lookup_fault_t> {\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 115 to 115)\n-    let lu_ret = unsafe {(*find_ret.vspace_root.unwrap()).lookup_pt_slot(vptr)};\n+    let lu_ret = unsafe { (*find_ret.vspace_root.unwrap()).lookup_pt_slot(vptr) };\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 121 to 121)\n-    let slot = unsafe {&(*lu_ret.ptSlot)};\n+    let slot = unsafe { &(*lu_ret.ptSlot) };\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 123 to 123)\n-    if slot.get_vaild() == 0 || slot.is_pte_table() || slot.get_ppn() << seL4_PageBits != pptr_to_paddr(pptr) {\n+    if slot.get_vaild() == 0\n+        || slot.is_pte_table()\n+        || slot.get_ppn() << seL4_PageBits != pptr_to_paddr(pptr)\n+    {\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 134 to 134)\n+\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/lib.rs (original lines from 7 to 11)\n-mod structures;\n-mod vm_rights;\n-mod satp;\n-mod utils;\n-mod pte;\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/lib.rs (original lines from 14 to 14)\n+mod pte;\n+mod satp;\n+mod structures;\n+mod utils;\n+mod vm_rights;\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/lib.rs (original lines from 15 to 17)\n-pub use structures::*;\n-pub use interface::{activate_kernel_vspace, rust_map_kernel_window, copyGlobalMappings, set_vm_root, unmapPage};\n-pub use vm_rights::{VMReadWrite, VMReadOnly, maskVMRights};\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/lib.rs (original lines from 19 to 20)\n-    asid_t, asid_pool_t, riscvKSASIDTable, delete_asid_pool, delete_asid,\n-    find_vspace_for_asid, get_asid_pool_by_index, set_asid_pool_by_index\n+    asid_pool_t, asid_t, delete_asid, delete_asid_pool, find_vspace_for_asid,\n+    get_asid_pool_by_index, riscvKSASIDTable, set_asid_pool_by_index,\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/lib.rs (original lines from 22 to 22)\n-pub use utils::{pptr_to_paddr, paddr_to_pptr, kpptr_to_paddr, RISCV_GET_LVL_PGSIZE_BITS, RISCV_GET_LVL_PGSIZE, checkVPAlignment};\n+pub use interface::{\n+    activate_kernel_vspace, copyGlobalMappings, rust_map_kernel_window, set_vm_root, unmapPage,\n+};\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/lib.rs (original lines from 24 to 24)\n-pub use satp::{sfence, setVSpaceRoot};\n+pub use satp::{setVSpaceRoot, sfence};\n+pub use structures::*;\n+pub use utils::{\n+    checkVPAlignment, kpptr_to_paddr, paddr_to_pptr, pptr_to_paddr, RISCV_GET_LVL_PGSIZE,\n+    RISCV_GET_LVL_PGSIZE_BITS,\n+};\n+pub use vm_rights::{maskVMRights, VMReadOnly, VMReadWrite};\n+\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 2 to 3)\n-use sel4_common::MASK;\n-use sel4_common::sel4_config::{CONFIG_PT_LEVELS, PT_INDEX_BITS, seL4_PageBits, seL4_PageTableBits};\n+use sel4_common::sel4_config::{\n+    seL4_PageBits, seL4_PageTableBits, CONFIG_PT_LEVELS, PT_INDEX_BITS,\n+};\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 6 to 6)\n+use sel4_common::MASK;\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 7 to 9)\n-\n-use super::{structures::vptr_t, satp::sfence};\n-use super::utils::{paddr_to_pptr, RISCV_GET_PT_INDEX};\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 11 to 11)\n-use super::vm_rights::{RISCVGetWriteFromVMRights, RISCVGetReadFromVMRights};\n+use super::utils::{paddr_to_pptr, RISCV_GET_PT_INDEX};\n+use super::vm_rights::{RISCVGetReadFromVMRights, RISCVGetWriteFromVMRights};\n+use super::{satp::sfence, structures::vptr_t};\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 33 to 35)\n-    pub fn new(ppn: usize, sw: usize, dirty: usize, accessed: usize, global: usize, user: usize, execute: usize, write: usize,\n-               read: usize, valid: usize) -> Self {\n-\n+    pub fn new(\n+        ppn: usize,\n+        sw: usize,\n+        dirty: usize,\n+        accessed: usize,\n+        global: usize,\n+        user: usize,\n+        execute: usize,\n+        write: usize,\n+        read: usize,\n+        valid: usize,\n+    ) -> Self {\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 80 to 81)\n-            ppn, 0, is_leaf as usize, is_leaf as usize, 1,\n-            0, exec as usize, write as usize,read as usize, 1\n+            ppn,\n+            0,\n+            is_leaf as usize,\n+            is_leaf as usize,\n+            1,\n+            0,\n+            exec as usize,\n+            write as usize,\n+            read as usize,\n+            1,\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 124 to 124)\n-        self.get_vaild() != 0 && !(self.get_read() != 0 ||self.get_write() != 0 || self.get_execute() != 0)\n+        self.get_vaild() != 0\n+            && !(self.get_read() != 0 || self.get_write() != 0 || self.get_execute() != 0)\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 147 to 147)\n-        while unsafe {(*ret.ptSlot).is_pte_table()} && level > 0 {\n+        while unsafe { (*ret.ptSlot).is_pte_table() } && level > 0 {\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 150 to 150)\n-            pt = unsafe {(*ret.ptSlot).get_pte_from_ppn_mut() as *mut pte_t};\n+            pt = unsafe { (*ret.ptSlot).get_pte_from_ppn_mut() as *mut pte_t };\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/satp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/satp.rs (original lines from 1 to 1)\n+use super::structures::paddr_t;\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/satp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/satp.rs (original lines from 3 to 3)\n-use super::structures::paddr_t;\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/satp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/satp.rs (original lines from 50 to 50)\n-\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/satp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/satp.rs (original lines from 62 to 62)\n+\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/structures.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/structures.rs (original lines from 11 to 11)\n-\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/structures.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/structures.rs (original lines from 20 to 22)\n-        Self {\n-            words: [w]\n-        }\n+        Self { words: [w] }\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/structures.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/structures.rs (original lines from 34 to 34)\n+\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/utils.rs (original lines from 1 to 3)\n-use sel4_common::{BIT, MASK};\n-use sel4_common::sel4_config::{CONFIG_PT_LEVELS, KERNEL_ELF_BASE_OFFSET, PPTR_BASE_OFFSET, PT_INDEX_BITS, seL4_PageBits};\n-use sel4_common::utils::pageBitsForSize;\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/utils.rs (original lines from 5 to 5)\n-\n+use sel4_common::sel4_config::{\n+    seL4_PageBits, CONFIG_PT_LEVELS, KERNEL_ELF_BASE_OFFSET, PPTR_BASE_OFFSET, PT_INDEX_BITS,\n+};\n+use sel4_common::utils::pageBitsForSize;\n+use sel4_common::{BIT, MASK};\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/utils.rs (original lines from 43 to 43)\n+\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/vm_rights.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/vm_rights.rs (original lines from 7 to 7)\n-\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/vm_rights.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/vm_rights.rs (original lines from 26 to 26)\n-        }\n+        };\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/vm_rights.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/vm_rights.rs (original lines from 30 to 30)\n+\n"
    },
    {
      "cmd_idx": 146,
      "file": "/home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: invalid register `x10`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:18:9\n   |\n18 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 146,
      "file": "/home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: invalid register `x11`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:19:9\n   |\n19 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 146,
      "file": "/home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: invalid register `x12`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:20:9\n   |\n20 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 146,
      "file": "/home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: invalid register `x17`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:21:9\n   |\n21 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 148,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-02T04:17:02Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-02T04:17:02Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-11-02T04:17:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:17:05Z WARN  lockbud::callbacks] crate riscv_target contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-02T04:17:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:17:08Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 153,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=sel4_vspace, checker=Clippy\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_vspace\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling memchr v2.7.4\n   Compiling proc-macro2 v1.0.89\n   Compiling unicode-ident v1.0.13\n   Compiling regex-syntax v0.8.5\n   Compiling thiserror v1.0.66\n   Compiling semver-parser v0.7.0\n   Compiling aho-corasick v1.1.3\n   Compiling quote v1.0.37\n   Compiling syn v2.0.86\n   Compiling ucd-trie v0.1.7\n   Compiling lazy_static v1.5.0\n   Compiling semver v0.9.0\n   Compiling once_cell v1.20.2\n   Compiling regex-automata v0.4.8\n   Compiling rustix v0.38.38\n   Compiling rustc_version v0.2.3\n   Compiling linux-raw-sys v0.4.14\n   Compiling bitflags v2.6.0\n   Compiling bare-metal v0.2.5\n   Compiling regex v1.11.1\n   Compiling riscv-target v0.1.2\n   Compiling thiserror-impl v1.0.66\n   Compiling autocfg v1.4.0\n   Compiling either v1.13.0\n   Compiling syn v1.0.109\n   Compiling home v0.5.9\n   Compiling which v4.4.2\n   Compiling lock_api v0.4.12\n   Compiling sel4-rustfmt-helper v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n   Compiling pest v2.7.14\n   Compiling glob v0.3.1\n    Checking bit_field v0.10.2\n   Compiling sel4-bitfield-types v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n    Checking serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n    Checking bitflags v1.3.2\n    Checking scopeguard v1.2.0\n    Checking log v0.4.22\n   Compiling riscv v0.6.0 (https://github.com/rcore-os/riscv#11d43cf7)\n    Checking tock-registers v0.9.0\n    Checking serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n    Checking spin v0.9.8\n    Checking serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\n   Compiling riscv v0.6.0 (https://gitee.com/rcore-os/riscv#11d43cf7)\nerror: could not compile `serial-impl-sbi` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 154,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=sel4_vspace, checker=Lockbud\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_vspace\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling memchr v2.7.4\n   Compiling proc-macro2 v1.0.89\n   Compiling unicode-ident v1.0.13\n   Compiling regex-syntax v0.8.5\n   Compiling thiserror v1.0.66\n   Compiling semver-parser v0.7.0\n   Compiling aho-corasick v1.1.3\n   Compiling quote v1.0.37\n   Compiling syn v2.0.86\n   Compiling lazy_static v1.5.0\n   Compiling ucd-trie v0.1.7\n   Compiling semver v0.9.0\n   Compiling once_cell v1.20.2\n[2024-11-02T04:17:02Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-02T04:17:02Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling regex-automata v0.4.8\n   Compiling rustix v0.38.38\n   Compiling rustc_version v0.2.3\n   Compiling linux-raw-sys v0.4.14\n   Compiling bitflags v2.6.0\n   Compiling bare-metal v0.2.5\n   Compiling either v1.13.0\n   Compiling regex v1.11.1\n   Compiling thiserror-impl v1.0.66\n   Compiling riscv-target v0.1.2\n[2024-11-02T04:17:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:17:05Z WARN  lockbud::callbacks] crate riscv_target contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling syn v1.0.109\n   Compiling autocfg v1.4.0\n   Compiling home v0.5.9\n   Compiling which v4.4.2\n   Compiling lock_api v0.4.12\n   Compiling pest v2.7.14\n   Compiling sel4-rustfmt-helper v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n   Compiling glob v0.3.1\n   Compiling log v0.4.22\n[2024-11-02T04:17:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:17:08Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bitflags v1.3.2\n   Compiling scopeguard v1.2.0\n   Compiling bit_field v0.10.2\n   Compiling serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n   Compiling sel4-bitfield-types v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n   Compiling riscv v0.6.0 (https://github.com/rcore-os/riscv#11d43cf7)\n   Compiling tock-registers v0.9.0\n   Compiling serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n   Compiling spin v0.9.8\n   Compiling serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\nerror: invalid register `x10`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:18:9\n   |\n18 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x11`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:19:9\n   |\n19 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x12`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:20:9\n   |\n20 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x17`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:21:9\n   |\n21 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\nerror: could not compile `serial-impl-sbi` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 155,
      "file": "(virtual) rap",
      "kind": "Cargo",
      "raw": "// pkg_name=sel4_vspace, checker=Rap\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_vspace\n// cmd=cargo +nightly-2024-06-30 rap -F -M\n   Compiling memchr v2.7.4\n   Compiling proc-macro2 v1.0.89\n   Compiling unicode-ident v1.0.13\n   Compiling regex-syntax v0.8.5\n   Compiling thiserror v1.0.66\n   Compiling semver-parser v0.7.0\n   Compiling aho-corasick v1.1.3\n   Compiling ucd-trie v0.1.7\n   Compiling quote v1.0.37\n   Compiling lazy_static v1.5.0\n   Compiling syn v2.0.86\n   Compiling semver v0.9.0\n   Compiling once_cell v1.20.2\n   Compiling regex-automata v0.4.8\n   Compiling rustix v0.38.38\n   Compiling rustc_version v0.2.3\n   Compiling linux-raw-sys v0.4.14\n   Compiling bitflags v2.6.0\n   Compiling bare-metal v0.2.5\n   Compiling syn v1.0.109\n   Compiling home v0.5.9\n   Compiling regex v1.11.1\n   Compiling thiserror-impl v1.0.66\n   Compiling riscv-target v0.1.2\n   Compiling either v1.13.0\n   Compiling autocfg v1.4.0\n   Compiling pest v2.7.14\n   Compiling lock_api v0.4.12\n   Compiling which v4.4.2\n   Compiling sel4-rustfmt-helper v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n    Checking scopeguard v1.2.0\n   Compiling glob v0.3.1\n    Checking bitflags v1.3.2\n    Checking serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n   Compiling sel4-bitfield-types v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n   Compiling riscv v0.6.0 (https://github.com/rcore-os/riscv#11d43cf7)\n    Checking tock-registers v0.9.0\n   Compiling pest_meta v2.7.14\n    Checking serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n    Checking spin v0.9.8\n    Checking serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\nerror: invalid register `x10`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:18:9\n   |\n18 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x11`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:19:9\n   |\n19 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x12`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:20:9\n   |\n20 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x17`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:21:9\n   |\n21 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\nerror: could not compile `serial-impl-sbi` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n04:17:17|RAP|ERROR|: Finished with non-zero exit code.\n"
    }
  ]
}