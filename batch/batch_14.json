{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.83.0-nightly (eb4e23467 2024-10-09)",
          "commit_hash": "eb4e2346748e1760f74fcaa27b42431e0b95f8f3",
          "commit_date": "2024-10-09",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.83.0-nightly",
          "llvm_version": "19.1.1"
        },
        "installed": [
          {
            "channel": "nightly-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "x86_64-unknown-linux-gnu"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-linux-gnu",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1728565256189,
        "finish": 1728565257347,
        "duration_ms": 1157,
        "git_time": "2024-10-10 20:56:54 +0800",
        "git_sha": "269cd26c03b48fe4fe82c633fc5a6a06d0e659c8"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Mirai",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "mirai": [
          "Mirai"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "shilei-massclouds",
        "repo": "early_console"
      },
      {
        "user": "yuoo655",
        "repo": "ext4_rs"
      },
      {
        "user": "yuoo655",
        "repo": "ext4libtest"
      }
    ],
    "packages": [
      {
        "name": "early_console",
        "repo": {
          "repo_idx": 0,
          "user": "shilei-massclouds",
          "repo": "early_console"
        }
      },
      {
        "name": "rt_early_console",
        "repo": {
          "repo_idx": 0,
          "user": "shilei-massclouds",
          "repo": "early_console"
        }
      },
      {
        "name": "ext4_rs",
        "repo": {
          "repo_idx": 1,
          "user": "yuoo655",
          "repo": "ext4_rs"
        }
      },
      {
        "name": "ext4libtest",
        "repo": {
          "repo_idx": 2,
          "user": "yuoo655",
          "repo": "ext4libtest"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p early_console -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p early_console -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 16,
      "duration_ms": 5240,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 490,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 45,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 4915,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 535,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 5240,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 490,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 4915,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 535,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p rt_early_console -- --emit=json",
      "count": 0,
      "duration_ms": 94,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p rt_early_console -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p rt_early_console -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 10172,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 587,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 2292,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 6891,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 810,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 2970,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 10172,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 587,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 2292,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 6891,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 810,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2970,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p ext4_rs -- --emit=json",
      "count": 261,
      "duration_ms": 176,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-06-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 115,
      "duration_ms": 970,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-06-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 18411,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-06-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 1914,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-06-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 970,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-06-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 18411,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-06-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p ext4libtest -- --emit=json",
      "count": 4,
      "duration_ms": 285,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 3921,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 3590,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 3181,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 3921,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 3590,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 3181,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n --> src/lib.rs:6:20\n  |\n6 | pub use platform::{getchar, putchar};\n  |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n  |                    |\n  |                    no `getchar` in `platform`\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n --> src/lib.rs:6:20\n  |\n6 | pub use platform::{getchar, putchar};\n  |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n  |                    |\n  |                    no `getchar` in `platform`\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/platform/dummy/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: unresolved import\n  --> src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `console_init` in module `platform`\n  --> src/lib.rs:10:15\n   |\n10 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `putchar` in module `platform`\n  --> src/lib.rs:16:19\n   |\n16 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n16 -         platform::putchar(*c);\n16 +         putchar(*c);\n   |\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `getchar` in module `platform`\n  --> src/lib.rs:23:36\n   |\n23 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n23 -         if let Some(c) = platform::getchar() {\n23 +         if let Some(c) = getchar() {\n   |\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/platform/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:10:42\n   |\n10 |     if #[cfg(all(target_arch = \"x86_64\", platform_family = \"x86-pc\"))] {\n   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `fmt_debug`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"x86-pc\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"x86-pc\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   = note: `#[warn(unexpected_cfgs)]` on by default\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/platform/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:13:50\n   |\n13 |     } else if #[cfg(all(target_arch = \"riscv64\", platform_family = \"riscv64-qemu-virt\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"riscv64-qemu-virt\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"riscv64-qemu-virt\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/platform/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:16:50\n   |\n16 |     } else if #[cfg(all(target_arch = \"aarch64\", platform_family = \"aarch64-qemu-virt\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-qemu-virt\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-qemu-virt\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/platform/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:19:50\n   |\n19 |     } else if #[cfg(all(target_arch = \"aarch64\", platform_family = \"aarch64-raspi\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-raspi\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-raspi\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/platform/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:22:50\n   |\n22 |     } else if #[cfg(all(target_arch = \"aarch64\", platform_family = \"aarch64-bsta1000b\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-bsta1000b\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-bsta1000b\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/platform/dummy/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition value: `smp`\n  --> src/platform/dummy/mod.rs:23:7\n   |\n23 | #[cfg(feature = \"smp\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `smp` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/platform/dummy/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition value: `irq`\n  --> src/platform/dummy/mod.rs:58:7\n   |\n58 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `irq` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/platform/dummy/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition value: `smp`\n  --> src/platform/dummy/mod.rs:86:7\n   |\n86 | #[cfg(feature = \"smp\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `smp` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/time.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition value: `irq`\n  --> src/time.rs:13:7\n   |\n13 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `irq` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/time.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition value: `irq`\n  --> src/time.rs:15:7\n   |\n15 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `irq` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n --> src/lib.rs:6:20\n  |\n6 | pub use platform::{getchar, putchar};\n  |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n  |                    |\n  |                    no `getchar` in `platform`\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n --> src/lib.rs:6:20\n  |\n6 | pub use platform::{getchar, putchar};\n  |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n  |                    |\n  |                    no `getchar` in `platform`\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/platform/dummy/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: unresolved import\n  --> src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `putchar` in module `platform`\n  --> src/lib.rs:16:19\n   |\n16 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n16 -         platform::putchar(*c);\n16 +         putchar(*c);\n   |\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `getchar` in module `platform`\n  --> src/lib.rs:23:36\n   |\n23 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n23 -         if let Some(c) = platform::getchar() {\n23 +         if let Some(c) = getchar() {\n   |\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/platform/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:10:42\n   |\n10 |     if #[cfg(all(target_arch = \"x86_64\", platform_family = \"x86-pc\"))] {\n   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `fmt_debug`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"x86-pc\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"x86-pc\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   = note: `#[warn(unexpected_cfgs)]` on by default\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/platform/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:13:50\n   |\n13 |     } else if #[cfg(all(target_arch = \"riscv64\", platform_family = \"riscv64-qemu-virt\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"riscv64-qemu-virt\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"riscv64-qemu-virt\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/platform/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:16:50\n   |\n16 |     } else if #[cfg(all(target_arch = \"aarch64\", platform_family = \"aarch64-qemu-virt\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-qemu-virt\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-qemu-virt\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/platform/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:19:50\n   |\n19 |     } else if #[cfg(all(target_arch = \"aarch64\", platform_family = \"aarch64-raspi\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-raspi\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-raspi\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/platform/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:22:50\n   |\n22 |     } else if #[cfg(all(target_arch = \"aarch64\", platform_family = \"aarch64-bsta1000b\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-bsta1000b\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-bsta1000b\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/platform/dummy/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition value: `smp`\n  --> src/platform/dummy/mod.rs:23:7\n   |\n23 | #[cfg(feature = \"smp\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `smp` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/platform/dummy/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition value: `irq`\n  --> src/platform/dummy/mod.rs:58:7\n   |\n58 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `irq` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/platform/dummy/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition value: `smp`\n  --> src/platform/dummy/mod.rs:86:7\n   |\n86 | #[cfg(feature = \"smp\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `smp` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/time.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition value: `irq`\n  --> src/time.rs:13:7\n   |\n13 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `irq` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/time.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition value: `irq`\n  --> src/time.rs:15:7\n   |\n15 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `irq` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-09T07:35:42Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:35:42Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 6,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-09T07:35:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:35:46Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 7,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=early_console, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_14/shilei-massclouds/early_console/early_console\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axconfig.git`\n    Updating crates.io index\n    Updating git repository `ssh://git@github.com/shilei-massclouds/spinbase.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/kernel_guard_base`\n     Locking 32 packages to latest compatible versions\n      Adding riscv v0.10.1 (available: v0.11.1)\n      Adding sbi-rt v0.0.2 (available: v0.0.3)\n      Adding x86_64 v0.14.12 (available: v0.15.1)\n   Compiling hashbrown v0.15.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling rustversion v1.0.17\n    Checking cfg-if v1.0.0\n   Compiling indexmap v2.6.0\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking bit_field v0.10.2\n    Checking bitflags v2.6.0\n    Checking volatile v0.4.6\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n    Checking x86_64 v0.14.12\n    Checking log v0.4.22\n   Compiling toml_edit v0.19.15\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n   Compiling early_console v0.1.0 (/home/runner/check/batch_14/shilei-massclouds/early_console/early_console)\nerror: could not compile `early_console` (lib) due to 5 previous errors; 10 warnings emitted\n"
    },
    {
      "cmd_idx": 8,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=early_console, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_14/shilei-massclouds/early_console/early_console\n// cmd=cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking static_assertions v1.1.0\n    Checking void v1.0.2\n   Compiling riscv v0.10.1\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n    Checking sbi-spec v0.0.4\n    Checking bit_field v0.10.2\n    Checking nb v0.1.3\n    Checking embedded-hal v0.2.7\n    Checking critical-section v1.1.3\n    Checking sbi-rt v0.0.2\n   Compiling early_console v0.1.0 (/home/runner/check/batch_14/shilei-massclouds/early_console/early_console)\n    Checking cfg-if v1.0.0\n    Checking log v0.4.22\n    Checking bitflags v2.6.0\nerror: could not compile `early_console` (lib) due to 4 previous errors; 10 warnings emitted\n"
    },
    {
      "cmd_idx": 9,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=early_console, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_14/shilei-massclouds/early_console/early_console\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling hashbrown v0.15.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling rustversion v1.0.17\n   Compiling indexmap v2.6.0\n   Compiling cfg-if v1.0.0\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling bitflags v2.6.0\n   Compiling bit_field v0.10.2\n   Compiling volatile v0.4.6\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling x86_64 v0.14.12\n   Compiling log v0.4.22\n[2024-10-09T07:35:42Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:35:42Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling toml_edit v0.19.15\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n   Compiling early_console v0.1.0 (/home/runner/check/batch_14/shilei-massclouds/early_console/early_console)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n --> src/lib.rs:6:20\n  |\n6 | pub use platform::{getchar, putchar};\n  |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n  |                    |\n  |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> src/lib.rs:10:15\n   |\n10 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> src/lib.rs:16:19\n   |\n16 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n16 -         platform::putchar(*c);\n16 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> src/lib.rs:23:36\n   |\n23 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n23 -         if let Some(c) = platform::getchar() {\n23 +         if let Some(c) = getchar() {\n   |\n\nwarning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:10:42\n   |\n10 |     if #[cfg(all(target_arch = \"x86_64\", platform_family = \"x86-pc\"))] {\n   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, `windows`\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"x86-pc\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"x86-pc\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   = note: `#[warn(unexpected_cfgs)]` on by default\n\nwarning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:13:50\n   |\n13 |     } else if #[cfg(all(target_arch = \"riscv64\", platform_family = \"riscv64-qemu-virt\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"riscv64-qemu-virt\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"riscv64-qemu-virt\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:16:50\n   |\n16 |     } else if #[cfg(all(target_arch = \"aarch64\", platform_family = \"aarch64-qemu-virt\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-qemu-virt\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-qemu-virt\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:19:50\n   |\n19 |     } else if #[cfg(all(target_arch = \"aarch64\", platform_family = \"aarch64-raspi\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-raspi\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-raspi\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:22:50\n   |\n22 |     } else if #[cfg(all(target_arch = \"aarch64\", platform_family = \"aarch64-bsta1000b\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-bsta1000b\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-bsta1000b\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `smp`\n  --> src/platform/dummy/mod.rs:23:7\n   |\n23 | #[cfg(feature = \"smp\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `smp` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `irq`\n  --> src/platform/dummy/mod.rs:58:7\n   |\n58 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `irq` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `smp`\n  --> src/platform/dummy/mod.rs:86:7\n   |\n86 | #[cfg(feature = \"smp\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `smp` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `irq`\n  --> src/time.rs:13:7\n   |\n13 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `irq` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `irq`\n  --> src/time.rs:15:7\n   |\n15 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `irq` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `early_console` (lib) generated 10 warnings\nerror: could not compile `early_console` (lib) due to 5 previous errors; 10 warnings emitted\n"
    },
    {
      "cmd_idx": 10,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=early_console, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_14/shilei-massclouds/early_console/early_console\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf\n   Compiling nb v1.1.0\n   Compiling static_assertions v1.1.0\n   Compiling riscv v0.10.1\n   Compiling void v1.0.2\n   Compiling sbi-spec v0.0.4\n   Compiling nb v0.1.3\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n   Compiling critical-section v1.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling bit_field v0.10.2\n   Compiling sbi-rt v0.0.2\n   Compiling early_console v0.1.0 (/home/runner/check/batch_14/shilei-massclouds/early_console/early_console)\n   Compiling cfg-if v1.0.0\n   Compiling log v0.4.22\n   Compiling bitflags v2.6.0\n[2024-10-09T07:35:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:35:46Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n --> src/lib.rs:6:20\n  |\n6 | pub use platform::{getchar, putchar};\n  |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n  |                    |\n  |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> src/lib.rs:16:19\n   |\n16 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n16 -         platform::putchar(*c);\n16 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> src/lib.rs:23:36\n   |\n23 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n23 -         if let Some(c) = platform::getchar() {\n23 +         if let Some(c) = getchar() {\n   |\n\nwarning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:10:42\n   |\n10 |     if #[cfg(all(target_arch = \"x86_64\", platform_family = \"x86-pc\"))] {\n   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, `windows`\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"x86-pc\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"x86-pc\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   = note: `#[warn(unexpected_cfgs)]` on by default\n\nwarning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:13:50\n   |\n13 |     } else if #[cfg(all(target_arch = \"riscv64\", platform_family = \"riscv64-qemu-virt\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"riscv64-qemu-virt\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"riscv64-qemu-virt\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:16:50\n   |\n16 |     } else if #[cfg(all(target_arch = \"aarch64\", platform_family = \"aarch64-qemu-virt\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-qemu-virt\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-qemu-virt\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:19:50\n   |\n19 |     } else if #[cfg(all(target_arch = \"aarch64\", platform_family = \"aarch64-raspi\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-raspi\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-raspi\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:22:50\n   |\n22 |     } else if #[cfg(all(target_arch = \"aarch64\", platform_family = \"aarch64-bsta1000b\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-bsta1000b\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-bsta1000b\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `smp`\n  --> src/platform/dummy/mod.rs:23:7\n   |\n23 | #[cfg(feature = \"smp\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `smp` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `irq`\n  --> src/platform/dummy/mod.rs:58:7\n   |\n58 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `irq` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `smp`\n  --> src/platform/dummy/mod.rs:86:7\n   |\n86 | #[cfg(feature = \"smp\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `smp` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `irq`\n  --> src/time.rs:13:7\n   |\n13 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `irq` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `irq`\n  --> src/time.rs:15:7\n   |\n15 | #[cfg(feature = \"irq\")]\n   |       ^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `irq` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `early_console` (lib) generated 10 warnings\nerror: could not compile `early_console` (lib) due to 4 previous errors; 10 warnings emitted\n"
    },
    {
      "cmd_idx": 14,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/platform/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:6:20\n  |\n6 | pub use platform::{getchar, putchar};\n  |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n  |                    |\n  |                    no `getchar` in `platform`\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:6:20\n  |\n6 | pub use platform::{getchar, putchar};\n  |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n  |                    |\n  |                    no `getchar` in `platform`\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/platform/dummy/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:16:19\n   |\n16 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n16 -         platform::putchar(*c);\n16 +         putchar(*c);\n   |\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:23:36\n   |\n23 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n23 -         if let Some(c) = platform::getchar() {\n23 +         if let Some(c) = getchar() {\n   |\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:6:20\n  |\n6 | pub use platform::{getchar, putchar};\n  |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n  |                    |\n  |                    no `getchar` in `platform`\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:6:20\n  |\n6 | pub use platform::{getchar, putchar};\n  |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n  |                    |\n  |                    no `getchar` in `platform`\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/platform/dummy/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:16:19\n   |\n16 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n16 -         platform::putchar(*c);\n16 +         putchar(*c);\n   |\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:23:36\n   |\n23 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n23 -         if let Some(c) = platform::getchar() {\n23 +         if let Some(c) = getchar() {\n   |\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:6:20\n  |\n6 | pub use platform::{getchar, putchar};\n  |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n  |                    |\n  |                    no `getchar` in `platform`\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:6:20\n  |\n6 | pub use platform::{getchar, putchar};\n  |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n  |                    |\n  |                    no `getchar` in `platform`\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/platform/dummy/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:10:15\n   |\n10 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:16:19\n   |\n16 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n16 -         platform::putchar(*c);\n16 +         putchar(*c);\n   |\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:23:36\n   |\n23 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n23 -         if let Some(c) = platform::getchar() {\n23 +         if let Some(c) = getchar() {\n   |\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-09T07:36:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:36:01Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 18,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-09T07:36:06Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n\u001b[1m\u001b[32m   Compiling\u001b[0m spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n[2024-10-09T07:36:06Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 19,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-09T07:36:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:36:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 20,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_early_console, checker=Clippy\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_14/shilei-massclouds/early_console/rt_early_console\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Updating git repository `ssh://git@github.com/shilei-massclouds/arch_boot.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axhal`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/early_console.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axconfig.git`\n    Updating crates.io index\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axerrno`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/axlog2.git`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/kernel_guard_base`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/lazy_init`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/memory_addr`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/percpu2`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/ratio`\n    Updating git repository `ssh://git@github.com/shilei-massclouds/spinbase`\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.15.0\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.87\n   Compiling indexmap v2.6.0\n    Checking cfg-if v1.0.0\n   Compiling unicode-ident v1.0.13\n    Checking log v0.4.22\n   Compiling quote v1.0.37\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.79\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling toml_edit v0.19.15\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#52d4fca1)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking static_assertions v1.1.0\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#4de587b7)\n   Compiling arch_boot v0.1.0 (ssh://git@github.com/shilei-massclouds/arch_boot.git#8663e839)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal#83ec99c0)\nerror: could not compile `early_console` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 21,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_early_console, checker=Clippy\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_14/shilei-massclouds/early_console/rt_early_console\n// cmd=cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking cfg-if v1.0.0\n    Checking void v1.0.2\n   Compiling riscv v0.10.1\n    Checking static_assertions v1.1.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n    Checking nb v0.1.3\n    Checking log v0.4.22\n    Checking sbi-spec v0.0.4\n    Checking embedded-hal v0.2.7\n    Checking critical-section v1.1.3\n    Checking bit_field v0.10.2\n    Checking sbi-rt v0.0.2\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#4de587b7)\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking bitflags v2.6.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#52d4fca1)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling arch_boot v0.1.0 (ssh://git@github.com/shilei-massclouds/arch_boot.git#8663e839)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal#83ec99c0)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\nerror: could not compile `early_console` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 22,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_early_console, checker=Clippy\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_14/shilei-massclouds/early_console/rt_early_console\n// cmd=cargo clippy --target x86_64-unknown-none --no-deps --message-format=json\n   Compiling rustversion v1.0.17\n    Checking bit_field v0.10.2\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n    Checking bitflags v1.3.2\n    Checking volatile v0.4.6\n    Checking raw-cpuid v10.7.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n   Compiling paste v1.0.15\n   Compiling x86 v0.52.0\n    Checking log v0.4.22\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#4de587b7)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking bit v0.1.1\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#52d4fca1)\n    Checking raw-cpuid v11.2.0\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal#83ec99c0)\n   Compiling arch_boot v0.1.0 (ssh://git@github.com/shilei-massclouds/arch_boot.git#8663e839)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking static_assertions v1.1.0\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking x86_64 v0.14.12\n    Checking x2apic v0.4.3\nerror: could not compile `early_console` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 23,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_early_console, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_14/shilei-massclouds/early_console/rt_early_console\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling hashbrown v0.15.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.87\n   Compiling cfg-if v1.0.0\n   Compiling indexmap v2.6.0\n   Compiling unicode-ident v1.0.13\n   Compiling log v0.4.22\n[2024-10-09T07:36:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:36:01Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling quote v1.0.37\n   Compiling bitflags v2.6.0\n   Compiling syn v2.0.79\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling tock-registers v0.8.1\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#52d4fca1)\n   Compiling toml_edit v0.19.15\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling aarch64-cpu v9.4.0\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling static_assertions v1.1.0\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#4de587b7)\n   Compiling arch_boot v0.1.0 (ssh://git@github.com/shilei-massclouds/arch_boot.git#8663e839)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:6:20\n  |\n6 | pub use platform::{getchar, putchar};\n  |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n  |                    |\n  |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:16:19\n   |\n16 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n16 -         platform::putchar(*c);\n16 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:23:36\n   |\n23 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n23 -         if let Some(c) = platform::getchar() {\n23 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 24,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_early_console, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_14/shilei-massclouds/early_console/rt_early_console\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf\n   Compiling nb v1.1.0\n   Compiling cfg-if v1.0.0\n   Compiling void v1.0.2\n   Compiling riscv v0.10.1\n   Compiling static_assertions v1.1.0\n   Compiling nb v0.1.3\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n   Compiling bit_field v0.10.2\n   Compiling sbi-spec v0.0.4\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.1.3\n   Compiling log v0.4.22\n   Compiling sbi-rt v0.0.2\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#4de587b7)\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling bitflags v2.6.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#52d4fca1)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n[2024-10-09T07:36:06Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n[2024-10-09T07:36:06Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal#83ec99c0)\n   Compiling arch_boot v0.1.0 (ssh://git@github.com/shilei-massclouds/arch_boot.git#8663e839)\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:6:20\n  |\n6 | pub use platform::{getchar, putchar};\n  |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n  |                    |\n  |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:16:19\n   |\n16 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n16 -         platform::putchar(*c);\n16 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:23:36\n   |\n23 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n23 -         if let Some(c) = platform::getchar() {\n23 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 25,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_early_console, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_14/shilei-massclouds/early_console/rt_early_console\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none\n   Compiling rustversion v1.0.17\n   Compiling bit_field v0.10.2\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v2.6.0\n   Compiling volatile v0.4.6\n   Compiling bitflags v1.3.2\n   Compiling raw-cpuid v10.7.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n   Compiling log v0.4.22\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n[2024-10-09T07:36:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:36:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#4de587b7)\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling bit v0.1.1\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#52d4fca1)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling raw-cpuid v11.2.0\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal#83ec99c0)\n   Compiling arch_boot v0.1.0 (ssh://git@github.com/shilei-massclouds/arch_boot.git#8663e839)\n   Compiling x86_64 v0.14.12\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling static_assertions v1.1.0\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n   Compiling x2apic v0.4.3\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:6:20\n  |\n6 | pub use platform::{getchar, putchar};\n  |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n  |                    |\n  |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:10:15\n   |\n10 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:16:19\n   |\n16 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n16 -         platform::putchar(*c);\n16 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/4de587b/early_console/src/lib.rs:23:36\n   |\n23 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n6  + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n23 -         if let Some(c) = platform::getchar() {\n23 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/block.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 25 to 27)\n-        let data_bytes: &[u8; 60] = unsafe {\n-            core::mem::transmute(data)\n-        };\n+        let data_bytes: &[u8; 60] = unsafe { core::mem::transmute(data) };\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/block.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 29 to 29)\n-            disk_offset: 0, \n+            disk_offset: 0,\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/block.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 80 to 82)\n-\n-impl Block{\n-    pub fn sync_blk_to_disk(&self, block_device: Arc<dyn BlockDevice>){\n+impl Block {\n+    pub fn sync_blk_to_disk(&self, block_device: Arc<dyn BlockDevice>) {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/block.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 86 to 86)\n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/block_group.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 97 to 97)\n-        self.itable_unused_lo = (cnt & 0xffff) as u16; \n+        self.itable_unused_lo = (cnt & 0xffff) as u16;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/block_group.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 105 to 105)\n-        self.itable_unused_lo = (cnt & 0xffff) as u16; \n+        self.itable_unused_lo = (cnt & 0xffff) as u16;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/block_group.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 235 to 235)\n-        self.free_blocks_count_lo = (cnt & 0xffff) as u16; \n+        self.free_blocks_count_lo = (cnt & 0xffff) as u16;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/block_group.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 238 to 238)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/consts.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/consts.rs (original lines from 11 to 14)\n-pub const ROOT_INODE: u32 = 2;                      // 根目录 inode\n-pub const JOURNAL_INODE: u32 = 8;                   // 日志文件 inode\n-pub const UNDEL_DIR_INODE: u32 = 6;                 // 未删除目录 inode\n-pub const LOST_AND_FOUND_INODE: u32 = 11;           // lost+found 目录 inode\n+pub const ROOT_INODE: u32 = 2; // 根目录 inode\n+pub const JOURNAL_INODE: u32 = 8; // 日志文件 inode\n+pub const UNDEL_DIR_INODE: u32 = 6; // 未删除目录 inode\n+pub const LOST_AND_FOUND_INODE: u32 = 11; // lost+found 目录 inode\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/consts.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/consts.rs (original lines from 63 to 63)\n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 31 to 31)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 40 to 40)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 60 to 63)\n-pub struct Ext4DirSearchResult{\n-    pub dentry: Ext4DirEntry, \n-    pub pblock_id: usize, // disk block id\n-    pub offset: usize, // offset in block\n+pub struct Ext4DirSearchResult {\n+    pub dentry: Ext4DirEntry,\n+    pub pblock_id: usize,   // disk block id\n+    pub offset: usize,      // offset in block\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 67 to 67)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 79 to 79)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 122 to 122)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 135 to 136)\n-        if self.name_len as usize == name.len(){\n-            return &self.name[..name.len()] == name.as_bytes()\n+        if self.name_len as usize == name.len() {\n+            return &self.name[..name.len()] == name.as_bytes();\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 171 to 171)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 181 to 182)\n-    \n-    pub fn write_entry(&mut self, entry_len: u16, inode: u32, name: &str, de_type:DirEntryType) {\n+    pub fn write_entry(&mut self, entry_len: u16, inode: u32, name: &str, de_type: DirEntryType) {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 189 to 189)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 193 to 193)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 237 to 238)\n-\n-impl Ext4DirEntryTail{\n+impl Ext4DirEntryTail {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 262 to 265)\n-        let offset = BLOCK_SIZE - core::mem::size_of::<Ext4DirEntryTail>();\n-        let de_ptr = self as *const Ext4DirEntryTail as *const u8;\n-        let array_ptr = array as *mut [u8] as *mut u8;\n-        let count = core::mem::size_of::<Ext4DirEntryTail>();\n+            let offset = BLOCK_SIZE - core::mem::size_of::<Ext4DirEntryTail>();\n+            let de_ptr = self as *const Ext4DirEntryTail as *const u8;\n+            let array_ptr = array as *mut [u8] as *mut u8;\n+            let count = core::mem::size_of::<Ext4DirEntryTail>();\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 270 to 270)\n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 227 to 227)\n-            let mut header = *Ext4ExtentHeader::load_from_u8_mut(&mut data[..size_of::<Ext4ExtentHeader>()]);\n+            let mut header =\n+                *Ext4ExtentHeader::load_from_u8_mut(&mut data[..size_of::<Ext4ExtentHeader>()]);\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 260 to 260)\n-                    if lblock >= ext.first_block && lblock <= ext.first_block + ext.get_actual_len() as u32 {\n+                    if lblock >= ext.first_block\n+                        && lblock <= ext.first_block + ext.get_actual_len() as u32\n+                    {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 274 to 274)\n-                    if (lblock < ext.first_block){\n+                    if (lblock < ext.first_block) {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 276 to 276)\n-                    }else{\n+                    } else {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 548 to 548)\n-        assert!(result.is_err(), \"Expected error for invalid root node data length\");\n+        assert!(\n+            result.is_err(),\n+            \"Expected error for invalid root node data length\"\n+        );\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 553 to 553)\n-        assert!(result.is_err(), \"Expected error for invalid internal node data length\");\n+        assert!(\n+            result.is_err(),\n+            \"Expected error for invalid internal node data length\"\n+        );\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 697 to 697)\n-        let index = node.get_index(0).expect(\"Failed to get index at position 0\");\n+        let index = node\n+            .get_index(0)\n+            .expect(\"Failed to get index at position 0\");\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 703 to 703)\n-        let index = node.get_index(1).expect(\"Failed to get index at position 1\");\n+        let index = node\n+            .get_index(1)\n+            .expect(\"Failed to get index at position 1\");\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 744 to 744)\n-        let extent = node.get_extent(0).expect(\"Failed to get extent at position 0\");\n+        let extent = node\n+            .get_extent(0)\n+            .expect(\"Failed to get extent at position 0\");\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 749 to 749)\n-        let extent = node.get_extent(1).expect(\"Failed to get extent at position 1\");\n+        let extent = node\n+            .get_extent(1)\n+            .expect(\"Failed to get extent at position 1\");\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/inode.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/inode.rs (original lines from 602 to 602)\n-    \n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/inode.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/inode.rs (original lines from 634 to 634)\n-        assert_eq!(inode.mode, InodeFileType::S_IFREG.bits() | (InodePerm::S_IREAD | InodePerm::S_IWRITE | InodePerm::S_IEXEC).bits()); // Regular file with rwx permissions\n+        assert_eq!(\n+            inode.mode,\n+            InodeFileType::S_IFREG.bits()\n+                | (InodePerm::S_IREAD | InodePerm::S_IWRITE | InodePerm::S_IEXEC).bits()\n+        ); // Regular file with rwx permissions\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 1 to 1)\n-pub mod consts;\n+pub mod block;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 3 to 3)\n+pub mod consts;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 4 to 5)\n-pub mod block;\n-pub mod file;\n+pub mod ext4;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 7 to 7)\n+pub mod file;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 10 to 10)\n-pub mod ext4;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 12 to 14)\n-\n-\n-pub use consts::*;\n+pub use block::*;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 16 to 16)\n+pub use consts::*;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 17 to 18)\n-pub use block::*;\n-pub use file::*;\n+pub use ext4::*;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 20 to 20)\n+pub use file::*;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 23 to 23)\n-pub use ext4::*;\n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/super_block.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/super_block.rs (original lines from 149 to 149)\n-    pub fn first_data_block(&self) -> u32{\n+    pub fn first_data_block(&self) -> u32 {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/super_block.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/super_block.rs (original lines from 207 to 207)\n-        self.free_blocks_count_lo = (free_blocks & 0xffffffff) as u32; \n+        self.free_blocks_count_lo = (free_blocks & 0xffffffff) as u32;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 71 to 71)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 115 to 115)\n-                    return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+                    return_errno_with_message!(\n+                        Errno::ENOSPC,\n+                        \"No free blocks available in all block groups\"\n+                    );\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 153 to 153)\n-                    block_group.set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n+                    block_group\n+                        .set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 179 to 179)\n-        return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+        return_errno_with_message!(\n+            Errno::ENOSPC,\n+            \"No free blocks available in all block groups\"\n+        );\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 202 to 202)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 219 to 219)\n-                    return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+                    return_errno_with_message!(\n+                        Errno::ENOSPC,\n+                        \"No free blocks available in all block groups\"\n+                    );\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 259 to 259)\n-                    block_group.set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n+                    block_group\n+                        .set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 289 to 289)\n-        return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+        return_errno_with_message!(\n+            Errno::ENOSPC,\n+            \"No free blocks available in all block groups\"\n+        );\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/dir.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 412 to 412)\n-        if self.dir_has_entry(child_inode_ref.inode_num){\n+        if self.dir_has_entry(child_inode_ref.inode_num) {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/dir.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 415 to 415)\n-        \n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 35 to 35)\n-        \n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 71 to 71)\n-                \n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 75 to 75)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 78 to 78)\n-            }else{\n+            } else {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 97 to 97)\n-        \n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 99 to 99)\n-        \n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 226 to 226)\n-        if left_ext.first_block >= 0x20000{\n+        if left_ext.first_block >= 0x20000 {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 229 to 229)\n-            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>() + core::mem::size_of::<Ext4Extent>() * (node.position);\n+            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>()\n+                + core::mem::size_of::<Ext4Extent>() * (node.position);\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 231 to 231)\n-            let left_ext:&mut Ext4Extent = ext4block.read_offset_as_mut(new_ex_offset);\n+            let left_ext: &mut Ext4Extent = ext4block.read_offset_as_mut(new_ex_offset);\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 236 to 236)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 261 to 261)\n-            log::trace!(\"insert newex at pos {:x?} current entry_count {:x?} ex {:x?}\", node.position + 1 , header.entries_count, new_extent);\n+            log::trace!(\n+                \"insert newex at pos {:x?} current entry_count {:x?} ex {:x?}\",\n+                node.position + 1,\n+                header.entries_count,\n+                new_extent\n+            );\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 265 to 265)\n-        }else{\n+        } else {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 267 to 267)\n-            log::trace!(\"insert newex at pos {:x?} current entry_count {:x?} ex {:x?}\", node.position + 1 , header.entries_count, new_extent);\n+            log::trace!(\n+                \"insert newex at pos {:x?} current entry_count {:x?} ex {:x?}\",\n+                node.position + 1,\n+                header.entries_count,\n+                new_extent\n+            );\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 272 to 273)\n-            Block::load(self.block_device.clone(), node_block as usize * BLOCK_SIZE);\n-            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>() + core::mem::size_of::<Ext4Extent>() * (node.position + 1);\n+                Block::load(self.block_device.clone(), node_block as usize * BLOCK_SIZE);\n+            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>()\n+                + core::mem::size_of::<Ext4Extent>() * (node.position + 1);\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 280 to 280)\n-            // update entry count \n+            // update entry count\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 306 to 306)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 309 to 309)\n-    \n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 314 to 314)\n-    fn ext_grow_indepth(&self, inode_ref: &mut Ext4InodeRef) -> Result<()>{\n+    fn ext_grow_indepth(&self, inode_ref: &mut Ext4InodeRef) -> Result<()> {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 325 to 326)\n-        unsafe{core::ptr::copy_nonoverlapping(data_to_copy, new_ext4block.data.as_mut_ptr(), 60)};\n-        \n+        unsafe {\n+            core::ptr::copy_nonoverlapping(data_to_copy, new_ext4block.data.as_mut_ptr(), 60)\n+        };\n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 333 to 333)\n-        let space = (BLOCK_SIZE - core::mem::size_of::<Ext4ExtentHeader>()) / core::mem::size_of::<Ext4Extent>();\n+        let space = (BLOCK_SIZE - core::mem::size_of::<Ext4ExtentHeader>())\n+            / core::mem::size_of::<Ext4Extent>();\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 335 to 335)\n-        \n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 350 to 350)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 354 to 354)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 357 to 357)\n-    \n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 1 to 1)\n+use crate::ext4_defs::*;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 4 to 4)\n-use crate::ext4_defs::*;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 83 to 83)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 120 to 120)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 131 to 131)\n-    pub fn create_with_attr(&self, parent: u32, name: &str, inode_mode: u16, uid:u16, gid: u16) -> Result<Ext4InodeRef> {\n+    pub fn create_with_attr(\n+        &self,\n+        parent: u32,\n+        name: &str,\n+        inode_mode: u16,\n+        uid: u16,\n+        gid: u16,\n+    ) -> Result<Ext4InodeRef> {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 301 to 301)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 333 to 336)\n-            let len = min(\n-                fblock_count as usize * BLOCK_SIZE,\n-                write_buf_len - written,\n-            );\n+            let len = min(fblock_count as usize * BLOCK_SIZE, write_buf_len - written);\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 375 to 377)\n-            inode_ref\n-                .inode\n-                .set_size((offset + write_buf_len) as u64);\n+            inode_ref.inode.set_size((offset + write_buf_len) as u64);\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 419 to 419)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 445 to 445)\n-        if diff_blocks_cnt > 0{\n+        if diff_blocks_cnt > 0 {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/inode.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/inode.rs (original lines from 178 to 178)\n-    pub fn append_inode_pblk_from(&self, inode_ref: &mut Ext4InodeRef, start_bgid: &mut u32) -> Result<Ext4Fsblk> {\n+    pub fn append_inode_pblk_from(\n+        &self,\n+        inode_ref: &mut Ext4InodeRef,\n+        start_bgid: &mut u32,\n+    ) -> Result<Ext4Fsblk> {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 1 to 3)\n-pub mod extents;\n-pub mod ext4;\n-pub mod inode;\n+pub mod balloc;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 5 to 5)\n+pub mod ext4;\n+pub mod extents;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 7 to 7)\n-pub mod balloc;\n+pub mod inode;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 9 to 11)\n-pub use extents::*;\n-pub use ext4::*;\n-pub use inode::*;\n+pub use balloc::*;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 13 to 13)\n+pub use ext4::*;\n+pub use extents::*;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 15 to 15)\n-pub use balloc::*;\n+pub use inode::*;\n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 9 to 10)\n-pub use crate::ext4_defs::Ext4;\n-pub use crate::ext4_defs::BLOCK_SIZE;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 12 to 12)\n+pub use crate::ext4_defs::Ext4;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 13 to 13)\n+pub use crate::ext4_defs::BLOCK_SIZE;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 120 to 120)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 139 to 139)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 148 to 148)\n-        uid: u32, \n+        uid: u32,\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 156 to 156)\n-        let inode_ref = self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n+        let inode_ref =\n+            self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 177 to 178)\n-    pub fn fuse_mkdir_with_attr(&mut self, parent: u64, name: &str, mode: u32, umask: u32, uid:u32, gid:u32) -> Result<Ext4InodeRef> {\n-\n+    pub fn fuse_mkdir_with_attr(\n+        &mut self,\n+        parent: u64,\n+        name: &str,\n+        mode: u32,\n+        umask: u32,\n+        uid: u32,\n+        gid: u32,\n+    ) -> Result<Ext4InodeRef> {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 191 to 191)\n-        let inode_ref = self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n+        let inode_ref =\n+            self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 342 to 342)\n-        ) -> Result<Vec<u8>> {\n+    ) -> Result<Vec<u8>> {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 478 to 478)\n-    /// \n+    ///\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/lib.rs (original lines from 7 to 7)\n-pub mod utils;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/lib.rs (original lines from 9 to 9)\n+pub mod utils;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/lib.rs (original lines from 10 to 10)\n-pub use utils::*;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/lib.rs (original lines from 12 to 12)\n+pub use utils::*;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/lib.rs (original lines from 13 to 13)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/lib.rs (original lines from 17 to 18)\n-\n-pub mod simple_interface;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/lib.rs (original lines from 20 to 20)\n+pub mod simple_interface;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/lib.rs (original lines from 21 to 22)\n-\n-pub use simple_interface::*;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/lib.rs (original lines from 24 to 24)\n+pub use simple_interface::*;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/prelude.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/prelude.rs (original lines from 19 to 19)\n+pub(crate) use core::cmp::min;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/prelude.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/prelude.rs (original lines from 22 to 23)\n-pub(crate) use core::cmp::min;\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 1 to 1)\n+\n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/utils/bitmap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/utils/bitmap.rs (original lines from 90 to 90)\n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/utils/crc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/utils/crc.rs (original lines from 53 to 53)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/utils/crc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/utils/crc.rs (original lines from 79 to 79)\n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/utils/errors.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/utils/errors.rs (original lines from 1 to 2)\n-\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/utils/errors.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/utils/errors.rs (original lines from 37 to 37)\n-    ENOTSUP   = 95,   /* Not supported */\n+    ENOTSUP = 95,      /* Not supported */\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/utils/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 3 to 3)\n-pub mod path;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/utils/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 5 to 5)\n+pub mod path;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/utils/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 6 to 7)\n-\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/utils/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 10 to 10)\n-pub use path::*;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/utils/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 12 to 12)\n+pub use path::*;\n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/block.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 25 to 27)\n-        let data_bytes: &[u8; 60] = unsafe {\n-            core::mem::transmute(data)\n-        };\n+        let data_bytes: &[u8; 60] = unsafe { core::mem::transmute(data) };\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/block.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 29 to 29)\n-            disk_offset: 0, \n+            disk_offset: 0,\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/block.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 80 to 82)\n-\n-impl Block{\n-    pub fn sync_blk_to_disk(&self, block_device: Arc<dyn BlockDevice>){\n+impl Block {\n+    pub fn sync_blk_to_disk(&self, block_device: Arc<dyn BlockDevice>) {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/block.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/block.rs (original lines from 86 to 86)\n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/block_group.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 97 to 97)\n-        self.itable_unused_lo = (cnt & 0xffff) as u16; \n+        self.itable_unused_lo = (cnt & 0xffff) as u16;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/block_group.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 105 to 105)\n-        self.itable_unused_lo = (cnt & 0xffff) as u16; \n+        self.itable_unused_lo = (cnt & 0xffff) as u16;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/block_group.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 235 to 235)\n-        self.free_blocks_count_lo = (cnt & 0xffff) as u16; \n+        self.free_blocks_count_lo = (cnt & 0xffff) as u16;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/block_group.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/block_group.rs (original lines from 238 to 238)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/consts.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/consts.rs (original lines from 11 to 14)\n-pub const ROOT_INODE: u32 = 2;                      // 根目录 inode\n-pub const JOURNAL_INODE: u32 = 8;                   // 日志文件 inode\n-pub const UNDEL_DIR_INODE: u32 = 6;                 // 未删除目录 inode\n-pub const LOST_AND_FOUND_INODE: u32 = 11;           // lost+found 目录 inode\n+pub const ROOT_INODE: u32 = 2; // 根目录 inode\n+pub const JOURNAL_INODE: u32 = 8; // 日志文件 inode\n+pub const UNDEL_DIR_INODE: u32 = 6; // 未删除目录 inode\n+pub const LOST_AND_FOUND_INODE: u32 = 11; // lost+found 目录 inode\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/consts.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/consts.rs (original lines from 63 to 63)\n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 31 to 31)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 40 to 40)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 60 to 63)\n-pub struct Ext4DirSearchResult{\n-    pub dentry: Ext4DirEntry, \n-    pub pblock_id: usize, // disk block id\n-    pub offset: usize, // offset in block\n+pub struct Ext4DirSearchResult {\n+    pub dentry: Ext4DirEntry,\n+    pub pblock_id: usize,   // disk block id\n+    pub offset: usize,      // offset in block\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 67 to 67)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 79 to 79)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 122 to 122)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 135 to 136)\n-        if self.name_len as usize == name.len(){\n-            return &self.name[..name.len()] == name.as_bytes()\n+        if self.name_len as usize == name.len() {\n+            return &self.name[..name.len()] == name.as_bytes();\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 171 to 171)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 181 to 182)\n-    \n-    pub fn write_entry(&mut self, entry_len: u16, inode: u32, name: &str, de_type:DirEntryType) {\n+    pub fn write_entry(&mut self, entry_len: u16, inode: u32, name: &str, de_type: DirEntryType) {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 189 to 189)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 193 to 193)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 237 to 238)\n-\n-impl Ext4DirEntryTail{\n+impl Ext4DirEntryTail {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 262 to 265)\n-        let offset = BLOCK_SIZE - core::mem::size_of::<Ext4DirEntryTail>();\n-        let de_ptr = self as *const Ext4DirEntryTail as *const u8;\n-        let array_ptr = array as *mut [u8] as *mut u8;\n-        let count = core::mem::size_of::<Ext4DirEntryTail>();\n+            let offset = BLOCK_SIZE - core::mem::size_of::<Ext4DirEntryTail>();\n+            let de_ptr = self as *const Ext4DirEntryTail as *const u8;\n+            let array_ptr = array as *mut [u8] as *mut u8;\n+            let count = core::mem::size_of::<Ext4DirEntryTail>();\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/direntry.rs (original lines from 270 to 270)\n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 227 to 227)\n-            let mut header = *Ext4ExtentHeader::load_from_u8_mut(&mut data[..size_of::<Ext4ExtentHeader>()]);\n+            let mut header =\n+                *Ext4ExtentHeader::load_from_u8_mut(&mut data[..size_of::<Ext4ExtentHeader>()]);\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 260 to 260)\n-                    if lblock >= ext.first_block && lblock <= ext.first_block + ext.get_actual_len() as u32 {\n+                    if lblock >= ext.first_block\n+                        && lblock <= ext.first_block + ext.get_actual_len() as u32\n+                    {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 274 to 274)\n-                    if (lblock < ext.first_block){\n+                    if (lblock < ext.first_block) {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 276 to 276)\n-                    }else{\n+                    } else {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 548 to 548)\n-        assert!(result.is_err(), \"Expected error for invalid root node data length\");\n+        assert!(\n+            result.is_err(),\n+            \"Expected error for invalid root node data length\"\n+        );\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 553 to 553)\n-        assert!(result.is_err(), \"Expected error for invalid internal node data length\");\n+        assert!(\n+            result.is_err(),\n+            \"Expected error for invalid internal node data length\"\n+        );\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 697 to 697)\n-        let index = node.get_index(0).expect(\"Failed to get index at position 0\");\n+        let index = node\n+            .get_index(0)\n+            .expect(\"Failed to get index at position 0\");\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 703 to 703)\n-        let index = node.get_index(1).expect(\"Failed to get index at position 1\");\n+        let index = node\n+            .get_index(1)\n+            .expect(\"Failed to get index at position 1\");\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 744 to 744)\n-        let extent = node.get_extent(0).expect(\"Failed to get extent at position 0\");\n+        let extent = node\n+            .get_extent(0)\n+            .expect(\"Failed to get extent at position 0\");\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/extents.rs (original lines from 749 to 749)\n-        let extent = node.get_extent(1).expect(\"Failed to get extent at position 1\");\n+        let extent = node\n+            .get_extent(1)\n+            .expect(\"Failed to get extent at position 1\");\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/inode.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/inode.rs (original lines from 602 to 602)\n-    \n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/inode.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/inode.rs (original lines from 634 to 634)\n-        assert_eq!(inode.mode, InodeFileType::S_IFREG.bits() | (InodePerm::S_IREAD | InodePerm::S_IWRITE | InodePerm::S_IEXEC).bits()); // Regular file with rwx permissions\n+        assert_eq!(\n+            inode.mode,\n+            InodeFileType::S_IFREG.bits()\n+                | (InodePerm::S_IREAD | InodePerm::S_IWRITE | InodePerm::S_IEXEC).bits()\n+        ); // Regular file with rwx permissions\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 1 to 1)\n-pub mod consts;\n+pub mod block;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 3 to 3)\n+pub mod consts;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 4 to 5)\n-pub mod block;\n-pub mod file;\n+pub mod ext4;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 7 to 7)\n+pub mod file;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 10 to 10)\n-pub mod ext4;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 12 to 14)\n-\n-\n-pub use consts::*;\n+pub use block::*;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 16 to 16)\n+pub use consts::*;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 17 to 18)\n-pub use block::*;\n-pub use file::*;\n+pub use ext4::*;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 20 to 20)\n+pub use file::*;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/mod.rs (original lines from 23 to 23)\n-pub use ext4::*;\n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/super_block.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/super_block.rs (original lines from 149 to 149)\n-    pub fn first_data_block(&self) -> u32{\n+    pub fn first_data_block(&self) -> u32 {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_defs/super_block.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_defs/super_block.rs (original lines from 207 to 207)\n-        self.free_blocks_count_lo = (free_blocks & 0xffffffff) as u32; \n+        self.free_blocks_count_lo = (free_blocks & 0xffffffff) as u32;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 71 to 71)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 115 to 115)\n-                    return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+                    return_errno_with_message!(\n+                        Errno::ENOSPC,\n+                        \"No free blocks available in all block groups\"\n+                    );\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 153 to 153)\n-                    block_group.set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n+                    block_group\n+                        .set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 179 to 179)\n-        return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+        return_errno_with_message!(\n+            Errno::ENOSPC,\n+            \"No free blocks available in all block groups\"\n+        );\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 202 to 202)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 219 to 219)\n-                    return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+                    return_errno_with_message!(\n+                        Errno::ENOSPC,\n+                        \"No free blocks available in all block groups\"\n+                    );\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 259 to 259)\n-                    block_group.set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n+                    block_group\n+                        .set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/balloc.rs (original lines from 289 to 289)\n-        return_errno_with_message!(Errno::ENOSPC, \"No free blocks available in all block groups\");\n+        return_errno_with_message!(\n+            Errno::ENOSPC,\n+            \"No free blocks available in all block groups\"\n+        );\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/dir.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 412 to 412)\n-        if self.dir_has_entry(child_inode_ref.inode_num){\n+        if self.dir_has_entry(child_inode_ref.inode_num) {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/dir.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/dir.rs (original lines from 415 to 415)\n-        \n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 35 to 35)\n-        \n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 71 to 71)\n-                \n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 75 to 75)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 78 to 78)\n-            }else{\n+            } else {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 97 to 97)\n-        \n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/ext4.rs (original lines from 99 to 99)\n-        \n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 226 to 226)\n-        if left_ext.first_block >= 0x20000{\n+        if left_ext.first_block >= 0x20000 {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 229 to 229)\n-            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>() + core::mem::size_of::<Ext4Extent>() * (node.position);\n+            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>()\n+                + core::mem::size_of::<Ext4Extent>() * (node.position);\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 231 to 231)\n-            let left_ext:&mut Ext4Extent = ext4block.read_offset_as_mut(new_ex_offset);\n+            let left_ext: &mut Ext4Extent = ext4block.read_offset_as_mut(new_ex_offset);\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 236 to 236)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 261 to 261)\n-            log::trace!(\"insert newex at pos {:x?} current entry_count {:x?} ex {:x?}\", node.position + 1 , header.entries_count, new_extent);\n+            log::trace!(\n+                \"insert newex at pos {:x?} current entry_count {:x?} ex {:x?}\",\n+                node.position + 1,\n+                header.entries_count,\n+                new_extent\n+            );\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 265 to 265)\n-        }else{\n+        } else {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 267 to 267)\n-            log::trace!(\"insert newex at pos {:x?} current entry_count {:x?} ex {:x?}\", node.position + 1 , header.entries_count, new_extent);\n+            log::trace!(\n+                \"insert newex at pos {:x?} current entry_count {:x?} ex {:x?}\",\n+                node.position + 1,\n+                header.entries_count,\n+                new_extent\n+            );\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 272 to 273)\n-            Block::load(self.block_device.clone(), node_block as usize * BLOCK_SIZE);\n-            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>() + core::mem::size_of::<Ext4Extent>() * (node.position + 1);\n+                Block::load(self.block_device.clone(), node_block as usize * BLOCK_SIZE);\n+            let new_ex_offset = core::mem::size_of::<Ext4ExtentHeader>()\n+                + core::mem::size_of::<Ext4Extent>() * (node.position + 1);\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 280 to 280)\n-            // update entry count \n+            // update entry count\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 306 to 306)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 309 to 309)\n-    \n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 314 to 314)\n-    fn ext_grow_indepth(&self, inode_ref: &mut Ext4InodeRef) -> Result<()>{\n+    fn ext_grow_indepth(&self, inode_ref: &mut Ext4InodeRef) -> Result<()> {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 325 to 326)\n-        unsafe{core::ptr::copy_nonoverlapping(data_to_copy, new_ext4block.data.as_mut_ptr(), 60)};\n-        \n+        unsafe {\n+            core::ptr::copy_nonoverlapping(data_to_copy, new_ext4block.data.as_mut_ptr(), 60)\n+        };\n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 333 to 333)\n-        let space = (BLOCK_SIZE - core::mem::size_of::<Ext4ExtentHeader>()) / core::mem::size_of::<Ext4Extent>();\n+        let space = (BLOCK_SIZE - core::mem::size_of::<Ext4ExtentHeader>())\n+            / core::mem::size_of::<Ext4Extent>();\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 335 to 335)\n-        \n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 350 to 350)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 354 to 354)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/extents.rs (original lines from 357 to 357)\n-    \n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 1 to 1)\n+use crate::ext4_defs::*;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 4 to 4)\n-use crate::ext4_defs::*;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 83 to 83)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 120 to 120)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 131 to 131)\n-    pub fn create_with_attr(&self, parent: u32, name: &str, inode_mode: u16, uid:u16, gid: u16) -> Result<Ext4InodeRef> {\n+    pub fn create_with_attr(\n+        &self,\n+        parent: u32,\n+        name: &str,\n+        inode_mode: u16,\n+        uid: u16,\n+        gid: u16,\n+    ) -> Result<Ext4InodeRef> {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 301 to 301)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 333 to 336)\n-            let len = min(\n-                fblock_count as usize * BLOCK_SIZE,\n-                write_buf_len - written,\n-            );\n+            let len = min(fblock_count as usize * BLOCK_SIZE, write_buf_len - written);\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 375 to 377)\n-            inode_ref\n-                .inode\n-                .set_size((offset + write_buf_len) as u64);\n+            inode_ref.inode.set_size((offset + write_buf_len) as u64);\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 419 to 419)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/file.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/file.rs (original lines from 445 to 445)\n-        if diff_blocks_cnt > 0{\n+        if diff_blocks_cnt > 0 {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/inode.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/inode.rs (original lines from 178 to 178)\n-    pub fn append_inode_pblk_from(&self, inode_ref: &mut Ext4InodeRef, start_bgid: &mut u32) -> Result<Ext4Fsblk> {\n+    pub fn append_inode_pblk_from(\n+        &self,\n+        inode_ref: &mut Ext4InodeRef,\n+        start_bgid: &mut u32,\n+    ) -> Result<Ext4Fsblk> {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 1 to 3)\n-pub mod extents;\n-pub mod ext4;\n-pub mod inode;\n+pub mod balloc;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 5 to 5)\n+pub mod ext4;\n+pub mod extents;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 7 to 7)\n-pub mod balloc;\n+pub mod inode;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 9 to 11)\n-pub use extents::*;\n-pub use ext4::*;\n-pub use inode::*;\n+pub use balloc::*;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 13 to 13)\n+pub use ext4::*;\n+pub use extents::*;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/ext4_impls/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/ext4_impls/mod.rs (original lines from 15 to 15)\n-pub use balloc::*;\n+pub use inode::*;\n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 9 to 10)\n-pub use crate::ext4_defs::Ext4;\n-pub use crate::ext4_defs::BLOCK_SIZE;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 12 to 12)\n+pub use crate::ext4_defs::Ext4;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 13 to 13)\n+pub use crate::ext4_defs::BLOCK_SIZE;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 120 to 120)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 139 to 139)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 148 to 148)\n-        uid: u32, \n+        uid: u32,\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 156 to 156)\n-        let inode_ref = self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n+        let inode_ref =\n+            self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 177 to 178)\n-    pub fn fuse_mkdir_with_attr(&mut self, parent: u64, name: &str, mode: u32, umask: u32, uid:u32, gid:u32) -> Result<Ext4InodeRef> {\n-\n+    pub fn fuse_mkdir_with_attr(\n+        &mut self,\n+        parent: u64,\n+        name: &str,\n+        mode: u32,\n+        umask: u32,\n+        uid: u32,\n+        gid: u32,\n+    ) -> Result<Ext4InodeRef> {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 191 to 191)\n-        let inode_ref = self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n+        let inode_ref =\n+            self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 342 to 342)\n-        ) -> Result<Vec<u8>> {\n+    ) -> Result<Vec<u8>> {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/fuse_interface/mod.rs (original lines from 478 to 478)\n-    /// \n+    ///\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/main.rs (original lines from 112 to 112)\n-    let mut read_buf = vec![0u8;  READ_SIZE as usize];\n+    let mut read_buf = vec![0u8; READ_SIZE as usize];\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/main.rs (original lines from 118 to 119)\n-\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/main.rs (original lines from 121 to 121)\n-    let mut read_buf = vec![0u8;  READ_SIZE as usize];\n+    let mut read_buf = vec![0u8; READ_SIZE as usize];\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/main.rs (original lines from 161 to 161)\n-    let inode_ref = ext4.create(ROOT_INODE, \"4G.txt\", inode_mode | inode_perm).unwrap();\n+    let inode_ref = ext4\n+        .create(ROOT_INODE, \"4G.txt\", inode_mode | inode_perm)\n+        .unwrap();\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/main.rs (original lines from 169 to 169)\n-    let mut read_buf = vec![0u8;  WRITE_SIZE as usize];\n+    let mut read_buf = vec![0u8; WRITE_SIZE as usize];\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/main.rs (original lines from 174 to 174)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/prelude.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/prelude.rs (original lines from 19 to 19)\n+pub(crate) use core::cmp::min;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/prelude.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/prelude.rs (original lines from 22 to 23)\n-pub(crate) use core::cmp::min;\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/simple_interface/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/simple_interface/mod.rs (original lines from 1 to 1)\n+\n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/utils/bitmap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/utils/bitmap.rs (original lines from 90 to 90)\n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/utils/crc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/utils/crc.rs (original lines from 53 to 53)\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/utils/crc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/utils/crc.rs (original lines from 79 to 79)\n+\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/utils/errors.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/utils/errors.rs (original lines from 1 to 2)\n-\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/utils/errors.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/utils/errors.rs (original lines from 37 to 37)\n-    ENOTSUP   = 95,   /* Not supported */\n+    ENOTSUP = 95,      /* Not supported */\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/utils/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 3 to 3)\n-pub mod path;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/utils/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 5 to 5)\n+pub mod path;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/utils/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 6 to 7)\n-\n-\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/utils/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 10 to 10)\n-pub use path::*;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/utils/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4_rs/src/utils/mod.rs (original lines from 12 to 12)\n+pub use path::*;\n+\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant field names in struct initialization\n  --> src/ext4_impls/extents.rs:42:21\n   |\n42 |                     pblock_of_node: pblock_of_node,\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `pblock_of_node`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n   = note: `#[warn(clippy::redundant_field_names)]` on by default\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant field names in struct initialization\n  --> src/ext4_impls/extents.rs:66:17\n   |\n66 |                 pblock_of_node: pblock_of_node,\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `pblock_of_node`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant field names in struct initialization\n  --> src/ext4_impls/extents.rs:78:17\n   |\n78 |                 pblock_of_node: pblock_of_node,\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `pblock_of_node`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/inode.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant field names in struct initialization\n  --> src/ext4_impls/inode.rs:42:13\n   |\n42 |             inode_num: inode_num,\n   |             ^^^^^^^^^^^^^^^^^^^^ help: replace it with: `inode_num`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/file.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant field names in struct initialization\n   --> src/ext4_impls/file.rs:113:13\n    |\n113 |             inode_num: inode_num,\n    |             ^^^^^^^^^^^^^^^^^^^^ help: replace it with: `inode_num`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/file.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant field names in struct initialization\n   --> src/ext4_impls/file.rs:114:13\n    |\n114 |             inode: inode,\n    |             ^^^^^^^^^^^^ help: replace it with: `inode`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/fuse_interface/mod.rs:301:9\n    |\n301 | /         if (flags & O_WRONLY != 0) || (flags & O_RDWR != 0) {\n302 | |             if !can_write {\n303 | |                 return_errno_with_message!(Errno::EACCES, \"Permission denied can not write\");\n304 | |             }\n305 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n301 ~         if ((flags & O_WRONLY != 0) || (flags & O_RDWR != 0)) && !can_write {\n302 +             return_errno_with_message!(Errno::EACCES, \"Permission denied can not write\");\n303 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/fuse_interface/mod.rs:308:9\n    |\n308 | /         if (flags & O_RDONLY != 0) || (flags & O_RDWR != 0) {\n309 | |             if !can_read {\n310 | |                 return_errno_with_message!(Errno::EACCES, \"Permission denied can not read\");\n311 | |             }\n312 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n    |\n308 ~         if ((flags & O_RDONLY != 0) || (flags & O_RDWR != 0)) && !can_read {\n309 +             return_errno_with_message!(Errno::EACCES, \"Permission denied can not read\");\n310 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/fuse_interface/mod.rs:315:9\n    |\n315 | /         if (flags & O_EXCL != 0) || (flags & O_RDWR != 0) {\n316 | |             if !can_execute {\n317 | |                 return_errno_with_message!(Errno::EACCES, \"Permission denied can not exec\");\n318 | |             }\n319 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n    |\n315 ~         if ((flags & O_EXCL != 0) || (flags & O_RDWR != 0)) && !can_execute {\n316 +             return_errno_with_message!(Errno::EACCES, \"Permission denied can not exec\");\n317 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/fuse_interface/mod.rs:443:13\n    |\n443 | /             if (flags & O_WRONLY != 0) || (flags & O_RDWR != 0) {\n444 | |                 if !can_write {\n445 | |                     return_errno_with_message!(Errno::EACCES, \"Permission denied can not write\");\n446 | |                 }\n447 | |             }\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n    |\n443 ~             if ((flags & O_WRONLY != 0) || (flags & O_RDWR != 0)) && !can_write {\n444 +                 return_errno_with_message!(Errno::EACCES, \"Permission denied can not write\");\n445 +             }\n    |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/fuse_interface/mod.rs:450:13\n    |\n450 | /             if (flags & O_RDONLY != 0) || (flags & O_RDWR != 0) {\n451 | |                 if !can_read {\n452 | |                     return_errno_with_message!(Errno::EACCES, \"Permission denied can not read\");\n453 | |                 }\n454 | |             }\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n    |\n450 ~             if ((flags & O_RDONLY != 0) || (flags & O_RDWR != 0)) && !can_read {\n451 +                 return_errno_with_message!(Errno::EACCES, \"Permission denied can not read\");\n452 +             }\n    |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/fuse_interface/mod.rs:457:13\n    |\n457 | /             if (flags & O_EXCL != 0) || (flags & O_RDWR != 0) {\n458 | |                 if !can_execute {\n459 | |                     return_errno_with_message!(Errno::EACCES, \"Permission denied can not exec\");\n460 | |                 }\n461 | |             }\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n    |\n457 ~             if ((flags & O_EXCL != 0) || (flags & O_RDWR != 0)) && !can_execute {\n458 +                 return_errno_with_message!(Errno::EACCES, \"Permission denied can not exec\");\n459 +             }\n    |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/utils/path.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/utils/path.rs:27:5\n   |\n27 |     return path.len();\n   |     ^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n   = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n   |\n27 -     return path.len();\n27 +     path.len()\n   |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_defs/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: usage of a legacy numeric constant\n  --> src/ext4_defs/consts.rs:25:38\n   |\n25 | pub const EXT_MAX_BLOCKS: Ext4Lblk = core::u32::MAX;\n   |                                      ^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: `#[warn(clippy::legacy_numeric_constants)]` on by default\nhelp: use the associated constant instead\n   |\n25 | pub const EXT_MAX_BLOCKS: Ext4Lblk = u32::MAX;\n   |                                      ~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_defs/block_group.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n   --> src/ext4_defs/block_group.rs:166:9\n    |\n164 |         let crc = (checksum & 0xFFFF) as u16;\n    |         ------------------------------------- unnecessary `let` binding\n165 |\n166 |         crc\n    |         ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n    = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n    |\n164 ~         \n165 |\n166 ~         (checksum & 0xFFFF) as u16\n    |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_defs/block_group.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting integer literal to `usize` is unnecessary\n   --> src/ext4_defs/block_group.rs:157:81\n    |\n157 |             unsafe { core::slice::from_raw_parts(self as *const _ as *const u8, 0x40 as usize) };\n    |                                                                                 ^^^^^^^^^^^^^ help: try: `0x40_usize`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Clippy(Error)",
      "raw": "error: redundant redefinition of a binding `data`\n   --> src/ext4_defs/direntry.rs:115:9\n    |\n115 |         let data = data;\n    |         ^^^^^^^^^^^^^^^^\n    |\nhelp: `data` is initially defined here\n   --> src/ext4_defs/direntry.rs:114:17\n    |\n114 |     fn try_from(data: &[T]) -> core::result::Result<Self, u64> {\n    |                 ^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_locals\n    = note: `#[deny(clippy::redundant_locals)]` on by default\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n   --> src/ext4_defs/direntry.rs:149:9\n    |\n148 |         let de_type = unsafe { self.inner.inode_type } as u8;\n    |         ----------------------------------------------------- unnecessary `let` binding\n149 |         de_type\n    |         ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n148 ~         \n149 ~         unsafe { self.inner.inode_type } as u8\n    |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> src/ext4_defs/direntry.rs:148:23\n    |\n148 |         let de_type = unsafe { self.inner.inode_type } as u8;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `unsafe { self.inner.inode_type }`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_defs/direntry.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n   --> src/ext4_defs/direntry.rs:163:9\n    |\n162 |         let name_len = self.name_len as usize;\n    |         -------------------------------------- unnecessary `let` binding\n163 |         name_len\n    |         ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n162 ~         \n163 ~         self.name_len as usize\n    |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_defs/block.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n  --> src/ext4_defs/block.rs:39:13\n   |\n38 |             let value = ptr.read_unaligned();\n   |             --------------------------------- unnecessary `let` binding\n39 |             value\n   |             ^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n   |\n38 ~             \n39 ~             ptr.read_unaligned()\n   |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_defs/block.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n  --> src/ext4_defs/block.rs:48:13\n   |\n47 |             let value = ptr.read_unaligned();\n   |             --------------------------------- unnecessary `let` binding\n48 |             value\n   |             ^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n   |\n47 ~             \n48 ~             ptr.read_unaligned()\n   |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/ext4_defs/extents.rs:283:17\n    |\n283 |                 return Some((ext, l - 1));\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n283 -                 return Some((ext, l - 1));\n283 +                 Some((ext, l - 1))\n    |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> src/ext4_defs/extents.rs:448:17\n    |\n448 |                 self.get_actual_len() + next.get_actual_len() <= EXT_UNWRITTEN_MAX_LEN\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: because `EXT_UNWRITTEN_MAX_LEN` is the maximum value for this type, this comparison is always true\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons\n    = note: `#[deny(clippy::absurd_extreme_comparisons)]` on by default\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> src/ext4_defs/extents.rs:458:17\n    |\n458 |                 self.get_actual_len() + prev.get_actual_len() <= EXT_UNWRITTEN_MAX_LEN\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: because `EXT_UNWRITTEN_MAX_LEN` is the maximum value for this type, this comparison is always true\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_defs/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `SearchPath`\n   --> src/ext4_defs/extents.rs:517:5\n    |\n517 | /     pub fn new() -> Self {\n518 | |         SearchPath {\n519 | |             depth: 0,\n520 | |             maxdepth: 4,\n521 | |             path: vec![],\n522 | |         }\n523 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n516 + impl Default for SearchPath {\n517 +     fn default() -> Self {\n518 +         Self::new()\n519 +     }\n520 + }\n    |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_defs/inode.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/ext4_defs/inode.rs:426:25\n    |\n426 |         let ino_index = inode_id as u32;\n    |                         ^^^^^^^^^^^^^^^ help: try: `inode_id`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_defs/super_block.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/ext4_defs/super_block.rs:176:13\n    |\n176 |             return EXT4_MIN_BLOCK_GROUP_DESCRIPTOR_SIZE as u16;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n176 -             return EXT4_MIN_BLOCK_GROUP_DESCRIPTOR_SIZE as u16;\n176 +             EXT4_MIN_BLOCK_GROUP_DESCRIPTOR_SIZE as u16\n    |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_defs/super_block.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u16` -> `u16`)\n   --> src/ext4_defs/super_block.rs:176:20\n    |\n176 |             return EXT4_MIN_BLOCK_GROUP_DESCRIPTOR_SIZE as u16;\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `EXT4_MIN_BLOCK_GROUP_DESCRIPTOR_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_defs/super_block.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_defs/super_block.rs:223:53\n    |\n223 |         let checksum = ext4_crc32c(EXT4_CRC32_INIT, &data, 0x3fc);\n    |                                                     ^^^^^ help: change this to: `data`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_defs/super_block.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/ext4_defs/super_block.rs:240:42\n    |\n240 |         csum = ext4_crc32c(csum, bitmap, (blocks_per_group / 8) as u32);\n    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(blocks_per_group / 8)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/ext4_impls/extents.rs:80:13\n   |\n80 |             return Ok(search_path);\n   |             ^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n   |\n80 -             return Ok(search_path);\n80 +             Ok(search_path)\n   |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `Ext4ExtentHeader` which implements the `Copy` trait\n  --> src/ext4_impls/extents.rs:37:29\n   |\n37 |                     header: node.header.clone(),\n   |                             ^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `node.header`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `Ext4ExtentHeader` which implements the `Copy` trait\n  --> src/ext4_impls/extents.rs:61:25\n   |\n61 |                 header: node.header.clone(),\n   |                         ^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `node.header`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `Ext4ExtentHeader` which implements the `Copy` trait\n  --> src/ext4_impls/extents.rs:73:25\n   |\n73 |                 header: node.header.clone(),\n   |                         ^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `node.header`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `Ext4ExtentHeader` which implements the `Copy` trait\n  --> src/ext4_impls/extents.rs:98:22\n   |\n98 |         let header = node.header.clone();\n   |                      ^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `node.header`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/extents.rs:119:36\n    |\n119 |             if self.can_merge(&ex, &newex) {\n    |                                    ^^^^^^ help: change this to: `newex`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/extents.rs:120:58\n    |\n120 |                 self.merge_extent(&search_path, &mut ex, &newex)?;\n    |                                                          ^^^^^^ help: change this to: `newex`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/extents.rs:139:70\n    |\n139 |                 if let Some(next_extent) = self.get_extent_from_node(&node, pos + 1) {\n    |                                                                      ^^^^^ help: change this to: `node`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/extents.rs:140:53\n    |\n140 |                     if self.can_merge(&next_extent, &newex) {\n    |                                                     ^^^^^^ help: change this to: `newex`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/extents.rs:155:74\n    |\n155 |                 if let Some(mut prev_extent) = self.get_extent_from_node(&node, pos - 1) {\n    |                                                                          ^^^^^ help: change this to: `node`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/extents.rs:156:53\n    |\n156 |                     if self.can_merge(&prev_extent, &newex) {\n    |                                                     ^^^^^^ help: change this to: `newex`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/extents.rs:157:75\n    |\n157 |                         self.merge_extent(&search_path, &mut prev_extent, &newex)?;\n    |                                                                           ^^^^^^ help: change this to: `newex`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u16` -> `u16`)\n   --> src/ext4_impls/extents.rs:205:48\n    |\n205 |         if ex1.block_count + ex2.block_count > EXT_INIT_MAX_LEN as u16 {\n    |                                                ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `EXT_INIT_MAX_LEN`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u16` -> `u16`)\n   --> src/ext4_impls/extents.rs:210:70\n    |\n210 |         if ex1.is_unwritten() && ex1.block_count + ex2.block_count > EXT_UNWRITTEN_MAX_LEN as u16 {\n    |                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `EXT_UNWRITTEN_MAX_LEN`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `Ext4ExtentHeader` which implements the `Copy` trait\n   --> src/ext4_impls/extents.rs:248:22\n    |\n248 |         let header = node.header.clone();\n    |                      ^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `node.header`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: deref which would be done by auto-deref\n   --> src/ext4_impls/extents.rs:255:17\n    |\n255 |                 (*inode_ref.inode.root_extent_header_mut()).entries_count += 1;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `inode_ref.inode.root_extent_header_mut()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref\n    = note: `#[warn(clippy::explicit_auto_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: deref which would be done by auto-deref\n   --> src/ext4_impls/extents.rs:263:13\n    |\n263 |             (*inode_ref.inode.root_extent_header_mut()).entries_count += 1;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `inode_ref.inode.root_extent_header_mut()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/ext4_impls/extents.rs:272:52\n    |\n272 |             Block::load(self.block_device.clone(), node_block as usize * BLOCK_SIZE);\n    |                                                    ^^^^^^^^^^^^^^^^^^^ help: try: `node_block`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `Option<Ext4Extent>` which implements the `Copy` trait\n   --> src/ext4_impls/extents.rs:396:22\n    |\n396 |         let mut ex = search_path.path[depth].extent.clone().unwrap();\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `search_path.path[depth].extent`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/ext4_impls/extents.rs:412:30\n    |\n412 |             newex.start_lo = (newblock & 0xffffffff) as u32;\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(newblock & 0xffffffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/ext4_impls/extents.rs:412:30\n    |\n412 |             newex.start_lo = (newblock & 0xffffffff) as u32;\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `newblock`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `Ext4ExtentHeader` which implements the `Copy` trait\n   --> src/ext4_impls/extents.rs:450:30\n    |\n450 |                 let header = search_path.path[i as usize].header.clone();\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `search_path.path[i as usize].header`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/ext4_impls/extents.rs:473:60\n    |\n473 |                     Block::load(self.block_device.clone(), node_pblock as usize * BLOCK_SIZE);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^ help: try: `node_pblock`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `Ext4ExtentHeader` which implements the `Copy` trait\n   --> src/ext4_impls/extents.rs:475:30\n    |\n475 |                 let header = search_path.path[i as usize].header.clone();\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `search_path.path[i as usize].header`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `Ext4ExtentHeader` which implements the `Copy` trait\n   --> src/ext4_impls/extents.rs:530:26\n    |\n530 |             let header = search_path.path[i as usize].header.clone();\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `search_path.path[i as usize].header`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`isize` -> `isize`)\n   --> src/ext4_impls/extents.rs:545:27\n    |\n545 |                 let idx = i as isize;\n    |                           ^^^^^^^^^^ help: try: `i`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u64` -> `u64`)\n   --> src/ext4_impls/extents.rs:666:33\n    |\n666 |                 ex.store_pblock(newblock as u64);\n    |                                 ^^^^^^^^^^^^^^^ help: try: `newblock`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/ext4_impls/extents.rs:775:33\n    |\n775 |             let node_disk_pos = path.path[i].pblock_of_node as usize * BLOCK_SIZE;\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `path.path[i].pblock_of_node`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/extents.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `Ext4ExtentHeader` which implements the `Copy` trait\n   --> src/ext4_impls/extents.rs:889:22\n    |\n889 |         let header = path.header.clone();\n    |                      ^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `path.header`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/ext4.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `utils::errors::Errno`\n  --> src/ext4_impls/ext4.rs:56:33\n   |\n56 |                 if e.error() != Errno::ENOENT.into() || !create {\n   |                                 ^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `Errno::ENOENT`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n   = note: `#[warn(clippy::useless_conversion)]` on by default\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/inode.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n  --> src/ext4_impls/inode.rs:30:9\n   |\n27 | /         let offset =\n28 | |             inode_table_blk_num as usize * BLOCK_SIZE + index as usize * inode_size as usize;\n   | |_____________________________________________________________________________________________- unnecessary `let` binding\n29 |\n30 |           offset\n   |           ^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n   |\n27 ~         \n28 |\n29 ~         inode_table_blk_num as usize * BLOCK_SIZE + index as usize * inode_size as usize\n   |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/inode.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/ext4_impls/inode.rs:78:44\n   |\n78 |         let search_path = self.find_extent(&inode_ref, lblock);\n   |                                            ^^^^^^^^^^ help: change this to: `inode_ref`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/inode.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting integer literal to `u32` is unnecessary\n   --> src/ext4_impls/inode.rs:109:31\n    |\n109 |         let mut rel_blk_idx = 0 as u32;\n    |                               ^^^^^^^^ help: try: `0_u32`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/inode.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/ext4_impls/inode.rs:111:38\n    |\n111 |         ext4_bmap_bit_find_clr(data, index as u32, 0x8000, &mut rel_blk_idx);\n    |                                      ^^^^^^^^^^^^ help: try: `index`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/inode.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/inode.rs:112:27\n    |\n112 |         ext4_bmap_bit_set(&mut data, rel_blk_idx);\n    |                           ^^^^^^^^^ help: change this to: `data`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/inode.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/inode.rs:114:70\n    |\n114 |         block_group.set_block_group_balloc_bitmap_csum(&super_block, &data);\n    |                                                                      ^^^^^ help: change this to: `data`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/inode.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/inode.rs:116:69\n    |\n116 |             .write_offset(block_bitmap_block as usize * BLOCK_SIZE, &data);\n    |                                                                     ^^^^^ help: change this to: `data`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/dir.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `dir_find_in_block` doesn't need a mutable reference\n  --> src/ext4_impls/dir.rs:51:48\n   |\n51 |                 let r = self.dir_find_in_block(&mut ext4block, name, result);\n   |                                                ^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n   = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/dir.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/dir.rs:190:46\n    |\n190 |             let pblock = self.get_pblock_idx(&parent, iblock as u32)?;\n    |                                              ^^^^^^^ help: change this to: `parent`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/dir.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/ext4_impls/dir.rs:267:69\n    |\n267 |             let mut sz = core::mem::size_of::<Ext4FakeDirEntry>() + used_len as usize;\n    |                                                                     ^^^^^^^^^^^^^^^^^ help: try: `used_len`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/dir.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: deref which would be done by auto-deref\n   --> src/ext4_impls/dir.rs:341:9\n    |\n341 |         (*pde).entry_len += de_del_entry_len;\n    |         ^^^^^^ help: try: `pde`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/dir.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: deref which would be done by auto-deref\n   --> src/ext4_impls/dir.rs:345:9\n    |\n345 |         (*de_del).inode = 0;\n    |         ^^^^^^^^^ help: try: `de_del`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/dir.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual implementation of an assign operation\n   --> src/ext4_impls/dir.rs:386:21\n    |\n386 |                     offset = offset + de.entry_len as usize;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `offset += de.entry_len as usize`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n    = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/dir.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/ext4_impls/dir.rs:427:9\n    |\n427 |         return Ok(EOK);\n    |         ^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n427 -         return Ok(EOK);\n427 +         Ok(EOK)\n    |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/dir.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/ext4_impls/dir.rs:407:37\n    |\n407 |         let r = self.dir_find_entry(parent as u32, path, &mut search_result)?;\n    |                                     ^^^^^^^^^^^^^ help: try: `parent`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/file.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `Ext4Inode` which implements the `Copy` trait\n  --> src/ext4_impls/file.rs:33:24\n   |\n33 |                 inode: child.inode.clone(),\n   |                        ^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `child.inode`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/file.rs",
      "kind": "Clippy(Error)",
      "raw": "error: redundant redefinition of a binding `extra_size`\n   --> src/ext4_impls/file.rs:104:13\n    |\n104 |             let extra_size = extra_size;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nhelp: `extra_size` is initially defined here\n   --> src/ext4_impls/file.rs:102:13\n    |\n102 |         let extra_size = self.super_block.extra_size();\n    |             ^^^^^^^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_locals\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/file.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/ext4_impls/file.rs:416:18\n    |\n416 |             &p[..len as usize],\n    |                  ^^^^^^^^^^^^ help: try: `len`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/file.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/ext4_impls/file.rs:446:65\n    |\n446 |             self.extent_remove_space(inode_ref, new_blocks_cnt, EXT_MAX_BLOCKS as u32)?;\n    |                                                                 ^^^^^^^^^^^^^^^^^^^^^ help: try: `EXT_MAX_BLOCKS`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/ialloc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting integer literal to `u32` is unnecessary\n  --> src/ext4_impls/ialloc.rs:34:37\n   |\n34 |                 let mut idx_in_bg = 0 as u32;\n   |                                     ^^^^^^^^ help: try: `0_u32`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/ialloc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/ext4_impls/ialloc.rs:37:35\n   |\n37 |                 ext4_bmap_bit_set(&mut bitmap_data, idx_in_bg);\n   |                                   ^^^^^^^^^^^^^^^^ help: change this to: `bitmap_data`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/ialloc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/ext4_impls/ialloc.rs:41:77\n   |\n41 |                     .write_offset(inode_bitmap_block as usize * BLOCK_SIZE, &bitmap_data);\n   |                                                                             ^^^^^^^^^^^^ help: change this to: `bitmap_data`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/ialloc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/ext4_impls/ialloc.rs:43:69\n   |\n43 |                 bg.set_block_group_ialloc_bitmap_csum(&super_block, &bitmap_data);\n   |                                                                     ^^^^^^^^^^^^ help: change this to: `bitmap_data`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/ialloc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n  --> src/ext4_impls/ialloc.rs:57:43\n   |\n57 |                 let free = inodes_in_bg - unused as u32;\n   |                                           ^^^^^^^^^^^^^ help: try: `unused`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:105:69\n    |\n105 |                 Ext4BlockGroup::load_new(self.block_device.clone(), &super_block, bgid as usize);\n    |                                                                     ^^^^^^^^^^^^ help: change this to: `super_block`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:129:66\n    |\n129 |             let bmp_blk_adr = block_group.get_block_bitmap_block(&super_block);\n    |                                                                  ^^^^^^^^^^^^ help: change this to: `super_block`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:136:64\n    |\n136 |                 block_group.set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n    |                                                                ^^^^^^^^^^^^ help: change this to: `super_block`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/ext4_impls/balloc.rs:147:29\n    |\n147 |             let blk_in_bg = blocks_per_group as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `blocks_per_group`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:153:68\n    |\n153 |                     block_group.set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n    |                                                                    ^^^^^^^^^^^^ help: change this to: `super_block`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:166:64\n    |\n166 |                 block_group.set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n    |                                                                ^^^^^^^^^^^^ help: change this to: `super_block`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:209:69\n    |\n209 |                 Ext4BlockGroup::load_new(self.block_device.clone(), &super_block, bgid as usize);\n    |                                                                     ^^^^^^^^^^^^ help: change this to: `super_block`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:233:66\n    |\n233 |             let bmp_blk_adr = block_group.get_block_bitmap_block(&super_block);\n    |                                                                  ^^^^^^^^^^^^ help: change this to: `super_block`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:240:64\n    |\n240 |                 block_group.set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n    |                                                                ^^^^^^^^^^^^ help: change this to: `super_block`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/ext4_impls/balloc.rs:253:29\n    |\n253 |             let blk_in_bg = blocks_per_group as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `blocks_per_group`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:259:68\n    |\n259 |                     block_group.set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n    |                                                                    ^^^^^^^^^^^^ help: change this to: `super_block`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:274:64\n    |\n274 |                 block_group.set_block_group_balloc_bitmap_csum(&super_block, &bitmap_block.data);\n    |                                                                ^^^^^^^^^^^^ help: change this to: `super_block`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/ext4_impls/balloc.rs:351:16\n    |\n351 |             if count as usize > free_cnt {\n    |                ^^^^^^^^^^^^^^ help: try: `count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/ext4_impls/balloc.rs:353:28\n    |\n353 |                 free_cnt = count as usize;\n    |                            ^^^^^^^^^^^^^^ help: try: `count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:356:33\n    |\n356 |             ext4_bmap_bits_free(&mut data, idx_in_bg as u32, free_cnt as u32);\n    |                                 ^^^^^^^^^ help: change this to: `data`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:361:65\n    |\n361 |             bg.set_block_group_balloc_bitmap_csum(&super_block, &data);\n    |                                                                 ^^^^^ help: change this to: `data`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/ext4_impls/balloc.rs:363:73\n    |\n363 |                 .write_offset(block_bitmap_block as usize * BLOCK_SIZE, &data);\n    |                                                                         ^^^^^ help: change this to: `data`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/ext4_impls/balloc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/ext4_impls/balloc.rs:375:30\n    |\n375 |             inode_blocks -= (free_cnt as usize * (BLOCK_SIZE / EXT4_INODE_BLOCK_SIZE)) as u64;\n    |                              ^^^^^^^^^^^^^^^^^ help: try: `free_cnt`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (14/7)\n  --> src/fuse_interface/mod.rs:38:5\n   |\n38 | /     pub fn fuse_setattr(\n39 | |         &self,\n40 | |         ino: u64,\n41 | |         mode: Option<u32>,\n...  |\n52 | |         flags: Option<u32>,\n53 | |     ) {\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n   = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/fuse_interface/mod.rs:141:5\n    |\n141 | /     pub fn fuse_mknod_with_attr(\n142 | |         &self,\n143 | |         parent: u64,\n144 | |         name: &str,\n...   |\n149 | |         gid: u32,\n150 | |     ) -> Result<Ext4InodeRef> {\n    | |_____________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u16` -> `u16`)\n   --> src/fuse_interface/mod.rs:191:68\n    |\n191 |         let inode_ref = self.create_with_attr(parent as u32, name, mode as u16, uid as u16, gid as u16)?;\n    |                                                                    ^^^^^^^^^^^ help: try: `mode`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/fuse_interface/mod.rs:222:18\n    |\n222 |             &p[..len as usize],\n    |                  ^^^^^^^^^^^^ help: try: `len`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/fuse_interface/mod.rs:247:9\n    |\n247 |         return Ok(EOK);\n    |         ^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n247 -         return Ok(EOK);\n247 +         Ok(EOK)\n    |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u16` -> `u16`)\n   --> src/fuse_interface/mod.rs:261:63\n    |\n261 |         let inode_ref = self.create(parent as u32, link_name, mode as u16)?;\n    |                                                               ^^^^^^^^^^^ help: try: `mode`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error: &-masking with zero\n   --> src/fuse_interface/mod.rs:308:12\n    |\n308 |         if (flags & O_RDONLY != 0) || (flags & O_RDWR != 0) {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n    = note: `#[deny(clippy::bad_bit_mask)]` on by default\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/fuse_interface/mod.rs:361:5\n    |\n361 | /     pub fn fuse_write(\n362 | |         &self,\n363 | |         ino: u64,\n364 | |         fh: u64,\n...   |\n369 | |         lock_owner: Option<u64>,\n370 | |     ) -> Result<usize> {\n    | |______________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error: &-masking with zero\n   --> src/fuse_interface/mod.rs:450:16\n    |\n450 |             if (flags & O_RDONLY != 0) || (flags & O_RDWR != 0) {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/fuse_interface/mod.rs:606:5\n    |\n606 | /     fn fuse_getlk(\n607 | |         &mut self,\n608 | |         ino: u64,\n609 | |         fh: u64,\n...   |\n614 | |         pid: u32,\n615 | |     ) {\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (9/7)\n   --> src/fuse_interface/mod.rs:626:5\n    |\n626 | /     fn fuse_setlk(\n627 | |         &mut self,\n628 | |         ino: u64,\n629 | |         fh: u64,\n...   |\n635 | |         sleep: bool,\n636 | |     ) {\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/fuse_interface/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (9/7)\n   --> src/fuse_interface/mod.rs:683:5\n    |\n683 | /     fn fuse_copy_file_range(\n684 | |         &mut self,\n685 | |         ino_in: u64,\n686 | |         fh_in: u64,\n...   |\n692 | |         flags: u32,\n693 | |     ) {\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n"
    },
    {
      "cmd_idx": 29,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-09T07:36:50Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:36:50Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 30,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=ext4_rs, checker=Clippy\n// toolchain=nightly-2024-06-01, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_14/yuoo655/ext4_rs\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking bitflags v2.5.0\n    Checking log v0.4.21\n    Checking ext4_rs v1.1.0 (/home/runner/check/batch_14/yuoo655/ext4_rs)\nerror: could not compile `ext4_rs` (lib) due to 7 previous errors; 109 warnings emitted\n"
    },
    {
      "cmd_idx": 31,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=ext4_rs, checker=Mirai\n// toolchain=nightly-2024-06-01, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_14/yuoo655/ext4_rs\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking bitflags v2.5.0\n    Checking log v0.4.21\n    Checking ext4_rs v1.1.0 (/home/runner/check/batch_14/yuoo655/ext4_rs)\nerror: could not compile `ext4_rs` (lib)\n"
    },
    {
      "cmd_idx": 32,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4libtest/src/lib.rs (original lines from 151 to 151)\n-\n"
    },
    {
      "cmd_idx": 32,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4libtest/src/lib.rs (original lines from 157 to 157)\n-        \n"
    },
    {
      "cmd_idx": 32,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4libtest/src/main.rs (original lines from 558 to 558)\n-\n"
    },
    {
      "cmd_idx": 32,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/yuoo655/ext4libtest/src/main.rs (original lines from 566 to 573)\n-        let inode_ref = self.ext4.fuse_mkdir_with_attr(\n-            parent,\n-            name.to_str().unwrap(),\n-            mode,\n-            umask,\n-            _req.uid(),\n-            _req.gid(),\n-        ).unwrap();\n+        let inode_ref = self\n+            .ext4\n+            .fuse_mkdir_with_attr(\n+                parent,\n+                name.to_str().unwrap(),\n+                mode,\n+                umask,\n+                _req.uid(),\n+                _req.gid(),\n+            )\n+            .unwrap();\n"
    },
    {
      "cmd_idx": 35,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-09T07:37:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:37:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 36,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=ext4libtest, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_14/yuoo655/ext4libtest\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/yuoo655/ext4_rs.git`\n    Updating git repository `https://github.com/cberner/fuser.git`\n    Updating git repository `https://github.com/yuoo655/jbd2_rs.git`\n    Updating crates.io index\n Downloading crates ...\n  Downloaded pkg-config v0.3.30\n  Downloaded cfg_aliases v0.1.1\n  Downloaded page_size v0.6.0\n  Downloaded proc-macro2 v1.0.85\n  Downloaded syn v2.0.66\n  Downloaded nix v0.28.0\n   Compiling proc-macro2 v1.0.85\n   Compiling unicode-ident v1.0.12\n   Compiling libc v0.2.155\n   Compiling cfg_aliases v0.1.1\n   Compiling nix v0.28.0\n    Checking log v0.4.21\n    Checking bitflags v2.5.0\n   Compiling pkg-config v0.3.30\n    Checking cfg-if v1.0.0\n    Checking byteorder v1.5.0\n    Checking smallvec v1.13.2\n    Checking memchr v2.7.2\n   Compiling quote v1.0.36\n   Compiling fuser v0.14.0 (https://github.com/cberner/fuser.git#99aa5280)\n   Compiling syn v2.0.66\n    Checking ext4_rs v1.0.0 (https://github.com/yuoo655/ext4_rs.git?rev=d8b2336#d8b2336d)\n    Checking page_size v0.6.0\n    Checking jbd2_rs v0.1.0 (https://github.com/yuoo655/jbd2_rs.git#94d8e257)\nerror: failed to run custom build command for `fuser v0.14.0 (https://github.com/cberner/fuser.git#99aa5280)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_14/yuoo655/ext4libtest/target/debug/build/fuser-9a80437d38652e43/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-env-changed=FUSE3_NO_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG\n  cargo:rerun-if-env-changed=FUSE3_STATIC\n  cargo:rerun-if-env-changed=FUSE3_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_STATIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_SYSROOT_DIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR\n  cargo:rerun-if-env-changed=FUSE_NO_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG\n  cargo:rerun-if-env-changed=FUSE_STATIC\n  cargo:rerun-if-env-changed=FUSE_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_STATIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_SYSROOT_DIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR\n\n  --- stderr\n\n  pkg-config exited with status code 1\n  > PKG_CONFIG_ALLOW_SYSTEM_LIBS=1 PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1 pkg-config --libs --cflags fuse3 fuse3 >= 3.0.0\n\n  The system library `fuse3` required by crate `fuser` was not found.\n  The file `fuse3.pc` needs to be installed and the PKG_CONFIG_PATH environment variable must contain its parent directory.\n  The PKG_CONFIG_PATH environment variable is not set.\n\n  HINT: if you have installed the library, try setting PKG_CONFIG_PATH to the directory containing `fuse3.pc`.\n\n\n  pkg-config exited with status code 1\n  > PKG_CONFIG_ALLOW_SYSTEM_LIBS=1 PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1 pkg-config --libs --cflags fuse fuse >= 2.6.0\n\n  The system library `fuse` required by crate `fuser` was not found.\n  The file `fuse.pc` needs to be installed and the PKG_CONFIG_PATH environment variable must contain its parent directory.\n  The PKG_CONFIG_PATH environment variable is not set.\n\n  HINT: if you have installed the library, try setting PKG_CONFIG_PATH to the directory containing `fuse.pc`.\n\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/fuser-379f3f6b680d6b6e/99aa528/build.rs:41:22:\n  called `Result::unwrap()` on an `Err` value: ()\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 37,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=ext4libtest, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_14/yuoo655/ext4libtest\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling proc-macro2 v1.0.85\n   Compiling unicode-ident v1.0.12\n   Compiling libc v0.2.155\n   Compiling cfg_aliases v0.1.1\n   Compiling nix v0.28.0\n    Checking log v0.4.21\n    Checking bitflags v2.5.0\n   Compiling pkg-config v0.3.30\n    Checking byteorder v1.5.0\n    Checking cfg-if v1.0.0\n    Checking memchr v2.7.2\n   Compiling quote v1.0.36\n   Compiling fuser v0.14.0 (https://github.com/cberner/fuser.git#99aa5280)\n   Compiling syn v2.0.66\n    Checking smallvec v1.13.2\n    Checking page_size v0.6.0\nerror: failed to run custom build command for `fuser v0.14.0 (https://github.com/cberner/fuser.git#99aa5280)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_14/yuoo655/ext4libtest/target/debug/build/fuser-72050bbec9ca2218/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-env-changed=FUSE3_NO_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG\n  cargo:rerun-if-env-changed=FUSE3_STATIC\n  cargo:rerun-if-env-changed=FUSE3_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_STATIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_SYSROOT_DIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR\n  cargo:rerun-if-env-changed=FUSE_NO_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG\n  cargo:rerun-if-env-changed=FUSE_STATIC\n  cargo:rerun-if-env-changed=FUSE_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_STATIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_SYSROOT_DIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR\n\n  --- stderr\n\n  pkg-config exited with status code 1\n  > PKG_CONFIG_ALLOW_SYSTEM_LIBS=1 PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1 pkg-config --libs --cflags fuse3 fuse3 >= 3.0.0\n\n  The system library `fuse3` required by crate `fuser` was not found.\n  The file `fuse3.pc` needs to be installed and the PKG_CONFIG_PATH environment variable must contain its parent directory.\n  The PKG_CONFIG_PATH environment variable is not set.\n\n  HINT: if you have installed the library, try setting PKG_CONFIG_PATH to the directory containing `fuse3.pc`.\n\n\n  pkg-config exited with status code 1\n  > PKG_CONFIG_ALLOW_SYSTEM_LIBS=1 PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1 pkg-config --libs --cflags fuse fuse >= 2.6.0\n\n  The system library `fuse` required by crate `fuser` was not found.\n  The file `fuse.pc` needs to be installed and the PKG_CONFIG_PATH environment variable must contain its parent directory.\n  The PKG_CONFIG_PATH environment variable is not set.\n\n  HINT: if you have installed the library, try setting PKG_CONFIG_PATH to the directory containing `fuse.pc`.\n\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/fuser-379f3f6b680d6b6e/99aa528/build.rs:41:22:\n  called `Result::unwrap()` on an `Err` value: ()\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 38,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=ext4libtest, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_14/yuoo655/ext4libtest\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling proc-macro2 v1.0.85\n   Compiling unicode-ident v1.0.12\n   Compiling libc v0.2.155\n   Compiling cfg_aliases v0.1.1\n   Compiling nix v0.28.0\n   Compiling pkg-config v0.3.30\n   Compiling bitflags v2.5.0\n   Compiling log v0.4.21\n[2024-10-09T07:37:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:37:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling cfg-if v1.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.66\n   Compiling fuser v0.14.0 (https://github.com/cberner/fuser.git#99aa5280)\n   Compiling byteorder v1.5.0\nerror: failed to run custom build command for `fuser v0.14.0 (https://github.com/cberner/fuser.git#99aa5280)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_14/yuoo655/ext4libtest/target/debug/build/fuser-9a80437d38652e43/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-env-changed=FUSE3_NO_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG\n  cargo:rerun-if-env-changed=FUSE3_STATIC\n  cargo:rerun-if-env-changed=FUSE3_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_STATIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_SYSROOT_DIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR\n  cargo:rerun-if-env-changed=FUSE_NO_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG\n  cargo:rerun-if-env-changed=FUSE_STATIC\n  cargo:rerun-if-env-changed=FUSE_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_STATIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_SYSROOT_DIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR\n\n  --- stderr\n\n  pkg-config exited with status code 1\n  > PKG_CONFIG_ALLOW_SYSTEM_LIBS=1 PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1 pkg-config --libs --cflags fuse3 fuse3 >= 3.0.0\n\n  The system library `fuse3` required by crate `fuser` was not found.\n  The file `fuse3.pc` needs to be installed and the PKG_CONFIG_PATH environment variable must contain its parent directory.\n  The PKG_CONFIG_PATH environment variable is not set.\n\n  HINT: if you have installed the library, try setting PKG_CONFIG_PATH to the directory containing `fuse3.pc`.\n\n\n  pkg-config exited with status code 1\n  > PKG_CONFIG_ALLOW_SYSTEM_LIBS=1 PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1 pkg-config --libs --cflags fuse fuse >= 2.6.0\n\n  The system library `fuse` required by crate `fuser` was not found.\n  The file `fuse.pc` needs to be installed and the PKG_CONFIG_PATH environment variable must contain its parent directory.\n  The PKG_CONFIG_PATH environment variable is not set.\n\n  HINT: if you have installed the library, try setting PKG_CONFIG_PATH to the directory containing `fuse.pc`.\n\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/fuser-379f3f6b680d6b6e/99aa528/build.rs:41:22:\n  called `Result::unwrap()` on an `Err` value: ()\n  stack backtrace:\n     0:     0x55aceaff2f15 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55aceaff2f15 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55aceaff2f15 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55aceaff2f15 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55aceb01595b - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55aceb01595b - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55aceaff03cf - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55aceaff2cee - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55aceaff2cee - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55aceaff41f9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55aceaff3f3d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55aceaff4703 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55aceaff45e4 - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:664:13\n    13:     0x55aceaff33d9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55aceaff4317 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55aceb014a13 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55aceb014f56 - core::result::unwrap_failed::hcaf97cbd304b2b7c\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/result.rs:1658:5\n    17:     0x55aceaf9fa8a - core::result::Result<T,E>::unwrap::h9be5e63be8ed3b35\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/result.rs:1081:23\n    18:     0x55aceaf9fa8a - build_script_build::main::h12b9dd210309a9fc\n                                 at /home/runner/.cargo/git/checkouts/fuser-379f3f6b680d6b6e/99aa528/build.rs:37:17\n    19:     0x55aceaf9f60b - core::ops::function::FnOnce::call_once::h0e20a66fdc4f0534\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    20:     0x55aceaf9f34e - std::sys_common::backtrace::__rust_begin_short_backtrace::hc9811d06d7a8626c\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    21:     0x55aceaf9f3c1 - std::rt::lang_start::{{closure}}::hb1d45db3c27a1809\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    22:     0x55aceafece1d - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    23:     0x55aceafece1d - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    24:     0x55aceafece1d - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    25:     0x55aceafece1d - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    26:     0x55aceafece1d - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    27:     0x55aceafece1d - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    28:     0x55aceafece1d - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    29:     0x55aceafece1d - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    30:     0x55aceafece1d - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    31:     0x55aceaf9f39a - std::rt::lang_start::h34e50d79fa53a1cd\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    32:     0x55aceaf9fd5e - main\n    33:     0x7f0fabc29d90 - <unknown>\n    34:     0x7f0fabc29e40 - __libc_start_main\n    35:     0x55aceaf9f275 - _start\n    36:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    }
  ]
}