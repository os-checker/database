{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.83.0-nightly (eb4e23467 2024-10-09)",
          "commit_hash": "eb4e2346748e1760f74fcaa27b42431e0b95f8f3",
          "commit_date": "2024-10-09",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.83.0-nightly",
          "llvm_version": "19.1.1"
        },
        "installed": [
          {
            "channel": "nightly-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "x86_64-unknown-linux-gnu"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-linux-gnu",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1728565712694,
        "finish": 1728565716408,
        "duration_ms": 3713,
        "git_time": "2024-10-10 21:04:16 +0800",
        "git_sha": "e4918cadb9e342fabb1ace9518c7303189917d5a"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Mirai",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "mirai": [
          "Mirai"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "kern-crates",
        "repo": "ByteOS"
      },
      {
        "user": "kern-crates",
        "repo": "CSpace"
      },
      {
        "user": "kern-crates",
        "repo": "allocator"
      },
      {
        "user": "kern-crates",
        "repo": "arceos_api"
      },
      {
        "user": "kern-crates",
        "repo": "arceos_posix_api"
      },
      {
        "user": "kern-crates",
        "repo": "arm_gic"
      },
      {
        "user": "kern-crates",
        "repo": "arm_pl011"
      },
      {
        "user": "kern-crates",
        "repo": "axalloc"
      }
    ],
    "packages": [
      {
        "name": "kernel",
        "repo": {
          "repo_idx": 0,
          "user": "kern-crates",
          "repo": "ByteOS"
        }
      },
      {
        "name": "cspace",
        "repo": {
          "repo_idx": 1,
          "user": "kern-crates",
          "repo": "CSpace"
        }
      },
      {
        "name": "allocator",
        "repo": {
          "repo_idx": 2,
          "user": "kern-crates",
          "repo": "allocator"
        }
      },
      {
        "name": "arceos_api",
        "repo": {
          "repo_idx": 3,
          "user": "kern-crates",
          "repo": "arceos_api"
        }
      },
      {
        "name": "arceos_posix_api",
        "repo": {
          "repo_idx": 4,
          "user": "kern-crates",
          "repo": "arceos_posix_api"
        }
      },
      {
        "name": "arm_gic",
        "repo": {
          "repo_idx": 5,
          "user": "kern-crates",
          "repo": "arm_gic"
        }
      },
      {
        "name": "arm_pl011",
        "repo": {
          "repo_idx": 6,
          "user": "kern-crates",
          "repo": "arm_pl011"
        }
      },
      {
        "name": "axalloc",
        "repo": {
          "repo_idx": 7,
          "user": "kern-crates",
          "repo": "axalloc"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p kernel -- --emit=json",
      "count": 0,
      "duration_ms": 157,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p kernel -- --emit=json",
      "count": 0,
      "duration_ms": 155,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p kernel -- --emit=json",
      "count": 0,
      "duration_ms": 155,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p kernel -- --emit=json",
      "count": 0,
      "duration_ms": 157,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p kernel -- --emit=json",
      "count": 0,
      "duration_ms": 159,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64imac-unknown-none-elf --no-deps --message-format=json",
      "count": 137,
      "duration_ms": 4499,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target loongarch64-unknown-none --no-deps --message-format=json",
      "count": 140,
      "duration_ms": 4939,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 137,
      "duration_ms": 4599,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 140,
      "duration_ms": 20285,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 16,
      "duration_ms": 4854,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 5524,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target loongarch64-unknown-none",
      "count": 1,
      "duration_ms": 2917,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 2541,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64imac-unknown-none-elf",
      "count": 1,
      "duration_ms": 2948,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 4947,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 4854,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 5524,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2917,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2541,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2948,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 4947,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p cspace -- --emit=json",
      "count": 98,
      "duration_ms": 105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 59,
      "duration_ms": 8784,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 45,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 6167,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 8784,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p allocator -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 859,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 46,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 149,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos_api -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 10219,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 46,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 8768,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 10219,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 8768,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos_posix_api -- --emit=json",
      "count": 0,
      "duration_ms": 113,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 10052,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 46,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 9208,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 10052,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9208,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arm_gic -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 2301,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 46,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2295,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2295,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arm_pl011 -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 286,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 45,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 199,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axalloc -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 6056,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 46,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 6461,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 6056,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 6461,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-08",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 5,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: comparison to empty slice\n  --> kernel/build.rs:17:12\n   |\n17 |         if module == \"\" {\n   |            ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `module.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n   = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/build.rs:20:84\n   |\n20 |         module_file_content.push_str(&format!(\"extern crate {};\\n\", module.replace(\"-\", \"_\")))\n   |                                                                                    ^^^ help: try using a `char` instead: `'-'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/build.rs:29:16\n   |\n29 |         .split(\",\")\n   |                ^^^ help: try using a `char` instead: `','`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded sub `cfg` when there is only one condition\n   --> kernel/src/syscall/mod.rs:381:19\n    |\n381 |             #[cfg(any(target_arch = \"x86_64\"))]\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `target_arch = \"x86_64\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_minimal_cfg\n    = note: `#[warn(clippy::non_minimal_cfg)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits of hex, binary or octal literal not in groups of equal size\n   --> kernel/src/syscall/fd.rs:936:31\n    |\n936 |             stime + timeout * 0x1000_000\n    |                               ^^^^^^^^^^ help: consider: `0x0100_0000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n    = note: `#[warn(clippy::unusual_byte_groupings)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/shm.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this is a decimal constant\n  --> kernel/src/syscall/shm.rs:31:21\n   |\n31 |         if shmflg & 01000 > 0 {\n   |                     ^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_prefixed_literal\n   = note: `#[warn(clippy::zero_prefixed_literal)]` on by default\nhelp: if you mean to use a decimal constant, remove the `0` to avoid confusion\n   |\n31 |         if shmflg & 1000 > 0 {\n   |                     ~~~~\nhelp: if you mean to use an octal constant, use `0o`\n   |\n31 |         if shmflg & 0o1000 > 0 {\n   |                     ~~~~~~\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `else { if .. }` block can be collapsed\n   --> kernel/src/syscall/task.rs:726:24\n    |\n726 |                   } else {\n    |  ________________________^\n727 | |                     if let Some(index) = target_signal.real_time_index() {\n728 | |                         child_tcb.signal_queue[index] += 1;\n729 | |                     }\n730 | |                 }\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\n    = note: `#[warn(clippy::collapsible_else_if)]` on by default\nhelp: collapse nested if block\n    |\n726 ~                 } else if let Some(index) = target_signal.real_time_index() {\n727 +                     child_tcb.signal_queue[index] += 1;\n728 +                 }\n    |\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:757:36\n    |\n757 |             sec: stime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n    = note: `#[warn(clippy::inconsistent_digit_grouping)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:758:37\n    |\n758 |             usec: stime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:761:36\n    |\n761 |             sec: utime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:762:37\n    |\n762 |             usec: utime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constants have by default a `'static` lifetime\n   --> kernel/src/tasks/initproc.rs:213:27\n    |\n213 | pub const USER_WORK_DIR: &'static str = \"/\";\n    |                          -^^^^^^^---- help: consider removing `'static`: `&str`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n    = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:42:9\n   |\n42 | /         if events.contains(PollEvent::POLLOUT) {\n43 | |             if self.inner.lock().len() <= 0x50000 {\n44 | |                 res |= PollEvent::POLLOUT;\n45 | |             }\n46 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n   = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n   |\n42 ~         if events.contains(PollEvent::POLLOUT) && self.inner.lock().len() <= 0x50000 {\n43 +             res |= PollEvent::POLLOUT;\n44 +         }\n   |\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:47:9\n   |\n47 | /         if events.contains(PollEvent::POLLIN) {\n48 | |             if self.inner.lock().len() > 0 {\n49 | |                 res |= PollEvent::POLLIN;\n50 | |             }\n51 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n   |\n47 ~         if events.contains(PollEvent::POLLIN) && self.inner.lock().len() > 0 {\n48 +             res |= PollEvent::POLLIN;\n49 +         }\n   |\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/epoll/mod.rs:65:17\n   |\n65 | //                 self.data.lock().get_mut(&fd).map(|x| {\n66 | ||                     *x = ev;\n67 | ||                 });\n   | ||__________________^- help: try: `if let Some(x) = self.data.lock().get_mut(&fd) { *x = ev; }`\n   |  |__________________|\n   | \n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\n   = note: `#[warn(clippy::option_map_unit_fn)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ADD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:79:5\n   |\n79 |     ADD = 1,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Add`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DEL` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:80:5\n   |\n80 |     DEL = 2,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Del`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MOD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:81:5\n   |\n81 |     MOD = 3,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Mod`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `STEAM` contains a capitalized acronym\n  --> kernel/src/socket.rs:15:5\n   |\n15 |     STEAM,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Steam`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DGRAME` contains a capitalized acronym\n  --> kernel/src/socket.rs:16:5\n   |\n16 |     DGRAME,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dgrame`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RAW` contains a capitalized acronym\n  --> kernel/src/socket.rs:17:5\n   |\n17 |     RAW,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Raw`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/socket.rs:163:12\n    |\n163 |         if data.len() == 0 {\n    |            ^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `data.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/socket.rs:186:33\n    |\n186 |         match self.inner.sendto(&buffer, None) {\n    |                                 ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPERM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:21:5\n   |\n21 |     EPERM = 1,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eperm`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOENT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:23:5\n   |\n23 |     ENOENT = 2,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoent`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESRCH` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:25:5\n   |\n25 |     ESRCH = 3,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Esrch`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EINTR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:27:5\n   |\n27 |     EINTR = 4,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eintr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:29:5\n   |\n29 |     EIO = 5,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Eio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENXIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:31:5\n   |\n31 |     ENXIO = 6,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enxio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOEXEC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:35:5\n   |\n35 |     ENOEXEC = 8,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoexec`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBADF` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:37:5\n   |\n37 |     EBADF = 9,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebadf`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECHILD` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:39:5\n   |\n39 |     ECHILD = 10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Echild`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EAGAIN` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:41:5\n   |\n41 |     EAGAIN = 11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eagain`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOMEM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:43:5\n   |\n43 |     ENOMEM = 12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enomem`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EACCES` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:45:5\n   |\n45 |     EACCES = 13,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eacces`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFAULT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:47:5\n   |\n47 |     EFAULT = 14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efault`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTBLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:49:5\n   |\n49 |     ENOTBLK = 15,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotblk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBUSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:51:5\n   |\n51 |     EBUSY = 16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebusy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EEXIST` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:53:5\n   |\n53 |     EEXIST = 17,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eexist`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EXDEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:55:5\n   |\n55 |     EXDEV = 18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Exdev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENODEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:57:5\n   |\n57 |     ENODEV = 19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enodev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:59:5\n   |\n59 |     ENOTDIR = 20,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EISDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:61:5\n   |\n61 |     EISDIR = 21,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eisdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EINVAL` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:63:5\n   |\n63 |     EINVAL = 22,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Einval`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:65:5\n   |\n65 |     ENFILE = 23,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EMFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:67:5\n   |\n67 |     EMFILE = 24,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:69:5\n   |\n69 |     ENOTTY = 25,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXTBSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:71:5\n   |\n71 |     ETXTBSY = 26,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxtbsy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFBIG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:73:5\n   |\n73 |     EFBIG = 27,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efbig`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOSPC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:75:5\n   |\n75 |     ENOSPC = 28,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enospc`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:77:5\n   |\n77 |     ESPIPE = 29,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Espipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EROFS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:79:5\n   |\n79 |     EROFS = 30,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erofs`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EMLINK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:81:5\n   |\n81 |     EMLINK = 31,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emlink`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:83:5\n   |\n83 |     EPIPE = 32,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDOM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:85:5\n   |\n85 |     EDOM = 33,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Edom`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERANGE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:87:5\n   |\n87 |     ERANGE = 34,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erange`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDEADLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:89:5\n   |\n89 |     EDEADLK = 35,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edeadlk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENAMETOOLONG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:91:5\n   |\n91 |     ENAMETOOLONG = 36,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enametoolong`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOLCK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:93:5\n   |\n93 |     ENOLCK = 37,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enolck`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOSYS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:95:5\n   |\n95 |     ENOSYS = 38,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enosys`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTEMPTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:97:5\n   |\n97 |     ENOTEMPTY = 39,\n   |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotempty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EAFNOSUPPORT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:99:5\n   |\n99 |     EAFNOSUPPORT = 97,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eafnosupport`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTCONN` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:101:5\n    |\n101 |     ENOTCONN = 107,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotconn`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETIMEDOUT` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:103:5\n    |\n103 |     ETIMEDOUT = 100,\n    |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etimedout`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECONNREFUSED` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:105:5\n    |\n105 |     ECONNREFUSED = 111,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Econnrefused`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EALREADY` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:107:5\n    |\n107 |     EALREADY = 114,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ealready`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting integer literal to `isize` is unnecessary\n   --> kernel/src/syscall/consts.rs:422:27\n    |\n422 | pub const AT_CWD: usize = -100 as isize as usize;\n    |                           ^^^^^^^^^^^^^ help: try: `-100_isize`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:509:1\n    |\n509 | impl Into<MappingFlags> for MmapProt {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n    = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<syscall::consts::MmapProt>`\n    |\n509 ~ impl From<MmapProt> for MappingFlags {\n510 ~     fn from(val: MmapProt) -> Self {\n511 |         let mut res = MappingFlags::empty();\n512 ~         if val.contains(MmapProt::PROT_READ) {\n513 |             res |= MappingFlags::R;\n514 |         }\n515 ~         if val.contains(MmapProt::PROT_WRITE) {\n516 |             res |= MappingFlags::W;\n517 |         }\n518 ~         if val.contains(MmapProt::PROT_EXEC) {\n    |\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DUPFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:607:5\n    |\n607 |     DUPFD = 0,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:609:5\n    |\n609 |     GETFD = 1,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:611:5\n    |\n611 |     SETFD = 2,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:613:5\n    |\n613 |     GETFL = 3,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:615:5\n    |\n615 |     SETFL = 4,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:617:5\n    |\n617 |     GETLK = 5,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:619:5\n    |\n619 |     SETLK = 6,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETLKW` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:621:5\n    |\n621 |     SETLKW = 7,\n    |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlkw`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DUPFDCLOEXEC` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:623:5\n    |\n623 |     DUPFDCLOEXEC = 0x406,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfdcloexec`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:872:1\n    |\n872 | impl<T> Into<usize> for UserRef<T> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<syscall::consts::UserRef<T>>`\n    |\n872 ~ impl<T> From<UserRef<T>> for usize {\n873 ~     fn from(val: UserRef<T>) -> Self {\n874 ~         val.addr.addr()\n    |\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> kernel/src/syscall/fd.rs:26:8\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |        ^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!path.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/src/syscall/fd.rs:26:43\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |                                           ^^^ help: try using a `char` instead: `'/'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/fd.rs:298:50\n    |\n298 |         dentry_open(dir.dentry.clone().unwrap(), &path, OpenFlags::NONE)\n    |                                                  ^^^^^ help: change this to: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is only used to index `ts`\n   --> kernel/src/syscall/fd.rs:529:26\n    |\n529 |                 for i in 0..2 {\n    |                          ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n529 |                 for <item> in ts.iter().take(2) {\n    |                     ~~~~~~    ~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is only used to index `poll_fds`\n   --> kernel/src/syscall/fd.rs:667:22\n    |\n667 |             for i in 0..nfds {\n    |                      ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n667 |             for <item> in poll_fds.iter_mut().take(nfds) {\n    |                 ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `writeat` doesn't need a mutable reference\n   --> kernel/src/syscall/fd.rs:995:46\n    |\n995 |                 .writeat(*off_out.get_ref(), &mut buffer[..rsize])\n    |                                              ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this loop could be written as a `while let` loop\n   --> kernel/src/syscall/socket.rs:237:9\n    |\n237 | /         loop {\n238 | |             match socket.inner.clone().connect(remote) {\n239 | |                 Err(NetServerError::Blocking) => {}\n240 | |                 _ => break,\n241 | |             }\n242 | |             yield_now().await;\n243 | |         }\n    | |_________^ help: try: `while let Err(NetServerError::Blocking) = socket.inner.clone().connect(remote) { .. }`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#while_let_loop\n    = note: `#[warn(clippy::while_let_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `Ipv4Addr` which implements the `Copy` trait\n   --> kernel/src/syscall/socket.rs:488:27\n    |\n488 |                 sa.addr = new_socket.get_remote().unwrap().ip().clone();\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*new_socket.get_remote().unwrap().ip()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n    = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/syscall/task.rs:68:45\n   |\n68 |     if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n   |                                             ^^^^^^^ help: change this to: `buffer`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant closure\n   --> kernel/src/syscall/task.rs:126:26\n    |\n126 |                     .map(|x| Arc::new(x))\n    |                          ^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Arc::new`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n    = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `alloc::string::String`\n   --> kernel/src/syscall/task.rs:192:16\n    |\n192 |     let path = String::from(path);\n    |                ^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/task.rs:243:59\n    |\n243 |         let elf = if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n    |                                                           ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: parameter is only used in recursion\n   --> kernel/src/syscall/task.rs:189:5\n    |\n189 |     envp: Vec<String>,\n    |     ^^^^ help: if this is intentional, prefix it with an underscore: `_envp`\n    |\nnote: parameter used here\n   --> kernel/src/syscall/task.rs:248:79\n    |\n248 |             return exec_with_process(task, String::from(\"busybox\"), new_args, envp).await;\n    |                                                                               ^^^^\n...\n271 |                 return exec_with_process(task, new_args[0].clone(), new_args, envp).await;\n    |                                                                               ^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\n    = note: `#[warn(clippy::only_used_in_recursion)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:405:14\n    |\n405 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n    = note: `#[warn(clippy::into_iter_on_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:411:14\n    |\n411 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `.then_some(..).unwrap_or(..)` can be written more clearly with `if .. else ..`\n   --> kernel/src/syscall/task.rs:460:31\n    |\n460 |           let clear_child_tid = flags\n    |  _______________________________^\n461 | |             .contains(CloneFlags::CLONE_CHILD_CLEARTID)\n462 | |             .then_some(ctid)\n463 | |             .unwrap_or(UserRef::from(0));\n    | |________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#obfuscated_if_else\n    = note: `#[warn(clippy::obfuscated_if_else)]` on by default\nhelp: try\n    |\n460 ~         let clear_child_tid = if flags\n461 ~             .contains(CloneFlags::CLONE_CHILD_CLEARTID) { ctid } else { UserRef::from(0) };\n    |\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:513:21\n    |\n513 | /                     inner\n514 | |                         .children\n515 | |                         .iter()\n516 | |                         .find(|x| x.task_id == pid as usize)\n517 | |                         .map(|x| x.clone())\n    | |___________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\n    = note: `#[warn(clippy::map_clone)]` on by default\nhelp: consider calling the dedicated `cloned` method\n    |\n513 ~                     inner\n514 +                         .children\n515 +                         .iter()\n516 +                         .find(|x| x.task_id == pid as usize).cloned()\n    |\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `.iter().count()` on a `Vec`\n   --> kernel/src/syscall/task.rs:524:17\n    |\n524 |                 self.task.pcb.lock().children.iter().count()\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.task.pcb.lock().children.len()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#iter_count\n    = note: `#[warn(clippy::iter_count)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map_or(None, ..)` on an `Option` value. This can be done more directly by calling `and_then(..)` instead\n   --> kernel/src/syscall/task.rs:554:24\n    |\n554 |             let exit = child_task.clone().map_or(None, |x| x.exit_code());\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using `and_then` instead: `child_task.clone().and_then(|x| x.exit_code())`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_or_none\n    = note: `#[warn(clippy::option_map_or_none)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> kernel/src/syscall/task.rs:698:17\n    |\n698 |                 return Err(LinuxError::EPERM);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n698 -                 return Err(LinuxError::EPERM);\n698 +                 Err(LinuxError::EPERM)\n    |\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:706:13\n    |\n706 | /             x.threads\n707 | |                 .iter()\n708 | |                 .find(|x| match x.upgrade() {\n709 | |                     Some(thread) => thread.task_id == tid,\n710 | |                     None => false,\n711 | |                 })\n712 | |                 .map(|x| x.clone())\n    | |___________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\nhelp: consider calling the dedicated `cloned` method\n    |\n706 ~             x.threads\n707 +                 .iter()\n708 +                 .find(|x| match x.upgrade() {\n709 +                     Some(thread) => thread.task_id == tid,\n710 +                     None => false,\n711 +                 }).cloned()\n    |\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/syscall/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `usize`\n   --> kernel/src/syscall/mod.rs:255:21\n    |\n255 |                     args[5].into(),\n    |                     ^^^^^^^^^^^^^^ help: consider removing `.into()`: `args[5]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/async_ops.rs:67:10\n   |\n67 |           .find(|x| x.contains(&task_id))\n   |  __________^\n68 | |         .is_some()\n   | |__________________^ help: use `any()` instead: `any(|x| x.contains(&task_id))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n   = note: `#[warn(clippy::search_is_some)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/tasks/async_ops.rs:81:21\n   |\n81 | /                     self.0\n82 | |                         .lock()\n83 | |                         .values_mut()\n84 | |                         .find(|x| x.contains(&self.1))\n85 | |                         .map(|x| x.retain(|x| *x != self.1));\n   | |____________________________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\nhelp: try\n   |\n81 ~                     if let Some(x) = self.0\n82 +                         .lock()\n83 +                         .values_mut()\n84 +                         .find(|x| x.contains(&self.1)) { x.retain(|x| *x != self.1) }\n   |\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:121:41\n    |\n121 |             .map(|x| x.drain(..cmp::min(wake_count as usize, que_size)));\n    |                                         ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:138:28\n    |\n138 |         .map(|x| x.drain(..wake_count as usize).count())\n    |                            ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:143:28\n    |\n143 |         .map(|x| x.drain(..reque_count as usize).collect());\n    |                            ^^^^^^^^^^^^^^^^^^^^ help: try: `reque_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: usage of `contains_key` followed by `insert` on a `BTreeMap`\n   --> kernel/src/tasks/async_ops.rs:146:9\n    |\n146 | /         if !futex_table.contains_key(&uaddr2) {\n147 | |             futex_table.insert(uaddr2, vec![]);\n148 | |         }\n    | |_________^ help: try: `futex_table.entry(uaddr2).or_insert_with(|| vec![]);`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_entry\n    = note: `#[warn(clippy::map_entry)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/elf.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (10/7)\n   --> kernel/src/tasks/elf.rs:108:1\n    |\n108 | / pub fn init_task_stack(\n109 | |     user_task: Arc<UserTask>,\n110 | |     args: Vec<String>,\n111 | |     base: usize,\n...   |\n118 | |     tls: usize,\n119 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/filetable.rs:78:6\n   |\n78 | impl<'a> FileItem {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual implementation of an assign operation\n   --> kernel/src/tasks/filetable.rs:210:13\n    |\n210 |             ptr = ptr + current_len;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `ptr += current_len`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n    = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:333:12\n    |\n333 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:349:12\n    |\n349 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:374:12\n    |\n374 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/tasks/filetable.rs:378:47\n    |\n378 |         WaitBlockingWrite(self.inner.clone(), &buffer, offset)\n    |                                               ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `hashbrown::hash_map::Values<'_, usize, alloc::sync::Weak<dyn executor::AsyncTask>>`\n  --> kernel/src/tasks/initproc.rs:59:5\n   |\n59 |     TASK_MAP.lock().values().into_iter().for_each(|task| {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `TASK_MAP.lock().values()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> kernel/src/tasks/initproc.rs:118:5\n    |\n118 |     return true;\n    |     ^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n118 -     return true;\n118 +     true\n    |\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:122:41\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                         ^^^ help: try using a `char` instead: `' '`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: comparison to empty slice\n   --> kernel/src/tasks/initproc.rs:122:57\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                                         ^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!x.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n    = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:125:47\n    |\n125 |     let filename = match filename.starts_with(\"/\") {\n    |                                               ^^^ help: try using a `char` instead: `'/'`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:184:19\n    |\n184 |             match c as u8 {\n    |                   ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary use of `to_string`\n   --> kernel/src/tasks/initproc.rs:187:40\n    |\n187 |                     let sign = command(&String::from_utf8_lossy(&buffer).to_string()).await;\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `String::from_utf8_lossy(&buffer).as_ref()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n    = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/initproc.rs:195:24\n    |\n195 |                     if buffer.len() > 0 {\n    |                        ^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:204:33\n    |\n204 |                     buffer.push(c as u8);\n    |                                 ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:205:43\n    |\n205 |                     DebugConsole::putchar(c as u8);\n    |                                           ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_none()` after searching an `Iterator` with `find`\n   --> kernel/src/tasks/initproc.rs:400:8\n    |\n400 |       if TASK_MAP\n    |  ________^\n401 | |         .lock()\n402 | |         .values()\n403 | |         .find(|x| {\n...   |\n407 | |         })\n408 | |         .is_none()\n    | |__________________^\n    |\n    = help: this is more succinctly expressed by calling `any()` with negation\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/memset.rs:32:6\n   |\n32 | impl<'a> MemSet {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/memset.rs:38:23\n   |\n38 |         self.0.iter().find(|x| x.overlapping(start, end)).is_some()\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| x.overlapping(start, end))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n   --> kernel/src/tasks/memset.rs:111:9\n    |\n109 | /         let res =\n110 | |             !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end));\n    | |____________________________________________________________________________________________________- unnecessary `let` binding\n111 |           res\n    |           ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n    = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n    |\n109 ~         \n110 ~         !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end))\n    |\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you seem to be trying to use `match` for an equality check. Consider using `if`\n   --> kernel/src/tasks/memset.rs:213:9\n    |\n213 | /         match &self.mtype {\n214 | |             MemType::ShareFile => {\n215 | |                 let start = self.start;\n216 | |                 let len = self.len;\n...   |\n232 | |             _ => {}\n233 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n    = note: `#[warn(clippy::single_match)]` on by default\nhelp: try\n    |\n213 ~         if self.mtype == MemType::ShareFile {\n214 +             let start = self.start;\n215 +             let len = self.len;\n216 +             let mapfile = self.file.clone().unwrap();\n217 +             for tracker in &self.mtrackers {\n218 +                 if Arc::strong_count(&tracker.tracker) > 1 {\n219 +                     continue;\n220 +                 }\n221 + \n222 +                 let offset = tracker.vpn.to_addr() - start;\n223 +                 let wlen = min(len - offset, PAGE_SIZE);\n224 + \n225 +                 let bytes = &mut tracker.tracker.0.get_buffer()[..wlen];\n226 +                 mapfile\n227 +                     .writeat(offset, bytes)\n228 +                     .expect(\"can't write data to file at drop\");\n229 +             }\n230 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/shm.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against true are unnecessary\n  --> kernel/src/tasks/shm.rs:30:49\n   |\n30 |         if Arc::strong_count(&self.mem) == 1 && *self.mem.deleted.lock() == true {\n   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `*self.mem.deleted.lock()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> kernel/src/tasks/task.rs:142:5\n    |\n142 | /     pub fn map_frames(\n143 | |         &self,\n144 | |         vpn: VirtPage,\n145 | |         mtype: MemType,\n...   |\n150 | |         len: usize,\n151 | |     ) -> Option<PhysPage> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `SigProcMask` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:361:22\n    |\n361 |             sigmask: parent_tcb.sigmask.clone(),\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `parent_tcb.sigmask`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n  --> kernel/src/tasks/mod.rs:57:20\n   |\n57 |                 if c >= 0x20 && c <= 0x7e {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^ help: use: `(0x20..=0x7e).contains(&c)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n   = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/tasks/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `TMS` contains a capitalized acronym\n   --> kernel/src/tasks/mod.rs:125:12\n    |\n125 | pub struct TMS {\n    |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Tms`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/user/signal.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `SigAction` which implements the `Copy` trait\n  --> kernel/src/user/signal.rs:28:25\n   |\n28 |         let sigaction = self.task.pcb.lock().sigaction[signal.num()].clone();\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.task.pcb.lock().sigaction[signal.num()]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/user/signal.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/user/signal.rs:65:22\n   |\n65 |         cx.store_ctx(&cx_ref);\n   |                      ^^^^^^^ help: change this to: `cx_ref`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `core::iter::Enumerate<alloc::collections::vec_deque::Drain<'_, u8>>`\n  --> kernel/src/user/socket_pair.rs:26:9\n   |\n26 | /         queue\n27 | |             .drain(..rlen)\n28 | |             .enumerate()\n29 | |             .into_iter()\n   | |________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\nhelp: consider removing `.into_iter()`\n   |\n26 ~         queue\n27 +             .drain(..rlen)\n28 +             .enumerate()\n   |\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "kernel/src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: matching on `Some` with `ok()` is redundant\n  --> kernel/src/main.rs:77:13\n   |\n77 |             if let Some(task) = current_task().downcast_arc::<UserTask>().ok() {\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_result_ok\n   = note: `#[warn(clippy::match_result_ok)]` on by default\nhelp: consider matching on `Ok(task)` and removing the call to `ok` instead\n   |\n77 |             if let Ok(task) = current_task().downcast_arc::<UserTask>() {\n   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: comparison to empty slice\n  --> kernel/build.rs:17:12\n   |\n17 |         if module == \"\" {\n   |            ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `module.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n   = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/build.rs:20:84\n   |\n20 |         module_file_content.push_str(&format!(\"extern crate {};\\n\", module.replace(\"-\", \"_\")))\n   |                                                                                    ^^^ help: try using a `char` instead: `'-'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/build.rs:29:16\n   |\n29 |         .split(\",\")\n   |                ^^^ help: try using a `char` instead: `','`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded sub `cfg` when there is only one condition\n   --> kernel/src/syscall/mod.rs:381:19\n    |\n381 |             #[cfg(any(target_arch = \"x86_64\"))]\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `target_arch = \"x86_64\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_minimal_cfg\n    = note: `#[warn(clippy::non_minimal_cfg)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits of hex, binary or octal literal not in groups of equal size\n   --> kernel/src/syscall/fd.rs:936:31\n    |\n936 |             stime + timeout * 0x1000_000\n    |                               ^^^^^^^^^^ help: consider: `0x0100_0000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n    = note: `#[warn(clippy::unusual_byte_groupings)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/shm.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this is a decimal constant\n  --> kernel/src/syscall/shm.rs:31:21\n   |\n31 |         if shmflg & 01000 > 0 {\n   |                     ^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_prefixed_literal\n   = note: `#[warn(clippy::zero_prefixed_literal)]` on by default\nhelp: if you mean to use a decimal constant, remove the `0` to avoid confusion\n   |\n31 |         if shmflg & 1000 > 0 {\n   |                     ~~~~\nhelp: if you mean to use an octal constant, use `0o`\n   |\n31 |         if shmflg & 0o1000 > 0 {\n   |                     ~~~~~~\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `else { if .. }` block can be collapsed\n   --> kernel/src/syscall/task.rs:726:24\n    |\n726 |                   } else {\n    |  ________________________^\n727 | |                     if let Some(index) = target_signal.real_time_index() {\n728 | |                         child_tcb.signal_queue[index] += 1;\n729 | |                     }\n730 | |                 }\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\n    = note: `#[warn(clippy::collapsible_else_if)]` on by default\nhelp: collapse nested if block\n    |\n726 ~                 } else if let Some(index) = target_signal.real_time_index() {\n727 +                     child_tcb.signal_queue[index] += 1;\n728 +                 }\n    |\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:757:36\n    |\n757 |             sec: stime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n    = note: `#[warn(clippy::inconsistent_digit_grouping)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:758:37\n    |\n758 |             usec: stime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:761:36\n    |\n761 |             sec: utime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:762:37\n    |\n762 |             usec: utime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constants have by default a `'static` lifetime\n   --> kernel/src/tasks/initproc.rs:213:27\n    |\n213 | pub const USER_WORK_DIR: &'static str = \"/\";\n    |                          -^^^^^^^---- help: consider removing `'static`: `&str`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n    = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:42:9\n   |\n42 | /         if events.contains(PollEvent::POLLOUT) {\n43 | |             if self.inner.lock().len() <= 0x50000 {\n44 | |                 res |= PollEvent::POLLOUT;\n45 | |             }\n46 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n   = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n   |\n42 ~         if events.contains(PollEvent::POLLOUT) && self.inner.lock().len() <= 0x50000 {\n43 +             res |= PollEvent::POLLOUT;\n44 +         }\n   |\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:47:9\n   |\n47 | /         if events.contains(PollEvent::POLLIN) {\n48 | |             if self.inner.lock().len() > 0 {\n49 | |                 res |= PollEvent::POLLIN;\n50 | |             }\n51 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n   |\n47 ~         if events.contains(PollEvent::POLLIN) && self.inner.lock().len() > 0 {\n48 +             res |= PollEvent::POLLIN;\n49 +         }\n   |\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/epoll/mod.rs:65:17\n   |\n65 | //                 self.data.lock().get_mut(&fd).map(|x| {\n66 | ||                     *x = ev;\n67 | ||                 });\n   | ||__________________^- help: try: `if let Some(x) = self.data.lock().get_mut(&fd) { *x = ev; }`\n   |  |__________________|\n   | \n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\n   = note: `#[warn(clippy::option_map_unit_fn)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ADD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:79:5\n   |\n79 |     ADD = 1,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Add`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DEL` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:80:5\n   |\n80 |     DEL = 2,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Del`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MOD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:81:5\n   |\n81 |     MOD = 3,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Mod`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `STEAM` contains a capitalized acronym\n  --> kernel/src/socket.rs:15:5\n   |\n15 |     STEAM,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Steam`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DGRAME` contains a capitalized acronym\n  --> kernel/src/socket.rs:16:5\n   |\n16 |     DGRAME,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dgrame`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RAW` contains a capitalized acronym\n  --> kernel/src/socket.rs:17:5\n   |\n17 |     RAW,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Raw`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/socket.rs:163:12\n    |\n163 |         if data.len() == 0 {\n    |            ^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `data.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/socket.rs:186:33\n    |\n186 |         match self.inner.sendto(&buffer, None) {\n    |                                 ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPERM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:21:5\n   |\n21 |     EPERM = 1,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eperm`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOENT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:23:5\n   |\n23 |     ENOENT = 2,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoent`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESRCH` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:25:5\n   |\n25 |     ESRCH = 3,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Esrch`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EINTR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:27:5\n   |\n27 |     EINTR = 4,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eintr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:29:5\n   |\n29 |     EIO = 5,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Eio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENXIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:31:5\n   |\n31 |     ENXIO = 6,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enxio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOEXEC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:35:5\n   |\n35 |     ENOEXEC = 8,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoexec`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBADF` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:37:5\n   |\n37 |     EBADF = 9,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebadf`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECHILD` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:39:5\n   |\n39 |     ECHILD = 10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Echild`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EAGAIN` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:41:5\n   |\n41 |     EAGAIN = 11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eagain`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOMEM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:43:5\n   |\n43 |     ENOMEM = 12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enomem`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EACCES` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:45:5\n   |\n45 |     EACCES = 13,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eacces`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFAULT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:47:5\n   |\n47 |     EFAULT = 14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efault`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTBLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:49:5\n   |\n49 |     ENOTBLK = 15,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotblk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBUSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:51:5\n   |\n51 |     EBUSY = 16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebusy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EEXIST` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:53:5\n   |\n53 |     EEXIST = 17,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eexist`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EXDEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:55:5\n   |\n55 |     EXDEV = 18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Exdev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENODEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:57:5\n   |\n57 |     ENODEV = 19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enodev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:59:5\n   |\n59 |     ENOTDIR = 20,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EISDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:61:5\n   |\n61 |     EISDIR = 21,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eisdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EINVAL` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:63:5\n   |\n63 |     EINVAL = 22,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Einval`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:65:5\n   |\n65 |     ENFILE = 23,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EMFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:67:5\n   |\n67 |     EMFILE = 24,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:69:5\n   |\n69 |     ENOTTY = 25,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXTBSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:71:5\n   |\n71 |     ETXTBSY = 26,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxtbsy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFBIG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:73:5\n   |\n73 |     EFBIG = 27,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efbig`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOSPC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:75:5\n   |\n75 |     ENOSPC = 28,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enospc`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:77:5\n   |\n77 |     ESPIPE = 29,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Espipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EROFS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:79:5\n   |\n79 |     EROFS = 30,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erofs`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EMLINK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:81:5\n   |\n81 |     EMLINK = 31,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emlink`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:83:5\n   |\n83 |     EPIPE = 32,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDOM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:85:5\n   |\n85 |     EDOM = 33,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Edom`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERANGE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:87:5\n   |\n87 |     ERANGE = 34,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erange`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDEADLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:89:5\n   |\n89 |     EDEADLK = 35,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edeadlk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENAMETOOLONG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:91:5\n   |\n91 |     ENAMETOOLONG = 36,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enametoolong`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOLCK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:93:5\n   |\n93 |     ENOLCK = 37,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enolck`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOSYS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:95:5\n   |\n95 |     ENOSYS = 38,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enosys`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTEMPTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:97:5\n   |\n97 |     ENOTEMPTY = 39,\n   |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotempty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EAFNOSUPPORT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:99:5\n   |\n99 |     EAFNOSUPPORT = 97,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eafnosupport`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTCONN` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:101:5\n    |\n101 |     ENOTCONN = 107,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotconn`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETIMEDOUT` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:103:5\n    |\n103 |     ETIMEDOUT = 100,\n    |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etimedout`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECONNREFUSED` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:105:5\n    |\n105 |     ECONNREFUSED = 111,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Econnrefused`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EALREADY` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:107:5\n    |\n107 |     EALREADY = 114,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ealready`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting integer literal to `isize` is unnecessary\n   --> kernel/src/syscall/consts.rs:422:27\n    |\n422 | pub const AT_CWD: usize = -100 as isize as usize;\n    |                           ^^^^^^^^^^^^^ help: try: `-100_isize`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:509:1\n    |\n509 | impl Into<MappingFlags> for MmapProt {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n    = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<syscall::consts::MmapProt>`\n    |\n509 ~ impl From<MmapProt> for MappingFlags {\n510 ~     fn from(val: MmapProt) -> Self {\n511 |         let mut res = MappingFlags::empty();\n512 ~         if val.contains(MmapProt::PROT_READ) {\n513 |             res |= MappingFlags::R;\n514 |         }\n515 ~         if val.contains(MmapProt::PROT_WRITE) {\n516 |             res |= MappingFlags::W;\n517 |         }\n518 ~         if val.contains(MmapProt::PROT_EXEC) {\n    |\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DUPFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:607:5\n    |\n607 |     DUPFD = 0,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:609:5\n    |\n609 |     GETFD = 1,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:611:5\n    |\n611 |     SETFD = 2,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:613:5\n    |\n613 |     GETFL = 3,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:615:5\n    |\n615 |     SETFL = 4,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:617:5\n    |\n617 |     GETLK = 5,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:619:5\n    |\n619 |     SETLK = 6,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETLKW` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:621:5\n    |\n621 |     SETLKW = 7,\n    |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlkw`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DUPFDCLOEXEC` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:623:5\n    |\n623 |     DUPFDCLOEXEC = 0x406,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfdcloexec`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:872:1\n    |\n872 | impl<T> Into<usize> for UserRef<T> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<syscall::consts::UserRef<T>>`\n    |\n872 ~ impl<T> From<UserRef<T>> for usize {\n873 ~     fn from(val: UserRef<T>) -> Self {\n874 ~         val.addr.addr()\n    |\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> kernel/src/syscall/fd.rs:26:8\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |        ^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!path.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/src/syscall/fd.rs:26:43\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |                                           ^^^ help: try using a `char` instead: `'/'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/fd.rs:298:50\n    |\n298 |         dentry_open(dir.dentry.clone().unwrap(), &path, OpenFlags::NONE)\n    |                                                  ^^^^^ help: change this to: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is only used to index `ts`\n   --> kernel/src/syscall/fd.rs:529:26\n    |\n529 |                 for i in 0..2 {\n    |                          ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n529 |                 for <item> in ts.iter().take(2) {\n    |                     ~~~~~~    ~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is only used to index `poll_fds`\n   --> kernel/src/syscall/fd.rs:667:22\n    |\n667 |             for i in 0..nfds {\n    |                      ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n667 |             for <item> in poll_fds.iter_mut().take(nfds) {\n    |                 ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `writeat` doesn't need a mutable reference\n   --> kernel/src/syscall/fd.rs:995:46\n    |\n995 |                 .writeat(*off_out.get_ref(), &mut buffer[..rsize])\n    |                                              ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this loop could be written as a `while let` loop\n   --> kernel/src/syscall/socket.rs:237:9\n    |\n237 | /         loop {\n238 | |             match socket.inner.clone().connect(remote) {\n239 | |                 Err(NetServerError::Blocking) => {}\n240 | |                 _ => break,\n241 | |             }\n242 | |             yield_now().await;\n243 | |         }\n    | |_________^ help: try: `while let Err(NetServerError::Blocking) = socket.inner.clone().connect(remote) { .. }`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#while_let_loop\n    = note: `#[warn(clippy::while_let_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `Ipv4Addr` which implements the `Copy` trait\n   --> kernel/src/syscall/socket.rs:488:27\n    |\n488 |                 sa.addr = new_socket.get_remote().unwrap().ip().clone();\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*new_socket.get_remote().unwrap().ip()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n    = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/syscall/task.rs:68:45\n   |\n68 |     if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n   |                                             ^^^^^^^ help: change this to: `buffer`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant closure\n   --> kernel/src/syscall/task.rs:126:26\n    |\n126 |                     .map(|x| Arc::new(x))\n    |                          ^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Arc::new`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n    = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `alloc::string::String`\n   --> kernel/src/syscall/task.rs:192:16\n    |\n192 |     let path = String::from(path);\n    |                ^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/task.rs:243:59\n    |\n243 |         let elf = if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n    |                                                           ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: parameter is only used in recursion\n   --> kernel/src/syscall/task.rs:189:5\n    |\n189 |     envp: Vec<String>,\n    |     ^^^^ help: if this is intentional, prefix it with an underscore: `_envp`\n    |\nnote: parameter used here\n   --> kernel/src/syscall/task.rs:248:79\n    |\n248 |             return exec_with_process(task, String::from(\"busybox\"), new_args, envp).await;\n    |                                                                               ^^^^\n...\n271 |                 return exec_with_process(task, new_args[0].clone(), new_args, envp).await;\n    |                                                                               ^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\n    = note: `#[warn(clippy::only_used_in_recursion)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:405:14\n    |\n405 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n    = note: `#[warn(clippy::into_iter_on_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:411:14\n    |\n411 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `.then_some(..).unwrap_or(..)` can be written more clearly with `if .. else ..`\n   --> kernel/src/syscall/task.rs:460:31\n    |\n460 |           let clear_child_tid = flags\n    |  _______________________________^\n461 | |             .contains(CloneFlags::CLONE_CHILD_CLEARTID)\n462 | |             .then_some(ctid)\n463 | |             .unwrap_or(UserRef::from(0));\n    | |________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#obfuscated_if_else\n    = note: `#[warn(clippy::obfuscated_if_else)]` on by default\nhelp: try\n    |\n460 ~         let clear_child_tid = if flags\n461 ~             .contains(CloneFlags::CLONE_CHILD_CLEARTID) { ctid } else { UserRef::from(0) };\n    |\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:513:21\n    |\n513 | /                     inner\n514 | |                         .children\n515 | |                         .iter()\n516 | |                         .find(|x| x.task_id == pid as usize)\n517 | |                         .map(|x| x.clone())\n    | |___________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\n    = note: `#[warn(clippy::map_clone)]` on by default\nhelp: consider calling the dedicated `cloned` method\n    |\n513 ~                     inner\n514 +                         .children\n515 +                         .iter()\n516 +                         .find(|x| x.task_id == pid as usize).cloned()\n    |\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `.iter().count()` on a `Vec`\n   --> kernel/src/syscall/task.rs:524:17\n    |\n524 |                 self.task.pcb.lock().children.iter().count()\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.task.pcb.lock().children.len()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#iter_count\n    = note: `#[warn(clippy::iter_count)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map_or(None, ..)` on an `Option` value. This can be done more directly by calling `and_then(..)` instead\n   --> kernel/src/syscall/task.rs:554:24\n    |\n554 |             let exit = child_task.clone().map_or(None, |x| x.exit_code());\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using `and_then` instead: `child_task.clone().and_then(|x| x.exit_code())`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_or_none\n    = note: `#[warn(clippy::option_map_or_none)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> kernel/src/syscall/task.rs:698:17\n    |\n698 |                 return Err(LinuxError::EPERM);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n698 -                 return Err(LinuxError::EPERM);\n698 +                 Err(LinuxError::EPERM)\n    |\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:706:13\n    |\n706 | /             x.threads\n707 | |                 .iter()\n708 | |                 .find(|x| match x.upgrade() {\n709 | |                     Some(thread) => thread.task_id == tid,\n710 | |                     None => false,\n711 | |                 })\n712 | |                 .map(|x| x.clone())\n    | |___________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\nhelp: consider calling the dedicated `cloned` method\n    |\n706 ~             x.threads\n707 +                 .iter()\n708 +                 .find(|x| match x.upgrade() {\n709 +                     Some(thread) => thread.task_id == tid,\n710 +                     None => false,\n711 +                 }).cloned()\n    |\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/syscall/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `usize`\n   --> kernel/src/syscall/mod.rs:255:21\n    |\n255 |                     args[5].into(),\n    |                     ^^^^^^^^^^^^^^ help: consider removing `.into()`: `args[5]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/async_ops.rs:67:10\n   |\n67 |           .find(|x| x.contains(&task_id))\n   |  __________^\n68 | |         .is_some()\n   | |__________________^ help: use `any()` instead: `any(|x| x.contains(&task_id))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n   = note: `#[warn(clippy::search_is_some)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/tasks/async_ops.rs:81:21\n   |\n81 | /                     self.0\n82 | |                         .lock()\n83 | |                         .values_mut()\n84 | |                         .find(|x| x.contains(&self.1))\n85 | |                         .map(|x| x.retain(|x| *x != self.1));\n   | |____________________________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\nhelp: try\n   |\n81 ~                     if let Some(x) = self.0\n82 +                         .lock()\n83 +                         .values_mut()\n84 +                         .find(|x| x.contains(&self.1)) { x.retain(|x| *x != self.1) }\n   |\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:121:41\n    |\n121 |             .map(|x| x.drain(..cmp::min(wake_count as usize, que_size)));\n    |                                         ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:138:28\n    |\n138 |         .map(|x| x.drain(..wake_count as usize).count())\n    |                            ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:143:28\n    |\n143 |         .map(|x| x.drain(..reque_count as usize).collect());\n    |                            ^^^^^^^^^^^^^^^^^^^^ help: try: `reque_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: usage of `contains_key` followed by `insert` on a `BTreeMap`\n   --> kernel/src/tasks/async_ops.rs:146:9\n    |\n146 | /         if !futex_table.contains_key(&uaddr2) {\n147 | |             futex_table.insert(uaddr2, vec![]);\n148 | |         }\n    | |_________^ help: try: `futex_table.entry(uaddr2).or_insert_with(|| vec![]);`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_entry\n    = note: `#[warn(clippy::map_entry)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/elf.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (10/7)\n   --> kernel/src/tasks/elf.rs:108:1\n    |\n108 | / pub fn init_task_stack(\n109 | |     user_task: Arc<UserTask>,\n110 | |     args: Vec<String>,\n111 | |     base: usize,\n...   |\n118 | |     tls: usize,\n119 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/filetable.rs:78:6\n   |\n78 | impl<'a> FileItem {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual implementation of an assign operation\n   --> kernel/src/tasks/filetable.rs:210:13\n    |\n210 |             ptr = ptr + current_len;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `ptr += current_len`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n    = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:333:12\n    |\n333 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:349:12\n    |\n349 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:374:12\n    |\n374 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/tasks/filetable.rs:378:47\n    |\n378 |         WaitBlockingWrite(self.inner.clone(), &buffer, offset)\n    |                                               ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `hashbrown::hash_map::Values<'_, usize, alloc::sync::Weak<dyn executor::AsyncTask>>`\n  --> kernel/src/tasks/initproc.rs:59:5\n   |\n59 |     TASK_MAP.lock().values().into_iter().for_each(|task| {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `TASK_MAP.lock().values()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> kernel/src/tasks/initproc.rs:118:5\n    |\n118 |     return true;\n    |     ^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n118 -     return true;\n118 +     true\n    |\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:122:41\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                         ^^^ help: try using a `char` instead: `' '`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: comparison to empty slice\n   --> kernel/src/tasks/initproc.rs:122:57\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                                         ^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!x.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n    = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:125:47\n    |\n125 |     let filename = match filename.starts_with(\"/\") {\n    |                                               ^^^ help: try using a `char` instead: `'/'`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:184:19\n    |\n184 |             match c as u8 {\n    |                   ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary use of `to_string`\n   --> kernel/src/tasks/initproc.rs:187:40\n    |\n187 |                     let sign = command(&String::from_utf8_lossy(&buffer).to_string()).await;\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `String::from_utf8_lossy(&buffer).as_ref()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n    = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/initproc.rs:195:24\n    |\n195 |                     if buffer.len() > 0 {\n    |                        ^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:204:33\n    |\n204 |                     buffer.push(c as u8);\n    |                                 ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:205:43\n    |\n205 |                     DebugConsole::putchar(c as u8);\n    |                                           ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_none()` after searching an `Iterator` with `find`\n   --> kernel/src/tasks/initproc.rs:400:8\n    |\n400 |       if TASK_MAP\n    |  ________^\n401 | |         .lock()\n402 | |         .values()\n403 | |         .find(|x| {\n...   |\n407 | |         })\n408 | |         .is_none()\n    | |__________________^\n    |\n    = help: this is more succinctly expressed by calling `any()` with negation\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/memset.rs:32:6\n   |\n32 | impl<'a> MemSet {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/memset.rs:38:23\n   |\n38 |         self.0.iter().find(|x| x.overlapping(start, end)).is_some()\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| x.overlapping(start, end))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n   --> kernel/src/tasks/memset.rs:111:9\n    |\n109 | /         let res =\n110 | |             !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end));\n    | |____________________________________________________________________________________________________- unnecessary `let` binding\n111 |           res\n    |           ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n    = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n    |\n109 ~         \n110 ~         !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end))\n    |\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you seem to be trying to use `match` for an equality check. Consider using `if`\n   --> kernel/src/tasks/memset.rs:213:9\n    |\n213 | /         match &self.mtype {\n214 | |             MemType::ShareFile => {\n215 | |                 let start = self.start;\n216 | |                 let len = self.len;\n...   |\n232 | |             _ => {}\n233 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n    = note: `#[warn(clippy::single_match)]` on by default\nhelp: try\n    |\n213 ~         if self.mtype == MemType::ShareFile {\n214 +             let start = self.start;\n215 +             let len = self.len;\n216 +             let mapfile = self.file.clone().unwrap();\n217 +             for tracker in &self.mtrackers {\n218 +                 if Arc::strong_count(&tracker.tracker) > 1 {\n219 +                     continue;\n220 +                 }\n221 + \n222 +                 let offset = tracker.vpn.to_addr() - start;\n223 +                 let wlen = min(len - offset, PAGE_SIZE);\n224 + \n225 +                 let bytes = &mut tracker.tracker.0.get_buffer()[..wlen];\n226 +                 mapfile\n227 +                     .writeat(offset, bytes)\n228 +                     .expect(\"can't write data to file at drop\");\n229 +             }\n230 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/shm.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against true are unnecessary\n  --> kernel/src/tasks/shm.rs:30:49\n   |\n30 |         if Arc::strong_count(&self.mem) == 1 && *self.mem.deleted.lock() == true {\n   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `*self.mem.deleted.lock()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> kernel/src/tasks/task.rs:142:5\n    |\n142 | /     pub fn map_frames(\n143 | |         &self,\n144 | |         vpn: VirtPage,\n145 | |         mtype: MemType,\n...   |\n150 | |         len: usize,\n151 | |     ) -> Option<PhysPage> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `TrapFrame` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:320:29\n    |\n320 |         new_tcb_writer.cx = self.tcb.read().cx.clone();\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.tcb.read().cx`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `TrapFrame` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:360:17\n    |\n360 |             cx: parent_tcb.cx.clone(),\n    |                 ^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `parent_tcb.cx`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `SigProcMask` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:361:22\n    |\n361 |             sigmask: parent_tcb.sigmask.clone(),\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `parent_tcb.sigmask`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n  --> kernel/src/tasks/mod.rs:57:20\n   |\n57 |                 if c >= 0x20 && c <= 0x7e {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^ help: use: `(0x20..=0x7e).contains(&c)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n   = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/tasks/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `TMS` contains a capitalized acronym\n   --> kernel/src/tasks/mod.rs:125:12\n    |\n125 | pub struct TMS {\n    |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Tms`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/user/signal.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `SigAction` which implements the `Copy` trait\n  --> kernel/src/user/signal.rs:28:25\n   |\n28 |         let sigaction = self.task.pcb.lock().sigaction[signal.num()].clone();\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.task.pcb.lock().sigaction[signal.num()]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/user/signal.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `TrapFrame` which implements the `Copy` trait\n  --> kernel/src/user/signal.rs:57:24\n   |\n57 |         let store_cx = cx_ref.clone();\n   |                        ^^^^^^^^^^^^^^ help: try dereferencing it: `*cx_ref`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/user/signal.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/user/signal.rs:65:22\n   |\n65 |         cx.store_ctx(&cx_ref);\n   |                      ^^^^^^^ help: change this to: `cx_ref`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `core::iter::Enumerate<alloc::collections::vec_deque::Drain<'_, u8>>`\n  --> kernel/src/user/socket_pair.rs:26:9\n   |\n26 | /         queue\n27 | |             .drain(..rlen)\n28 | |             .enumerate()\n29 | |             .into_iter()\n   | |________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\nhelp: consider removing `.into_iter()`\n   |\n26 ~         queue\n27 +             .drain(..rlen)\n28 +             .enumerate()\n   |\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "kernel/src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: matching on `Some` with `ok()` is redundant\n  --> kernel/src/main.rs:77:13\n   |\n77 |             if let Some(task) = current_task().downcast_arc::<UserTask>().ok() {\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_result_ok\n   = note: `#[warn(clippy::match_result_ok)]` on by default\nhelp: consider matching on `Ok(task)` and removing the call to `ok` instead\n   |\n77 |             if let Ok(task) = current_task().downcast_arc::<UserTask>() {\n   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: comparison to empty slice\n  --> kernel/build.rs:17:12\n   |\n17 |         if module == \"\" {\n   |            ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `module.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n   = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/build.rs:20:84\n   |\n20 |         module_file_content.push_str(&format!(\"extern crate {};\\n\", module.replace(\"-\", \"_\")))\n   |                                                                                    ^^^ help: try using a `char` instead: `'-'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/build.rs:29:16\n   |\n29 |         .split(\",\")\n   |                ^^^ help: try using a `char` instead: `','`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded sub `cfg` when there is only one condition\n   --> kernel/src/syscall/mod.rs:381:19\n    |\n381 |             #[cfg(any(target_arch = \"x86_64\"))]\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `target_arch = \"x86_64\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_minimal_cfg\n    = note: `#[warn(clippy::non_minimal_cfg)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits of hex, binary or octal literal not in groups of equal size\n   --> kernel/src/syscall/fd.rs:936:31\n    |\n936 |             stime + timeout * 0x1000_000\n    |                               ^^^^^^^^^^ help: consider: `0x0100_0000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n    = note: `#[warn(clippy::unusual_byte_groupings)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/shm.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this is a decimal constant\n  --> kernel/src/syscall/shm.rs:31:21\n   |\n31 |         if shmflg & 01000 > 0 {\n   |                     ^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_prefixed_literal\n   = note: `#[warn(clippy::zero_prefixed_literal)]` on by default\nhelp: if you mean to use a decimal constant, remove the `0` to avoid confusion\n   |\n31 |         if shmflg & 1000 > 0 {\n   |                     ~~~~\nhelp: if you mean to use an octal constant, use `0o`\n   |\n31 |         if shmflg & 0o1000 > 0 {\n   |                     ~~~~~~\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `else { if .. }` block can be collapsed\n   --> kernel/src/syscall/task.rs:726:24\n    |\n726 |                   } else {\n    |  ________________________^\n727 | |                     if let Some(index) = target_signal.real_time_index() {\n728 | |                         child_tcb.signal_queue[index] += 1;\n729 | |                     }\n730 | |                 }\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\n    = note: `#[warn(clippy::collapsible_else_if)]` on by default\nhelp: collapse nested if block\n    |\n726 ~                 } else if let Some(index) = target_signal.real_time_index() {\n727 +                     child_tcb.signal_queue[index] += 1;\n728 +                 }\n    |\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:757:36\n    |\n757 |             sec: stime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n    = note: `#[warn(clippy::inconsistent_digit_grouping)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:758:37\n    |\n758 |             usec: stime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:761:36\n    |\n761 |             sec: utime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:762:37\n    |\n762 |             usec: utime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constants have by default a `'static` lifetime\n   --> kernel/src/tasks/initproc.rs:213:27\n    |\n213 | pub const USER_WORK_DIR: &'static str = \"/\";\n    |                          -^^^^^^^---- help: consider removing `'static`: `&str`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n    = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:42:9\n   |\n42 | /         if events.contains(PollEvent::POLLOUT) {\n43 | |             if self.inner.lock().len() <= 0x50000 {\n44 | |                 res |= PollEvent::POLLOUT;\n45 | |             }\n46 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n   = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n   |\n42 ~         if events.contains(PollEvent::POLLOUT) && self.inner.lock().len() <= 0x50000 {\n43 +             res |= PollEvent::POLLOUT;\n44 +         }\n   |\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:47:9\n   |\n47 | /         if events.contains(PollEvent::POLLIN) {\n48 | |             if self.inner.lock().len() > 0 {\n49 | |                 res |= PollEvent::POLLIN;\n50 | |             }\n51 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n   |\n47 ~         if events.contains(PollEvent::POLLIN) && self.inner.lock().len() > 0 {\n48 +             res |= PollEvent::POLLIN;\n49 +         }\n   |\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/epoll/mod.rs:65:17\n   |\n65 | //                 self.data.lock().get_mut(&fd).map(|x| {\n66 | ||                     *x = ev;\n67 | ||                 });\n   | ||__________________^- help: try: `if let Some(x) = self.data.lock().get_mut(&fd) { *x = ev; }`\n   |  |__________________|\n   | \n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\n   = note: `#[warn(clippy::option_map_unit_fn)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ADD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:79:5\n   |\n79 |     ADD = 1,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Add`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DEL` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:80:5\n   |\n80 |     DEL = 2,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Del`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MOD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:81:5\n   |\n81 |     MOD = 3,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Mod`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `STEAM` contains a capitalized acronym\n  --> kernel/src/socket.rs:15:5\n   |\n15 |     STEAM,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Steam`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DGRAME` contains a capitalized acronym\n  --> kernel/src/socket.rs:16:5\n   |\n16 |     DGRAME,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dgrame`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RAW` contains a capitalized acronym\n  --> kernel/src/socket.rs:17:5\n   |\n17 |     RAW,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Raw`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/socket.rs:163:12\n    |\n163 |         if data.len() == 0 {\n    |            ^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `data.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/socket.rs:186:33\n    |\n186 |         match self.inner.sendto(&buffer, None) {\n    |                                 ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPERM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:21:5\n   |\n21 |     EPERM = 1,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eperm`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOENT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:23:5\n   |\n23 |     ENOENT = 2,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoent`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESRCH` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:25:5\n   |\n25 |     ESRCH = 3,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Esrch`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EINTR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:27:5\n   |\n27 |     EINTR = 4,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eintr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:29:5\n   |\n29 |     EIO = 5,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Eio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENXIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:31:5\n   |\n31 |     ENXIO = 6,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enxio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOEXEC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:35:5\n   |\n35 |     ENOEXEC = 8,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoexec`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBADF` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:37:5\n   |\n37 |     EBADF = 9,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebadf`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECHILD` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:39:5\n   |\n39 |     ECHILD = 10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Echild`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EAGAIN` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:41:5\n   |\n41 |     EAGAIN = 11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eagain`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOMEM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:43:5\n   |\n43 |     ENOMEM = 12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enomem`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EACCES` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:45:5\n   |\n45 |     EACCES = 13,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eacces`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFAULT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:47:5\n   |\n47 |     EFAULT = 14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efault`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTBLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:49:5\n   |\n49 |     ENOTBLK = 15,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotblk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBUSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:51:5\n   |\n51 |     EBUSY = 16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebusy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EEXIST` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:53:5\n   |\n53 |     EEXIST = 17,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eexist`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EXDEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:55:5\n   |\n55 |     EXDEV = 18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Exdev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENODEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:57:5\n   |\n57 |     ENODEV = 19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enodev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:59:5\n   |\n59 |     ENOTDIR = 20,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EISDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:61:5\n   |\n61 |     EISDIR = 21,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eisdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EINVAL` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:63:5\n   |\n63 |     EINVAL = 22,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Einval`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:65:5\n   |\n65 |     ENFILE = 23,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EMFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:67:5\n   |\n67 |     EMFILE = 24,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:69:5\n   |\n69 |     ENOTTY = 25,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXTBSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:71:5\n   |\n71 |     ETXTBSY = 26,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxtbsy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFBIG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:73:5\n   |\n73 |     EFBIG = 27,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efbig`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOSPC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:75:5\n   |\n75 |     ENOSPC = 28,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enospc`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:77:5\n   |\n77 |     ESPIPE = 29,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Espipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EROFS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:79:5\n   |\n79 |     EROFS = 30,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erofs`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EMLINK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:81:5\n   |\n81 |     EMLINK = 31,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emlink`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:83:5\n   |\n83 |     EPIPE = 32,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDOM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:85:5\n   |\n85 |     EDOM = 33,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Edom`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERANGE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:87:5\n   |\n87 |     ERANGE = 34,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erange`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDEADLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:89:5\n   |\n89 |     EDEADLK = 35,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edeadlk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENAMETOOLONG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:91:5\n   |\n91 |     ENAMETOOLONG = 36,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enametoolong`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOLCK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:93:5\n   |\n93 |     ENOLCK = 37,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enolck`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOSYS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:95:5\n   |\n95 |     ENOSYS = 38,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enosys`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTEMPTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:97:5\n   |\n97 |     ENOTEMPTY = 39,\n   |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotempty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EAFNOSUPPORT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:99:5\n   |\n99 |     EAFNOSUPPORT = 97,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eafnosupport`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTCONN` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:101:5\n    |\n101 |     ENOTCONN = 107,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotconn`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETIMEDOUT` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:103:5\n    |\n103 |     ETIMEDOUT = 100,\n    |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etimedout`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECONNREFUSED` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:105:5\n    |\n105 |     ECONNREFUSED = 111,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Econnrefused`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EALREADY` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:107:5\n    |\n107 |     EALREADY = 114,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ealready`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting integer literal to `isize` is unnecessary\n   --> kernel/src/syscall/consts.rs:422:27\n    |\n422 | pub const AT_CWD: usize = -100 as isize as usize;\n    |                           ^^^^^^^^^^^^^ help: try: `-100_isize`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:509:1\n    |\n509 | impl Into<MappingFlags> for MmapProt {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n    = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<syscall::consts::MmapProt>`\n    |\n509 ~ impl From<MmapProt> for MappingFlags {\n510 ~     fn from(val: MmapProt) -> Self {\n511 |         let mut res = MappingFlags::empty();\n512 ~         if val.contains(MmapProt::PROT_READ) {\n513 |             res |= MappingFlags::R;\n514 |         }\n515 ~         if val.contains(MmapProt::PROT_WRITE) {\n516 |             res |= MappingFlags::W;\n517 |         }\n518 ~         if val.contains(MmapProt::PROT_EXEC) {\n    |\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DUPFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:607:5\n    |\n607 |     DUPFD = 0,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:609:5\n    |\n609 |     GETFD = 1,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:611:5\n    |\n611 |     SETFD = 2,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:613:5\n    |\n613 |     GETFL = 3,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:615:5\n    |\n615 |     SETFL = 4,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:617:5\n    |\n617 |     GETLK = 5,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:619:5\n    |\n619 |     SETLK = 6,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETLKW` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:621:5\n    |\n621 |     SETLKW = 7,\n    |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlkw`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DUPFDCLOEXEC` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:623:5\n    |\n623 |     DUPFDCLOEXEC = 0x406,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfdcloexec`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:872:1\n    |\n872 | impl<T> Into<usize> for UserRef<T> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<syscall::consts::UserRef<T>>`\n    |\n872 ~ impl<T> From<UserRef<T>> for usize {\n873 ~     fn from(val: UserRef<T>) -> Self {\n874 ~         val.addr.addr()\n    |\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> kernel/src/syscall/fd.rs:26:8\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |        ^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!path.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/src/syscall/fd.rs:26:43\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |                                           ^^^ help: try using a `char` instead: `'/'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/fd.rs:298:50\n    |\n298 |         dentry_open(dir.dentry.clone().unwrap(), &path, OpenFlags::NONE)\n    |                                                  ^^^^^ help: change this to: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is only used to index `ts`\n   --> kernel/src/syscall/fd.rs:529:26\n    |\n529 |                 for i in 0..2 {\n    |                          ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n529 |                 for <item> in ts.iter().take(2) {\n    |                     ~~~~~~    ~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is only used to index `poll_fds`\n   --> kernel/src/syscall/fd.rs:667:22\n    |\n667 |             for i in 0..nfds {\n    |                      ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n667 |             for <item> in poll_fds.iter_mut().take(nfds) {\n    |                 ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `writeat` doesn't need a mutable reference\n   --> kernel/src/syscall/fd.rs:995:46\n    |\n995 |                 .writeat(*off_out.get_ref(), &mut buffer[..rsize])\n    |                                              ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this loop could be written as a `while let` loop\n   --> kernel/src/syscall/socket.rs:237:9\n    |\n237 | /         loop {\n238 | |             match socket.inner.clone().connect(remote) {\n239 | |                 Err(NetServerError::Blocking) => {}\n240 | |                 _ => break,\n241 | |             }\n242 | |             yield_now().await;\n243 | |         }\n    | |_________^ help: try: `while let Err(NetServerError::Blocking) = socket.inner.clone().connect(remote) { .. }`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#while_let_loop\n    = note: `#[warn(clippy::while_let_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `Ipv4Addr` which implements the `Copy` trait\n   --> kernel/src/syscall/socket.rs:488:27\n    |\n488 |                 sa.addr = new_socket.get_remote().unwrap().ip().clone();\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*new_socket.get_remote().unwrap().ip()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n    = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/syscall/task.rs:68:45\n   |\n68 |     if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n   |                                             ^^^^^^^ help: change this to: `buffer`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant closure\n   --> kernel/src/syscall/task.rs:126:26\n    |\n126 |                     .map(|x| Arc::new(x))\n    |                          ^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Arc::new`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n    = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `alloc::string::String`\n   --> kernel/src/syscall/task.rs:192:16\n    |\n192 |     let path = String::from(path);\n    |                ^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/task.rs:243:59\n    |\n243 |         let elf = if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n    |                                                           ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: parameter is only used in recursion\n   --> kernel/src/syscall/task.rs:189:5\n    |\n189 |     envp: Vec<String>,\n    |     ^^^^ help: if this is intentional, prefix it with an underscore: `_envp`\n    |\nnote: parameter used here\n   --> kernel/src/syscall/task.rs:248:79\n    |\n248 |             return exec_with_process(task, String::from(\"busybox\"), new_args, envp).await;\n    |                                                                               ^^^^\n...\n271 |                 return exec_with_process(task, new_args[0].clone(), new_args, envp).await;\n    |                                                                               ^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\n    = note: `#[warn(clippy::only_used_in_recursion)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:405:14\n    |\n405 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n    = note: `#[warn(clippy::into_iter_on_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:411:14\n    |\n411 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `.then_some(..).unwrap_or(..)` can be written more clearly with `if .. else ..`\n   --> kernel/src/syscall/task.rs:460:31\n    |\n460 |           let clear_child_tid = flags\n    |  _______________________________^\n461 | |             .contains(CloneFlags::CLONE_CHILD_CLEARTID)\n462 | |             .then_some(ctid)\n463 | |             .unwrap_or(UserRef::from(0));\n    | |________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#obfuscated_if_else\n    = note: `#[warn(clippy::obfuscated_if_else)]` on by default\nhelp: try\n    |\n460 ~         let clear_child_tid = if flags\n461 ~             .contains(CloneFlags::CLONE_CHILD_CLEARTID) { ctid } else { UserRef::from(0) };\n    |\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:513:21\n    |\n513 | /                     inner\n514 | |                         .children\n515 | |                         .iter()\n516 | |                         .find(|x| x.task_id == pid as usize)\n517 | |                         .map(|x| x.clone())\n    | |___________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\n    = note: `#[warn(clippy::map_clone)]` on by default\nhelp: consider calling the dedicated `cloned` method\n    |\n513 ~                     inner\n514 +                         .children\n515 +                         .iter()\n516 +                         .find(|x| x.task_id == pid as usize).cloned()\n    |\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `.iter().count()` on a `Vec`\n   --> kernel/src/syscall/task.rs:524:17\n    |\n524 |                 self.task.pcb.lock().children.iter().count()\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.task.pcb.lock().children.len()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#iter_count\n    = note: `#[warn(clippy::iter_count)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map_or(None, ..)` on an `Option` value. This can be done more directly by calling `and_then(..)` instead\n   --> kernel/src/syscall/task.rs:554:24\n    |\n554 |             let exit = child_task.clone().map_or(None, |x| x.exit_code());\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using `and_then` instead: `child_task.clone().and_then(|x| x.exit_code())`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_or_none\n    = note: `#[warn(clippy::option_map_or_none)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> kernel/src/syscall/task.rs:698:17\n    |\n698 |                 return Err(LinuxError::EPERM);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n698 -                 return Err(LinuxError::EPERM);\n698 +                 Err(LinuxError::EPERM)\n    |\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:706:13\n    |\n706 | /             x.threads\n707 | |                 .iter()\n708 | |                 .find(|x| match x.upgrade() {\n709 | |                     Some(thread) => thread.task_id == tid,\n710 | |                     None => false,\n711 | |                 })\n712 | |                 .map(|x| x.clone())\n    | |___________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\nhelp: consider calling the dedicated `cloned` method\n    |\n706 ~             x.threads\n707 +                 .iter()\n708 +                 .find(|x| match x.upgrade() {\n709 +                     Some(thread) => thread.task_id == tid,\n710 +                     None => false,\n711 +                 }).cloned()\n    |\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/syscall/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `usize`\n   --> kernel/src/syscall/mod.rs:255:21\n    |\n255 |                     args[5].into(),\n    |                     ^^^^^^^^^^^^^^ help: consider removing `.into()`: `args[5]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/async_ops.rs:67:10\n   |\n67 |           .find(|x| x.contains(&task_id))\n   |  __________^\n68 | |         .is_some()\n   | |__________________^ help: use `any()` instead: `any(|x| x.contains(&task_id))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n   = note: `#[warn(clippy::search_is_some)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/tasks/async_ops.rs:81:21\n   |\n81 | /                     self.0\n82 | |                         .lock()\n83 | |                         .values_mut()\n84 | |                         .find(|x| x.contains(&self.1))\n85 | |                         .map(|x| x.retain(|x| *x != self.1));\n   | |____________________________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\nhelp: try\n   |\n81 ~                     if let Some(x) = self.0\n82 +                         .lock()\n83 +                         .values_mut()\n84 +                         .find(|x| x.contains(&self.1)) { x.retain(|x| *x != self.1) }\n   |\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:121:41\n    |\n121 |             .map(|x| x.drain(..cmp::min(wake_count as usize, que_size)));\n    |                                         ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:138:28\n    |\n138 |         .map(|x| x.drain(..wake_count as usize).count())\n    |                            ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:143:28\n    |\n143 |         .map(|x| x.drain(..reque_count as usize).collect());\n    |                            ^^^^^^^^^^^^^^^^^^^^ help: try: `reque_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: usage of `contains_key` followed by `insert` on a `BTreeMap`\n   --> kernel/src/tasks/async_ops.rs:146:9\n    |\n146 | /         if !futex_table.contains_key(&uaddr2) {\n147 | |             futex_table.insert(uaddr2, vec![]);\n148 | |         }\n    | |_________^ help: try: `futex_table.entry(uaddr2).or_insert_with(|| vec![]);`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_entry\n    = note: `#[warn(clippy::map_entry)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/elf.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (10/7)\n   --> kernel/src/tasks/elf.rs:108:1\n    |\n108 | / pub fn init_task_stack(\n109 | |     user_task: Arc<UserTask>,\n110 | |     args: Vec<String>,\n111 | |     base: usize,\n...   |\n118 | |     tls: usize,\n119 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/filetable.rs:78:6\n   |\n78 | impl<'a> FileItem {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual implementation of an assign operation\n   --> kernel/src/tasks/filetable.rs:210:13\n    |\n210 |             ptr = ptr + current_len;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `ptr += current_len`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n    = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:333:12\n    |\n333 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:349:12\n    |\n349 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:374:12\n    |\n374 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/tasks/filetable.rs:378:47\n    |\n378 |         WaitBlockingWrite(self.inner.clone(), &buffer, offset)\n    |                                               ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `hashbrown::hash_map::Values<'_, usize, alloc::sync::Weak<dyn executor::AsyncTask>>`\n  --> kernel/src/tasks/initproc.rs:59:5\n   |\n59 |     TASK_MAP.lock().values().into_iter().for_each(|task| {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `TASK_MAP.lock().values()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> kernel/src/tasks/initproc.rs:118:5\n    |\n118 |     return true;\n    |     ^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n118 -     return true;\n118 +     true\n    |\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:122:41\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                         ^^^ help: try using a `char` instead: `' '`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: comparison to empty slice\n   --> kernel/src/tasks/initproc.rs:122:57\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                                         ^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!x.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n    = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:125:47\n    |\n125 |     let filename = match filename.starts_with(\"/\") {\n    |                                               ^^^ help: try using a `char` instead: `'/'`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:184:19\n    |\n184 |             match c as u8 {\n    |                   ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary use of `to_string`\n   --> kernel/src/tasks/initproc.rs:187:40\n    |\n187 |                     let sign = command(&String::from_utf8_lossy(&buffer).to_string()).await;\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `String::from_utf8_lossy(&buffer).as_ref()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n    = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/initproc.rs:195:24\n    |\n195 |                     if buffer.len() > 0 {\n    |                        ^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:204:33\n    |\n204 |                     buffer.push(c as u8);\n    |                                 ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:205:43\n    |\n205 |                     DebugConsole::putchar(c as u8);\n    |                                           ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_none()` after searching an `Iterator` with `find`\n   --> kernel/src/tasks/initproc.rs:400:8\n    |\n400 |       if TASK_MAP\n    |  ________^\n401 | |         .lock()\n402 | |         .values()\n403 | |         .find(|x| {\n...   |\n407 | |         })\n408 | |         .is_none()\n    | |__________________^\n    |\n    = help: this is more succinctly expressed by calling `any()` with negation\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/memset.rs:32:6\n   |\n32 | impl<'a> MemSet {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/memset.rs:38:23\n   |\n38 |         self.0.iter().find(|x| x.overlapping(start, end)).is_some()\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| x.overlapping(start, end))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n   --> kernel/src/tasks/memset.rs:111:9\n    |\n109 | /         let res =\n110 | |             !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end));\n    | |____________________________________________________________________________________________________- unnecessary `let` binding\n111 |           res\n    |           ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n    = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n    |\n109 ~         \n110 ~         !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end))\n    |\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you seem to be trying to use `match` for an equality check. Consider using `if`\n   --> kernel/src/tasks/memset.rs:213:9\n    |\n213 | /         match &self.mtype {\n214 | |             MemType::ShareFile => {\n215 | |                 let start = self.start;\n216 | |                 let len = self.len;\n...   |\n232 | |             _ => {}\n233 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n    = note: `#[warn(clippy::single_match)]` on by default\nhelp: try\n    |\n213 ~         if self.mtype == MemType::ShareFile {\n214 +             let start = self.start;\n215 +             let len = self.len;\n216 +             let mapfile = self.file.clone().unwrap();\n217 +             for tracker in &self.mtrackers {\n218 +                 if Arc::strong_count(&tracker.tracker) > 1 {\n219 +                     continue;\n220 +                 }\n221 + \n222 +                 let offset = tracker.vpn.to_addr() - start;\n223 +                 let wlen = min(len - offset, PAGE_SIZE);\n224 + \n225 +                 let bytes = &mut tracker.tracker.0.get_buffer()[..wlen];\n226 +                 mapfile\n227 +                     .writeat(offset, bytes)\n228 +                     .expect(\"can't write data to file at drop\");\n229 +             }\n230 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/shm.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against true are unnecessary\n  --> kernel/src/tasks/shm.rs:30:49\n   |\n30 |         if Arc::strong_count(&self.mem) == 1 && *self.mem.deleted.lock() == true {\n   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `*self.mem.deleted.lock()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> kernel/src/tasks/task.rs:142:5\n    |\n142 | /     pub fn map_frames(\n143 | |         &self,\n144 | |         vpn: VirtPage,\n145 | |         mtype: MemType,\n...   |\n150 | |         len: usize,\n151 | |     ) -> Option<PhysPage> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `SigProcMask` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:361:22\n    |\n361 |             sigmask: parent_tcb.sigmask.clone(),\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `parent_tcb.sigmask`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n  --> kernel/src/tasks/mod.rs:57:20\n   |\n57 |                 if c >= 0x20 && c <= 0x7e {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^ help: use: `(0x20..=0x7e).contains(&c)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n   = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/tasks/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `TMS` contains a capitalized acronym\n   --> kernel/src/tasks/mod.rs:125:12\n    |\n125 | pub struct TMS {\n    |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Tms`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/user/signal.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `SigAction` which implements the `Copy` trait\n  --> kernel/src/user/signal.rs:28:25\n   |\n28 |         let sigaction = self.task.pcb.lock().sigaction[signal.num()].clone();\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.task.pcb.lock().sigaction[signal.num()]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/user/signal.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/user/signal.rs:65:22\n   |\n65 |         cx.store_ctx(&cx_ref);\n   |                      ^^^^^^^ help: change this to: `cx_ref`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `core::iter::Enumerate<alloc::collections::vec_deque::Drain<'_, u8>>`\n  --> kernel/src/user/socket_pair.rs:26:9\n   |\n26 | /         queue\n27 | |             .drain(..rlen)\n28 | |             .enumerate()\n29 | |             .into_iter()\n   | |________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\nhelp: consider removing `.into_iter()`\n   |\n26 ~         queue\n27 +             .drain(..rlen)\n28 +             .enumerate()\n   |\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "kernel/src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: matching on `Some` with `ok()` is redundant\n  --> kernel/src/main.rs:77:13\n   |\n77 |             if let Some(task) = current_task().downcast_arc::<UserTask>().ok() {\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_result_ok\n   = note: `#[warn(clippy::match_result_ok)]` on by default\nhelp: consider matching on `Ok(task)` and removing the call to `ok` instead\n   |\n77 |             if let Ok(task) = current_task().downcast_arc::<UserTask>() {\n   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: comparison to empty slice\n  --> kernel/build.rs:17:12\n   |\n17 |         if module == \"\" {\n   |            ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `module.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n   = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/build.rs:20:84\n   |\n20 |         module_file_content.push_str(&format!(\"extern crate {};\\n\", module.replace(\"-\", \"_\")))\n   |                                                                                    ^^^ help: try using a `char` instead: `'-'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/build.rs:29:16\n   |\n29 |         .split(\",\")\n   |                ^^^ help: try using a `char` instead: `','`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded sub `cfg` when there is only one condition\n   --> kernel/src/syscall/mod.rs:381:19\n    |\n381 |             #[cfg(any(target_arch = \"x86_64\"))]\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `target_arch = \"x86_64\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_minimal_cfg\n    = note: `#[warn(clippy::non_minimal_cfg)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits of hex, binary or octal literal not in groups of equal size\n   --> kernel/src/syscall/fd.rs:936:31\n    |\n936 |             stime + timeout * 0x1000_000\n    |                               ^^^^^^^^^^ help: consider: `0x0100_0000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n    = note: `#[warn(clippy::unusual_byte_groupings)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/shm.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this is a decimal constant\n  --> kernel/src/syscall/shm.rs:31:21\n   |\n31 |         if shmflg & 01000 > 0 {\n   |                     ^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_prefixed_literal\n   = note: `#[warn(clippy::zero_prefixed_literal)]` on by default\nhelp: if you mean to use a decimal constant, remove the `0` to avoid confusion\n   |\n31 |         if shmflg & 1000 > 0 {\n   |                     ~~~~\nhelp: if you mean to use an octal constant, use `0o`\n   |\n31 |         if shmflg & 0o1000 > 0 {\n   |                     ~~~~~~\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `else { if .. }` block can be collapsed\n   --> kernel/src/syscall/task.rs:726:24\n    |\n726 |                   } else {\n    |  ________________________^\n727 | |                     if let Some(index) = target_signal.real_time_index() {\n728 | |                         child_tcb.signal_queue[index] += 1;\n729 | |                     }\n730 | |                 }\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\n    = note: `#[warn(clippy::collapsible_else_if)]` on by default\nhelp: collapse nested if block\n    |\n726 ~                 } else if let Some(index) = target_signal.real_time_index() {\n727 +                     child_tcb.signal_queue[index] += 1;\n728 +                 }\n    |\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:757:36\n    |\n757 |             sec: stime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n    = note: `#[warn(clippy::inconsistent_digit_grouping)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:758:37\n    |\n758 |             usec: stime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:761:36\n    |\n761 |             sec: utime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:762:37\n    |\n762 |             usec: utime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constants have by default a `'static` lifetime\n   --> kernel/src/tasks/initproc.rs:213:27\n    |\n213 | pub const USER_WORK_DIR: &'static str = \"/\";\n    |                          -^^^^^^^---- help: consider removing `'static`: `&str`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n    = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:42:9\n   |\n42 | /         if events.contains(PollEvent::POLLOUT) {\n43 | |             if self.inner.lock().len() <= 0x50000 {\n44 | |                 res |= PollEvent::POLLOUT;\n45 | |             }\n46 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n   = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n   |\n42 ~         if events.contains(PollEvent::POLLOUT) && self.inner.lock().len() <= 0x50000 {\n43 +             res |= PollEvent::POLLOUT;\n44 +         }\n   |\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:47:9\n   |\n47 | /         if events.contains(PollEvent::POLLIN) {\n48 | |             if self.inner.lock().len() > 0 {\n49 | |                 res |= PollEvent::POLLIN;\n50 | |             }\n51 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n   |\n47 ~         if events.contains(PollEvent::POLLIN) && self.inner.lock().len() > 0 {\n48 +             res |= PollEvent::POLLIN;\n49 +         }\n   |\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/epoll/mod.rs:65:17\n   |\n65 | //                 self.data.lock().get_mut(&fd).map(|x| {\n66 | ||                     *x = ev;\n67 | ||                 });\n   | ||__________________^- help: try: `if let Some(x) = self.data.lock().get_mut(&fd) { *x = ev; }`\n   |  |__________________|\n   | \n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\n   = note: `#[warn(clippy::option_map_unit_fn)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ADD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:79:5\n   |\n79 |     ADD = 1,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Add`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DEL` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:80:5\n   |\n80 |     DEL = 2,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Del`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MOD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:81:5\n   |\n81 |     MOD = 3,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Mod`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `STEAM` contains a capitalized acronym\n  --> kernel/src/socket.rs:15:5\n   |\n15 |     STEAM,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Steam`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DGRAME` contains a capitalized acronym\n  --> kernel/src/socket.rs:16:5\n   |\n16 |     DGRAME,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dgrame`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RAW` contains a capitalized acronym\n  --> kernel/src/socket.rs:17:5\n   |\n17 |     RAW,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Raw`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/socket.rs:163:12\n    |\n163 |         if data.len() == 0 {\n    |            ^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `data.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/socket.rs:186:33\n    |\n186 |         match self.inner.sendto(&buffer, None) {\n    |                                 ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPERM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:21:5\n   |\n21 |     EPERM = 1,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eperm`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOENT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:23:5\n   |\n23 |     ENOENT = 2,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoent`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESRCH` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:25:5\n   |\n25 |     ESRCH = 3,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Esrch`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EINTR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:27:5\n   |\n27 |     EINTR = 4,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eintr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:29:5\n   |\n29 |     EIO = 5,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Eio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENXIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:31:5\n   |\n31 |     ENXIO = 6,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enxio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOEXEC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:35:5\n   |\n35 |     ENOEXEC = 8,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoexec`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBADF` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:37:5\n   |\n37 |     EBADF = 9,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebadf`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECHILD` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:39:5\n   |\n39 |     ECHILD = 10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Echild`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EAGAIN` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:41:5\n   |\n41 |     EAGAIN = 11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eagain`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOMEM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:43:5\n   |\n43 |     ENOMEM = 12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enomem`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EACCES` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:45:5\n   |\n45 |     EACCES = 13,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eacces`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFAULT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:47:5\n   |\n47 |     EFAULT = 14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efault`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTBLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:49:5\n   |\n49 |     ENOTBLK = 15,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotblk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBUSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:51:5\n   |\n51 |     EBUSY = 16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebusy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EEXIST` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:53:5\n   |\n53 |     EEXIST = 17,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eexist`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EXDEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:55:5\n   |\n55 |     EXDEV = 18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Exdev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENODEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:57:5\n   |\n57 |     ENODEV = 19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enodev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:59:5\n   |\n59 |     ENOTDIR = 20,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EISDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:61:5\n   |\n61 |     EISDIR = 21,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eisdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EINVAL` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:63:5\n   |\n63 |     EINVAL = 22,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Einval`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:65:5\n   |\n65 |     ENFILE = 23,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EMFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:67:5\n   |\n67 |     EMFILE = 24,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:69:5\n   |\n69 |     ENOTTY = 25,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXTBSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:71:5\n   |\n71 |     ETXTBSY = 26,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxtbsy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFBIG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:73:5\n   |\n73 |     EFBIG = 27,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efbig`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOSPC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:75:5\n   |\n75 |     ENOSPC = 28,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enospc`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:77:5\n   |\n77 |     ESPIPE = 29,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Espipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EROFS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:79:5\n   |\n79 |     EROFS = 30,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erofs`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EMLINK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:81:5\n   |\n81 |     EMLINK = 31,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emlink`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:83:5\n   |\n83 |     EPIPE = 32,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDOM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:85:5\n   |\n85 |     EDOM = 33,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Edom`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERANGE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:87:5\n   |\n87 |     ERANGE = 34,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erange`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDEADLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:89:5\n   |\n89 |     EDEADLK = 35,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edeadlk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENAMETOOLONG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:91:5\n   |\n91 |     ENAMETOOLONG = 36,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enametoolong`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOLCK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:93:5\n   |\n93 |     ENOLCK = 37,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enolck`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOSYS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:95:5\n   |\n95 |     ENOSYS = 38,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enosys`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTEMPTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:97:5\n   |\n97 |     ENOTEMPTY = 39,\n   |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotempty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EAFNOSUPPORT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:99:5\n   |\n99 |     EAFNOSUPPORT = 97,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eafnosupport`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTCONN` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:101:5\n    |\n101 |     ENOTCONN = 107,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotconn`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETIMEDOUT` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:103:5\n    |\n103 |     ETIMEDOUT = 100,\n    |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etimedout`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECONNREFUSED` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:105:5\n    |\n105 |     ECONNREFUSED = 111,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Econnrefused`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EALREADY` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:107:5\n    |\n107 |     EALREADY = 114,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ealready`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting integer literal to `isize` is unnecessary\n   --> kernel/src/syscall/consts.rs:422:27\n    |\n422 | pub const AT_CWD: usize = -100 as isize as usize;\n    |                           ^^^^^^^^^^^^^ help: try: `-100_isize`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:509:1\n    |\n509 | impl Into<MappingFlags> for MmapProt {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n    = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<syscall::consts::MmapProt>`\n    |\n509 ~ impl From<MmapProt> for MappingFlags {\n510 ~     fn from(val: MmapProt) -> Self {\n511 |         let mut res = MappingFlags::empty();\n512 ~         if val.contains(MmapProt::PROT_READ) {\n513 |             res |= MappingFlags::R;\n514 |         }\n515 ~         if val.contains(MmapProt::PROT_WRITE) {\n516 |             res |= MappingFlags::W;\n517 |         }\n518 ~         if val.contains(MmapProt::PROT_EXEC) {\n    |\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DUPFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:607:5\n    |\n607 |     DUPFD = 0,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:609:5\n    |\n609 |     GETFD = 1,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:611:5\n    |\n611 |     SETFD = 2,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:613:5\n    |\n613 |     GETFL = 3,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:615:5\n    |\n615 |     SETFL = 4,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:617:5\n    |\n617 |     GETLK = 5,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:619:5\n    |\n619 |     SETLK = 6,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETLKW` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:621:5\n    |\n621 |     SETLKW = 7,\n    |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlkw`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DUPFDCLOEXEC` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:623:5\n    |\n623 |     DUPFDCLOEXEC = 0x406,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfdcloexec`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:872:1\n    |\n872 | impl<T> Into<usize> for UserRef<T> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<syscall::consts::UserRef<T>>`\n    |\n872 ~ impl<T> From<UserRef<T>> for usize {\n873 ~     fn from(val: UserRef<T>) -> Self {\n874 ~         val.addr.addr()\n    |\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> kernel/src/syscall/fd.rs:26:8\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |        ^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!path.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/src/syscall/fd.rs:26:43\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |                                           ^^^ help: try using a `char` instead: `'/'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/fd.rs:298:50\n    |\n298 |         dentry_open(dir.dentry.clone().unwrap(), &path, OpenFlags::NONE)\n    |                                                  ^^^^^ help: change this to: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is only used to index `ts`\n   --> kernel/src/syscall/fd.rs:529:26\n    |\n529 |                 for i in 0..2 {\n    |                          ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n529 |                 for <item> in ts.iter().take(2) {\n    |                     ~~~~~~    ~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is only used to index `poll_fds`\n   --> kernel/src/syscall/fd.rs:667:22\n    |\n667 |             for i in 0..nfds {\n    |                      ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n667 |             for <item> in poll_fds.iter_mut().take(nfds) {\n    |                 ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `writeat` doesn't need a mutable reference\n   --> kernel/src/syscall/fd.rs:995:46\n    |\n995 |                 .writeat(*off_out.get_ref(), &mut buffer[..rsize])\n    |                                              ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this loop could be written as a `while let` loop\n   --> kernel/src/syscall/socket.rs:237:9\n    |\n237 | /         loop {\n238 | |             match socket.inner.clone().connect(remote) {\n239 | |                 Err(NetServerError::Blocking) => {}\n240 | |                 _ => break,\n241 | |             }\n242 | |             yield_now().await;\n243 | |         }\n    | |_________^ help: try: `while let Err(NetServerError::Blocking) = socket.inner.clone().connect(remote) { .. }`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#while_let_loop\n    = note: `#[warn(clippy::while_let_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `Ipv4Addr` which implements the `Copy` trait\n   --> kernel/src/syscall/socket.rs:488:27\n    |\n488 |                 sa.addr = new_socket.get_remote().unwrap().ip().clone();\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*new_socket.get_remote().unwrap().ip()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n    = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/syscall/task.rs:68:45\n   |\n68 |     if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n   |                                             ^^^^^^^ help: change this to: `buffer`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant closure\n   --> kernel/src/syscall/task.rs:126:26\n    |\n126 |                     .map(|x| Arc::new(x))\n    |                          ^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Arc::new`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n    = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `alloc::string::String`\n   --> kernel/src/syscall/task.rs:192:16\n    |\n192 |     let path = String::from(path);\n    |                ^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/task.rs:243:59\n    |\n243 |         let elf = if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n    |                                                           ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: parameter is only used in recursion\n   --> kernel/src/syscall/task.rs:189:5\n    |\n189 |     envp: Vec<String>,\n    |     ^^^^ help: if this is intentional, prefix it with an underscore: `_envp`\n    |\nnote: parameter used here\n   --> kernel/src/syscall/task.rs:248:79\n    |\n248 |             return exec_with_process(task, String::from(\"busybox\"), new_args, envp).await;\n    |                                                                               ^^^^\n...\n271 |                 return exec_with_process(task, new_args[0].clone(), new_args, envp).await;\n    |                                                                               ^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\n    = note: `#[warn(clippy::only_used_in_recursion)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:405:14\n    |\n405 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n    = note: `#[warn(clippy::into_iter_on_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:411:14\n    |\n411 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `.then_some(..).unwrap_or(..)` can be written more clearly with `if .. else ..`\n   --> kernel/src/syscall/task.rs:460:31\n    |\n460 |           let clear_child_tid = flags\n    |  _______________________________^\n461 | |             .contains(CloneFlags::CLONE_CHILD_CLEARTID)\n462 | |             .then_some(ctid)\n463 | |             .unwrap_or(UserRef::from(0));\n    | |________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#obfuscated_if_else\n    = note: `#[warn(clippy::obfuscated_if_else)]` on by default\nhelp: try\n    |\n460 ~         let clear_child_tid = if flags\n461 ~             .contains(CloneFlags::CLONE_CHILD_CLEARTID) { ctid } else { UserRef::from(0) };\n    |\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:513:21\n    |\n513 | /                     inner\n514 | |                         .children\n515 | |                         .iter()\n516 | |                         .find(|x| x.task_id == pid as usize)\n517 | |                         .map(|x| x.clone())\n    | |___________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\n    = note: `#[warn(clippy::map_clone)]` on by default\nhelp: consider calling the dedicated `cloned` method\n    |\n513 ~                     inner\n514 +                         .children\n515 +                         .iter()\n516 +                         .find(|x| x.task_id == pid as usize).cloned()\n    |\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `.iter().count()` on a `Vec`\n   --> kernel/src/syscall/task.rs:524:17\n    |\n524 |                 self.task.pcb.lock().children.iter().count()\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.task.pcb.lock().children.len()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#iter_count\n    = note: `#[warn(clippy::iter_count)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map_or(None, ..)` on an `Option` value. This can be done more directly by calling `and_then(..)` instead\n   --> kernel/src/syscall/task.rs:554:24\n    |\n554 |             let exit = child_task.clone().map_or(None, |x| x.exit_code());\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using `and_then` instead: `child_task.clone().and_then(|x| x.exit_code())`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_or_none\n    = note: `#[warn(clippy::option_map_or_none)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> kernel/src/syscall/task.rs:698:17\n    |\n698 |                 return Err(LinuxError::EPERM);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n698 -                 return Err(LinuxError::EPERM);\n698 +                 Err(LinuxError::EPERM)\n    |\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:706:13\n    |\n706 | /             x.threads\n707 | |                 .iter()\n708 | |                 .find(|x| match x.upgrade() {\n709 | |                     Some(thread) => thread.task_id == tid,\n710 | |                     None => false,\n711 | |                 })\n712 | |                 .map(|x| x.clone())\n    | |___________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\nhelp: consider calling the dedicated `cloned` method\n    |\n706 ~             x.threads\n707 +                 .iter()\n708 +                 .find(|x| match x.upgrade() {\n709 +                     Some(thread) => thread.task_id == tid,\n710 +                     None => false,\n711 +                 }).cloned()\n    |\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/syscall/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `usize`\n   --> kernel/src/syscall/mod.rs:255:21\n    |\n255 |                     args[5].into(),\n    |                     ^^^^^^^^^^^^^^ help: consider removing `.into()`: `args[5]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/async_ops.rs:67:10\n   |\n67 |           .find(|x| x.contains(&task_id))\n   |  __________^\n68 | |         .is_some()\n   | |__________________^ help: use `any()` instead: `any(|x| x.contains(&task_id))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n   = note: `#[warn(clippy::search_is_some)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/tasks/async_ops.rs:81:21\n   |\n81 | /                     self.0\n82 | |                         .lock()\n83 | |                         .values_mut()\n84 | |                         .find(|x| x.contains(&self.1))\n85 | |                         .map(|x| x.retain(|x| *x != self.1));\n   | |____________________________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\nhelp: try\n   |\n81 ~                     if let Some(x) = self.0\n82 +                         .lock()\n83 +                         .values_mut()\n84 +                         .find(|x| x.contains(&self.1)) { x.retain(|x| *x != self.1) }\n   |\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:121:41\n    |\n121 |             .map(|x| x.drain(..cmp::min(wake_count as usize, que_size)));\n    |                                         ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:138:28\n    |\n138 |         .map(|x| x.drain(..wake_count as usize).count())\n    |                            ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:143:28\n    |\n143 |         .map(|x| x.drain(..reque_count as usize).collect());\n    |                            ^^^^^^^^^^^^^^^^^^^^ help: try: `reque_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: usage of `contains_key` followed by `insert` on a `BTreeMap`\n   --> kernel/src/tasks/async_ops.rs:146:9\n    |\n146 | /         if !futex_table.contains_key(&uaddr2) {\n147 | |             futex_table.insert(uaddr2, vec![]);\n148 | |         }\n    | |_________^ help: try: `futex_table.entry(uaddr2).or_insert_with(|| vec![]);`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_entry\n    = note: `#[warn(clippy::map_entry)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/elf.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (10/7)\n   --> kernel/src/tasks/elf.rs:108:1\n    |\n108 | / pub fn init_task_stack(\n109 | |     user_task: Arc<UserTask>,\n110 | |     args: Vec<String>,\n111 | |     base: usize,\n...   |\n118 | |     tls: usize,\n119 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/filetable.rs:78:6\n   |\n78 | impl<'a> FileItem {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual implementation of an assign operation\n   --> kernel/src/tasks/filetable.rs:210:13\n    |\n210 |             ptr = ptr + current_len;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `ptr += current_len`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n    = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:333:12\n    |\n333 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:349:12\n    |\n349 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:374:12\n    |\n374 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/tasks/filetable.rs:378:47\n    |\n378 |         WaitBlockingWrite(self.inner.clone(), &buffer, offset)\n    |                                               ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `hashbrown::hash_map::Values<'_, usize, alloc::sync::Weak<dyn executor::AsyncTask>>`\n  --> kernel/src/tasks/initproc.rs:59:5\n   |\n59 |     TASK_MAP.lock().values().into_iter().for_each(|task| {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `TASK_MAP.lock().values()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> kernel/src/tasks/initproc.rs:118:5\n    |\n118 |     return true;\n    |     ^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n118 -     return true;\n118 +     true\n    |\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:122:41\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                         ^^^ help: try using a `char` instead: `' '`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: comparison to empty slice\n   --> kernel/src/tasks/initproc.rs:122:57\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                                         ^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!x.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n    = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:125:47\n    |\n125 |     let filename = match filename.starts_with(\"/\") {\n    |                                               ^^^ help: try using a `char` instead: `'/'`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:184:19\n    |\n184 |             match c as u8 {\n    |                   ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary use of `to_string`\n   --> kernel/src/tasks/initproc.rs:187:40\n    |\n187 |                     let sign = command(&String::from_utf8_lossy(&buffer).to_string()).await;\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `String::from_utf8_lossy(&buffer).as_ref()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n    = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/initproc.rs:195:24\n    |\n195 |                     if buffer.len() > 0 {\n    |                        ^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:204:33\n    |\n204 |                     buffer.push(c as u8);\n    |                                 ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:205:43\n    |\n205 |                     DebugConsole::putchar(c as u8);\n    |                                           ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_none()` after searching an `Iterator` with `find`\n   --> kernel/src/tasks/initproc.rs:400:8\n    |\n400 |       if TASK_MAP\n    |  ________^\n401 | |         .lock()\n402 | |         .values()\n403 | |         .find(|x| {\n...   |\n407 | |         })\n408 | |         .is_none()\n    | |__________________^\n    |\n    = help: this is more succinctly expressed by calling `any()` with negation\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/memset.rs:32:6\n   |\n32 | impl<'a> MemSet {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/memset.rs:38:23\n   |\n38 |         self.0.iter().find(|x| x.overlapping(start, end)).is_some()\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| x.overlapping(start, end))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n   --> kernel/src/tasks/memset.rs:111:9\n    |\n109 | /         let res =\n110 | |             !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end));\n    | |____________________________________________________________________________________________________- unnecessary `let` binding\n111 |           res\n    |           ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n    = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n    |\n109 ~         \n110 ~         !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end))\n    |\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you seem to be trying to use `match` for an equality check. Consider using `if`\n   --> kernel/src/tasks/memset.rs:213:9\n    |\n213 | /         match &self.mtype {\n214 | |             MemType::ShareFile => {\n215 | |                 let start = self.start;\n216 | |                 let len = self.len;\n...   |\n232 | |             _ => {}\n233 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n    = note: `#[warn(clippy::single_match)]` on by default\nhelp: try\n    |\n213 ~         if self.mtype == MemType::ShareFile {\n214 +             let start = self.start;\n215 +             let len = self.len;\n216 +             let mapfile = self.file.clone().unwrap();\n217 +             for tracker in &self.mtrackers {\n218 +                 if Arc::strong_count(&tracker.tracker) > 1 {\n219 +                     continue;\n220 +                 }\n221 + \n222 +                 let offset = tracker.vpn.to_addr() - start;\n223 +                 let wlen = min(len - offset, PAGE_SIZE);\n224 + \n225 +                 let bytes = &mut tracker.tracker.0.get_buffer()[..wlen];\n226 +                 mapfile\n227 +                     .writeat(offset, bytes)\n228 +                     .expect(\"can't write data to file at drop\");\n229 +             }\n230 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/shm.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against true are unnecessary\n  --> kernel/src/tasks/shm.rs:30:49\n   |\n30 |         if Arc::strong_count(&self.mem) == 1 && *self.mem.deleted.lock() == true {\n   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `*self.mem.deleted.lock()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> kernel/src/tasks/task.rs:142:5\n    |\n142 | /     pub fn map_frames(\n143 | |         &self,\n144 | |         vpn: VirtPage,\n145 | |         mtype: MemType,\n...   |\n150 | |         len: usize,\n151 | |     ) -> Option<PhysPage> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `TrapFrame` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:320:29\n    |\n320 |         new_tcb_writer.cx = self.tcb.read().cx.clone();\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.tcb.read().cx`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `TrapFrame` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:360:17\n    |\n360 |             cx: parent_tcb.cx.clone(),\n    |                 ^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `parent_tcb.cx`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `SigProcMask` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:361:22\n    |\n361 |             sigmask: parent_tcb.sigmask.clone(),\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `parent_tcb.sigmask`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n  --> kernel/src/tasks/mod.rs:57:20\n   |\n57 |                 if c >= 0x20 && c <= 0x7e {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^ help: use: `(0x20..=0x7e).contains(&c)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n   = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/tasks/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `TMS` contains a capitalized acronym\n   --> kernel/src/tasks/mod.rs:125:12\n    |\n125 | pub struct TMS {\n    |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Tms`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/user/signal.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `SigAction` which implements the `Copy` trait\n  --> kernel/src/user/signal.rs:28:25\n   |\n28 |         let sigaction = self.task.pcb.lock().sigaction[signal.num()].clone();\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.task.pcb.lock().sigaction[signal.num()]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/user/signal.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `TrapFrame` which implements the `Copy` trait\n  --> kernel/src/user/signal.rs:57:24\n   |\n57 |         let store_cx = cx_ref.clone();\n   |                        ^^^^^^^^^^^^^^ help: try dereferencing it: `*cx_ref`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/user/signal.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/user/signal.rs:65:22\n   |\n65 |         cx.store_ctx(&cx_ref);\n   |                      ^^^^^^^ help: change this to: `cx_ref`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `core::iter::Enumerate<alloc::collections::vec_deque::Drain<'_, u8>>`\n  --> kernel/src/user/socket_pair.rs:26:9\n   |\n26 | /         queue\n27 | |             .drain(..rlen)\n28 | |             .enumerate()\n29 | |             .into_iter()\n   | |________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\nhelp: consider removing `.into_iter()`\n   |\n26 ~         queue\n27 +             .drain(..rlen)\n28 +             .enumerate()\n   |\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "kernel/src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: matching on `Some` with `ok()` is redundant\n  --> kernel/src/main.rs:77:13\n   |\n77 |             if let Some(task) = current_task().downcast_arc::<UserTask>().ok() {\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_result_ok\n   = note: `#[warn(clippy::match_result_ok)]` on by default\nhelp: consider matching on `Ok(task)` and removing the call to `ok` instead\n   |\n77 |             if let Ok(task) = current_task().downcast_arc::<UserTask>() {\n   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: comparison to empty slice\n  --> kernel/build.rs:17:12\n   |\n17 |         if module == \"\" {\n   |            ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `module.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n   = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/build.rs:20:84\n   |\n20 |         module_file_content.push_str(&format!(\"extern crate {};\\n\", module.replace(\"-\", \"_\")))\n   |                                                                                    ^^^ help: try using a `char` instead: `'-'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/build.rs:29:16\n   |\n29 |         .split(\",\")\n   |                ^^^ help: try using a `char` instead: `','`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "kernel/src/syscall/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded sub `cfg` when there is only one condition\n   --> kernel/src/syscall/mod.rs:381:19\n    |\n381 |             #[cfg(any(target_arch = \"x86_64\"))]\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `target_arch = \"x86_64\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_minimal_cfg\n    = note: `#[warn(clippy::non_minimal_cfg)]` on by default\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "kernel/src/user/signal.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `polyhal::SIG_RETURN_ADDR`\n --> kernel/src/user/signal.rs:5:30\n  |\n5 | use polyhal::{TrapFrameArgs, SIG_RETURN_ADDR};\n  |                              ^^^^^^^^^^^^^^^ no `SIG_RETURN_ADDR` in the root\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits of hex, binary or octal literal not in groups of equal size\n   --> kernel/src/syscall/fd.rs:699:57\n    |\n699 |         let etime = current_nsec() + timeout as usize * 0x1000_000;\n    |                                                         ^^^^^^^^^^ help: consider: `0x0100_0000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n    = note: `#[warn(clippy::unusual_byte_groupings)]` on by default\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits of hex, binary or octal literal not in groups of equal size\n   --> kernel/src/syscall/fd.rs:936:31\n    |\n936 |             stime + timeout * 0x1000_000\n    |                               ^^^^^^^^^^ help: consider: `0x0100_0000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "kernel/src/syscall/shm.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this is a decimal constant\n  --> kernel/src/syscall/shm.rs:31:21\n   |\n31 |         if shmflg & 01000 > 0 {\n   |                     ^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_prefixed_literal\n   = note: `#[warn(clippy::zero_prefixed_literal)]` on by default\nhelp: if you mean to use a decimal constant, remove the `0` to avoid confusion\n   |\n31 |         if shmflg & 1000 > 0 {\n   |                     ~~~~\nhelp: if you mean to use an octal constant, use `0o`\n   |\n31 |         if shmflg & 0o1000 > 0 {\n   |                     ~~~~~~\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `else { if .. }` block can be collapsed\n   --> kernel/src/syscall/task.rs:726:24\n    |\n726 |                   } else {\n    |  ________________________^\n727 | |                     if let Some(index) = target_signal.real_time_index() {\n728 | |                         child_tcb.signal_queue[index] += 1;\n729 | |                     }\n730 | |                 }\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\n    = note: `#[warn(clippy::collapsible_else_if)]` on by default\nhelp: collapse nested if block\n    |\n726 ~                 } else if let Some(index) = target_signal.real_time_index() {\n727 +                     child_tcb.signal_queue[index] += 1;\n728 +                 }\n    |\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:757:36\n    |\n757 |             sec: stime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n    = note: `#[warn(clippy::inconsistent_digit_grouping)]` on by default\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:758:37\n    |\n758 |             usec: stime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:761:36\n    |\n761 |             sec: utime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:762:37\n    |\n762 |             usec: utime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constants have by default a `'static` lifetime\n   --> kernel/src/tasks/initproc.rs:213:27\n    |\n213 | pub const USER_WORK_DIR: &'static str = \"/\";\n    |                          -^^^^^^^---- help: consider removing `'static`: `&str`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n    = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:42:9\n   |\n42 | /         if events.contains(PollEvent::POLLOUT) {\n43 | |             if self.inner.lock().len() <= 0x50000 {\n44 | |                 res |= PollEvent::POLLOUT;\n45 | |             }\n46 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n   = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n   |\n42 ~         if events.contains(PollEvent::POLLOUT) && self.inner.lock().len() <= 0x50000 {\n43 +             res |= PollEvent::POLLOUT;\n44 +         }\n   |\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:47:9\n   |\n47 | /         if events.contains(PollEvent::POLLIN) {\n48 | |             if self.inner.lock().len() > 0 {\n49 | |                 res |= PollEvent::POLLIN;\n50 | |             }\n51 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n   |\n47 ~         if events.contains(PollEvent::POLLIN) && self.inner.lock().len() > 0 {\n48 +             res |= PollEvent::POLLIN;\n49 +         }\n   |\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-09T07:33:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1522:11: 1522:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1525:13: 1525:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:33:00Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 11,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-09T07:33:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1522:11: 1522:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1525:13: 1525:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:33:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 12,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-09T07:33:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1522:11: 1522:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1525:13: 1525:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:33:08Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 13,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-09T07:33:11Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1522:11: 1522:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1525:13: 1525:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:33:11Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 14,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-09T07:33:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1522:11: 1522:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1525:13: 1525:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:33:14Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 15,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel, checker=Clippy\n// toolchain=nightly-2023-12-01, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_2/kern-crates/ByteOS/kernel\n// cmd=cargo clippy --target x86_64-unknown-none --no-deps --message-format=json\n    Checking cfg-if v1.0.0\n    Checking scopeguard v1.1.0\n   Compiling lock_api v0.4.9\n   Compiling log v0.4.17\n    Checking bitflags v1.3.2\n    Checking bitflags v2.4.2\n    Checking bit_field v0.10.2\n   Compiling paste v1.0.14\n   Compiling rustversion v1.0.12\n    Checking raw-cpuid v10.7.0\n    Checking spin v0.9.8\n   Compiling x86 v0.52.0\n    Checking volatile v0.4.6\n   Compiling percpu v0.1.0 (https://github.com/Byte-OS/percpu.git#a71e60e3)\n    Checking bit v0.1.1\n    Checking irq_safety v0.1.1 (https://github.com/theseus-os/irq_safety.git#11bfab9f)\n    Checking sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n    Checking raw-cpuid v11.0.1\n    Checking multiboot v0.8.0\n    Checking fdt v0.1.5\n    Checking byteorder v1.4.3\n    Checking x86_64 v0.14.10\n    Checking zerocopy v0.7.32\n    Checking linkme v0.3.22\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n    Checking downcast-rs v1.2.0\n    Checking vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling num-traits v0.2.16\n   Compiling ahash v0.8.3\n    Checking once_cell v1.19.0\n    Checking virtio-drivers v0.7.1 (https://github.com/rcore-os/virtio-drivers?rev=61ece50#61ece509)\n   Compiling futures-core v0.3.28\n    Checking num_enum v0.6.1\n    Checking allocator-api2 v0.2.16\n    Checking x2apic v0.4.3\n    Checking polyhal v0.1.0 (https://github.com/Byte-OS/polyhal.git#78137eed)\n   Compiling allocator v0.1.0 (https://github.com/Byte-OS/allocator.git?rev=c6ce949146d5feab1d406502b19b035f5d392c35#c6ce9491)\n    Checking hashbrown v0.14.0\n   Compiling kramdisk v0.1.0 (https://github.com/Byte-OS/kramdisk.git#9eb2394b)\n    Checking procfs v0.1.0 (https://github.com/Byte-OS/procfs.git#0477d4ee)\n    Checking frame_allocator v0.1.0 (https://github.com/Byte-OS/bit_frame_allocator.git#e401675a)\n    Checking buddy_system_allocator v0.9.0\n    Checking fatfs v0.4.0 (https://github.com/byte-os/rust-fatfs.git#3b45ddc5)\n    Checking hal v0.1.0 (https://github.com/Byte-OS/hal.git#6f40272c)\n    Checking ramfs v0.1.0 (https://github.com/Byte-OS/ramfs.git#57167265)\n    Checking ns16550a v0.2.0\n    Checking pin-project-lite v0.2.9\n    Checking zero v0.1.3\n    Checking futures-lite v1.13.0\n    Checking devices v0.1.0 (https://github.com/Byte-OS/devices.git#28ba385a)\n    Checking xmas-elf v0.9.0\n    Checking logging v0.1.0 (https://github.com/Byte-OS/logging.git#3e749346)\n    Checking devfs v0.1.0 (https://github.com/Byte-OS/devfs.git#c5e510df)\n    Checking kvirtio v0.1.0 (https://github.com/Byte-OS/driver-kvirtio.git#5917abe9)\n    Checking general-plic v0.1.0 (https://github.com/Byte-OS/driver-general-plic.git#d6196a18)\n    Checking ns16550a v0.1.0 (https://github.com/Byte-OS/driver-ns16550a.git#059e0f27)\n    Checking kgoldfish-rtc v0.1.0 (https://github.com/Byte-OS/driver-kgoldfish-rtc.git#66e0234f)\n    Checking executor v0.1.0 (https://github.com/Byte-OS/executor.git#d1dd77ff)\n   Compiling kernel v0.1.0 (/home/runner/check/batch_2/kern-crates/ByteOS/kernel)\n    Checking lose-net-stack v0.1.0 (https://github.com/byte-os/lose-net-stack?rev=bb99460#bb99460f)\n    Checking fs v0.1.0 (https://github.com/Byte-OS/fs.git#6d968ea7)\n    Checking signal v0.1.0 (https://github.com/Byte-OS/signal.git#a03290b1)\nerror: could not compile `kernel` (bin \"kernel\") due to 2 previous errors; 12 warnings emitted\n"
    },
    {
      "cmd_idx": 16,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_2/kern-crates/ByteOS/kernel\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling proc-macro2 v1.0.78\n   Compiling unicode-ident v1.0.8\n   Compiling autocfg v1.1.0\n   Compiling cfg-if v1.0.0\n   Compiling scopeguard v1.1.0\n   Compiling log v0.4.17\n   Compiling bitflags v2.4.2\n   Compiling tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Byte-OS/percpu.git#a71e60e3)\n[2024-10-09T07:33:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1522:11: 1522:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1525:13: 1525:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:33:00Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling aarch64-cpu v9.4.0\n   Compiling arm_gic v0.1.0 (https://github.com/Byte-OS/arm_gic#7a0693eb)\n   Compiling lock_api v0.4.9\n   Compiling arm_pl011 v0.1.0 (https://github.com/Byte-OS/arm_pl011.git#8a66e24c)\n   Compiling fdt v0.1.5\n   Compiling quote v1.0.35\n   Compiling syn v2.0.48\n   Compiling spin v0.9.8\n   Compiling bit_field v0.10.2\n   Compiling byteorder v1.4.3\n   Compiling irq_safety v0.1.1 (https://github.com/theseus-os/irq_safety.git#11bfab9f)\n   Compiling sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n   Compiling timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling downcast-rs v1.2.0\n   Compiling serde v1.0.188\n   Compiling version_check v0.9.4\n   Compiling vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling ahash v0.8.3\n   Compiling num-traits v0.2.16\n   Compiling futures-core v0.3.28\n   Compiling once_cell v1.19.0\nerror[E0635]: unknown feature `stdsimd`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ahash-0.8.3/src/lib.rs:99:42\n   |\n99 | #![cfg_attr(feature = \"stdsimd\", feature(stdsimd))]\n   |                                          ^^^^^^^\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `ahash` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 17,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=loongarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_2/kern-crates/ByteOS/kernel\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target loongarch64-unknown-none\n   Compiling cfg-if v1.0.0\n   Compiling scopeguard v1.1.0\n   Compiling lock_api v0.4.9\n   Compiling log v0.4.17\n   Compiling bitflags v2.4.2\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n[2024-10-09T07:33:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1522:11: 1522:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1525:13: 1525:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:33:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling percpu v0.1.0 (https://github.com/Byte-OS/percpu.git#a71e60e3)\n   Compiling percpu_macros v0.1.0 (https://github.com/Byte-OS/percpu.git#a71e60e3)\n   Compiling loongArch64 v0.2.2\n   Compiling polyhal-macro v0.1.0 (https://github.com/Byte-OS/polyhal.git#78137eed)\n   Compiling spin v0.9.8\n   Compiling sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n   Compiling fdt v0.1.5\n   Compiling zerocopy-derive v0.7.32\n   Compiling byteorder v1.4.3\n   Compiling polyhal v0.1.0 (https://github.com/Byte-OS/polyhal.git#78137eed)\n   Compiling linkme-impl v0.3.22\n   Compiling timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling downcast-rs v1.2.0\n   Compiling vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling frame_allocator v0.1.0 (https://github.com/Byte-OS/bit_frame_allocator.git#e401675a)\n   Compiling num-traits v0.2.16\n   Compiling ahash v0.8.3\n   Compiling num_enum_derive v0.6.1\n   Compiling zerocopy v0.7.32\n   Compiling once_cell v1.19.0\n   Compiling linkme v0.3.22\n   Compiling futures-core v0.3.28\nerror[E0635]: unknown feature `stdsimd`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ahash-0.8.3/src/lib.rs:99:42\n   |\n99 | #![cfg_attr(feature = \"stdsimd\", feature(stdsimd))]\n   |                                          ^^^^^^^\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `ahash` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 18,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_2/kern-crates/ByteOS/kernel\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf\n   Compiling cfg-if v1.0.0\n   Compiling lock_api v0.4.9\n   Compiling log v0.4.17\n   Compiling scopeguard v1.1.0\n   Compiling bitflags v2.4.2\n   Compiling static_assertions v1.1.0\n   Compiling riscv v0.11.1\n[2024-10-09T07:33:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1522:11: 1522:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1525:13: 1525:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:33:08Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling percpu v0.1.0 (https://github.com/Byte-OS/percpu.git#a71e60e3)\n   Compiling sbi-spec v0.0.4\n   Compiling critical-section v1.1.2\n   Compiling embedded-hal v1.0.0\n   Compiling sbi-rt v0.0.2\n   Compiling spin v0.9.8\n   Compiling fdt v0.1.5\n   Compiling bit_field v0.10.2\n   Compiling sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n   Compiling byteorder v1.4.3\n   Compiling linkme v0.3.22\n   Compiling timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling zerocopy v0.7.32\n   Compiling downcast-rs v1.2.0\n   Compiling vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling polyhal v0.1.0 (https://github.com/Byte-OS/polyhal.git#78137eed)\n   Compiling num-traits v0.2.16\n   Compiling ahash v0.8.3\n   Compiling frame_allocator v0.1.0 (https://github.com/Byte-OS/bit_frame_allocator.git#e401675a)\n   Compiling once_cell v1.19.0\n   Compiling virtio-drivers v0.7.1 (https://github.com/rcore-os/virtio-drivers?rev=61ece50#61ece509)\nerror[E0635]: unknown feature `stdsimd`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ahash-0.8.3/src/lib.rs:99:42\n   |\n99 | #![cfg_attr(feature = \"stdsimd\", feature(stdsimd))]\n   |                                          ^^^^^^^\n\n   Compiling hal v0.1.0 (https://github.com/Byte-OS/hal.git#6f40272c)\nFor more information about this error, try `rustc --explain E0635`.\n   Compiling futures-core v0.3.28\nerror: could not compile `ahash` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 19,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=riscv64imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_2/kern-crates/ByteOS/kernel\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64imac-unknown-none-elf\n   Compiling cfg-if v1.0.0\n   Compiling log v0.4.17\n   Compiling lock_api v0.4.9\n   Compiling scopeguard v1.1.0\n   Compiling bitflags v2.4.2\n   Compiling static_assertions v1.1.0\n   Compiling riscv v0.11.1\n   Compiling sbi-spec v0.0.4\n[2024-10-09T07:33:11Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1522:11: 1522:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1525:13: 1525:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:33:11Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling percpu v0.1.0 (https://github.com/Byte-OS/percpu.git#a71e60e3)\n   Compiling embedded-hal v1.0.0\n   Compiling critical-section v1.1.2\n   Compiling sbi-rt v0.0.2\n   Compiling spin v0.9.8\n   Compiling fdt v0.1.5\n   Compiling bit_field v0.10.2\n   Compiling byteorder v1.4.3\n   Compiling sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n   Compiling linkme v0.3.22\n   Compiling timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling zerocopy v0.7.32\n   Compiling downcast-rs v1.2.0\n   Compiling polyhal v0.1.0 (https://github.com/Byte-OS/polyhal.git#78137eed)\n   Compiling vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling num-traits v0.2.16\n   Compiling frame_allocator v0.1.0 (https://github.com/Byte-OS/bit_frame_allocator.git#e401675a)\n   Compiling ahash v0.8.3\n   Compiling once_cell v1.19.0\n   Compiling virtio-drivers v0.7.1 (https://github.com/rcore-os/virtio-drivers?rev=61ece50#61ece509)\n   Compiling futures-core v0.3.28\n   Compiling num_enum v0.6.1\nerror[E0635]: unknown feature `stdsimd`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ahash-0.8.3/src/lib.rs:99:42\n   |\n99 | #![cfg_attr(feature = \"stdsimd\", feature(stdsimd))]\n   |                                          ^^^^^^^\n\n   Compiling hal v0.1.0 (https://github.com/Byte-OS/hal.git#6f40272c)\n   Compiling toml v0.5.11\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `ahash` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 20,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_2/kern-crates/ByteOS/kernel\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none\n   Compiling cfg-if v1.0.0\n   Compiling scopeguard v1.1.0\n   Compiling lock_api v0.4.9\n   Compiling log v0.4.17\n   Compiling bitflags v1.3.2\n   Compiling bitflags v2.4.2\n   Compiling bit_field v0.10.2\n[2024-10-09T07:33:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1522:11: 1522:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1525:13: 1525:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:33:14Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling rustversion v1.0.12\n   Compiling paste v1.0.14\n   Compiling raw-cpuid v10.7.0\n   Compiling spin v0.9.8\n   Compiling x86 v0.52.0\n   Compiling volatile v0.4.6\n   Compiling percpu v0.1.0 (https://github.com/Byte-OS/percpu.git#a71e60e3)\n   Compiling bit v0.1.1\n   Compiling irq_safety v0.1.1 (https://github.com/theseus-os/irq_safety.git#11bfab9f)\n   Compiling sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n   Compiling raw-cpuid v11.0.1\n   Compiling multiboot v0.8.0\n   Compiling x86_64 v0.14.10\n   Compiling fdt v0.1.5\n   Compiling x2apic v0.4.3\n   Compiling byteorder v1.4.3\n   Compiling linkme v0.3.22\n   Compiling polyhal v0.1.0 (https://github.com/Byte-OS/polyhal.git#78137eed)\n   Compiling zerocopy v0.7.32\n   Compiling timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling downcast-rs v1.2.0\n   Compiling vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling num-traits v0.2.16\n   Compiling frame_allocator v0.1.0 (https://github.com/Byte-OS/bit_frame_allocator.git#e401675a)\n   Compiling virtio-drivers v0.7.1 (https://github.com/rcore-os/virtio-drivers?rev=61ece50#61ece509)\n   Compiling ahash v0.8.3\n   Compiling once_cell v1.19.0\n   Compiling futures-core v0.3.28\n   Compiling num_enum v0.6.1\nerror[E0635]: unknown feature `stdsimd`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ahash-0.8.3/src/lib.rs:99:42\n   |\n99 | #![cfg_attr(feature = \"stdsimd\", feature(stdsimd))]\n   |                                          ^^^^^^^\n\n   Compiling hal v0.1.0 (https://github.com/Byte-OS/hal.git#6f40272c)\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `ahash` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/endpoint.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/endpoint.rs (original lines from 1 to 1)\n-\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/endpoint.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/endpoint.rs (original lines from 4 to 4)\n-\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/endpoint.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/endpoint.rs (original lines from 6 to 6)\n-pub fn cap_endpoint_cap_get_capCanGrantReply(cap: & cap_t) -> usize {\n+pub fn cap_endpoint_cap_get_capCanGrantReply(cap: &cap_t) -> usize {\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/endpoint.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/endpoint.rs (original lines from 9 to 9)\n-\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/endpoint.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/endpoint.rs (original lines from 30 to 30)\n+\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 1 to 1)\n-use common::{sel4_config::*, MASK, utils::pageBitsForSize, plus_define_bitfield};\n+use common::{plus_define_bitfield, sel4_config::*, utils::pageBitsForSize, MASK};\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 48 to 48)\n-    CapASIDPoolCap = 13\n+    CapASIDPoolCap = 13,\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 160 to 160)\n-            _ => { self.clone() }\n+            _ => self.clone(),\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 165 to 167)\n-        unsafe {\n-            core::mem::transmute::<u8, CapTag>(self.get_type() as u8)\n-        }\n+        unsafe { core::mem::transmute::<u8, CapTag>(self.get_type() as u8) }\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 181 to 183)\n-            _ => {\n-                0\n-            }\n+            _ => 0,\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 201 to 202)\n-            CapTag::CapUntypedCap | CapTag::CapEndpointCap | CapTag::CapNotificationCap | CapTag::CapCNodeCap | CapTag::CapFrameCap | CapTag::CapASIDPoolCap |\n-            CapTag::CapPageTableCap | CapTag::CapZombieCap | CapTag::CapThreadCap => true,\n+            CapTag::CapUntypedCap\n+            | CapTag::CapEndpointCap\n+            | CapTag::CapNotificationCap\n+            | CapTag::CapCNodeCap\n+            | CapTag::CapFrameCap\n+            | CapTag::CapASIDPoolCap\n+            | CapTag::CapPageTableCap\n+            | CapTag::CapZombieCap\n+            | CapTag::CapThreadCap => true,\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 234 to 234)\n-            false \n+            false\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 236 to 237)\n-        CapTag::CapEndpointCap | CapTag::CapNotificationCap | CapTag::CapPageTableCap | CapTag::CapASIDPoolCap \n-            | CapTag::CapThreadCap => {\n+        CapTag::CapEndpointCap\n+        | CapTag::CapNotificationCap\n+        | CapTag::CapPageTableCap\n+        | CapTag::CapASIDPoolCap\n+        | CapTag::CapThreadCap => {\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 256 to 263)\n-        CapTag::CapIrqControlCap => {\n-            match cap2.get_cap_type() {\n-                CapTag::CapIrqControlCap | CapTag::CapIrqHandlerCap => {\n-                    true\n-                }\n-                _ => false\n-            }\n-        }\n+        CapTag::CapIrqControlCap => match cap2.get_cap_type() {\n+            CapTag::CapIrqControlCap | CapTag::CapIrqHandlerCap => true,\n+            _ => false,\n+        },\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 281 to 281)\n-    if cap1.get_cap_type() == CapTag::CapIrqControlCap && cap2.get_cap_type() == CapTag::CapIrqHandlerCap {\n+    if cap1.get_cap_type() == CapTag::CapIrqControlCap\n+        && cap2.get_cap_type() == CapTag::CapIrqHandlerCap\n+    {\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 294 to 294)\n-            && (cap1.get_frame_is_device() == 0) == (cap2.get_frame_is_device() == 0)\n+            && (cap1.get_frame_is_device() == 0) == (cap2.get_frame_is_device() == 0);\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 322 to 323)\n-        \n-        _ => false\n+\n+        _ => false,\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/mod.rs (original lines from 326 to 326)\n+\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/notification.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/notification.rs (original lines from 3 to 3)\n-\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/notification.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/notification.rs (original lines from 8 to 8)\n-\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/notification.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/notification.rs (original lines from 14 to 14)\n+\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/reply.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/reply.rs (original lines from 4 to 4)\n-pub fn cap_reply_cap_new(capReplyCanGrant: usize, capReplyMaster: usize, capTCBPtr: usize) -> cap_t {\n+pub fn cap_reply_cap_new(\n+    capReplyCanGrant: usize,\n+    capReplyMaster: usize,\n+    capTCBPtr: usize,\n+) -> cap_t {\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/reply.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/reply.rs (original lines from 27 to 27)\n+\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/zombie.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/zombie.rs (original lines from 3 to 3)\n-\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/zombie.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/zombie.rs (original lines from 40 to 40)\n-\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap/zombie.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap/zombie.rs (original lines from 64 to 64)\n+\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap_rights.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap_rights.rs (original lines from 1 to 1)\n-use common::{MASK, plus_define_bitfield};\n+use common::{plus_define_bitfield, MASK};\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap_rights.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap_rights.rs (original lines from 15 to 15)\n-\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cap_rights.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cap_rights.rs (original lines from 19 to 21)\n-        Self {\n-            words: [word]\n-        }\n+        Self { words: [word] }\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 1 to 3)\n-\n-\n-use crate::{cap::{CapTag, cap_t}, interface::{cte_t, cte_insert}, cte::deriveCap_ret};\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 5 to 6)\n-  cap_endpoint_cap_get_capCanGrant, cap_endpoint_cap_get_capCanGrantReply, cap_endpoint_cap_get_capCanReceive,\n-  cap_endpoint_cap_get_capCanSend, cap_endpoint_cap_get_capEPPtr,\n+    cap_endpoint_cap_get_capCanGrant, cap_endpoint_cap_get_capCanGrantReply,\n+    cap_endpoint_cap_get_capCanReceive, cap_endpoint_cap_get_capCanSend,\n+    cap_endpoint_cap_get_capEPPtr,\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 8 to 11)\n-\n-pub use super::cap::zombie::{\n-  Zombie_new,\n-  ZombieType_ZombieTCB\n+use crate::{\n+    cap::{cap_t, CapTag},\n+    cte::deriveCap_ret,\n+    interface::{cte_insert, cte_t},\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 14 to 14)\n+pub use super::cap::zombie::{ZombieType_ZombieTCB, Zombie_new};\n+\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 15 to 16)\n-  cap_reply_cap_get_capReplyCanGrant, cap_reply_cap_get_capReplyMaster, cap_reply_cap_get_capTCBPtr, cap_reply_cap_new,\n-  cap_reply_cap_set_capReplyCanGrant,\n+    cap_reply_cap_get_capReplyCanGrant, cap_reply_cap_get_capReplyMaster,\n+    cap_reply_cap_get_capTCBPtr, cap_reply_cap_new, cap_reply_cap_set_capReplyCanGrant,\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 20 to 21)\n-  cap_notification_cap_get_capNtfnCanSend,\n-  cap_notification_cap_get_capNtfnPtr,\n+    cap_notification_cap_get_capNtfnCanSend, cap_notification_cap_get_capNtfnPtr,\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 24 to 24)\n-\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 27 to 27)\n-\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 53 to 53)\n-  panic!(\"should not be invoked!\")\n+    panic!(\"should not be invoked!\")\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 56 to 56)\n-\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 59 to 61)\n-    unsafe {\n-        cte_insert(newCap, &mut *srcSlot, &mut *destSlot)\n-    }\n+    unsafe { cte_insert(newCap, &mut *srcSlot, &mut *destSlot) }\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 67 to 69)\n-    unsafe {\n-        (&mut *slot).derive_cap(cap)\n-    }\n+    unsafe { (&mut *slot).derive_cap(cap) }\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 71 to 71)\n-\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/compatibility.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/compatibility.rs (original lines from 77 to 77)\n+\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 1 to 1)\n-use core::intrinsics::{unlikely, likely};\n+use core::intrinsics::{likely, unlikely};\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 3 to 3)\n-use common::{structures::exception_t, utils::{convert_to_type_ref, convert_to_mut_type_ref}, MASK, sel4_config::wordRadix};\n+use common::{\n+    sel4_config::wordRadix,\n+    structures::exception_t,\n+    utils::{convert_to_mut_type_ref, convert_to_type_ref},\n+    MASK,\n+};\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 5 to 7)\n-use crate::{cap::{cap_t, CapTag, same_region_as, same_object_as, is_cap_revocable, zombie::capCyclicZombie}, mdb::mdb_node_t,\n-    utils::{MAX_FREE_INDEX, resolveAddressBits_ret_t}, structures::finaliseSlot_ret,\n-    deps::{finaliseCap, preemptionPoint, post_cap_deletion}};\n+use crate::{\n+    cap::{\n+        cap_t, is_cap_revocable, same_object_as, same_region_as, zombie::capCyclicZombie, CapTag,\n+    },\n+    deps::{finaliseCap, post_cap_deletion, preemptionPoint},\n+    mdb::mdb_node_t,\n+    structures::finaliseSlot_ret,\n+    utils::{resolveAddressBits_ret_t, MAX_FREE_INDEX},\n+};\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 123 to 124)\n-                return badge == next.cap.get_ep_badge() &&\n-                    !(next.cteMDBNode.get_first_badged() != 0);\n+                return badge == next.cap.get_ep_badge()\n+                    && !(next.cteMDBNode.get_first_badged() != 0);\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 132 to 133)\n-                return badge == next.cap.get_nf_badge() &&\n-                    !(next.cteMDBNode.get_first_badged() != 0);\n+                return badge == next.cap.get_nf_badge()\n+                    && !(next.cteMDBNode.get_first_badged() != 0);\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 135 to 135)\n-            _ => true\n+            _ => true,\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 204 to 204)\n-\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 206 to 206)\n-    \n+\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 222 to 222)\n-                cap_removable(&fc_ret.remainder, self) && fc_ret.cleanupInfo.get_cap_type() == CapTag::CapNullCap\n+                cap_removable(&fc_ret.remainder, self)\n+                    && fc_ret.cleanupInfo.get_cap_type() == CapTag::CapNullCap\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 237 to 237)\n-    \n+\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 241 to 241)\n-                let first_badged = ((next_node.cteMDBNode.get_first_badged() != 0) || (mdb_node.get_first_badged() != 0)) as usize;\n+                let first_badged = ((next_node.cteMDBNode.get_first_badged() != 0)\n+                    || (mdb_node.get_first_badged() != 0))\n+                    as usize;\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 269 to 269)\n-                    if ptr == ptr2 && self.cap.get_zombie_number() == n && self.cap.get_zombie_type() == zombie_type {\n+                    if ptr == ptr2\n+                        && self.cap.get_zombie_number() == n\n+                        && self.cap.get_zombie_type() == zombie_type\n+                    {\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 273 to 273)\n-                        \n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 293 to 293)\n-       let mut next_ptr = self.cteMDBNode.get_next();\n+        let mut next_ptr = self.cteMDBNode.get_next();\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 318 to 318)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 335 to 335)\n-    \n+\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 338 to 338)\n-    src_slot.cteMDBNode.set_next(dest_slot as *const cte_t as usize);\n+    src_slot\n+        .cteMDBNode\n+        .set_next(dest_slot as *const cte_t as usize);\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 341 to 341)\n-        cte_ref.cteMDBNode.set_prev(dest_slot as *const cte_t as usize);\n+        cte_ref\n+            .cteMDBNode\n+            .set_prev(dest_slot as *const cte_t as usize);\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 348 to 349)\n-    slot.cteMDBNode = mdb_node_t::new(next as usize, 1usize, 1usize,\n-        parent as *const cte_t as usize);\n+    slot.cteMDBNode = mdb_node_t::new(\n+        next as usize,\n+        1usize,\n+        1usize,\n+        parent as *const cte_t as usize,\n+    );\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 358 to 358)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 364 to 367)\n-    assert!(\n-        dest_slot.cteMDBNode.get_next() == 0\n-            && dest_slot.cteMDBNode.get_prev() == 0\n-    );\n+    assert!(dest_slot.cteMDBNode.get_next() == 0 && dest_slot.cteMDBNode.get_prev() == 0);\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 377 to 377)\n-        prev_ref.cteMDBNode.set_next(dest_slot as *const cte_t as usize);\n+        prev_ref\n+            .cteMDBNode\n+            .set_next(dest_slot as *const cte_t as usize);\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 382 to 382)\n-        next_ref.cteMDBNode.set_prev(dest_slot as *const cte_t as usize);\n+        next_ref\n+            .cteMDBNode\n+            .set_prev(dest_slot as *const cte_t as usize);\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 393 to 393)\n-            convert_to_mut_type_ref::<cte_t>(prev_ptr).cteMDBNode.set_next(slot2 as *const cte_t as usize);\n+            convert_to_mut_type_ref::<cte_t>(prev_ptr)\n+                .cteMDBNode\n+                .set_next(slot2 as *const cte_t as usize);\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 397 to 397)\n-            convert_to_mut_type_ref::<cte_t>(next_ptr).cteMDBNode.set_prev(slot2 as *const cte_t as usize);\n+            convert_to_mut_type_ref::<cte_t>(next_ptr)\n+                .cteMDBNode\n+                .set_prev(slot2 as *const cte_t as usize);\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 410 to 410)\n-            convert_to_mut_type_ref::<cte_t>(prev_ptr).cteMDBNode.set_next(slot1 as *const cte_t as usize);\n+            convert_to_mut_type_ref::<cte_t>(prev_ptr)\n+                .cteMDBNode\n+                .set_next(slot1 as *const cte_t as usize);\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 414 to 414)\n-            convert_to_mut_type_ref::<cte_t>(next_ptr).cteMDBNode.set_prev(slot1 as *const cte_t as usize);\n+            convert_to_mut_type_ref::<cte_t>(next_ptr)\n+                .cteMDBNode\n+                .set_prev(slot1 as *const cte_t as usize);\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 419 to 419)\n-\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 438 to 438)\n-\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 447 to 449)\n-            srcSlot.cap.set_untyped_free_index(\n-                MAX_FREE_INDEX(srcCap.get_untyped_block_size())\n-            );\n+            srcSlot\n+                .cap\n+                .set_untyped_free_index(MAX_FREE_INDEX(srcCap.get_untyped_block_size()));\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 455 to 455)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 458 to 458)\n-pub fn resolve_address_bits(node_cap: &cap_t, cap_ptr: usize, _n_bits: usize) -> resolveAddressBits_ret_t {\n+pub fn resolve_address_bits(\n+    node_cap: &cap_t,\n+    cap_ptr: usize,\n+    _n_bits: usize,\n+) -> resolveAddressBits_ret_t {\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 503 to 504)\n-\n-\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 507 to 509)\n-    unsafe {\n-        (*slot).delete_one()\n-    }\n+    unsafe { (*slot).delete_one() }\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/cte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/cte.rs (original lines from 511 to 511)\n+\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/deps.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/deps.rs (original lines from 25 to 25)\n+\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/interface.rs (original lines from 1 to 1)\n-\n+pub use crate::cap::CapTag;\n+pub use crate::cap::{cap_t, same_object_as};\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/interface.rs (original lines from 4 to 5)\n-pub use crate::cap::{cap_t, same_object_as};\n-pub use crate::cap::CapTag;\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/interface.rs (original lines from 7 to 7)\n+pub use super::cte::{cte_insert, cte_move, cte_swap, cte_t, insert_new_cap, resolve_address_bits};\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/interface.rs (original lines from 8 to 8)\n-pub use super::cte::{resolve_address_bits, cte_insert, cte_t, cte_move, cte_swap, insert_new_cap};\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/lib.rs (original lines from 33 to 33)\n-\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/lib.rs (original lines from 36 to 38)\n-mod utils;\n-mod mdb;\n-mod cte;\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/lib.rs (original lines from 40 to 40)\n+mod cte;\n+mod mdb;\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/lib.rs (original lines from 41 to 41)\n+mod utils;\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/lib.rs (original lines from 42 to 44)\n-\n-/// 暴露给外部的接口\n-pub mod interface;\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/lib.rs (original lines from 47 to 47)\n+/// 暴露给外部的接口\n+pub mod interface;\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/lib.rs (original lines from 50 to 50)\n+\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/mdb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/mdb.rs (original lines from 3 to 3)\n-\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/mdb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/mdb.rs (original lines from 5 to 5)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/mdb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/mdb.rs (original lines from 7 to 7)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/structures.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/structures.rs (original lines from 5 to 5)\n-\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/structures.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/structures.rs (original lines from 23 to 23)\n-\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/structures.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/structures.rs (original lines from 40 to 40)\n+\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/utils.rs (original lines from 1 to 1)\n-use common::{sel4_config::seL4_MinUntypedBits, BIT, structures::exception_t};\n+use common::{sel4_config::seL4_MinUntypedBits, structures::exception_t, BIT};\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_2/kern-crates/CSpace/src/utils.rs (original lines from 4 to 4)\n-\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `core_intrinsics` is internal to the compiler or standard library\n --> src/lib.rs:1:12\n  |\n1 | #![feature(core_intrinsics)]\n  |            ^^^^^^^^^^^^^^^\n  |\n  = note: using it is strongly discouraged\n  = note: `#[warn(internal_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused doc comment\n  --> src/cap/mod.rs:51:1\n   |\n51 | / /// cap_t 表示一个capability，由两个机器字组成，包含了类型、对象元数据以及指向内核对象的指针。\n52 | | /// 每个类型的capability的每个字段都实现了get和set方法。\n   | |_-------------------------------------------------------^\n   |   |\n   |   rustdoc does not generate documentation for macro invocations\n   |\n   = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\n   = note: `#[warn(unused_doc_comments)]` on by default\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/mdb.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused doc comment\n --> src/mdb.rs:4:1\n  |\n4 | / /// 两个机器字组成，维护一个双向链表，其中还有revocable和firstbadged两个标志位字段。\n5 | | /// \n6 | | /// revocable：可以在不通知对象持有者的情况下被删除或撤销。\n7 | | /// \n8 | | /// firstbadged：表示此能力是否是具有相同对象和相同类型的一组能力中的第一个被赋予badge的能力。\n  | |_---------------------------------------------------------------------------------------------^\n  |   |\n  |   rustdoc does not generate documentation for macro invocations\n  |\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `else { if .. }` block can be collapsed\n   --> src/cte.rs:150:16\n    |\n150 |           } else {\n    |  ________________^\n151 | |             if mdb.get_next() == 0 {\n152 | |                 true\n153 | |             } else {\n...   |\n156 | |             }\n157 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\n    = note: `#[warn(clippy::collapsible_else_if)]` on by default\nhelp: collapse nested if block\n    |\n150 ~         } else if mdb.get_next() == 0 {\n151 +             true\n152 +         } else {\n153 +             let next = convert_to_type_ref::<cte_t>(mdb.get_next());\n154 +             return !same_object_as(&self.cap, &next.cap);\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cap/zombie.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/cap/zombie.rs:19:9\n   |\n19 |         return ZombieType_ZombieCNode(_type);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n   = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n   |\n19 -         return ZombieType_ZombieCNode(_type);\n19 +         ZombieType_ZombieCNode(_type)\n   |\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cap/zombie.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/cap/zombie.rs:25:9\n   |\n25 |         return self.get_zombie_id() & !MASK!(radix + 1);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n   |\n25 -         return self.get_zombie_id() & !MASK!(radix + 1);\n25 +         self.get_zombie_id() & !MASK!(radix + 1)\n   |\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cap/zombie.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/cap/zombie.rs:31:9\n   |\n31 |         return self.get_zombie_id() & MASK!(radix + 1);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n   |\n31 -         return self.get_zombie_id() & MASK!(radix + 1);\n31 +         self.get_zombie_id() & MASK!(radix + 1)\n   |\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cap/zombie.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/cap/zombie.rs:51:5\n   |\n51 |     return cap_t::new_zombie_cap((ptr & !mask) | (number & mask), _type);\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n   |\n51 -     return cap_t::new_zombie_cap((ptr & !mask) | (number & mask), _type);\n51 +     cap_t::new_zombie_cap((ptr & !mask) | (number & mask), _type)\n   |\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cap/zombie.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded late initialization\n  --> src/cap/zombie.rs:45:5\n   |\n45 |     let mask: usize;\n   |     ^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init\n   = note: `#[warn(clippy::needless_late_init)]` on by default\nhelp: move the declaration `mask` here and remove the assignments from the branches\n   |\n45 ~     \n46 ~     let mask: usize = if _type == ZombieType_ZombieTCB {\n47 ~         MASK!(TCB_CNODE_RADIX + 1)\n48 |     } else {\n49 ~         MASK!(_type + 1)\n50 ~     };\n   |\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cap/zombie.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/cap/zombie.rs:55:5\n   |\n55 |     return n & MASK!(wordRadix);\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n   |\n55 -     return n & MASK!(wordRadix);\n55 +     n & MASK!(wordRadix)\n   |\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cap/mod.rs:125:20\n    |\n125 |             return self.clone();\n    |                    ^^^^^^^^^^^^ help: try dereferencing it: `*self`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n    = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cap/mod.rs:130:39\n    |\n130 |                     let mut new_cap = self.clone();\n    |                                       ^^^^^^^^^^^^ help: try dereferencing it: `*self`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cap/mod.rs:140:39\n    |\n140 |                     let mut new_cap = self.clone();\n    |                                       ^^^^^^^^^^^^ help: try dereferencing it: `*self`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cap/mod.rs:155:35\n    |\n155 |                 let mut new_cap = self.clone();\n    |                                   ^^^^^^^^^^^^ help: try dereferencing it: `*self`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cap/mod.rs:160:20\n    |\n160 |             _ => { self.clone() }\n    |                    ^^^^^^^^^^^^ help: try dereferencing it: `*self`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: match expression looks like `matches!` macro\n   --> src/cap/mod.rs:200:9\n    |\n200 | / ...   match self.get_cap_type() {\n201 | | ...       CapTag::CapUntypedCap | CapTag::CapEndpointCap | CapTag::CapNotificationCap | CapTag::CapCNodeCap | CapTag::CapFrameCap | CapTa...\n202 | | ...       CapTag::CapPageTableCap | CapTag::CapZombieCap | CapTag::CapThreadCap => true,\n203 | | ...       _ => false,\n204 | | ...   }\n    | |_______^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro\n    = note: `#[warn(clippy::match_like_matches_macro)]` on by default\nhelp: try\n    |\n200 ~         matches!(self.get_cap_type(), CapTag::CapUntypedCap | CapTag::CapEndpointCap | CapTag::CapNotificationCap | CapTag::CapCNodeCap | CapTag::CapFrameCap | CapTag::CapASIDPoolCap |\n201 +             CapTag::CapPageTableCap | CapTag::CapZombieCap | CapTag::CapThreadCap)\n    |\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cap/mod.rs:224:13\n    |\n224 |             return false;\n    |             ^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n224 -             return false;\n224 +             false\n    |\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cap/mod.rs:271:13\n    |\n271 |             return false;\n    |             ^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n271 -             return false;\n271 +             false\n    |\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: match expression looks like `matches!` macro\n   --> src/cap/mod.rs:257:13\n    |\n257 | /             match cap2.get_cap_type() {\n258 | |                 CapTag::CapIrqControlCap | CapTag::CapIrqHandlerCap => {\n259 | |                     true\n260 | |                 }\n261 | |                 _ => false\n262 | |             }\n    | |_____________^ help: try: `matches!(cap2.get_cap_type(), CapTag::CapIrqControlCap | CapTag::CapIrqHandlerCap)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cap/mod.rs:307:13\n    |\n307 |             return derived_cap.get_ep_badge() != src_cap.get_ep_badge();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n307 -             return derived_cap.get_ep_badge() != src_cap.get_ep_badge();\n307 +             derived_cap.get_ep_badge() != src_cap.get_ep_badge()\n    |\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cap/mod.rs:312:13\n    |\n312 |             return derived_cap.get_nf_badge() != src_cap.get_nf_badge();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n312 -             return derived_cap.get_nf_badge() != src_cap.get_nf_badge();\n312 +             derived_cap.get_nf_badge() != src_cap.get_nf_badge()\n    |\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cap/mod.rs:316:13\n    |\n316 |             return src_cap.get_cap_type() == CapTag::CapIrqControlCap;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n316 -             return src_cap.get_cap_type() == CapTag::CapIrqControlCap;\n316 +             src_cap.get_cap_type() == CapTag::CapIrqControlCap\n    |\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cap/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cap/mod.rs:320:13\n    |\n320 |             return true;\n    |             ^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n320 -             return true;\n320 +             true\n    |\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/utils.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `0 as *mut _` detected\n  --> src/utils.rs:22:19\n   |\n22 |             slot: 0 as *mut cte_t,\n   |                   ^^^^^^^^^^^^^^^ help: try: `core::ptr::null_mut::<cte_t>()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr\n   = note: `#[warn(clippy::zero_ptr)]` on by default\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n  --> src/cte.rs:51:31\n   |\n51 |                     ret.cap = cap.clone();\n   |                               ^^^^^^^^^^^ help: try dereferencing it: `*cap`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n  --> src/cte.rs:61:27\n   |\n61 |                 ret.cap = cap.clone();\n   |                           ^^^^^^^^^^^ help: try dereferencing it: `*cap`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n  --> src/cte.rs:75:31\n   |\n75 |                     ret.cap = cap.clone();\n   |                               ^^^^^^^^^^^ help: try dereferencing it: `*cap`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n  --> src/cte.rs:83:34\n   |\n83 |                 let mut newCap = cap.clone();\n   |                                  ^^^^^^^^^^^ help: try dereferencing it: `*cap`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n  --> src/cte.rs:89:27\n   |\n89 |                 ret.cap = cap.clone();\n   |                           ^^^^^^^^^^^ help: try dereferencing it: `*cap`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cte.rs:105:9\n    |\n105 |         return exception_t::EXCEPTION_NONE;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n105 -         return exception_t::EXCEPTION_NONE;\n105 +         exception_t::EXCEPTION_NONE\n    |\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/cte.rs:109:12\n    |\n109 |         if !(self.cteMDBNode.get_revocable() != 0) {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.cteMDBNode.get_revocable() == 0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/cte.rs:124:21\n    |\n124 |                     !(next.cteMDBNode.get_first_badged() != 0);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `next.cteMDBNode.get_first_badged() == 0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/cte.rs:133:21\n    |\n133 |                     !(next.cteMDBNode.get_first_badged() != 0);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `next.cteMDBNode.get_first_badged() == 0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cte.rs:123:17\n    |\n123 | /                 return badge == next.cap.get_ep_badge() &&\n124 | |                     !(next.cteMDBNode.get_first_badged() != 0);\n    | |______________________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n123 ~                 badge == next.cap.get_ep_badge() &&\n124 ~                     !(next.cteMDBNode.get_first_badged() != 0)\n    |\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cte.rs:132:17\n    |\n132 | /                 return badge == next.cap.get_nf_badge() &&\n133 | |                     !(next.cteMDBNode.get_first_badged() != 0);\n    | |______________________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n132 ~                 badge == next.cap.get_nf_badge() &&\n133 ~                     !(next.cteMDBNode.get_first_badged() != 0)\n    |\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cte.rs:155:17\n    |\n155 |                 return !same_object_as(&self.cap, &next.cap);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n155 -                 return !same_object_as(&self.cap, &next.cap);\n155 +                 !same_object_as(&self.cap, &next.cap)\n    |\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: match expression looks like `matches!` macro\n   --> src/cte.rs:164:9\n    |\n164 | /         match self.cap.get_cap_type() {\n165 | |             CapTag::CapThreadCap | CapTag::CapZombieCap | CapTag::CapCNodeCap => true,\n166 | |             _ => false,\n167 | |         }\n    | |_________^ help: try: `matches!(self.cap.get_cap_type(), CapTag::CapThreadCap | CapTag::CapZombieCap | CapTag::CapCNodeCap)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cte.rs:215:9\n    |\n215 |         return exception_t::EXCEPTION_NONE;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n215 -         return exception_t::EXCEPTION_NONE;\n215 +         exception_t::EXCEPTION_NONE\n    |\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cte.rs:313:9\n    |\n313 |         return exception_t::EXCEPTION_NONE;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n313 -         return exception_t::EXCEPTION_NONE;\n313 +         exception_t::EXCEPTION_NONE\n    |\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `mdb_node_t` which implements the `Copy` trait\n   --> src/cte.rs:323:22\n    |\n323 |     let mut newMDB = srcMDB.clone();\n    |                      ^^^^^^^^^^^^^^ help: try dereferencing it: `*srcMDB`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cte.rs:336:24\n    |\n336 |     (*dest_slot).cap = new_cap.clone();\n    |                        ^^^^^^^^^^^^^^^ help: try dereferencing it: `*new_cap`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: deref which would be done by auto-deref\n   --> src/cte.rs:336:5\n    |\n336 |     (*dest_slot).cap = new_cap.clone();\n    |     ^^^^^^^^^^^^ help: try: `dest_slot`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref\n    = note: `#[warn(clippy::explicit_auto_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: deref which would be done by auto-deref\n   --> src/cte.rs:337:5\n    |\n337 |     (*dest_slot).cteMDBNode = newMDB;\n    |     ^^^^^^^^^^^^ help: try: `dest_slot`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cte.rs:347:16\n    |\n347 |     slot.cap = cap.clone();\n    |                ^^^^^^^^^^^ help: try dereferencing it: `*cap`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/cte.rs:348:39\n    |\n348 |     slot.cteMDBNode = mdb_node_t::new(next as usize, 1usize, 1usize,\n    |                                       ^^^^^^^^^^^^^ help: try: `next`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cte.rs:369:21\n    |\n369 |     dest_slot.cap = new_cap.clone();\n    |                     ^^^^^^^^^^^^^^^ help: try dereferencing it: `*new_cap`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cte.rs:401:17\n    |\n401 |     slot1.cap = cap2.clone();\n    |                 ^^^^^^^^^^^^ help: try dereferencing it: `*cap2`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cte.rs:404:17\n    |\n404 |     slot2.cap = cap1.clone();\n    |                 ^^^^^^^^^^^^ help: try dereferencing it: `*cap1`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cte.rs:424:13\n    |\n424 |             return true;\n    |             ^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n424 -             return true;\n424 +             true\n    |\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/cte.rs:430:13\n    |\n430 |             return n == 0 || (n == 1 && slot == z_slot);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n430 -             return n == 0 || (n == 1 && slot == z_slot);\n430 +             n == 0 || (n == 1 && slot == z_slot)\n    |\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cte.rs:462:23\n    |\n462 |     let mut nodeCap = node_cap.clone();\n    |                       ^^^^^^^^^^^^^^^^ help: try dereferencing it: `*node_cap`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `cap_t` which implements the `Copy` trait\n   --> src/cte.rs:493:28\n    |\n493 |         nodeCap = unsafe { (*slot).cap.clone() };\n    |                            ^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `(*slot).cap`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cte.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/cte.rs:508:11\n    |\n508 |         (*slot).delete_one()\n    |           ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/cap_rights.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n  --> src/cap_rights.rs:26:9\n   |\n26 |         self.words[0] as usize & MASK!(seL4_CapRightsBits)\n   |         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.words[0]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/structures.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n  --> src/structures.rs:32:1\n   |\n32 | / impl Default for finaliseCap_ret {\n33 | |     fn default() -> Self {\n34 | |         finaliseCap_ret {\n35 | |             remainder: cap_t::default(),\n...  |\n38 | |     }\n39 | | }\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n   = note: `#[warn(clippy::derivable_impls)]` on by default\n   = help: remove the manual implementation...\nhelp: ...and instead derive it\n   |\n27 + #[derive(Default)]\n28 | pub struct finaliseCap_ret {\n   |\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/compatibility.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n  --> src/compatibility.rs:60:34\n   |\n60 |         cte_insert(newCap, &mut *srcSlot, &mut *destSlot)\n   |                                  ^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/compatibility.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n  --> src/compatibility.rs:60:49\n   |\n60 |         cte_insert(newCap, &mut *srcSlot, &mut *destSlot)\n   |                                                 ^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/compatibility.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n  --> src/compatibility.rs:68:16\n   |\n68 |         (&mut *slot).derive_cap(cap)\n   |                ^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/compatibility.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression borrows a value the compiler would automatically borrow\n  --> src/compatibility.rs:68:9\n   |\n68 |         (&mut *slot).derive_cap(cap)\n   |         ^^^^^^^^^^^^ help: change this to: `(*slot)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 24,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-09T07:33:32Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:33:32Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-09T07:33:36Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:33:36Z WARN  lockbud::callbacks] crate riscv_target contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 25,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=cspace, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_2/kern-crates/CSpace\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/CtrlZ233/rel4_comm.git`\n    Updating crates.io index\n    Updating git repository `https://gitee.com/rcore-os/riscv`\n     Locking 16 packages to latest compatible versions\n   Compiling memchr v2.7.4\n   Compiling regex-syntax v0.8.5\n   Compiling semver-parser v0.7.0\n   Compiling lazy_static v1.5.0\n    Checking log v0.4.22\n   Compiling semver v0.9.0\n   Compiling rustc_version v0.2.3\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling aho-corasick v1.1.3\n   Compiling bare-metal v0.2.5\n   Compiling regex-automata v0.4.8\n   Compiling regex v1.11.0\n   Compiling riscv-target v0.1.2\n   Compiling riscv v0.6.0 (https://gitee.com/rcore-os/riscv#11d43cf7)\n    Checking common v0.1.0 (https://github.com/CtrlZ233/rel4_comm.git?branch=main#74acf0cc)\n    Checking cspace v0.1.0 (/home/runner/check/batch_2/kern-crates/CSpace)\nerror: could not compile `cspace` (lib) due to 4 previous errors; 55 warnings emitted\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: function `align_down` is never used\n   --> src/lib.rs:126:10\n    |\n126 | const fn align_down(pos: usize, align: usize) -> usize {\n    |          ^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: function `align_up` is never used\n   --> src/lib.rs:131:10\n    |\n131 | const fn align_up(pos: usize, align: usize) -> usize {\n    |          ^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 31,
      "file": "/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs",
      "kind": "Clippy(Error)",
      "raw": "error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 33,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-09T07:33:58Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:33:58Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 34,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos_api, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_2/kern-crates/arceos_api\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/axalloc.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/axdisplay.git`\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating git repository `https://github.com/Starry-OS/axfeat.git`\n    Updating git repository `https://github.com/Starry-OS/axfs.git`\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating git repository `https://github.com/Starry-OS/axio.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/axnet.git`\n    Updating git repository `https://github.com/Starry-OS/axruntime.git`\n    Updating git repository `https://github.com/Starry-OS/axtask.git`\n    Updating git repository `https://github.com/Starry-OS/allocator.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/axdriver.git`\n    Updating git repository `https://github.com/Starry-OS/axsync.git`\n    Updating git repository `https://github.com/Starry-OS/driver_display.git`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_devfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_ramfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_vfs.git`\n    Updating git repository `https://github.com/Starry-OS/capability.git`\n    Updating git repository `https://github.com/Starry-OS/driver_block.git`\n    Updating git repository `https://github.com/rafalh/rust-fatfs`\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/Starry-OS/driver_net.git`\n    Updating git repository `https://github.com/rcore-os/smoltcp.git`\n    Updating git repository `https://github.com/kern-crates/axbacktrace.git`\n    Updating git repository `https://github.com/Starry-OS/axsignal.git`\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/Starry-OS/scheduler.git`\n    Updating git repository `https://github.com/Starry-OS/timer_list.git`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n    Updating git repository `https://github.com/Starry-OS/driver_common.git`\n    Updating git repository `https://github.com/Starry-OS/driver_pci.git`\n    Updating git repository `https://github.com/Starry-OS/driver_virtio.git`\n    Updating git repository `https://github.com/Starry-OS/page_table.git`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n     Locking 119 packages to latest compatible versions\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.15.0\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.87\n   Compiling indexmap v2.6.0\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking log v0.4.22\n   Compiling autocfg v1.4.0\n   Compiling unicode-ident v1.0.13\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n    Checking scopeguard v1.2.0\n    Checking bitflags v2.6.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling syn v2.0.79\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 35,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos_api, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_2/kern-crates/arceos_api\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling hashbrown v0.15.0\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling bit_field v0.10.2\n   Compiling bitflags v1.3.2\n   Compiling proc-macro2 v1.0.87\n   Compiling indexmap v2.6.0\n   Compiling raw-cpuid v10.7.0\n   Compiling autocfg v1.4.0\n   Compiling unicode-ident v1.0.13\n   Compiling toml_edit v0.22.22\n   Compiling log v0.4.22\n   Compiling x86 v0.52.0\n[2024-10-09T07:33:58Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:33:58Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling lock_api v0.4.12\n   Compiling cfg-if v1.0.0\n   Compiling rustversion v1.0.17\n   Compiling quote v1.0.37\n   Compiling scopeguard v1.2.0\n   Compiling bitflags v2.6.0\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling syn v2.0.79\n   Compiling volatile v0.4.6\n   Compiling static_assertions v1.1.0\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling aarch64-cpu v9.4.0\n   Compiling lazy_static v1.5.0\n   Compiling x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 37,
      "file": "/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs",
      "kind": "Clippy(Error)",
      "raw": "error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-09T07:34:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:34:21Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 40,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos_posix_api, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_2/kern-crates/arceos_posix_api\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/axalloc.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating git repository `https://github.com/Starry-OS/axfeat.git`\n    Updating git repository `https://github.com/Starry-OS/axfs.git`\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating git repository `https://github.com/Starry-OS/axio.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/axnet.git`\n    Updating git repository `https://github.com/Starry-OS/axruntime.git`\n    Updating git repository `https://github.com/Starry-OS/axsync.git`\n    Updating git repository `https://github.com/Starry-OS/axtask.git`\n    Updating git repository `https://github.com/Starry-OS/flatten_objects.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/allocator.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/axdriver.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_devfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_ramfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_vfs.git`\n    Updating git repository `https://github.com/Starry-OS/capability.git`\n    Updating git repository `https://github.com/Starry-OS/driver_block.git`\n    Updating git repository `https://github.com/rafalh/rust-fatfs`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/Starry-OS/driver_net.git`\n    Updating git repository `https://github.com/rcore-os/smoltcp.git`\n    Updating git repository `https://github.com/kern-crates/axbacktrace.git`\n    Updating git repository `https://github.com/Starry-OS/axsignal.git`\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/Starry-OS/scheduler.git`\n    Updating git repository `https://github.com/Starry-OS/timer_list.git`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n    Updating git repository `https://github.com/Starry-OS/driver_common.git`\n    Updating git repository `https://github.com/Starry-OS/driver_pci.git`\n    Updating git repository `https://github.com/Starry-OS/driver_virtio.git`\n    Updating git repository `https://github.com/Starry-OS/page_table.git`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n     Locking 151 packages to latest compatible versions\n      Adding bindgen v0.66.1 (available: v0.70.1)\n Downloading crates ...\n  Downloaded peeking_take_while v0.1.2\n  Downloaded prettyplease v0.2.22\n  Downloaded bindgen v0.66.1\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.0\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.87\n   Compiling toml_datetime v0.6.8\n   Compiling unicode-ident v1.0.13\n   Compiling indexmap v2.6.0\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.37\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling syn v2.0.79\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n    Checking log v0.4.22\n   Compiling x86 v0.52.0\n   Compiling lock_api v0.4.12\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.17\n    Checking bitflags v2.6.0\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 41,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos_posix_api, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_2/kern-crates/arceos_posix_api\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.15.0\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.87\n   Compiling toml_datetime v0.6.8\n   Compiling unicode-ident v1.0.13\n   Compiling indexmap v2.6.0\n   Compiling bit_field v0.10.2\n   Compiling quote v1.0.37\n   Compiling bitflags v1.3.2\n   Compiling raw-cpuid v10.7.0\n   Compiling syn v2.0.79\n   Compiling toml_edit v0.22.22\n   Compiling x86 v0.52.0\n   Compiling log v0.4.22\n[2024-10-09T07:34:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:34:21Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling autocfg v1.4.0\n   Compiling cfg-if v1.0.0\n   Compiling rustversion v1.0.17\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling scopeguard v1.2.0\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling bitflags v2.6.0\n   Compiling static_assertions v1.1.0\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling volatile v0.4.6\n   Compiling spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling lazy_static v1.5.0\n   Compiling x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 43,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `const_ptr_as_ref` has been stable since 1.83.0-nightly and no longer requires an attribute to enable\n  --> src/lib.rs:14:12\n   |\n14 | #![feature(const_ptr_as_ref)]\n   |            ^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 43,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> src/lib.rs:11:5\n   |\n11 | //! Please contact the developer if you need this function\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\n   = note: `#[warn(clippy::doc_lazy_continuation)]` on by default\nhelp: indent this line\n   |\n11 | //!    Please contact the developer if you need this function\n   |     +++\n\n"
    },
    {
      "cmd_idx": 43,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: first doc comment paragraph is too long\n   --> src/lib.rs:174:1\n    |\n174 | / /// [`GenericArmGic`].\n175 | | /// It is used to implement the interface abstraction that the interrupt chip\n176 | | /// driver should provide to the outside world.\n177 | | /// I hope that the versatility of the driver interface should support more chip architectures.\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n    = note: `#[warn(clippy::too_long_first_doc_paragraph)]` on by default\nhelp: add an empty line\n    |\n174 ~ /// [`GenericArmGic`].\n175 + ///\n    |\n\n"
    },
    {
      "cmd_idx": 46,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=arm_gic, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_2/kern-crates/arm_gic\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling tock-registers v0.8.1\n   Compiling bitflags v2.6.0\n   Compiling cfg-if v1.0.0\n   Compiling aarch64-cpu v9.4.0\n   Compiling arm_gic v0.1.0 (/home/runner/check/batch_2/kern-crates/arm_gic)\nerror: invalid instruction mnemonic 'msr'\n  --> src/sysregs.rs:22:17\n   |\n22 |                 concat!(\"msr \", ::core::stringify!($name), \", {value}\"),\n   |                 ^\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:2:2\n   |\n2  |     msr icc_sre_el1, rax\n   |     ^^^\n\nerror: invalid instruction mnemonic 'msr'\n  --> src/sysregs.rs:22:17\n   |\n22 |                 concat!(\"msr \", ::core::stringify!($name), \", {value}\"),\n   |                 ^\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:2:2\n   |\n2  |     msr icc_pmr_el1, rax\n   |     ^^^\n\nerror: invalid instruction mnemonic 'msr'\n  --> src/sysregs.rs:22:17\n   |\n22 |                 concat!(\"msr \", ::core::stringify!($name), \", {value}\"),\n   |                 ^\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:2:2\n   |\n2  |     msr icc_ctlr_el1, rax\n   |     ^^^\n\nerror: invalid instruction mnemonic 'msr'\n  --> src/sysregs.rs:22:17\n   |\n22 |                 concat!(\"msr \", ::core::stringify!($name), \", {value}\"),\n   |                 ^\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:2:2\n   |\n2  |     msr icc_igrpen1_el1, rax\n   |     ^^^\n\nerror: invalid instruction mnemonic 'mrs'\n --> src/sysregs.rs:6:17\n  |\n6 |                 concat!(\"mrs {value}, \", ::core::stringify!($name)),\n  |                 ^\n  |\nnote: instantiated into assembly here\n --> <inline asm>:2:2\n  |\n2 |     mrs rax, icc_iar1_el1\n  |     ^^^\n\nerror: invalid instruction mnemonic 'msr'\n  --> src/sysregs.rs:22:17\n   |\n22 |                 concat!(\"msr \", ::core::stringify!($name), \", {value}\"),\n   |                 ^\n   |\nnote: instantiated into assembly here\n  --> <inline asm>:2:2\n   |\n2  |     msr icc_eoir1_el1, rsi\n   |     ^^^\n\nerror: could not compile `arm_gic` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `const_ptr_as_ref` has been stable since 1.83.0-nightly and no longer requires an attribute to enable\n --> src/lib.rs:4:12\n  |\n4 | #![feature(const_ptr_as_ref)]\n  |            ^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 52,
      "file": "/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs",
      "kind": "Clippy(Error)",
      "raw": "error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 54,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-09T07:34:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:34:52Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 55,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axalloc, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_2/kern-crates/axalloc\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/allocator.git`\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n    Updating git repository `https://github.com/arceos-org/slab_allocator.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n     Locking 41 packages to latest compatible versions\n   Compiling hashbrown v0.15.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling proc-macro2 v1.0.87\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling unicode-ident v1.0.13\n    Checking bit_field v0.10.2\n   Compiling indexmap v2.6.0\n    Checking bitflags v1.3.2\n   Compiling x86 v0.52.0\n   Compiling syn v1.0.109\n    Checking cfg-if v1.0.0\n    Checking raw-cpuid v10.7.0\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n    Checking log v0.4.22\n   Compiling libc v0.2.159\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling unicode-width v0.1.14\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling base64 v0.13.1\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 56,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axalloc, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_2/kern-crates/axalloc\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.15.0\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.87\n   Compiling bit_field v0.10.2\n   Compiling indexmap v2.6.0\n   Compiling unicode-ident v1.0.13\n   Compiling bitflags v1.3.2\n   Compiling cfg-if v1.0.0\n   Compiling x86 v0.52.0\n   Compiling syn v1.0.109\n   Compiling raw-cpuid v10.7.0\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling libc v0.2.159\n   Compiling log v0.4.22\n[2024-10-09T07:34:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-09T07:34:52Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling base64 v0.13.1\n   Compiling static_assertions v1.1.0\n   Compiling unicode-width v0.1.14\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling const-default v1.0.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    }
  ]
}