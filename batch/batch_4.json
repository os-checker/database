{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.83.0-nightly (d6c8169c1 2024-09-03)",
          "commit_hash": "d6c8169c186ab16a3404cd0d0866674018e8a19e",
          "commit_date": "2024-09-03",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.83.0-nightly",
          "llvm_version": "19.1.0"
        },
        "installed": [
          {
            "channel": "nightly-x86_64-unknown-linux-gnu (default)",
            "profile": null,
            "targets": [
              "aarch64-unknown-none",
              "aarch64-unknown-none-softfloat",
              "loongarch64-unknown-none",
              "riscv64gc-unknown-none-elf",
              "riscv64imac-unknown-none-elf",
              "x86_64-unknown-linux-gnu",
              "x86_64-unknown-none"
            ],
            "components": [
              "aarch64-unknown-none",
              "aarch64-unknown-none-softfloat",
              "loongarch64-unknown-none",
              "riscv64gc-unknown-none-elf",
              "riscv64imac-unknown-none-elf",
              "x86_64-unknown-linux-gnu",
              "x86_64-unknown-none"
            ],
            "toml_path": ""
          }
        ]
      },
      "os_checker": {
        "start": 1725462366688,
        "finish": 1725462433545,
        "duration_ms": 66857,
        "git_time": "2024-09-04 22:45:40 +0800",
        "git_sha": "5301d69d01f38a4ed58775b734a29b3715c34c80"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "kern-crates",
        "repo": "axfs_vfs",
        "rust_toolchain_idxs": []
      },
      {
        "user": "kern-crates",
        "repo": "axhal",
        "rust_toolchain_idxs": []
      },
      {
        "user": "kern-crates",
        "repo": "axio",
        "rust_toolchain_idxs": []
      },
      {
        "user": "kern-crates",
        "repo": "axlog",
        "rust_toolchain_idxs": []
      },
      {
        "user": "kern-crates",
        "repo": "axmem",
        "rust_toolchain_idxs": []
      },
      {
        "user": "kern-crates",
        "repo": "axnet",
        "rust_toolchain_idxs": []
      },
      {
        "user": "kern-crates",
        "repo": "axprocess",
        "rust_toolchain_idxs": []
      },
      {
        "user": "kern-crates",
        "repo": "axruntime",
        "rust_toolchain_idxs": []
      }
    ],
    "packages": [
      {
        "name": "axfs_vfs",
        "repo": {
          "repo_idx": 0,
          "user": "kern-crates",
          "repo": "axfs_vfs"
        },
        "rust_toolchain_idx": null
      },
      {
        "name": "axhal",
        "repo": {
          "repo_idx": 1,
          "user": "kern-crates",
          "repo": "axhal"
        },
        "rust_toolchain_idx": null
      },
      {
        "name": "axio",
        "repo": {
          "repo_idx": 2,
          "user": "kern-crates",
          "repo": "axio"
        },
        "rust_toolchain_idx": null
      },
      {
        "name": "axlog",
        "repo": {
          "repo_idx": 3,
          "user": "kern-crates",
          "repo": "axlog"
        },
        "rust_toolchain_idx": null
      },
      {
        "name": "axmem",
        "repo": {
          "repo_idx": 4,
          "user": "kern-crates",
          "repo": "axmem"
        },
        "rust_toolchain_idx": null
      },
      {
        "name": "axnet",
        "repo": {
          "repo_idx": 5,
          "user": "kern-crates",
          "repo": "axnet"
        },
        "rust_toolchain_idx": null
      },
      {
        "name": "axprocess",
        "repo": {
          "repo_idx": 6,
          "user": "kern-crates",
          "repo": "axprocess"
        },
        "rust_toolchain_idx": null
      },
      {
        "name": "axruntime",
        "repo": {
          "repo_idx": 7,
          "user": "kern-crates",
          "repo": "axruntime"
        },
        "rust_toolchain_idx": null
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo fmt -p axfs_vfs -- --emit=json",
      "count": 0,
      "duration_ms": 228,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 5437,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1392,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo fmt -p axhal -- --emit=json",
      "count": 0,
      "duration_ms": 487,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 9733,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 29327,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=1 cargo",
      "count": 2,
      "duration_ms": 39060,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo fmt -p axio -- --emit=json",
      "count": 0,
      "duration_ms": 233,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 5546,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1223,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo fmt -p axlog -- --emit=json",
      "count": 0,
      "duration_ms": 233,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 6516,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 24417,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=1 cargo",
      "count": 2,
      "duration_ms": 30933,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo fmt -p axmem -- --emit=json",
      "count": 0,
      "duration_ms": 241,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 6798,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 31025,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "cargo",
      "cmd": "VRITUAL=1 cargo",
      "count": 2,
      "duration_ms": 37823,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo fmt -p axnet -- --emit=json",
      "count": 0,
      "duration_ms": 749,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 9686,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 16963,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=1 cargo",
      "count": 2,
      "duration_ms": 26649,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo fmt -p axprocess -- --emit=json",
      "count": 3,
      "duration_ms": 372,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 10023,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 32288,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "cargo",
      "cmd": "VRITUAL=1 cargo",
      "count": 2,
      "duration_ms": 42311,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo fmt -p axruntime -- --emit=json",
      "count": 0,
      "duration_ms": 919,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 8195,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 22977,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "cargo",
      "cmd": "VRITUAL=1 cargo",
      "count": 2,
      "duration_ms": 31172,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 4,
      "file": "/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs",
      "kind": "Clippy(Error)",
      "raw": "error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axhal, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axhal\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/axalloc.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_ramfs.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/Starry-OS/allocator.git`\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_vfs.git`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n    Blocking waiting for file lock on package cache\n     Locking 78 packages to latest compatible versions\n      Adding base64 v0.13.1 (latest: v0.22.1)\n      Adding bitflags v1.3.2 (latest: v2.6.0)\n      Adding embedded-hal v0.2.7 (latest: v1.0.0)\n      Adding nb v0.1.3 (latest: v1.1.0)\n      Adding raw-cpuid v10.7.0 (latest: v11.1.0)\n      Adding riscv v0.10.1 (latest: v0.11.1)\n      Adding sbi-rt v0.0.2 (latest: v0.0.3)\n      Adding sbi-spec v0.0.4 (latest: v0.0.7)\n      Adding syn v1.0.109 (latest: v2.0.77)\n      Adding tock-registers v0.8.1 (latest: v0.9.0)\n      Adding volatile v0.4.6 (latest: v0.6.1)\n      Adding x86_64 v0.14.12 (latest: v0.15.1)\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.209\n   Compiling hashbrown v0.14.5\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n    Checking bit_field v0.10.2\n   Compiling indexmap v2.5.0\n   Compiling proc-macro2 v1.0.86\n    Checking bitflags v1.3.2\n   Compiling toml_edit v0.22.20\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.12\n   Compiling autocfg v1.3.0\n   Compiling x86 v0.52.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\n   Compiling rustversion v1.0.17\nerror: could not compile `axconfig` (build script) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 6,
      "file": "lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axhal, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axhal\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n   Compiling serde v1.0.209\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n   Compiling bitflags v1.3.2\n   Compiling raw-cpuid v10.7.0\n   Compiling indexmap v2.5.0\n   Compiling autocfg v1.3.0\n   Compiling toml_edit v0.22.20\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.12\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\n   Compiling quote v1.0.37\n   Compiling bitflags v2.6.0\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling scopeguard v1.2.0\n   Compiling cfg-if v1.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling syn v2.0.77\n   Compiling log v0.4.22\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling volatile v0.4.6\n   Compiling static_assertions v1.1.0\n   Compiling spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling lazy_static v1.5.0\n   Compiling x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 11,
      "file": "/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs",
      "kind": "Clippy(Error)",
      "raw": "error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axlog, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axlog\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Blocking waiting for file lock on package cache\n     Locking 59 packages to latest compatible versions\n      Adding bitflags v1.3.2 (latest: v2.6.0)\n      Adding raw-cpuid v10.7.0 (latest: v11.1.0)\n      Adding tock-registers v0.8.1 (latest: v0.9.0)\n      Adding windows-core v0.52.0 (latest: v0.58.0)\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n   Compiling serde v1.0.209\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.5.0\n   Compiling x86 v0.52.0\n   Compiling proc-macro2 v1.0.86\n    Checking bitflags v1.3.2\n   Compiling toml_edit v0.22.20\n    Checking raw-cpuid v10.7.0\n    Checking bit_field v0.10.2\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\n   Compiling unicode-ident v1.0.12\nerror: could not compile `axconfig` (build script) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 13,
      "file": "lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axlog, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axlog\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.209\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling proc-macro2 v1.0.86\n   Compiling bitflags v1.3.2\n   Compiling indexmap v2.5.0\n   Compiling x86 v0.52.0\n   Compiling raw-cpuid v10.7.0\n   Compiling bit_field v0.10.2\n   Compiling unicode-ident v1.0.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling toml_edit v0.22.20\n   Compiling log v0.4.22\n   Compiling cfg-if v1.0.0\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling static_assertions v1.1.0\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling quote v1.0.37\n   Compiling syn v2.0.77\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 15,
      "file": "/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs",
      "kind": "Clippy(Error)",
      "raw": "error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axmem, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axmem\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Blocking waiting for file lock on package cache\n    Updating git repository `https://github.com/Starry-OS/axalloc.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating git repository `https://github.com/Starry-OS/axfs.git`\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating git repository `https://github.com/Starry-OS/axio.git`\n    Updating git repository `https://github.com/Starry-OS/elf_parser.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/allocator.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/axdriver.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_devfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_ramfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_vfs.git`\n    Updating git repository `https://github.com/Starry-OS/axsync.git`\n    Updating git repository `https://github.com/Starry-OS/capability.git`\n    Updating git repository `https://github.com/Starry-OS/driver_block.git`\n    Updating git repository `https://github.com/rafalh/rust-fatfs`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n    Updating git repository `https://github.com/Starry-OS/driver_common.git`\n    Updating git repository `https://github.com/Starry-OS/driver_pci.git`\n    Updating git repository `https://github.com/Starry-OS/axtask.git`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/kern-crates/axbacktrace.git`\n    Updating git repository `https://github.com/Starry-OS/axsignal.git`\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n    Blocking waiting for file lock on package cache\n     Locking 105 packages to latest compatible versions\n      Adding base64 v0.13.1 (latest: v0.22.1)\n      Adding bitflags v1.3.2 (latest: v2.6.0)\n      Adding embedded-hal v0.2.7 (latest: v1.0.0)\n      Adding nb v0.1.3 (latest: v1.1.0)\n      Adding raw-cpuid v10.7.0 (latest: v11.1.0)\n      Adding riscv v0.10.1 (latest: v0.11.1)\n      Adding syn v1.0.109 (latest: v2.0.77)\n      Adding tock-registers v0.8.1 (latest: v0.9.0)\n      Adding volatile v0.4.6 (latest: v0.6.1)\n      Adding x86_64 v0.14.12 (latest: v0.15.1)\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n   Compiling proc-macro2 v1.0.86\n    Checking log v0.4.22\n   Compiling unicode-ident v1.0.12\n    Checking bit_field v0.10.2\n   Compiling serde v1.0.209\n   Compiling equivalent v1.0.1\n    Checking bitflags v2.6.0\n   Compiling hashbrown v0.14.5\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.5.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n   Compiling toml_edit v0.22.20\n   Compiling syn v2.0.77\n    Checking bitflags v1.3.2\n   Compiling autocfg v1.3.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\n   Compiling lock_api v0.4.12\nerror: could not compile `axconfig` (build script) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 17,
      "file": "lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axmem, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axmem\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling proc-macro2 v1.0.86\n   Compiling log v0.4.22\n   Compiling unicode-ident v1.0.12\n   Compiling bit_field v0.10.2\n   Compiling serde v1.0.209\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling bitflags v2.6.0\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling quote v1.0.37\n   Compiling indexmap v2.5.0\n   Compiling cfg-if v1.0.0\n   Compiling syn v2.0.77\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.3.0\n   Compiling toml_edit v0.22.20\n   Compiling bitflags v1.3.2\n   Compiling raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\n   Compiling x86 v0.52.0\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling syn v1.0.109\n   Compiling volatile v0.4.6\n   Compiling spin v0.9.8\n   Compiling libc v0.2.158\n   Compiling static_assertions v1.1.0\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling tock-registers v0.8.1\n   Compiling unicode-width v0.1.13\n   Compiling base64 v0.13.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 19,
      "file": "/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs",
      "kind": "Clippy(Error)",
      "raw": "error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 21,
      "file": "clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axnet, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axnet\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/axdriver.git`\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating git repository `https://github.com/Starry-OS/axio.git`\n    Updating git repository `https://github.com/Starry-OS/axprocess.git`\n    Updating git repository `https://github.com/Starry-OS/axsync.git`\n    Updating git repository `https://github.com/Starry-OS/axtask.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/driver_net.git`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/rcore-os/smoltcp.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/driver_common.git`\n    Updating git repository `https://github.com/Starry-OS/driver_pci.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/Starry-OS/axalloc.git`\n    Updating git repository `https://github.com/Starry-OS/axfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfutex.git`\n    Updating git repository `https://github.com/Starry-OS/axmem.git`\n    Updating git repository `https://github.com/Starry-OS/axsignal.git`\n    Updating git repository `https://github.com/Starry-OS/elf_parser.git`\n    Updating git repository `https://github.com/kern-crates/axbacktrace.git`\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n    Updating git repository `https://github.com/Starry-OS/allocator.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_devfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_ramfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_vfs.git`\n    Updating git repository `https://github.com/Starry-OS/capability.git`\n    Updating git repository `https://github.com/Starry-OS/driver_block.git`\n    Updating git repository `https://github.com/rafalh/rust-fatfs`\n    Updating git repository `https://github.com/Starry-OS/page_table.git`\n    Updating git repository `https://github.com/Starry-OS/scheduler.git`\n    Updating git repository `https://github.com/Starry-OS/timer_list.git`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n    Blocking waiting for file lock on package cache\n     Locking 129 packages to latest compatible versions\n      Adding ahash v0.7.8 (latest: v0.8.11)\n      Adding base64 v0.13.1 (latest: v0.22.1)\n      Adding bitflags v1.3.2 (latest: v2.6.0)\n      Adding embedded-hal v0.2.7 (latest: v1.0.0)\n      Adding hashbrown v0.11.2 (latest: v0.14.5)\n      Adding nb v0.1.3 (latest: v1.1.0)\n      Adding raw-cpuid v10.7.0 (latest: v11.1.0)\n      Adding riscv v0.10.1 (latest: v0.11.1)\n      Adding syn v1.0.109 (latest: v2.0.77)\n      Adding tock-registers v0.8.1 (latest: v0.9.0)\n      Adding volatile v0.4.6 (latest: v0.6.1)\n      Adding wasi v0.11.0+wasi-snapshot-preview1 (latest: v0.13.2+wasi-0.2.1)\n      Adding x86_64 v0.14.12 (latest: v0.15.1)\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.209\n   Compiling proc-macro2 v1.0.86\n   Compiling toml_datetime v0.6.8\n   Compiling unicode-ident v1.0.12\n   Compiling indexmap v2.5.0\n   Compiling winnow v0.6.18\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.20\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.77\n   Compiling autocfg v1.3.0\n    Checking raw-cpuid v10.7.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\n   Compiling lock_api v0.4.12\nerror: could not compile `axconfig` (build script) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 21,
      "file": "lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axnet, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axnet\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling serde v1.0.209\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling proc-macro2 v1.0.86\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling unicode-ident v1.0.12\n   Compiling indexmap v2.5.0\n   Compiling log v0.4.22\n   Compiling quote v1.0.37\n   Compiling bit_field v0.10.2\n   Compiling bitflags v1.3.2\n   Compiling autocfg v1.3.0\n   Compiling syn v2.0.77\n   Compiling toml_edit v0.22.20\n   Compiling lock_api v0.4.12\n   Compiling raw-cpuid v10.7.0\n   Compiling bitflags v2.6.0\n   Compiling cfg-if v1.0.0\n   Compiling x86 v0.52.0\n   Compiling scopeguard v1.2.0\n   Compiling rustversion v1.0.17\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling spin v0.9.8\n   Compiling volatile v0.4.6\n   Compiling static_assertions v1.1.0\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n   Compiling tock-registers v0.8.1\n   Compiling byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling aarch64-cpu v9.4.0\n   Compiling x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/api.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_4/kern-crates/axprocess/src/api.rs (original lines from 22 to 22)\n-use axtask::{current, yield_now, AxTaskRef, CurrentTask, TaskId, TaskState,current_processor};\n+use axtask::{current, current_processor, yield_now, AxTaskRef, CurrentTask, TaskId, TaskState};\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/api.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_4/kern-crates/axprocess/src/api.rs (original lines from 46 to 47)\n-    kernel_process.tasks.lock().push(Arc::clone(\n-        current_processor().idle_task()));\n+    kernel_process\n+        .tasks\n+        .lock()\n+        .push(Arc::clone(current_processor().idle_task()));\n"
    },
    {
      "cmd_idx": 22,
      "file": "src/process.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_4/kern-crates/axprocess/src/process.rs (original lines from 19 to 19)\n-use axtask::{current, new_task, AxTaskRef, TaskId, Processor};\n+use axtask::{current, new_task, AxTaskRef, Processor, TaskId};\n"
    },
    {
      "cmd_idx": 23,
      "file": "/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs",
      "kind": "Clippy(Error)",
      "raw": "error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 25,
      "file": "clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axprocess, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axprocess\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Blocking waiting for file lock on package cache\n    Updating git repository `https://github.com/Starry-OS/axalloc.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating git repository `https://github.com/Starry-OS/axfs.git`\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating git repository `https://github.com/Starry-OS/axio.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/axmem.git`\n    Updating git repository `https://github.com/Starry-OS/axsignal.git`\n    Updating git repository `https://github.com/Starry-OS/axsync.git`\n    Updating git repository `https://github.com/Starry-OS/axtask.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/elf_parser.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/allocator.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/axdriver.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_devfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_ramfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_vfs.git`\n    Updating git repository `https://github.com/Starry-OS/capability.git`\n    Updating git repository `https://github.com/Starry-OS/driver_block.git`\n    Updating git repository `https://github.com/rafalh/rust-fatfs`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/kern-crates/axbacktrace.git`\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n    Updating git repository `https://github.com/Starry-OS/scheduler.git`\n    Updating git repository `https://github.com/Starry-OS/timer_list.git`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n    Updating git repository `https://github.com/Starry-OS/driver_common.git`\n    Updating git repository `https://github.com/Starry-OS/driver_pci.git`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n    Blocking waiting for file lock on package cache\n     Locking 108 packages to latest compatible versions\n      Adding base64 v0.13.1 (latest: v0.22.1)\n      Adding bitflags v1.3.2 (latest: v2.6.0)\n      Adding embedded-hal v0.2.7 (latest: v1.0.0)\n      Adding nb v0.1.3 (latest: v1.1.0)\n      Adding raw-cpuid v10.7.0 (latest: v11.1.0)\n      Adding riscv v0.10.1 (latest: v0.11.1)\n      Adding syn v1.0.109 (latest: v2.0.77)\n      Adding tock-registers v0.8.1 (latest: v0.9.0)\n      Adding volatile v0.4.6 (latest: v0.6.1)\n      Adding x86_64 v0.14.12 (latest: v0.15.1)\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Checking log v0.4.22\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.12\n    Checking bit_field v0.10.2\n    Checking bitflags v2.6.0\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.209\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.5.0\n   Compiling toml_datetime v0.6.8\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n   Compiling toml_edit v0.22.20\n   Compiling syn v2.0.77\n   Compiling autocfg v1.3.0\n    Checking bitflags v1.3.2\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking raw-cpuid v10.7.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: could not compile `axconfig` (build script) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 25,
      "file": "lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axprocess, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axprocess\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n   Compiling log v0.4.22\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.12\n   Compiling bit_field v0.10.2\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.209\n   Compiling bitflags v2.6.0\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.5.0\n   Compiling quote v1.0.37\n   Compiling cfg-if v1.0.0\n   Compiling autocfg v1.3.0\n   Compiling syn v2.0.77\n   Compiling bitflags v1.3.2\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.20\n   Compiling lock_api v0.4.12\n   Compiling x86 v0.52.0\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling rustversion v1.0.17\n   Compiling scopeguard v1.2.0\n   Compiling syn v1.0.109\n   Compiling volatile v0.4.6\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling spin v0.9.8\n   Compiling static_assertions v1.1.0\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling libc v0.2.158\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.13\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 27,
      "file": "/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs",
      "kind": "Clippy(Error)",
      "raw": "error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 29,
      "file": "clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axruntime, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axruntime\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/axalloc.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/axdisplay.git`\n    Updating git repository `https://github.com/Starry-OS/axdriver.git`\n    Updating git repository `https://github.com/Starry-OS/axfs.git`\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/axmem.git`\n    Updating git repository `https://github.com/Starry-OS/axnet.git`\n    Updating git repository `https://github.com/Starry-OS/axprocess.git`\n    Updating git repository `https://github.com/Starry-OS/axtask.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/allocator.git`\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/axsync.git`\n    Updating git repository `https://github.com/Starry-OS/driver_display.git`\n    Updating git repository `https://github.com/Starry-OS/driver_block.git`\n    Updating git repository `https://github.com/Starry-OS/driver_common.git`\n    Updating git repository `https://github.com/Starry-OS/driver_pci.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_devfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_ramfs.git`\n    Updating git repository `https://github.com/Starry-OS/axfs_vfs.git`\n    Updating git repository `https://github.com/Starry-OS/axio.git`\n    Updating git repository `https://github.com/Starry-OS/capability.git`\n    Updating git repository `https://github.com/rafalh/rust-fatfs`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/Starry-OS/elf_parser.git`\n    Updating git repository `https://github.com/Starry-OS/driver_net.git`\n    Updating git repository `https://github.com/rcore-os/smoltcp.git`\n    Updating git repository `https://github.com/Starry-OS/axfutex.git`\n    Updating git repository `https://github.com/Starry-OS/axsignal.git`\n    Updating git repository `https://github.com/kern-crates/axbacktrace.git`\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/Starry-OS/scheduler.git`\n    Updating git repository `https://github.com/Starry-OS/timer_list.git`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n    Updating git repository `https://github.com/rcore-os/bitmap-allocator.git`\n     Locking 132 packages to latest compatible versions\n      Adding ahash v0.7.8 (latest: v0.8.11)\n      Adding base64 v0.13.1 (latest: v0.22.1)\n      Adding bitflags v1.3.2 (latest: v2.6.0)\n      Adding embedded-hal v0.2.7 (latest: v1.0.0)\n      Adding hashbrown v0.11.2 (latest: v0.14.5)\n      Adding nb v0.1.3 (latest: v1.1.0)\n      Adding raw-cpuid v10.7.0 (latest: v11.1.0)\n      Adding riscv v0.10.1 (latest: v0.11.1)\n      Adding syn v1.0.109 (latest: v2.0.77)\n      Adding tock-registers v0.8.1 (latest: v0.9.0)\n      Adding volatile v0.4.6 (latest: v0.6.1)\n      Adding wasi v0.11.0+wasi-snapshot-preview1 (latest: v0.13.2+wasi-0.2.1)\n      Adding x86_64 v0.14.12 (latest: v0.15.1)\n   Compiling serde v1.0.209\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.5.0\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.86\n    Checking bitflags v1.3.2\n   Compiling toml_edit v0.22.20\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.12\n   Compiling autocfg v1.3.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\n   Compiling rustversion v1.0.17\n   Compiling lock_api v0.4.12\nerror: could not compile `axconfig` (build script) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 29,
      "file": "lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axruntime, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/kern-crates/axruntime\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.209\n   Compiling hashbrown v0.14.5\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling bit_field v0.10.2\n   Compiling bitflags v1.3.2\n   Compiling proc-macro2 v1.0.86\n   Compiling indexmap v2.5.0\n   Compiling raw-cpuid v10.7.0\n   Compiling autocfg v1.3.0\n   Compiling toml_edit v0.22.20\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.12\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\n   Compiling quote v1.0.37\n   Compiling bitflags v2.6.0\n   Compiling cfg-if v1.0.0\n   Compiling scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.77\n   Compiling log v0.4.22\n   Compiling static_assertions v1.1.0\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling volatile v0.4.6\n   Compiling spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling lazy_static v1.5.0\n   Compiling x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    }
  ]
}