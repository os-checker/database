{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.86.0-nightly (f7cc13af8 2025-01-25)",
          "commit_hash": "f7cc13af822fe68c64fec0b05aa9dd1412451f7c",
          "commit_date": "2025-01-25",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.86.0-nightly",
          "llvm_version": "19.1.7"
        },
        "installed": [
          {
            "channel": "nightly-2025-01-26-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "aarch64-unknown-none",
              "loongarch64-unknown-none",
              "riscv64gc-unknown-none-elf",
              "x86_64-unknown-linux-gnu",
              "x86_64-unknown-none"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-aarch64-unknown-none",
              "rust-std-loongarch64-unknown-none",
              "rust-std-riscv64gc-unknown-none-elf",
              "rust-std-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-none",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1740147275211,
        "finish": 1740147276188,
        "duration_ms": 977,
        "git_time": "2025-02-16 16:17:11 +0800",
        "git_sha": "379b4c5f3884500f536ea00ffc0672d2af054861"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Semver Violation",
        "Audit",
        "Mirai",
        "Rapx",
        "Rudra",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Outdated",
        "Geiger",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "semver-checks": [
          "Semver Violation"
        ],
        "audit": [
          "Audit"
        ],
        "mirai": [
          "Mirai"
        ],
        "rapx": [
          "Rapx"
        ],
        "rudra": [
          "Rudra"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "outdated": [
          "Outdated"
        ],
        "geiger": [
          "Geiger"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "guoweikang",
        "repo": "osl"
      },
      {
        "user": "kern-crates",
        "repo": "axbacktrace"
      }
    ],
    "packages": [
      {
        "name": "osl",
        "repo": {
          "repo_idx": 0,
          "user": "guoweikang",
          "repo": "osl"
        }
      },
      {
        "name": "axbacktrace",
        "repo": {
          "repo_idx": 1,
          "user": "kern-crates",
          "repo": "axbacktrace"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 0,
      "duration_ms": 104,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [
        "--features",
        "arceos"
      ],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --features arceos --no-deps",
      "count": 4,
      "duration_ms": 10161,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [
        "--features",
        "arceos"
      ],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu --features arceos",
      "count": 1,
      "duration_ms": 11581,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [
        "--features",
        "arceos"
      ],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2025-01-04 mirai --target x86_64-unknown-linux-gnu --features arceos",
      "count": 10,
      "duration_ms": 12953,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [
        "--features",
        "arceos"
      ],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu --features arceos",
      "count": 0,
      "duration_ms": 13644,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [
        "--features",
        "arceos"
      ],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu --features arceos",
      "count": 0,
      "duration_ms": 288,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [
        "--features",
        "arceos"
      ],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra --target x86_64-unknown-linux-gnu --features arceos",
      "count": 0,
      "duration_ms": 251,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [
        "--features",
        "arceos"
      ],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 2938,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [
        "--features",
        "arceos"
      ],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "geiger",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [
        "--features",
        "arceos"
      ],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 11581,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 22,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu  --no-deps",
      "count": 0,
      "duration_ms": 232,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu ",
      "count": 1,
      "duration_ms": 512,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "mirai",
      "cmd": "cargo +nightly-2025-01-04 mirai --target x86_64-unknown-linux-gnu ",
      "count": 1,
      "duration_ms": 381,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 197,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 531,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 250,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 124,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "geiger",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 68,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 512,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 1,
      "file": "src/arceos/driver/i2c/msg.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/arceos/driver/i2c/msg.rs:94:13\n   |\n94 |             self.buf.len() == 0\n   |             ^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `self.buf.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/math.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n  --> src/math.rs:51:5\n   |\n50 |     let quotient = n / base as u64;\n   |     ------------------------------- unnecessary `let` binding\n51 |     quotient\n   |     ^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n   = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n   |\n50 ~     \n51 ~     n / base as u64\n   |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/sync.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n --> src/sync.rs:6:5\n  |\n6 | //!  must supply a stuct called OslCompletion and implement GeneralComplete\n  |     ^\n  |\n  = help: if this is supposed to be its own paragraph, add a blank line\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\n  = note: `#[warn(clippy::doc_lazy_continuation)]` on by default\nhelp: indent this line\n  |\n6 | //!   must supply a stuct called OslCompletion and implement GeneralComplete\n  |      +\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/sync.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n --> src/sync.rs:9:5\n  |\n9 | //!  must supply a stuct called SpinLock and implement lock\n  |     ^\n  |\n  = help: if this is supposed to be its own paragraph, add a blank line\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n  |\n9 | //!   must supply a stuct called SpinLock and implement lock\n  |      +\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=osl, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=--features arceos\npkg_dir=/home/runner/check/batch_30/guoweikang/osl\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu --features arceos\ntimestamp=2025-02-16 21:58:13.217068771 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building osl v0.1.0 (current)\nerror: running cargo-doc on crate 'osl' failed with output:\n-----\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.16\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.7.2\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.98\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.24\n   Compiling autocfg v1.4.0\n   Compiling x86 v0.52.0\n   Compiling lock_api v0.4.12\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.19\n    Checking log v0.4.25\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking bitflags v2.8.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling fnv v1.0.7\n   Compiling ident_case v1.0.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n   Compiling strsim v0.11.1\n    Checking aarch64-cpu v9.4.0\n   Compiling darling_core v0.20.10\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#8bed6725)\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.15.2\n    Checking x86_64 v0.14.13\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking bit v0.1.1\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking x2apic v0.4.3\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n    Checking raw-cpuid v11.3.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling darling_macro v0.20.10\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling darling v0.20.10\n   Compiling derive_builder_core v0.20.2\n   Compiling derive_builder_macro v0.20.2\n    Checking axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git#1cc27325)\n    Checking axtask v0.1.0 (https://github.com/Starry-OS/axtask.git#d41e0730)\n    Checking axsync v0.1.0 (https://github.com/Starry-OS/axsync.git#70651a7c)\n    Checking derive_builder v0.20.2\n Documenting osl v0.1.0 (/home/runner/check/batch_30/guoweikang/osl)\nerror[E0428]: the name `log_print` is defined multiple times\n  --> /home/runner/check/batch_30/guoweikang/osl/src/arceos/log.rs:6:1\n   |\n6  |  / macro_rules! log_print (\n7  |  |     ($crate::log::LogLevel::Error, $($arg:tt)*) => (\n8  |  |         $crate::log::error!($($arg)*)\n9  |  |     );\n...   |\n18 |  |     );\n19 |  | );\n   |  |__^ `log_print` redefined here\n   |\n  ::: /home/runner/check/batch_30/guoweikang/osl/src/linux/log.rs:6:1\n   |\n6  | /  macro_rules! log_print (\n7  | |      // The non-continuation cases (most of them, e.g. `INFO`).\n8  | |      ($crate::log::LogLevel::Error, $($arg:tt)*) => (\n9  | |          $crate::log::pr_err!($($arg)*)\n...  |\n19 | |      );\n20 | |  );\n   | |___- previous definition of the macro `log_print` here\n   |\n   = note: `log_print` must be defined only once in the macro namespace of this module\n\nerror: macro expansion ends with an incomplete expression: expected `;`\n  --> /home/runner/check/batch_30/guoweikang/osl/src/sync.rs:20:55\n   |\n20 |         pub use kernel::{new_spinlock, sync::SpinLock}\n   |                                                       ^ expected `;`\n   |\n   = note: glob-like brace syntax must be last on the path\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_30/guoweikang/osl/src/linux/error.rs:1:5\n  |\n1 | use kernel::prelude::*;\n  |     ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_30/guoweikang/osl/src/linux/sleep.rs:1:5\n  |\n1 | use kernel::delay::usleep_range;\n  |     ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_30/guoweikang/osl/src/linux/time.rs:1:5\n  |\n1 | use kernel::timekeeping::*;\n  |     ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_30/guoweikang/osl/src/linux/driver/irq.rs:4:9\n  |\n4 | pub use kernel::irq::Return;\n  |         ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_30/guoweikang/osl/src/vec.rs:8:9\n  |\n8 | pub use kernel::prelude::Vec;\n  |         ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_30/guoweikang/osl/src/linux/complete.rs:3:5\n  |\n3 | use kernel::{completion::Completion, new_completion, prelude::*, sync::Arc};\n  |     ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0432]: unresolved import `kernel`\n --> /home/runner/check/batch_30/guoweikang/osl/src/linux/log.rs:1:9\n  |\n1 | pub use kernel::{pr_debug, pr_err, pr_info, pr_warn};\n  |         ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_30/guoweikang/osl/src/linux/error.rs:3:9\n  |\n3 | pub use kernel::prelude::Error;\n  |         ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0432]: unresolved import `kernel`\n --> /home/runner/check/batch_30/guoweikang/osl/src/linux/complete.rs:3:5\n  |\n3 | use kernel::{completion::Completion, new_completion, prelude::*, sync::Arc};\n  |     ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror: cannot find attribute `pin_data` in this scope\n --> /home/runner/check/batch_30/guoweikang/osl/src/linux/complete.rs:6:3\n  |\n6 | #[pin_data]\n  |   ^^^^^^^^\n\nerror: cannot find attribute `pin` in this scope\n --> /home/runner/check/batch_30/guoweikang/osl/src/linux/complete.rs:8:7\n  |\n8 |     #[pin]\n  |       ^^^\n\nerror: cannot find macro `pin_init` in this scope\n  --> /home/runner/check/batch_30/guoweikang/osl/src/linux/complete.rs:14:23\n   |\n14 |         Arc::pin_init(pin_init!(Self {\n   |                       ^^^^^^^^\n\nerror[E0412]: cannot find type `Arc` in this scope\n  --> /home/runner/check/batch_30/guoweikang/osl/src/sync.rs:33:24\n   |\n33 |     fn new() -> Result<Arc<Self>>;\n   |                        ^^^ not found in this scope\n   |\nhelp: consider importing this struct\n   |\n14 + use alloc::sync::Arc;\n   |\n\nSome errors have detailed explanations: E0412, E0428, E0432, E0433.\nFor more information about an error, try `rustc --explain E0412`.\nerror: could not document `osl`\n\n-----\n\nerror: failed to build rustdoc for crate osl v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_30/guoweikang/osl --features arceos,axerrno,axhal,axlog,axsync,axtask,linux &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate osl v0.1.0\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/arceos/driver/i2c/msg.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] assertion failed: flags.contains(I2cMsgFlags::I2cMasterRead)\n  --> src/arceos/driver/i2c/msg.rs:46:10\n   |\n46 |          assert!(flags.contains(I2cMsgFlags::I2cMasterRead));\n   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/arceos/driver/i2c/msg.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] assertion failed: self.flags.contains(I2cMsgFlags::I2cMasterRecvLen)\n  --> src/arceos/driver/i2c/msg.rs:67:9\n   |\n67 |         assert!(self.flags.contains(I2cMsgFlags::I2cMasterRecvLen));\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/arceos/driver/i2c/msg.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] assertion failed: self.flags.contains(I2cMsgFlags::I2cMasterRead)\n  --> src/arceos/driver/i2c/msg.rs:68:9\n   |\n68 |         assert!(self.flags.contains(I2cMsgFlags::I2cMasterRead));\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/arceos/driver/i2c/msg.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] assertion failed: self.flags.contains(I2cMsgFlags::I2cMasterRead)\n  --> src/arceos/driver/i2c/msg.rs:74:9\n   |\n74 |         assert!(self.flags.contains(I2cMsgFlags::I2cMasterRead));\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/arceos/driver/i2c/msg.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] possible attempt to add with overflow\n  --> src/arceos/driver/i2c/msg.rs:75:9\n   |\n75 |         self.recieve_cmd_cnt +=1;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/arceos/driver/i2c/msg.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] possible attempt to subtract with overflow\n  --> src/arceos/driver/i2c/msg.rs:82:46\n   |\n82 |             self.recieve_cmd_cnt as usize == self.recieve_threshold -1\n   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/arceos/driver/i2c/msg.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] assertion failed: self.flags.contains(I2cMsgFlags::I2cMasterRead)\n   --> src/arceos/driver/i2c/msg.rs:101:9\n    |\n101 |         assert!(self.flags.contains(I2cMsgFlags::I2cMasterRead));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/arceos/driver/i2c/msg.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] assertion failed: self.flags.contains(I2cMsgFlags::I2cMasterRead)\n   --> src/arceos/driver/i2c/msg.rs:108:9\n    |\n108 |         assert!(self.flags.contains(I2cMsgFlags::I2cMasterRead));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/arceos/driver/i2c/msg.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] assertion failed: !self.flags.contains(I2cMsgFlags::I2cMasterRead)\n   --> src/arceos/driver/i2c/msg.rs:119:9\n    |\n119 |         assert!(!self.flags.contains(I2cMsgFlags::I2cMasterRead));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/arceos/driver/i2c/msg.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] assertion failed: self.flags.contains(I2cMsgFlags::I2cMasterRecvLen)\n   --> src/arceos/driver/i2c/msg.rs:129:9\n    |\n129 |         assert!(self.flags.contains(I2cMsgFlags::I2cMasterRecvLen));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=osl, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=--features arceos\n// pkg_dir=/home/runner/check/batch_30/guoweikang/osl\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu --features arceos\n// timestamp=2025-02-16 21:58:01.635232652 +08:00:00\n    Building osl v0.1.0 (current)\nerror: running cargo-doc on crate 'osl' failed with output:\n-----\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.16\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.7.2\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.98\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.24\n   Compiling autocfg v1.4.0\n   Compiling x86 v0.52.0\n   Compiling lock_api v0.4.12\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.19\n    Checking log v0.4.25\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking bitflags v2.8.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling fnv v1.0.7\n   Compiling ident_case v1.0.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n   Compiling strsim v0.11.1\n    Checking aarch64-cpu v9.4.0\n   Compiling darling_core v0.20.10\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#8bed6725)\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.15.2\n    Checking x86_64 v0.14.13\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking bit v0.1.1\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking x2apic v0.4.3\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n    Checking raw-cpuid v11.3.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling darling_macro v0.20.10\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling darling v0.20.10\n   Compiling derive_builder_core v0.20.2\n   Compiling derive_builder_macro v0.20.2\n    Checking axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git#1cc27325)\n    Checking axtask v0.1.0 (https://github.com/Starry-OS/axtask.git#d41e0730)\n    Checking axsync v0.1.0 (https://github.com/Starry-OS/axsync.git#70651a7c)\n    Checking derive_builder v0.20.2\n Documenting osl v0.1.0 (/home/runner/check/batch_30/guoweikang/osl)\nerror[E0428]: the name `log_print` is defined multiple times\n  --> /home/runner/check/batch_30/guoweikang/osl/src/arceos/log.rs:6:1\n   |\n6  |  / macro_rules! log_print (\n7  |  |     ($crate::log::LogLevel::Error, $($arg:tt)*) => (\n8  |  |         $crate::log::error!($($arg)*)\n9  |  |     );\n...   |\n18 |  |     );\n19 |  | );\n   |  |__^ `log_print` redefined here\n   |\n  ::: /home/runner/check/batch_30/guoweikang/osl/src/linux/log.rs:6:1\n   |\n6  | /  macro_rules! log_print (\n7  | |      // The non-continuation cases (most of them, e.g. `INFO`).\n8  | |      ($crate::log::LogLevel::Error, $($arg:tt)*) => (\n9  | |          $crate::log::pr_err!($($arg)*)\n...  |\n19 | |      );\n20 | |  );\n   | |___- previous definition of the macro `log_print` here\n   |\n   = note: `log_print` must be defined only once in the macro namespace of this module\n\nerror: macro expansion ends with an incomplete expression: expected `;`\n  --> /home/runner/check/batch_30/guoweikang/osl/src/sync.rs:20:55\n   |\n20 |         pub use kernel::{new_spinlock, sync::SpinLock}\n   |                                                       ^ expected `;`\n   |\n   = note: glob-like brace syntax must be last on the path\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_30/guoweikang/osl/src/linux/error.rs:1:5\n  |\n1 | use kernel::prelude::*;\n  |     ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_30/guoweikang/osl/src/linux/sleep.rs:1:5\n  |\n1 | use kernel::delay::usleep_range;\n  |     ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_30/guoweikang/osl/src/linux/time.rs:1:5\n  |\n1 | use kernel::timekeeping::*;\n  |     ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_30/guoweikang/osl/src/linux/driver/irq.rs:4:9\n  |\n4 | pub use kernel::irq::Return;\n  |         ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_30/guoweikang/osl/src/vec.rs:8:9\n  |\n8 | pub use kernel::prelude::Vec;\n  |         ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_30/guoweikang/osl/src/linux/complete.rs:3:5\n  |\n3 | use kernel::{completion::Completion, new_completion, prelude::*, sync::Arc};\n  |     ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0432]: unresolved import `kernel`\n --> /home/runner/check/batch_30/guoweikang/osl/src/linux/log.rs:1:9\n  |\n1 | pub use kernel::{pr_debug, pr_err, pr_info, pr_warn};\n  |         ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_30/guoweikang/osl/src/linux/error.rs:3:9\n  |\n3 | pub use kernel::prelude::Error;\n  |         ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0432]: unresolved import `kernel`\n --> /home/runner/check/batch_30/guoweikang/osl/src/linux/complete.rs:3:5\n  |\n3 | use kernel::{completion::Completion, new_completion, prelude::*, sync::Arc};\n  |     ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror: cannot find attribute `pin_data` in this scope\n --> /home/runner/check/batch_30/guoweikang/osl/src/linux/complete.rs:6:3\n  |\n6 | #[pin_data]\n  |   ^^^^^^^^\n\nerror: cannot find attribute `pin` in this scope\n --> /home/runner/check/batch_30/guoweikang/osl/src/linux/complete.rs:8:7\n  |\n8 |     #[pin]\n  |       ^^^\n\nerror: cannot find macro `pin_init` in this scope\n  --> /home/runner/check/batch_30/guoweikang/osl/src/linux/complete.rs:14:23\n   |\n14 |         Arc::pin_init(pin_init!(Self {\n   |                       ^^^^^^^^\n\nerror[E0412]: cannot find type `Arc` in this scope\n  --> /home/runner/check/batch_30/guoweikang/osl/src/sync.rs:33:24\n   |\n33 |     fn new() -> Result<Arc<Self>>;\n   |                        ^^^ not found in this scope\n   |\nhelp: consider importing this struct\n   |\n14 + use alloc::sync::Arc;\n   |\n\nSome errors have detailed explanations: E0412, E0428, E0432, E0433.\nFor more information about an error, try `rustc --explain E0412`.\nerror: could not document `osl`\n\n-----\n\nerror: failed to build rustdoc for crate osl v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_30/guoweikang/osl --features arceos,axerrno,axhal,axlog,axsync,axtask,linux &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate osl v0.1.0\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/aarch64.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_30/kern-crates/axbacktrace/src/aarch64.rs (original lines from 1 to 1)\n-use core::arch::asm;\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/aarch64.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_30/kern-crates/axbacktrace/src/aarch64.rs (original lines from 3 to 3)\n+use core::arch::asm;\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/aarch64.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_30/kern-crates/axbacktrace/src/aarch64.rs (original lines from 5 to 5)\n-    init_curr: bool, \n+    init_curr: bool,\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/aarch64.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_30/kern-crates/axbacktrace/src/aarch64.rs (original lines from 39 to 39)\n-\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/aarch64.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_30/kern-crates/axbacktrace/src/aarch64.rs (original lines from 53 to 53)\n-        Unwind{init_curr: true, pc: 0, fp: 0, stack_info}\n+        Unwind {\n+            init_curr: true,\n+            pc: 0,\n+            fp: 0,\n+            stack_info,\n+        }\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/aarch64.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_30/kern-crates/axbacktrace/src/aarch64.rs (original lines from 56 to 57)\n-    fn new(pc:usize, fp:usize, stack_info: StackInfo) -> Self {\n-        Unwind{init_curr: false, pc,fp,stack_info}\n+    fn new(pc: usize, fp: usize, stack_info: StackInfo) -> Self {\n+        Unwind {\n+            init_curr: false,\n+            pc,\n+            fp,\n+            stack_info,\n+        }\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/aarch64.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_30/kern-crates/axbacktrace/src/aarch64.rs (original lines from 69 to 69)\n-            error!(\"unwind init fp: {:#016x} is invalid\",self.fp);\n+            error!(\"unwind init fp: {:#016x} is invalid\", self.fp);\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_30/kern-crates/axbacktrace/src/lib.rs (original lines from 27 to 27)\n-        Self {low, high}\n+        Self { low, high }\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_30/kern-crates/axbacktrace/src/lib.rs (original lines from 31 to 31)\n-         fp < self.high && fp > self.low\n+        fp < self.high && fp > self.low\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_30/kern-crates/axbacktrace/src/lib.rs (original lines from 37 to 37)\n-    fn new(pc:usize, fp:usize, stack_info: StackInfo) -> Self;\n+    fn new(pc: usize, fp: usize, stack_info: StackInfo) -> Self;\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/riscv.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_30/kern-crates/axbacktrace/src/riscv.rs (original lines from 1 to 1)\n-use core::arch::asm;\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/riscv.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_30/kern-crates/axbacktrace/src/riscv.rs (original lines from 3 to 3)\n+use core::arch::asm;\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/riscv.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_30/kern-crates/axbacktrace/src/riscv.rs (original lines from 35 to 36)\n-            let stack: *const StackFrame = \n-                (self.fp as *const StackFrame).sub(1);\n+            let stack: *const StackFrame = (self.fp as *const StackFrame).sub(1);\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/riscv.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_30/kern-crates/axbacktrace/src/riscv.rs (original lines from 44 to 46)\n-            let stack: *const StackFrame = \n-                (self.fp as *const StackFrame).sub(1);\n-            self.pc = (*stack).ra;   \n+            let stack: *const StackFrame = (self.fp as *const StackFrame).sub(1);\n+            self.pc = (*stack).ra;\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/riscv.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_30/kern-crates/axbacktrace/src/riscv.rs (original lines from 64 to 66)\n-    fn new(pc:usize, fp: usize, stack_info: StackInfo)\n-        -> Self {\n-        Unwind{init_curr: false, pc, fp, stack_info}\n+    fn new(pc: usize, fp: usize, stack_info: StackInfo) -> Self {\n+        Unwind {\n+            init_curr: false,\n+            pc,\n+            fp,\n+            stack_info,\n+        }\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/riscv.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_30/kern-crates/axbacktrace/src/riscv.rs (original lines from 69 to 71)\n-    fn new_from_cur_ctx(stack_info: StackInfo) \n-        -> Self {\n-        Unwind{init_curr: true, pc: 0, fp: 0, stack_info}\n+    fn new_from_cur_ctx(stack_info: StackInfo) -> Self {\n+        Unwind {\n+            init_curr: true,\n+            pc: 0,\n+            fp: 0,\n+            stack_info,\n+        }\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/riscv.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_30/kern-crates/axbacktrace/src/riscv.rs (original lines from 83 to 83)\n-            error!(\"unwind init sp: {:#016x} is invalid\",self.fp);\n+            error!(\"unwind init sp: {:#016x} is invalid\", self.fp);\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/x86.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_30/kern-crates/axbacktrace/src/x86.rs (original lines from 1 to 1)\n-use core::arch::asm;\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/x86.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_30/kern-crates/axbacktrace/src/x86.rs (original lines from 3 to 3)\n+use core::arch::asm;\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/x86.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_30/kern-crates/axbacktrace/src/x86.rs (original lines from 66 to 68)\n-    fn new(pc:usize, fp: usize, stack_info: StackInfo)\n-        -> Self {\n-        Unwind{init_curr: false, pc, fp, stack_info}\n+    fn new(pc: usize, fp: usize, stack_info: StackInfo) -> Self {\n+        Unwind {\n+            init_curr: false,\n+            pc,\n+            fp,\n+            stack_info,\n+        }\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/x86.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_30/kern-crates/axbacktrace/src/x86.rs (original lines from 71 to 73)\n-    fn new_from_cur_ctx(stack_info: StackInfo)\n-        -> Self {\n-        Unwind{init_curr: true, pc: 0, fp: 0, stack_info}\n+    fn new_from_cur_ctx(stack_info: StackInfo) -> Self {\n+        Unwind {\n+            init_curr: true,\n+            pc: 0,\n+            fp: 0,\n+            stack_info,\n+        }\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/x86.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_30/kern-crates/axbacktrace/src/x86.rs (original lines from 85 to 85)\n-            error!(\"unwind init sp: {:#016x} is invalid\",self.fp);\n+            error!(\"unwind init sp: {:#016x} is invalid\", self.fp);\n"
    },
    {
      "cmd_idx": 12,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=axbacktrace, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_30/kern-crates/axbacktrace\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-02-16 21:58:48.175295657 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axbacktrace v0.1.0 (current)\n       Built [   0.292s] (current)\n     Parsing axbacktrace v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_30/kern-crates/axbacktrace/target/semver-checks/local-axbacktrace-0_1_0-01666ec060466c14/target/x86_64-unknown-linux-gnu/doc/axbacktrace.json\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/x86.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] Inline assembly code cannot be analyzed by MIRAI.\n  --> src/x86.rs:59:9\n   |\n59 |         asm!(\"mov {ptr}, rbp\", ptr = out(reg) fp);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=axbacktrace, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_30/kern-crates/axbacktrace\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-02-16 21:58:47.662984275 +08:00:00\n    Building axbacktrace v0.1.0 (current)\n       Built [   0.292s] (current)\n     Parsing axbacktrace v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_30/kern-crates/axbacktrace/target/semver-checks/local-axbacktrace-0_1_0-01666ec060466c14/target/x86_64-unknown-linux-gnu/doc/axbacktrace.json\n"
    }
  ]
}