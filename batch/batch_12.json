{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.84.0-nightly (4f2f477fd 2024-10-23)",
          "commit_hash": "4f2f477fded0a47b21ed3f6aeddeafa5db8bf518",
          "commit_date": "2024-10-23",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.84.0-nightly",
          "llvm_version": "19.1.1"
        },
        "installed": [
          {
            "channel": "nightly-2024-10-24-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "x86_64-unknown-linux-gnu"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-linux-gnu",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1731487215999,
        "finish": 1731487219187,
        "duration_ms": 3187,
        "git_time": "2024-11-13 16:33:48 +0800",
        "git_sha": "dc848ce9cb3b0de414f0a0aac346af585b848202"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Audit",
        "Mirai",
        "Rap",
        "Rudra",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Outdated",
        "Geiger",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "audit": [
          "Audit"
        ],
        "mirai": [
          "Mirai"
        ],
        "rap": [
          "Rap"
        ],
        "rudra": [
          "Rudra"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "outdated": [
          "Outdated"
        ],
        "geiger": [
          "Geiger"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "kern-crates",
        "repo": "zcore-zircon-syscall"
      },
      {
        "user": "kern-crates",
        "repo": "zcore-zircon-user"
      },
      {
        "user": "qclic",
        "repo": "fdt-parser"
      },
      {
        "user": "shilei-massclouds",
        "repo": "arch_boot"
      },
      {
        "user": "shilei-massclouds",
        "repo": "axalloc"
      },
      {
        "user": "shilei-massclouds",
        "repo": "axdtb"
      },
      {
        "user": "shilei-massclouds",
        "repo": "axfs_ramfs"
      },
      {
        "user": "shilei-massclouds",
        "repo": "axhal"
      }
    ],
    "packages": [
      {
        "name": "zircon-syscall",
        "repo": {
          "repo_idx": 0,
          "user": "kern-crates",
          "repo": "zcore-zircon-syscall"
        }
      },
      {
        "name": "zircon-user",
        "repo": {
          "repo_idx": 1,
          "user": "kern-crates",
          "repo": "zcore-zircon-user"
        }
      },
      {
        "name": "dtb-tool",
        "repo": {
          "repo_idx": 2,
          "user": "qclic",
          "repo": "fdt-parser"
        }
      },
      {
        "name": "fdt-parser",
        "repo": {
          "repo_idx": 2,
          "user": "qclic",
          "repo": "fdt-parser"
        }
      },
      {
        "name": "arch_boot",
        "repo": {
          "repo_idx": 3,
          "user": "shilei-massclouds",
          "repo": "arch_boot"
        }
      },
      {
        "name": "axalloc",
        "repo": {
          "repo_idx": 4,
          "user": "shilei-massclouds",
          "repo": "axalloc"
        }
      },
      {
        "name": "rt_axalloc",
        "repo": {
          "repo_idx": 4,
          "user": "shilei-massclouds",
          "repo": "axalloc"
        }
      },
      {
        "name": "axdtb",
        "repo": {
          "repo_idx": 5,
          "user": "shilei-massclouds",
          "repo": "axdtb"
        }
      },
      {
        "name": "rt_axdtb",
        "repo": {
          "repo_idx": 5,
          "user": "shilei-massclouds",
          "repo": "axdtb"
        }
      },
      {
        "name": "",
        "repo": {
          "repo_idx": 6,
          "user": "shilei-massclouds",
          "repo": "axfs_ramfs"
        }
      },
      {
        "name": "axhal",
        "repo": {
          "repo_idx": 7,
          "user": "shilei-massclouds",
          "repo": "axhal"
        }
      },
      {
        "name": "rt_axhal",
        "repo": {
          "repo_idx": 7,
          "user": "shilei-massclouds",
          "repo": "axhal"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p zircon-syscall -- --emit=json",
      "count": 0,
      "duration_ms": 137,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 4839,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 48,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 7196,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 5190,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 251,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 66,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 164,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 4839,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 7196,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=rap cargo",
      "count": 1,
      "duration_ms": 5190,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p zircon-user -- --emit=json",
      "count": 0,
      "duration_ms": 94,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 291,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 272,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 154,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 339,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 840,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 84,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 439,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=rap cargo",
      "count": 1,
      "duration_ms": 339,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2022-01-20",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p dtb-tool -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p dtb-tool -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p dtb-tool -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p dtb-tool -- --emit=json",
      "count": 0,
      "duration_ms": 2044,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 5095,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 11,
      "duration_ms": 373,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 325,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 18,
      "duration_ms": 399,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 49,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 331,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 413,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 448,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 8106,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 6467,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 258,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 92,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 66,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 63,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 65,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 135,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 373,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 448,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 331,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 413,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 8106,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 399,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 325,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p fdt-parser -- --emit=json",
      "count": 0,
      "duration_ms": 107,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p fdt-parser -- --emit=json",
      "count": 0,
      "duration_ms": 106,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p fdt-parser -- --emit=json",
      "count": 0,
      "duration_ms": 107,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p fdt-parser -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 314,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 309,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 313,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 47,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 157,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 160,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 161,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 157,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 63,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 93,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 65,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 67,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 67,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 66,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 132,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 157,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 160,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 161,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 157,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p arch_boot -- --emit=json",
      "count": 6,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 4716,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 47,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 6210,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 4810,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 252,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 64,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 132,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p axalloc -- --emit=json",
      "count": 2,
      "duration_ms": 96,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p axalloc -- --emit=json",
      "count": 2,
      "duration_ms": 96,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p axalloc -- --emit=json",
      "count": 2,
      "duration_ms": 96,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 118,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 116,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 117,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 8111,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 867,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 3004,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 83,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 59,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 58,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 8111,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 867,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 3004,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p rt_axalloc -- --emit=json",
      "count": 0,
      "duration_ms": 94,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p rt_axalloc -- --emit=json",
      "count": 0,
      "duration_ms": 93,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p rt_axalloc -- --emit=json",
      "count": 0,
      "duration_ms": 94,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 117,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 117,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 117,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 232,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 248,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 292,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 58,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 60,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 61,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 232,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 248,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 292,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p axdtb -- --emit=json",
      "count": 26,
      "duration_ms": 99,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p axdtb -- --emit=json",
      "count": 26,
      "duration_ms": 97,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p axdtb -- --emit=json",
      "count": 26,
      "duration_ms": 96,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 117,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 116,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 116,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 0,
      "duration_ms": 4263,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 260,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 259,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 82,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 60,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 60,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p rt_axdtb -- --emit=json",
      "count": 5,
      "duration_ms": 95,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p rt_axdtb -- --emit=json",
      "count": 5,
      "duration_ms": 95,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p rt_axdtb -- --emit=json",
      "count": 5,
      "duration_ms": 95,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 117,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 117,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 117,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 2526,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 3709,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 3256,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 60,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 59,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 59,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2526,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 3709,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 3256,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=LayoutParseError cargo",
      "count": 1,
      "duration_ms": 0,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p axhal -- --emit=json",
      "count": 18,
      "duration_ms": 117,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p axhal -- --emit=json",
      "count": 18,
      "duration_ms": 118,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p axhal -- --emit=json",
      "count": 18,
      "duration_ms": 116,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 116,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 117,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 115,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 6681,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 782,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 2892,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 84,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 61,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 60,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 6681,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 782,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2892,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p rt_axhal -- --emit=json",
      "count": 2,
      "duration_ms": 94,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p rt_axhal -- --emit=json",
      "count": 2,
      "duration_ms": 94,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p rt_axhal -- --emit=json",
      "count": 2,
      "duration_ms": 95,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 116,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 116,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 116,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 237,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 126,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 280,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 60,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 59,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 60,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 237,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 126,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 280,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 1,
      "file": "/home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0635]: unknown feature `btree_drain_filter`\n --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:2:12\n  |\n2 | #![feature(btree_drain_filter)]\n  |            ^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "/home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0599]: no method named `drain_filter` found for struct `BTreeSet` in the current scope\n   --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:120:14\n    |\n119 | /         self.regions\n120 | |             .drain_filter(|r| {\n    | |             -^^^^^^^^^^^^ method not found in `BTreeSet<Region>`\n    | |_____________|\n    |\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-02T00:45:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T00:45:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 8,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=zircon-syscall, checker=Clippy\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_13/kern-crates/zcore-zircon-syscall\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.89\n    Checking bit_field v0.10.2\n   Compiling autocfg v1.4.0\n   Compiling unicode-ident v1.0.13\n   Compiling rustversion v1.0.18\n    Checking log v0.4.22\n    Checking scopeguard v1.2.0\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling quote v1.0.37\n   Compiling syn v2.0.86\n    Checking volatile v0.4.6\n    Checking bitflags v2.6.0\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n    Checking x86_64 v0.14.12\n    Checking volatile v0.3.0\n    Checking rsdp v2.0.1\n   Compiling x86 v0.46.0\n   Compiling trapframe v0.9.0\n    Checking byteorder v1.5.0\n    Checking managed v0.8.0\n    Checking bit v0.1.1\n    Checking futures-core v0.3.31\n    Checking cfg-if v1.0.0\n    Checking futures-sink v0.3.31\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking acpi v4.1.1\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking x2apic v0.4.3\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking lazy_static v1.5.0\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n    Checking pin-utils v0.1.0\n    Checking numeric-enum-macro v0.2.0\n    Checking pin-project-lite v0.2.15\n    Checking futures-task v0.3.31\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking futures-channel v0.3.31\n    Checking futures-io v0.3.31\n    Checking ahash v0.4.8\n    Checking hashbrown v0.9.1\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n    Checking downcast-rs v1.2.1\n   Compiling zircon-syscall v0.1.0 (/home/runner/check/batch_13/kern-crates/zcore-zircon-syscall)\n    Checking region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\nerror: could not compile `region-alloc` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 9,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=zircon-syscall, checker=Lockbud\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_13/kern-crates/zcore-zircon-syscall\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling proc-macro2 v1.0.89\n   Compiling autocfg v1.4.0\n   Compiling unicode-ident v1.0.13\n   Compiling log v0.4.22\n   Compiling rustversion v1.0.18\n[2024-11-02T00:45:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T00:45:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling scopeguard v1.2.0\n   Compiling raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling quote v1.0.37\n   Compiling syn v2.0.86\n   Compiling bitflags v2.6.0\n   Compiling volatile v0.4.6\n   Compiling spin v0.9.8\n   Compiling x86_64 v0.14.12\n   Compiling paste v1.0.15\n   Compiling volatile v0.3.0\n   Compiling rsdp v2.0.1\n   Compiling bit v0.1.1\n   Compiling x86 v0.46.0\n   Compiling cfg-if v1.0.0\n   Compiling managed v0.8.0\n   Compiling trapframe v0.9.0\n   Compiling futures-sink v0.3.31\n   Compiling byteorder v1.5.0\n   Compiling futures-core v0.3.31\n   Compiling acpi v4.1.1\n   Compiling smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n   Compiling lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n   Compiling x2apic v0.4.3\n   Compiling virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n   Compiling isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n   Compiling lazy_static v1.5.0\n   Compiling pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n   Compiling numeric-enum-macro v0.2.0\n   Compiling pin-project-lite v0.2.15\n   Compiling futures-task v0.3.31\n   Compiling device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n   Compiling pin-utils v0.1.0\n   Compiling futures-channel v0.3.31\n   Compiling futures-io v0.3.31\n   Compiling ahash v0.4.8\n   Compiling hashbrown v0.9.1\n   Compiling zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n   Compiling region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\nerror[E0635]: unknown feature `btree_drain_filter`\n --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:2:12\n  |\n2 | #![feature(btree_drain_filter)]\n  |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `drain_filter` found for struct `alloc::collections::BTreeSet` in the current scope\n   --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:120:14\n    |\n119 | /         self.regions\n120 | |             .drain_filter(|r| {\n    | |             -^^^^^^^^^^^^ method not found in `BTreeSet<Region>`\n    | |_____________|\n    |\n\nSome errors have detailed explanations: E0599, E0635.\nFor more information about an error, try `rustc --explain E0599`.\nerror: could not compile `region-alloc` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 10,
      "file": "(virtual) rap",
      "kind": "Cargo",
      "raw": "// pkg_name=zircon-syscall, checker=Rap\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_13/kern-crates/zcore-zircon-syscall\n// cmd=cargo +nightly-2024-06-30 rap -F -M\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.89\n    Checking bit_field v0.10.2\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.4.0\n   Compiling rustversion v1.0.18\n    Checking log v0.4.22\n    Checking scopeguard v1.2.0\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling quote v1.0.37\n    Checking bitflags v2.6.0\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n   Compiling syn v2.0.86\n    Checking x86_64 v0.14.12\n   Compiling paste v1.0.15\n    Checking volatile v0.3.0\n    Checking rsdp v2.0.1\n    Checking byteorder v1.5.0\n    Checking cfg-if v1.0.0\n    Checking futures-sink v0.3.31\n    Checking futures-core v0.3.31\n    Checking bit v0.1.1\n   Compiling trapframe v0.9.0\n    Checking managed v0.8.0\n   Compiling x86 v0.46.0\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking acpi v4.1.1\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking x2apic v0.4.3\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking lazy_static v1.5.0\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n    Checking futures-task v0.3.31\n    Checking pin-project-lite v0.2.15\n    Checking numeric-enum-macro v0.2.0\n    Checking pin-utils v0.1.0\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking futures-channel v0.3.31\n    Checking futures-io v0.3.31\n    Checking ahash v0.4.8\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n    Checking hashbrown v0.9.1\n   Compiling zircon-syscall v0.1.0 (/home/runner/check/batch_13/kern-crates/zcore-zircon-syscall)\n    Checking region-alloc v0.1.0 (https://github.com/rzswh/region-allocator?rev=122c7a71#122c7a71)\nerror[E0635]: unknown feature `btree_drain_filter`\n --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:2:12\n  |\n2 | #![feature(btree_drain_filter)]\n  |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `drain_filter` found for struct `BTreeSet` in the current scope\n   --> /home/runner/.cargo/git/checkouts/region-allocator-4314ed0cadd5612c/122c7a7/src/lib.rs:120:14\n    |\n119 | /         self.regions\n120 | |             .drain_filter(|r| {\n    | |             -^^^^^^^^^^^^ method not found in `BTreeSet<Region>`\n    | |_____________|\n    |\n\nSome errors have detailed explanations: E0599, E0635.\n    Checking downcast-rs v1.2.1\nFor more information about an error, try `rustc --explain E0599`.\nerror: could not compile `region-alloc` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n00:45:45|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 19,
      "file": "(virtual) rap",
      "kind": "Cargo",
      "raw": "// pkg_name=zircon-user, checker=Rap\n// toolchain=nightly-2022-01-20, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_13/kern-crates/zcore-zircon-user\n// cmd=cargo +nightly-2024-06-30 rap -F -M\nwarning: `/home/runner/check/batch_13/kern-crates/zcore-zircon-user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/batch_13/kern-crates/zcore-zircon-user/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\n    Checking zircon-user v0.1.0 (/home/runner/check/batch_13/kern-crates/zcore-zircon-user)\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `x86_64-fuchsia` target may not be installed\n  = help: consider downloading the target with `rustup target add x86_64-fuchsia`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `zircon-user` (bin \"hello\") due to 1 previous error\n00:45:58|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 25,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  |\n  = note: the `x86_64-unknown-none` target may not support the standard library\n  = note: `std` is required by `is_terminal_polyfill` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 25,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:44:5\n   |\n44 |     std::fs::File,\n   |     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 25,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:37:17\n   |\n37 |                 std::io::IsTerminal::is_terminal(self)\n   |                 ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 25,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:45:5\n   |\n45 |     std::io::Stdin,\n   |     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 25,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:46:5\n   |\n46 |     std::io::StdinLock<'_>,\n   |     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 25,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:47:5\n   |\n47 |     std::io::Stdout,\n   |     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 25,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:48:5\n   |\n48 |     std::io::StdoutLock<'_>,\n   |     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 25,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:49:5\n   |\n49 |     std::io::Stderr,\n   |     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 25,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:50:5\n   |\n50 |     std::io::StderrLock<'_>\n   |     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 25,
      "file": "unkonwn-but-maybe-important",
      "kind": "Clippy(Error)",
      "raw": "error: requires `sized` lang_item\n\n"
    },
    {
      "cmd_idx": 25,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/memchr-2.7.4/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/memchr-2.7.4/src/lib.rs:198:1\n    |\n198 | extern crate std;\n    | ^^^^^^^^^^^^^^^^^ can't find crate\n    |\n    = note: the `x86_64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 26,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  |\n  = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n  = note: `std` is required by `is_terminal_polyfill` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 26,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:44:5\n   |\n44 |     std::fs::File,\n   |     ^^^ can't find crate\n   |\n   = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 26,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:37:17\n   |\n37 |                 std::io::IsTerminal::is_terminal(self)\n   |                 ^^^ can't find crate\n   |\n   = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 26,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:45:5\n   |\n45 |     std::io::Stdin,\n   |     ^^^ can't find crate\n   |\n   = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 26,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:46:5\n   |\n46 |     std::io::StdinLock<'_>,\n   |     ^^^ can't find crate\n   |\n   = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 26,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:47:5\n   |\n47 |     std::io::Stdout,\n   |     ^^^ can't find crate\n   |\n   = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 26,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:48:5\n   |\n48 |     std::io::StdoutLock<'_>,\n   |     ^^^ can't find crate\n   |\n   = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 26,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:49:5\n   |\n49 |     std::io::Stderr,\n   |     ^^^ can't find crate\n   |\n   = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 26,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:50:5\n   |\n50 |     std::io::StderrLock<'_>\n   |     ^^^ can't find crate\n   |\n   = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 26,
      "file": "unkonwn-but-maybe-important",
      "kind": "Clippy(Error)",
      "raw": "error: requires `sized` lang_item\n\n"
    },
    {
      "cmd_idx": 26,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/memchr-2.7.4/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/memchr-2.7.4/src/lib.rs:198:1\n    |\n198 | extern crate std;\n    | ^^^^^^^^^^^^^^^^^ can't find crate\n    |\n    = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 26,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-syntax-0.8.5/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-syntax-0.8.5/src/lib.rs:174:1\n    |\n174 | extern crate std;\n    | ^^^^^^^^^^^^^^^^^ can't find crate\n    |\n    = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  |\n  = note: the `aarch64-unknown-none` target may not support the standard library\n  = note: `std` is required by `anstyle_query` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs:24:17\n   |\n24 |     let value = std::env::var_os(\"CLICOLOR\")?;\n   |                 ^^^ can't find crate\n   |\n   = note: the `aarch64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/memchr-2.7.4/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/memchr-2.7.4/src/lib.rs:198:1\n    |\n198 | extern crate std;\n    | ^^^^^^^^^^^^^^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs:35:15\n   |\n35 |     non_empty(std::env::var_os(\"CLICOLOR_FORCE\").as_deref())\n   |               ^^^ can't find crate\n   |\n   = note: the `aarch64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs:50:15\n   |\n50 |     non_empty(std::env::var_os(\"NO_COLOR\").as_deref())\n   |               ^^^ can't find crate\n   |\n   = note: the `aarch64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs:58:15\n   |\n58 |         match std::env::var_os(\"TERM\") {\n   |               ^^^ can't find crate\n   |\n   = note: the `aarch64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs:116:17\n    |\n116 |     let value = std::env::var_os(\"COLORTERM\");\n    |                 ^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs:134:5\n    |\n134 |     std::env::var_os(\"CI\").is_some()\n    |     ^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs:137:27\n    |\n137 | fn non_empty(var: Option<&std::ffi::OsStr>) -> bool {\n    |                           ^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/windows.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/windows.rs:63:43\n   |\n63 |     pub(crate) fn enable_ansi_colors() -> Option<bool> {\n   |                                           ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n62 +     use core::option::Option;\n   |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/windows.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `None` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/windows.rs:64:9\n   |\n64 |         None\n   |         ^^^^ not found in this scope\n   |\nhelp: consider importing this unit variant\n   |\n62 +     use core::option::Option::None;\n   |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/windows.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/windows.rs:71:32\n   |\n71 | pub fn enable_ansi_colors() -> Option<bool> {\n   |                                ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n3  + use core::option::Option;\n   |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs:23:22\n   |\n23 | pub fn clicolor() -> Option<bool> {\n   |                      ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n8  + use core::option::Option;\n   |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs:25:5\n   |\n25 |     Some(value != \"0\")\n   |     ^^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n8  + use core::option::Option::Some;\n   |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs:62:13\n   |\n62 |             Some(k) => {\n   |             ^^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n8  + use core::option::Option::Some;\n   |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs:137:19\n    |\n137 | fn non_empty(var: Option<&std::ffi::OsStr>) -> bool {\n    |                   ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n8   + use core::option::Option;\n    |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "unkonwn-but-maybe-important",
      "kind": "Clippy(Error)",
      "raw": "error: requires `sized` lang_item\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-syntax-0.8.5/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-syntax-0.8.5/src/lib.rs:174:1\n    |\n174 | extern crate std;\n    | ^^^^^^^^^^^^^^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
    },
    {
      "cmd_idx": 32,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-08T08:16:15Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-08T08:16:15Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 40,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=dtb-tool, checker=Clippy\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_12/qclic/fdt-parser/dtb-tool\n// cmd=cargo clippy --target x86_64-unknown-none --no-deps --message-format=json\n    Checking memchr v2.7.4\n    Checking utf8parse v0.2.2\n    Checking colorchoice v1.0.3\n    Checking is_terminal_polyfill v1.70.1\nerror: could not compile `is_terminal_polyfill` (lib) due to 10 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `memchr` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 41,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=dtb-tool, checker=Lockbud\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_12/qclic/fdt-parser/dtb-tool\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling memchr v2.7.4\n   Compiling utf8parse v0.2.2\n   Compiling regex-syntax v0.8.5\n   Compiling anstyle v1.0.10\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `aarch64-unknown-none` target may not support the standard library\n  = note: `std` is required by `anstyle` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:434:9\n    |\n434 |     use std::mem::size_of;\n    |         ^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find attribute `derive` in this scope\n --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:3:3\n  |\n3 | #[derive(Copy, Clone, Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]\n  |   ^^^^^^\n  |\nhelp: consider importing this attribute macro\n  |\n1 + use core::prelude::rust_2024::derive;\n  |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:136:3\n    |\n136 | #[derive(Copy, Clone, Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:212:28\n    |\n212 |             Self::Black => escape!(\"3\", \"0\"),\n    |                            ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:213:26\n    |\n213 |             Self::Red => escape!(\"3\", \"1\"),\n    |                          ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:214:28\n    |\n214 |             Self::Green => escape!(\"3\", \"2\"),\n    |                            ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:215:29\n    |\n215 |             Self::Yellow => escape!(\"3\", \"3\"),\n    |                             ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:216:27\n    |\n216 |             Self::Blue => escape!(\"3\", \"4\"),\n    |                           ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:217:30\n    |\n217 |             Self::Magenta => escape!(\"3\", \"5\"),\n    |                              ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:218:27\n    |\n218 |             Self::Cyan => escape!(\"3\", \"6\"),\n    |                           ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:219:28\n    |\n219 |             Self::White => escape!(\"3\", \"7\"),\n    |                            ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:220:34\n    |\n220 |             Self::BrightBlack => escape!(\"9\", \"0\"),\n    |                                  ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:221:32\n    |\n221 |             Self::BrightRed => escape!(\"9\", \"1\"),\n    |                                ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:222:34\n    |\n222 |             Self::BrightGreen => escape!(\"9\", \"2\"),\n    |                                  ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:223:35\n    |\n223 |             Self::BrightYellow => escape!(\"9\", \"3\"),\n    |                                   ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/memchr-2.7.4/src/lib.rs:198:1\n    |\n198 | extern crate std;\n    | ^^^^^^^^^^^^^^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:224:33\n    |\n224 |             Self::BrightBlue => escape!(\"9\", \"4\"),\n    |                                 ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:225:36\n    |\n225 |             Self::BrightMagenta => escape!(\"9\", \"5\"),\n    |                                    ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\n   Compiling anstyle-parse v0.2.6\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:226:33\n    |\n226 |             Self::BrightCyan => escape!(\"9\", \"6\"),\n    |                                 ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:227:34\n    |\n227 |             Self::BrightWhite => escape!(\"9\", \"7\"),\n    |                                  ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:245:28\n    |\n245 |             Self::Black => escape!(\"4\", \"0\"),\n    |                            ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:246:26\n    |\n246 |             Self::Red => escape!(\"4\", \"1\"),\n    |                          ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:247:28\n    |\n247 |             Self::Green => escape!(\"4\", \"2\"),\n    |                            ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:248:29\n    |\n248 |             Self::Yellow => escape!(\"4\", \"3\"),\n    |                             ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:249:27\n    |\n249 |             Self::Blue => escape!(\"4\", \"4\"),\n    |                           ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:250:30\n    |\n250 |             Self::Magenta => escape!(\"4\", \"5\"),\n    |                              ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:251:27\n    |\n251 |             Self::Cyan => escape!(\"4\", \"6\"),\n    |                           ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:252:28\n    |\n252 |             Self::White => escape!(\"4\", \"7\"),\n    |                            ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:253:34\n    |\n253 |             Self::BrightBlack => escape!(\"10\", \"0\"),\n    |                                  ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:254:32\n    |\n254 |             Self::BrightRed => escape!(\"10\", \"1\"),\n    |                                ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:255:34\n    |\n255 |             Self::BrightGreen => escape!(\"10\", \"2\"),\n    |                                  ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:256:35\n    |\n256 |             Self::BrightYellow => escape!(\"10\", \"3\"),\n    |                                   ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:257:33\n    |\n257 |             Self::BrightBlue => escape!(\"10\", \"4\"),\n    |                                 ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:258:36\n    |\n258 |             Self::BrightMagenta => escape!(\"10\", \"5\"),\n    |                                    ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:259:33\n    |\n259 |             Self::BrightCyan => escape!(\"10\", \"6\"),\n    |                                 ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:260:34\n    |\n260 |             Self::BrightWhite => escape!(\"10\", \"7\"),\n    |                                  ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:350:3\n    |\n350 | #[derive(Copy, Clone, Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:475:3\n    |\n475 | #[derive(Copy, Clone, Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:570:3\n    |\n570 | #[derive(Copy, Clone, Default, Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:634:3\n    |\n634 | #[derive(Copy, Clone, Default, Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:8:3\n  |\n8 | #[derive(Copy, Clone, Default, PartialEq, Eq, PartialOrd, Ord, Hash)]\n  |   ^^^^^^\n  |\nhelp: consider importing this attribute macro\n  |\n1 + use core::prelude::rust_2024::derive;\n  |\n\nerror: cannot find macro `write` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:193:9\n    |\n193 |         write!(f, \"Effects(\")?;\n    |         ^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::write;\n    |\n\nerror: cannot find macro `write` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:196:17\n    |\n196 |                 write!(f, \" | \")?;\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::write;\n    |\n\nerror: cannot find macro `write` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:198:13\n    |\n198 |             write!(f, \"{}\", METADATA[index].name)?;\n    |             ^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::write;\n    |\n\nerror: cannot find macro `write` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:200:9\n    |\n200 |         write!(f, \")\")?;\n    |         ^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::write;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:271:17\n    |\n271 |         escape: escape!(\"1\"),\n    |                 ------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:275:17\n    |\n275 |         escape: escape!(\"2\"),\n    |                 ------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:279:17\n    |\n279 |         escape: escape!(\"3\"),\n    |                 ------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:283:17\n    |\n283 |         escape: escape!(\"4\"),\n    |                 ------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:287:17\n    |\n287 |         escape: escape!(\"21\"),\n    |                 ------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:291:17\n    |\n291 |         escape: escape!(\"4:3\"),\n    |                 -------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:295:17\n    |\n295 |         escape: escape!(\"4:4\"),\n    |                 -------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:299:17\n    |\n299 |         escape: escape!(\"4:5\"),\n    |                 -------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:303:17\n    |\n303 |         escape: escape!(\"5\"),\n    |                 ------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:307:17\n    |\n307 |         escape: escape!(\"7\"),\n    |                 ------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:311:17\n    |\n311 |         escape: escape!(\"8\"),\n    |                 ------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:315:17\n    |\n315 |         escape: escape!(\"9\"),\n    |                 ------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:319:3\n    |\n319 | #[derive(Copy, Clone, Default, Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-syntax-0.8.5/src/lib.rs:174:1\n    |\n174 | extern crate std;\n    | ^^^^^^^^^^^^^^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:333:3\n    |\n333 | #[derive(Clone, Debug, PartialEq, Eq)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:357:3\n    |\n357 | #[derive(Clone, Debug, PartialEq, Eq)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/reset.rs:3:3\n  |\n3 | #[derive(Copy, Clone, Default, Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]\n  |   ^^^^^^\n  |\nhelp: consider importing this attribute macro\n  |\n1 + use core::prelude::rust_2024::derive;\n  |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:17:3\n   |\n17 | #[derive(Copy, Clone, Default, Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:422:3\n    |\n422 | #[derive(Copy, Clone, Default, Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:431:3\n    |\n431 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find macro `dbg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:435:5\n    |\n435 |     dbg!(size_of::<Style>());\n    |     ^^^\n\nerror: cannot find macro `dbg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:436:5\n    |\n436 |     dbg!(size_of::<StyleDisplay>());\n    |     ^^^\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:46:53\n   |\n46 |     pub(crate) fn write_fg_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n   |                                                     ^^^ can't find crate\n   |\n   = note: the `aarch64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:46:72\n   |\n46 |     pub(crate) fn write_fg_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n   |                                                                        ^^^ can't find crate\n   |\n   = note: the `aarch64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:67:53\n   |\n67 |     pub(crate) fn write_bg_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n   |                                                     ^^^ can't find crate\n   |\n   = note: the `aarch64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:67:72\n   |\n67 |     pub(crate) fn write_bg_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n   |                                                                        ^^^ can't find crate\n   |\n   = note: the `aarch64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:87:60\n   |\n87 |     pub(crate) fn write_underline_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n   |                                                            ^^^ can't find crate\n   |\n   = note: the `aarch64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:87:79\n   |\n87 |     pub(crate) fn write_underline_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n   |                                                                               ^^^ can't find crate\n   |\n   = note: the `aarch64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:622:39\n    |\n622 |     fn write_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n    |                                       ^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:622:58\n    |\n622 |     fn write_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n    |                                                          ^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:174:50\n    |\n174 |     pub(crate) fn write_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n    |                                                  ^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:174:69\n    |\n174 |     pub(crate) fn write_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n    |                                                                     ^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n   Compiling is_terminal_polyfill v1.70.1\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `aarch64-unknown-none` target may not support the standard library\n  = note: `std` is required by `is_terminal_polyfill` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:44:5\n   |\n44 |     std::fs::File,\n   |     ^^^ can't find crate\n   |\n   = note: the `aarch64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:37:17\n   |\n37 |                 std::io::IsTerminal::is_terminal(self)\n   |                 ^^^ can't find crate\n   |\n   = note: the `aarch64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:45:5\n   |\n45 |     std::io::Stdin,\n   |     ^^^ can't find crate\n   |\n   = note: the `aarch64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:46:5\n   |\n46 |     std::io::StdinLock<'_>,\n   |     ^^^ can't find crate\n   |\n   = note: the `aarch64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:131:43\n    |\n131 |     pub fn write_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n    |                                           ^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:47:5\n   |\n47 |     std::io::Stdout,\n   |     ^^^ can't find crate\n   |\n   = note: the `aarch64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:131:62\n    |\n131 |     pub fn write_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n    |                                                              ^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:48:5\n   |\n48 |     std::io::StdoutLock<'_>,\n   |     ^^^ can't find crate\n   |\n   = note: the `aarch64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:49:5\n   |\n49 |     std::io::Stderr,\n   |     ^^^ can't find crate\n   |\n   = note: the `aarch64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:50:5\n   |\n50 |     std::io::StderrLock<'_>\n   |     ^^^ can't find crate\n   |\n   = note: the `aarch64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: requires `sized` lang_item\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `is_terminal_polyfill` (lib) due to 10 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:166:49\n    |\n166 |     pub fn write_reset_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n    |                                                 ^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:166:68\n    |\n166 |     pub fn write_reset_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n    |                                                                    ^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0405]: cannot find trait `Into` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:22:38\n   |\n22 |     pub fn on(self, background: impl Into<Color>) -> crate::Style {\n   |                                      ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n1  + use core::convert::Into;\n   |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:24:23\n   |\n24 |             .fg_color(Some(self))\n   |                       ^^^^\n   |\nhelp: try calling `Some` as a method\n   |\n24 |             .fg_color(self.Some())\n   |                       ~~~~~~~~~~~\nhelp: consider importing this tuple variant\n   |\n1  + use core::option::Option::Some;\n   |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:25:23\n   |\n25 |             .bg_color(Some(background.into()))\n   |                       ^^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n1  + use core::option::Option::Some;\n   |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:31:38\n   |\n31 |         crate::Style::new().fg_color(Some(self))\n   |                                      ^^^^\n   |\nhelp: try calling `Some` as a method\n   |\n31 |         crate::Style::new().fg_color(self.Some())\n   |                                      ~~~~~~~~~~~\nhelp: consider importing this tuple variant\n   |\n1  + use core::option::Option::Some;\n   |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:36:57\n   |\n36 |     pub fn render_fg(self) -> impl core::fmt::Display + Copy {\n   |                                                         ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n1  + use core::marker::Copy;\n   |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:57:57\n   |\n57 |     pub fn render_bg(self) -> impl core::fmt::Display + Copy {\n   |                                                         ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n1  + use core::marker::Copy;\n   |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:77:71\n   |\n77 |     pub(crate) fn render_underline(self) -> impl core::fmt::Display + Copy {\n   |                                                                       ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n1  + use core::marker::Copy;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:97:6\n   |\n97 | impl From<AnsiColor> for Color {\n   |      ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n1  + use core::convert::From;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:104:6\n    |\n104 | impl From<Ansi256Color> for Color {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:111:6\n    |\n111 | impl From<RgbColor> for Color {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:118:6\n    |\n118 | impl From<u8> for Color {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:125:6\n    |\n125 | impl From<(u8, u8, u8)> for Color {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `Into` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:191:38\n    |\n191 |     pub fn on(self, background: impl Into<Color>) -> crate::Style {\n    |                                      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::Into;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:193:23\n    |\n193 |             .fg_color(Some(self.into()))\n    |                       ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:194:23\n    |\n194 |             .bg_color(Some(background.into()))\n    |                       ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:200:38\n    |\n200 |         crate::Style::new().fg_color(Some(Color::Ansi(self)))\n    |                                      ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:205:57\n    |\n205 |     pub fn render_fg(self) -> impl core::fmt::Display + Copy {\n    |                                                         ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::marker::Copy;\n    |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:238:57\n    |\n238 |     pub fn render_bg(self) -> impl core::fmt::Display + Copy {\n    |                                                         ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::marker::Copy;\n    |\n\nerror[E0405]: cannot find trait `Into` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:357:38\n    |\n357 |     pub fn on(self, background: impl Into<Color>) -> crate::Style {\n    |                                      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::Into;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:359:23\n    |\n359 |             .fg_color(Some(self.into()))\n    |                       ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:360:23\n    |\n360 |             .bg_color(Some(background.into()))\n    |                       ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:366:38\n    |\n366 |         crate::Style::new().fg_color(Some(Color::Ansi256(self)))\n    |                                      ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:377:37\n    |\n377 |     pub const fn into_ansi(self) -> Option<AnsiColor> {\n    |                                     ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n1   + use core::option::Option;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:379:18\n    |\n379 |             0 => Some(AnsiColor::Black),\n    |                  ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:380:18\n    |\n380 |             1 => Some(AnsiColor::Red),\n    |                  ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:381:18\n    |\n381 |             2 => Some(AnsiColor::Green),\n    |                  ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:382:18\n    |\n382 |             3 => Some(AnsiColor::Yellow),\n    |                  ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:383:18\n    |\n383 |             4 => Some(AnsiColor::Blue),\n    |                  ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:384:18\n    |\n384 |             5 => Some(AnsiColor::Magenta),\n    |                  ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:385:18\n    |\n385 |             6 => Some(AnsiColor::Cyan),\n    |                  ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:386:18\n    |\n386 |             7 => Some(AnsiColor::White),\n    |                  ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:387:18\n    |\n387 |             8 => Some(AnsiColor::BrightBlack),\n    |                  ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:388:18\n    |\n388 |             9 => Some(AnsiColor::BrightRed),\n    |                  ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:389:19\n    |\n389 |             10 => Some(AnsiColor::BrightGreen),\n    |                   ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:390:19\n    |\n390 |             11 => Some(AnsiColor::BrightYellow),\n    |                   ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:391:19\n    |\n391 |             12 => Some(AnsiColor::BrightBlue),\n    |                   ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:392:19\n    |\n392 |             13 => Some(AnsiColor::BrightMagenta),\n    |                   ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:393:19\n    |\n393 |             14 => Some(AnsiColor::BrightCyan),\n    |                   ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:394:19\n    |\n394 |             15 => Some(AnsiColor::BrightWhite),\n    |                   ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find value `None` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:395:18\n    |\n395 |             _ => None,\n    |                  ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n1   + use core::option::Option::None;\n    |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:424:57\n    |\n424 |     pub fn render_fg(self) -> impl core::fmt::Display + Copy {\n    |                                                         ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::marker::Copy;\n    |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:438:57\n    |\n438 |     pub fn render_bg(self) -> impl core::fmt::Display + Copy {\n    |                                                         ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::marker::Copy;\n    |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:459:6\n    |\n459 | impl From<u8> for Ansi256Color {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:466:6\n    |\n466 | impl From<AnsiColor> for Ansi256Color {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `Into` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:481:38\n    |\n481 |     pub fn on(self, background: impl Into<Color>) -> crate::Style {\n    |                                      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::Into;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:483:23\n    |\n483 |             .fg_color(Some(self.into()))\n    |                       ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:484:23\n    |\n484 |             .bg_color(Some(background.into()))\n    |                       ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:490:38\n    |\n490 |         crate::Style::new().fg_color(Some(Color::Rgb(self)))\n    |                                      ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:513:57\n    |\n513 |     pub fn render_fg(self) -> impl core::fmt::Display + Copy {\n    |                                                         ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::marker::Copy;\n    |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:531:57\n    |\n531 |     pub fn render_bg(self) -> impl core::fmt::Display + Copy {\n    |                                                         ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::marker::Copy;\n    |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:560:6\n    |\n560 | impl From<(u8, u8, u8)> for RgbColor {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:168:54\n    |\n168 |     pub fn render(self) -> impl core::fmt::Display + Copy {\n    |                                                      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::marker::Copy;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:178:9\n    |\n178 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:201:9\n    |\n201 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:328:9\n    |\n328 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0405]: cannot find trait `Iterator` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:339:6\n    |\n339 | impl Iterator for EffectIter {\n    |      ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::iter::Iterator;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:342:27\n    |\n342 |     fn next(&mut self) -> Option<Self::Item> {\n    |                           ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n1   + use core::option::Option;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:349:24\n    |\n349 |                 return Some(effect);\n    |                        ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find value `None` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:353:9\n    |\n353 |         None\n    |         ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n1   + use core::option::Option::None;\n    |\n\nerror[E0405]: cannot find trait `Iterator` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:363:6\n    |\n363 | impl Iterator for EffectIndexIter {\n    |      ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::iter::Iterator;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:366:27\n    |\n366 |     fn next(&mut self) -> Option<Self::Item> {\n    |                           ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n1   + use core::option::Option;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:373:24\n    |\n373 |                 return Some(index);\n    |                        ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find value `None` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:377:9\n    |\n377 |         None\n    |         ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n1   + use core::option::Option::None;\n    |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/reset.rs:11:54\n   |\n11 |     pub fn render(self) -> impl core::fmt::Display + Copy {\n   |                                                      ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n1  + use core::marker::Copy;\n   |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:19:9\n   |\n19 |     fg: Option<crate::Color>,\n   |         ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n1  + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:20:9\n   |\n20 |     bg: Option<crate::Color>,\n   |         ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n1  + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:21:16\n   |\n21 |     underline: Option<crate::Color>,\n   |                ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n1  + use core::option::Option;\n   |\n\nerror[E0425]: cannot find value `None` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:37:17\n   |\n37 |             fg: None,\n   |                 ^^^^ not found in this scope\n   |\nhelp: consider importing this unit variant\n   |\n1  + use core::option::Option::None;\n   |\n\nerror[E0425]: cannot find value `None` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:38:17\n   |\n38 |             bg: None,\n   |                 ^^^^ not found in this scope\n   |\nhelp: consider importing this unit variant\n   |\n1  + use core::option::Option::None;\n   |\n\nerror[E0425]: cannot find value `None` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:39:24\n   |\n39 |             underline: None,\n   |                        ^^^^ not found in this scope\n   |\nhelp: consider importing this unit variant\n   |\n1  + use core::option::Option::None;\n   |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:53:41\n   |\n53 |     pub const fn fg_color(mut self, fg: Option<crate::Color>) -> Self {\n   |                                         ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n1  + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:67:41\n   |\n67 |     pub const fn bg_color(mut self, bg: Option<crate::Color>) -> Self {\n   |                                         ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n1  + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:81:55\n   |\n81 |     pub const fn underline_color(mut self, underline: Option<crate::Color>) -> Self {\n   |                                                       ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n1  + use core::option::Option;\n   |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:104:54\n    |\n104 |     pub fn render(self) -> impl core::fmt::Display + Copy {\n    |                                                      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::marker::Copy;\n    |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:113:16\n    |\n113 |         if let Some(fg) = self.fg {\n    |                ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:117:16\n    |\n117 |         if let Some(bg) = self.bg {\n    |                ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:121:16\n    |\n121 |         if let Some(underline) = self.underline {\n    |                ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:125:9\n    |\n125 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:134:16\n    |\n134 |         if let Some(fg) = self.fg {\n    |                ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:138:16\n    |\n138 |         if let Some(bg) = self.bg {\n    |                ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:142:16\n    |\n142 |         if let Some(underline) = self.underline {\n    |                ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:146:9\n    |\n146 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:153:60\n    |\n153 |     pub fn render_reset(self) -> impl core::fmt::Display + Copy {\n    |                                                            ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::marker::Copy;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:170:13\n    |\n170 |             Ok(())\n    |             ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:294:40\n    |\n294 |     pub const fn get_fg_color(self) -> Option<crate::Color> {\n    |                                        ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n1   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:301:40\n    |\n301 |     pub const fn get_bg_color(self) -> Option<crate::Color> {\n    |                                        ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n1   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:307:47\n    |\n307 |     pub const fn get_underline_color(self) -> Option<crate::Color> {\n    |                                               ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n1   + use core::option::Option;\n    |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:332:6\n    |\n332 | impl From<crate::Effects> for Style {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `PartialEq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:403:6\n    |\n403 | impl PartialEq<crate::Effects> for Style {\n    |      ^^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::cmp::PartialEq;\n    |\n\nerror: could not compile `regex-syntax` (lib) due to 1 previous error\nSome errors have detailed explanations: E0405, E0412, E0425, E0463, E0531.\nFor more information about an error, try `rustc --explain E0405`.\nerror: could not compile `anstyle` (lib) due to 169 previous errors\nerror: could not compile `memchr` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 42,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=dtb-tool, checker=Lockbud\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_12/qclic/fdt-parser/dtb-tool\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf\n   Compiling utf8parse v0.2.2\n   Compiling memchr v2.7.4\n   Compiling colorchoice v1.0.3\n   Compiling anstyle-query v1.1.2\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n  = note: `std` is required by `anstyle_query` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs:24:17\n   |\n24 |     let value = std::env::var_os(\"CLICOLOR\")?;\n   |                 ^^^ can't find crate\n   |\n   = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs:35:15\n   |\n35 |     non_empty(std::env::var_os(\"CLICOLOR_FORCE\").as_deref())\n   |               ^^^ can't find crate\n   |\n   = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs:50:15\n   |\n50 |     non_empty(std::env::var_os(\"NO_COLOR\").as_deref())\n   |               ^^^ can't find crate\n   |\n   = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs:58:15\n   |\n58 |         match std::env::var_os(\"TERM\") {\n   |               ^^^ can't find crate\n   |\n   = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs:116:17\n    |\n116 |     let value = std::env::var_os(\"COLORTERM\");\n    |                 ^^^ can't find crate\n    |\n    = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs:134:5\n    |\n134 |     std::env::var_os(\"CI\").is_some()\n    |     ^^^ can't find crate\n    |\n    = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/memchr-2.7.4/src/lib.rs:198:1\n    |\n198 | extern crate std;\n    | ^^^^^^^^^^^^^^^^^ can't find crate\n    |\n    = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs:137:27\n    |\n137 | fn non_empty(var: Option<&std::ffi::OsStr>) -> bool {\n    |                           ^^^ can't find crate\n    |\n    = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/windows.rs:63:43\n   |\n63 |     pub(crate) fn enable_ansi_colors() -> Option<bool> {\n   |                                           ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n62 +     use core::option::Option;\n   |\n\nerror[E0425]: cannot find value `None` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/windows.rs:64:9\n   |\n64 |         None\n   |         ^^^^ not found in this scope\n   |\nhelp: consider importing this unit variant\n   |\n62 +     use core::option::Option::None;\n   |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/windows.rs:71:32\n   |\n71 | pub fn enable_ansi_colors() -> Option<bool> {\n   |                                ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n3  + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs:23:22\n   |\n23 | pub fn clicolor() -> Option<bool> {\n   |                      ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n8  + use core::option::Option;\n   |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs:25:5\n   |\n25 |     Some(value != \"0\")\n   |     ^^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n8  + use core::option::Option::Some;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs:62:13\n   |\n62 |             Some(k) => {\n   |             ^^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n8  + use core::option::Option::Some;\n   |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-query-1.1.2/src/lib.rs:137:19\n    |\n137 | fn non_empty(var: Option<&std::ffi::OsStr>) -> bool {\n    |                   ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n8   + use core::option::Option;\n    |\n\n   Compiling anstyle-parse v0.2.6\nerror: requires `sized` lang_item\n\nSome errors have detailed explanations: E0412, E0425, E0463, E0531.\nFor more information about an error, try `rustc --explain E0412`.\nerror: could not compile `anstyle-query` (lib) due to 16 previous errors\nwarning: build failed, waiting for other jobs to finish...\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `memchr` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 43,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=dtb-tool, checker=Lockbud\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_12/qclic/fdt-parser/dtb-tool\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none\n   Compiling memchr v2.7.4\n   Compiling utf8parse v0.2.2\n   Compiling is_terminal_polyfill v1.70.1\n   Compiling anstyle v1.0.10\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `x86_64-unknown-none` target may not support the standard library\n  = note: `std` is required by `is_terminal_polyfill` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:44:5\n   |\n44 |     std::fs::File,\n   |     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:37:17\n   |\n37 |                 std::io::IsTerminal::is_terminal(self)\n   |                 ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:45:5\n   |\n45 |     std::io::Stdin,\n   |     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:46:5\n   |\n46 |     std::io::StdinLock<'_>,\n   |     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:47:5\n   |\n47 |     std::io::Stdout,\n   |     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `x86_64-unknown-none` target may not support the standard library\n  = note: `std` is required by `anstyle` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:48:5\n   |\n48 |     std::io::StdoutLock<'_>,\n   |     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:49:5\n   |\n49 |     std::io::Stderr,\n   |     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/is_terminal_polyfill-1.70.1/src/lib.rs:50:5\n   |\n50 |     std::io::StderrLock<'_>\n   |     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:434:9\n    |\n434 |     use std::mem::size_of;\n    |         ^^^ can't find crate\n    |\n    = note: the `x86_64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: requires `sized` lang_item\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `is_terminal_polyfill` (lib) due to 10 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: cannot find attribute `derive` in this scope\n --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:3:3\n  |\n3 | #[derive(Copy, Clone, Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]\n  |   ^^^^^^\n  |\nhelp: consider importing this attribute macro\n  |\n1 + use core::prelude::rust_2024::derive;\n  |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:136:3\n    |\n136 | #[derive(Copy, Clone, Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:212:28\n    |\n212 |             Self::Black => escape!(\"3\", \"0\"),\n    |                            ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:213:26\n    |\n213 |             Self::Red => escape!(\"3\", \"1\"),\n    |                          ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:214:28\n    |\n214 |             Self::Green => escape!(\"3\", \"2\"),\n    |                            ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:215:29\n    |\n215 |             Self::Yellow => escape!(\"3\", \"3\"),\n    |                             ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:216:27\n    |\n216 |             Self::Blue => escape!(\"3\", \"4\"),\n    |                           ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:217:30\n    |\n217 |             Self::Magenta => escape!(\"3\", \"5\"),\n    |                              ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:218:27\n    |\n218 |             Self::Cyan => escape!(\"3\", \"6\"),\n    |                           ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:219:28\n    |\n219 |             Self::White => escape!(\"3\", \"7\"),\n    |                            ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:220:34\n    |\n220 |             Self::BrightBlack => escape!(\"9\", \"0\"),\n    |                                  ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:221:32\n    |\n221 |             Self::BrightRed => escape!(\"9\", \"1\"),\n    |                                ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:222:34\n    |\n222 |             Self::BrightGreen => escape!(\"9\", \"2\"),\n    |                                  ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:223:35\n    |\n223 |             Self::BrightYellow => escape!(\"9\", \"3\"),\n    |                                   ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:224:33\n    |\n224 |             Self::BrightBlue => escape!(\"9\", \"4\"),\n    |                                 ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:225:36\n    |\n225 |             Self::BrightMagenta => escape!(\"9\", \"5\"),\n    |                                    ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:226:33\n    |\n226 |             Self::BrightCyan => escape!(\"9\", \"6\"),\n    |                                 ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:227:34\n    |\n227 |             Self::BrightWhite => escape!(\"9\", \"7\"),\n    |                                  ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:245:28\n    |\n245 |             Self::Black => escape!(\"4\", \"0\"),\n    |                            ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:246:26\n    |\n246 |             Self::Red => escape!(\"4\", \"1\"),\n    |                          ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:247:28\n    |\n247 |             Self::Green => escape!(\"4\", \"2\"),\n    |                            ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/memchr-2.7.4/src/lib.rs:198:1\n    |\n198 | extern crate std;\n    | ^^^^^^^^^^^^^^^^^ can't find crate\n    |\n    = note: the `x86_64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:248:29\n    |\n248 |             Self::Yellow => escape!(\"4\", \"3\"),\n    |                             ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:249:27\n    |\n249 |             Self::Blue => escape!(\"4\", \"4\"),\n    |                           ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:250:30\n    |\n250 |             Self::Magenta => escape!(\"4\", \"5\"),\n    |                              ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:251:27\n    |\n251 |             Self::Cyan => escape!(\"4\", \"6\"),\n    |                           ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:252:28\n    |\n252 |             Self::White => escape!(\"4\", \"7\"),\n    |                            ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:253:34\n    |\n253 |             Self::BrightBlack => escape!(\"10\", \"0\"),\n    |                                  ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:254:32\n    |\n254 |             Self::BrightRed => escape!(\"10\", \"1\"),\n    |                                ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:255:34\n    |\n255 |             Self::BrightGreen => escape!(\"10\", \"2\"),\n    |                                  ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:256:35\n    |\n256 |             Self::BrightYellow => escape!(\"10\", \"3\"),\n    |                                   ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:257:33\n    |\n257 |             Self::BrightBlue => escape!(\"10\", \"4\"),\n    |                                 ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:258:36\n    |\n258 |             Self::BrightMagenta => escape!(\"10\", \"5\"),\n    |                                    ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:259:33\n    |\n259 |             Self::BrightCyan => escape!(\"10\", \"6\"),\n    |                                 ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:260:34\n    |\n260 |             Self::BrightWhite => escape!(\"10\", \"7\"),\n    |                                  ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:350:3\n    |\n350 | #[derive(Copy, Clone, Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:475:3\n    |\n475 | #[derive(Copy, Clone, Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:570:3\n    |\n570 | #[derive(Copy, Clone, Default, Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:634:3\n    |\n634 | #[derive(Copy, Clone, Default, Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:8:3\n  |\n8 | #[derive(Copy, Clone, Default, PartialEq, Eq, PartialOrd, Ord, Hash)]\n  |   ^^^^^^\n  |\nhelp: consider importing this attribute macro\n  |\n1 + use core::prelude::rust_2024::derive;\n  |\n\nerror: cannot find macro `write` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:193:9\n    |\n193 |         write!(f, \"Effects(\")?;\n    |         ^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::write;\n    |\n\nerror: cannot find macro `write` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:196:17\n    |\n196 |                 write!(f, \" | \")?;\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::write;\n    |\n\nerror: cannot find macro `write` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:198:13\n    |\n198 |             write!(f, \"{}\", METADATA[index].name)?;\n    |             ^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::write;\n    |\n\nerror: cannot find macro `write` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:200:9\n    |\n200 |         write!(f, \")\")?;\n    |         ^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::write;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:271:17\n    |\n271 |         escape: escape!(\"1\"),\n    |                 ------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:275:17\n    |\n275 |         escape: escape!(\"2\"),\n    |                 ------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:279:17\n    |\n279 |         escape: escape!(\"3\"),\n    |                 ------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:283:17\n    |\n283 |         escape: escape!(\"4\"),\n    |                 ------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:287:17\n    |\n287 |         escape: escape!(\"21\"),\n    |                 ------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:291:17\n    |\n291 |         escape: escape!(\"4:3\"),\n    |                 -------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:295:17\n    |\n295 |         escape: escape!(\"4:4\"),\n    |                 -------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:299:17\n    |\n299 |         escape: escape!(\"4:5\"),\n    |                 -------------- in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:303:17\n    |\n303 |         escape: escape!(\"5\"),\n    |                 ------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:307:17\n    |\n307 |         escape: escape!(\"7\"),\n    |                 ------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:311:17\n    |\n311 |         escape: escape!(\"8\"),\n    |                 ------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find macro `concat` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/macros.rs:3:9\n    |\n3   |         concat!(\"\\x1B[\", $($inner),*, \"m\")\n    |         ^^^^^^\n    |\n   ::: /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:315:17\n    |\n315 |         escape: escape!(\"9\"),\n    |                 ------------ in this macro invocation\n    |\n    = note: this error originates in the macro `escape` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:1:1\n    |\n1   + use core::concat;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:319:3\n    |\n319 | #[derive(Copy, Clone, Default, Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:333:3\n    |\n333 | #[derive(Clone, Debug, PartialEq, Eq)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:357:3\n    |\n357 | #[derive(Clone, Debug, PartialEq, Eq)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/reset.rs:3:3\n  |\n3 | #[derive(Copy, Clone, Default, Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]\n  |   ^^^^^^\n  |\nhelp: consider importing this attribute macro\n  |\n1 + use core::prelude::rust_2024::derive;\n  |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:17:3\n   |\n17 | #[derive(Copy, Clone, Default, Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:422:3\n    |\n422 | #[derive(Copy, Clone, Default, Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:431:3\n    |\n431 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find macro `dbg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:435:5\n    |\n435 |     dbg!(size_of::<Style>());\n    |     ^^^\n\nerror: cannot find macro `dbg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:436:5\n    |\n436 |     dbg!(size_of::<StyleDisplay>());\n    |     ^^^\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:46:53\n   |\n46 |     pub(crate) fn write_fg_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n   |                                                     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:46:72\n   |\n46 |     pub(crate) fn write_fg_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n   |                                                                        ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:67:53\n   |\n67 |     pub(crate) fn write_bg_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n   |                                                     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:67:72\n   |\n67 |     pub(crate) fn write_bg_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n   |                                                                        ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:87:60\n   |\n87 |     pub(crate) fn write_underline_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n   |                                                            ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:87:79\n   |\n87 |     pub(crate) fn write_underline_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n   |                                                                               ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:622:39\n    |\n622 |     fn write_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n    |                                       ^^^ can't find crate\n    |\n    = note: the `x86_64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:622:58\n    |\n622 |     fn write_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n    |                                                          ^^^ can't find crate\n    |\n    = note: the `x86_64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:174:50\n    |\n174 |     pub(crate) fn write_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n    |                                                  ^^^ can't find crate\n    |\n    = note: the `x86_64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:174:69\n    |\n174 |     pub(crate) fn write_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n    |                                                                     ^^^ can't find crate\n    |\n    = note: the `x86_64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:131:43\n    |\n131 |     pub fn write_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n    |                                           ^^^ can't find crate\n    |\n    = note: the `x86_64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:131:62\n    |\n131 |     pub fn write_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n    |                                                              ^^^ can't find crate\n    |\n    = note: the `x86_64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:166:49\n    |\n166 |     pub fn write_reset_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n    |                                                 ^^^ can't find crate\n    |\n    = note: the `x86_64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:166:68\n    |\n166 |     pub fn write_reset_to(self, write: &mut dyn std::io::Write) -> std::io::Result<()> {\n    |                                                                    ^^^ can't find crate\n    |\n    = note: the `x86_64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0405]: cannot find trait `Into` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:22:38\n   |\n22 |     pub fn on(self, background: impl Into<Color>) -> crate::Style {\n   |                                      ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n1  + use core::convert::Into;\n   |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:24:23\n   |\n24 |             .fg_color(Some(self))\n   |                       ^^^^\n   |\nhelp: try calling `Some` as a method\n   |\n24 |             .fg_color(self.Some())\n   |                       ~~~~~~~~~~~\nhelp: consider importing this tuple variant\n   |\n1  + use core::option::Option::Some;\n   |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:25:23\n   |\n25 |             .bg_color(Some(background.into()))\n   |                       ^^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n1  + use core::option::Option::Some;\n   |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:31:38\n   |\n31 |         crate::Style::new().fg_color(Some(self))\n   |                                      ^^^^\n   |\nhelp: try calling `Some` as a method\n   |\n31 |         crate::Style::new().fg_color(self.Some())\n   |                                      ~~~~~~~~~~~\nhelp: consider importing this tuple variant\n   |\n1  + use core::option::Option::Some;\n   |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:36:57\n   |\n36 |     pub fn render_fg(self) -> impl core::fmt::Display + Copy {\n   |                                                         ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n1  + use core::marker::Copy;\n   |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:57:57\n   |\n57 |     pub fn render_bg(self) -> impl core::fmt::Display + Copy {\n   |                                                         ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n1  + use core::marker::Copy;\n   |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:77:71\n   |\n77 |     pub(crate) fn render_underline(self) -> impl core::fmt::Display + Copy {\n   |                                                                       ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n1  + use core::marker::Copy;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:97:6\n   |\n97 | impl From<AnsiColor> for Color {\n   |      ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n1  + use core::convert::From;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:104:6\n    |\n104 | impl From<Ansi256Color> for Color {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:111:6\n    |\n111 | impl From<RgbColor> for Color {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:118:6\n    |\n118 | impl From<u8> for Color {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:125:6\n    |\n125 | impl From<(u8, u8, u8)> for Color {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `Into` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:191:38\n    |\n191 |     pub fn on(self, background: impl Into<Color>) -> crate::Style {\n    |                                      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::Into;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:193:23\n    |\n193 |             .fg_color(Some(self.into()))\n    |                       ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:194:23\n    |\n194 |             .bg_color(Some(background.into()))\n    |                       ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:200:38\n    |\n200 |         crate::Style::new().fg_color(Some(Color::Ansi(self)))\n    |                                      ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:205:57\n    |\n205 |     pub fn render_fg(self) -> impl core::fmt::Display + Copy {\n    |                                                         ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::marker::Copy;\n    |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:238:57\n    |\n238 |     pub fn render_bg(self) -> impl core::fmt::Display + Copy {\n    |                                                         ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::marker::Copy;\n    |\n\nerror[E0405]: cannot find trait `Into` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:357:38\n    |\n357 |     pub fn on(self, background: impl Into<Color>) -> crate::Style {\n    |                                      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::Into;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:359:23\n    |\n359 |             .fg_color(Some(self.into()))\n    |                       ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:360:23\n    |\n360 |             .bg_color(Some(background.into()))\n    |                       ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:366:38\n    |\n366 |         crate::Style::new().fg_color(Some(Color::Ansi256(self)))\n    |                                      ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:377:37\n    |\n377 |     pub const fn into_ansi(self) -> Option<AnsiColor> {\n    |                                     ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n1   + use core::option::Option;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:379:18\n    |\n379 |             0 => Some(AnsiColor::Black),\n    |                  ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:380:18\n    |\n380 |             1 => Some(AnsiColor::Red),\n    |                  ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:381:18\n    |\n381 |             2 => Some(AnsiColor::Green),\n    |                  ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:382:18\n    |\n382 |             3 => Some(AnsiColor::Yellow),\n    |                  ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:383:18\n    |\n383 |             4 => Some(AnsiColor::Blue),\n    |                  ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:384:18\n    |\n384 |             5 => Some(AnsiColor::Magenta),\n    |                  ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:385:18\n    |\n385 |             6 => Some(AnsiColor::Cyan),\n    |                  ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:386:18\n    |\n386 |             7 => Some(AnsiColor::White),\n    |                  ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:387:18\n    |\n387 |             8 => Some(AnsiColor::BrightBlack),\n    |                  ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:388:18\n    |\n388 |             9 => Some(AnsiColor::BrightRed),\n    |                  ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:389:19\n    |\n389 |             10 => Some(AnsiColor::BrightGreen),\n    |                   ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:390:19\n    |\n390 |             11 => Some(AnsiColor::BrightYellow),\n    |                   ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:391:19\n    |\n391 |             12 => Some(AnsiColor::BrightBlue),\n    |                   ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:392:19\n    |\n392 |             13 => Some(AnsiColor::BrightMagenta),\n    |                   ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:393:19\n    |\n393 |             14 => Some(AnsiColor::BrightCyan),\n    |                   ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:394:19\n    |\n394 |             15 => Some(AnsiColor::BrightWhite),\n    |                   ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find value `None` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:395:18\n    |\n395 |             _ => None,\n    |                  ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n1   + use core::option::Option::None;\n    |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:424:57\n    |\n424 |     pub fn render_fg(self) -> impl core::fmt::Display + Copy {\n    |                                                         ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::marker::Copy;\n    |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:438:57\n    |\n438 |     pub fn render_bg(self) -> impl core::fmt::Display + Copy {\n    |                                                         ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::marker::Copy;\n    |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:459:6\n    |\n459 | impl From<u8> for Ansi256Color {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:466:6\n    |\n466 | impl From<AnsiColor> for Ansi256Color {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `Into` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:481:38\n    |\n481 |     pub fn on(self, background: impl Into<Color>) -> crate::Style {\n    |                                      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::Into;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:483:23\n    |\n483 |             .fg_color(Some(self.into()))\n    |                       ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:484:23\n    |\n484 |             .bg_color(Some(background.into()))\n    |                       ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:490:38\n    |\n490 |         crate::Style::new().fg_color(Some(Color::Rgb(self)))\n    |                                      ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:513:57\n    |\n513 |     pub fn render_fg(self) -> impl core::fmt::Display + Copy {\n    |                                                         ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::marker::Copy;\n    |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:531:57\n    |\n531 |     pub fn render_bg(self) -> impl core::fmt::Display + Copy {\n    |                                                         ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::marker::Copy;\n    |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/color.rs:560:6\n    |\n560 | impl From<(u8, u8, u8)> for RgbColor {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:168:54\n    |\n168 |     pub fn render(self) -> impl core::fmt::Display + Copy {\n    |                                                      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::marker::Copy;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:178:9\n    |\n178 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:201:9\n    |\n201 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:328:9\n    |\n328 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0405]: cannot find trait `Iterator` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:339:6\n    |\n339 | impl Iterator for EffectIter {\n    |      ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::iter::Iterator;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:342:27\n    |\n342 |     fn next(&mut self) -> Option<Self::Item> {\n    |                           ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n1   + use core::option::Option;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:349:24\n    |\n349 |                 return Some(effect);\n    |                        ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find value `None` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:353:9\n    |\n353 |         None\n    |         ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n1   + use core::option::Option::None;\n    |\n\nerror[E0405]: cannot find trait `Iterator` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:363:6\n    |\n363 | impl Iterator for EffectIndexIter {\n    |      ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::iter::Iterator;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:366:27\n    |\n366 |     fn next(&mut self) -> Option<Self::Item> {\n    |                           ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n1   + use core::option::Option;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:373:24\n    |\n373 |                 return Some(index);\n    |                        ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find value `None` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/effect.rs:377:9\n    |\n377 |         None\n    |         ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n1   + use core::option::Option::None;\n    |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/reset.rs:11:54\n   |\n11 |     pub fn render(self) -> impl core::fmt::Display + Copy {\n   |                                                      ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n1  + use core::marker::Copy;\n   |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:19:9\n   |\n19 |     fg: Option<crate::Color>,\n   |         ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n1  + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:20:9\n   |\n20 |     bg: Option<crate::Color>,\n   |         ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n1  + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:21:16\n   |\n21 |     underline: Option<crate::Color>,\n   |                ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n1  + use core::option::Option;\n   |\n\nerror[E0425]: cannot find value `None` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:37:17\n   |\n37 |             fg: None,\n   |                 ^^^^ not found in this scope\n   |\nhelp: consider importing this unit variant\n   |\n1  + use core::option::Option::None;\n   |\n\nerror[E0425]: cannot find value `None` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:38:17\n   |\n38 |             bg: None,\n   |                 ^^^^ not found in this scope\n   |\nhelp: consider importing this unit variant\n   |\n1  + use core::option::Option::None;\n   |\n\nerror[E0425]: cannot find value `None` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:39:24\n   |\n39 |             underline: None,\n   |                        ^^^^ not found in this scope\n   |\nhelp: consider importing this unit variant\n   |\n1  + use core::option::Option::None;\n   |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:53:41\n   |\n53 |     pub const fn fg_color(mut self, fg: Option<crate::Color>) -> Self {\n   |                                         ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n1  + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:67:41\n   |\n67 |     pub const fn bg_color(mut self, bg: Option<crate::Color>) -> Self {\n   |                                         ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n1  + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:81:55\n   |\n81 |     pub const fn underline_color(mut self, underline: Option<crate::Color>) -> Self {\n   |                                                       ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n1  + use core::option::Option;\n   |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:104:54\n    |\n104 |     pub fn render(self) -> impl core::fmt::Display + Copy {\n    |                                                      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::marker::Copy;\n    |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:113:16\n    |\n113 |         if let Some(fg) = self.fg {\n    |                ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:117:16\n    |\n117 |         if let Some(bg) = self.bg {\n    |                ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:121:16\n    |\n121 |         if let Some(underline) = self.underline {\n    |                ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:125:9\n    |\n125 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:134:16\n    |\n134 |         if let Some(fg) = self.fg {\n    |                ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:138:16\n    |\n138 |         if let Some(bg) = self.bg {\n    |                ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:142:16\n    |\n142 |         if let Some(underline) = self.underline {\n    |                ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:146:9\n    |\n146 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:153:60\n    |\n153 |     pub fn render_reset(self) -> impl core::fmt::Display + Copy {\n    |                                                            ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::marker::Copy;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:170:13\n    |\n170 |             Ok(())\n    |             ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n1   + use core::result::Result::Ok;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:294:40\n    |\n294 |     pub const fn get_fg_color(self) -> Option<crate::Color> {\n    |                                        ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n1   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:301:40\n    |\n301 |     pub const fn get_bg_color(self) -> Option<crate::Color> {\n    |                                        ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n1   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:307:47\n    |\n307 |     pub const fn get_underline_color(self) -> Option<crate::Color> {\n    |                                               ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n1   + use core::option::Option;\n    |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:332:6\n    |\n332 | impl From<crate::Effects> for Style {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `PartialEq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anstyle-1.0.10/src/style.rs:403:6\n    |\n403 | impl PartialEq<crate::Effects> for Style {\n    |      ^^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::cmp::PartialEq;\n    |\n\nSome errors have detailed explanations: E0405, E0412, E0425, E0463, E0531.\nFor more information about an error, try `rustc --explain E0405`.\nerror: could not compile `anstyle` (lib) due to 169 previous errors\nerror: could not compile `memchr` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 44,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=dtb-tool, checker=Lockbud\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/qclic/fdt-parser/dtb-tool\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling proc-macro2 v1.0.89\n   Compiling utf8parse v0.2.2\n   Compiling unicode-ident v1.0.13\n   Compiling memchr v2.7.4\n   Compiling anstyle-parse v0.2.6\n   Compiling colorchoice v1.0.3\n   Compiling anstyle v1.0.10\n   Compiling regex-syntax v0.8.5\n   Compiling anstyle-query v1.1.2\n   Compiling is_terminal_polyfill v1.70.1\n   Compiling anstream v0.6.18\n   Compiling aho-corasick v1.1.3\n   Compiling quote v1.0.37\n   Compiling syn v2.0.87\n   Compiling clap_lex v0.7.2\n   Compiling log v0.4.22\n[2024-11-08T08:16:15Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-08T08:16:15Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling strsim v0.11.1\n   Compiling regex-automata v0.4.8\n   Compiling heck v0.5.0\n   Compiling clap_builder v4.5.20\n   Compiling humantime v2.1.0\n   Compiling fdt-parser v0.3.10 (/home/runner/check/batch_12/qclic/fdt-parser/fdt-parser)\nerror[E0425]: cannot find function `size_of` in this scope\n   --> fdt-parser/src/define.rs:139:26\n    |\n139 |         if bytes.len() < size_of::<FdtHeader>() {\n    |                          ^^^^^^^ not found in this scope\n    |\nhelp: consider importing this function\n    |\n1   + use core::mem::size_of;\n    |\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `fdt-parser` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 45,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=dtb-tool, checker=Clippy\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_12/qclic/fdt-parser/dtb-tool\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking memchr v2.7.4\n    Checking utf8parse v0.2.2\n    Checking regex-syntax v0.8.5\n    Checking anstyle-query v1.1.2\n    Checking anstyle-parse v0.2.6\nerror: could not compile `anstyle-query` (lib) due to 16 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `regex-syntax` (lib) due to 1 previous error\nerror: could not compile `memchr` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 46,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=dtb-tool, checker=Clippy\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_12/qclic/fdt-parser/dtb-tool\n// cmd=cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json\n    Checking utf8parse v0.2.2\n    Checking memchr v2.7.4\n    Checking regex-syntax v0.8.5\n    Checking is_terminal_polyfill v1.70.1\nerror: could not compile `is_terminal_polyfill` (lib) due to 10 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `regex-syntax` (lib) due to 1 previous error\nerror: could not compile `memchr` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 52,
      "file": "fdt-parser/src/define.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> fdt-parser/src/define.rs:276:6\n    |\n276 | impl<'a> Iterator for FdtRangeIter<'a> {\n    |      ^^                            ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n276 - impl<'a> Iterator for FdtRangeIter<'a> {\n276 + impl Iterator for FdtRangeIter<'_> {\n    |\n\n"
    },
    {
      "cmd_idx": 52,
      "file": "fdt-parser/src/define.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> fdt-parser/src/define.rs:276:6\n    |\n276 | impl<'a> Iterator for FdtRangeIter<'a> {\n    |      ^^                            ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n276 - impl<'a> Iterator for FdtRangeIter<'a> {\n276 + impl Iterator for FdtRangeIter<'_> {\n    |\n\n"
    },
    {
      "cmd_idx": 52,
      "file": "fdt-parser/src/interrupt.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n --> fdt-parser/src/interrupt.rs:7:6\n  |\n7 | impl<'a> InterruptController<'a> {\n  |      ^^                      ^^\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n  |\n7 - impl<'a> InterruptController<'a> {\n7 + impl InterruptController<'_> {\n  |\n\n"
    },
    {
      "cmd_idx": 52,
      "file": "fdt-parser/src/interrupt.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n --> fdt-parser/src/interrupt.rs:7:6\n  |\n7 | impl<'a> InterruptController<'a> {\n  |      ^^                      ^^\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n  |\n7 - impl<'a> InterruptController<'a> {\n7 + impl InterruptController<'_> {\n  |\n\n"
    },
    {
      "cmd_idx": 52,
      "file": "fdt-parser/src/node.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> fdt-parser/src/node.rs:189:6\n    |\n189 | impl<'a> Iterator for RegIter<'a> {\n    |      ^^                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n189 - impl<'a> Iterator for RegIter<'a> {\n189 + impl Iterator for RegIter<'_> {\n    |\n\n"
    },
    {
      "cmd_idx": 52,
      "file": "fdt-parser/src/node.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> fdt-parser/src/node.rs:189:6\n    |\n189 | impl<'a> Iterator for RegIter<'a> {\n    |      ^^                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n189 - impl<'a> Iterator for RegIter<'a> {\n189 + impl Iterator for RegIter<'_> {\n    |\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "fdt-parser/src/define.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> fdt-parser/src/define.rs:276:6\n    |\n276 | impl<'a> Iterator for FdtRangeIter<'a> {\n    |      ^^                            ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n276 - impl<'a> Iterator for FdtRangeIter<'a> {\n276 + impl Iterator for FdtRangeIter<'_> {\n    |\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "fdt-parser/src/define.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> fdt-parser/src/define.rs:276:6\n    |\n276 | impl<'a> Iterator for FdtRangeIter<'a> {\n    |      ^^                            ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n276 - impl<'a> Iterator for FdtRangeIter<'a> {\n276 + impl Iterator for FdtRangeIter<'_> {\n    |\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "fdt-parser/src/interrupt.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n --> fdt-parser/src/interrupt.rs:7:6\n  |\n7 | impl<'a> InterruptController<'a> {\n  |      ^^                      ^^\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n  |\n7 - impl<'a> InterruptController<'a> {\n7 + impl InterruptController<'_> {\n  |\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "fdt-parser/src/interrupt.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n --> fdt-parser/src/interrupt.rs:7:6\n  |\n7 | impl<'a> InterruptController<'a> {\n  |      ^^                      ^^\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n  |\n7 - impl<'a> InterruptController<'a> {\n7 + impl InterruptController<'_> {\n  |\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "fdt-parser/src/node.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> fdt-parser/src/node.rs:189:6\n    |\n189 | impl<'a> Iterator for RegIter<'a> {\n    |      ^^                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n189 - impl<'a> Iterator for RegIter<'a> {\n189 + impl Iterator for RegIter<'_> {\n    |\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "fdt-parser/src/node.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> fdt-parser/src/node.rs:189:6\n    |\n189 | impl<'a> Iterator for RegIter<'a> {\n    |      ^^                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n189 - impl<'a> Iterator for RegIter<'a> {\n189 + impl Iterator for RegIter<'_> {\n    |\n\n"
    },
    {
      "cmd_idx": 54,
      "file": "fdt-parser/src/define.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> fdt-parser/src/define.rs:276:6\n    |\n276 | impl<'a> Iterator for FdtRangeIter<'a> {\n    |      ^^                            ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n276 - impl<'a> Iterator for FdtRangeIter<'a> {\n276 + impl Iterator for FdtRangeIter<'_> {\n    |\n\n"
    },
    {
      "cmd_idx": 54,
      "file": "fdt-parser/src/define.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> fdt-parser/src/define.rs:276:6\n    |\n276 | impl<'a> Iterator for FdtRangeIter<'a> {\n    |      ^^                            ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n276 - impl<'a> Iterator for FdtRangeIter<'a> {\n276 + impl Iterator for FdtRangeIter<'_> {\n    |\n\n"
    },
    {
      "cmd_idx": 54,
      "file": "fdt-parser/src/interrupt.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n --> fdt-parser/src/interrupt.rs:7:6\n  |\n7 | impl<'a> InterruptController<'a> {\n  |      ^^                      ^^\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n  |\n7 - impl<'a> InterruptController<'a> {\n7 + impl InterruptController<'_> {\n  |\n\n"
    },
    {
      "cmd_idx": 54,
      "file": "fdt-parser/src/interrupt.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n --> fdt-parser/src/interrupt.rs:7:6\n  |\n7 | impl<'a> InterruptController<'a> {\n  |      ^^                      ^^\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n  |\n7 - impl<'a> InterruptController<'a> {\n7 + impl InterruptController<'_> {\n  |\n\n"
    },
    {
      "cmd_idx": 54,
      "file": "fdt-parser/src/node.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> fdt-parser/src/node.rs:189:6\n    |\n189 | impl<'a> Iterator for RegIter<'a> {\n    |      ^^                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n189 - impl<'a> Iterator for RegIter<'a> {\n189 + impl Iterator for RegIter<'_> {\n    |\n\n"
    },
    {
      "cmd_idx": 54,
      "file": "fdt-parser/src/node.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> fdt-parser/src/node.rs:189:6\n    |\n189 | impl<'a> Iterator for RegIter<'a> {\n    |      ^^                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n189 - impl<'a> Iterator for RegIter<'a> {\n189 + impl Iterator for RegIter<'_> {\n    |\n\n"
    },
    {
      "cmd_idx": 67,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=fdt-parser, checker=Lockbud\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_12/qclic/fdt-parser/fdt-parser\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf\n   Compiling fdt-parser v0.3.10 (/home/runner/check/batch_12/qclic/fdt-parser/fdt-parser)\nerror[E0425]: cannot find function `size_of` in this scope\n   --> fdt-parser/src/define.rs:139:26\n    |\n139 |         if bytes.len() < size_of::<FdtHeader>() {\n    |                          ^^^^^^^ not found in this scope\n    |\nhelp: consider importing this function\n    |\n1   + use core::mem::size_of;\n    |\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `fdt-parser` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 68,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=fdt-parser, checker=Lockbud\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_12/qclic/fdt-parser/fdt-parser\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none\n   Compiling fdt-parser v0.3.10 (/home/runner/check/batch_12/qclic/fdt-parser/fdt-parser)\nerror[E0425]: cannot find function `size_of` in this scope\n   --> fdt-parser/src/define.rs:139:26\n    |\n139 |         if bytes.len() < size_of::<FdtHeader>() {\n    |                          ^^^^^^^ not found in this scope\n    |\nhelp: consider importing this function\n    |\n1   + use core::mem::size_of;\n    |\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `fdt-parser` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 69,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=fdt-parser, checker=Lockbud\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_12/qclic/fdt-parser/fdt-parser\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling fdt-parser v0.3.10 (/home/runner/check/batch_12/qclic/fdt-parser/fdt-parser)\nerror[E0425]: cannot find function `size_of` in this scope\n   --> fdt-parser/src/define.rs:139:26\n    |\n139 |         if bytes.len() < size_of::<FdtHeader>() {\n    |                          ^^^^^^^ not found in this scope\n    |\nhelp: consider importing this function\n    |\n1   + use core::mem::size_of;\n    |\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `fdt-parser` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 70,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=fdt-parser, checker=Lockbud\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/qclic/fdt-parser/fdt-parser\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling fdt-parser v0.3.10 (/home/runner/check/batch_12/qclic/fdt-parser/fdt-parser)\nerror[E0425]: cannot find function `size_of` in this scope\n   --> fdt-parser/src/define.rs:139:26\n    |\n139 |         if bytes.len() < size_of::<FdtHeader>() {\n    |                          ^^^^^^^ not found in this scope\n    |\nhelp: consider importing this function\n    |\n1   + use core::mem::size_of;\n    |\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `fdt-parser` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 71,
      "file": "src/platform/aarch64_qemu_virt/boot.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_13/shilei-massclouds/arch_boot/arch_boot/src/platform/aarch64_qemu_virt/boot.rs (original lines from 1 to 1)\n+use super::desc::{DescriptorAttr, MappingFlags, MemAttr};\n"
    },
    {
      "cmd_idx": 71,
      "file": "src/platform/aarch64_qemu_virt/boot.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_13/shilei-massclouds/arch_boot/arch_boot/src/platform/aarch64_qemu_virt/boot.rs (original lines from 2 to 2)\n-use tock_registers::interfaces::{ReadWriteable, Readable, Writeable};\n"
    },
    {
      "cmd_idx": 71,
      "file": "src/platform/aarch64_qemu_virt/boot.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_13/shilei-massclouds/arch_boot/arch_boot/src/platform/aarch64_qemu_virt/boot.rs (original lines from 4 to 4)\n-use super::desc::{DescriptorAttr, MappingFlags, MemAttr};\n+use tock_registers::interfaces::{ReadWriteable, Readable, Writeable};\n"
    },
    {
      "cmd_idx": 71,
      "file": "src/platform/riscv64_qemu_virt/boot.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_13/shilei-massclouds/arch_boot/arch_boot/src/platform/riscv64_qemu_virt/boot.rs (original lines from 1 to 1)\n-use riscv::register::satp;\n"
    },
    {
      "cmd_idx": 71,
      "file": "src/platform/riscv64_qemu_virt/boot.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_13/shilei-massclouds/arch_boot/arch_boot/src/platform/riscv64_qemu_virt/boot.rs (original lines from 3 to 3)\n+use riscv::register::satp;\n"
    },
    {
      "cmd_idx": 71,
      "file": "src/platform/x86_pc/boot.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_13/shilei-massclouds/arch_boot/arch_boot/src/platform/x86_pc/boot.rs (original lines from 26 to 26)\n-    | Cr4Flags::OSFXSR.bits() | Cr4Flags::OSXMMEXCPT_ENABLE.bits();\n+    | Cr4Flags::OSFXSR.bits()\n+    | Cr4Flags::OSXMMEXCPT_ENABLE.bits();\n"
    },
    {
      "cmd_idx": 72,
      "file": "src/platform/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition name: `platform_family`\n --> src/platform/mod.rs:4:38\n  |\n4 | if #[cfg(all(target_arch = \"x86_64\", platform_family = \"x86-pc\"))] {\n  |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `fmt_debug`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`\n  = help: consider using a Cargo feature instead\n  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n           [lints.rust]\n           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"x86-pc\"))'] }\n  = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"x86-pc\\\"))\");` to the top of the `build.rs`\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n  = note: `#[warn(unexpected_cfgs)]` on by default\n\n"
    },
    {
      "cmd_idx": 72,
      "file": "src/platform/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition name: `platform_family`\n --> src/platform/mod.rs:6:46\n  |\n6 | } else if #[cfg(all(target_arch = \"riscv64\", platform_family = \"riscv64-qemu-virt\"))] {\n  |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: consider using a Cargo feature instead\n  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n           [lints.rust]\n           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"riscv64-qemu-virt\"))'] }\n  = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"riscv64-qemu-virt\\\"))\");` to the top of the `build.rs`\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 72,
      "file": "src/platform/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition name: `platform_family`\n --> src/platform/mod.rs:8:46\n  |\n8 | } else if #[cfg(all(target_arch = \"aarch64\", platform_family = \"aarch64-qemu-virt\"))] {\n  |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: consider using a Cargo feature instead\n  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n           [lints.rust]\n           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-qemu-virt\"))'] }\n  = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-qemu-virt\\\"))\");` to the top of the `build.rs`\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 72,
      "file": "src/platform/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:10:50\n   |\n10 | } else if #[cfg(all(target_arch = \"loongarch64\", platform_family = \"loongarch64-qemu-virt\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"loongarch64-qemu-virt\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"loongarch64-qemu-virt\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 72,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> src/lib.rs:3:12\n  |\n3 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 72,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty `loop {}` wastes CPU cycles\n  --> src/lib.rs:10:5\n   |\n10 |     loop {}\n   |     ^^^^^^^\n   |\n   = help: you should either use `panic!()` or add a call pausing or sleeping the thread to the loop body\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_loop\n   = note: `#[warn(clippy::empty_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 74,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-02T00:46:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T00:46:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 79,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axalloc/axalloc/src/lib.rs (original lines from 17 to 17)\n+use axhal::mem::{memory_regions, phys_to_virt, MemRegionFlags};\n"
    },
    {
      "cmd_idx": 79,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axalloc/axalloc/src/lib.rs (original lines from 20 to 20)\n-use axhal::mem::{MemRegionFlags, memory_regions, phys_to_virt};\n"
    },
    {
      "cmd_idx": 80,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axalloc/axalloc/src/lib.rs (original lines from 17 to 17)\n+use axhal::mem::{memory_regions, phys_to_virt, MemRegionFlags};\n"
    },
    {
      "cmd_idx": 80,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axalloc/axalloc/src/lib.rs (original lines from 20 to 20)\n-use axhal::mem::{MemRegionFlags, memory_regions, phys_to_virt};\n"
    },
    {
      "cmd_idx": 81,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axalloc/axalloc/src/lib.rs (original lines from 17 to 17)\n+use axhal::mem::{memory_regions, phys_to_virt, MemRegionFlags};\n"
    },
    {
      "cmd_idx": 81,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axalloc/axalloc/src/lib.rs (original lines from 20 to 20)\n-use axhal::mem::{MemRegionFlags, memory_regions, phys_to_virt};\n"
    },
    {
      "cmd_idx": 85,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-12T16:11:16Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:11:16Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 86,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-12T16:11:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:11:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 87,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-12T16:11:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:11:24Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 91,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axalloc, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_12/shilei-massclouds/axalloc/axalloc\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling hashbrown v0.15.1\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.89\n   Compiling unicode-ident v1.0.13\n   Compiling indexmap v2.6.0\n   Compiling quote v1.0.37\n   Compiling cfg-if v1.0.0\n   Compiling syn v1.0.109\n   Compiling log v0.4.22\n[2024-11-12T16:11:16Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:11:16Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling syn v2.0.87\n   Compiling toml_edit v0.19.15\n   Compiling bitflags v2.6.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling const-default v1.0.0\n   Compiling bit_field v0.10.2\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling svgbobdoc v0.3.0\n   Compiling rlsf v0.2.1\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling static_assertions v1.1.0\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n   Compiling allocator v0.1.0 (ssh://git@github.com/shilei-massclouds/allocator#d93ad046)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal#db90ff50)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 92,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axalloc, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_12/shilei-massclouds/axalloc/axalloc\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf\n   Compiling cfg-if v1.0.0\n   Compiling nb v1.1.0\n   Compiling bit_field v0.10.2\n   Compiling static_assertions v1.1.0\n   Compiling riscv v0.10.1\n   Compiling void v1.0.2\n   Compiling nb v0.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling sbi-spec v0.0.4\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling log v0.4.22\n   Compiling critical-section v1.2.0\n   Compiling sbi-rt v0.0.2\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n[2024-11-12T16:11:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:11:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling bitflags v2.6.0\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling const-default v1.0.0\n   Compiling rlsf v0.2.1\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal#db90ff50)\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 93,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axalloc, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_12/shilei-massclouds/axalloc/axalloc\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none\n   Compiling bit_field v0.10.2\n   Compiling cfg-if v1.0.0\n   Compiling rustversion v1.0.18\n   Compiling bitflags v2.6.0\n   Compiling volatile v0.4.6\n   Compiling bitflags v1.3.2\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling raw-cpuid v10.7.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling paste v1.0.15\n   Compiling x86 v0.52.0\n   Compiling log v0.4.22\n[2024-11-12T16:11:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:11:24Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling const-default v1.0.0\n   Compiling bit v0.1.1\n   Compiling rlsf v0.2.1\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal#db90ff50)\n   Compiling raw-cpuid v11.2.0\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling x86_64 v0.14.12\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n   Compiling static_assertions v1.1.0\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling allocator v0.1.0 (ssh://git@github.com/shilei-massclouds/allocator#d93ad046)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 100,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-12T16:11:16Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:11:16Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 101,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-12T16:11:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:11:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 102,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-12T16:11:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:11:24Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 106,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_axalloc, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_12/shilei-massclouds/axalloc/rt_axalloc\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-11-12T16:11:16Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:11:16Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal#db90ff50)\n   Compiling arch_boot v0.1.0 (ssh://git@github.com/shilei-massclouds/arch_boot#8663e839)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 107,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_axalloc, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_12/shilei-massclouds/axalloc/rt_axalloc\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf\n[2024-11-12T16:11:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:11:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\n   Compiling allocator v0.1.0 (ssh://git@github.com/shilei-massclouds/allocator#d93ad046)\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 108,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_axalloc, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_12/shilei-massclouds/axalloc/rt_axalloc\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none\n[2024-11-12T16:11:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:11:24Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling x2apic v0.4.3\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling arch_boot v0.1.0 (ssh://git@github.com/shilei-massclouds/arch_boot#8663e839)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 109,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 3 to 3)\n-use core::str;\n"
    },
    {
      "cmd_idx": 109,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 5 to 5)\n+use core::str;\n"
    },
    {
      "cmd_idx": 109,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 12 to 12)\n-const MAGIC_NUMBER     : u32 = 0xd00dfeed;\n+const MAGIC_NUMBER: u32 = 0xd00dfeed;\n"
    },
    {
      "cmd_idx": 109,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 14 to 16)\n-const OF_DT_BEGIN_NODE : u32 = 0x00000001;\n-const OF_DT_END_NODE   : u32 = 0x00000002;\n-const OF_DT_PROP       : u32 = 0x00000003;\n+const OF_DT_BEGIN_NODE: u32 = 0x00000001;\n+const OF_DT_END_NODE: u32 = 0x00000002;\n+const OF_DT_PROP: u32 = 0x00000003;\n"
    },
    {
      "cmd_idx": 109,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 38 to 40)\n-        let buf = unsafe {\n-            core::slice::from_raw_parts(ptr as *const u8, 24)\n-        };\n+        let buf = unsafe { core::slice::from_raw_parts(ptr as *const u8, 24) };\n"
    },
    {
      "cmd_idx": 109,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 43 to 43)\n-            return Err(DeviceTreeError::BadMagicNumber)\n+            return Err(DeviceTreeError::BadMagicNumber);\n"
    },
    {
      "cmd_idx": 109,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 53 to 55)\n-        Ok(\n-            Self {ptr, totalsize, off_struct, off_strings}\n-        )\n+        Ok(Self {\n+            ptr,\n+            totalsize,\n+            off_struct,\n+            off_strings,\n+        })\n"
    },
    {
      "cmd_idx": 109,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 61 to 61)\n-        &self, mut pos: usize,\n+        &self,\n+        mut pos: usize,\n"
    },
    {
      "cmd_idx": 109,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 64 to 64)\n-        cb: &mut dyn FnMut(String, usize, usize, Vec<(String, Vec<u8>)>)\n+        cb: &mut dyn FnMut(String, usize, usize, Vec<(String, Vec<u8>)>),\n"
    },
    {
      "cmd_idx": 109,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 66 to 68)\n-        let buf = unsafe {\n-            core::slice::from_raw_parts(self.ptr as *const u8, self.totalsize)\n-        };\n+        let buf = unsafe { core::slice::from_raw_parts(self.ptr as *const u8, self.totalsize) };\n"
    },
    {
      "cmd_idx": 109,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 72 to 72)\n-            return Err(DeviceTreeError::ParseError(pos))\n+            return Err(DeviceTreeError::ParseError(pos));\n"
    },
    {
      "cmd_idx": 109,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 82 to 83)\n-            let val_size = buf.read_be_u32(pos+4)? as usize;\n-            let name_offset = buf.read_be_u32(pos+8)? as usize;\n+            let val_size = buf.read_be_u32(pos + 4)? as usize;\n+            let name_offset = buf.read_be_u32(pos + 8)? as usize;\n"
    },
    {
      "cmd_idx": 109,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 115 to 115)\n-            return Err(DeviceTreeError::ParseError(pos))\n+            return Err(DeviceTreeError::ParseError(pos));\n"
    },
    {
      "cmd_idx": 109,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 131 to 131)\n-where F: FnMut(String, usize, usize, Vec<(String, Vec<u8>)>)\n+where\n+    F: FnMut(String, usize, usize, Vec<(String, Vec<u8>)>),\n"
    },
    {
      "cmd_idx": 109,
      "file": "src/util.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/util.rs (original lines from 1 to 1)\n-use crate::{DeviceTreeResult, DeviceTreeError};\n+use crate::{DeviceTreeError, DeviceTreeResult};\n"
    },
    {
      "cmd_idx": 109,
      "file": "src/util.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/util.rs (original lines from 13 to 14)\n-        if ! (pos+4 <= self.len()) {\n-            return Err(DeviceTreeError::SliceReadError)\n+        if !(pos + 4 <= self.len()) {\n+            return Err(DeviceTreeError::SliceReadError);\n"
    },
    {
      "cmd_idx": 109,
      "file": "src/util.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/util.rs (original lines from 17 to 22)\n-        Ok(\n-            (self[pos] as u32) << 24\n-            | (self[pos+1] as u32) << 16\n-            | (self[pos+2] as u32) << 8\n-            | (self[pos+3] as u32)\n-        )\n+        Ok((self[pos] as u32) << 24\n+            | (self[pos + 1] as u32) << 16\n+            | (self[pos + 2] as u32) << 8\n+            | (self[pos + 3] as u32))\n"
    },
    {
      "cmd_idx": 109,
      "file": "src/util.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/util.rs (original lines from 26 to 26)\n-        let lo: u64 = self.read_be_u32(pos+4)?.into();\n+        let lo: u64 = self.read_be_u32(pos + 4)?.into();\n"
    },
    {
      "cmd_idx": 109,
      "file": "src/util.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/util.rs (original lines from 33 to 33)\n-                return Ok(&self[pos..cur])\n+                return Ok(&self[pos..cur]);\n"
    },
    {
      "cmd_idx": 109,
      "file": "src/util.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/util.rs (original lines from 40 to 41)\n-        if ! (end < self.len()) {\n-            return Err(DeviceTreeError::SliceReadError)\n+        if !(end < self.len()) {\n+            return Err(DeviceTreeError::SliceReadError);\n"
    },
    {
      "cmd_idx": 109,
      "file": "tests/test_dtb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/tests/test_dtb.rs (original lines from 1 to 2)\n-use std::str;\n-use std::io::Read;\n"
    },
    {
      "cmd_idx": 109,
      "file": "tests/test_dtb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/tests/test_dtb.rs (original lines from 4 to 4)\n+use std::io::Read;\n+use std::str;\n"
    },
    {
      "cmd_idx": 109,
      "file": "tests/test_dtb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/tests/test_dtb.rs (original lines from 11 to 18)\n-    let mut cb = |name: String, addr_cells: usize, size_cells: usize, props: Vec<(String, Vec<u8>)>| {\n-        match name.as_str() {\n-            \"\" => {\n-                assert_eq!(addr_cells, 2);\n-                assert_eq!(size_cells, 2);\n-                for prop in &props {\n-                    if prop.0.as_str() == \"compatible\" {\n-                        assert_eq!(str::from_utf8(&(prop.1)), Ok(\"riscv-virtio\\0\"));\n+    let mut cb =\n+        |name: String, addr_cells: usize, size_cells: usize, props: Vec<(String, Vec<u8>)>| {\n+            match name.as_str() {\n+                \"\" => {\n+                    assert_eq!(addr_cells, 2);\n+                    assert_eq!(size_cells, 2);\n+                    for prop in &props {\n+                        if prop.0.as_str() == \"compatible\" {\n+                            assert_eq!(str::from_utf8(&(prop.1)), Ok(\"riscv-virtio\\0\"));\n+                        }\n"
    },
    {
      "cmd_idx": 109,
      "file": "tests/test_dtb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/tests/test_dtb.rs (original lines from 21 to 27)\n-            },\n-            \"soc\" => {\n-                assert_eq!(addr_cells, 2);\n-                assert_eq!(size_cells, 2);\n-                for prop in &props {\n-                    if prop.0.as_str() == \"compatible\" {\n-                        assert_eq!(str::from_utf8(&(prop.1)), Ok(\"simple-bus\\0\"));\n+                \"soc\" => {\n+                    assert_eq!(addr_cells, 2);\n+                    assert_eq!(size_cells, 2);\n+                    for prop in &props {\n+                        if prop.0.as_str() == \"compatible\" {\n+                            assert_eq!(str::from_utf8(&(prop.1)), Ok(\"simple-bus\\0\"));\n+                        }\n"
    },
    {
      "cmd_idx": 109,
      "file": "tests/test_dtb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/tests/test_dtb.rs (original lines from 30 to 40)\n-            },\n-            \"virtio_mmio@10001000\" => {\n-                assert_eq!(addr_cells, 2);\n-                assert_eq!(size_cells, 2);\n-                for prop in &props {\n-                    if prop.0.as_str() == \"compatible\" {\n-                        assert_eq!(str::from_utf8(&(prop.1)), Ok(\"virtio,mmio\\0\"));\n-                    } else if prop.0.as_str() == \"reg\" {\n-                        let reg = &(prop.1);\n-                        assert_eq!(reg.as_slice().read_be_u64(0).unwrap(), 0x10001000);\n-                        assert_eq!(reg.as_slice().read_be_u64(8).unwrap(), 0x1000);\n+                \"virtio_mmio@10001000\" => {\n+                    assert_eq!(addr_cells, 2);\n+                    assert_eq!(size_cells, 2);\n+                    for prop in &props {\n+                        if prop.0.as_str() == \"compatible\" {\n+                            assert_eq!(str::from_utf8(&(prop.1)), Ok(\"virtio,mmio\\0\"));\n+                        } else if prop.0.as_str() == \"reg\" {\n+                            let reg = &(prop.1);\n+                            assert_eq!(reg.as_slice().read_be_u64(0).unwrap(), 0x10001000);\n+                            assert_eq!(reg.as_slice().read_be_u64(8).unwrap(), 0x1000);\n+                        }\n"
    },
    {
      "cmd_idx": 109,
      "file": "tests/test_dtb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/tests/test_dtb.rs (original lines from 43 to 46)\n-            },\n-            _ => {}\n-        }\n-    };\n+                _ => {}\n+            }\n+        };\n"
    },
    {
      "cmd_idx": 110,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 3 to 3)\n-use core::str;\n"
    },
    {
      "cmd_idx": 110,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 5 to 5)\n+use core::str;\n"
    },
    {
      "cmd_idx": 110,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 12 to 12)\n-const MAGIC_NUMBER     : u32 = 0xd00dfeed;\n+const MAGIC_NUMBER: u32 = 0xd00dfeed;\n"
    },
    {
      "cmd_idx": 110,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 14 to 16)\n-const OF_DT_BEGIN_NODE : u32 = 0x00000001;\n-const OF_DT_END_NODE   : u32 = 0x00000002;\n-const OF_DT_PROP       : u32 = 0x00000003;\n+const OF_DT_BEGIN_NODE: u32 = 0x00000001;\n+const OF_DT_END_NODE: u32 = 0x00000002;\n+const OF_DT_PROP: u32 = 0x00000003;\n"
    },
    {
      "cmd_idx": 110,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 38 to 40)\n-        let buf = unsafe {\n-            core::slice::from_raw_parts(ptr as *const u8, 24)\n-        };\n+        let buf = unsafe { core::slice::from_raw_parts(ptr as *const u8, 24) };\n"
    },
    {
      "cmd_idx": 110,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 43 to 43)\n-            return Err(DeviceTreeError::BadMagicNumber)\n+            return Err(DeviceTreeError::BadMagicNumber);\n"
    },
    {
      "cmd_idx": 110,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 53 to 55)\n-        Ok(\n-            Self {ptr, totalsize, off_struct, off_strings}\n-        )\n+        Ok(Self {\n+            ptr,\n+            totalsize,\n+            off_struct,\n+            off_strings,\n+        })\n"
    },
    {
      "cmd_idx": 110,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 61 to 61)\n-        &self, mut pos: usize,\n+        &self,\n+        mut pos: usize,\n"
    },
    {
      "cmd_idx": 110,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 64 to 64)\n-        cb: &mut dyn FnMut(String, usize, usize, Vec<(String, Vec<u8>)>)\n+        cb: &mut dyn FnMut(String, usize, usize, Vec<(String, Vec<u8>)>),\n"
    },
    {
      "cmd_idx": 110,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 66 to 68)\n-        let buf = unsafe {\n-            core::slice::from_raw_parts(self.ptr as *const u8, self.totalsize)\n-        };\n+        let buf = unsafe { core::slice::from_raw_parts(self.ptr as *const u8, self.totalsize) };\n"
    },
    {
      "cmd_idx": 110,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 72 to 72)\n-            return Err(DeviceTreeError::ParseError(pos))\n+            return Err(DeviceTreeError::ParseError(pos));\n"
    },
    {
      "cmd_idx": 110,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 82 to 83)\n-            let val_size = buf.read_be_u32(pos+4)? as usize;\n-            let name_offset = buf.read_be_u32(pos+8)? as usize;\n+            let val_size = buf.read_be_u32(pos + 4)? as usize;\n+            let name_offset = buf.read_be_u32(pos + 8)? as usize;\n"
    },
    {
      "cmd_idx": 110,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 115 to 115)\n-            return Err(DeviceTreeError::ParseError(pos))\n+            return Err(DeviceTreeError::ParseError(pos));\n"
    },
    {
      "cmd_idx": 110,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 131 to 131)\n-where F: FnMut(String, usize, usize, Vec<(String, Vec<u8>)>)\n+where\n+    F: FnMut(String, usize, usize, Vec<(String, Vec<u8>)>),\n"
    },
    {
      "cmd_idx": 110,
      "file": "src/util.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/util.rs (original lines from 1 to 1)\n-use crate::{DeviceTreeResult, DeviceTreeError};\n+use crate::{DeviceTreeError, DeviceTreeResult};\n"
    },
    {
      "cmd_idx": 110,
      "file": "src/util.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/util.rs (original lines from 13 to 14)\n-        if ! (pos+4 <= self.len()) {\n-            return Err(DeviceTreeError::SliceReadError)\n+        if !(pos + 4 <= self.len()) {\n+            return Err(DeviceTreeError::SliceReadError);\n"
    },
    {
      "cmd_idx": 110,
      "file": "src/util.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/util.rs (original lines from 17 to 22)\n-        Ok(\n-            (self[pos] as u32) << 24\n-            | (self[pos+1] as u32) << 16\n-            | (self[pos+2] as u32) << 8\n-            | (self[pos+3] as u32)\n-        )\n+        Ok((self[pos] as u32) << 24\n+            | (self[pos + 1] as u32) << 16\n+            | (self[pos + 2] as u32) << 8\n+            | (self[pos + 3] as u32))\n"
    },
    {
      "cmd_idx": 110,
      "file": "src/util.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/util.rs (original lines from 26 to 26)\n-        let lo: u64 = self.read_be_u32(pos+4)?.into();\n+        let lo: u64 = self.read_be_u32(pos + 4)?.into();\n"
    },
    {
      "cmd_idx": 110,
      "file": "src/util.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/util.rs (original lines from 33 to 33)\n-                return Ok(&self[pos..cur])\n+                return Ok(&self[pos..cur]);\n"
    },
    {
      "cmd_idx": 110,
      "file": "src/util.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/util.rs (original lines from 40 to 41)\n-        if ! (end < self.len()) {\n-            return Err(DeviceTreeError::SliceReadError)\n+        if !(end < self.len()) {\n+            return Err(DeviceTreeError::SliceReadError);\n"
    },
    {
      "cmd_idx": 110,
      "file": "tests/test_dtb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/tests/test_dtb.rs (original lines from 1 to 2)\n-use std::str;\n-use std::io::Read;\n"
    },
    {
      "cmd_idx": 110,
      "file": "tests/test_dtb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/tests/test_dtb.rs (original lines from 4 to 4)\n+use std::io::Read;\n+use std::str;\n"
    },
    {
      "cmd_idx": 110,
      "file": "tests/test_dtb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/tests/test_dtb.rs (original lines from 11 to 18)\n-    let mut cb = |name: String, addr_cells: usize, size_cells: usize, props: Vec<(String, Vec<u8>)>| {\n-        match name.as_str() {\n-            \"\" => {\n-                assert_eq!(addr_cells, 2);\n-                assert_eq!(size_cells, 2);\n-                for prop in &props {\n-                    if prop.0.as_str() == \"compatible\" {\n-                        assert_eq!(str::from_utf8(&(prop.1)), Ok(\"riscv-virtio\\0\"));\n+    let mut cb =\n+        |name: String, addr_cells: usize, size_cells: usize, props: Vec<(String, Vec<u8>)>| {\n+            match name.as_str() {\n+                \"\" => {\n+                    assert_eq!(addr_cells, 2);\n+                    assert_eq!(size_cells, 2);\n+                    for prop in &props {\n+                        if prop.0.as_str() == \"compatible\" {\n+                            assert_eq!(str::from_utf8(&(prop.1)), Ok(\"riscv-virtio\\0\"));\n+                        }\n"
    },
    {
      "cmd_idx": 110,
      "file": "tests/test_dtb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/tests/test_dtb.rs (original lines from 21 to 27)\n-            },\n-            \"soc\" => {\n-                assert_eq!(addr_cells, 2);\n-                assert_eq!(size_cells, 2);\n-                for prop in &props {\n-                    if prop.0.as_str() == \"compatible\" {\n-                        assert_eq!(str::from_utf8(&(prop.1)), Ok(\"simple-bus\\0\"));\n+                \"soc\" => {\n+                    assert_eq!(addr_cells, 2);\n+                    assert_eq!(size_cells, 2);\n+                    for prop in &props {\n+                        if prop.0.as_str() == \"compatible\" {\n+                            assert_eq!(str::from_utf8(&(prop.1)), Ok(\"simple-bus\\0\"));\n+                        }\n"
    },
    {
      "cmd_idx": 110,
      "file": "tests/test_dtb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/tests/test_dtb.rs (original lines from 30 to 40)\n-            },\n-            \"virtio_mmio@10001000\" => {\n-                assert_eq!(addr_cells, 2);\n-                assert_eq!(size_cells, 2);\n-                for prop in &props {\n-                    if prop.0.as_str() == \"compatible\" {\n-                        assert_eq!(str::from_utf8(&(prop.1)), Ok(\"virtio,mmio\\0\"));\n-                    } else if prop.0.as_str() == \"reg\" {\n-                        let reg = &(prop.1);\n-                        assert_eq!(reg.as_slice().read_be_u64(0).unwrap(), 0x10001000);\n-                        assert_eq!(reg.as_slice().read_be_u64(8).unwrap(), 0x1000);\n+                \"virtio_mmio@10001000\" => {\n+                    assert_eq!(addr_cells, 2);\n+                    assert_eq!(size_cells, 2);\n+                    for prop in &props {\n+                        if prop.0.as_str() == \"compatible\" {\n+                            assert_eq!(str::from_utf8(&(prop.1)), Ok(\"virtio,mmio\\0\"));\n+                        } else if prop.0.as_str() == \"reg\" {\n+                            let reg = &(prop.1);\n+                            assert_eq!(reg.as_slice().read_be_u64(0).unwrap(), 0x10001000);\n+                            assert_eq!(reg.as_slice().read_be_u64(8).unwrap(), 0x1000);\n+                        }\n"
    },
    {
      "cmd_idx": 110,
      "file": "tests/test_dtb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/tests/test_dtb.rs (original lines from 43 to 46)\n-            },\n-            _ => {}\n-        }\n-    };\n+                _ => {}\n+            }\n+        };\n"
    },
    {
      "cmd_idx": 111,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 3 to 3)\n-use core::str;\n"
    },
    {
      "cmd_idx": 111,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 5 to 5)\n+use core::str;\n"
    },
    {
      "cmd_idx": 111,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 12 to 12)\n-const MAGIC_NUMBER     : u32 = 0xd00dfeed;\n+const MAGIC_NUMBER: u32 = 0xd00dfeed;\n"
    },
    {
      "cmd_idx": 111,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 14 to 16)\n-const OF_DT_BEGIN_NODE : u32 = 0x00000001;\n-const OF_DT_END_NODE   : u32 = 0x00000002;\n-const OF_DT_PROP       : u32 = 0x00000003;\n+const OF_DT_BEGIN_NODE: u32 = 0x00000001;\n+const OF_DT_END_NODE: u32 = 0x00000002;\n+const OF_DT_PROP: u32 = 0x00000003;\n"
    },
    {
      "cmd_idx": 111,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 38 to 40)\n-        let buf = unsafe {\n-            core::slice::from_raw_parts(ptr as *const u8, 24)\n-        };\n+        let buf = unsafe { core::slice::from_raw_parts(ptr as *const u8, 24) };\n"
    },
    {
      "cmd_idx": 111,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 43 to 43)\n-            return Err(DeviceTreeError::BadMagicNumber)\n+            return Err(DeviceTreeError::BadMagicNumber);\n"
    },
    {
      "cmd_idx": 111,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 53 to 55)\n-        Ok(\n-            Self {ptr, totalsize, off_struct, off_strings}\n-        )\n+        Ok(Self {\n+            ptr,\n+            totalsize,\n+            off_struct,\n+            off_strings,\n+        })\n"
    },
    {
      "cmd_idx": 111,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 61 to 61)\n-        &self, mut pos: usize,\n+        &self,\n+        mut pos: usize,\n"
    },
    {
      "cmd_idx": 111,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 64 to 64)\n-        cb: &mut dyn FnMut(String, usize, usize, Vec<(String, Vec<u8>)>)\n+        cb: &mut dyn FnMut(String, usize, usize, Vec<(String, Vec<u8>)>),\n"
    },
    {
      "cmd_idx": 111,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 66 to 68)\n-        let buf = unsafe {\n-            core::slice::from_raw_parts(self.ptr as *const u8, self.totalsize)\n-        };\n+        let buf = unsafe { core::slice::from_raw_parts(self.ptr as *const u8, self.totalsize) };\n"
    },
    {
      "cmd_idx": 111,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 72 to 72)\n-            return Err(DeviceTreeError::ParseError(pos))\n+            return Err(DeviceTreeError::ParseError(pos));\n"
    },
    {
      "cmd_idx": 111,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 82 to 83)\n-            let val_size = buf.read_be_u32(pos+4)? as usize;\n-            let name_offset = buf.read_be_u32(pos+8)? as usize;\n+            let val_size = buf.read_be_u32(pos + 4)? as usize;\n+            let name_offset = buf.read_be_u32(pos + 8)? as usize;\n"
    },
    {
      "cmd_idx": 111,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 115 to 115)\n-            return Err(DeviceTreeError::ParseError(pos))\n+            return Err(DeviceTreeError::ParseError(pos));\n"
    },
    {
      "cmd_idx": 111,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/lib.rs (original lines from 131 to 131)\n-where F: FnMut(String, usize, usize, Vec<(String, Vec<u8>)>)\n+where\n+    F: FnMut(String, usize, usize, Vec<(String, Vec<u8>)>),\n"
    },
    {
      "cmd_idx": 111,
      "file": "src/util.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/util.rs (original lines from 1 to 1)\n-use crate::{DeviceTreeResult, DeviceTreeError};\n+use crate::{DeviceTreeError, DeviceTreeResult};\n"
    },
    {
      "cmd_idx": 111,
      "file": "src/util.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/util.rs (original lines from 13 to 14)\n-        if ! (pos+4 <= self.len()) {\n-            return Err(DeviceTreeError::SliceReadError)\n+        if !(pos + 4 <= self.len()) {\n+            return Err(DeviceTreeError::SliceReadError);\n"
    },
    {
      "cmd_idx": 111,
      "file": "src/util.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/util.rs (original lines from 17 to 22)\n-        Ok(\n-            (self[pos] as u32) << 24\n-            | (self[pos+1] as u32) << 16\n-            | (self[pos+2] as u32) << 8\n-            | (self[pos+3] as u32)\n-        )\n+        Ok((self[pos] as u32) << 24\n+            | (self[pos + 1] as u32) << 16\n+            | (self[pos + 2] as u32) << 8\n+            | (self[pos + 3] as u32))\n"
    },
    {
      "cmd_idx": 111,
      "file": "src/util.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/util.rs (original lines from 26 to 26)\n-        let lo: u64 = self.read_be_u32(pos+4)?.into();\n+        let lo: u64 = self.read_be_u32(pos + 4)?.into();\n"
    },
    {
      "cmd_idx": 111,
      "file": "src/util.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/util.rs (original lines from 33 to 33)\n-                return Ok(&self[pos..cur])\n+                return Ok(&self[pos..cur]);\n"
    },
    {
      "cmd_idx": 111,
      "file": "src/util.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/src/util.rs (original lines from 40 to 41)\n-        if ! (end < self.len()) {\n-            return Err(DeviceTreeError::SliceReadError)\n+        if !(end < self.len()) {\n+            return Err(DeviceTreeError::SliceReadError);\n"
    },
    {
      "cmd_idx": 111,
      "file": "tests/test_dtb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/tests/test_dtb.rs (original lines from 1 to 2)\n-use std::str;\n-use std::io::Read;\n"
    },
    {
      "cmd_idx": 111,
      "file": "tests/test_dtb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/tests/test_dtb.rs (original lines from 4 to 4)\n+use std::io::Read;\n+use std::str;\n"
    },
    {
      "cmd_idx": 111,
      "file": "tests/test_dtb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/tests/test_dtb.rs (original lines from 11 to 18)\n-    let mut cb = |name: String, addr_cells: usize, size_cells: usize, props: Vec<(String, Vec<u8>)>| {\n-        match name.as_str() {\n-            \"\" => {\n-                assert_eq!(addr_cells, 2);\n-                assert_eq!(size_cells, 2);\n-                for prop in &props {\n-                    if prop.0.as_str() == \"compatible\" {\n-                        assert_eq!(str::from_utf8(&(prop.1)), Ok(\"riscv-virtio\\0\"));\n+    let mut cb =\n+        |name: String, addr_cells: usize, size_cells: usize, props: Vec<(String, Vec<u8>)>| {\n+            match name.as_str() {\n+                \"\" => {\n+                    assert_eq!(addr_cells, 2);\n+                    assert_eq!(size_cells, 2);\n+                    for prop in &props {\n+                        if prop.0.as_str() == \"compatible\" {\n+                            assert_eq!(str::from_utf8(&(prop.1)), Ok(\"riscv-virtio\\0\"));\n+                        }\n"
    },
    {
      "cmd_idx": 111,
      "file": "tests/test_dtb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/tests/test_dtb.rs (original lines from 21 to 27)\n-            },\n-            \"soc\" => {\n-                assert_eq!(addr_cells, 2);\n-                assert_eq!(size_cells, 2);\n-                for prop in &props {\n-                    if prop.0.as_str() == \"compatible\" {\n-                        assert_eq!(str::from_utf8(&(prop.1)), Ok(\"simple-bus\\0\"));\n+                \"soc\" => {\n+                    assert_eq!(addr_cells, 2);\n+                    assert_eq!(size_cells, 2);\n+                    for prop in &props {\n+                        if prop.0.as_str() == \"compatible\" {\n+                            assert_eq!(str::from_utf8(&(prop.1)), Ok(\"simple-bus\\0\"));\n+                        }\n"
    },
    {
      "cmd_idx": 111,
      "file": "tests/test_dtb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/tests/test_dtb.rs (original lines from 30 to 40)\n-            },\n-            \"virtio_mmio@10001000\" => {\n-                assert_eq!(addr_cells, 2);\n-                assert_eq!(size_cells, 2);\n-                for prop in &props {\n-                    if prop.0.as_str() == \"compatible\" {\n-                        assert_eq!(str::from_utf8(&(prop.1)), Ok(\"virtio,mmio\\0\"));\n-                    } else if prop.0.as_str() == \"reg\" {\n-                        let reg = &(prop.1);\n-                        assert_eq!(reg.as_slice().read_be_u64(0).unwrap(), 0x10001000);\n-                        assert_eq!(reg.as_slice().read_be_u64(8).unwrap(), 0x1000);\n+                \"virtio_mmio@10001000\" => {\n+                    assert_eq!(addr_cells, 2);\n+                    assert_eq!(size_cells, 2);\n+                    for prop in &props {\n+                        if prop.0.as_str() == \"compatible\" {\n+                            assert_eq!(str::from_utf8(&(prop.1)), Ok(\"virtio,mmio\\0\"));\n+                        } else if prop.0.as_str() == \"reg\" {\n+                            let reg = &(prop.1);\n+                            assert_eq!(reg.as_slice().read_be_u64(0).unwrap(), 0x10001000);\n+                            assert_eq!(reg.as_slice().read_be_u64(8).unwrap(), 0x1000);\n+                        }\n"
    },
    {
      "cmd_idx": 111,
      "file": "tests/test_dtb.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/axdtb/tests/test_dtb.rs (original lines from 43 to 46)\n-            },\n-            _ => {}\n-        }\n-    };\n+                _ => {}\n+            }\n+        };\n"
    },
    {
      "cmd_idx": 121,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/rt_axdtb/src/main.rs (original lines from 27 to 41)\n-    let mut cb = |name: String,\n-                  _addr_cells: usize,\n-                  _size_cells: usize,\n-                  props: Vec<(String, Vec<u8>)>| {\n-        match name.as_str() {\n-            \"chosen\" => {\n-                for prop in props {\n-                    match prop.0.as_str() {\n-                        \"bootargs\" => {\n-                            if let Ok(cmd) = core::str::from_utf8(&prop.1) {\n-                                let cmd = cmd.trim_end_matches(char::from(0));\n-                                assert!(cmd.len() > 0);\n-                                assert!(cmd.starts_with(\"init=\"));\n-                                let cmd = cmd.strip_prefix(\"init=\").unwrap();\n-                                assert!(cmd == \"/sbin/init\" || cmd == \"/btp/sbin/hello\");\n+    let mut cb =\n+        |name: String, _addr_cells: usize, _size_cells: usize, props: Vec<(String, Vec<u8>)>| {\n+            match name.as_str() {\n+                \"chosen\" => {\n+                    for prop in props {\n+                        match prop.0.as_str() {\n+                            \"bootargs\" => {\n+                                if let Ok(cmd) = core::str::from_utf8(&prop.1) {\n+                                    let cmd = cmd.trim_end_matches(char::from(0));\n+                                    assert!(cmd.len() > 0);\n+                                    assert!(cmd.starts_with(\"init=\"));\n+                                    let cmd = cmd.strip_prefix(\"init=\").unwrap();\n+                                    assert!(cmd == \"/sbin/init\" || cmd == \"/btp/sbin/hello\");\n+                                }\n"
    },
    {
      "cmd_idx": 121,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/rt_axdtb/src/main.rs (original lines from 43 to 43)\n+                            _ => (),\n"
    },
    {
      "cmd_idx": 121,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/rt_axdtb/src/main.rs (original lines from 44 to 44)\n-                        _ => (),\n"
    },
    {
      "cmd_idx": 121,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/rt_axdtb/src/main.rs (original lines from 47 to 50)\n-            },\n-            _ => (),\n-        }\n-    };\n+                _ => (),\n+            }\n+        };\n"
    },
    {
      "cmd_idx": 121,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/rt_axdtb/src/main.rs (original lines from 56 to 57)\n-fn test_dtb(_dtb_pa: usize) {\n-}\n+fn test_dtb(_dtb_pa: usize) {}\n"
    },
    {
      "cmd_idx": 122,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/rt_axdtb/src/main.rs (original lines from 27 to 41)\n-    let mut cb = |name: String,\n-                  _addr_cells: usize,\n-                  _size_cells: usize,\n-                  props: Vec<(String, Vec<u8>)>| {\n-        match name.as_str() {\n-            \"chosen\" => {\n-                for prop in props {\n-                    match prop.0.as_str() {\n-                        \"bootargs\" => {\n-                            if let Ok(cmd) = core::str::from_utf8(&prop.1) {\n-                                let cmd = cmd.trim_end_matches(char::from(0));\n-                                assert!(cmd.len() > 0);\n-                                assert!(cmd.starts_with(\"init=\"));\n-                                let cmd = cmd.strip_prefix(\"init=\").unwrap();\n-                                assert!(cmd == \"/sbin/init\" || cmd == \"/btp/sbin/hello\");\n+    let mut cb =\n+        |name: String, _addr_cells: usize, _size_cells: usize, props: Vec<(String, Vec<u8>)>| {\n+            match name.as_str() {\n+                \"chosen\" => {\n+                    for prop in props {\n+                        match prop.0.as_str() {\n+                            \"bootargs\" => {\n+                                if let Ok(cmd) = core::str::from_utf8(&prop.1) {\n+                                    let cmd = cmd.trim_end_matches(char::from(0));\n+                                    assert!(cmd.len() > 0);\n+                                    assert!(cmd.starts_with(\"init=\"));\n+                                    let cmd = cmd.strip_prefix(\"init=\").unwrap();\n+                                    assert!(cmd == \"/sbin/init\" || cmd == \"/btp/sbin/hello\");\n+                                }\n"
    },
    {
      "cmd_idx": 122,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/rt_axdtb/src/main.rs (original lines from 43 to 43)\n+                            _ => (),\n"
    },
    {
      "cmd_idx": 122,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/rt_axdtb/src/main.rs (original lines from 44 to 44)\n-                        _ => (),\n"
    },
    {
      "cmd_idx": 122,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/rt_axdtb/src/main.rs (original lines from 47 to 50)\n-            },\n-            _ => (),\n-        }\n-    };\n+                _ => (),\n+            }\n+        };\n"
    },
    {
      "cmd_idx": 122,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/rt_axdtb/src/main.rs (original lines from 56 to 57)\n-fn test_dtb(_dtb_pa: usize) {\n-}\n+fn test_dtb(_dtb_pa: usize) {}\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/rt_axdtb/src/main.rs (original lines from 27 to 41)\n-    let mut cb = |name: String,\n-                  _addr_cells: usize,\n-                  _size_cells: usize,\n-                  props: Vec<(String, Vec<u8>)>| {\n-        match name.as_str() {\n-            \"chosen\" => {\n-                for prop in props {\n-                    match prop.0.as_str() {\n-                        \"bootargs\" => {\n-                            if let Ok(cmd) = core::str::from_utf8(&prop.1) {\n-                                let cmd = cmd.trim_end_matches(char::from(0));\n-                                assert!(cmd.len() > 0);\n-                                assert!(cmd.starts_with(\"init=\"));\n-                                let cmd = cmd.strip_prefix(\"init=\").unwrap();\n-                                assert!(cmd == \"/sbin/init\" || cmd == \"/btp/sbin/hello\");\n+    let mut cb =\n+        |name: String, _addr_cells: usize, _size_cells: usize, props: Vec<(String, Vec<u8>)>| {\n+            match name.as_str() {\n+                \"chosen\" => {\n+                    for prop in props {\n+                        match prop.0.as_str() {\n+                            \"bootargs\" => {\n+                                if let Ok(cmd) = core::str::from_utf8(&prop.1) {\n+                                    let cmd = cmd.trim_end_matches(char::from(0));\n+                                    assert!(cmd.len() > 0);\n+                                    assert!(cmd.starts_with(\"init=\"));\n+                                    let cmd = cmd.strip_prefix(\"init=\").unwrap();\n+                                    assert!(cmd == \"/sbin/init\" || cmd == \"/btp/sbin/hello\");\n+                                }\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/rt_axdtb/src/main.rs (original lines from 43 to 43)\n+                            _ => (),\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/rt_axdtb/src/main.rs (original lines from 44 to 44)\n-                        _ => (),\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/rt_axdtb/src/main.rs (original lines from 47 to 50)\n-            },\n-            _ => (),\n-        }\n-    };\n+                _ => (),\n+            }\n+        };\n"
    },
    {
      "cmd_idx": 123,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axdtb/rt_axdtb/src/main.rs (original lines from 56 to 57)\n-fn test_dtb(_dtb_pa: usize) {\n-}\n+fn test_dtb(_dtb_pa: usize) {}\n"
    },
    {
      "cmd_idx": 127,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-12T16:12:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:12:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 128,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-12T16:12:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:12:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 129,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-12T16:12:11Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:12:11Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 133,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_axdtb, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_12/shilei-massclouds/axdtb/rt_axdtb\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling proc-macro2 v1.0.89\n   Compiling unicode-ident v1.0.13\n   Compiling cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling log v0.4.22\n   Compiling syn v1.0.109\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n[2024-11-12T16:12:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:12:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bitflags v2.6.0\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling tock-registers v0.8.1\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling aarch64-cpu v9.4.0\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 134,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_axdtb, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_12/shilei-massclouds/axdtb/rt_axdtb\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf\n   Compiling cfg-if v1.0.0\n   Compiling bit_field v0.10.2\n   Compiling quote v1.0.37\n   Compiling nb v1.1.0\n   Compiling static_assertions v1.1.0\n   Compiling nb v0.1.3\n   Compiling void v1.0.2\n   Compiling riscv v0.10.1\n   Compiling embedded-hal v0.2.7\n   Compiling sbi-spec v0.0.4\n   Compiling critical-section v1.2.0\n   Compiling log v0.4.22\n   Compiling sbi-rt v0.0.2\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling syn v1.0.109\n[2024-11-12T16:12:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:12:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling syn v2.0.87\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling bitflags v2.6.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 135,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_axdtb, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_12/shilei-massclouds/axdtb/rt_axdtb\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none\n   Compiling bit_field v0.10.2\n   Compiling cfg-if v1.0.0\n   Compiling rustversion v1.0.18\n   Compiling bitflags v2.6.0\n   Compiling volatile v0.4.6\n   Compiling bitflags v1.3.2\n   Compiling raw-cpuid v10.7.0\n   Compiling paste v1.0.15\n   Compiling x86 v0.52.0\n   Compiling log v0.4.22\n[2024-11-12T16:12:11Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:12:11Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling bit v0.1.1\n   Compiling svgbobdoc v0.3.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling raw-cpuid v11.2.0\n   Compiling x86_64 v0.14.12\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal#db90ff50)\n   Compiling const-default v1.0.0\n   Compiling rlsf v0.2.1\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling arch_boot v0.1.0 (ssh://git@github.com/shilei-massclouds/arch_boot#8663e839)\n   Compiling x2apic v0.4.3\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 136,
      "file": "batch_12/shilei-massclouds/axfs_ramfs",
      "kind": "Cargo",
      "raw": "\n   0: 无法解析 `batch_12/shilei-massclouds/axfs_ramfs` 内的 Rust 项目布局\n   1: 无法读取 cargo metadata 的结果：`cargo metadata` exited with an error: error: current package believes it's in a workspace when it's not:\n      current:   /home/runner/check/batch_12/shilei-massclouds/axfs_ramfs/procfs/Cargo.toml\n      workspace: /home/runner/check/batch_12/shilei-massclouds/axfs_ramfs/Cargo.toml\n\n      this may be fixable by adding `procfs` to the `workspace.members` array of the manifest located at: /home/runner/check/batch_12/shilei-massclouds/axfs_ramfs/Cargo.toml\n      Alternatively, to keep it out of the workspace, add the package to the `workspace.exclude` array, or add an empty `[workspace]` table to the package's manifest.\n   1: \n\nLocation:\n   src/layout/mod.rs:59\n\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ SPANTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n   0: os_checker::run_checker::try_new with user=\"shilei-massclouds\" repo=\"axfs_ramfs\"\n      at src/run_checker/mod.rs:194\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets."
    },
    {
      "cmd_idx": 137,
      "file": "src/arch/aarch64/context.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/aarch64/context.rs (original lines from 185 to 189)\n-    let mut regs = unsafe {\n-        core::slice::from_raw_parts_mut(\n-            regs as *mut TrapFrame, 1\n-        )\n-    };\n+    let mut regs = unsafe { core::slice::from_raw_parts_mut(regs as *mut TrapFrame, 1) };\n"
    },
    {
      "cmd_idx": 137,
      "file": "src/arch/aarch64/trap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 3 to 3)\n+use crate::trap::SyscallArgs;\n"
    },
    {
      "cmd_idx": 137,
      "file": "src/arch/aarch64/trap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 5 to 5)\n-use crate::trap::SyscallArgs;\n"
    },
    {
      "cmd_idx": 137,
      "file": "src/arch/aarch64/trap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 91 to 94)\n-    [\n-        tf.r[0], tf.r[1], tf.r[2],\n-        tf.r[3], tf.r[4], tf.r[5],\n-    ].map(|x| x as usize)\n+    [tf.r[0], tf.r[1], tf.r[2], tf.r[3], tf.r[4], tf.r[5]].map(|x| x as usize)\n"
    },
    {
      "cmd_idx": 137,
      "file": "src/arch/aarch64/trap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 99 to 99)\n-    F: FnOnce(SyscallArgs, usize) -> usize\n+    F: FnOnce(SyscallArgs, usize) -> usize,\n"
    },
    {
      "cmd_idx": 137,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 10 to 10)\n+use axerrno::{linux_err, LinuxError};\n"
    },
    {
      "cmd_idx": 137,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 13 to 13)\n-use axerrno::{LinuxError, linux_err};\n"
    },
    {
      "cmd_idx": 137,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 37 to 38)\n-pub const SR_SPIE:  usize = 0x00000020; /* Previous Supervisor IE */\n-pub const SR_SPP:   usize = 0x00000100; /* Previously Supervisor */\n+pub const SR_SPIE: usize = 0x00000020; /* Previous Supervisor IE */\n+pub const SR_SPP: usize = 0x00000100; /* Previously Supervisor */\n"
    },
    {
      "cmd_idx": 137,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 172 to 192)\n-    unsafe { core::arch::asm!(\n-        \"1:\",\n-        \"   lb {x}, ({ptr})\",\n-        \"2:\",\n-        \"   .section .fixup,\\\"ax\\\"\",\n-        \"   .balign 4\",\n-        \"3:\",\n-        \"   li {err}, {err_val}\",\n-        \"   li {x}, 0\",\n-        \"   jump 2b, {_tmp}\",\n-        \"   .previous\",\n-        \"   .section __ex_table,\\\"a\\\"\",\n-        \"   .balign 8\",\n-        \"   .dword 1b, 3b\",\n-        \"   .previous\",\n-        err = inout(reg) err,\n-        x = out(reg) x,\n-        ptr = in(reg) ptr,\n-        err_val = const (-(LinuxError::EFAULT as isize)),\n-        _tmp = out(reg) _tmp,\n-    )}\n+    unsafe {\n+        core::arch::asm!(\n+            \"1:\",\n+            \"   lb {x}, ({ptr})\",\n+            \"2:\",\n+            \"   .section .fixup,\\\"ax\\\"\",\n+            \"   .balign 4\",\n+            \"3:\",\n+            \"   li {err}, {err_val}\",\n+            \"   li {x}, 0\",\n+            \"   jump 2b, {_tmp}\",\n+            \"   .previous\",\n+            \"   .section __ex_table,\\\"a\\\"\",\n+            \"   .balign 8\",\n+            \"   .dword 1b, 3b\",\n+            \"   .previous\",\n+            err = inout(reg) err,\n+            x = out(reg) x,\n+            ptr = in(reg) ptr,\n+            err_val = const (-(LinuxError::EFAULT as isize)),\n+            _tmp = out(reg) _tmp,\n+        )\n+    }\n"
    },
    {
      "cmd_idx": 137,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 200 to 219)\n-    unsafe { core::arch::asm!(\n-        \"1:\",\n-        \"   sb {x}, ({ptr})\",\n-        \"2:\",\n-        \"   .section .fixup,\\\"ax\\\"\",\n-        \"   .balign 4\",\n-        \"3:\",\n-        \"   li {err}, {err_val}\",\n-        \"   jump 2b, {_tmp}\",\n-        \"   .previous\",\n-        \"   .section __ex_table,\\\"a\\\"\",\n-        \"   .balign 8\",\n-        \"   .dword 1b, 3b\",\n-        \"   .previous\",\n-        err = inout(reg) err,\n-        x = in(reg) x,\n-        ptr = in(reg) ptr,\n-        err_val = const (-(LinuxError::EFAULT as isize)),\n-        _tmp = out(reg) _tmp,\n-    )}\n+    unsafe {\n+        core::arch::asm!(\n+            \"1:\",\n+            \"   sb {x}, ({ptr})\",\n+            \"2:\",\n+            \"   .section .fixup,\\\"ax\\\"\",\n+            \"   .balign 4\",\n+            \"3:\",\n+            \"   li {err}, {err_val}\",\n+            \"   jump 2b, {_tmp}\",\n+            \"   .previous\",\n+            \"   .section __ex_table,\\\"a\\\"\",\n+            \"   .balign 8\",\n+            \"   .dword 1b, 3b\",\n+            \"   .previous\",\n+            err = inout(reg) err,\n+            x = in(reg) x,\n+            ptr = in(reg) ptr,\n+            err_val = const (-(LinuxError::EFAULT as isize)),\n+            _tmp = out(reg) _tmp,\n+        )\n+    }\n"
    },
    {
      "cmd_idx": 137,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 276 to 277)\n-pub fn early_init() {\n-}\n+pub fn early_init() {}\n"
    },
    {
      "cmd_idx": 137,
      "file": "src/arch/riscv/sysno.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/riscv/sysno.rs (original lines from 17 to 17)\n-pub const LINUX_SYSCALL_MOUNT:usize = 0x28;\n+pub const LINUX_SYSCALL_MOUNT: usize = 0x28;\n"
    },
    {
      "cmd_idx": 137,
      "file": "src/arch/riscv/sysno.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/riscv/sysno.rs (original lines from 47 to 47)\n-pub const LINUX_SYSCALL_SETGID:usize = 0x90;\n+pub const LINUX_SYSCALL_SETGID: usize = 0x90;\n"
    },
    {
      "cmd_idx": 137,
      "file": "src/arch/x86_64/sysno.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/x86_64/sysno.rs (original lines from 85 to 85)\n-pub const LINUX_SYSCALL_SETGID:usize = 106;\n+pub const LINUX_SYSCALL_SETGID: usize = 106;\n"
    },
    {
      "cmd_idx": 137,
      "file": "src/misc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 5 to 5)\n-use spinbase::SpinNoIrq;\n"
    },
    {
      "cmd_idx": 137,
      "file": "src/misc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 7 to 7)\n+use spinbase::SpinNoIrq;\n"
    },
    {
      "cmd_idx": 137,
      "file": "src/misc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 12 to 12)\n-\tlet mut seed = PARK_MILLER_LEHMER_SEED.lock();\n+    let mut seed = PARK_MILLER_LEHMER_SEED.lock();\n"
    },
    {
      "cmd_idx": 137,
      "file": "src/misc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 19 to 19)\n-\t    *seed = ((u64::from(*seed) * 48271) % RAND_MAX) as u32;\n+        *seed = ((u64::from(*seed) * 48271) % RAND_MAX) as u32;\n"
    },
    {
      "cmd_idx": 138,
      "file": "src/arch/aarch64/context.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/aarch64/context.rs (original lines from 185 to 189)\n-    let mut regs = unsafe {\n-        core::slice::from_raw_parts_mut(\n-            regs as *mut TrapFrame, 1\n-        )\n-    };\n+    let mut regs = unsafe { core::slice::from_raw_parts_mut(regs as *mut TrapFrame, 1) };\n"
    },
    {
      "cmd_idx": 138,
      "file": "src/arch/aarch64/trap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 3 to 3)\n+use crate::trap::SyscallArgs;\n"
    },
    {
      "cmd_idx": 138,
      "file": "src/arch/aarch64/trap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 5 to 5)\n-use crate::trap::SyscallArgs;\n"
    },
    {
      "cmd_idx": 138,
      "file": "src/arch/aarch64/trap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 91 to 94)\n-    [\n-        tf.r[0], tf.r[1], tf.r[2],\n-        tf.r[3], tf.r[4], tf.r[5],\n-    ].map(|x| x as usize)\n+    [tf.r[0], tf.r[1], tf.r[2], tf.r[3], tf.r[4], tf.r[5]].map(|x| x as usize)\n"
    },
    {
      "cmd_idx": 138,
      "file": "src/arch/aarch64/trap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 99 to 99)\n-    F: FnOnce(SyscallArgs, usize) -> usize\n+    F: FnOnce(SyscallArgs, usize) -> usize,\n"
    },
    {
      "cmd_idx": 138,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 10 to 10)\n+use axerrno::{linux_err, LinuxError};\n"
    },
    {
      "cmd_idx": 138,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 13 to 13)\n-use axerrno::{LinuxError, linux_err};\n"
    },
    {
      "cmd_idx": 138,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 37 to 38)\n-pub const SR_SPIE:  usize = 0x00000020; /* Previous Supervisor IE */\n-pub const SR_SPP:   usize = 0x00000100; /* Previously Supervisor */\n+pub const SR_SPIE: usize = 0x00000020; /* Previous Supervisor IE */\n+pub const SR_SPP: usize = 0x00000100; /* Previously Supervisor */\n"
    },
    {
      "cmd_idx": 138,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 172 to 192)\n-    unsafe { core::arch::asm!(\n-        \"1:\",\n-        \"   lb {x}, ({ptr})\",\n-        \"2:\",\n-        \"   .section .fixup,\\\"ax\\\"\",\n-        \"   .balign 4\",\n-        \"3:\",\n-        \"   li {err}, {err_val}\",\n-        \"   li {x}, 0\",\n-        \"   jump 2b, {_tmp}\",\n-        \"   .previous\",\n-        \"   .section __ex_table,\\\"a\\\"\",\n-        \"   .balign 8\",\n-        \"   .dword 1b, 3b\",\n-        \"   .previous\",\n-        err = inout(reg) err,\n-        x = out(reg) x,\n-        ptr = in(reg) ptr,\n-        err_val = const (-(LinuxError::EFAULT as isize)),\n-        _tmp = out(reg) _tmp,\n-    )}\n+    unsafe {\n+        core::arch::asm!(\n+            \"1:\",\n+            \"   lb {x}, ({ptr})\",\n+            \"2:\",\n+            \"   .section .fixup,\\\"ax\\\"\",\n+            \"   .balign 4\",\n+            \"3:\",\n+            \"   li {err}, {err_val}\",\n+            \"   li {x}, 0\",\n+            \"   jump 2b, {_tmp}\",\n+            \"   .previous\",\n+            \"   .section __ex_table,\\\"a\\\"\",\n+            \"   .balign 8\",\n+            \"   .dword 1b, 3b\",\n+            \"   .previous\",\n+            err = inout(reg) err,\n+            x = out(reg) x,\n+            ptr = in(reg) ptr,\n+            err_val = const (-(LinuxError::EFAULT as isize)),\n+            _tmp = out(reg) _tmp,\n+        )\n+    }\n"
    },
    {
      "cmd_idx": 138,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 200 to 219)\n-    unsafe { core::arch::asm!(\n-        \"1:\",\n-        \"   sb {x}, ({ptr})\",\n-        \"2:\",\n-        \"   .section .fixup,\\\"ax\\\"\",\n-        \"   .balign 4\",\n-        \"3:\",\n-        \"   li {err}, {err_val}\",\n-        \"   jump 2b, {_tmp}\",\n-        \"   .previous\",\n-        \"   .section __ex_table,\\\"a\\\"\",\n-        \"   .balign 8\",\n-        \"   .dword 1b, 3b\",\n-        \"   .previous\",\n-        err = inout(reg) err,\n-        x = in(reg) x,\n-        ptr = in(reg) ptr,\n-        err_val = const (-(LinuxError::EFAULT as isize)),\n-        _tmp = out(reg) _tmp,\n-    )}\n+    unsafe {\n+        core::arch::asm!(\n+            \"1:\",\n+            \"   sb {x}, ({ptr})\",\n+            \"2:\",\n+            \"   .section .fixup,\\\"ax\\\"\",\n+            \"   .balign 4\",\n+            \"3:\",\n+            \"   li {err}, {err_val}\",\n+            \"   jump 2b, {_tmp}\",\n+            \"   .previous\",\n+            \"   .section __ex_table,\\\"a\\\"\",\n+            \"   .balign 8\",\n+            \"   .dword 1b, 3b\",\n+            \"   .previous\",\n+            err = inout(reg) err,\n+            x = in(reg) x,\n+            ptr = in(reg) ptr,\n+            err_val = const (-(LinuxError::EFAULT as isize)),\n+            _tmp = out(reg) _tmp,\n+        )\n+    }\n"
    },
    {
      "cmd_idx": 138,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 276 to 277)\n-pub fn early_init() {\n-}\n+pub fn early_init() {}\n"
    },
    {
      "cmd_idx": 138,
      "file": "src/arch/riscv/sysno.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/riscv/sysno.rs (original lines from 17 to 17)\n-pub const LINUX_SYSCALL_MOUNT:usize = 0x28;\n+pub const LINUX_SYSCALL_MOUNT: usize = 0x28;\n"
    },
    {
      "cmd_idx": 138,
      "file": "src/arch/riscv/sysno.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/riscv/sysno.rs (original lines from 47 to 47)\n-pub const LINUX_SYSCALL_SETGID:usize = 0x90;\n+pub const LINUX_SYSCALL_SETGID: usize = 0x90;\n"
    },
    {
      "cmd_idx": 138,
      "file": "src/arch/x86_64/sysno.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/x86_64/sysno.rs (original lines from 85 to 85)\n-pub const LINUX_SYSCALL_SETGID:usize = 106;\n+pub const LINUX_SYSCALL_SETGID: usize = 106;\n"
    },
    {
      "cmd_idx": 138,
      "file": "src/misc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 5 to 5)\n-use spinbase::SpinNoIrq;\n"
    },
    {
      "cmd_idx": 138,
      "file": "src/misc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 7 to 7)\n+use spinbase::SpinNoIrq;\n"
    },
    {
      "cmd_idx": 138,
      "file": "src/misc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 12 to 12)\n-\tlet mut seed = PARK_MILLER_LEHMER_SEED.lock();\n+    let mut seed = PARK_MILLER_LEHMER_SEED.lock();\n"
    },
    {
      "cmd_idx": 138,
      "file": "src/misc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 19 to 19)\n-\t    *seed = ((u64::from(*seed) * 48271) % RAND_MAX) as u32;\n+        *seed = ((u64::from(*seed) * 48271) % RAND_MAX) as u32;\n"
    },
    {
      "cmd_idx": 139,
      "file": "src/arch/aarch64/context.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/aarch64/context.rs (original lines from 185 to 189)\n-    let mut regs = unsafe {\n-        core::slice::from_raw_parts_mut(\n-            regs as *mut TrapFrame, 1\n-        )\n-    };\n+    let mut regs = unsafe { core::slice::from_raw_parts_mut(regs as *mut TrapFrame, 1) };\n"
    },
    {
      "cmd_idx": 139,
      "file": "src/arch/aarch64/trap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 3 to 3)\n+use crate::trap::SyscallArgs;\n"
    },
    {
      "cmd_idx": 139,
      "file": "src/arch/aarch64/trap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 5 to 5)\n-use crate::trap::SyscallArgs;\n"
    },
    {
      "cmd_idx": 139,
      "file": "src/arch/aarch64/trap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 91 to 94)\n-    [\n-        tf.r[0], tf.r[1], tf.r[2],\n-        tf.r[3], tf.r[4], tf.r[5],\n-    ].map(|x| x as usize)\n+    [tf.r[0], tf.r[1], tf.r[2], tf.r[3], tf.r[4], tf.r[5]].map(|x| x as usize)\n"
    },
    {
      "cmd_idx": 139,
      "file": "src/arch/aarch64/trap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 99 to 99)\n-    F: FnOnce(SyscallArgs, usize) -> usize\n+    F: FnOnce(SyscallArgs, usize) -> usize,\n"
    },
    {
      "cmd_idx": 139,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 10 to 10)\n+use axerrno::{linux_err, LinuxError};\n"
    },
    {
      "cmd_idx": 139,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 13 to 13)\n-use axerrno::{LinuxError, linux_err};\n"
    },
    {
      "cmd_idx": 139,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 37 to 38)\n-pub const SR_SPIE:  usize = 0x00000020; /* Previous Supervisor IE */\n-pub const SR_SPP:   usize = 0x00000100; /* Previously Supervisor */\n+pub const SR_SPIE: usize = 0x00000020; /* Previous Supervisor IE */\n+pub const SR_SPP: usize = 0x00000100; /* Previously Supervisor */\n"
    },
    {
      "cmd_idx": 139,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 172 to 192)\n-    unsafe { core::arch::asm!(\n-        \"1:\",\n-        \"   lb {x}, ({ptr})\",\n-        \"2:\",\n-        \"   .section .fixup,\\\"ax\\\"\",\n-        \"   .balign 4\",\n-        \"3:\",\n-        \"   li {err}, {err_val}\",\n-        \"   li {x}, 0\",\n-        \"   jump 2b, {_tmp}\",\n-        \"   .previous\",\n-        \"   .section __ex_table,\\\"a\\\"\",\n-        \"   .balign 8\",\n-        \"   .dword 1b, 3b\",\n-        \"   .previous\",\n-        err = inout(reg) err,\n-        x = out(reg) x,\n-        ptr = in(reg) ptr,\n-        err_val = const (-(LinuxError::EFAULT as isize)),\n-        _tmp = out(reg) _tmp,\n-    )}\n+    unsafe {\n+        core::arch::asm!(\n+            \"1:\",\n+            \"   lb {x}, ({ptr})\",\n+            \"2:\",\n+            \"   .section .fixup,\\\"ax\\\"\",\n+            \"   .balign 4\",\n+            \"3:\",\n+            \"   li {err}, {err_val}\",\n+            \"   li {x}, 0\",\n+            \"   jump 2b, {_tmp}\",\n+            \"   .previous\",\n+            \"   .section __ex_table,\\\"a\\\"\",\n+            \"   .balign 8\",\n+            \"   .dword 1b, 3b\",\n+            \"   .previous\",\n+            err = inout(reg) err,\n+            x = out(reg) x,\n+            ptr = in(reg) ptr,\n+            err_val = const (-(LinuxError::EFAULT as isize)),\n+            _tmp = out(reg) _tmp,\n+        )\n+    }\n"
    },
    {
      "cmd_idx": 139,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 200 to 219)\n-    unsafe { core::arch::asm!(\n-        \"1:\",\n-        \"   sb {x}, ({ptr})\",\n-        \"2:\",\n-        \"   .section .fixup,\\\"ax\\\"\",\n-        \"   .balign 4\",\n-        \"3:\",\n-        \"   li {err}, {err_val}\",\n-        \"   jump 2b, {_tmp}\",\n-        \"   .previous\",\n-        \"   .section __ex_table,\\\"a\\\"\",\n-        \"   .balign 8\",\n-        \"   .dword 1b, 3b\",\n-        \"   .previous\",\n-        err = inout(reg) err,\n-        x = in(reg) x,\n-        ptr = in(reg) ptr,\n-        err_val = const (-(LinuxError::EFAULT as isize)),\n-        _tmp = out(reg) _tmp,\n-    )}\n+    unsafe {\n+        core::arch::asm!(\n+            \"1:\",\n+            \"   sb {x}, ({ptr})\",\n+            \"2:\",\n+            \"   .section .fixup,\\\"ax\\\"\",\n+            \"   .balign 4\",\n+            \"3:\",\n+            \"   li {err}, {err_val}\",\n+            \"   jump 2b, {_tmp}\",\n+            \"   .previous\",\n+            \"   .section __ex_table,\\\"a\\\"\",\n+            \"   .balign 8\",\n+            \"   .dword 1b, 3b\",\n+            \"   .previous\",\n+            err = inout(reg) err,\n+            x = in(reg) x,\n+            ptr = in(reg) ptr,\n+            err_val = const (-(LinuxError::EFAULT as isize)),\n+            _tmp = out(reg) _tmp,\n+        )\n+    }\n"
    },
    {
      "cmd_idx": 139,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 276 to 277)\n-pub fn early_init() {\n-}\n+pub fn early_init() {}\n"
    },
    {
      "cmd_idx": 139,
      "file": "src/arch/riscv/sysno.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/riscv/sysno.rs (original lines from 17 to 17)\n-pub const LINUX_SYSCALL_MOUNT:usize = 0x28;\n+pub const LINUX_SYSCALL_MOUNT: usize = 0x28;\n"
    },
    {
      "cmd_idx": 139,
      "file": "src/arch/riscv/sysno.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/riscv/sysno.rs (original lines from 47 to 47)\n-pub const LINUX_SYSCALL_SETGID:usize = 0x90;\n+pub const LINUX_SYSCALL_SETGID: usize = 0x90;\n"
    },
    {
      "cmd_idx": 139,
      "file": "src/arch/x86_64/sysno.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/arch/x86_64/sysno.rs (original lines from 85 to 85)\n-pub const LINUX_SYSCALL_SETGID:usize = 106;\n+pub const LINUX_SYSCALL_SETGID: usize = 106;\n"
    },
    {
      "cmd_idx": 139,
      "file": "src/misc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 5 to 5)\n-use spinbase::SpinNoIrq;\n"
    },
    {
      "cmd_idx": 139,
      "file": "src/misc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 7 to 7)\n+use spinbase::SpinNoIrq;\n"
    },
    {
      "cmd_idx": 139,
      "file": "src/misc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 12 to 12)\n-\tlet mut seed = PARK_MILLER_LEHMER_SEED.lock();\n+    let mut seed = PARK_MILLER_LEHMER_SEED.lock();\n"
    },
    {
      "cmd_idx": 139,
      "file": "src/misc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 19 to 19)\n-\t    *seed = ((u64::from(*seed) * 48271) % RAND_MAX) as u32;\n+        *seed = ((u64::from(*seed) * 48271) % RAND_MAX) as u32;\n"
    },
    {
      "cmd_idx": 143,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-12T16:13:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:13:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 144,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-12T16:13:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:13:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 145,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-12T16:13:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:13:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 149,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axhal, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_12/shilei-massclouds/axhal/axhal\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.1\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.89\n   Compiling unicode-ident v1.0.13\n   Compiling indexmap v2.6.0\n   Compiling cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling log v0.4.22\n   Compiling syn v2.0.87\n[2024-11-12T16:13:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:13:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling bitflags v2.6.0\n   Compiling toml_edit v0.19.15\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling static_assertions v1.1.0\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_12/shilei-massclouds/axhal/axhal)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 150,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axhal, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_12/shilei-massclouds/axhal/axhal\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf\n   Compiling cfg-if v1.0.0\n   Compiling nb v1.1.0\n   Compiling riscv v0.10.1\n   Compiling static_assertions v1.1.0\n   Compiling void v1.0.2\n   Compiling sbi-spec v0.0.4\n   Compiling nb v0.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling critical-section v1.2.0\n   Compiling log v0.4.22\n   Compiling bit_field v0.10.2\n   Compiling sbi-rt v0.0.2\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling bitflags v2.6.0\n[2024-11-12T16:13:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:13:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_12/shilei-massclouds/axhal/axhal)\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 151,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axhal, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_12/shilei-massclouds/axhal/axhal\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none\n   Compiling bit_field v0.10.2\n   Compiling rustversion v1.0.18\n   Compiling bitflags v2.6.0\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v1.3.2\n   Compiling volatile v0.4.6\n   Compiling raw-cpuid v10.7.0\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling paste v1.0.15\n   Compiling log v0.4.22\n[2024-11-12T16:13:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:13:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling x86 v0.52.0\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling bit v0.1.1\n   Compiling axhal v0.1.0 (/home/runner/check/batch_12/shilei-massclouds/axhal/axhal)\n   Compiling raw-cpuid v11.2.0\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling static_assertions v1.1.0\n   Compiling x86_64 v0.14.12\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 152,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/rt_axhal/src/main.rs (original lines from 7 to 7)\n-use core::panic::PanicInfo;\n"
    },
    {
      "cmd_idx": 152,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/rt_axhal/src/main.rs (original lines from 9 to 9)\n+use core::panic::PanicInfo;\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/rt_axhal/src/main.rs (original lines from 7 to 7)\n-use core::panic::PanicInfo;\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/rt_axhal/src/main.rs (original lines from 9 to 9)\n+use core::panic::PanicInfo;\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/rt_axhal/src/main.rs (original lines from 7 to 7)\n-use core::panic::PanicInfo;\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_12/shilei-massclouds/axhal/rt_axhal/src/main.rs (original lines from 9 to 9)\n+use core::panic::PanicInfo;\n"
    },
    {
      "cmd_idx": 158,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-12T16:13:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:13:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 159,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-12T16:13:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:13:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 160,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-12T16:13:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:13:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 164,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_axhal, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_12/shilei-massclouds/axhal/rt_axhal\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-11-12T16:13:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:13:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling arch_boot v0.1.0 (ssh://git@github.com/shilei-massclouds/arch_boot.git#8663e839)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 165,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_axhal, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_12/shilei-massclouds/axhal/rt_axhal\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf\n[2024-11-12T16:13:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:13:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling arch_boot v0.1.0 (ssh://git@github.com/shilei-massclouds/arch_boot.git#8663e839)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 166,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_axhal, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_12/shilei-massclouds/axhal/rt_axhal\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none\n[2024-11-12T16:13:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-12T16:13:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling x2apic v0.4.3\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling arch_boot v0.1.0 (ssh://git@github.com/shilei-massclouds/arch_boot.git#8663e839)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    }
  ]
}