{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.83.0-nightly (1bc403daa 2024-10-11)",
          "commit_hash": "1bc403daadbebb553ccc211a0a8eebb73989665f",
          "commit_date": "2024-10-11",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.83.0-nightly",
          "llvm_version": "19.1.1"
        },
        "installed": [
          {
            "channel": "nightly-2024-10-12-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "x86_64-unknown-linux-gnu"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-linux-gnu",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1732373265858,
        "finish": 1732373268861,
        "duration_ms": 3003,
        "git_time": "2024-11-23 22:43:05 +0800",
        "git_sha": "67172fefe379c487ff2f7dcc7cc203a28c83acd2"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Audit",
        "Mirai",
        "Rap",
        "Rudra",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Outdated",
        "Geiger",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "audit": [
          "Audit"
        ],
        "mirai": [
          "Mirai"
        ],
        "rap": [
          "Rap"
        ],
        "rudra": [
          "Rudra"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "outdated": [
          "Outdated"
        ],
        "geiger": [
          "Geiger"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "arceos-org",
        "repo": "flatten_objects"
      },
      {
        "user": "arceos-org",
        "repo": "handler_table"
      },
      {
        "user": "arceos-org",
        "repo": "int_ratio"
      },
      {
        "user": "arceos-org",
        "repo": "kernel_guard"
      },
      {
        "user": "arceos-org",
        "repo": "kspin"
      },
      {
        "user": "arceos-org",
        "repo": "lazyinit"
      },
      {
        "user": "arceos-org",
        "repo": "linked_list_r4l"
      },
      {
        "user": "arceos-org",
        "repo": "memory_set"
      }
    ],
    "packages": [
      {
        "name": "flatten_objects",
        "repo": {
          "repo_idx": 0,
          "user": "arceos-org",
          "repo": "flatten_objects"
        }
      },
      {
        "name": "handler_table",
        "repo": {
          "repo_idx": 1,
          "user": "arceos-org",
          "repo": "handler_table"
        }
      },
      {
        "name": "int_ratio",
        "repo": {
          "repo_idx": 2,
          "user": "arceos-org",
          "repo": "int_ratio"
        }
      },
      {
        "name": "kernel_guard",
        "repo": {
          "repo_idx": 3,
          "user": "arceos-org",
          "repo": "kernel_guard"
        }
      },
      {
        "name": "kspin",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "kspin"
        }
      },
      {
        "name": "lazyinit",
        "repo": {
          "repo_idx": 5,
          "user": "arceos-org",
          "repo": "lazyinit"
        }
      },
      {
        "name": "linked_list_r4l",
        "repo": {
          "repo_idx": 6,
          "user": "arceos-org",
          "repo": "linked_list_r4l"
        }
      },
      {
        "name": "memory_set",
        "repo": {
          "repo_idx": 7,
          "user": "arceos-org",
          "repo": "memory_set"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p flatten_objects -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p flatten_objects -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p flatten_objects -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p flatten_objects -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 508,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 473,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 461,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 466,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-02-05 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 47,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 489,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 469,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 443,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 452,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-10-12 rap -F -M",
      "count": 0,
      "duration_ms": 773,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 261,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 64,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 64,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 65,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 63,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 110,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p handler_table -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p handler_table -- --emit=json",
      "count": 0,
      "duration_ms": 94,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p handler_table -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p handler_table -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 167,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 141,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 141,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 141,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-02-05 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 48,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 102,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 74,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 73,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 76,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-10-12 rap -F -M",
      "count": 0,
      "duration_ms": 354,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 258,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 63,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 63,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 63,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 65,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 109,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p int_ratio -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p int_ratio -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p int_ratio -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p int_ratio -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 181,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 155,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 153,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 157,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-02-05 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 49,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 124,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 96,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 94,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 100,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-10-12 rap -F -M",
      "count": 0,
      "duration_ms": 385,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 260,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 63,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 63,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 64,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 64,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 107,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p kernel_guard -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p kernel_guard -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p kernel_guard -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p kernel_guard -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 3165,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 178,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 179,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 181,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-02-05 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 48,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 3823,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 115,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 109,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 119,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-10-12 rap -F -M",
      "count": 0,
      "duration_ms": 3171,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 255,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 64,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 62,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 66,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 64,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 115,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p kspin -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p kspin -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p kspin -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p kspin -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 8,
      "duration_ms": 3141,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 8,
      "duration_ms": 202,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 8,
      "duration_ms": 202,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 8,
      "duration_ms": 207,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-02-05 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 48,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 3762,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 132,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 127,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 132,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-10-12 rap -F -M",
      "count": 0,
      "duration_ms": 3261,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 253,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 62,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 63,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 63,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 64,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 110,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p lazyinit -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p lazyinit -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p lazyinit -- --emit=json",
      "count": 0,
      "duration_ms": 94,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p lazyinit -- --emit=json",
      "count": 0,
      "duration_ms": 94,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 179,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 155,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 151,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 157,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-02-05 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 46,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 108,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 81,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 81,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 82,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-10-12 rap -F -M",
      "count": 0,
      "duration_ms": 440,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 256,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 62,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 63,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 62,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 63,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p linked_list_r4l -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p linked_list_r4l -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p linked_list_r4l -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p linked_list_r4l -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 232,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 210,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 209,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 224,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-02-05 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 49,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 142,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 110,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 108,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 109,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-10-12 rap -F -M",
      "count": 1,
      "duration_ms": 847,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 255,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 62,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 64,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 62,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 64,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p memory_set -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p memory_set -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p memory_set -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p memory_set -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 263,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 237,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 235,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 241,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-02-05 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 47,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 182,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 154,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 149,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 155,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-10-12 rap -F -M",
      "count": 0,
      "duration_ms": 703,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 256,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 62,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 64,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 62,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 64,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 107,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 4,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `FlattenObjects<T, CAP>`\n  --> src/lib.rs:54:5\n   |\n54 | /     pub const fn new() -> Self {\n55 | |         assert!(CAP <= 1024);\n56 | |         Self {\n57 | |             objects: MaybeUninit::uninit_array(),\n...  |\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n52 + impl<T, const CAP: usize> Default for FlattenObjects<T, CAP> {\n53 +     fn default() -> Self {\n54 +         Self::new()\n55 +     }\n56 + }\n   |\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `FlattenObjects<T, CAP>`\n  --> src/lib.rs:54:5\n   |\n54 | /     pub const fn new() -> Self {\n55 | |         assert!(CAP <= 1024);\n56 | |         Self {\n57 | |             objects: MaybeUninit::uninit_array(),\n...  |\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n52 + impl<T, const CAP: usize> Default for FlattenObjects<T, CAP> {\n53 +     fn default() -> Self {\n54 +         Self::new()\n55 +     }\n56 + }\n   |\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `FlattenObjects<T, CAP>`\n  --> src/lib.rs:54:5\n   |\n54 | /     pub const fn new() -> Self {\n55 | |         assert!(CAP <= 1024);\n56 | |         Self {\n57 | |             objects: MaybeUninit::uninit_array(),\n...  |\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n52 + impl<T, const CAP: usize> Default for FlattenObjects<T, CAP> {\n53 +     fn default() -> Self {\n54 +         Self::new()\n55 +     }\n56 + }\n   |\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `FlattenObjects<T, CAP>`\n  --> src/lib.rs:54:5\n   |\n54 | /     pub const fn new() -> Self {\n55 | |         assert!(CAP <= 1024);\n56 | |         Self {\n57 | |             objects: MaybeUninit::uninit_array(),\n...  |\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n52 + impl<T, const CAP: usize> Default for FlattenObjects<T, CAP> {\n53 +     fn default() -> Self {\n54 +         Self::new()\n55 +     }\n56 + }\n   |\n\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `HandlerTable<N>`\n  --> src/lib.rs:21:5\n   |\n21 | /     pub const fn new() -> Self {\n22 | |         const EMPTY: AtomicUsize = AtomicUsize::new(0);\n23 | |         Self {\n24 | |             handlers: [EMPTY; N],\n25 | |         }\n26 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n18 + impl<const N: usize> Default for HandlerTable<N> {\n19 +     fn default() -> Self {\n20 +         Self::new()\n21 +     }\n22 + }\n   |\n\n"
    },
    {
      "cmd_idx": 25,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `HandlerTable<N>`\n  --> src/lib.rs:21:5\n   |\n21 | /     pub const fn new() -> Self {\n22 | |         const EMPTY: AtomicUsize = AtomicUsize::new(0);\n23 | |         Self {\n24 | |             handlers: [EMPTY; N],\n25 | |         }\n26 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n18 + impl<const N: usize> Default for HandlerTable<N> {\n19 +     fn default() -> Self {\n20 +         Self::new()\n21 +     }\n22 + }\n   |\n\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `HandlerTable<N>`\n  --> src/lib.rs:21:5\n   |\n21 | /     pub const fn new() -> Self {\n22 | |         const EMPTY: AtomicUsize = AtomicUsize::new(0);\n23 | |         Self {\n24 | |             handlers: [EMPTY; N],\n25 | |         }\n26 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n18 + impl<const N: usize> Default for HandlerTable<N> {\n19 +     fn default() -> Self {\n20 +         Self::new()\n21 +     }\n22 + }\n   |\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `HandlerTable<N>`\n  --> src/lib.rs:21:5\n   |\n21 | /     pub const fn new() -> Self {\n22 | |         const EMPTY: AtomicUsize = AtomicUsize::new(0);\n23 | |         Self {\n24 | |             handlers: [EMPTY; N],\n25 | |         }\n26 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n18 + impl<const N: usize> Default for HandlerTable<N> {\n19 +     fn default() -> Self {\n20 +         Self::new()\n21 +     }\n22 + }\n   |\n\n"
    },
    {
      "cmd_idx": 64,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> src/lib.rs:55:12\n   |\n55 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 64,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `NoOp`\n   --> src/lib.rs:122:5\n    |\n122 | /     pub const fn new() -> Self {\n123 | |         Self\n124 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n120 + impl Default for NoOp {\n121 +     fn default() -> Self {\n122 +         Self::new()\n123 +     }\n124 + }\n    |\n\n"
    },
    {
      "cmd_idx": 65,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> src/lib.rs:55:12\n   |\n55 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 65,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `NoOp`\n   --> src/lib.rs:122:5\n    |\n122 | /     pub const fn new() -> Self {\n123 | |         Self\n124 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n120 + impl Default for NoOp {\n121 +     fn default() -> Self {\n122 +         Self::new()\n123 +     }\n124 + }\n    |\n\n"
    },
    {
      "cmd_idx": 66,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> src/lib.rs:55:12\n   |\n55 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 66,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `NoOp`\n   --> src/lib.rs:122:5\n    |\n122 | /     pub const fn new() -> Self {\n123 | |         Self\n124 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n120 + impl Default for NoOp {\n121 +     fn default() -> Self {\n122 +         Self::new()\n123 +     }\n124 + }\n    |\n\n"
    },
    {
      "cmd_idx": 67,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> src/lib.rs:55:12\n   |\n55 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 67,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `NoOp`\n   --> src/lib.rs:122:5\n    |\n122 | /     pub const fn new() -> Self {\n123 | |         Self\n124 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n120 + impl Default for NoOp {\n121 +     fn default() -> Self {\n122 +         Self::new()\n123 +     }\n124 + }\n    |\n\n"
    },
    {
      "cmd_idx": 84,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:195:6\n    |\n195 | impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n195 - impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n195 + impl<G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 84,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:195:6\n    |\n195 | impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n195 - impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n195 + impl<G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 84,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:204:6\n    |\n204 | impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n204 - impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n204 + impl<G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 84,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:204:6\n    |\n204 | impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n204 - impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n204 + impl<G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 84,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:212:6\n    |\n212 | impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                                         ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n212 - impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n212 + impl<G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 84,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:212:6\n    |\n212 | impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                                         ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n212 - impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n212 + impl<G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 84,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:218:6\n    |\n218 | impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n218 - impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n218 + impl<G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 84,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:218:6\n    |\n218 | impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n218 - impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n218 + impl<G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 85,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:195:6\n    |\n195 | impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n195 - impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n195 + impl<G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 85,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:195:6\n    |\n195 | impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n195 - impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n195 + impl<G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 85,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:204:6\n    |\n204 | impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n204 - impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n204 + impl<G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 85,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:204:6\n    |\n204 | impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n204 - impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n204 + impl<G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 85,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:212:6\n    |\n212 | impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                                         ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n212 - impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n212 + impl<G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 85,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:212:6\n    |\n212 | impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                                         ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n212 - impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n212 + impl<G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 85,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:218:6\n    |\n218 | impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n218 - impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n218 + impl<G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 85,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:218:6\n    |\n218 | impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n218 - impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n218 + impl<G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 86,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:195:6\n    |\n195 | impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n195 - impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n195 + impl<G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 86,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:195:6\n    |\n195 | impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n195 - impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n195 + impl<G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 86,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:204:6\n    |\n204 | impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n204 - impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n204 + impl<G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 86,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:204:6\n    |\n204 | impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n204 - impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n204 + impl<G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 86,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:212:6\n    |\n212 | impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                                         ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n212 - impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n212 + impl<G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 86,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:212:6\n    |\n212 | impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                                         ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n212 - impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n212 + impl<G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 86,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:218:6\n    |\n218 | impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n218 - impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n218 + impl<G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 86,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:218:6\n    |\n218 | impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n218 - impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n218 + impl<G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 87,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:195:6\n    |\n195 | impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n195 - impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n195 + impl<G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 87,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:195:6\n    |\n195 | impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n195 - impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n195 + impl<G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 87,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:204:6\n    |\n204 | impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n204 - impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n204 + impl<G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 87,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:204:6\n    |\n204 | impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n204 - impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n204 + impl<G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 87,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:212:6\n    |\n212 | impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                                         ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n212 - impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n212 + impl<G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 87,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:212:6\n    |\n212 | impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                                         ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n212 - impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n212 + impl<G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 87,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:218:6\n    |\n218 | impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n218 - impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n218 + impl<G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 87,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:218:6\n    |\n218 | impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n218 - impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n218 + impl<G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 124,
      "file": "src/raw_list.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `RawList<G>`\n   --> src/raw_list.rs:99:5\n    |\n99  | /     pub const fn new() -> Self {\n100 | |         Self { head: None }\n101 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n97  + impl<G: GetLinks> Default for RawList<G> {\n98  +     fn default() -> Self {\n99  +         Self::new()\n100 +     }\n101 + }\n    |\n\n"
    },
    {
      "cmd_idx": 124,
      "file": "src/raw_list.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs are missing a `# Safety` section\n   --> src/raw_list.rs:186:5\n    |\n186 |     pub unsafe fn push_back(&mut self, new: &G::EntryType) -> bool {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 124,
      "file": "src/raw_list.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs are missing a `# Safety` section\n   --> src/raw_list.rs:195:5\n    |\n195 |     pub unsafe fn push_front(&mut self, new: &G::EntryType) -> bool {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 125,
      "file": "src/raw_list.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `RawList<G>`\n   --> src/raw_list.rs:99:5\n    |\n99  | /     pub const fn new() -> Self {\n100 | |         Self { head: None }\n101 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n97  + impl<G: GetLinks> Default for RawList<G> {\n98  +     fn default() -> Self {\n99  +         Self::new()\n100 +     }\n101 + }\n    |\n\n"
    },
    {
      "cmd_idx": 125,
      "file": "src/raw_list.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs are missing a `# Safety` section\n   --> src/raw_list.rs:186:5\n    |\n186 |     pub unsafe fn push_back(&mut self, new: &G::EntryType) -> bool {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 125,
      "file": "src/raw_list.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs are missing a `# Safety` section\n   --> src/raw_list.rs:195:5\n    |\n195 |     pub unsafe fn push_front(&mut self, new: &G::EntryType) -> bool {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 126,
      "file": "src/raw_list.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `RawList<G>`\n   --> src/raw_list.rs:99:5\n    |\n99  | /     pub const fn new() -> Self {\n100 | |         Self { head: None }\n101 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n97  + impl<G: GetLinks> Default for RawList<G> {\n98  +     fn default() -> Self {\n99  +         Self::new()\n100 +     }\n101 + }\n    |\n\n"
    },
    {
      "cmd_idx": 126,
      "file": "src/raw_list.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs are missing a `# Safety` section\n   --> src/raw_list.rs:186:5\n    |\n186 |     pub unsafe fn push_back(&mut self, new: &G::EntryType) -> bool {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 126,
      "file": "src/raw_list.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs are missing a `# Safety` section\n   --> src/raw_list.rs:195:5\n    |\n195 |     pub unsafe fn push_front(&mut self, new: &G::EntryType) -> bool {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 127,
      "file": "src/raw_list.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `RawList<G>`\n   --> src/raw_list.rs:99:5\n    |\n99  | /     pub const fn new() -> Self {\n100 | |         Self { head: None }\n101 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n97  + impl<G: GetLinks> Default for RawList<G> {\n98  +     fn default() -> Self {\n99  +         Self::new()\n100 +     }\n101 + }\n    |\n\n"
    },
    {
      "cmd_idx": 127,
      "file": "src/raw_list.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs are missing a `# Safety` section\n   --> src/raw_list.rs:186:5\n    |\n186 |     pub unsafe fn push_back(&mut self, new: &G::EntryType) -> bool {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 127,
      "file": "src/raw_list.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs are missing a `# Safety` section\n   --> src/raw_list.rs:195:5\n    |\n195 |     pub unsafe fn push_front(&mut self, new: &G::EntryType) -> bool {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 133,
      "file": "[rap] Not supported to display yet.",
      "kind": "Rap",
      "raw": "pkg=linked_list_r4l, checker=Rap\ntoolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_6/arceos-org/linked_list_r4l\ncmd=cargo +nightly-2024-10-12 rap -F -M\n\n11:52:36|RAP|WARN|: RCanary: Leak Function: Unsat DefId(0:24 ~ linked_list_r4l[a2ea]::linked_list::{impl#0}::into_pointer) src/linked_list.rs:35:5: 37:6 (#0)\n11:52:36|RAP|WARN|: RCanary: LeakItem Candidates: _3 = linked_list::alloc::boxed::Box::<T>::into_raw(move _4) -> [return: bb1, unwind: bb4], src/linked_list.rs:36:22: 36:41 (#0)\n"
    },
    {
      "cmd_idx": 144,
      "file": "src/set.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `MemorySet<F, P, B>`\n  --> src/set.rs:15:5\n   |\n15 | /     pub const fn new() -> Self {\n16 | |         Self {\n17 | |             areas: BTreeMap::new(),\n18 | |         }\n19 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n13 + impl<F: Copy, P, B: MappingBackend<F, P>> Default for MemorySet<F, P, B> {\n14 +     fn default() -> Self {\n15 +         Self::new()\n16 +     }\n17 + }\n   |\n\n"
    },
    {
      "cmd_idx": 144,
      "file": "src/set.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: explicit call to `.into_iter()` in function argument accepting `IntoIterator`\n   --> src/set.rs:245:27\n    |\n245 |         self.areas.extend(to_insert.into_iter());\n    |                           ^^^^^^^^^^^^^^^^^^^^^ help: consider removing the `.into_iter()`: `to_insert`\n    |\nnote: this parameter accepts any `IntoIterator`, so you don't need to call `.into_iter()`\n   --> /rustc/1bc403daadbebb553ccc211a0a8eebb73989665f/library/core/src/iter/traits/collect.rs:450:18\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/set.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `MemorySet<F, P, B>`\n  --> src/set.rs:15:5\n   |\n15 | /     pub const fn new() -> Self {\n16 | |         Self {\n17 | |             areas: BTreeMap::new(),\n18 | |         }\n19 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n13 + impl<F: Copy, P, B: MappingBackend<F, P>> Default for MemorySet<F, P, B> {\n14 +     fn default() -> Self {\n15 +         Self::new()\n16 +     }\n17 + }\n   |\n\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/set.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: explicit call to `.into_iter()` in function argument accepting `IntoIterator`\n   --> src/set.rs:245:27\n    |\n245 |         self.areas.extend(to_insert.into_iter());\n    |                           ^^^^^^^^^^^^^^^^^^^^^ help: consider removing the `.into_iter()`: `to_insert`\n    |\nnote: this parameter accepts any `IntoIterator`, so you don't need to call `.into_iter()`\n   --> /rustc/1bc403daadbebb553ccc211a0a8eebb73989665f/library/core/src/iter/traits/collect.rs:450:18\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n"
    },
    {
      "cmd_idx": 146,
      "file": "src/set.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `MemorySet<F, P, B>`\n  --> src/set.rs:15:5\n   |\n15 | /     pub const fn new() -> Self {\n16 | |         Self {\n17 | |             areas: BTreeMap::new(),\n18 | |         }\n19 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n13 + impl<F: Copy, P, B: MappingBackend<F, P>> Default for MemorySet<F, P, B> {\n14 +     fn default() -> Self {\n15 +         Self::new()\n16 +     }\n17 + }\n   |\n\n"
    },
    {
      "cmd_idx": 146,
      "file": "src/set.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: explicit call to `.into_iter()` in function argument accepting `IntoIterator`\n   --> src/set.rs:245:27\n    |\n245 |         self.areas.extend(to_insert.into_iter());\n    |                           ^^^^^^^^^^^^^^^^^^^^^ help: consider removing the `.into_iter()`: `to_insert`\n    |\nnote: this parameter accepts any `IntoIterator`, so you don't need to call `.into_iter()`\n   --> /rustc/1bc403daadbebb553ccc211a0a8eebb73989665f/library/core/src/iter/traits/collect.rs:450:18\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n"
    },
    {
      "cmd_idx": 147,
      "file": "src/set.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `MemorySet<F, P, B>`\n  --> src/set.rs:15:5\n   |\n15 | /     pub const fn new() -> Self {\n16 | |         Self {\n17 | |             areas: BTreeMap::new(),\n18 | |         }\n19 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n13 + impl<F: Copy, P, B: MappingBackend<F, P>> Default for MemorySet<F, P, B> {\n14 +     fn default() -> Self {\n15 +         Self::new()\n16 +     }\n17 + }\n   |\n\n"
    },
    {
      "cmd_idx": 147,
      "file": "src/set.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: explicit call to `.into_iter()` in function argument accepting `IntoIterator`\n   --> src/set.rs:245:27\n    |\n245 |         self.areas.extend(to_insert.into_iter());\n    |                           ^^^^^^^^^^^^^^^^^^^^^ help: consider removing the `.into_iter()`: `to_insert`\n    |\nnote: this parameter accepts any `IntoIterator`, so you don't need to call `.into_iter()`\n   --> /rustc/1bc403daadbebb553ccc211a0a8eebb73989665f/library/core/src/iter/traits/collect.rs:450:18\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n"
    }
  ]
}